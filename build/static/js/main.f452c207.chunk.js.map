{"version":3,"sources":["i18n.js","queries/system/auth.js","tools/cs_local_storage.js","tools/authentication.js","components/settings/general/date_time/queries.js","components/organization/organization/queries.js","components/ui/CSStandalonePageWide.jsx","components/ui/CSStandalonePageLoader.jsx","components/context/AppSettingsContext.js","components/context/OrganizationContext.js","queries/system/get_user.js","tools/user_tools.js","components/HasPermissionWrapper.js","components/home/home/queries.js","components/SiteWrapper.js","components/home/home/HomeHomeBase.jsx","components/home/home/HomeHome.jsx","components/automation/home/AutomationHomeItemButton.jsx","components/automation/home/AutomationHome.jsx","components/general/ContentCard.jsx","components/automation/queries.js","components/ui/ButtonBack.jsx","components/automation/AutomationBack.jsx","components/automation/account/subscription/credits/AutomationAccountSubscriptionCreditsBase.jsx","components/automation/AutomationTaskResultStatus.jsx","components/automation/account/subscription/credits/AutomationAccountSubscriptionCredits.jsx","components/automation/account/subscription/credits/yupSchema.js","components/automation/account/subscription/credits/AutomationAccountSubscriptionCreditForm.jsx","components/automation/account/subscription/credits/AutomationAccountSubscriptionCreditAdd.jsx","components/automation/account/subscription/credits_expiration/AutomationAccountSubscriptionCreditExpirationBase.jsx","components/automation/account/subscription/credits_expiration/AutomationAccountSubscriptionCreditExpiration.jsx","components/automation/account/subscription/credits_expiration/AutomationAccountSubscriptionCreditExpirationAdd.jsx","components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoicesBase.jsx","components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoices.jsx","components/automation/account/subscription/invoices/yupSchema.js","components/ui/CSDatePicker.jsx","components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoicesForm.jsx","components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoicesAdd.jsx","components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollectionBase.jsx","components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollections.jsx","components/automation/account/subscription/mollie_collection/yupSchema.js","components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollectionForm.jsx","components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollectionAdd.jsx","components/finance/FinanceMenu.jsx","components/finance/home/FinanceHome.jsx","components/finance/costcenters/queries.js","components/finance/costcenters/FinanceCostCentersBase.jsx","components/finance/costcenters/FinanceCostCenters.jsx","components/finance/costcenters/yupSchema.js","components/finance/costcenters/FinanceCostCenterAdd.jsx","components/finance/costcenters/FinanceCostCenterEdit.jsx","components/finance/glaccounts/queries.js","components/finance/glaccounts/FinanceGLAccountsBase.jsx","components/finance/glaccounts/FinanceGLAccounts.jsx","components/finance/glaccounts/yupSchema.js","components/finance/glaccounts/FinanceGLAccountAdd.jsx","components/finance/glaccounts/FinanceGLAccountEdit.jsx","components/finance/invoices/tools.js","components/finance/invoices/FinanceInvoicesFilter.jsx","components/finance/invoices/FinanceInvoicesBase.jsx","components/ui/FinanceInvoiceStatus.jsx","components/finance/invoices/queries.js","tools/confirm_delete.js","components/finance/invoices/FinanceInvoices.jsx","tools/refresh_token_and_open_export_link.js","components/finance/invoices/edit/FinanceInvoiceEditBase.jsx","components/finance/invoices/edit/FinanceInvoiceItemAdd.jsx","components/finance/invoices/edit/FinanceInvoiceItemDelete.jsx","components/finance/invoices/edit/FinanceInvoiceItemEditForm.jsx","components/finance/invoices/edit/FinanceInvoiceItemEdit.jsx","components/finance/invoices/edit/FinanceInvoiceEditItems.jsx","plugin_config/tinymce.js","components/finance/invoices/edit/FinanceInvoiceEditTermsForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditFooterForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditNoteForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditAdditional.jsx","components/finance/invoices/edit/FinanceInvoiceEditBalance.jsx","tools/date_tools.js","components/finance/invoices/edit/FinanceInvoiceEditOptionsForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditOptions.jsx","components/finance/invoices/edit/FinanceInvoiceEditOrganization.jsx","components/finance/invoices/edit/FinanceInvoiceEditSummaryForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditSummary.jsx","components/finance/invoices/edit/FinanceInvoiceEditToForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditTo.jsx","components/finance/invoices/edit/FinanceInvoiceEditPaymentDelete.jsx","components/finance/invoices/edit/FinanceInvoiceEditPayments.jsx","components/finance/invoices/edit/FinanceInvoiceEdit.jsx","components/ui/BadgeBoolean.jsx","components/finance/invoices/groups/queries.js","components/finance/invoices/groups/FinanceInvoiceGroupsBase.jsx","components/finance/invoices/groups/FinanceInvoiceGroups.jsx","components/finance/invoices/groups/yupSchema.js","components/finance/invoices/groups/FinanceInvoiceGroupForm.jsx","components/finance/invoices/groups/FinanceInvoiceGroupAdd.jsx","components/finance/invoices/groups/FinanceInvoiceGroupEdit.jsx","components/finance/invoices/groups/defaults/FinanceInvoiceGroupDefaultForm.jsx","components/finance/invoices/groups/defaults/yupSchema.js","components/finance/invoices/groups/defaults/queries.js","components/finance/invoices/groups/defaults/FinanceInvoiceGroupDefaults.jsx","components/finance/invoices/payments/queries.js","components/finance/invoices/payments/yupSchema.js","components/finance/invoices/payments/FinanceInvoicePaymentBase.jsx","components/finance/invoices/payments/FinanceInvoicePaymentForm.jsx","components/finance/invoices/payments/FinanceInvoicePaymentAdd.jsx","components/finance/invoices/payments/FinanceInvoicePaymentEdit.jsx","components/finance/orders/tools.js","components/finance/orders/FinanceOrdersFilter.jsx","components/finance/orders/FinanceOrdersBase.jsx","components/finance/orders/FinanceOrderStatus.jsx","components/finance/orders/queries.js","components/finance/orders/FinanceOrderDelete.jsx","components/finance/orders/FinanceOrders.jsx","components/finance/payment_batches/tools.js","components/ui/BadgeFinancePaymentBatchStatus.jsx","components/finance/payment_batches/FinancePaymentBatchesBase.jsx","components/finance/payment_batches/queries.js","components/finance/payment_batches/FinancePaymentBatches.jsx","components/ui/FinancePaymentBatchCategory.jsx","components/finance/payment_batches/FinancePaymentBatchAddWhat.jsx","components/finance/payment_batches/FinancePaymentBatchViewBase.jsx","components/finance/payment_batches/FinancePaymentCollectionBatchForm.jsx","components/finance/payment_batches/FinancePaymentBatchView.jsx","components/finance/payment_batches/yupSchema.js","components/finance/payment_batches/FinancePaymentCollectionBatchAdd.jsx","components/finance/payment_batches/FinancePaymentCollectionBatchEdit.jsx","components/finance/payment_batch_categories/tools.js","components/finance/payment_batch_categories/FinancePaymentBatchCategoriesBase.jsx","components/finance/payment_batch_categories/queries.js","components/finance/payment_batch_categories/FinancePaymentBatchCategories.jsx","components/finance/payment_batch_categories/yupSchema.js","components/finance/payment_batch_categories/FinancePaymentBatchCategoryForm.jsx","components/finance/payment_batch_categories/FinancePaymentBatchCategoryAdd.jsx","components/finance/payment_batch_categories/FinancePaymentBatchCategoryEdit.jsx","components/finance/orders/edit/queries.js","components/finance/orders/edit/FinanceOrderEditForm.jsx","components/finance/orders/edit/FinanceOrderEditBase.jsx","components/finance/orders/edit/FinanceOrderEdit.jsx","components/finance/payment_methods/FinancePaymentMethodsBase.jsx","components/finance/payment_methods/queries.js","components/finance/payment_methods/FinancePaymentMethods.jsx","components/finance/payment_methods/yupSchema.js","components/finance/payment_methods/FinancePaymentMethodForm.jsx","components/finance/payment_methods/FinancePaymentMethodAdd.jsx","components/finance/payment_methods/FinancePaymentMethodEdit.jsx","components/finance/taxrates/FinanceTaxRatesBase.jsx","components/finance/taxrates/queries.js","components/finance/taxrates/FinanceTaxRates.jsx","components/finance/taxrates/yupSchema.js","components/finance/taxrates/FinanceTaxRateAdd.jsx","components/finance/taxrates/FinanceTaxRateEdit.jsx","components/ui/HomeItemButton.jsx","components/insight/home/InsightHome.jsx","components/insight/classpasses/queries.js","components/insight/InsightBackHome.jsx","components/insight/classpasses/InsightClasspassesBase.jsx","components/insight/classpasses/InsightClasspasses.jsx","components/insight/revenue/queries.js","components/insight/revenue/InsightRevenueBase.jsx","components/insight/revenue/InsightRevenue.jsx","components/insight/subscriptions/queries.js","components/insight/subscriptions/InsightSubscriptionsBase.jsx","components/insight/subscriptions/InsightSubscriptions.jsx","components/organization/OrganizationMenu.jsx","components/organization/home/OrganizationHome.jsx","components/organization/organization/yupSchema.js","tools/custom_file_input_label_style.js","components/organization/organization/OrganizationForm.jsx","components/organization/organization/OrganizationEditBase.jsx","components/organization/organization/OrganizationEdit.jsx","components/organization/organization/branding/OrganizationBrandingBase.jsx","components/organization/organization/branding/OrganizationBranding.jsx","components/organization/organization/branding/OrganizationBrandingEditForm.jsx","components/organization/organization/branding/OrganizationBrandingEdit.jsx","components/organization/announcements/OrganizationAnnouncementsBase.jsx","components/organization/announcements/queries.js","components/organization/announcements/OrganizationAnnouncements.jsx","components/organization/announcements/yupSchema.js","components/organization/announcements/OrganizationAnnouncementForm.jsx","components/organization/announcements/OrganizationAnnouncementAdd.jsx","components/organization/announcements/OrganizationAnnouncementEdit.jsx","components/organization/appointment_categories/appointments/queries.js","components/organization/appointment_categories/appointments/OrganizationAppointments.jsx","components/organization/appointment_categories/appointments/yupSchema.js","components/organization/appointment_categories/appointments/OrganizationAppointmentForm.jsx","components/organization/appointment_categories/appointments/OrganizationAppointmentAdd.jsx","components/organization/appointment_categories/appointments/OrganizationAppointmentEdit.jsx","components/organization/appointment_categories/queries.js","components/organization/appointment_categories/OrganizationAppointmentCategories.jsx","components/organization/appointment_categories/yupSchema.js","components/organization/appointment_categories/OrganizationAppointmentCategoryForm.jsx","components/organization/appointment_categories/OrganizationAppointmentCategoryAdd.jsx","components/organization/appointment_categories/OrganizationAppointmentCategoryEdit.jsx","components/organization/appointment_categories/appointments/prices/queries.js","components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPrices.jsx","components/organization/appointment_categories/appointments/prices/yupSchema.js","components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPriceForm.jsx","components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPriceAdd.jsx","components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPriceEdit.jsx","components/organization/classpasses/OrganizationClasspassesBase.jsx","components/organization/classpasses/queries.js","components/organization/classpasses/OrganizationClasspasses.jsx","components/organization/classpasses/yupSchema.js","components/organization/classpasses/OrganizationClasspassForm.jsx","components/organization/classpasses/OrganizationClasspassAdd.jsx","components/organization/classpasses/OrganizationClasspassEdit.jsx","components/organization/classpasses_groups/OrganizationClasspassesGroupsBase.jsx","components/organization/classpasses_groups/queries.js","components/organization/classpasses_groups/OrganizationClasspassesGroups.jsx","components/organization/classpasses_groups/yupSchema.js","components/organization/classpasses_groups/OrganizationClasspassesGroupAdd.jsx","components/organization/classpasses_groups/OrganizationClasspassesGroupEdit.jsx","components/organization/classpasses_groups/OrganizationClasspassesGroupEditPasses.jsx","components/organization/classtypes/tools.js","components/organization/classtypes/queries.js","components/organization/classtypes/OrganizationClasstypesBase.jsx","components/organization/classtypes/OrganizationClasstypes.jsx","components/organization/classtypes/yupSchema.js","components/organization/classtypes/OrganizationClasstypeAdd.jsx","components/organization/classtypes/OrganizationClasstypeEdit.jsx","components/organization/classtypes/OrganizationClasstypeEditImage.jsx","components/organization/discovery/queries.js","components/organization/discovery/OrganizationDiscoveriesBase.jsx","components/organization/discovery/OrganizationDiscoveries.jsx","components/organization/discovery/yupSchema.js","components/organization/discovery/OrganizationDiscoveryAdd.jsx","components/organization/discovery/OrganizationDiscoveryEdit.jsx","components/organization/documents/OrganizationDocuments.jsx","components/ui/ISODateString.jsx","components/ui/FileDownloadTableButton.jsx","components/organization/documents/OrganizationDocumentsBase.jsx","components/organization/documents/queries.js","components/organization/documents/OrganizationDocumentDelete.jsx","components/organization/documents/tools.js","components/organization/documents/OrganizationListDocuments.jsx","components/organization/documents/OrganizationDocumentAdd.jsx","components/organization/documents/yupSchema.js","components/organization/documents/OrganizationDocumentEdit.jsx","components/organization/holidays/OrganizationHolidaysBase.jsx","components/organization/holidays/queries.js","components/organization/holidays/OrganizationHolidays.jsx","components/organization/holidays/yupSchema.js","components/organization/holidays/OrganizationHolidayForm.jsx","components/organization/holidays/OrganizationHolidayAdd.jsx","components/organization/holidays/OrganizationHolidayEdit.jsx","components/organization/holidays/OrganizationHolidayEditLocations.jsx","components/organization/languages/OrganizationLanguagesBase.jsx","components/organization/languages/queries.js","components/organization/languages/OrganizationLanguages.jsx","components/organization/languages/yupSchema.js","components/organization/languages/OrganizationLanguageForm.jsx","components/organization/languages/OrganizationLanguageAdd.jsx","components/organization/languages/OrganizationLanguageEdit.jsx","components/organization/locations/queries.js","components/organization/locations/OrganizationLocationsBase.jsx","components/organization/locations/OrganizationLocations.jsx","components/organization/locations/yupSchema.js","components/organization/locations/OrganizationLocationAdd.jsx","components/organization/locations/OrganizationLocationEdit.jsx","components/organization/locations/rooms/queries.js","components/organization/locations/rooms/OrganizationLocationRoomsBase.jsx","components/organization/locations/rooms/OrganizationLocationRooms.jsx","components/organization/locations/rooms/yupSchema.js","components/organization/locations/rooms/OrganizationLocationRoomForm.jsx","components/organization/locations/rooms/OrganizationLocationRoomAdd.jsx","components/organization/locations/rooms/OrganizationLocationRoomEdit.jsx","components/organization/levels/OrganizationLevelsBase.jsx","components/organization/levels/queries.js","components/organization/levels/OrganizationLevels.jsx","components/organization/levels/yupSchema.js","components/organization/levels/OrganizationLevelForm.jsx","components/organization/levels/OrganizationLevelAdd.jsx","components/organization/levels/OrganizationLevelEdit.jsx","components/ui/Validity.jsx","components/organization/memberships/queries.js","components/organization/memberships/OrganizationMemberships.jsx","components/organization/memberships/yupSchema.js","components/organization/memberships/OrganizationMembershipAdd.jsx","components/organization/memberships/OrganizationMembershipEdit.jsx","components/organization/subscriptions/OrganizationSubscriptionsBase.jsx","components/organization/subscriptions/queries.js","components/organization/subscriptions/OrganizationSubscriptions.jsx","components/organization/subscriptions/yupSchema.js","components/organization/subscriptions/OrganizationSubscriptionForm.jsx","components/organization/subscriptions/OrganizationSubscriptionAdd.jsx","components/organization/subscriptions/OrganizationSubscriptionEdit.jsx","components/organization/subscriptions_groups/OrganizationSubscriptionsGroupsBase.jsx","components/organization/subscriptions_groups/queries.js","components/organization/subscriptions_groups/OrganizationSubscriptionsGroups.jsx","components/organization/subscriptions_groups/yupSchema.js","components/organization/subscriptions_groups/OrganizationSubscriptionsGroupForm.jsx","components/organization/subscriptions_groups/OrganizationSubscriptionsGroupAdd.jsx","components/organization/subscriptions_groups/OrganizationSubscriptionsGroupEdit.jsx","components/organization/subscriptions_groups/OrganizationSubscriptionsGroupEditSubscriptions.jsx","components/ui/AlertInfo.jsx","components/organization/subscriptions/prices/queries.js","components/organization/subscriptions/prices/OrganizationSubscriptionsPrices.jsx","components/relations/RelationsMenu.jsx","components/organization/subscriptions/prices/yupSchema.js","components/organization/subscriptions/prices/OrganizationSubscriptionPriceForm.jsx","components/organization/subscriptions/prices/OrganizationSubscriptionPriceAdd.jsx","components/organization/subscriptions/prices/OrganizationSubscriptionPriceEdit.jsx","components/relations/home/RelationsHome.jsx","components/general/InputSearch.jsx","components/relations/accounts/tools.js","components/relations/accounts/RelationsAccountsBase.jsx","components/relations/accounts/queries.js","components/relations/accounts/RelationsAccounts.jsx","components/relations/accounts/yupSchema.js","components/relations/accounts/RelationsAccountForm.jsx","components/relations/accounts/RelationsAccountAdd.jsx","components/ui/ProfileCardSmall.jsx","components/relations/accounts/ProfileMenu.jsx","components/relations/accounts/RelationsAccountsBack.jsx","tools/iso_country_codes.js","components/relations/accounts/RelationsAccountProfileForm.jsx","components/relations/accounts/RelationsAccountProfileBase.jsx","components/relations/accounts/RelationsAccountProfile.jsx","components/relations/accounts/RelationsAccountProfileImageForm.jsx","components/relations/accounts/RelationsAccountProfileImage.jsx","components/ui/DocumentType.jsx","components/relations/accounts/accepted_documents/queries.js","components/relations/accounts/accepted_documents/AcceptedDocuments.jsx","components/relations/accounts/bank_accounts/queries.js","components/relations/accounts/bank_accounts/mandates/queries.js","components/relations/accounts/bank_accounts/RelationsAccountBankAccountBase.jsx","components/relations/accounts/bank_accounts/RelationsAccountBankAccountForm.jsx","components/relations/accounts/bank_accounts/RelationsAccountBankAccount.jsx","components/relations/accounts/bank_accounts/mandates/RelationsAccountBankAccountMandateForm.jsx","components/relations/accounts/bank_accounts/mandates/RelationsAccountBankAccountMandateAdd.jsx","components/relations/accounts/bank_accounts/mandates/RelationsAccountBankAccountMandateEdit.jsx","components/ui/BadgeBookingStatus.jsx","components/relations/accounts/classes/AccountClassesBase.jsx","components/relations/accounts/classes/queries.js","components/schedule/classes/class/attendance/queries.js","components/relations/accounts/classes/AccountClassDelete.jsx","components/relations/accounts/classes/AccountClasses.jsx","components/relations/accounts/classpasses/queries.js","components/relations/accounts/classpasses/AccountClasspasses.jsx","components/relations/accounts/classpasses/yupSchema.js","components/relations/accounts/classpasses/AccountClasspassForm.jsx","components/relations/accounts/classpasses/AccountClasspassAdd.jsx","components/relations/accounts/classpasses/AccountClasspassEdit.jsx","components/relations/accounts/documents/queries.js","components/ui/FileProtectedDownloadTableButton.jsx","components/relations/accounts/documents/AccountDocuments.jsx","components/relations/accounts/documents/AccountDocumentForm.jsx","components/relations/accounts/documents/AccountDocumentAdd.jsx","components/relations/accounts/documents/yupSchema.js","components/relations/accounts/documents/AccountDocumentFormEdit.jsx","components/relations/accounts/documents/AccountDocumentEdit.jsx","components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemsBase.jsx","components/relations/accounts/finance_payment_batch_category_items/queries.js","components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItems.jsx","components/relations/accounts/finance_payment_batch_category_items/yupSchema.js","components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemsForm.jsx","components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemAdd.jsx","components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemEdit.jsx","components/relations/accounts/invoices/queries.js","components/relations/accounts/invoices/AccountInvoicesBase.jsx","components/relations/accounts/invoices/AccountInvoices.jsx","components/relations/accounts/invoices/AccountInvoiceAddForm.jsx","components/relations/accounts/invoices/yupSchema.js","components/relations/accounts/invoices/AccountInvoiceAdd.jsx","components/relations/accounts/memberships/queries.js","components/relations/accounts/memberships/AccountMemberships.jsx","components/relations/accounts/memberships/yupSchema.js","components/relations/accounts/memberships/AccountMembershipForm.jsx","components/relations/accounts/memberships/AccountMembershipAdd.jsx","components/relations/accounts/memberships/AccountMembershipEdit.jsx","components/general/LoadMoreOnBottomScroll.jsx","components/relations/accounts/notes/AccountNotesBase.jsx","components/relations/accounts/notes/queries.js","components/relations/accounts/notes/tools.js","components/relations/accounts/notes/AccountNotes.jsx","components/relations/accounts/notes/AccountNoteForm.jsx","components/relations/accounts/notes/AccountNoteAdd.jsx","components/relations/accounts/notes/AccountNoteEdit.jsx","components/relations/accounts/orders/AccountOrdersBase.jsx","components/relations/accounts/orders/queries.js","components/relations/accounts/orders/AccountOrderDelete.jsx","components/relations/accounts/orders/AccountOrders.jsx","components/relations/accounts/schedule_event_tickets/queries.js","queries/accounts/get_account.js","components/relations/accounts/schedule_event_tickets/AccountScheduleEventTicketsBase.jsx","components/schedule/events/tickets/customers/queries.js","components/relations/accounts/schedule_event_tickets/AccountScheduleEventTickets.jsx","components/relations/accounts/subscriptions/queries.js","components/relations/accounts/subscriptions/AccountSubscriptions.jsx","components/relations/accounts/subscriptions/yupSchema.js","components/relations/accounts/subscriptions/AccountSubscriptionForm.jsx","components/relations/accounts/subscriptions/AccountSubscriptionAdd.jsx","components/ui/CardTabs.jsx","components/relations/accounts/subscriptions/edit/AccountSubscriptionEditTabs.jsx","components/relations/accounts/subscriptions/edit/AccountSubscriptionEditBaseBase.jsx","components/relations/accounts/subscriptions/edit/AccountSubscriptionEditBase.jsx","components/relations/accounts/subscriptions/edit/AccountSubscriptionEdit.jsx","components/ui/ButtonAddSecondaryMenu.jsx","components/relations/accounts/subscriptions/edit/alt_prices/queries.js","components/relations/accounts/subscriptions/edit/AccountSubscriptionEditListBaseBase.jsx","components/relations/accounts/subscriptions/edit/AccountSubscriptionEditListBase.jsx","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceDelete.jsx","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPrices.jsx","components/relations/accounts/subscriptions/edit/alt_prices/yupSchema.js","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceBase.jsx","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceForm.jsx","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceAdd.jsx","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceEdit.jsx","components/relations/accounts/subscriptions/edit/blocks/queries.js","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockDelete.jsx","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlocks.jsx","components/relations/accounts/subscriptions/edit/blocks/yupSchema.js","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockBase.jsx","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockForm.jsx","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockAdd.jsx","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockEdit.jsx","components/ui/SubscriptionCreditsMutationType.jsx","components/relations/accounts/subscriptions/edit/credits/queries.js","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditDelete.jsx","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCredits.jsx","components/relations/accounts/subscriptions/edit/credits/yupSchema.js","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditBase.jsx","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditForm.jsx","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditAdd.jsx","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditEdit.jsx","components/relations/accounts/subscriptions/edit/invoices/queries.js","components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoiceDelete.jsx","components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoices.jsx","components/relations/accounts/subscriptions/edit/invoices/yupSchema.js","components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoiceAddBase.jsx","components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoiceAddForm.jsx","components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoiceAdd.jsx","components/relations/accounts/subscriptions/edit/pauses/queries.js","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseDelete.jsx","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauses.jsx","components/relations/accounts/subscriptions/edit/pauses/yupSchema.js","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseBase.jsx","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseForm.jsx","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseAdd.jsx","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseEdit.jsx","components/relations/accounts/teacher_profile/queries.js","components/relations/accounts/teacher_profile/yupSchema.js","components/relations/accounts/teacher_profile/RelationsAccountTeacherProfileForm.jsx","components/relations/accounts/teacher_profile/RelationsAccountTeacherProfile.jsx","components/relations/b2b/tools.js","components/relations/b2b/RelationsB2BBase.jsx","components/relations/b2b/queries.js","tools/confirm_archive.js","tools/confirm_unarchive.js","components/relations/b2b/RelationsB2B.jsx","components/relations/b2b/RelationB2BAddForm.jsx","components/relations/b2b/RelationsB2BAdd.jsx","components/relations/b2b/RelationsB2BEditBase.jsx","components/relations/b2b/RelationsB2BEditForm.jsx","components/relations/b2b/RelationsB2BEdit.jsx","components/schedule/ScheduleMenu.jsx","components/schedule/home/ScheduleHome.jsx","components/schedule/appointments/tools.js","components/schedule/appointments/ScheduleAppointmentsFilter.jsx","components/schedule/appointments/queries.js","components/schedule/appointments/ScheduleAppointments.jsx","components/schedule/appointments/all/AppointmentEditMenu.jsx","components/schedule/appointments/yupSchema.js","components/ui/CSTimePicker.jsx","components/schedule/appointments/ScheduleAppointmentForm.jsx","components/schedule/appointments/ScheduleAppointmentAdd.jsx","components/schedule/appointments/all/AppointmentEditBack.jsx","components/schedule/appointments/all/AppointmentEditBase.jsx","components/schedule/appointments/all/tools.js","components/schedule/appointments/all/edit/ScheduleAppointmentEditAll.jsx","components/ui/StatusIcon.jsx","components/schedule/classes/tools.js","components/schedule/classes/ScheduleClassesFilter.jsx","components/schedule/classes/ScheduleClassesBase.jsx","components/schedule/classes/queries.js","components/schedule/classes/ScheduleClasses.jsx","components/schedule/classes/yupSchema.js","components/schedule/classes/ScheduleClassForm.jsx","components/schedule/classes/ScheduleClassAddBase.jsx","components/schedule/classes/ScheduleClassAdd.jsx","components/schedule/classes/all/ClassEditMenu.jsx","components/schedule/classes/all/edit/queries.js","components/schedule/classes/all/ClassEditBack.jsx","components/schedule/classes/all/ClassEditBaseBase.jsx","components/schedule/classes/all/tools.js","components/schedule/classes/all/ClassEditBase.jsx","components/schedule/classes/all/edit/ScheduleClassEditAll.jsx","components/ui/FormHelp.jsx","components/schedule/classes/all/classpasses/ScheduleClassClasspassForm.jsx","components/schedule/classes/all/classpasses/yupSchema.js","components/schedule/classes/all/classpasses/queries.js","components/schedule/classes/all/classpasses/ScheduleClassClasspasses.jsx","components/schedule/classes/all/subscriptions/ScheduleClassSubscriptionForm.jsx","components/schedule/classes/all/subscriptions/yupSchema.js","components/schedule/classes/all/subscriptions/queries.js","components/schedule/classes/all/subscriptions/ScheduleClassSubscriptions.jsx","components/schedule/classes/all/teachers/queries.js","components/schedule/classes/all/teachers/ScheduleClassTeachers.jsx","components/schedule/classes/all/teachers/yupSchema.js","components/schedule/classes/all/teachers/ScheduleClassTeacherForm.jsx","components/schedule/classes/all/teachers/ScheduleClassTeacherBack.jsx","components/schedule/classes/all/teachers/ScheduleClassTeacherAdd.jsx","components/schedule/classes/all/teachers/ScheduleClassTeacherEdit.jsx","components/schedule/classes/class/attendance/tools.js","components/schedule/classes/class/tools.js","components/schedule/classes/class/ScheduleClassBack.jsx","components/schedule/classes/class/ClassMenu.jsx","components/schedule/classes/class/attendance/ScheduleClassAttendanceDelete.jsx","queries/accounts/account_search_queries.js","components/schedule/classes/class/attendance/ScheduleClassAttendance.jsx","components/schedule/classes/class/ScheduleClassEditBase.jsx","components/schedule/classes/class/attendance_chart/queries.js","components/schedule/classes/class/attendance_chart/ScheduleClassAttendanceChart.jsx","components/schedule/classes/class/book/ScheduleClassBookBack.jsx","components/schedule/classes/class/book/queries.js","components/schedule/classes/class/book/tools.js","components/schedule/classes/class/book/ScheduleClassBookClasspassBtn.jsx","components/schedule/classes/class/book/ScheduleClassBookClasspasses.jsx","components/schedule/classes/class/book/ScheduleClassBookSubscriptionBtn.jsx","components/schedule/classes/class/book/ScheduleClassBookSubscriptions.jsx","components/schedule/classes/class/book/ScheduleClassBookPriceBtn.jsx","components/schedule/classes/class/book/ScheduleClassBookPriceDropin.jsx","components/schedule/classes/class/book/ScheduleClassBookPriceTrial.jsx","components/schedule/classes/class/book/ScheduleClassBook.jsx","components/schedule/classes/class/edit/queries.js","components/schedule/classes/class/edit/yupSchema.js","components/schedule/classes/class/edit/ScheduleClassEditForm.jsx","components/schedule/classes/class/edit/ScheduleClassWeeklyOTCDelete.jsx","components/schedule/classes/class/edit/ScheduleClassEdit.jsx","components/schedule/classes/all/prices/ButtonAdd.jsx","components/schedule/classes/all/prices/queries.js","components/schedule/classes/all/prices/ScheduleClassPriceDelete.jsx","components/schedule/classes/all/prices/ScheduleClassPrices.jsx","components/schedule/classes/all/prices/ScheduleClassPriceForm.jsx","components/schedule/classes/all/prices/yupSchema.js","components/schedule/classes/all/prices/ScheduleClassPriceBack.jsx","components/schedule/classes/all/prices/ScheduleClassPriceAdd.jsx","components/schedule/classes/all/prices/ScheduleClassPriceEdit.jsx","components/schedule/events/ScheduleEventsBase.jsx","components/schedule/events/queries.js","components/schedule/events/tools.js","components/schedule/events/ScheduleEventArchive.jsx","components/schedule/events/ScheduleEvents.jsx","components/schedule/events/yupSchema.js","components/schedule/events/ScheduleEventForm.jsx","components/schedule/events/ScheduleEventAdd.jsx","components/schedule/events/edit/ScheduleEventEditMenu.jsx","components/schedule/events/edit/ScheduleEventEditBack.jsx","components/schedule/events/edit/ScheduleEventEditBaseBase.jsx","components/schedule/events/edit/ScheduleEventEditBase.jsx","components/schedule/events/edit/ScheduleEventEdit.jsx","components/schedule/events/activities/queries.js","components/schedule/events/edit/ScheduleEventEditListBase.jsx","components/schedule/events/activities/ScheduleEventActivityDelete.jsx","components/schedule/events/activities/ScheduleEventActivities.jsx","components/schedule/events/activities/yupSchema.js","components/schedule/events/activities/ScheduleEventActivityBack.jsx","components/schedule/events/activities/ScheduleEventActivityForm.jsx","components/schedule/events/activities/ScheduleEventActivityAdd.jsx","components/schedule/events/activities/ScheduleEventActivityTabs.jsx","components/schedule/events/activities/ScheduleEventActivityEditBase.jsx","components/schedule/events/activities/ScheduleEventActivityEdit.jsx","components/schedule/events/activities/attendance/queries.js","components/schedule/events/activities/attendance/ScheduleEventActivityAttendanceBase.jsx","components/schedule/events/activities/attendance/ScheduleEventActivityAttendance.jsx","components/schedule/events/earlybirds/queries.js","components/schedule/events/earlybirds/ScheduleEventEarlybirdDelete.jsx","components/schedule/events/earlybirds/ScheduleEventEarlybirds.jsx","components/schedule/events/earlybirds/yupSchema.js","components/schedule/events/earlybirds/ScheduleEventEarlybirdsBack.jsx","components/schedule/events/earlybirds/ScheduleEventEarlybirdForm.jsx","components/schedule/events/earlybirds/ScheduleEventEarlybirdAdd.jsx","components/schedule/events/earlybirds/ScheduleEventEarlybirdEdit.jsx","components/schedule/events/media/queries.js","components/schedule/events/media/ScheduleEventMediaDelete.jsx","components/schedule/events/media/ScheduleEventMedia.jsx","components/schedule/events/media/yupSchema.js","components/schedule/events/media/ScheduleEventMediaBack.jsx","components/schedule/events/media/ScheduleEventMediaForm.jsx","components/schedule/events/media/ScheduleEventMediaAdd.jsx","components/schedule/events/media/ScheduleEventMediaEditBase.jsx","components/schedule/events/media/ScheduleEventMediaEdit.jsx","components/schedule/events/tickets/queries.js","components/schedule/events/tickets/ScheduleEventTicketListBase.jsx","components/schedule/events/tickets/ScheduleEventTicketDelete.jsx","components/ui/BadgeSoldOut.jsx","components/schedule/events/tickets/ScheduleEventTickets.jsx","components/schedule/events/tickets/yupSchema.js","components/schedule/events/tickets/ScheduleEventTicketBack.jsx","components/schedule/events/tickets/ScheduleEventTicketForm.jsx","components/schedule/events/tickets/ScheduleEventTicketAdd.jsx","components/schedule/events/tickets/ScheduleEventTicketTabs.jsx","components/schedule/events/tickets/ScheduleEventTicketEditBase.jsx","components/schedule/events/tickets/ScheduleEventTicketEdit.jsx","components/schedule/events/tickets/activities/queries.js","components/schedule/events/tickets/activities/yupSchema.js","components/schedule/events/tickets/activities/ScheduleEventTicketEditActivityForm.jsx","components/schedule/events/tickets/activities/ScheduleEventTicketEditActivities.jsx","components/schedule/events/tickets/customers/tools.js","components/schedule/events/tickets/customers/ScheduleEventTicketEditCustomers.jsx","components/SiteWrapperSelfCheckin.js","components/selfcheckin/SelfCheckinBase.jsx","components/selfcheckin/Checkin/queries.js","components/selfcheckin/Checkin/tools.js","components/selfcheckin/Checkin/Checkin.jsx","components/selfcheckin/BookingOptions/queries.js","components/selfcheckin/BookingOptions/BookingOptions.jsx","components/selfcheckin/Locations/queries.js","components/selfcheckin/Locations/Locations.jsx","components/selfcheckin/LocationClasses/queries.js","components/selfcheckin/LocationClasses/LocationClasses.jsx","components/settings/queries.js","components/settings/SettingsBack.jsx","components/settings/SettingsBase.jsx","components/settings/about/SettingsAbout.jsx","components/settings/finance/bank_accounts/SettingsFinanceBankAccountsForm.jsx","components/settings/finance/bank_accounts/SettingsFinanceBankAccounts.jsx","components/settings/finance/currency/SettingsFinanceCurrencyForm.jsx","components/settings/finance/currency/SettingsFinanceCurrency.jsx","components/settings/general/date_time/yupSchema.js","components/settings/general/date_time/SettingsGeneralDateTimeForm.jsx","components/settings/general/date_time/SettingsGeneralDateTime.jsx","components/settings/general/system/SettingsGeneralSystemForm.jsx","components/settings/general/system/SettingsGeneralSystem.jsx","components/settings/home/SettingsHome.jsx","components/settings/integration/mollie/SettingsIntegrationMollieForm.jsx","components/settings/integration/mollie/SettingsIntegrationMollieCreateAccount.jsx","components/settings/integration/mollie/SettingsIntegrationMollie.jsx","components/settings/mail/SettingsMailTemplatesBase.jsx","components/settings/mail/queries.js","components/settings/mail/SettingsMailTemplates.jsx","components/settings/mail/SettingsMailTemplateEditBase.jsx","components/settings/mail/SettingsMailTemplateEditForm.jsx","components/settings/mail/SettingsMailTemplateEdit.jsx","components/settings/mail/tools.js","components/settings/shop/features/queries.js","components/settings/shop/features/yupSchema.js","components/settings/shop/features/SettingsShopFeaturesForm.jsx","components/settings/shop/features/SettingsShopFeatures.jsx","components/settings/workflow/class_booking/SettingsWorkflowClassBookingForm.jsx","components/settings/workflow/class_booking/SettingsWorkflowClassBooking.jsx","components/settings/workflow/shop/SettingsWorkflowShopForm.jsx","components/settings/workflow/shop/SettingsWorkflowShop.jsx","components/settings/workflow/subscription_pauses/SettingsWorkflowSubscriptionPausesForm.jsx","components/settings/workflow/subscription_pauses/SettingsWorkflowSubscriptionPauses.jsx","components/settings/workflow/trial/SettingsWorkflowTrialForm.jsx","components/settings/workflow/trial/SettingsWorkflowTrial.jsx","queries/system/get_user_profile.js","components/SiteWrapperShop.js","components/shop/account/home/ShopAccountHomeBase.jsx","components/shop/account/home/ShopAccountHomeButton.jsx","components/shop/account/home/ShopAccountHome.jsx","components/shop/account/bank_account/queries.js","components/shop/account/ShopAccountBack.jsx","components/shop/account/ShopAccountProfileBase.jsx","components/shop/account/bank_account/ShopAccountBankAccountForm.jsx","components/shop/account/bank_account/yupSchema.js","components/shop/account/bank_account/ShopAccountBankAccount.jsx","components/shop/tools.js","components/shop/account/class_cancel/queries.js","components/shop/account/class_cancel/ShopAccountClassCancelBase.jsx","components/shop/account/class_cancel/ShopAccountClassCancel.jsx","components/shop/checkout/class_info/queries.js","components/shop/checkout/class_info/ShopCheckoutClassInfo.jsx","components/shop/account/class_info/ShopAccountClassInfoBase.jsx","components/shop/account/class_info/ShopAccountClassInfo.jsx","components/shop/account/classpasses/queries.js","components/shop/account/classpasses/ShopAccountClasspassesBase.jsx","components/shop/account/classpasses/ShopAccountClasspasses.jsx","components/shop/account/event_tickets/ShopAccountEventTickets.jsx","components/shop/account/invoice_payment/queries.js","components/shop/account/invoice_payment/ShopAccountInvoicePaymentBase.jsx","components/shop/account/invoice_payment/ShopAccountInvoicePayment.jsx","components/shop/account/invoice_payment_status/ShopAccountInvoicePaymentStatusBase.jsx","components/shop/account/invoice_payment_status/ShopAccountInvoicePaymentStatus.jsx","components/shop/account/invoices/queries.js","components/shop/account/invoices/ShopAccountInvoicesBase.jsx","components/shop/account/invoices/ShopAccountInvoices.jsx","components/shop/account/orders/queries.js","components/shop/account/orders/ShopAccountOrdersBase.jsx","components/shop/account/orders/tools.js","components/shop/account/orders/ShopAccountOrders.jsx","components/shop/account/orders/ShopAccountOrderCancel.jsx","components/shop/account/profile/queries.js","components/shop/account/profile/ShopAccountProfileBtnDownloadData.jsx","components/shop/account/profile/ShopAccountProfileBase.jsx","components/shop/account/profile/ShopAccountProfileForm.jsx","components/shop/account/profile/yupSchema.js","components/shop/account/profile/ShopAccountProfile.jsx","components/shop/account/subscriptions/queries.js","components/shop/account/subscriptions/ShopAccountSubscriptionsBase.jsx","components/shop/account/subscriptions/ShopAccountSubscriptions.jsx","components/shop/classes/book/ShopClassBookBack.jsx","components/shop/ShopCheckoutProgress.jsx","components/shop/ShopBase.jsx","components/shop/classes/book/ShopClassBookBase.jsx","components/shop/classes/book/ShopClassBookClasspassBtn.jsx","components/shop/classes/book/ShopClassBookClasspasses.jsx","components/shop/classes/book/ShopClassBookSubscriptionBtn.jsx","components/shop/classes/book/ShopClassBookSubscriptions.jsx","components/shop/classes/book/ShopClassBookPriceBtn.jsx","components/shop/classes/book/ShopClassBookPriceDropin.jsx","components/shop/classes/book/ShopClassBookPriceTrial.jsx","components/shop/classes/book/queries.js","components/shop/classes/book/ShopClassBook.jsx","components/shop/classes/booked/ShopClassBookedBase.jsx","components/shop/queries.js","components/shop/classes/booked/ShopClassBooked.jsx","components/shop/classes/schedule/ShopClassesScheduleBase.jsx","components/shop/classes/schedule/tools.js","components/shop/classes/schedule/ShopClassesScheduleFilter.jsx","components/shop/classes/schedule/ShopClassesScheduleButtonBook.jsx","components/shop/classes/schedule/ShopClassesSchedule.jsx","components/shop/contact/ShopContactBase.jsx","components/shop/contact/ShopContact.jsx","components/shop/events/ShopEventsBase.jsx","components/shop/events/queries.js","components/shop/events/ShopEvents.jsx","components/shop/event/ShopEventBase.jsx","components/shop/event/ShopEventTicketPricingCard.jsx","components/shop/event/queries.js","components/shop/event/ShopEvent.jsx","components/shop/event_ticket/ShopEventTicketBase.jsx","tools/cs_django_links.js","components/shop/ShopCheckoutForm.jsx","components/shop/event_ticket/queries.js","components/shop/event_ticket/ShopEventTicket.jsx","components/shop/home/queries.js","components/shop/home/ShopHomeBase.jsx","components/shop/home/ShopHome.jsx","components/shop/checkout/payment/ShopCheckoutPaymentBase.jsx","components/shop/checkout/queries.js","components/shop/checkout/order_summary/ShopCheckoutOrderSummary.jsx","components/shop/checkout/payment/queries.js","components/shop/checkout/payment/ShopCheckoutPayment.jsx","components/shop/checkout/complete/ShopCheckoutCompleteBase.jsx","components/shop/checkout/complete/ShopCheckoutComplete.jsx","components/shop/account/classes/queries.js","components/shop/account/classes/ShopAccountClassesBase.jsx","components/shop/account/classes/ShopAccountClasses.jsx","components/shop/classpasses/ShopClasspassesBase.jsx","components/shop/classpass/ShopClasspassBase.jsx","components/shop/classpass/queries.js","components/shop/classpass/ShopClasspassPricingCard.jsx","components/shop/classpasses/queries.js","components/shop/classpasses/ShopClasspasses.jsx","components/shop/classpass/ShopClasspass.jsx","components/shop/subscriptions/ShopSubscriptionsBase.jsx","components/shop/subscription/ShopSubscriptionPricingCard.jsx","components/shop/subscriptions/queries.js","components/shop/subscriptions/ShopSubscriptions.jsx","components/shop/subscription/CheckoutCardMollie.jsx","components/shop/subscription/CheckoutCardBankAccountRequired.jsx","components/shop/subscription/CheckoutCardDirectDebitForm.jsx","components/shop/subscription/yupSchemaDirectDebit.js","components/shop/subscription/CheckoutCardDirectDebit.jsx","components/shop/subscription/ShopSubscriptionBase.jsx","components/shop/subscription/queries.js","components/shop/subscription/ShopSubscription.jsx","components/shop/subscription_directdebit_activated/ShopSubscriptionDirectDebitActivatedBase.jsx","components/shop/subscription_directdebit_activated/queries.js","components/shop/subscription_directdebit_activated/ShopSubscriptionDirectDebitActivated.jsx","components/user/password/yupSchema.js","components/user/password/UserPasswordChangeForm.jsx","components/ui/CSStandaloneFormPage.jsx","components/user/password/UserPasswordChange.jsx","components/user/login/UserLoginForm.jsx","components/user/login/UserLogin.jsx","components/user/login/UserLoginRequired.jsx","components/user/login/UserLogout.jsx","components/user/session/UserSessionExpired.jsx","components/user/welcome/UserWelcome.jsx","components/Error404.js","AppRoot.js","App.js","serviceWorker.js","index.js"],"names":["resources","en_US","common","console","log","i18n","use","LanguageDetector","initReactI18next","init","lng","fallbackLng","ns","defaultNS","debug","keySeparator","interpolation","escapeValue","TOKEN_AUTH","gql","TOKEN_REFRESH","TOKEN_COOKIE_DELETE","TOKEN_REFRESH_COOKIE_DELETE","UPDATE_ACCOUNT_PASSWORD","cs_local_storage_keys","AUTH_TOKEN","AUTH_TOKEN_EXP","AUTH_TOKEN_ORIGIAT","AUTH_REFRESH_TOKEN","AUTH_REFRESH_TOKEN_EXP","AUTH_LOGIN_NEXT","FINANCE_INVOICES_FILTER_STATUS","FINANCE_INVOICES_EDIT_RETURN","FINANCE_ORDERS_FILTER_STATUS","FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE","INSIGHT_CLASSPASSES_YEAR","INSIGHT_REVENUE_YEAR","INSIGHT_SUBSCRIPTIONS_YEAR","ORGANIZATION_CLASSTYPES_ARCHIVED","RELATIONS_ACCOUNTS_FILTER_TYPE","RELATIONS_ACCOUNTS_SEARCH","RELATIONS_ACCOUNTS_IS_ACTIVE","RELATIONS_ACCOUNT_NOTES_NOTE_TYPE","RELATIONS_BUSINESSES_SHOW_ARCHIVE","RELATIONS_BUSINESSES_SEARCH","SCHEDULE_APPOINTMENTS_DATE_FROM","SCHEDULE_APPOINTMENTS_DATE_UNTIL","SCHEDULE_APPOINTMENTS_ORDER_BY","SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE","SCHEDULE_APPOINTMENTS_FILTER_LOCATION","SCHEDULE_CLASSES_DATE_FROM","SCHEDULE_CLASSES_DATE_UNTIL","SCHEDULE_CLASSES_ORDER_BY","SCHEDULE_CLASSES_FILTER_CLASSTYPE","SCHEDULE_CLASSES_FILTER_LEVEL","SCHEDULE_CLASSES_FILTER_LOCATION","SCHEDULE_CLASSES_CLASS_ATTENDANCE_SEARCH","SCHEDULE_EVENTS_ARCHIVED","SCHEDULE_EVENTS_TICKETS_CUSTOMERS_SEARCH","SELFCHECKIN_CHECKIN_SEARCH","SHOP_ACCOUNT_BANK_ACCOUNT_NEXT","SHOP_CLASSES_DATE_FROM","SHOP_CLASSES_DATE_UNTIL","SHOP_CLASSES_ORDER_BY","SHOP_CLASSES_FILTER_CLASSTYPE","SHOP_CLASSES_FILTER_LEVEL","SHOP_CLASSES_FILTER_LOCATION","CSAuth","login","tokenData","localStorage","setItem","CSLS","token","payload","exp","origIat","refreshToken","refreshExpiresIn","removeItem","updateTokenInfo","refreshTokenData","cleanup","logout","expired","this","GET_APP_SETTINGS_QUERY","UPDATE_APP_SETTINGS","GET_ORGANIZATION_QUERY","withTranslation","t","urlLogo","children","className","Row","src","alt","autoClose","transition","Slide","active","loader","AppSettingsContext","React","createContext","AppSettingsProvider","Provider","Consumer","OrganizationContext","OrganizationProvider","GET_USER","get_all_permissions","user","permissions","groups","edges","edge_index","group_edge","node","group_node","permission_index","permission_edge","codename_split","codename","split","Set","add","has_permission","permission","resource","you_shall_not_pass","has","HasPermissionWrapper","useQuery","loading","error","data","check_permission","GET_BACKEND_ANNOUNCEMENTS_QUERY","getNavBarItems","items","push","value","to","icon","LinkComponent","withRouter","NavLink","useExact","now","Date","match","history","fetchMore","avatarURL","urlImageThumbnailSmall","Wrapper","headerProps","href","imageURL","navItems","Item","type","outline","size","color","accountDropdown","name","firstName","lastName","description","options","isDivider","navProps","itemsObjects","routerContextComponentType","RouterContextProvider","footerProps","copyright","getFullYear","target","rel","nav","Col","auto","Header","title","announcements","organizationAnnouncements","length","cards","deck","map","md","Body","dangerouslySetInnerHTML","__html","content","link","linkTitle","block","params","AutomationHomeItemButton","ContentCard","handleOnScroll","scrollTop","document","documentElement","body","scrollHeight","clientHeight","window","innerHeight","Math","ceil","pageInfo","props","hasNextPage","onLoadMore","addEventListener","removeEventListener","cardTitle","headerContent","cardTabs","hasCardBody","Title","Footer","onClick","Component","defaultProps","f","GET_TASK_RESULT_QUERY","returnUrl","status","dateTimeFormatMoment","useContext","variables","taskName","headerOptions","Options","taskResults","djangoCeleryResultTaskResults","after","endCursor","updateQuery","previousResult","fetchMoreResult","newEdges","__typename","ColHeader","v4","moment","dateDone","format","taskKwargs","result","AUTOMATION_ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA","Yup","shape","subscriptionYear","required","positive","min","max","subscriptionMonth","isSubmitting","errors","Group","label","autoComplete","component","disabled","ADD_TASK","useMutation","addTask","initialValues","getMonth","validationSchema","onSubmit","values","setSubmitting","input","month","year","refetchQueries","query","then","toast","success","position","POSITION","BOTTOM_RIGHT","catch","useState","AUTOMATION_ACCOUNT_SUBSCRIPTION_INVOICES_SCHEMA","invoiceDate","dateFormat","selected","onChange","onBlur","isClearable","placeholderText","todayButton","showMonthDropdown","showYearDropdown","dropdownMode","date","AUTOMATION_ACCOUNT_SUBSCRIPTION_MOLLIE_COLLECTION_SCHEMA","invoices_active","orders_active","costcenters_active","glaccounts_active","taxrates_active","payment_methods_active","payment_batch_collections_active","payment_batch_payments_active","payment_batch_categories_active","activeLink","transparent","GroupItem","FinanceHome","id","lg","header","footer","GET_COSTCENTERS_QUERY","GET_COSTCENTER_QUERY","ADD_COSTCENTER","UPDATE_COSTCENTER","ARCHIVE_COSTCENTER","showBack","prefix","archived","setArchived","refetch","archiveCostcenter","costcenters","financeCostcenters","code","COSTCENTER_SCHEMA","addCostcenter","updateCostcenter","initialData","financeCostcenter","GET_GLACCOUNTS_QUERY","GET_GLACCOUNT_QUERY","ADD_GLACCOUNT","UPDATE_GLACCOUNT","ARCHIVE_GLACCOUNT","archiveGlaccount","glaccounts","financeGlaccounts","GLACCOUNT_SCHEMA","addGlaccount","updateGlaccount","financeGlaccount","get_list_query_variables","queryVars","getItem","undefined","getDefaultValue","defaultValue","event","key","updateLocalStorageAndRefetch","FinanceInvoicesStatus","GET_INVOICES_QUERY","GET_INVOICE_QUERY","UPDATE_INVOICE","CANCEL_AND_CREATE_CREDIT_INVOICE","DELETE_FINANCE_INVOICE","CREATE_INVOICE_ITEM","UPDATE_INVOICE_ITEM","DELETE_INVOICE_ITEM","DELETE_INVOICE_PAYMENT","confirm_delete","msgConfirm","msgDescription","msgSuccess","deleteFunction","functionVariables","confirmAlert","customUI","onClose","location","pathname","fetchPolicy","deleteFinanceInvoice","invoices","financeInvoices","invoiceNumber","account","relationCompany","relationContactName","Small","summary","trunc","dateSent","dateDue","totalDisplay","balanceDisplay","refreshTokenAndOpenExportLinkInNewTab","doTokenRefresh","exportUrl","url","open","addInvoiceItem","financeInvoice","deleteInvoiceItem","productName","touched","handleChange","setFieldTouched","inputData","e","quantity","price","financeTaxRate","financeTaxRates","percentage","rateType","Object","keys","updateInvoiceItem","setTouched","refetchInvoice","updateItem","updating","setUpdating","onDragEnd","useCallback","draggableId","destination","source","reason","droppableId","index","updateLineNumber","node_id","line_number","lineNumber","setTimeout","statusColor","provided","snapshot","ref","innerRef","droppableProps","idx","draggableProps","dragHandleProps","placeholder","tinymceBasicConf","resize","menubar","plugins","statusbar","toolbar","setFieldValue","tinymceScriptSrc","textareaName","initialValue","terms","getContent","submitForm","note","updateInvoice","initialTab","subtotalDisplay","taxDisplay","paidDisplay","dateToLocalISO","slice","getDate","dateToLocalISOTime","getHours","getMinutes","TimeStringToJSDateOBJ","time_string","date_obj","time_split","setHours","setMinutes","financePaymentMethod","financePaymentMethods","initialPaymentMethod","organization","address","phone","email","registration","taxRegistration","creditInvoiceNumber","relationCompanyRegistration","relationCompanyTaxRegistration","relationAddress","relationPostcode","relationCity","relationCountry","deleteInvoicePayment","amountDisplay","paymentAddUrl","payments","onlinePaymentId","cancelAndCreateCreditInvoice","return_url","export_url","payment_add_url","toggle","triggerContent","creditInvoiceId","cancelAndCreateCreditFinanceInvoice","ml","GET_INVOICE_GROUPS_QUERY","GET_INVOICE_GROUP_QUERY","UPDATE_INVOICE_GROUP","ADD_INVOICE_GROUP","ARCHIVE_INVOICE_GROUP","archiveInvoiceGroup","invoiceGroups","financeInvoiceGroups","nextId","dueAfterDays","prefixYear","autoResetPrefixYear","displayPublic","INVOICE_GROUP_SCHEMA","moreThan","edit","Label","checked","addInvoiceGroup","updateInvoiceGroup","financeInvoiceGroup","INVOICE_GROUP_DEFAULT_SCHEMA","GET_INVOICE_GROUPS_DEFAULTS_QUERY","UPDATE_INVOICE_GROUP_DEFAULT","fetch_default_type_name","itemType","invoice_group_defaults","financeInvoiceGroupDefaults","mutation","updateDefault","GET_INVOICE_PAYMENT_QUERY","UPDATE_FINANCE_INVOICE_PAYMENT","form_type","invoiceId","invoice_id","queryLoading","queryError","invoice_number","padding","fullName","amount","role","ADD_FINANCE_INVOICE_PAYMENT","onCompleted","addInvoicePayment","mutationData","mutationLoading","mutationError","balance","invoiceQueryLoading","invoiceQueryError","invoiceData","paymentQueryLoading","paymentQueryError","paymentData","updateInvoicePayment","financeInvoicePayment","initialDate","FinanceOrderStatus","GET_ORDERS_QUERY","DELETE_FINANCE_ORDER","deleteOrder","orderNumber","orders","financeOrders","createdAt","batchType","toUpperCase","showAdd","batch_type","GET_PAYMENT_BATCHES_QUERY","GET_PAYMENT_BATCH_QUERY","GET_INPUT_VALUES","ADD_PAYMENT_BATCH","UPDATE_PAYMENT_BATCH","DELETE_PAYMENT_BATCH","msgEmptyList","deletePaymentBatch","financePaymentBatches","executionDate","financePaymentBatchCategory","FinancePaymentBatchCategory","categoryType","unstyled","get_add_options_collection","get_add_options_payment","batchId","setDisabled","updateFinancePaymentBatch","sentToBankColor","approvedColor","awaitingApprovalColor","rejectedColor","onClickStatusButton","newStatus","subTitle","List","create","category","financePaymentBatchCategories","includeZeroAmounts","appSettings","dateTimeFormat","timeFormatMoment","financePaymentBatch","countItems","exports","accountHolder","accountNumber","accountBic","currency","PAYMENT_BATCH_INVOICES_SCHEMA","PAYMENT_BATCH_CATEGORY_SCHEMA","PAYMENT_BATCH_EDIT_SCHEMA","batchCategoryType","category_type","addFinancePaymentBatch","yupSchema","createFinancePaymentBatch","inputValues","showArchive","GET_PAYMENT_BATCH_CATEGORIES_QUERY","GET_PAYMENT_BATCH_CATEGORY_QUERY","ARCHIVE_PAYMENT_BATCH_CATEGORY","archivePaymentBatchCategory","payment_batch_categories","ADD_PAYMENT_BATCH_CATEGORY","addFinancePaymentBatchCategory","UPDATE_PAYMENT_BATCH_CATEGORY","paymentBatchCategoryId","updateFinancePaymentBatchCategory","GET_FINANCE_ORDER_QUERY","UPDATE_ORDER","updateOrder","order","financeOrder","priceDisplay","message","GET_PAYMENT_METHODS_QUERY","GET_PAYMENT_METHOD_QUERY","ADD_PAYMENT_METHOD","UPDATE_PAYMENT_METHOD","ARCHIVE_PAYMENT_METHOD","archivePaymentMethod","paymentMethods","systemMethod","PAYMENT_METHOD_SCHEMA","addPaymentMethod","updatePaymentMethod","GET_TAXRATES_QUERY","GET_TAXRATE_QUERY","ADD_TAXRATE","UPDATE_TAXRATE","ARCHIVE_TAXRATE","archiveTaxrate","taxrates","TAX_RATE_SCHEMA","typeError","addFinanceTaxrate","updateTaxrate","InsightHome","GET_CLASSPASSES_SOLD_QUERY","GET_CLASSPASSES_ACTIVE_QUERY","refetchData","previousYear","parseInt","currentYear","nextYear","export_url_active","export_url_sold","loadingSold","errorSold","dataSold","refetchSold","loadingActive","errorActive","dataActive","refetchActive","data_sold_label","chart_data_sold","insightAccountClasspassesSold","data_active_label","chart_data_active","insightAccountClasspassesActive","style","height","x","columns","colors","sold","names","axis","y","bottom","show","left","right","tooltip","point","RootComponent","GET_REVENUE_TOTAL_QUERY","GET_REVENUE_SUBTOTAL_QUERY","GET_REVENUE_TAX_QUERY","loadingTotal","errorTotal","dataTotal","refetchTotal","loadingSubtotal","errorSubtotal","dataSubtotal","refetchSubtotal","loadingTax","errorTax","dataTax","refetchTax","data_label_total","chart_data_total","insightRevenueTotal","data_label_subtotal","chart_data_subtotal","insightRevenueSubtotal","data_label_tax","chart_data_tax","insightRevenueTax","total","subtotal","tax","GET_SUBSCRIPTIONS_SOLD_QUERY","GET_SUBSCRIPTIONS_ACTIVE_QUERY","classpasses_active","classtypes_active","discoveries_active","documents_active","languages_active","locations_active","levels_active","holidays_active","subscriptions_active","organization_active","organization_branding_active","announcements_active","insightAccountSubscriptionsSold","insightAccountSubscriptionsActive","OrganizationHome","ORGANIZATION_SCHEMA","customFileInputLabelStyle","whiteSpace","display","overflow","UPDATE_ORGANIZATION","updateOrganization","Image","urlLogoLogin","Details","urlLogoInvoice","urlLogoEmail","urlLogoShopHeader","urlLogoSelfCheckin","formTitle","inputFileName","fileInputLabel","handleFileInputChange","updateField","update_field","fileName","setFileName","useRef","files","inputVars","reader","FileReader","onload","reader_event","b64_enc_file","logoLoginFileName","logoLogin","logoInvoiceFileName","logoInvoice","logoEmailFileName","logoEmail","logoShopHeaderFileName","logoShopHeader","logoSelfCheckinFileName","logoSelfCheckin","file","current","readAsDataURL","showEditBack","GET_ANNOUNCEMENTS_QUERY","GET_ANNOUNCEMENT_QUERY","ADD_ANNOUNCEMENT","UPDATE_ANNOUNCEMENT","DELETE_ANNOUNCEMENT","deleteAnnouncement","displayShop","displayBackend","dateStart","dateEnd","priority","ANNOUNCEMENT_SCHEMA","addAnnouncement","announcementId","updateAnnouncement","organizationAnnouncement","GET_APPOINTMENTS_QUERY","GET_APPOINTMENT_QUERY","GET_INPUT_VALUES_QUERY","ARCHIVE_APPOINTMENT","organizationAppointmentCategory","category_id","appointments","organizationAppointments","organizationAppointmentPrices","archiveAppointmentCategorysRoom","APPOINTMENT_SCHEMA","ADD_APPOINTMENT","addAppointment","UPDATE_APPOINTMENT","OrganizationAppointmentEdit","organizationAppointment","initialGlaccount","initialCostcenter","updateLocation","GET_APPOINTMENT_CATEGORIES_QUERY","GET_APPOINTMENT_CATEGORY_QUERY","ARCHIVE_APPOINTMENT_CATEGORY","appointment_categories","organizationAppointmentCategories","archiveLocation","APPOINTMENT_CATEGORY_SCHEMA","ADD_ORGANIZATION_APPOINTMENT_CATEGORY","addAppointmentCategory","UPDATE_APPOINTMENT_CATEGORY","OrganizationAppointmentCategoryEdit","updateAppointmentCategory","GET_APPOINTMENT_PRICES_QUERY","GET_APPOINTMENT_PRICE_QUERY","DELETE_APPOINTMENT_PRICE","appointment_id","prices","deleteAppointmentPrice","APPOINTMENT_PRICE_SCHEMA","accountTeacherProfiles","ADD_APPOINTMENT_PRICE","OrganizationAppointmentPriceForm","UPDATE_APPOINTMENT_PRICE","OrganizationAppointmentPriceEdit","organizationAppointmentPrice","initialAccount","initialFinanceTaxRate","GET_CLASSPASSES_QUERY","GET_CLASSPASS_QUERY","CREATE_CLASSPASS","UPDATE_CLASSPASS","ARCHIVE_CLASSPASS","archiveClasspass","classpasses","organizationClasspasses","trialPass","unlimited","classes","validity","validityUnitDisplay","CLASSPASS_SCHEMA","validityUnit","quickStatsAmount","OrganizationClasspassForm","unlimied","createClasspass","organizationMembership","updateClasspass","initialMembership","organizationClasspass","GET_CLASSPASS_GROUPS_QUERY","GET_CLASSPASS_GROUP_QUERY","GET_CLASSPASS_GROUP_PASSES_QUERY","ADD_CLASSPASS_GROUP","UPDATE_CLASSPASS_GROUP","DELETE_CLASSPASS_GROUP","ADD_CARD_TO_GROUP","DELETE_CARD_FROM_GROUP","deleteClasspassGroup","classpass_groups","organizationClasspassGroups","substring","CLASSPASS_GROUP_SCHEMA","addClasspassGroup","hasExtraSpace","updateClasspassGroup","organizationClasspassGroup","groupId","addCardToGroup","deleteCardFromGroup","passes","group","group_passes","pass_id","GET_CLASSTYPES_QUERY","GET_CLASSTYPE_QUERY","ADD_CLASSTYPE","UPDATE_CLASSTYPE","UPDATE_CLASSTYPE_IMAGE","ARCHIVE_CLASSTYPE","archiveClasstype","classtypes","organizationClasstypes","CLASSTYPE_SCHEMA","urlWebsite","addClasstype","image","updateClasstype","organizationClasstype","classtypeId","uploadImage","imageFileName","GET_DISCOVERIES_QUERY","GET_DISCOVERY_QUERY","ADD_DISCOVERY","UPDATE_DISCOVERY","ARCHIVE_DISCOVERY","archiveDiscovery","discoveries","organizationDiscoveries","DISCOVERY_SCHEMA","addDiscovery","updateDiscovery","organizationDiscovery","organizationId","organization_id","docTypes","docType","FormatISODateStr","ISODateStr","mediaUrl","headerLinks","sidebarButton","GET_DOCUMENTS_QUERY","GET_DOCUMENT_QUERY","ADD_DOCUMENT","UPDATE_DOCUMENT","DELETE_DOCUMENT","deleteOrganizationDocument","confirmDelete","version","documentType","getSubtitle","document_type","back","organizationDocuments","ISODateString","urlDocument","addDocument","documentFileName","updateDocument","organizationDocument","GET_HOLIDAYS_QUERY","GET_HOLIDAY_QUERY","ADD_HOLIDAY","UPDATE_HOLIDAY","DELETE_HOLIDAY","GET_HOLIDAY_LOCATIONS_QUERY","ADD_LOCATION_TO_HOLIDAY","DELETE_LOCATION_FROM_HOLIDAY","deleteHoliday","holidays","organizationHolidays","organizationLocations","HOLIDAY_SCHEMA","addHoliday","updateHoliday","organizationHoliday","holidayId","addLocationToHoliday","deleteLocationFromHoliday","locations","holiday","holiday_locations","locationId","organizationLocation","GET_LANGUAGES_QUERY","GET_LANGUAGE_QUERY","ADD_LANGUAGE","UPDATE_LANGUAGE","ARCHIVE_LANGUAGE","archiveLanguage","languages","organizationLanguages","LANGUAGE_SCHEMA","addLanguage","updateLanguage","organizationLanguage","GET_LOCATIONS_QUERY","GET_LOCATION_QUERY","ADD_LOCATION","UPDATE_LOCATION","ARCHIVE_LOCATION","LOCATION_SCHEMA","addLocation","GET_LOCATION_ROOMS_QUERY","GET_LOCATION_ROOM_QUERY","ADD_LOCATION_ROOM","UPDATE_LOCATION_ROOM","ARCHIVE_LOCATION_ROOM","location_id","organizationLocationId","archiveLocationRoom","locationRooms","organizationLocationRooms","organizationLocationsRooms","LOCATION_ROOM_SCHEMA","addLocationRoom","updateLocationRoom","organizationLocationRoom","GET_LEVELS_QUERY","GET_LEVEL_QUERY","ADD_LEVEL","UPDATE_LEVEL","ARCHIVE_LEVEL","archiveLevel","levels","organizationLevels","LEVEL_SCHEMA","addLevel","updateLevel","organizationLevel","Validity","GET_MEMBERSHIPS_QUERY","GET_MEMBERSHIP_QUERY","ARCHIVE_MEMBERSHIP","memberships","organizationMemberships","archiveMembership","MEMBERSHIP_SCHEMA","CREATE_MEMBERSHIP","OrganizationMembershipAdd","createMembership","termsAndConditions","UPDATE_MEMBERSHIP","OrganizationMembershipEdit","GET_SUBSCRIPTIONS_QUERY","GET_SUBSCRIPTION_QUERY","CREATE_SUBSCRIPTION","UPDATE_SUBSCRIPTION","ARCHIVE_SUBSCRIPTION","archiveSubscription","subscriptions","organizationSubscriptions","subscriptionUnitDisplay","priceTodayDisplay","SUBSCRIPTION_SCHEMA","sortOrder","minDuration","subscriptionUnit","creditValidity","creditAccumulationDays","createSubscription","reconciliationClasses","updateSubscription","organizationSubscription","GET_SUBSCRIPTION_GROUPS_QUERY","GET_SUBSCRIPTION_GROUP_QUERY","GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY","ADD_SUBSCRIPTION_GROUP","UPDATE_SUBSCRIPTION_GROUP","DELETE_SUBSCRIPTION_GROUP","deleteSubscriptionGroup","subscription_groups","organizationSubscriptionGroups","SUBSCRIPTION_GROUP_SCHEMA","addSubscriptionGroup","updateSubscriptionGroup","organizationSubscriptionGroup","group_subscriptions","GET_SUBSCRIPTION_PRICES_QUERY","GET_SUBSCRIPTION_PRICE_QUERY","DELETE_SUBSCRIPTION_PRICE","accounts_active","b2b_active","subscription_id","subscription_prices","organizationSubscriptionPrices","subscription","organizationSubscriptionsPrices","deleteSubscriptionPrice","SUBSCRIPTION_PRICE_SCHEMA","ADD_SUBSCRIPTION_PRICE","addSubscription","UPDATE_SUBSCRIPTION_PRICE","OrganizationSubscriptionPriceEdit","organizationSubscriptionPrice","updateSubscriptionPrice","RelationsHome","InputSearch","inputValue","createRef","initialValueKey","state","submitValue","doneTypingInterval","typingTimer","focus","clearTimeout","setState","onKeyUp","onInputKeyUp","bind","onInputChange","onClear","isActive","customer","teacher","employee","search","searchName","Select","GET_ACCOUNTS_QUERY","GET_ACCOUNT_QUERY","ADD_ACCOUNT","UPDATE_ACCOUNT","UPDATE_ACCOUNT_ACTIVE","DELETE_ACCOUNT","updateAccountActive","deleteAccount","accounts","reverse","classpass","classesRemainingDisplay","first_name","last_name","ACCOUNT_SCHEMA","addAccount","accountId","createAccount","profile_active","classes_active","tickets_active","teacher_profile_active","bank_account_active","notes_active","finance_payment_batch_category_item_active","accepted_documents_active","avatarSize","inline","placement","mobile","ISO_COUNTRY_CODES","dateOfBirth","emergency","postcode","city","country","Code","Name","keyNumber","account_id","headerTitle","updateAccount","gender","input_vars","updateImage","GET_ACCOUNT_ACCEPTED_DOCUMENTS_QUERY","acceptedDocuments","accountAcceptedDocuments","dateAccepted","clientIp","GET_ACCOUNT_BANK_ACCOUNTS_QUERY","UPDATE_ACCOUNT_BANK_ACCOUNT","GET_ACCOUNT_BANK_ACCOUNT_MANDATE_QUERY","CREATE_ACCOUNT_BANK_ACCOUNT_MANDATE","UPDATE_ACCOUNT_BANK_ACCOUNT_MANDATE","DELETE_ACCOUNT_BANK_ACCOUNT_MANDATE","bankAccountId","holder","number","bic","updateAccountBankAccount","deleteAccountBankAccountMandate","accountBankAccount","accountBankAccounts","mandates","reference","signatureDate","bank_account_id","createAccountBankAccountMandate","refrence","mandateId","updateAccountBankAccountMandate","mandate","accountBankAccountMandate","signDate","GET_ACCOUNT_CLASSES_QUERY","GET_SCHEDULE_CLASS_ATTENDANCE_QUERY","DELETE_SCHEDULE_CLASS_ATTENDANCE","UPDATE_SCHEDULE_ITEM_ATTENDANCE","timeFormat","deleteScheduleItemAttendance","scheduleItem","timeStart","scheduleItemAttendances","bookingStatus","GET_ACCOUNT_CLASSPASSES_QUERY","GET_ACCOUNT_CLASSPASS_QUERY","CREATE_ACCOUNT_CLASSPASS","UPDATE_ACCOUNT_CLASSPASS","DELETE_ACCOUNT_CLASSPASS","deleteAccountClasspass","accountClasspasses","nullable","createAccountClasspass","classpassId","accountClasspass","initialdata","protectedMediaUrl","deleteAccountDocument","accountDocuments","urlProtectedDocument","addAccountDocument","DOCUMENT_SCHEMA","accountDocument","GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY","GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_QUERY","CREATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM","UPDATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM","DELETE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM","deleteAccountFinancePaymentBatchCategoryItem","AccountFinancePaymentBatchCategoryItemsBase","batchCategoryItems","accountFinancePaymentBatchCategoryItems","replace","ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA","addAccountFinancePaymentBatchCategoryItem","accountFinancePaymentBatchCategoryItemId","updateAccountFinancePaymentBatchCategoryItem","accountFinancePaymentBatchCategoryItem","GET_ACCOUNT_INVOICES_QUERY","CREATE_ACCOUNT_INVOICE","pageHeader","FinanceInvoiceStatus","registrationFeePaid","createInvoice","createFinanceInvoice","GET_ACCOUNT_MEMBERSHIPS_QUERY","GET_ACCOUNT_MEMBERSHIP_QUERY","DELETE_ACCOUNT_MEMBERSHIP","accountMemberships","deleteAccountMembership","frequencyType","CREATE_ACCOUNT_MEMBERSHIP","AccountMembershipAdd","UPDATE_ACCOUNT_MEMBERSHIP","AccountMembershipEdit","accountMembership","updateMembership","LoadMoreOnBottomScroll","GET_ACCOUNT_NOTES_QUERY","GET_ACCOUNT_NOTE_QUERY","CREATE_ACCOUNT_NOTE","UPDATE_ACCOUNT_NOTE","DELETE_ACCOUNT_NOTE","noteType","deleteAccountNote","notes","accountNotes","injury","noteBy","addNote","noteId","updateNote","accountNote","GET_ACCOUNT_ORDERS_QUERY","AccountOrderDelete","GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY","GET_ACCOUNT","UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET","updateAccountScheduleEventTicket","accountScheduleEventTickets","scheduleEventTicket","scheduleEvent","cancelled","invoiceItems","infoMailSent","GET_ACCOUNT_SUBSCRIPTIONS_QUERY","GET_ACCOUNT_SUBSCRIPTION_QUERY","CREATE_ACCOUNT_SUBSCRIPTION","UPDATE_ACCOUNT_SUBSCRIPTION","DELETE_ACCOUNT_SUBSCRIPTION","deleteAccountSubscription","accountSubscriptions","creditTotal","createAccountSubscription","subscriptionId","accountSubscription","tabs","class_tabs_position","active_tab","activeTab","linkTo","GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY","GET_ACCOUNT_SUBSCRIPTION_ALT_PRICE_QUERY","DELETE_ACCOUNT_SUBSCRIPTION_ALT_PRICE","AccountSubscriptionEditListBaseBase","onLoaMore","deleteAccountSubscriptionAltPrice","query_vars","buttonAdd","accountSubscriptionAltPrices","ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA","ADD_ACCOUNT_SUBSCRIPTION_ALT_PRICE","addSubscriptionAltPrice","UPDATE_ACCOUNT_SUBSCRIPTION_ALT_PRICE","updateSubscriptionAltPrice","accountSubscriptionAltPrice","GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY","GET_ACCOUNT_SUBSCRIPTION_BLOCK_QUERY","DELETE_ACCOUNT_SUBSCRIPTION_BLOCK","deleteAccountSubscriptionBlock","accountSubscriptionBlocks","ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA","ADD_ACCOUNT_SUBSCRIPTION_BLOCK","addSubscriptionBlock","UPDATE_ACCOUNT_SUBSCRIPTION_BLOCK","updateSubscriptionBlock","accountSubscriptionBlock","mutationType","GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY","GET_ACCOUNT_SUBSCRIPTION_CREDIT_QUERY","DELETE_ACCOUNT_SUBSCRIPTION_CREDIT","deleteAccountSubscriptionCredit","accountSubscriptionCredits","mutationAmount","ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA","ADD_ACCOUNT_SUBSCRIPTION_CREDIT","addSubscriptionCredit","UPDATE_ACCOUNT_SUBSCRIPTION_CREDIT","updateSubscriptionCredit","accountSubscriptionCredit","GET_FINANCE_INVOICE_ITEM_QUERY","deleteAccountSubscriptionInvoice","financeInvoiceItems","ACCOUNT_SUBSCRIPTION_INVOICE_SCHEMA","queryData","addFinanceInvoice","financeInvoiceId","GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY","GET_ACCOUNT_SUBSCRIPTION_PAUSE_QUERY","DELETE_ACCOUNT_SUBSCRIPTION_PAUSE","deleteAccountSubscriptionPause","accountSubscriptionPauses","ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA","ADD_ACCOUNT_SUBSCRIPTION_PAUSE","addSubscriptionPause","UPDATE_ACCOUNT_SUBSCRIPTION_PAUSE","updateSubscriptionPause","accountSubscriptionPause","GET_ACCOUNT_TEACHER_PROFILE_QUERY","UPDATE_ACCOUNT_TEACHER_PROFILE","ACCOUNT_TEACHER_PROFILE_SCHEMA","events","education","bio","urlBio","updateAccountTeacherProfile","showArchived","GET_BUSINESSES_QUERY","GET_BUSINESS_QUERY","UPDATE_BUSINESS","confirm_archive","archiveFunction","confirm_unarchive","DELETE_BUSINESS","updateBusiness","deleteBusiness","businesses","show_archive","ADD_BUSINESS","addBusiness","b2b","businessId","createBusiness","business","emailContact","emailBilling","phone2","events_active","business_id","ScheduleHome","orderBy","dateFrom","dateUntil","DELETE_SCHEDULE_APPOINTMENT","edit_active","teachers_available_active","scheduleAppointments","nextWeekFrom","nextWeekUntil","subtract","currentWeekFrom","currentWeekUntil","scheduleItemId","timeEnd","ItemDivider","badge","badgeType","deleteScheduleAppointment","SCHEDULE_APPOINTMENTS_FILTER_LEVEL","clearable","showTimeSelect","showTimeSelectOnly","timeIntervals","frequencyInterval","CREATE_APPOINTMENT","ScheduleAppointmentAdd","appointmentId","AppointmentEditBase","menu_activeLink","default_card","sidebar_button","initialTimeStart","subtitle","locationRoom","starttime","appointment_edit_all_subtitle","card_title","ScheduleAppointmentEditAll","initialTimeEnd","updateScheduleAppointment","attendanceCountType","represent_teacher","textColor","represent_class_status","get_class_messages","holidayName","selectClass","GET_CLASSES_QUERY","GET_CLASS_QUERY","CREATE_CLASS","DELETE_SCHEDULE_CLASS","deleteScheduleClass","scheduleClasses","account2","role2","CLASS_SCHEMA","spaces","walkInSpaces","infoMailContent","teachers_active","prices_active","createScheduleClass","UPDATE_CLASS","classId","defaultCard","menuActiveLink","class_id","class_edit_all_subtitle","classtype","represent_teacher_role","updateScheduleClass","initialLevelID","shopBook","attend","SCHEDULE_CLASS_CLASSPASS_SCHEMA","GET_SCHEDULE_CLASS_CLASSPASSES_QUERY","UPDATE_SCHEDULE_CLASS_CLASSPASS","updateScheduleClassClasspass","scheduleItemOrganizationClasspassGroups","enroll","SCHEDULE_CLASS_SUBSCRIPTION_SCHEMA","GET_SCHEDULE_CLASS_SUBSCRIPTIONS_QUERY","UPDATE_SCHEDULE_CLASS_SUBSCRIPTION","updateScheduleClassSubscription","scheduleItemOrganizationSubscriptionGroups","GET_SCHEDULE_CLASS_TEACHERS_QUERY","GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY","ADD_SCHEDULE_CLASS_TEACHER","UPDATE_SCHEDULE_CLASS_TEACHER","DELETE_SCHEDULE_CLASS_TEACHER","deleteScheduleItemTeacher","ButtonAdd","scheduleItemTeachers","SCHEDULE_CLASS_TEACHER_SCHEMA","addScheduleClassTeacher","updateScheduleClassTeacher","scheduleItemTeacher","initialAccount2","get_accounts_query_variables","get_attendance_list_query_variables","schedule_item_id","class_subtitle","class_date","attendance_active","attendancechart_active","setAttendanceStatus","updateAttendance","showSearch","setShowSearch","queryAttendanceLoading","queryAttendanceError","queryAttendanceData","useLazyQuery","getAccounts","fetchMoreAccounts","queryAccountsLoading","queryAccountsError","queryAccountsData","checkedInIds","includes","classDate","GET_CLASS_ATTENDANCE_COUNT_YEAR","dataLabelCurrentYear","chartDataCurrentYear","insightClassAttendanceCountYear","dataCurrent","dataLabelPreviousYear","chartDataPreviousYear","dataPrevious","startAt","Array","i","range","previous","tick","d","GET_BOOKING_OPTIONS_QUERY","CREATE_SCHEDULE_ITEM_ATTENDANCE","getUrlFromReturnTo","returnTo","createInput","classCheckin","onClickCheckin","allowed","blocked","paused","priceDropin","locationID","priceTrial","listType","scheduleClassBookingOptions","scheduleItemPrices","organizationClasspassDropin","organizationClasspassTrial","hasReachedTrialLimit","GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY","DELETE_SCHEDULE_CLASS_WEEKLY_OTC","UPDATE_SCHEDULE_CLASS_WEEKLY_OTC","SCHEDULE_CLASS_EDIT_OTC_SCHEMA","notRequired","deleteClassOTC","showDelete","updateScheduleClassWeeklyOTC","scheduleClassWeeklyOtcs","graphQLErrors","GET_SCHEDULE_ITEM_PRICES_QUERY","GET_SINGLE_SCHEDULE_ITEM_PRICE_QUERY","ADD_SCHEDULE_ITEM_PRICE","UPDATE_SCHEDULE_ITEM_PRICE","DELETE_SCHEDULE_ITEM_PRICE","deleteClassPrice","addScheduleClassPrice","editScheduleClassPrice","initialOrganizationClasspassDropin","initialOrganizationClasspassTrial","scheduleItemPrice","sidebarContent","displayMenu","GET_SCHEDULE_EVENTS_QUERY","GET_SCHEDULE_EVENT_QUERY","ARCHIVE_SCHEDULE_EVENT","archiveScheduleEvent","cardHeaderContent","scheduleEvents","SCHEDULE_EVENT_EDIT_SCHEMA","autoSendInfoMail","teacher2","tagline","preview","CREATE_SCHEDULE_EVENT","general_active","earlybirds_active","activities_active","media_active","createScheduleEvent","autoSentInfoMail","eventId","pageHeaderOptions","event_id","ScheduleEventEditMenu","cardSubTitle","UPDATE_SCHEDULE_EVENT","updateScheduleEvent","initialOrgranizationlevel","initialTeacher","initialTeacher2","GET_SCHEDULE_EVENT_ACTIVITIES_QUERY","GET_SCHEDULE_EVENT_ACTIVITY_QUERY","DELETE_SCHEDULE_EVENT_ACTIVITY","deleteScheduleEventActivity","scheduleItems","countAttendance","SCHEDULE_EVENT_ACTIVITY_SCHEMA","ADD_SCHEDULE_EVENT_ACTIVITY","addScheduleEventTicket","scheduleItemType","loadingActivity","errorActivity","dataActivity","cardActivitySubtitle","UPDATE_SCHEDULE_EVENT_ACTIVITY","updateScheduleEventTicket","GET_SCHEDULE_ITEM_ATTENDANCES_QUERY","schedule_item","GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY","GET_SCHEDULE_EVENT_EARLYBIRD_QUERY","ADD_SCHEDULE_EVENT_EARLYBIRD","UPDATE_SCHEDULE_EVENT_EARLYBIRD","DELETE_SCHEDULE_EVENT_EARLYBIRD","deleteScheduleEventEarlybird","scheduleEventEarlybirds","discountPercentage","SCHEDULE_EVENT_EARLYBIRDS_SCHEMA","addScheduleEventEarlybird","ScheduleEventEarlybirdForm","scheduleEventEarlybirdId","updateScheduleEventEarlybird","scheduleEventEarlybird","GET_SCHEDULE_EVENT_MEDIAS_QUERY","GET_SCHEDULE_EVENT_MEDIA_QUERY","DELETE_SCHEDULE_EVENT_MEDIA","deleteScheduleEventMedia","scheduleEventMedias","SCHEDULE_EVENT_MEDIA_SCHEMA","ADD_SCHEDULE_EVENT_MEDIA","addScheduleEventMedia","scheduleEventMediaId","loadingMedia","errorMedia","dataMedia","scheduleEventMedia","UPDATE_SCHEDULE_EVENT_MEDIA","updateScheduleEventMedia","updateMedia","GET_SCHEDULE_EVENT_TICKETS_QUERY","GET_SCHEDULE_EVENT_TICKET_QUERY","DELETE_SCHEDULE_EVENT_TICKET","deleteScheduleEventTicket","scheduleEventTickets","isSoldOut","deletable","SCHEDULE_EVENT_TICKET_SCHEMA","ADD_SCHEDULE_EVENT_TICKET","ticketId","searchResults","loadingTicket","errorTicket","dataTicket","ticket","cardTicketSubtitle","UPDATE_SCHEDULE_EVENT_TICKET","initialFinanceGlaccount","initialFinanceCostcenter","GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEMS_QUERY","SCHEDULE_EVENT_TICKET_SCHEDLE_ITEM_SCHEMA","included","UPDATE_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM","updateScheduleEventTicketScheduleItem","scheduleEventTicketActivities","scheduleEventTicketScheduleItems","fullEvent","ADD_ACCOUNT_SCHEDULE_EVENT_TICKET","addAccountScheduleEventTicket","accountIdsWithTickets","refetchAttendance","GET_ORGANIZATION_LOCATIONS_QUERY","action","GET_LOCATION_CLASSES_QUERY","today","GET_SYSTEM_SETTINGS_QUERY","UPDATE_SYSTEM_SETTING","headerSubTitle","alertBanner","setting","loadingVersion","errorVersion","dataVersion","loadingPatch","errorPatch","dataPatch","patch","systemSettings","finance_bank_accounts_iban","updateSettings","iban","toLowerCase","settings","finance_currency","finance_currency_symbol","sidebarActive","loadingCurrency","errorCurrency","dataCurrency","loadingSymbol","errorSymbol","dataSymbol","symbol","DATETIME_SCHEMA","system_hostname","queryVariables","hostname","mollie_api_key","mollieApiKey","H4","GET_SYSTEM_MAIL_TEMPLATES_QUERY","GET_SYSTEM_MAIL_TEMPLATE_QUERY","UPDATE_SYSTEM_MAIL_TEMPLATE","mailTemplates","systemMailTemplates","help","subject","comments","SettingsMailTemplateEditBase","templateInfo","template_name","helpTexts","suffix","getTemplateInfo","systemMailTemplate","GET_SHOP_FEATURES_QUERY","UPDATE_SHOP_FEATURES","SHOP_FEATURES_SCHEMA","shopFeatures","systemFeatureShop","workflow_class_book_days_advance","workflow_class_cancel_until","loadingDaysAdvance","errorDaysAdvance","dataDaysAdvance","loadingCancelUntil","errorCancelUntil","dataCancelUntil","workflow_shop_subscription_payment_method","loadingSubscriptionPayment","errorSubscriptionPayment","dataSubscriptionPayment","workflow_subscription_pauses_min_duration_in_days","workflow_subscription_pauses_max_pauses_in_year","loadingMinDuration","errorMinDuration","dataMinDuration","loadingMaxPauses","errorMaxPauses","dataMaxPauses","workflow_trial_pass_limit","loadingTrialClassLimit","errorTrialClassLimit","dataTrialClassLimit","GET_USER_PROFILE","refreshTokenExp","accountTitle","accountLink","headerImageUrl","getHeaderImageUrl","buttonText","xs","sm","GET_ACCOUNT_BANK_ACCOUNTS","UPDATE_BANK_ACCOUNT","accountName","ACCOUNT_BANK_ACCOUNT_SCHEMA","nextUrl","loadingUser","errorUser","dataUser","skip","updateBankAccount","bankAccount","DisplayClassInfo","classData","scheduleClass","GET_ACCOUNT_CLASS_QUERY","attendanceId","attendance_id","loadingAttendance","errorAttendance","dataAttendance","updateScheduleItemAttendance","scheduleItemAttendance","cancellationPossible","GET_SCHEDULE_CLASS_QUERY","complete","QUERY_ACCOUNT_CLASSPASSES","ShopAccountClasspassesBase","eventTickets","CREATE_PAYMENT_LINK","onlinePaymentsAvailable","cardTitleLoadingError","btnPayNow","initialBtnText","btn_text","setBtnText","createPaymentLink","invoice","setAttribute","paymentLink","createFinanceInvoicePaymentLink","financeInvoicePaymentLink","alert","QUERY_ACCOUNT_INVOICES","QUERY_ACCOUNT_ORDERS","get_order_card_status_color","cancelFunction","cancelOrder","UPDATE_PROFILE","updateProfile","QUERY_ACCOUNT_SUBSCRIPTIONS","ShopAccountSubscriptionsBase","checkoutProgress","color_order","color_payment","color_complete","addOn","alreadyBooked","classType","class_info","bookingOpenOn","CREATE_ORDER","buttonBook","capitalize","word","lower","charAt","isBefore","prevWeekFrom","prevWeekUntil","media","urlImageThumbnailLarge","dateString","IconGroup","IconItem","pt","eventTicket","showButton","ticketScheduleItems","Category","isEarlybirdPrice","Price","totalPriceDisplay","AttributeList","AttributeItem","Button","tickets","eventID","cs_django_links","EXPORT_TERMS_AND_CONDITIONS","EXPORT_PRIVACY_POLICY","scheduleEventTicketId","createOrder","createOrderInput","orderId","createFinanceOrder","ShopCheckoutForm","GET_SHOP_ANNOUNCEMENTS_QUERY","GET_ORDER_QUERY","orderItems","attendanceDate","msgNextStep","buttonNext","createFinanceOrderPaymentLink","financeOrderPaymentLink","subHeader","contentText","paymentText","schduleItemAttendances","btnLink","GET_ORGANIZATION_CLASSPASSES_QUERY","loadingClass","errorClass","dataClass","displayCheckoutInfo","priceFirstMonthDisplay","accountRegistrationFee","accountRegistrationFeeDisplay","GET_ORGANIZATION_SUBSCRIPTIONS_QUERY","ShopSubscriptionPricingCard","organizationSubscriptionId","ACCOUNT_SUBSCRIPTION_SCHEMA","accountSubscriptionId","CheckoutCardDirectDebitForm","CheckoutCard","shopPaymentMethod","hasBankAccountInfo","CheckoutCardDirectDebit","PASSWORD_CHANGE_SCHEMA","passwordCurrent","passwordNew","passwordNew2","oneOf","updatePassword","CSStandaloneFormPage","vars","messages","etFieldValue","esetFieldTouched","preventDefault","password","doTokenAuth","username","next","tokenAuth","setActive","deleteCookie","deleteRefreshCookie","info","offsetMd","Error404","SetCurrentUrlAsNext","PrivateRoute","rest","authTokenExpired","path","ContinueAsYouAre","render","LoginRequired","SessionExpired","tokenExp","reload","loadingAppSettings","errorAppSettings","dataAppSettings","loadingOrganization","errorOrganization","dataOrganization","exact","HomeHome","AutomationHome","AutomationAccountSubscriptionCredits","AutomationAccountSubscriptionCreditAdd","AutomationAccountSubscriptionCreditExpiration","AutomationAccountSubscriptionCreditExpirationAdd","AutomationAccountSubscriptionInvoices","AutomationAccountSubscriptionInvoicesAdd","AutomationAccountSubscriptionMollieCollections","AutomationAccountSubscriptionMollieCollectionAdd","FinanceCostCenters","FinanceCostCenterAdd","FinanceCostCenterEdit","FinanceInvoices","FinanceInvoiceEdit","FinanceInvoiceGroups","FinanceInvoiceGroupAdd","FinanceInvoiceGroupEdit","FinanceInvoiceGroupDefaults","FinanceInvoicePaymentAdd","FinanceInvoicePaymentEdit","FinanceGLAccounts","FinanceGLAccountAdd","FinanceGLAccountEdit","FinanceOrders","FinanceOrderEdit","FinancePaymentBatches","FinancePaymentBatchAddWhat","FinancePaymentBatchView","FinancePaymentCollectionBatchAdd","FinancePaymentCollectionBatchEdit","FinancePaymentBatchCategories","FinancePaymentBatchCategoryAdd","FinancePaymentBatchCategoryEdit","FinancePaymentMethods","FinancePaymentMethodAdd","FinancePaymentMethodEdit","FinanceTaxRates","FinanceTaxRatesAdd","FinanceTaxRatesEdit","OrganizationEdit","OrganizationBranding","OrganizationBrandingEdit","OrganizationDocuments","OrganizationListDocuments","OrganizationDocumentAdd","OrganizationDocumentEdit","OrganizationAnnouncements","OrganizationAnnouncementAdd","OrganizationAnnouncementEdit","OrganizationAppointmentCategories","OrganizationAppointmentCategoryAdd","OrganizationAppointments","OrganizationAppointmentAdd","OrganizationAppointmentPrices","OrganizationAppointmentPriceAdd","OrganizationClasspasses","OrganizationClasspassAdd","OrganizationClasspassEdit","OrganizationClasspassesGroups","OrganizationClasspassesGroupAdd","OrganizationClasspassesGroupEdit","OrganizationClasspassesGroupEditPasses","OrganizationClasstypes","OrganizationClasstypeAdd","OrganizationClasstypeEdit","OrganizationClasstypeEditImage","OrganizationDiscoveries","OrganizationDiscoveryAdd","OrganizationDiscoveryEdit","OrganizationHolidays","OrganizationHolidayAdd","OrganizationHolidayEdit","OrganizationHolidayEditLocations","OrganizationLanguages","OrganizationLanguageAdd","OrganizationLanguageEdit","OrganizationLevels","OrganizationLevelAdd","OrganizationLevelEdit","OrganizationLocations","OrganizationLocationAdd","OrganizationLocationEdit","OrganizationLocationRooms","OrganizationLocationRoomAdd","OrganizationLocationRoomEdit","OrganizationMemberships","OrganizationSubscriptions","OrganizationSubscriptionAdd","OrganizationSubscriptionEdit","OrganizationSubscriptionsGroups","OrganizationSubscriptionsGroupAdd","OrganizationSubscriptionsGroupEdit","OrganizationSubscriptionsGroupEditSubscriptions","OrganizationSubscriptionsPrices","OrganizationSubscriptionPriceAdd","RelationsAccounts","RelationsAccountAdd","RelationsAccountProfile","RelationsAccountProfileImage","AccountAcceptedDocuments","RelationsAccountBankAccount","RelationsAccountBankAccountMandateAdd","RelationsAccountBankAccountMandateEdit","RelationsAccountClasses","AccountClasspasses","AccountClasspassAdd","AccountClasspassEdit","AccountDocuments","AccountDocumentAdd","AccountDocumentEdit","AccountFinancePaymentBatchCategoryItems","AccountFinancePaymentBatchCategoryItemAdd","AccountFinancePaymentBatchCategoryItemEdit","AccountInvoices","AccountInvoiceAdd","AccountMemberships","AccountNotes","AccountNoteAdd","AccountNoteEdit","AccountOrders","AccountScheduleEventTickets","AccountSubscriptions","AccountSubscriptionAdd","AccountSubscriptionEdit","AccountSubscriptionEditAltPrices","AccountSubscriptionEditAltPriceAdd","AccountSubscriptionEditAltPriceEdit","AccountSubscriptionEditBlocks","AccountSubscriptionEditBlockAdd","AccountSubscriptionEditBlockEdit","AccountSubscriptionEditCredits","AccountSubscriptionEditCreditAdd","AccountSubscriptionEditCreditEdit","AccountSubscriptionEditInvoices","AccountSubscriptionEditInvoiceAdd","AccountSubscriptionEditPauses","AccountSubscriptionEditPauseAdd","AccountSubscriptionEditPauseEdit","RelationsAccountTeacherProfile","RelationsB2B","RelationsB2BAdd","RelationsB2BEdit","ScheduleAppointments","ScheduleClasses","ScheduleClassAdd","ScheduleClassEditAll","ScheduleClassClasspasses","ScheduleClassPrices","ScheduleClassPriceAdd","ScheduleClassPriceEdit","ScheduleClassSubscriptions","ScheduleClassTeachers","ScheduleClassTeacherAdd","ScheduleClassTeacherEdit","ScheduleClassAttendance","ScheduleClassAttendanceChart","ScheduleClassBook","ScheduleClassEdit","ScheduleEvents","ScheduleEventAdd","ScheduleEventEdit","ScheduleEventActivities","ScheduleEventActivityAdd","ScheduleEventActivityEdit","ScheduleEventActivityAttendance","ScheduleEventEarlybirds","ScheduleEventEarlybirdAdd","ScheduleEventEarlybirdEdit","ScheduleEventMedia","ScheduleEventMediaAdd","ScheduleEventMediaEdit","ScheduleEventTickets","ScheduleEventTicketAdd","ScheduleEventTicketEdit","ScheduleEventTicketEditActivities","ScheduleEventTicketEditCustomers","InsightClasspasses","InsightRevenue","InsightSubscriptions","SelfCheckinCheckin","SelfCheckinBookingOptions","SelfCheckinLocations","SelfCheckinLocationClasses","ShopHome","ShopAccountHome","ShopAccountBankAccount","ShopAccountClassCancel","ShopAccountClassInfo","ShopClasses","ShopAccountClasspasses","ShopAccountEventTickets","ShopAccountInvoicePayment","ShopAccountInvoicePaymentStatus","ShopAccountInvoices","ShopAccountOrders","ShopAccountProfile","ShopAccountSubscriptions","ShopCheckoutPayment","ShopCheckoutComplete","ShopClassesSchedule","ShopClassBook","ShopClassBooked","ShopClasspasses","ShopClasspass","ShopContact","ShopEvents","ShopEvent","ShopEventTicket","ShopSubscriptions","ShopSubscription","ShopSubscriptionDirectDebitActivated","SettingsHome","SettingsAbout","SettingsFinanceBankAccounts","SettingsFinanceCurrency","SettingsGeneralDateTime","SettingsGeneralSystem","SettingsIntegrationMollie","SettingsMailTemplates","SettingsMailTemplateEdit","SettingsShopFeatures","SettingsWorkflowClassBooking","SettingsWorkflowShop","SettingsWorkflowSubscriptionPauses","SettingsWorkflowTrial","UserChangePassword","UserLogin","UserLoginRequired","UserLogout","UserSessionExpired","UserWelcome","String","prototype","n","substr","errorLink","onError","networkError","operation","forward","response","forEach","refreshTokenExpired","Observable","observer","client","mutate","subscriber","subscribe","httpLink","createHttpLink","uri","credentials","authLink","setContext","request","a","headers","Authorization","ApolloClient","from","cache","InMemoryCache","App","ApolloProvider","Boolean","ReactDOM","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.f452c207.chunk.js","sourcesContent":["import i18n from \"i18next\"\nimport { initReactI18next } from \"react-i18next\"\n// import Backend from 'i18next-xhr-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\n// the translations\n// (tip move them in a JSON file and import them)\n// const resources = {\n//   en: {\n//     translations: {\n//         school: \"School\"\n//     }\n//   }\n// }\n\nimport en_US_common from \"./i18n/en_US/common\"\nconst resources = {\n    en_US: {\n        common: en_US_common\n    },\n}\n\nconsole.log(resources)\n\n\ni18n\n  // load translation using xhr -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  //   .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    resources,\n    lng: \"en_US\",\n    fallbackLng: \"en_US\",\n    ns: [\"common\"],\n    defaultNS: \"common\",\n    debug: true,\n\n    // keySeparator: false, // we do not use keys in form messages.welcome\n    keySeparator: '.', // we use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    }\n  })\n\n  export default i18n","import { gql } from \"@apollo/client\"\n\n\nexport const TOKEN_AUTH = gql`\n  mutation TokenAuth($username: String!, $password: String!) {\n    tokenAuth(username: $username, password: $password) {\n      token\n      payload\n      refreshToken\n      refreshExpiresIn\n    }\n  } \n`\n\n\nexport const TOKEN_VERIFY = gql`\n  mutation VerifyToken($token: String!) {\n    verifyToken(token: $token) {\n      payload\n    }\n  }\n`\n\n\nexport const TOKEN_REFRESH = gql`\n  mutation RefreshToken($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      token\n      payload\n      refreshToken\n      refreshExpiresIn\n    }\n  }\n`\n\n\nexport const TOKEN_REVOKE = gql`\n  mutation RevokeToken($refreshToken: String!) {\n    revokeToken(refreshToken: $refreshToken) {\n      revoked\n    }\n  }\n`\n\n\nexport const TOKEN_COOKIE_DELETE = gql`\n  mutation {\n    deleteTokenCookie {\n      deleted\n    }\n  }\n`\n\n\nexport const TOKEN_REFRESH_COOKIE_DELETE = gql`\n  mutation {\n    deleteRefreshTokenCookie {\n      deleted\n    }\n  }\n`\n\n\nexport const UPDATE_ACCOUNT_PASSWORD = gql`\n  mutation UpdateAccountPassword($input: UpdateAccountPasswordInput!) {\n    updateAccountPassword(input: $input) {\n      ok\n    }\n  }\n`","const cs_local_storage_keys = {\n    AUTH_TOKEN: 'costasiella:authToken',\n    AUTH_TOKEN_EXP: 'costasiella:authTokenExp',\n    AUTH_TOKEN_ORIGIAT: 'costasiella:authTokenorigIat',\n    AUTH_REFRESH_TOKEN: 'costasiella:authRefreshToken', \n    AUTH_REFRESH_TOKEN_EXP: 'costasiella:refreshTokenExp',\n    AUTH_LOGIN_NEXT: 'costasiella:authLoginNext',\n    FINANCE_INVOICES_FILTER_STATUS: 'costasiella:financeInvoicesFilterStatus',\n    FINANCE_INVOICES_EDIT_RETURN: 'costasiella:financeInvoiceEditReturn',\n    FINANCE_ORDERS_FILTER_STATUS: 'costasiella:financeOrdersFilterStatus',\n    FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE: 'costasiella:financePaymentBatchCategoriesShowArchive',\n    INSIGHT_CLASSPASSES_YEAR: 'costasiella:insightClasspassesYear',\n    INSIGHT_REVENUE_YEAR: 'costasiella:insightRevenueYear',\n    INSIGHT_SUBSCRIPTIONS_YEAR: 'costasiella:insightSubscriptionsYear',\n    ORGANIZATION_CLASSTYPES_ARCHIVED: 'costasiella:organizationClasstypesArchived',\n    RELATIONS_ACCOUNTS_FILTER_TYPE: 'costasiella:relationsAccountsFilterType',\n    RELATIONS_ACCOUNTS_SEARCH: 'costasiella:relationsAccountsSearch',\n    RELATIONS_ACCOUNTS_IS_ACTIVE: 'costasiella:relationsAccountsIsActive',\n    RELATIONS_ACCOUNT_NOTES_NOTE_TYPE: 'costasiella:relationsAccountNotesNoteType',\n    RELATIONS_BUSINESSES_SHOW_ARCHIVE: 'costasiella:relationsBusinessesShowArchive',\n    RELATIONS_BUSINESSES_SEARCH: 'costasiella:relationsBusinessesSeach',\n    SCHEDULE_APPOINTMENTS_DATE_FROM: 'costasiella:scheduleAppointmentsDateFrom',\n    SCHEDULE_APPOINTMENTS_DATE_UNTIL: 'costasiella:scheduleAppointmentsDateUntil',\n    SCHEDULE_APPOINTMENTS_ORDER_BY: 'costasiella:scheduleAppointmentsOrderBy',\n    SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE: 'costasiella:scheduleAppointmentsFilterClasstype',\n    SCHEDULE_APPOINTMENTS_FILTER_LOCATION: 'costasiella:scheduleAppointmentsFilterLocation',\n    SCHEDULE_CLASSES_DATE_FROM: 'costasiella:scheduleClassesDateFrom',\n    SCHEDULE_CLASSES_DATE_UNTIL: 'costasiella:scheduleClassesDateUntil',\n    SCHEDULE_CLASSES_ORDER_BY: 'costasiella:scheduleClassesOrderBy',\n    SCHEDULE_CLASSES_FILTER_CLASSTYPE: 'costasiella:scheduleClassesFilterClasstype',\n    SCHEDULE_CLASSES_FILTER_LEVEL: 'costasiella:scheduleClassesFilterLevel',\n    SCHEDULE_CLASSES_FILTER_LOCATION: 'costasiella:scheduleClassesFilterLocation',\n    SCHEDULE_CLASSES_CLASS_ATTENDANCE_SEARCH: 'costasiella:scheduleClassesClassAttendanceSearch',\n    SCHEDULE_EVENTS_ARCHIVED: 'costasiella:scheduleEventsArchived',\n    SCHEDULE_EVENTS_TICKETS_CUSTOMERS_SEARCH: 'costasiella:scheduleEventsTicketsCustomersSearch',\n    SELFCHECKIN_CHECKIN_SEARCH: 'costasiella:SelfcheckinCheckinSearch',\n    SHOP_ACCOUNT_BANK_ACCOUNT_NEXT: 'costasiella:ShopAccountBankAccountNext',\n    SHOP_CLASSES_DATE_FROM: 'costasiella:shopClassesDateFrom',\n    SHOP_CLASSES_DATE_UNTIL: 'costasiella:shopClassesDateUntil',\n    SHOP_CLASSES_ORDER_BY: 'costasiella:shopClassesOrderBy',\n    SHOP_CLASSES_FILTER_CLASSTYPE: 'costasiella:shopClassesFilterClasstype',\n    SHOP_CLASSES_FILTER_LEVEL: 'costasiella:shopClassesFilterLevel',\n    SHOP_CLASSES_FILTER_LOCATION: 'costasiella:shopClassesFilterLocation',\n}\n\nexport default cs_local_storage_keys\n","import CSLS from \"./cs_local_storage\"\n\n\nexport const CSAuth = {\n    login(tokenData) {\n        localStorage.setItem(CSLS.AUTH_TOKEN, tokenData.token)\n        localStorage.setItem(CSLS.AUTH_TOKEN_EXP, tokenData.payload.exp)\n        localStorage.setItem(CSLS.AUTH_TOKEN_ORIGIAT, tokenData.payload.origIat)\n        localStorage.setItem(CSLS.AUTH_REFRESH_TOKEN, tokenData.refreshToken)\n        localStorage.setItem(CSLS.AUTH_REFRESH_TOKEN_EXP, tokenData.refreshExpiresIn)\n        localStorage.removeItem(CSLS.AUTH_LOGIN_NEXT)\n    },\n    updateTokenInfo(refreshTokenData) {\n        console.log(\"Token payload:\")\n        console.log(refreshTokenData)\n        localStorage.setItem(CSLS.AUTH_TOKEN, refreshTokenData.token)\n        localStorage.setItem(CSLS.AUTH_TOKEN_EXP, refreshTokenData.payload.exp)\n        localStorage.setItem(CSLS.AUTH_TOKEN_ORIGIAT, refreshTokenData.payload.origIat)\n        localStorage.setItem(CSLS.AUTH_REFRESH_TOKEN, refreshTokenData.refreshToken)\n        localStorage.setItem(CSLS.AUTH_REFRESH_TOKEN_EXP, refreshTokenData.refreshExpiresIn)\n    },\n    cleanup() {\n        // Like logging out, but don't unset next url. \n        // This function is used when a refreshToken has expired\n        localStorage.removeItem(CSLS.AUTH_TOKEN)\n        localStorage.removeItem(CSLS.AUTH_TOKEN_EXP)\n        localStorage.removeItem(CSLS.AUTH_TOKEN_ORIGIAT)\n        localStorage.removeItem(CSLS.AUTH_REFRESH_TOKEN)\n        localStorage.removeItem(CSLS.AUTH_REFRESH_TOKEN_EXP)\n    },\n    logout(expired=false) {\n        if (!expired) {\n            // Manual logout, remove everything\n            this.cleanup()\n            localStorage.removeItem(CSLS.AUTH_LOGIN_NEXT)\n        }        \n    }\n}\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_APP_SETTINGS_QUERY = gql`\n  query AppSettings {\n    appSettings(id: \"QXBwU2V0dGluZ3NOb2RlOjE=\") {\n      dateFormat\n      timeFormat\n      timeFormatMoment\n      dateTimeFormatMoment\n      onlinePaymentsAvailable\n    }\n  }\n`\n\n\nexport const UPDATE_APP_SETTINGS = gql`\n  mutation UpdateAppSettings($input: UpdateAppSettingsInput!) {\n    updateAppSettings(input: $input) {\n      appSettings {\n        id\n      }\n    }\n  }\n`","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ORGANIZATION_QUERY = gql`\n  query Organization($id: ID!) {\n    organization(id:$id) {\n      id\n      name\n      address\n      phone\n      email\n      registration\n      taxRegistration\n      urlLogoLogin\n      urlLogoInvoice\n      urlLogoEmail\n      urlLogoShopHeader\n      urlLogoSelfCheckin\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { ToastContainer, Slide } from 'react-toastify'\n\nimport {\n  Container,\n  Grid,\n  Page\n} from \"tabler-react\"\n\n\nfunction CSStandalonePageWide({ t, urlLogo=\"\", children}) {\n\n  return (\n    <Page>\n      <div className=\"page-single\">\n        <Container>\n          <Grid.Row>\n            <div className=\"col mx-auto\">            \n              <div className=\"text-center mb-5\">\n                { (urlLogo) ? <img src={urlLogo} className=\"h-9\" alt=\"logo\" /> : \"\" }\n              </div>\n              {children}\n              <ToastContainer \n                autoClose={5000} \n                transition={Slide}\n              />\n            </div>\n          </Grid.Row>\n        </Container>\n      </div>\n    </Page>\n  )\n}\n\nexport default withTranslation()(CSStandalonePageWide)\n\n\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport {\n  Dimmer\n} from \"tabler-react\"\n\nimport CSStandalonePageWide from './CSStandalonePageWide'\n\n\nfunction CSStandalonePageLoader({}) {\n\n  return (\n    <CSStandalonePageWide>\n    <div className='text-center'>\n      <Dimmer active={true} loader={true} />\n    </div>\n  </CSStandalonePageWide>\n  )\n}\n\nexport default withTranslation()(CSStandalonePageLoader)\n\n\n\n","import React from 'react'\n\nconst AppSettingsContext = React.createContext({})\n\nexport const AppSettingsProvider = AppSettingsContext.Provider\nexport const AppSettingsConsumer = AppSettingsContext.Consumer\n\nexport default AppSettingsContext","import React from 'react'\n\nconst OrganizationContext = React.createContext({})\n\nexport const OrganizationProvider = OrganizationContext.Provider\nexport const OrganizationConsumer = OrganizationContext.Consumer\n\nexport default OrganizationContext","import { gql } from \"@apollo/client\"\n\nconst GET_USER = gql`\n  query User($before: String, $after: String)  {\n    user {\n      id\n      isActive\n      email\n      firstName\n      lastName\n      employee\n      teacher\n      urlImageThumbnailSmall\n      groups {\n        edges {\n          node {\n            id\n            name\n            permissions(first: 1000, before: $before, after: $after) {\n              pageInfo {\n                hasNextPage\n                hasPreviousPage\n                startCursor\n                endCursor                \n              }\n              edges {\n                node {\n                  id\n                  name\n                  codename\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default GET_USER","export function get_all_permissions(user) {\n    const permissions = {}\n    const groups = user.groups\n    if (groups.edges) {\n      for (let edge_index in groups.edges) {\n        let group_edge = groups.edges[edge_index]\n        if (group_edge.node) {\n          let group_node = group_edge.node \n          if (group_node.permissions.edges) {\n            for (let permission_index in group_node.permissions.edges) {\n              let permission_edge = group_node.permissions.edges[permission_index] \n              if (permission_edge.node) {\n                  let permission_node = permission_edge.node\n                  let codename = permission_node.codename\n                  let codename_split = codename.split('_')\n                  // If code name is not in permissions, create a new set\n                  if (!(codename_split[1] in permissions)) {\n                  permissions[codename_split[1]] = new Set()\n                  }\n                  // Add permission name to set\n                  permissions[codename_split[1]].add(codename_split[0])\n              }\n            }\n          }\n        }\n      }\n    }\n    \n    return permissions\n}\n\n\nexport const has_permission = (permissions, permission, resource) => {\n  let you_shall_not_pass = true\n\n  if (resource in permissions) {\n    if (permissions[resource].has(permission)) {\n      console.log('found permission')\n      you_shall_not_pass = false\n    }\n  }\n  \n  return !you_shall_not_pass\n}\n","import React from 'react'\nimport { useQuery } from \"@apollo/client\"\n\nimport GET_USER from '../queries/system/get_user'\nimport { get_all_permissions } from \"../tools/user_tools\"\n\n\nfunction check_permission(permissions, permission, resource) {\n  let you_shall_not_pass = true\n\n  if (resource in permissions) {\n    if (permissions[resource].has(permission)) {\n      you_shall_not_pass = false\n    }\n  }\n  \n  return !you_shall_not_pass\n}\n\nfunction HasPermissionWrapper({permission, resource, children}) {\n  const {loading, error, data} = useQuery(GET_USER)\n  \n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error loading user... :(</p>\n\n  const permissions = get_all_permissions(data.user)\n\n  if (check_permission(permissions, permission, resource)) {\n    return children\n  } else {\n    return ''\n  }\n}\n  \nexport default HasPermissionWrapper","import { gql } from \"@apollo/client\"\n\nexport const GET_BACKEND_ANNOUNCEMENTS_QUERY = gql`\n  query OrganizationAnnouncements($after: String, $before: String) {\n    organizationAnnouncements(first: 100, before: $before, after: $after, displayPublic: true, displayBackend: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          displayPublic\n          displayBackend\n          title\n          content\n          dateStart\n          dateEnd\n          priority\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport * as React from \"react\"\nimport { withTranslation } from 'react-i18next'\nimport { NavLink, withRouter } from \"react-router-dom\"\nimport { useQuery } from \"@apollo/client\"\nimport { ToastContainer, Slide } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport { Link } from 'react-router-dom'\n\nimport CSStandalonePageLoader from \"./ui/CSStandalonePageLoader\"\nimport GET_USER from \"../queries/system/get_user\"\nimport { get_all_permissions, has_permission } from \"../tools/user_tools\"\n\nimport {\n  Site,\n  Nav,\n  Grid,\n  Button,\n  // Page,\n  RouterContextProvider,\n} from \"tabler-react\";\n\nimport type { NotificationProps } from \"tabler-react\";\n\ntype Props = {|\n  +children: React.Node,\n|};\n\ntype State = {|\n  notificationsObjects: Array<NotificationProps>,\n|};\n\ntype subNavItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +LinkComponent?: React.ElementType,\n|};\n\ntype navItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +active?: boolean,\n  +LinkComponent?: React.ElementType,\n  +subItems?: Array<subNavItem>,\n  +useExact?: boolean,\n|};\n\n\nconst getNavBarItems = (t, user) => {\n  let items: Array<navItem> = []\n  let permissions = get_all_permissions(user)\n\n  items.push({\n    value: t(\"home.title\"),\n    to: \"/backend\",\n    icon: \"home\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  })\n\n  // Relations\n  if (\n    (has_permission(permissions, 'view', 'account'))\n  ){\n    items.push({\n      value: t(\"relations.title\"),\n      to: \"/relations\",\n      icon: \"users\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Schedule\n  if (\n    (has_permission(permissions, 'view', 'scheduleclass')) ||\n    (has_permission(permissions, 'view', 'scheduleevent'))\n  ){\n    items.push({\n      value: t(\"schedule.title\"),\n      to: \"/schedule\",\n      icon: \"calendar\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Finance\n  if (\n    (has_permission(permissions, 'view', 'financecostcenter')) ||\n    (has_permission(permissions, 'view', 'financeglaccount')) ||\n    (has_permission(permissions, 'view', 'financetaxrate')) \n  ){\n    items.push({\n      value: t(\"finance.title\"),\n      to: \"/finance\",\n      icon: \"dollar-sign\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Organization\n  if (\n    (has_permission(permissions, 'view', 'organizationclasspass')) || \n    (has_permission(permissions, 'view', 'organizationclasstype')) ||\n    (has_permission(permissions, 'view', 'organizationdiscovery')) ||\n    (has_permission(permissions, 'view', 'organizationlocation')) ||\n    (has_permission(permissions, 'view', 'organizationmembership')) ||  \n    (has_permission(permissions, 'view', 'organization')) \n   ){\n   items.push({\n      value: t(\"organization.title\"),\n      to: \"/organization\",\n      icon: \"feather\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Insight\n  if (\n    (has_permission(permissions, 'view', 'insight'))\n   ){\n    items.push({\n      value: t(\"insight.title\"),\n      to: \"/insight\",\n      icon: \"bar-chart-2\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Automation\n  if (\n    (has_permission(permissions, 'view', 'automation'))\n   ){\n    items.push({\n      value: t(\"automation.title\"),\n      to: \"/automation\",\n      icon: \"loader\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // let goToSubItems = []\n  // if (has_permission(permissions, 'view', 'selfcheckin')) {\n  //   goToSubItems.push(\n  //     { value: t(\"selfcheckin.home.title\"), to: \"/selfcheckin\", LinkComponent: withRouter(NavLink) }\n  //   )\n  // }\n  // goToSubItems.push(\n  //   { value: t(\"shop.title\"), to: \"/shop\", LinkComponent: withRouter(NavLink) }\n  // )\n\n  // // Go to\n  // if (\n  //   (has_permission(permissions, 'view', 'selfcheckin'))\n  //  ){\n  //   items.push({\n  //     value: t(\"goto.title\"),\n  //     icon: \"link\",\n  //     subItems: goToSubItems,\n  //   })\n  // }\n\n\n  return items\n\n}\n\nconst now = new Date()\n\nfunction SiteWrapper({t, match, history, children}) {\n  const { error, loading, data, fetchMore } = useQuery(GET_USER)\n\n  if (loading) return <CSStandalonePageLoader/>;\n  if (error) return <p>{t('system.user.error_loading')}</p>; \n\n  console.log(data)\n\n  let avatarURL = \"#\"\n  if (data.user.urlImageThumbnailSmall) {\n    avatarURL = data.user.urlImageThumbnailSmall\n  }\n\n  return (\n    <Site.Wrapper\n      headerProps={{\n          href: \"/\",\n          alt: \"Costasiella\",\n          imageURL: \"/d/static/logos/stock/logo_stock_backend.png\", // Set logo url here\n          navItems: (\n            <Nav.Item type=\"div\" className=\"d-none d-md-flex\">\n              <Link to=\"/settings\">\n                <Button\n                  className=\"mr-2\"\n                  icon=\"settings\"\n                  outline\n                  size=\"sm\"\n                  color=\"primary\"\n                >\n                  {t('general.settings')}\n                </Button>\n              </Link>\n              <Link to=\"/user/welcome\">\n                <Button\n                  className=\"mr-2\"\n                  icon=\"link\"\n                  outline\n                  size=\"sm\"\n                  color=\"primary\"\n                >\n                  {t('goto.title')}\n                </Button>\n              </Link>\n            </Nav.Item>\n          ),\n          // notificationsTray: {\n          //   notificationsObjects,\n          //   markAllAsRead: () =>\n          //     this.setState(\n          //       () => ({\n          //         notificationsObjects: this.state.notificationsObjects.map(\n          //           v => ({ ...v, unread: false })\n          //         ),\n          //       }),\n          //       () =>\n          //         setTimeout(\n          //           () =>\n          //             this.setState({\n          //               notificationsObjects: this.state.notificationsObjects.map(\n          //                 v => ({ ...v, unread: true })\n          //               ),\n          //             }),\n          //           5000\n          //         )\n          //     ),\n          //   unread: unreadCount,\n          // },\n          accountDropdown: {\n          avatarURL: avatarURL,\n          name: data.user.firstName + ' ' + data.user.lastName,\n          description: \"\",\n          options: [\n            // { icon: \"user\", value: \"Profile\" },\n            { icon: \"lock\", value: t(\"user.change_password.title\"), to: \"/#/user/password/change/\" },\n            { isDivider: true },\n            { icon: \"user\", value: t(\"shop.account.title\"), to: \"/#/shop/account/\" },\n            { isDivider: true },\n            { icon: \"log-out\", value: t(\"user.logout.title\"), to: \"/#/user/logout/\" },\n          ],\n        },\n        }}\n        // navProps={{ itemsObjects: navBarItems }}\n        navProps={{ itemsObjects: getNavBarItems(t, data.user) }}\n        routerContextComponentType={withRouter(RouterContextProvider)}\n        footerProps={{\n          // links: [\n          //   <a href=\"#\">First Link</a>,\n          //   <a href=\"#\">Second Link</a>,\n          //   <a href=\"#\">Third Link</a>,\n          //   <a href=\"#\">Fourth Link</a>,\n          //   <a href=\"#\">Five Link</a>,\n          //   <a href=\"#\">Sixth Link</a>,\n          //   <a href=\"#\">Seventh Link</a>,\n          //   <a href=\"#\">Eigth Link</a>,\n          // ],\n          // note:\n          //   \"Premium and Open Source dashboard template with responsive and high quality UI. For Free!\",\n          copyright: (\n            <React.Fragment>\n              <small>\n                Copyleft © {now.getFullYear()}.\n                <a\n                  href=\"https://www.costasiella.com\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {\" \"}\n                  Edwin van de Ven\n                </a>{\". \"}\n                All rights reserved.\n              </small>\n            </React.Fragment>\n          ),\n          nav: (\n            <React.Fragment>\n              <Grid.Col auto={true}>\n                {/* <List className=\"list-inline list-inline-dots mb-0\">\n                  <List.Item className=\"list-inline-item\">\n                    <a href=\"./docs/index.html\">Documentation</a>\n                  </List.Item>\n                  <List.Item className=\"list-inline-item\">\n                    <a href=\"./faq.html\">FAQ</a>\n                  </List.Item>\n                </List> */}\n              </Grid.Col>\n              <Grid.Col auto={true}>\n                {/* <Button\n                  href=\"https://github.com/tabler/tabler-react\"\n                  size=\"sm\"\n                  outline\n                  color=\"primary\"\n                  RootComponent=\"a\"\n                >\n                  Source code\n                </Button> */}\n              </Grid.Col>\n            </React.Fragment>\n          ),\n        }}\n      >\n        {children}\n        <ToastContainer \n          autoClose={5000} \n          transition={Slide}\n        />\n      </Site.Wrapper>\n  )\n}\n\nexport default withTranslation()(SiteWrapper)\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Container,\n  Page\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\n\n\nfunction HomeHomeBase({ t, match, history, children }) {\n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.announcements.title\")} />\n          {children}\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(HomeHomeBase))","// @flow\n\nimport React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { GET_BACKEND_ANNOUNCEMENTS_QUERY } from \"./queries\"\n\nimport HomeHomeBase from './HomeHomeBase';\n\n\nfunction HomeHome({ t, match }) {\n  const { loading, error, data } = useQuery(GET_BACKEND_ANNOUNCEMENTS_QUERY);\n\n  if (loading) return (\n    <HomeHomeBase>\n      {t(\"general.loading_with_dots\")}\n    </HomeHomeBase>\n  )\n  if (error) return (\n    <HomeHomeBase>\n      {t(\"home.home.announcements.error_loading\")}\n    </HomeHomeBase>\n  )\n\n  console.log(\"%%%%%%%%%%%%%%%%%%%%%\")\n  console.log(data)\n\n  const announcements = data.organizationAnnouncements\n\n  // Empty list\n  if (!announcements.edges.length) return (\n    <HomeHomeBase>\n      {t(\"home.home.announcements_empty_list\")}\n    </HomeHomeBase>\n  )\n\n  // Data\n  return (\n    <HomeHomeBase>\n      <Grid.Row cards deck>\n        {(announcements.edges.length) ? announcements.edges.map(({ node }) => (\n          <Grid.Col md={6}>\n            <Card title={node.title}>\n              <Card.Body>\n                <div dangerouslySetInnerHTML={{ __html:node.content }}></div>\n              </Card.Body>\n            </Card> \n          </Grid.Col>\n        )) : \"\"\n        }\n      </Grid.Row>\n    </HomeHomeBase>\n  )\n}\n\n\n// class HomeHome extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Home home props:\")\n//     console.log(props)\n//   }\n\n\n//   render() {\n//     const t = this.props.t\n//     const match = this.props.match\n//     const history = this.props.history\n//     const id = match.params.id\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//           <Container>\n//             <Page.Header title={t(\"home.title\")} />\n//             <Grid.Row>\n//               <Grid.Col md={9}>\n//               <Card>\n//                 <Card.Header>\n//                   <Card.Title>{t('home.title')}</Card.Title>\n//                 </Card.Header>\n//                 <Card.Body>\n//                     Hello world!\n//                 </Card.Body>\n//               </Card>\n//               </Grid.Col>\n//             </Grid.Row>\n//           </Container>\n//         </div>\n//     </SiteWrapper>\n//     )}\n//   }\n\n\nexport default withTranslation()(withRouter(HomeHome))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\n\nfunction SettingsHomeItemButton({ t, link, linkTitle=null }) {\n  return (\n    <Link to={link} >\n      <Button \n        outline\n        block\n        color=\"primary\"\n      >\n        {linkTitle ? linkTitle: t(\"automation.home.link_edit\")} <Icon name=\"chevron-right\" />\n      </Button>\n    </Link>\n  )\n}\n\nexport default withTranslation()(withRouter(SettingsHomeItemButton))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Container,\n  Grid,\n  Icon,\n  Page,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport AutomationHomeItemButton from \"./AutomationHomeItemButton\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n\nfunction AutomationHome({ t, match, params }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('automation.title')} />\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"automation.account.subscriptions.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"automation.account.subscriptions.invoices.title\")}</h5>\n                  {t(\"automation.account.subscriptions.invoices.explanation\")}\n                  <br /><br />\n                  <AutomationHomeItemButton link=\"/automation/account/subscriptions/invoices\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"automation.account.subscriptions.credits.title\")}</h5>\n                  {t(\"automation.account.subscriptions.credits.explanation\")}\n                  <br /><br />\n                  <AutomationHomeItemButton link=\"/automation/account/subscriptions/credits\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"automation.account.subscriptions.credits_expiration.title\")}</h5>\n                  {t(\"automation.account.subscriptions.credits_expiration.explanation\")}\n                  <br /><br />\n                  <AutomationHomeItemButton link=\"/automation/account/subscriptions/credits_expiration\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"automation.account.subscriptions.mollie_collection.title\")}</h5>\n                  {t(\"automation.account.subscriptions.mollie_collection.explanation\")}\n                  <br /><br />\n                  <AutomationHomeItemButton link=\"/automation/account/subscriptions/mollie_collections\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationHome))","import React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n    Button,\n    Card,\n  } from \"tabler-react\"\n\n\nclass ContentCard extends Component {\n    componentDidMount() {\n      window.addEventListener(\"scroll\", this.handleOnScroll);\n    }\n  \n    componentWillUnmount() {\n      window.removeEventListener(\"scroll\", this.handleOnScroll);\n    }\n\n    handleOnScroll = () => {\n      // http://stackoverflow.com/questions/9439725/javascript-how-to-detect-if-browser-window-is-scrolled-to-bottom\n      var scrollTop =\n        (document.documentElement && document.documentElement.scrollTop) ||\n        document.body.scrollTop;\n      var scrollHeight =\n        (document.documentElement && document.documentElement.scrollHeight) ||\n        document.body.scrollHeight;\n      var clientHeight =\n        document.documentElement.clientHeight || window.innerHeight;\n      var scrolledToBottom = Math.ceil(scrollTop + clientHeight) >= scrollHeight;\n      if (scrolledToBottom) {\n        const pageInfo = this.props.pageInfo\n        if (pageInfo) {\n          if (pageInfo.hasNextPage) {\n            this.props.onLoadMore()\n          }\n        }\n      }\n    }\n\n    render() {\n      const t = this.props.t\n      const cardTitle = this.props.cardTitle\n      const headerContent = this.props.headerContent\n      const onLoadMore = this.props.onLoadMore \n      const pageInfo = this.props.pageInfo\n      const children = this.props.children\n      const cardTabs = this.props.cardTabs\n      const hasCardBody = this.props.hasCardBody \n\n\n      return(\n        <Card>\n          <Card.Header>\n            <Card.Title>{cardTitle}</Card.Title>\n            {headerContent}\n          </Card.Header>\n          {cardTabs}\n          {(hasCardBody) ? \n            <Card.Body>{children}</Card.Body> :\n            children\n          }\n          <Card.Footer>\n            {(!pageInfo) ? '':\n              (pageInfo.hasNextPage) ? \n                <Button \n                  link\n                  onClick={onLoadMore} \n                  >\n                  {t('general.load_more')}\n                </Button>\n               : t('general.loaded_all')\n            }\n          </Card.Footer>\n        </Card>\n      )\n    }\n}\n\nContentCard.defaultProps = {\n  onLoadMore: f=>f,\n  hasCardBody: true\n}\n  \nexport default withTranslation()(ContentCard)\n","import { gql } from \"@apollo/client\"\n\nexport const GET_TASK_RESULT_QUERY = gql`\nquery TaskResults($before: String, $after: String, $taskName:String) {\n  djangoCeleryResultTaskResults(first: 100, before: $before, after: $after, taskName: $taskName) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        taskId\n        taskName\n        taskArgs\n        taskKwargs\n        status\n        contentType\n        contentEncoding\n        result\n        dateDone\n        traceback\n        meta\n      }\n    }\n  }\n}\n`\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Button\n} from \"tabler-react\"\n\nconst ButtonBack = ({ t, returnUrl }) => (\n  <Link to={returnUrl}>\n    <Button\n      color=\"secondary\"\n      icon=\"arrow-left\">\n        {t(\"general.back\")}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(ButtonBack)\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport ButtonBack from \"../ui/ButtonBack\"\n\n\nfunction AutomationBack({ t, returnUrl=\"/automation\" }) { \n  return (\n    <ButtonBack returnUrl={returnUrl} />\n  )\n}\n\nexport default withTranslation()(AutomationBack)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AutomationBack from \"../../../AutomationBack\"\n\nfunction AutomationAccountSubscriptionCreditsBase({t, history, match, children, returnUrl=\"/automation\"}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('automation.title')} >\n            <div className=\"page-options d-flex\">\n              <AutomationBack returnUrl={returnUrl} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditsBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Badge,\n} from \"tabler-react\";\n\n// Status reference\n// https://docs.celeryproject.org/en/stable/userguide/tasks.html\n\nfunction AutomationTaskResultStatus({t, history, match, status}) {\n  switch(status) {\n    case \"PENDING\":\n      return <Badge color=\"secondary\">{t(\"automation.tasks.result_statuses.pending\")}</Badge>\n      break\n    case \"STARTED\":\n      return <Badge color=\"primary\">{t(\"automation.tasks.result_statuses.started\")}</Badge>\n      break\n    case \"SUCCESS\":\n      return <Badge color=\"success\">{t(\"automation.tasks.result_statuses.success\")}</Badge>\n      break\n    case \"FAILURE\":\n      return <Badge color=\"danger\">{t(\"automation.tasks.result_statuses.failure\")}</Badge>\n      break\n    case \"RETRY\":\n      return <Badge color=\"warning\">{t(\"automation.tasks.result_statuses.retry\")}</Badge>\n      break\n    case \"REVOKED\":\n      return <Badge color=\"warning\">{t(\"automation.tasks.result_statuses.revoked\")}</Badge>\n      break\n    default:\n      return \"status unknown\"\n  }\n}\n\nexport default withTranslation()(withRouter(AutomationTaskResultStatus))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport AutomationAccountSubscriptionCreditsBase from './AutomationAccountSubscriptionCreditsBase'\nimport AutomationTaskResultStatus from \"../../../AutomationTaskResultStatus\"\n\n// const ARCHIVE_LEVEL = gql`\n//   mutation ArchiveOrganizationLevel($input: ArchiveOrganizationLevelInput!) {\n//     archiveOrganizationLevel(input: $input) {\n//       organizationLevel {\n//         id\n//         archived\n//       }\n//     }\n//   }\n// `\n\nfunction AutomationAccountSubscriptionCredits({t, history, match}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n\n  const { error, loading, data, fetchMore } = useQuery(GET_TASK_RESULT_QUERY, {\n    variables: {\n      taskName: \"costasiella.tasks.account.subscription.credits.tasks.account_subscription_credits_add_for_month\"\n    }\n  })\n\n  const headerOptions = <Card.Options>\n    <Link to={\"/automation/account/subscriptions/credits/add\"}>\n      <Button color=\"primary\" \n              size=\"sm\"\n      >\n      {t('general.new_task')}\n      </Button>\n    </Link>\n  </Card.Options>\n\n\n  // Loading\n  if (loading) return (\n    <AutomationAccountSubscriptionCreditsBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AutomationAccountSubscriptionCreditsBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AutomationAccountSubscriptionCreditsBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AutomationAccountSubscriptionCreditsBase>\n    )\n  }\n\n  console.log(\"Automation credits data:\")\n  console.log(data)\n  const taskResults = data.djangoCeleryResultTaskResults\n  // const account = data.account\n  // const scheduleItemAttendances = data.scheduleItemAttendances\n  \n\n  return (\n    <AutomationAccountSubscriptionCreditsBase>\n      <ContentCard \n        cardTitle={t('automation.account.subscriptions.credits.title_card')}\n        pageInfo={taskResults.pageInfo}\n        headerContent={headerOptions}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: taskResults.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.djangoCeleryResultTaskResults.edges\n              const pageInfo = fetchMoreResult.djangoCeleryResultTaskResults.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new invoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    djangoCeleryResultTaskResults: {\n                      __typename: previousResult.djangoCeleryResultTaskResults.__typename,\n                      edges: [ ...previousResult.djangoCeleryResultTaskResults.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n              }\n            })\n          }} \n        >\n          { (!taskResults.edges.length) ? \n            // Empty list\n            <p>{t('automation.account.subscriptions.credits.empty_list')}</p>\n            :\n            // Content\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('automation.general.status.title')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.time_completed')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_kwargs')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_result')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {taskResults.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      <AutomationTaskResultStatus status={node.status} />\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateDone).format(dateTimeFormatMoment)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.taskKwargs}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.result}\n                    </Table.Col>\n                    <Table.Col>\n\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          }\n        </ContentCard>\n    </AutomationAccountSubscriptionCreditsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCredits))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const AUTOMATION_ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA = Yup.object().shape({\n  subscriptionYear: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  subscriptionMonth: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid,\n    Icon\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nfunction AutomationAccountSubscriptionCreditForm({ t, history, isSubmitting, errors, returnUrl}) {\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_year')}>\n              <Field type=\"number\" \n                      name=\"subscriptionYear\" \n                      className={(errors.subscriptionYear) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionYear\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_month')}>\n              <Field type=\"number\" \n                      name=\"subscriptionMonth\" \n                      className={(errors.subscriptionMonth) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionMonth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n         color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n          >\n          {t('general.new_task')} <Icon name=\"chevron-right\" />\n        </Button>\n        <Link to={returnUrl}>\n          <Button color=\"link\">\n            {t('general.cancel')}\n          </Button>\n        </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n  \nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport { AUTOMATION_ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA } from './yupSchema'\nimport AutomationAccountSubscriptionCreditForm from './AutomationAccountSubscriptionCreditForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n// import SiteWrapper from \"../../SiteWrapper\"\n// import HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport AutomationAccountSubscriptionCreditsBase from './AutomationAccountSubscriptionCreditsBase'\n\n\nconst ADD_TASK = gql`\n  mutation CreateAccountSubscriptionCreditForMonth($input:CreateAccountSubscriptionCreditForMonthInput!) {\n    createAccountSubscriptionCreditForMonth(input: $input) {\n      ok\n    }\n  }\n`\n\n\nfunction AutomationAccountSubscriptionCreditAdd({ t, history }) {\n  const [addTask] = useMutation(ADD_TASK)\n  const returnUrl = \"/automation/account/subscriptions/credits\"\n\n  return (\n    <AutomationAccountSubscriptionCreditsBase returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('automation.account.subscriptions.credits.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            subscriptionYear: new Date().getFullYear(), \n            subscriptionMonth: new Date().getMonth() + 1 }}\n          validationSchema={AUTOMATION_ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addTask({ variables: {\n                input: {\n                  month: values.subscriptionMonth,\n                  year: values.subscriptionYear\n                }\n              }, refetchQueries: [\n                  {query: GET_TASK_RESULT_QUERY, \n                    variables: {\n                      taskName: \"costasiella.tasks.account.subscription.credits.tasks.account_subscription_credits_add_for_month\"\n                  }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('automation.account.subscriptions.credits.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <AutomationAccountSubscriptionCreditForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </AutomationAccountSubscriptionCreditsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AutomationBack from \"../../../AutomationBack\"\n\nfunction AutomationAccountSubscriptionCreditExpirationBase({t, history, match, children, returnUrl=\"/automation\"}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('automation.title')} >\n            <div className=\"page-options d-flex\">\n              <AutomationBack returnUrl={returnUrl} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditExpirationBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\n\nimport {\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport AutomationAccountSubscriptionCreditExpirationBase from './AutomationAccountSubscriptionCreditExpirationBase'\nimport AutomationTaskResultStatus from \"../../../AutomationTaskResultStatus\"\n\nfunction AutomationAccountSubscriptionCreditExpiration({t, history, match}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n\n  const { error, loading, data, fetchMore } = useQuery(GET_TASK_RESULT_QUERY, {\n    variables: {\n      taskName: \"costasiella.tasks.account.subscription.credits.tasks.account_subscription_credits_expire\"\n    }\n  })\n\n  const headerOptions = <Card.Options>\n    <Link to={\"/automation/account/subscriptions/credits_expiration/add\"}>\n      <Button color=\"primary\" \n              size=\"sm\"\n      >\n      {t('general.new_task')}\n      </Button>\n    </Link>\n  </Card.Options>\n\n\n  // Loading\n  if (loading) return (\n    <AutomationAccountSubscriptionCreditExpirationBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AutomationAccountSubscriptionCreditExpirationBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AutomationAccountSubscriptionCreditExpirationBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AutomationAccountSubscriptionCreditExpirationBase>\n    )\n  }\n\n  console.log(\"Automation credits data:\")\n  console.log(data)\n  const taskResults = data.djangoCeleryResultTaskResults\n  \n\n  return (\n    <AutomationAccountSubscriptionCreditExpirationBase>\n      <ContentCard \n        cardTitle={t('automation.account.subscriptions.credits_expiration.title_card')}\n        pageInfo={taskResults.pageInfo}\n        headerContent={headerOptions}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: taskResults.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.djangoCeleryResultTaskResults.edges\n              const pageInfo = fetchMoreResult.djangoCeleryResultTaskResults.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new invoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    djangoCeleryResultTaskResults: {\n                      __typename: previousResult.djangoCeleryResultTaskResults.__typename,\n                      edges: [ ...previousResult.djangoCeleryResultTaskResults.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n              }\n            })\n          }} \n        >\n          { (!taskResults.edges.length) ? \n            // Empty list\n            <p>{t('automation.account.subscriptions.credits.empty_list')}</p>\n            :\n            // Content\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('automation.general.status.title')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.time_completed')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_kwargs')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_result')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {taskResults.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      <AutomationTaskResultStatus status={node.status} />\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateDone).format(dateTimeFormatMoment)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.taskKwargs}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.result}\n                    </Table.Col>\n                    <Table.Col>\n\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          }\n        </ContentCard>\n    </AutomationAccountSubscriptionCreditExpirationBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditExpiration))","// @flow\n\nimport React, {useState} from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon\n} from \"tabler-react\"\n// import SiteWrapper from \"../../SiteWrapper\"\n// import HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport AutomationAccountSubscriptionCreditExpirationBase from './AutomationAccountSubscriptionCreditExpirationBase'\n\n\nconst ADD_TASK = gql`\n  mutation ExpireAccountSubscriptionCredit($input: ExpireAccountSubscriptionCreditInput!) {\n    expireAccountSubscriptionCredit(input:$input) {\n      ok\n    }\n  }\n`\n\n\nfunction AutomationAccountSubscriptionCreditExpirationAdd({ t, history }) {\n  const [addTask] = useMutation(ADD_TASK)\n  let [isSubmitting, setSubmitting] = useState(false)\n  const returnUrl = \"/automation/account/subscriptions/credits_expiration\"\n\n  return (\n    <AutomationAccountSubscriptionCreditExpirationBase returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('automation.account.subscriptions.credits_expiration.title_add')}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <Grid.Row>\n            <Grid.Col>\n              {t(\"automation.account.subscriptions.credits_expiration.explanation_new_expiration\")}\n            </Grid.Col>\n          </Grid.Row>\n        </Card.Body>\n        <Card.Footer>\n          <Button \n          color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n            onClick={() => {\n              setSubmitting(true)\n              addTask({ variables: {\n                input: {}\n              }, refetchQueries: [\n                {query: GET_TASK_RESULT_QUERY, \n                  variables: {\n                    taskName: \"costasiella.tasks.account.subscription.credits.tasks.account_subscription_credits_expire\"\n                }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('automation.account.subscriptions.credits_expiration.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n            }}\n          >\n            {t('general.new_task')} <Icon name=\"chevron-right\" />\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\">\n              {t('general.cancel')}\n            </Button>\n          </Link>\n        </Card.Footer>\n      </Card>\n    </AutomationAccountSubscriptionCreditExpirationBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditExpirationAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AutomationBack from \"../../../AutomationBack\"\n\nfunction AutomationAccountSubscriptionInvoicesBase({t, history, match, children, returnUrl=\"/automation\"}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('automation.title')} >\n            <div className=\"page-options d-flex\">\n              <AutomationBack returnUrl={returnUrl} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionInvoicesBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport AutomationAccountSubscriptionInvoicesBase from './AutomationAccountSubscriptionInvoicesBase'\nimport AutomationTaskResultStatus from \"../../../AutomationTaskResultStatus\"\n\n// const ARCHIVE_LEVEL = gql`h\n//   mutation ArchiveOrganizationLevel($input: ArchiveOrganizationLevelInput!) {\n//     archiveOrganizationLevel(input: $input) {\n//       organizationLevel {\n//         id\n//         archived\n//       }\n//     }\n//   }\n// `\n\nfunction AutomationAccountSubscriptionInvoices({t, history, match}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n\n  const { error, loading, data, fetchMore } = useQuery(GET_TASK_RESULT_QUERY, {\n    variables: {\n      taskName: \"costasiella.tasks.account.subscription.invoices.tasks.account_subscription_invoices_add_for_month\"\n    }\n  })\n\n  const headerOptions = <Card.Options>\n    <Link to={\"/automation/account/subscriptions/invoices/add\"}>\n      <Button color=\"primary\" \n              size=\"sm\"\n      >\n      {t('general.new_task')}\n      </Button>\n    </Link>\n  </Card.Options>\n\n\n  // Loading\n  if (loading) return (\n    <AutomationAccountSubscriptionInvoicesBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AutomationAccountSubscriptionInvoicesBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AutomationAccountSubscriptionInvoicesBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AutomationAccountSubscriptionInvoicesBase>\n    )\n  }\n\n  console.log(\"Automation invoices data:\")\n  console.log(data)\n  const taskResults = data.djangoCeleryResultTaskResults\n  // const account = data.account\n  // const scheduleItemAttendances = data.scheduleItemAttendances\n  \n\n  return (\n    <AutomationAccountSubscriptionInvoicesBase>\n      <ContentCard \n        cardTitle={t('automation.account.subscriptions.invoices.title_card')}\n        pageInfo={taskResults.pageInfo}\n        headerContent={headerOptions}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: taskResults.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.djangoCeleryResultTaskResults.edges\n              const pageInfo = fetchMoreResult.djangoCeleryResultTaskResults.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new invoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    djangoCeleryResultTaskResults: {\n                      __typename: previousResult.djangoCeleryResultTaskResults.__typename,\n                      edges: [ ...previousResult.djangoCeleryResultTaskResults.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n              }\n            })\n          }} \n        >\n          { (!taskResults.edges.length) ? \n            // Empty list\n            <p>{t('automation.account.subscriptions.invoices.empty_list')}</p>\n            :\n            // Content\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('automation.general.status.title')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.time_completed')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_kwargs')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_result')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {taskResults.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      <AutomationTaskResultStatus status={node.status} />\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateDone).format(dateTimeFormatMoment)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.taskKwargs}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.result}\n                    </Table.Col>\n                    <Table.Col>\n\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          }\n        </ContentCard>\n    </AutomationAccountSubscriptionInvoicesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionInvoices))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const AUTOMATION_ACCOUNT_SUBSCRIPTION_INVOICES_SCHEMA = Yup.object().shape({\n  subscriptionYear: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  subscriptionMonth: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  invoiceDate: Yup.string()\n    .required(),\n  })\n","import React, { useContext } from 'react'\nimport DatePicker from \"react-datepicker\"\nimport { withTranslation } from 'react-i18next'\n\nimport AppSettingsContext from \"../context/AppSettingsContext\"\n\n\nfunction CSDatePicker ({t, selected, onChange=f=>f, onBlur=f=>f, className=\"form-control\", isClearable=true, placeholderText=\"\"}) {\n  const appSettings = useContext(AppSettingsContext)\n  const sysDateFormat = appSettings.dateFormat\n  let dateFormat\n\n  switch (sysDateFormat) {\n    case \"MM-DD-YYYY\":\n      dateFormat = \"MM-dd-yyyy\"\n      break\n    case \"DD-MM-YYYY\":\n      dateFormat = \"dd-MM-yyyy\"\n      break\n    default:\n      dateFormat = \"yyyy-MM-dd\"\n  }\n\n\n  return (\n    <DatePicker \n        todayButton={t('general.today')}\n        dateFormat={dateFormat}\n        selected={selected}\n        placeholderText={(placeholderText) ? placeholderText : t('datepicker.placeholder')}\n        isClearable={isClearable}\n        className={className}\n        showMonthDropdown\n        showYearDropdown\n        dropdownMode=\"select\"\n        onChange={(date) => onChange(date)}\n        onBlur={() => onBlur()}\n    />\n  )\n}\n\nexport default withTranslation()(CSDatePicker)","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { v4 } from \"uuid\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid,\n    Icon\n  } from \"tabler-react\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport CSDatePicker from \"../../../../ui/CSDatePicker\"\n\n\nfunction AutomationAccountSubscriptionInvoicesForm({ t, history, isSubmitting, errors, returnUrl}) {\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_year')}>\n              <Field type=\"number\" \n                      name=\"subscriptionYear\" \n                      className={(errors.subscriptionYear) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionYear\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_month')}>\n              <Field type=\"number\" \n                      name=\"subscriptionMonth\" \n                      className={(errors.subscriptionMonth) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionMonth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('automation.account.subscriptions.invoices.invoice_date')}>\n              <Field component=\"select\" \n                    name=\"invoiceDate\" \n                    className={(errors.invoiceDate) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"today\" key={v4()}>{t('automation.account.subscriptions.invoices.today')}</option>\n                <option value=\"first_of_month\" key={v4()}>{t('automation.account.subscriptions.invoices.invoice_date_first_day_month')}</option>                \n              </Field>\n              <ErrorMessage name=\"invoiceDate\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.description')}>\n              <Field type=\"text\" \n                      name=\"description\" \n                      className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n         color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n          >\n          {t('general.new_task')} <Icon name=\"chevron-right\" />\n        </Button>\n        <Link to={returnUrl}>\n          <Button color=\"link\">\n            {t('general.cancel')}\n          </Button>\n        </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n  \nexport default withTranslation()(withRouter(AutomationAccountSubscriptionInvoicesForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport { AUTOMATION_ACCOUNT_SUBSCRIPTION_INVOICES_SCHEMA } from './yupSchema'\nimport AutomationAccountSubscriptionInvoicesForm from './AutomationAccountSubscriptionInvoicesForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n// import SiteWrapper from \"../../SiteWrapper\"\n// import HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport AutomationAccountSubscriptionInvoicesBase from './AutomationAccountSubscriptionInvoicesBase'\n\n\nconst ADD_TASK = gql`\n  mutation CreateAccountSubscriptionInvoicesForMonth($input:CreateAccountSubscriptionInvoicesForMonthInput!) {\n    createAccountSubscriptionInvoicesForMonth(input: $input) {\n      ok\n    }\n  }\n`\n\n\nfunction AutomationAccountSubscriptionCreditAdd({ t, history }) {\n  const [addTask] = useMutation(ADD_TASK)\n  const returnUrl = \"/automation/account/subscriptions/invoices\"\n\n  return (\n    <AutomationAccountSubscriptionInvoicesBase returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('automation.account.subscriptions.invoices.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            subscriptionYear: new Date().getFullYear(), \n            subscriptionMonth: new Date().getMonth() + 1 ,\n            description: '',\n            invoiceDate: 'today'\n          }}\n          validationSchema={AUTOMATION_ACCOUNT_SUBSCRIPTION_INVOICES_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addTask({ variables: {\n                input: {\n                  month: values.subscriptionMonth,\n                  year: values.subscriptionYear,\n                  description: values.description,\n                  invoiceDate: values.invoiceDate\n                }\n              }, refetchQueries: [\n                  {query: GET_TASK_RESULT_QUERY, \n                    variables: {\n                      taskName: \"costasiella.tasks.account.subscription.invoices.tasks.account_subscription_invoices_add_for_month\"\n                  }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('automation.account.subscriptions.invoices.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <AutomationAccountSubscriptionInvoicesForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </AutomationAccountSubscriptionInvoicesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AutomationBack from \"../../../AutomationBack\"\n\nfunction AutomationAccountSubscriptionMollieCollectionBase({t, history, match, children, returnUrl=\"/automation\"}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('automation.title')} >\n            <div className=\"page-options d-flex\">\n              <AutomationBack returnUrl={returnUrl} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionMollieCollectionBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport AutomationAccountSubscriptionMollieCollectionBase from './AutomationAccountSubscriptionMollieCollectionBase'\nimport AutomationTaskResultStatus from \"../../../AutomationTaskResultStatus\"\n\n\nfunction AutomationAccountSubscriptionMollieCollections({t, history, match}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n\n  const { error, loading, data, fetchMore } = useQuery(GET_TASK_RESULT_QUERY, {\n    variables: {\n      taskName: \"costasiella.tasks.account.subscription.invoices.tasks.account_subscription_invoices_add_for_month_mollie_collection\"\n    }\n  })\n\n  const headerOptions = <Card.Options>\n    <Link to={\"/automation/account/subscriptions/mollie_collections/add\"}>\n      <Button color=\"primary\" \n              size=\"sm\"\n      >\n      {t('general.new_task')}\n      </Button>\n    </Link>\n  </Card.Options>\n\n\n  // Loading\n  if (loading) return (\n    <AutomationAccountSubscriptionMollieCollectionBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AutomationAccountSubscriptionMollieCollectionBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AutomationAccountSubscriptionMollieCollectionBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AutomationAccountSubscriptionMollieCollectionBase>\n    )\n  }\n\n  console.log(\"Automation mollie collection data:\")\n  console.log(data)\n  const taskResults = data.djangoCeleryResultTaskResults\n  // const account = data.account\n  // const scheduleItemAttendances = data.scheduleItemAttendances\n  \n  return (\n    <AutomationAccountSubscriptionMollieCollectionBase>\n      <ContentCard \n        cardTitle={t('automation.account.subscriptions.mollie_collection.title_card')}\n        pageInfo={taskResults.pageInfo}\n        headerContent={headerOptions}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: taskResults.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.djangoCeleryResultTaskResults.edges\n              const pageInfo = fetchMoreResult.djangoCeleryResultTaskResults.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new invoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    djangoCeleryResultTaskResults: {\n                      __typename: previousResult.djangoCeleryResultTaskResults.__typename,\n                      edges: [ ...previousResult.djangoCeleryResultTaskResults.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n              }\n            })\n          }} \n        >\n          {(!taskResults.edges.length) ? \n            // Empty list\n            <p>{t('automation.account.subscriptions.mollie_collection.empty_list')}</p>\n            :\n            // Content\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('automation.general.status.title')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.time_completed')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_kwargs')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_result')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {taskResults.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      <AutomationTaskResultStatus status={node.status} />\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateDone).format(dateTimeFormatMoment)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.taskKwargs}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.result}\n                    </Table.Col>\n                    <Table.Col>\n\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          }\n        </ContentCard>\n    </AutomationAccountSubscriptionMollieCollectionBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionMollieCollections))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const AUTOMATION_ACCOUNT_SUBSCRIPTION_MOLLIE_COLLECTION_SCHEMA = Yup.object().shape({\n  subscriptionYear: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  subscriptionMonth: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid,\n    Icon\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nfunction AutomationAccountSubscriptionMollieCollectionForm({ t, history, isSubmitting, errors, returnUrl}) {\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_year')}>\n              <Field type=\"number\" \n                      name=\"subscriptionYear\" \n                      className={(errors.subscriptionYear) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionYear\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_month')}>\n              <Field type=\"number\" \n                      name=\"subscriptionMonth\" \n                      className={(errors.subscriptionMonth) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionMonth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n         color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n          >\n          {t('general.new_task')} <Icon name=\"chevron-right\" />\n        </Button>\n        <Link to={returnUrl}>\n          <Button color=\"link\">\n            {t('general.cancel')}\n          </Button>\n        </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n  \nexport default withTranslation()(withRouter(AutomationAccountSubscriptionMollieCollectionForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport { AUTOMATION_ACCOUNT_SUBSCRIPTION_MOLLIE_COLLECTION_SCHEMA } from './yupSchema'\nimport AutomationAccountSubscriptionMollieCollectionForm from './AutomationAccountSubscriptionMollieCollectionForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n// import SiteWrapper from \"../../SiteWrapper\"\n// import HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport AutomationAccountSubscriptionCreditsBase from './AutomationAccountSubscriptionMollieCollectionBase'\n\n\nconst ADD_TASK = gql`\n  mutation CreateAccountSubscriptionInvoicesMollieCollectionForMonth(\n    $input:CreateAccountSubscriptionInvoicesMollieCollectionForMonthInput!\n  ) {\n    createAccountSubscriptionInvoicesMollieCollectionForMonth(input: $input) {\n      ok\n    }\n  }\n`\n\n\nfunction AutomationAccountSubscriptionMollieCollectionAdd({ t, history }) {\n  const [addTask] = useMutation(ADD_TASK)\n  const returnUrl = \"/automation/account/subscriptions/mollie_collections\"\n\n  return (\n    <AutomationAccountSubscriptionCreditsBase returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('automation.account.subscriptions.mollie_collection.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            subscriptionYear: new Date().getFullYear(), \n            subscriptionMonth: new Date().getMonth() + 1 }}\n          validationSchema={AUTOMATION_ACCOUNT_SUBSCRIPTION_MOLLIE_COLLECTION_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addTask({ variables: {\n                input: {\n                  month: values.subscriptionMonth,\n                  year: values.subscriptionYear\n                }\n              }, refetchQueries: [\n                  {query: GET_TASK_RESULT_QUERY, \n                    variables: {\n                      taskName: \"costasiella.tasks.account.subscription.mollie_collection.tasks.account_subscription_credits_add_for_month\"\n                  }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('automation.account.subscriptions.mollie_collection.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <AutomationAccountSubscriptionMollieCollectionForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </AutomationAccountSubscriptionCreditsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionMollieCollectionAdd))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\n\nlet invoices_active\nlet orders_active\nlet costcenters_active\nlet glaccounts_active\nlet taxrates_active\nlet payment_methods_active\nlet payment_batch_collections_active\nlet payment_batch_payments_active\nlet payment_batch_categories_active\n\nconst FinanceMenu = ({ t, activeLink }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'invoices') ? invoices_active = true: invoices_active = false}\n        {(activeLink === 'orders') ? orders_active = true: orders_active = false}\n        {(activeLink === 'costcenters') ? costcenters_active = true: costcenters_active = false}\n        {(activeLink === 'glaccounts') ? glaccounts_active = true: glaccounts_active = false}\n        {(activeLink === 'taxrates') ? taxrates_active = true: taxrates_active = false}\n        {(activeLink === 'payment_methods') ? payment_methods_active = true: payment_methods_active = false}\n        {(activeLink === 'payment_batch_collections') ? payment_batch_collections_active = true: payment_batch_collections_active = false}\n        {(activeLink === 'payment_batch_payments') ? payment_batch_payments_active = true: payment_batch_payments_active = false}\n        {(activeLink === 'payment_batch_categories') ? payment_batch_categories_active = true: payment_batch_categories_active = false}\n        \n\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/invoices\"\n            icon=\"file-text\"\n            active={invoices_active}\n            >\n            {t('finance.invoices.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/orders\"\n            icon=\"file-plus\"\n            active={orders_active}\n            >\n            {t('finance.orders.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/glaccounts\"\n            icon=\"book\"\n            active={glaccounts_active}\n            >\n            {t('finance.glaccounts.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/costcenters\"\n            icon=\"compass\"\n            active={costcenters_active}\n            >\n            {t('finance.costcenters.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/taxrates\"\n            icon=\"briefcase\"\n            active={taxrates_active}\n            >\n            {t('finance.taxrates.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/paymentmethods\"\n            icon=\"credit-card\"\n            active={payment_methods_active}\n            >\n            {t('finance.payment_methods.title')}\n        </List.GroupItem>\n        <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatch\">\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to=\"#/finance/paymentbatches/collection\"\n              icon=\"download\"\n              active={payment_batch_collections_active}\n              >\n              {t('finance.payment_batch_collections.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatch\">\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to=\"#/finance/paymentbatches/payment\"\n              icon=\"upload\"\n              active={payment_batch_payments_active}\n              >\n              {t('finance.payment_batch_payments.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatchcategory\">\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to=\"#/finance/paymentbatchcategories\"\n              icon=\"list\"\n              active={payment_batch_categories_active}\n              >\n              {t('finance.payment_batch_categories.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n    </List.Group>\n);\n\nexport default withTranslation()(FinanceMenu)","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nclass FinanceHome extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Finance home props:\")\n    console.log(props)\n  }\n\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"finance.title\")} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n                <Grid.Row>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/invoices'>\n                      <StampCard header={<small>{t('finance.invoices.title')}</small>} footer={t('')} color=\"blue\" icon=\"file-text\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/orders'>\n                      <StampCard header={<small>{t('finance.orders.title')}</small>} footer={t('')} color=\"blue\" icon=\"file-plus\" />\n                      </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/glaccounts'>\n                      <StampCard header={<small>{t('finance.glaccounts.title')}</small>} footer={t('')} color=\"blue\" icon=\"book\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/costcenters'>\n                      <StampCard header={<small>{t('finance.costcenters.title')}</small>} footer={t('')} color=\"blue\" icon=\"compass\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/taxrates'>\n                      <StampCard header={<small>{t('finance.taxrates.title')}</small>} footer={t('')} color=\"blue\" icon=\"briefcase\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/paymentmethods'>\n                      <StampCard header={<small>{t('finance.payment_methods.title')}</small>} footer={t('')} color=\"blue\" icon=\"credit-card\" />\n                    </Link>\n                  </Grid.Col>\n                  <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatch\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to={'/finance/paymentbatches/collection'}>\n                        <StampCard header={<small>{t('finance.payment_batch_collections.title')}</small>} footer={t('')} color=\"blue\" icon=\"download\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                  <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatch\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to={'/finance/paymentbatches/payment'}>\n                        <StampCard header={<small>{t('finance.payment_batch_payments.title')}</small>} footer={t('')} color=\"blue\" icon=\"upload\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                  <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatchcategory\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to={'/finance/paymentbatchcategories'}>\n                        <StampCard header={<small>{t('finance.payment_batch_categories.title')}</small>} footer={t('')} color=\"blue\" icon=\"list\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                </Grid.Row>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <FinanceMenu />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(FinanceHome))","import { gql } from \"@apollo/client\"\n\nexport const GET_COSTCENTERS_QUERY = gql`\n  query FinanceCostCenters($after: String, $before: String, $archived: Boolean) {\n    financeCostcenters(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id,\n          archived,\n          name,\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_COSTCENTER_QUERY = gql`\n  query FinanceCostcenter($id: ID!) {\n    financeCostcenter(id:$id) {\n      id\n      name\n      code\n      archived\n    }\n  }\n`\n\nexport const ADD_COSTCENTER = gql`\nmutation CreateFinanceCostCenter($input:CreateFinanceCostCenterInput!) {\n  createFinanceCostcenter(input: $input) {\n    financeCostcenter{\n      id\n      archived\n      name\n      code\n    }\n  }\n}\n`\n\nexport const UPDATE_COSTCENTER = gql`\nmutation UpdateFinanceCostCenter($input: UpdateFinanceCostCenterInput!) {\n  updateFinanceCostcenter(input: $input) {\n    financeCostcenter {\n      id\n      name\n      code\n    }\n  }\n}\n`\n\nexport const ARCHIVE_COSTCENTER = gql`\nmutation ArchiveFinanceCostCenter($input: ArchiveFinanceCostCenterInput!) {\n  archiveFinanceCostcenter(input: $input) {\n    financeCostcenter {\n      id\n      archived\n    }\n  }\n}\n`","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinanceCostCentersBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to={\"/finance/costcenters\"}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financeglaccount\">\n                  <Link to={\"/finance/costcenters/add\"}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.costcenters.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <FinanceMenu activeLink='costcenters'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceCostCentersBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\n\nimport { GET_COSTCENTERS_QUERY, ARCHIVE_COSTCENTER } from \"./queries\"\nimport FinanceCostCentersBase from './FinanceCostCentersBase'\n\n\nfunction FinanceCostCenters({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('finance.costcenters.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_COSTCENTERS_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveCostcenter ] = useMutation(ARCHIVE_COSTCENTER)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <FinanceCostCentersBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )\n\n  if (error) return (\n    <FinanceCostCentersBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.costcenters.error_loading')}</p>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )\n\n  const costcenters = data.financeCostcenters\n\n  // Empty list\n  if (!costcenters.edges.length) { return (\n    <FinanceCostCentersBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('finance.costcenters.empty_list') : t(\"finance.costcenters.empty_archive\")}\n        </p>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )}\n\n  return (\n    <FinanceCostCentersBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}\n                    pageInfo={costcenters.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: costcenters.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.financeCostcenters.edges\n                        const pageInfo = fetchMoreResult.financeCostcenters.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new costcenters at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              financeCostcenters: {\n                                __typename: previousResult.financeCostcenters.__typename,\n                                edges: [ ...previousResult.financeCostcenters.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} \n        >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {costcenters.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.code}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/finance/costcenters/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveCostcenter({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_COSTCENTERS_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceCostCenters))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const COSTCENTER_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_COSTCENTERS_QUERY, ADD_COSTCENTER } from './queries'\nimport { COSTCENTER_SCHEMA } from './yupSchema'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceCostCentersBase from './FinanceCostCentersBase';\n\n\nfunction FinanceCostCenterAdd({ t, history }) {\n  const returnUrl = \"/finance/costcenters\"\n  const [ addCostcenter ] = useMutation(ADD_COSTCENTER)\n\n  return (\n    <FinanceCostCentersBase showBack={true}>\n      <Card title={t('finance.costcenters.title_add')}>\n        <Formik\n            initialValues={{ name: '', code: '' }}\n            validationSchema={COSTCENTER_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                addCostcenter({ variables: {\n                  input: {\n                    name: values.name, \n                    code: values.code\n                  }\n                }, refetchQueries: [\n                    {query: GET_COSTCENTERS_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data);\n                    history.push(returnUrl)\n                    toast.success((t('finance.costcenters.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n                <FoForm>\n                    <Card.Body>\n                        <Form.Group label={t('general.name')}>\n                          <Field type=\"text\" \n                                  name=\"name\" \n                                  className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                  autoComplete=\"off\" />\n                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                        <Form.Group label={t('finance.code')}>\n                          <Field type=\"text\" \n                                  name=\"code\" \n                                  className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                                  autoComplete=\"off\" />\n                          <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          color=\"primary\"\n                          className=\"pull-right\" \n                          type=\"submit\" \n                          disabled={isSubmitting}\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button color=\"link\">\n                            {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </FinanceCostCentersBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceCostCenterAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_COSTCENTERS_QUERY, GET_COSTCENTER_QUERY, UPDATE_COSTCENTER } from './queries'\nimport { COSTCENTER_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceCostCentersBase from './FinanceCostCentersBase';\n\n\nfunction FinanceCostCenterEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('finance.costcenters.title_edit')\n  const returnUrl = \"/finance/costcenters\"\n  const { loading, error, data } = useQuery(GET_COSTCENTER_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateCostcenter ] = useMutation(UPDATE_COSTCENTER)\n\n  if (loading) return (\n    <FinanceCostCentersBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )\n\n  if (error) return (\n    <FinanceCostCentersBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )\n\n  const initialData = data.financeCostcenter;\n\n  return (\n    <FinanceCostCentersBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n              code: initialData.code\n            }}\n            validationSchema={COSTCENTER_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateCostcenter({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                    code: values.code\n                  }\n                }, refetchQueries: [\n                    {query: GET_COSTCENTERS_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('finance.costcenters.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values }) => (\n                <FoForm>\n                    <Card.Body>\n                      <Form.Group label={t('general.name')}>\n                        <Field type=\"text\" \n                                name=\"name\" \n                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.code')}>\n                        <Field type=\"text\" \n                                name=\"code\" \n                                className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          className=\"pull-right\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          type=\"submit\"\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button\n                            type=\"button\" \n                            color=\"link\" \n                          >\n                              {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </FinanceCostCentersBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceCostCenterEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_GLACCOUNTS_QUERY = gql`\n  query FinanceGLAccounts($after: String, $before: String, $archived: Boolean) {\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id,\n          archived,\n          name,\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_GLACCOUNT_QUERY = gql`\n  query FinanceGLAccount($id: ID!) {\n    financeGlaccount(id:$id) {\n      id\n      name\n      code\n      archived\n    }\n  }\n`\n\nexport const ADD_GLACCOUNT = gql`\nmutation CreateFinanceGLAccount($input:CreateFinanceGLAccountInput!) {\n  createFinanceGlaccount(input: $input) {\n    financeGlaccount{\n      id\n      archived\n      name\n      code\n    }\n  }\n}\n`\n\nexport const UPDATE_GLACCOUNT = gql`\nmutation UpdateFinanceGLAccount($input: UpdateFinanceGLAccountInput!) {\n  updateFinanceGlaccount(input: $input) {\n    financeGlaccount {\n      id\n      name\n      code\n    }\n  }\n}\n`\n\nexport const ARCHIVE_GLACCOUNT = gql`\nmutation ArchiveFinanceGLAccount($input: ArchiveFinanceGLAccountInput!) {\n  archiveFinanceGlaccount(input: $input) {\n    financeGlaccount {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinanceGLAccountsBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/finance/glaccounts\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financeglaccount\">\n                  <Link to=\"/finance/glaccounts/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.glaccounts.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <FinanceMenu activeLink='glaccounts'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceGLAccountsBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\n\nimport { GET_GLACCOUNTS_QUERY, ARCHIVE_GLACCOUNT } from \"./queries\"\nimport FinanceGLAccountsBase from './FinanceGLAccountsBase'\n\n\nfunction FinanceGLAccounts({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t(\"finance.glaccounts.title\")\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_GLACCOUNTS_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveGlaccount ] = useMutation(ARCHIVE_GLACCOUNT)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )\n\n  if (error) return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.glaccounts.error_loading')}</p>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )\n\n  const glaccounts = data.financeGlaccounts\n   \n  // Empty list\n  if (!glaccounts.edges.length) { return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}\n                   headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('finance.glaccounts.empty_list') : t(\"finance.glaccounts.empty_archive\")}\n        </p>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )} \n\n  return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}\n                headerContent={headerOptions}\n                pageInfo={glaccounts.pageInfo}\n                onLoadMore={() => {\n                fetchMore({\n                  variables: {\n                    after: glaccounts.pageInfo.endCursor\n                  },\n                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                    const newEdges = fetchMoreResult.financeGlaccounts.edges\n                    const pageInfo = fetchMoreResult.financeGlaccounts.pageInfo\n\n                    return newEdges.length\n                      ? {\n                          // Put the new glaccounts at the end of the list and update `pageInfo`\n                          // so we have the new `endCursor` and `hasNextPage` values\n                          financeGlaccounts: {\n                            __typename: previousResult.financeGlaccounts.__typename,\n                            edges: [ ...previousResult.financeGlaccounts.edges, ...newEdges ],\n                            pageInfo\n                          }\n                        }\n                      : previousResult\n                  }\n                })\n              }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {glaccounts.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.code}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/finance/glaccounts/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveGlaccount({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_GLACCOUNTS_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceGLAccounts))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const GLACCOUNT_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from \"react-router-dom\"\n\nimport { GET_GLACCOUNTS_QUERY, ADD_GLACCOUNT } from './queries'\nimport { GLACCOUNT_SCHEMA } from './yupSchema'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport FinanceGLAccountsBase from './FinanceGLAccountsBase'\n\n\nfunction FinanceGLAccountAdd({t, history}) {\n  const returnUrl = \"/finance/glaccounts\"\n  const [ addGlaccount ] = useMutation(ADD_GLACCOUNT)\n\n  return (\n    <FinanceGLAccountsBase>\n      <Card title={t('finance.glaccounts.title_add')}>\n        <Formik\n          initialValues={{ name: '', code: '' }}\n          validationSchema={GLACCOUNT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addGlaccount({ variables: {\n                input: {\n                  name: values.name, \n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_GLACCOUNTS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('finance.glaccounts.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n            <FoForm>\n                <Card.Body>\n                    <Form.Group label={t('general.name')}>\n                      <Field type=\"text\" \n                              name=\"name\" \n                              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                      <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                    <Form.Group label={t('finance.code')}>\n                      <Field type=\"text\" \n                              name=\"code\" \n                              className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                      <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                </Card.Body>\n                <Card.Footer>\n                    <Button \n                      color=\"primary\"\n                      className=\"pull-right\" \n                      type=\"submit\" \n                      disabled={isSubmitting}\n                    >\n                      {t('general.submit')}\n                    </Button>\n                    <Link to={returnUrl}>\n                      <Button color=\"link\">\n                          {t('general.cancel')}\n                      </Button>\n                    </Link>\n                </Card.Footer>\n            </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </FinanceGLAccountsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceGLAccountAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql, useMutation, useQuery } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_GLACCOUNTS_QUERY, GET_GLACCOUNT_QUERY, UPDATE_GLACCOUNT } from './queries'\nimport { GLACCOUNT_SCHEMA } from './yupSchema'\n\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceGLAccountsBase from './FinanceGLAccountsBase'\n\n\nfunction FinanceGLAccountEdit({t, history, match}) {\n  const id = match.params.id\n  const returnUrl = \"/finance/glaccounts\"\n  const cardTitle = t('finance.glaccounts.title_edit')\n  const { loading, error, data } = useQuery(GET_GLACCOUNT_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateGlaccount ] = useMutation(UPDATE_GLACCOUNT)\n\n  if (loading) return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )\n\n  if (error) return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )\n\n  const initialData = data.financeGlaccount;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <FinanceGLAccountsBase>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            code: initialData.code\n          }}\n          validationSchema={GLACCOUNT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateGlaccount({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name,\n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_GLACCOUNTS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('finance.glaccounts.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <FoForm>\n                <Card.Body>\n                  <Form.Group label={t('general.name')}>\n                    <Field type=\"text\" \n                            name=\"name\" \n                            className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                            autoComplete=\"off\" />\n                    <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                  <Form.Group label={t('finance.code')}>\n                    <Field type=\"text\" \n                            name=\"code\" \n                            className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                            autoComplete=\"off\" />\n                    <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Card.Body>\n                <Card.Footer>\n                    <Button \n                      className=\"pull-right\"\n                      color=\"primary\"\n                      disabled={isSubmitting}\n                      type=\"submit\"\n                    >\n                      {t('general.submit')}\n                    </Button>\n                    <Link to={returnUrl}>\n                      <Button\n                        type=\"button\" \n                        color=\"link\" \n                      >\n                          {t('general.cancel')}\n                      </Button>\n                    </Link>\n                </Card.Footer>\n            </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </FinanceGLAccountsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceGLAccountEdit))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let queryVars = {}\n\n  let status = localStorage.getItem(CSLS.FINANCE_INVOICES_FILTER_STATUS)\n  if (status) {\n    queryVars.status = status\n  } else {\n    queryVars.status = undefined\n  }\n  \n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from './tools'\n\n\nfunction getDefaultValue(value) {\n  let defaultValue = localStorage.getItem(value)\n  console.log(defaultValue)\n\n  if (defaultValue) {\n    return defaultValue\n  } else {\n    console.log('return empty default')\n    return \"\"\n  }\n}\n\n\nfunction updateLocalStorageAndRefetch(key, value, refetch) {\n  localStorage.setItem(key, value)\n  refetch(get_list_query_variables())\n\n}\n\nconst selectClass = \"form-control mb-2\"\n\n\nconst FinanceInvoicesFilter = ({ t, history, data, refetch }) => (\n  <div>\n    {/* Status */}\n    <select \n      className={selectClass}\n      value={getDefaultValue(CSLS.FINANCE_INVOICES_FILTER_STATUS)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.FINANCE_INVOICES_FILTER_STATUS,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"finance.invoices.statuses.all\")}</option>\n      <option value=\"DRAFT\" key={v4()}>{t('finance.invoices.statuses.draft')}</option>\n      <option value=\"SENT\" key={v4()}>{t('finance.invoices.statuses.sent')}</option>\n      <option value=\"PAID\" key={v4()}>{t('finance.invoices.statuses.paid')}</option>\n      <option value=\"CANCELLED\" key={v4()}>{t('finance.invoices.statuses.cancelled')}</option>\n    </select>\n  </div>\n);\n\nexport default withTranslation()(withRouter(FinanceInvoicesFilter))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Container,\n  Grid,\n  Icon,\n  Page\n} from \"tabler-react\";\n\nimport SiteWrapper from '../../SiteWrapper'\nimport FinanceInvoicesFilter from \"./FinanceInvoicesFilter\"\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinanceInvoicesBase ({ t, history, children, refetch }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/finance/invoices/groups\" \n                    className='btn btn-outline-secondary btn-sm'>\n                <Icon prefix=\"fe\" name=\"folder\" /> {t('general.groups')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n              <FinanceInvoicesFilter refetch={refetch}/>\n              <h5>{t(\"general.menu\")}</h5>\n              <FinanceMenu activeLink='invoices'/>\n            </Grid.Col>\n          </Grid.Row>\n          </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceInvoicesBase))","// @flow\n\nimport React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Badge\n} from \"tabler-react\";\n\n\nclass FinanceInvoicesStatus extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"finance costcenter edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const history = this.props.history\n    const status = this.props.status\n\n    switch (status) {\n      case \"DRAFT\":\n        return <Badge color=\"secondary\">{t('finance.invoices.status.DRAFT')}</Badge>\n        break\n      case \"SENT\":\n        return <Badge color=\"primary\">{t('finance.invoices.status.SENT')}</Badge>\n        break\n      case \"PAID\":\n        return <Badge color=\"success\">{t('finance.invoices.status.PAID')}</Badge>\n        break\n      case \"CANCELLED\":\n        return <Badge color=\"warning\">{t('finance.invoices.status.CANCELLED')}</Badge>\n        break\n      default:\n        return t('finance.invoices.status.NOT_FOUND') \n    }\n  }\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoicesStatus))","import { gql } from \"@apollo/client\"\n\nexport const GET_INVOICES_QUERY = gql`\n  query FinanceInvoices($after: String, $before: String, $status: String) {\n    financeInvoices(first: 15, before: $before, after: $after, status: $status) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          invoiceNumber\n          status\n          summary\n          relationCompany\n          relationContactName\n          dateSent\n          dateDue\n          total\n          totalDisplay\n          balance\n          balanceDisplay\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INVOICE_QUERY = gql`\n  query FinanceInvoice($id: ID!, $before: String, $after: String) {\n    financeInvoice(id:$id) {\n      id\n      account {\n        id\n        fullName\n      }\n      financePaymentMethod {\n        id\n        name\n      }\n      relationCompany\n      relationCompanyRegistration\n      relationCompanyTaxRegistration\n      relationContactName\n      relationAddress\n      relationPostcode\n      relationCity\n      relationCountry\n      status\n      summary\n      invoiceNumber\n      dateSent\n      dateDue\n      terms\n      footer\n      note\n      subtotalDisplay\n      taxDisplay\n      total\n      totalDisplay\n      paidDisplay\n      balance\n      balanceDisplay\n      creditInvoiceNumber\n      updatedAt\n      items {\n        edges {\n          node {\n            id\n            lineNumber\n            productName\n            description\n            quantity\n            price\n            financeTaxRate {\n              id\n              name\n              percentage\n              rateType\n            }\n            subtotal\n            subtotalDisplay\n            tax\n            taxDisplay\n            total\n            totalDisplay\n            financeGlaccount {\n              id\n              name\n            }\n            financeCostcenter {\n              id\n              name\n            }\n          }\n        }\n      }\n      payments {\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            id\n            amount\n            amountDisplay\n            date\n            financePaymentMethod {\n              id\n              name\n            }\n            note\n            onlinePaymentId\n          }\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    organization(id:\"T3JnYW5pemF0aW9uTm9kZToxMDA=\") {\n      id\n      name\n      address\n      phone\n      email\n      registration\n      taxRegistration\n    }\n  }\n`\n\n\nexport const UPDATE_INVOICE = gql`\n  mutation UpdateFinanceInvoice($input: UpdateFinanceInvoiceInput!) {\n    updateFinanceInvoice(input: $input) {\n      financeInvoice {\n        id\n        summary\n      }\n    }\n  }\n`\n\n\nexport const CANCEL_AND_CREATE_CREDIT_INVOICE = gql`\n  mutation CancelAndCreateCreditFinanceInvoice($input: CancelAndCreateCreditFinanceInvoiceInput!) {\n    cancelAndCreateCreditFinanceInvoice(input: $input) {\n      financeInvoice {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_FINANCE_INVOICE = gql`\n  mutation DeleteFinanceInvoice($input: DeleteFinanceInvoiceInput!) {\n    deleteFinanceInvoice(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const CREATE_INVOICE_ITEM = gql`\n  mutation CreateFinanceInvoiceItem($input: CreateFinanceInvoiceItemInput!) {\n    createFinanceInvoiceItem(input: $input) {\n      financeInvoiceItem {\n        id\n        productName\n        description\n        quantity\n        price\n        financeTaxRate {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_INVOICE_ITEM = gql`\n  mutation UpdateFinanceInvoiceItem($input: UpdateFinanceInvoiceItemInput!) {\n    updateFinanceInvoiceItem(input: $input) {\n      financeInvoiceItem {\n        id\n        productName\n        description\n        quantity\n        price\n        financeTaxRate {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const DELETE_INVOICE_ITEM = gql`\n  mutation DeleteFinanceInvoiceItem($input: DeleteFinanceInvoiceItemInput!) {\n    deleteFinanceInvoiceItem(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const DELETE_INVOICE_PAYMENT = gql`\n  mutation DeleteFinanceInvoicePayment($input: DeleteFinanceInvoicePaymentInput!) {\n    deleteFinanceInvoicePayment(input: $input) {\n      ok\n    }\n  }\n`","import React from 'react'\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\nimport {\n  Icon,\n} from \"tabler-react\";\n\n\nconst confirm_delete = ({t, msgConfirm, msgDescription, msgSuccess, deleteFunction, functionVariables}) => {\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className='custom-ui'>\n            <h1>{t('general.confirm_delete')}</h1>\n            {msgConfirm}\n            {msgDescription}\n            <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_delete_no')}</button>\n            <button\n              className=\"btn btn-danger\"\n              onClick={() => {\n                deleteFunction(functionVariables)\n                  .then(({ data }) => {\n                    console.log('got data', data);\n                    toast.success(\n                      msgSuccess, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                  })\n                onClose()\n              }}\n            >\n              <Icon name=\"trash-2\" /> {t('general.confirm_delete_yes')}\n            </button>\n          </div>\n        )\n      }\n    })\n  }\n\nexport default confirm_delete\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Table, \n  Text\n} from \"tabler-react\";\n\nimport { get_list_query_variables } from \"./tools\"\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceInvoicesBase from \"./FinanceInvoicesBase\"\nimport FinanceInvoicesStatus from \"../../ui/FinanceInvoiceStatus\"\n\nimport { GET_INVOICES_QUERY, DELETE_FINANCE_INVOICE } from \"./queries\"\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport moment from 'moment'\n\n\nfunction FinanceInvoices({ t, location, history }) {\n  // Set back location for edit invoice\n  localStorage.setItem(CSLS.FINANCE_INVOICES_EDIT_RETURN, location.pathname)\n  // Fetch data\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_INVOICES_QUERY, {\n    variables: get_list_query_variables(),\n    fetchPolicy: \"network-only\"\n  })\n  const [ deleteFinanceInvoice ] = useMutation(DELETE_FINANCE_INVOICE)\n\n  if (loading) return (\n    <FinanceInvoicesBase refetch={refetch}>\n      <ContentCard cardTitle={t('finance.invoices.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceInvoicesBase>\n  )\n  // Error\n  if (error) return (\n    <FinanceInvoicesBase refetch={refetch}>\n      <ContentCard cardTitle={t('finance.invoices.title')}>\n        <p>{t('finance.invoices.error_loading')}</p>\n      </ContentCard>\n    </FinanceInvoicesBase>\n  )\n\n  const invoices = data.financeInvoices\n\n  // Empty list\n  if (!invoices.edges.length) { return (\n    <FinanceInvoicesBase refetch={refetch}>\n      <ContentCard cardTitle={t('finance.invoices.title')}>\n        <p>\n          {t('finance.invoices.empty_list')}\n        </p>\n      </ContentCard>\n    </FinanceInvoicesBase>\n  )}\n\n  return (\n    <FinanceInvoicesBase refetch={refetch}>\n      <ContentCard cardTitle={t('finance.invoices.title')}\n                  pageInfo={invoices.pageInfo}\n                  onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: invoices.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.financeInvoices.edges\n                        const pageInfo = fetchMoreResult.financeInvoices.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new invoices at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              financeInvoices: {\n                                __typename: previousResult.financeInvoices.__typename,\n                                edges: [ ...previousResult.financeInvoices.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} \n        >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoices.invoice_number')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoices.relation')} & {t('finance.invoices.summary')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoices.date')} & {t('finance.invoices.due')}</Table.ColHeader>\n              {/* <Table.ColHeader>{t('finance.invoices.due')}</Table.ColHeader> */}\n              <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.balance')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {invoices.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    <FinanceInvoicesStatus status={node.status} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <Link to={\"/finance/invoices/edit/\" + node.id}>\n                      {node.invoiceNumber}\n                    </Link>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.account) ? \n                      <Link to={\"/relations/accounts/\" + node.account.id + \"/profile\"}>\n                        {(node.relationCompany) ? node.relationCompany: node.relationContactName}\n                      </Link> :\n                      (node.relationCompany) ? node.relationCompany: node.relationContactName\n                    }\n                    <br />\n                    <Text.Small color=\"gray\">{node.summary.trunc(20)}</Text.Small>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {moment(node.dateSent).format('LL')} <br />\n                    {moment(node.dateDue).format('LL')}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.totalDisplay}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.balanceDisplay}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={\"/finance/invoices/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"finance.invoices.delete_confirm_msg\"),\n                          msgDescription: <p>{node.invoiceNumber}</p>,\n                          msgSuccess: t('finance.invoices.deleted'),\n                          deleteFunction: deleteFinanceInvoice,\n                          functionVariables: { \n                            variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, \n                            refetchQueries: [\n                              {query: GET_INVOICES_QUERY, variables: get_list_query_variables() } \n                            ]\n                          }\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceInvoicesBase>\n  )\n} \n\nexport default withTranslation()(withRouter(FinanceInvoices))","import CSLS from './cs_local_storage'\nimport { CSAuth } from './authentication';\n\nexport function refreshTokenAndOpenExportLinkInNewTab(doTokenRefresh, history, exportUrl) {  \n  const refreshToken = localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN)\n\n  doTokenRefresh({ variables: { refreshToken: refreshToken }})\n    .then(({data}) => {\n      CSAuth.updateTokenInfo(data.refreshToken)\n      const token = data.refreshToken.token\n      //Add authentication headers in URL\n      var url = `${exportUrl}/${token}`;\n\n      window.open(url, \"_blank\")\n      // history.push(export_url)\n    }).catch((error) => {\n      console.log(error)\n      history.push(\"/#/user/login\")\n    })\n}\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\n\n\nfunction FinanceInvoiceEditBase({t, match, history, children}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n          <Container>\n            {children}\n          </Container>\n      </div>\n    </SiteWrapper>\n  ) \n}\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditBase))","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { get_list_query_variables } from \"../tools\"\nimport { CREATE_INVOICE_ITEM, GET_INVOICES_QUERY, GET_INVOICE_QUERY } from \"../queries\"\nimport { toast } from 'react-toastify'\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction FinanceInvoiceItemAdd({t, match}) {\n  const [addInvoiceItem, { data }] = useMutation(CREATE_INVOICE_ITEM)\n\n    return (\n      <button className=\"btn btn-primary btn-sm\" \n        title={t('general.delete')} \n        href=\"\"\n        onClick={() => {\n          addInvoiceItem({ variables: {\n            input: {\n              financeInvoice: match.params.id              \n            }\n          }, refetchQueries: [\n              {query: GET_INVOICE_QUERY, variables: {id: match.params.id}}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('finance.invoice.toast_add_item_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              // setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              // setSubmitting(false)\n            })\n      }}>\n        <Icon prefix=\"fe\" name=\"plus\" /> { ' ' }\n        {t('finance.invoice.item_add')}\n      </button>\n    )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceItemAdd))\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { get_list_query_variables } from \"../tools\"\nimport { DELETE_INVOICE_ITEM, GET_INVOICES_QUERY, GET_INVOICE_QUERY } from \"../queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\n\nfunction FinanceInvoiceItemDelete({t, match, node}) {\n  const [deleteInvoiceItem, { data }] = useMutation(DELETE_INVOICE_ITEM)\n\n    return (\n      <button className=\"icon btn btn-link btn-sm\" \n        title={t('general.delete')} \n        href=\"\"\n        onClick={() => {\n          confirm_delete({\n            t: t,\n            msgConfirm: t(\"finance.invoices.item_delete_confirm_msg\"),\n            msgDescription: <p>{node.productName} <br /> {node.description}</p>,\n            msgSuccess: t('finance.invoices.item_deleted'),\n            deleteFunction: deleteInvoiceItem,\n            functionVariables: { \n              variables: {\n                input: {\n                  id: node.id\n                }\n              }, \n              refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables() },\n                {query: GET_INVOICE_QUERY, variables: {id: match.params.id} },\n              ]\n            }\n          })\n      }}>\n        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n      </button>\n    )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceItemDelete))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n  Grid,\n  Icon\n} from \"tabler-react\"\n\nimport FinanceInvoiceItemDelete from './FinanceInvoiceItemDelete'\n\n\nconst FinanceInvoiceItemEditForm = ({ t, isSubmitting, errors, node, touched, handleChange, setFieldTouched, inputData }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Grid.Row>\n      {/* <Icon name=\"more-vertical\" /> */}\n        <Grid.Col md={3} className=\"cs-grid-table-cell\">\n          <Form.Group>\n            <Field type=\"text\" \n                    name=\"productName\" \n                    className={(errors.productName) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"productName\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"productName\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={3} className=\"cs-grid-table-cell\">\n          <Form.Group>\n            <Field type=\"text\" \n                    name=\"description\" \n                    className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    component=\"textarea\"\n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"description\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={2} className=\"cs-grid-table-cell\">\n          <Form.Group>\n            <Field type=\"text\" \n                   name=\"quantity\" \n                   className={(errors.quantity) ? \"form-control is-invalid\" : \"form-control\"} \n                   autoComplete=\"off\" \n                   onChange={(e) => {\n                    handleChange(e)\n                    setFieldTouched(\"quantity\", true, true)\n                  }}\n            />\n            <ErrorMessage name=\"quantity\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group>\n            <Field type=\"text\" \n                    name=\"price\" \n                    className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"price\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={2} className=\"cs-grid-table-cell\">\n          <Form.Group>\n            <Field component=\"select\" \n                  name=\"financeTaxRate\" \n                  className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\"\n                  onChange={(e) => {\n                    handleChange(e)\n                    setFieldTouched(\"financeTaxRate\", true, true)\n                  }}\n            >\n              {console.log(\"query data in form finance tax rate:\")}\n              {console.log(inputData)}\n              <option value=\"\" key={v4()}></option>\n              {inputData.financeTaxRates.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={1} className=\"cs-grid-table-cell\">\n          <span className=\"float-right\">{node.totalDisplay}</span> <br /><br />\n          {(Object.keys(touched).length === 0) ? \"\" :\n            <Button \n              color=\"primary\"\n              className=\"pull-right\" \n              type=\"submit\" \n              disabled={isSubmitting}\n            >\n              {t('general.submit')}\n            </Button>\n          }\n        </Grid.Col>\n        <Grid.Col md={1} className=\"cs-grid-table-cell\">\n          <span className=\"float-right\"><FinanceInvoiceItemDelete node={node}/></span>\n        </Grid.Col>\n      </Grid.Row>\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceItemEditForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { UPDATE_INVOICE_ITEM } from \"../queries\"\nimport FinanceInvoiceItemEditForm from './FinanceInvoiceItemEditForm'\n\n\nfunction FinanceInvoiceItemEdit({t, initialValues, node, inputData}) {\n  const [updateInvoiceItem, { data }] = useMutation(UPDATE_INVOICE_ITEM)\n\n    return (\n      <Formik\n        initialValues={{\n          productName: initialValues.productName,\n          description: initialValues.description,\n          price: initialValues.price,\n          quantity: initialValues.quantity,\n          financeTaxRate: (initialValues.financeTaxRate) ? initialValues.financeTaxRate.id : null\n        }}\n        // validationSchema={INVOICE_GROUP_SCHEMA}\n        onSubmit={(values, { setSubmitting, setTouched }) => {\n          console.log('submit values:')\n          console.log(values)\n\n          updateInvoiceItem({ variables: {\n            input: {\n              id: initialValues.id,\n              productName: values.productName, \n              description: values.description,\n              price: values.price,\n              quantity: values.quantity,\n              financeTaxRate: values.financeTaxRate\n            }\n          }, refetchQueries: [\n              // {query: GET_INVOICES_QUERY, variables: get_list_query_variables()}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('finance.invoice.item.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n              setTouched({})\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n          }}\n      >\n        {({ isSubmitting, errors, values, touched, handleChange, setFieldTouched }) => (\n          <FinanceInvoiceItemEditForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            touched={touched}\n            handleChange={handleChange}\n            setFieldTouched={setFieldTouched}\n            node={node}\n            inputData={inputData}\n          >\n          </FinanceInvoiceItemEditForm>   \n        )}\n      </Formik>\n    )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceItemEdit))","// @flow\n\nimport React, { useCallback, useState } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport { toast } from 'react-toastify'\n\nimport {\n  Card,\n  Dimmer, \n  Grid, \n} from \"tabler-react\"\n\nimport FinanceInvoiceItemAdd from \"./FinanceInvoiceItemAdd\"\nimport { GET_INVOICE_QUERY } from '../queries'\n\nimport FinanceInvoiceItemEdit from './FinanceInvoiceItemEdit'\n\n\nexport const UPDATE_INVOICE_ITEM = gql`\n  mutation UpdateFinanceInvoiceItem($input: UpdateFinanceInvoiceItemInput!) {\n    updateFinanceInvoiceItem(input: $input) {\n      financeInvoiceItem {\n        id\n      }\n    }\n  }\n`\n\nfunction FinanceInvoiceEditItems ({ t, history, match, refetchInvoice, inputData }) {\n  const [updateItem, { data }] = useMutation(UPDATE_INVOICE_ITEM)\n  const [ updating, setUpdating ] = useState(false)\n\n  const onDragEnd = useCallback((result) => {\n    // the only one that is required\n    console.log('onDragEnd triggered...')\n    console.log(result)\n    const { draggableId, destination, source, reason } = result\n    console.log(source)\n    console.log(destination)\n    console.log(reason)\n\n    // Nothing to do, nowhere to go...\n    console.log(\"drop cancelled...\")\n    if (!destination || reason === 'CANCEL') {\n      return\n    }\n\n    // Moved back to the same spot\n    console.log(\"dropped to the same spot\")\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return\n    }\n\n    updateLineNumber({\n      node_id: draggableId,\n      line_number: destination.index\n    })\n\n  }, []);\n\n\n  const updateLineNumber = ({ node_id, line_number }) => {\n    setUpdating(true)\n    updateItem({ \n      variables: { \n        input: {\n          id: node_id,\n          lineNumber: line_number\n        } \n      },\n      refetchQueries: [\n        { query: GET_INVOICE_QUERY, variables: { id: inputData.financeInvoice.id }}\n      ]\n    }).then(({ data }) => {\n      console.log('got data', data)\n      toast.success((t('finance.invoice.saved_item_sorting')), {\n          position: toast.POSITION.BOTTOM_RIGHT\n      })\n      setTimeout(() => setUpdating(false), 125)\n    }).catch((error) => {\n      toast.error((t('general.toast_server_error')) +  error, {\n          position: toast.POSITION.BOTTOM_RIGHT\n      })\n      console.log('there was an error sending the query', error)\n      setTimeout(() => setUpdating(false), 125)\n    })\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd} >\n      <Card statusColor=\"blue\">\n        <Card.Header>\n          <Card.Title>{t('general.items')}</Card.Title>\n          <Card.Options>\n            <FinanceInvoiceItemAdd />\n          </Card.Options>\n        </Card.Header>\n        <Card.Body>\n          <Dimmer active={updating} loader={updating}>\n              <Grid.Row className=\"cs-grid-table-header\">\n                <Grid.Col md={3} className=\"cs-grid-table-cell\">{t(\"general.product\")}</Grid.Col>\n                <Grid.Col md={3} className=\"cs-grid-table-cell\">{t(\"general.description\")}</Grid.Col>\n                <Grid.Col md={2} className=\"cs-grid-table-cell\">{t(\"general.quantity_short_and_price\")}</Grid.Col>\n                <Grid.Col md={2} className=\"cs-grid-table-cell\">{t(\"general.tax\")}</Grid.Col>\n                <Grid.Col md={1} className=\"cs-grid-table-cell\"><span className=\"float-right\">{t(\"general.total\")}</span></Grid.Col>\n                <Grid.Col md={1} className=\"cs-grid-table-cell\"></Grid.Col>\n              </Grid.Row>\n              <Droppable droppableId=\"invoice_items\">\n                {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef} \n                      {...provided.droppableProps} \n                    >\n                      {inputData.financeInvoice.items.edges.map(({ node }, idx) => (\n                        <Draggable \n                          draggableId={node.id}\n                          index={idx}\n                          key={node.id}\n                        >\n                          {(provided, snapshot) => (\n                              <div \n                                ref={provided.innerRef}\n                                index={node.lineNumber}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                >\n                                <FinanceInvoiceItemEdit initialValues={node} inputData={inputData} node={node} />\n                              </div>\n                          )}\n                        </Draggable>\n                      ))}\n                      {provided.placeholder}\n                    </div>\n                )}\n              </Droppable>\n          </Dimmer>\n        </Card.Body>\n      </Card>\n    </DragDropContext>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditItems))","export const tinymceBasicConf = {\n    resize: true,\n    menubar: false,\n    plugins: 'link image code lists paste fullscreen',\n    statusbar: false,\n    toolbar: ' undo redo | formatselect | bold italic strikethrough | bullist numlist | alignleft aligncenter alignright | link image | pastetext code | fullscreen',    \n}\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n\n// Use editor as controlled component:\n// https://github.com/tinymce/tinymce-react/blob/master/README.md\n\nconst FinanceInvoiceEditTermsForm = ({ t, isSubmitting, values, errors, touched, handleChange, setFieldTouched, setFieldValue }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group label={t('general.terms_and_conditions')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"terms\"\n          initialValue={values.terms}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldValue(\"terms\", e.target.getContent())\n            setFieldTouched(\"terms\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"terms\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('general.submit')}\n      </Button>\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditTermsForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n\n// Use editor as controlled component:\n// https://github.com/tinymce/tinymce-react/blob/master/README.md\n\nconst FinanceInvoiceEditFooterForm = ({ t, isSubmitting, values, errors, touched, handleChange, setFieldTouched, setFieldValue }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group label={t('general.footer')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"footer\"\n          initialValue={values.footer}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldValue(\"footer\", e.target.getContent())\n            setFieldTouched(\"footer\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"footer\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('general.submit')}\n      </Button>\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditFooterForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n// Use editor as controlled component:\n// https://github.com/tinymce/tinymce-react/blob/master/README.md\n\nconst FinanceInvoiceEditNoteForm = ({ t, isSubmitting, values, errors, handleChange, submitForm, setFieldTouched, setFieldValue }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group label={t('general.note')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"note\"\n          initialValue={values.note}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldValue(\"note\", e.target.getContent())\n            setFieldTouched(\"note\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('general.submit')}\n      </Button>\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditNoteForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport {\n  Tab,\n  TabbedCard\n} from \"tabler-react\"\n\n\nimport { get_list_query_variables } from \"../tools\"\nimport { UPDATE_INVOICE, GET_INVOICE_QUERY } from \"../queries\"\nimport FinanceInvoiceEditTermsForm from \"./FinanceInvoiceEditTermsForm\"\nimport FinanceInvoiceEditFooterForm from \"./FinanceInvoiceEditFooterForm\"\nimport FinanceInvoiceEditNoteForm from \"./FinanceInvoiceEditNoteForm\"\n\n\nfunction FinanceInvoiceEditAdditional({t, history, match, initialData}) {\n  const id = match.params.id\n  const [ updateInvoice ] = useMutation(UPDATE_INVOICE)\n\n  return (\n    <TabbedCard initialTab={t('general.terms_and_conditions')}>\n      <Tab title={t('general.terms_and_conditions')}>\n        <Formik\n          initialValues={{ \n            terms: initialData.financeInvoice.terms, \n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                terms: values.terms, \n              }\n            }, refetchQueries: [\n                {query: GET_INVOICE_QUERY, variables: {id: id}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_terms_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, handleChange, setFieldTouched, setFieldValue }) => (\n            <FinanceInvoiceEditTermsForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              touched={touched}\n              handleChange={handleChange}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n            >\n            </FinanceInvoiceEditTermsForm>\n          )}\n        </Formik>\n      </Tab>\n      <Tab title={t('general.footer')}>\n        <Formik\n          initialValues={{ \n            footer: initialData.financeInvoice.footer, \n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                footer: values.footer, \n              }\n            }, refetchQueries: [\n              {query: GET_INVOICE_QUERY, variables: {id: id}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_footer_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, handleChange, setFieldTouched, setFieldValue }) => (\n            <FinanceInvoiceEditFooterForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              handleChange={handleChange}\n              touched={touched}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n            >\n            </FinanceInvoiceEditFooterForm>\n          )}\n        </Formik>\n      </Tab>\n      <Tab title={t('general.note')}>\n        <Formik\n          initialValues={{ \n            note: initialData.financeInvoice.note, \n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                note: values.note, \n              }\n            }, refetchQueries: [\n              {query: GET_INVOICE_QUERY, variables: {id: id}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_note_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, handleChange, setFieldTouched, setFieldValue }) => (\n            <FinanceInvoiceEditNoteForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              touched={touched}\n              handleChange={handleChange}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n            >\n            </FinanceInvoiceEditNoteForm>\n          )}\n        </Formik>\n      </Tab>\n    </TabbedCard>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditAdditional))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Card\n} from \"tabler-react\";\n\n\nconst FinanceInvoiceEditBalance = ({ t, history, financeInvoice }) => (\n  <Card statusColor=\"blue\">\n    <Card.Header>\n      <Card.Title>{t('general.balance')}</Card.Title>\n    </Card.Header>\n    <Card.Body>\n      <div>\n        <span className=\"pull-left bold\">\n          {t('general.subtotal')}\n        </span>\n        <span className=\"pull-right\">\n          {financeInvoice.subtotalDisplay}\n        </span>\n      </div><br />\n      <div>\n        <span className=\"pull-left bold\">\n          {t('general.tax')}\n        </span>\n        <span className=\"pull-right\">\n          {financeInvoice.taxDisplay}\n        </span>\n      </div><br />\n      <div>\n        <span className=\"pull-left bold\">\n          {t('general.total')}\n        </span>\n        <span className=\"pull-right\">\n          {financeInvoice.totalDisplay}\n        </span>\n      </div><br />\n      <div>\n        <span className=\"pull-left bold\">\n          {t('general.paid')}\n        </span>\n        <span className=\"pull-right\">\n          {financeInvoice.paidDisplay}\n        </span>\n      </div><br />\n      <div>\n        <span className=\"pull-left bold\">\n          {t('general.balance')}\n        </span>\n        <span className=\"pull-right\">\n          {financeInvoice.balanceDisplay}\n        </span>\n      </div>\n    </Card.Body>\n  </Card>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditBalance))","export function dateToLocalISO(date) {\n    if (date instanceof Date) {\n        return date.getFullYear() + '-' + \n               (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' +\n               (\"0\" + date.getDate()).slice(-2)\n    } else {\n        return date\n    }\n}\n\nexport function dateToLocalISOTime(date) {\n    if (date instanceof Date) {\n        return date.getHours() + ':' + \n               ('0' + date.getMinutes()).slice(-2)\n    } else {\n        return date\n    }\n}\n\n\nexport function TimeStringToJSDateOBJ(time_string) {\n    // time_string is Expected to be \"HH:MM:SS\"\n    let date_obj = new Date()\n    let time_split = time_string.split(':')\n    date_obj.setHours(time_split[0])\n    date_obj.setMinutes(time_split[1])\n\n    return date_obj\n}","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n} from \"tabler-react\"\n\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nconst FinanceInvoiceEditOptionsForm = ({ t, isSubmitting, values, errors, handleChange, touched, setFieldValue, setFieldTouched, inputData }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group label={t('finance.invoices.invoice_number')}>\n        <Field type=\"text\" \n                name=\"invoiceNumber\" \n                className={(errors.invoiceNumber) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" \n                onChange={(e) => {\n                  handleChange(e)\n                  setFieldTouched(\"invoiceNumber\", true, true)\n                }}           \n        />\n        <ErrorMessage name=\"invoiceNumber\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('finance.invoices.date')}>\n        <CSDatePicker \n          className={(errors.dateSent) ? \"form-control is-invalid\" : \"form-control\"} \n          selected={values.dateSent}\n          onChange={(date) => {\n            setFieldValue(\"dateSent\", date)\n            setFieldTouched(\"dateSent\", true)\n          }}\n        />\n        <ErrorMessage name=\"dateSent\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('finance.invoices.due')}>\n        <CSDatePicker \n          className={(errors.dateDue) ? \"form-control is-invalid\" : \"form-control\"} \n          selected={values.dateDue}\n          onChange={(date) => {\n            setFieldValue(\"dateDue\", date)\n            setFieldTouched(\"dateDue\", true)\n          }}\n        />\n        <ErrorMessage name=\"dateDue\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.status')}>\n        <Field component=\"select\" \n              name=\"status\" \n              className={(errors.status) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\"\n              onChange={(e) => {\n                handleChange(e)\n                setFieldTouched(\"status\", true, true)\n              }}\n        >\n          <option value=\"DRAFT\">{t('finance.invoices.status.DRAFT')}</option>\n          <option value=\"SENT\">{t('finance.invoices.status.SENT')}</option>\n          <option value=\"PAID\">{t('finance.invoices.status.PAID')}</option>\n          <option value=\"CANCELLED\">{t('finance.invoices.status.CANCELLED')}</option>\n        </Field>\n        <ErrorMessage name=\"status\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.payment_method')}>\n        <Field component=\"select\" \n              name=\"financePaymentMethod\" \n              className={(errors.financePaymentMethod) ? \"form-control is-invalid\" : \"form-control\"} \n              onChange={(e) => {\n                handleChange(e)\n                setFieldTouched(\"financePaymentMethod\", true, true)\n              }}\n              autoComplete=\"off\">\n          <option value=\"\" key={v4()}></option>\n          {inputData.financePaymentMethods.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name}</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"financePaymentMethod\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>  \n      {(Object.keys(touched).length === 0) ? \"\" :\n        <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n        >\n          {t('general.submit')}\n        </Button>\n      }\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditOptionsForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Card, \n} from \"tabler-react\"\n\nimport { dateToLocalISO } from '../../../../tools/date_tools'\nimport { get_list_query_variables } from \"../tools\"\nimport { UPDATE_INVOICE, GET_INVOICES_QUERY } from \"../queries\"\nimport FinanceInvoiceEditOptionsForm from \"./FinanceInvoiceEditOptionsForm\"\n\n\nfunction FinanceInvoiceEditOptions({t, match, initialData}) {\n  const [ updateInvoice ] = useMutation(UPDATE_INVOICE)\n  \n  let initialPaymentMethod = \"\"\n  if (initialData.financeInvoice.financePaymentMethod) {\n    initialPaymentMethod = initialData.financeInvoice.financePaymentMethod.id\n  }\n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateSent = null\n  if (initialData.financeInvoice.dateSent) {\n    dateSent = new Date(initialData.financeInvoice.dateSent)\n  }\n  let dateDue = null\n  if (initialData.financeInvoice.dateDue) {\n    dateDue = new Date(initialData.financeInvoice.dateDue)\n  }\n\n  \n  console.log(\"########\")\n  console.log(initialData)\n  console.log(dateSent)\n  console.log(dateDue)\n\n\n  return (\n    <Card title={t('general.options')} statusColor=\"blue\">\n      <Card.Body>\n        <Formik\n          initialValues={{ \n            invoiceNumber: initialData.financeInvoice.invoiceNumber, \n            dateSent: dateSent,\n            dateDue: dateDue,\n            status: initialData.financeInvoice.status,\n            financePaymentMethod: initialPaymentMethod\n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting, setTouched }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                invoiceNumber: values.invoiceNumber, \n                dateSent: dateToLocalISO(values.dateSent),\n                dateDue: dateToLocalISO(values.dateDue),\n                status: values.status,\n                financePaymentMethod: values.financePaymentMethod,\n              }\n            }, refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables()}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_options_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n                setTouched({})\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, handleChange, submitForm, setFieldTouched, setFieldValue }) => (\n            <FinanceInvoiceEditOptionsForm\n              inputData={initialData}\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              touched={touched}\n              handleChange={handleChange}\n              setFieldValue={setFieldValue}\n              setFieldTouched={setFieldTouched}\n            >\n            </FinanceInvoiceEditOptionsForm>\n          )}\n        </Formik>\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditOptions))","// @flow\n\nimport React, { Fragment } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Card\n} from \"tabler-react\";\n\n\nconst FinanceInvoiceEditOrganization = ({ t, history, organization }) => (\n  <Card statusColor=\"blue\">\n    <Card.Header>\n      <Card.Title>{t('general.from')}</Card.Title>\n    </Card.Header>\n    <Card.Body>\n      <div className=\"bold\">\n        {organization.name}\n      </div>\n      {(organization.address) ?\n        <div dangerouslySetInnerHTML={{ __html: organization.address}} />\n        : \"\"\n      }      \n      <div>\n        {organization.phone}\n      </div>\n      <div>\n        {organization.email}\n      </div>\n      <div>\n        {organization.registration}\n      </div>\n      <div>\n        {organization.taxRegistration}\n      </div>\n    </Card.Body>\n  </Card>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditOrganization))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n} from \"tabler-react\"\n\n\nlet summaryFormTypingTimer\nconst formSubmitTimeout = 750\n\n\nconst FinanceInvoiceEditSummaryForm = ({ t, isSubmitting, errors, touched, setFieldTouched, handleChange }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group>\n        <Field \n          type=\"text\" \n          name=\"summary\" \n          className={(errors.summary) ? \"form-control is-invalid\" : \"form-control\"} \n          autoComplete=\"off\" \n          onChange={(e) => {\n            handleChange(e)\n            setFieldTouched(\"summary\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"summary\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      {(Object.keys(touched).length === 0) ? \"\" :\n        <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n        >\n          {t('general.submit')}\n        </Button>\n      }\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditSummaryForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Card\n} from \"tabler-react\"\n\nimport { get_list_query_variables } from \"../tools\"\nimport { UPDATE_INVOICE, GET_INVOICES_QUERY } from \"../queries\"\nimport FinanceInvoiceEditSummaryForm from \"./FinanceInvoiceEditSummaryForm\"\n\n\nfunction FinanceInvoiceEditSummary({t, history, match, initialData}) {\n  const [ updateInvoice ] = useMutation(UPDATE_INVOICE)\n\n  return (\n    <Card statusColor=\"blue\">\n      <Card.Header>\n        <Card.Title>{t('general.summary')}</Card.Title>\n      </Card.Header>\n      <Card.Body>\n        <Formik\n          initialValues={{ \n            summary: initialData.financeInvoice.summary, \n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting, setTouched }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                summary: values.summary, \n              }\n            }, refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables()}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_summary_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n                setTouched({})\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, setFieldTouched, handleChange }) => (\n            <FinanceInvoiceEditSummaryForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              touched={touched}\n              handleChange={handleChange}\n              setFieldTouched={setFieldTouched}\n            >\n            </FinanceInvoiceEditSummaryForm>\n          )}\n        </Formik>\n        {console.log(initialData)}\n        {(initialData.financeInvoice.creditInvoiceNumber) ?\n          t(\"finance.invoice.credit_invoice_for\") + \": \" + initialData.financeInvoice.creditInvoiceNumber\n        : \"\"}\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditSummary))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\n\nconst FinanceInvoiceEditToForm = ({ t, isSubmitting, errors, touched, handleChange, setFieldTouched }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group label={t(\"finance.invoices.relation_company\")}>\n        <Field type=\"text\" \n                name=\"relationCompany\" \n                className={(errors.relationCompany) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" \n                onChange={(e) => {\n                  handleChange(e)\n                  setFieldTouched(\"relationCompany\", true, true)\n                }}           \n        />\n        <ErrorMessage name=\"relationCompany\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_company_registration\")}>\n            <Field type=\"text\" \n                    name=\"relationCompanyRegistration\" \n                    className={(errors.relationCompanyRegistration) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationCompanyRegistartion\", true, true)\n                    }} \n            />\n            <ErrorMessage name=\"relationCompanyRegistration\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_company_tax_registration\")}>\n            <Field type=\"text\" \n                    name=\"relationCompanyTaxRegistration\" \n                    className={(errors.relationCompanyTaxRegistration) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationCompanyTaxRegistration\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"relationCompanyTaxRegistration\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Form.Group label={t(\"finance.invoices.relation_contact_name\")}>\n        <Field type=\"text\" \n                name=\"relationContactName\" \n                className={(errors.relationContactName) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" \n                onChange={(e) => {\n                  handleChange(e)\n                  setFieldTouched(\"relationContactName\", true, true)\n                }}\n        />\n        <ErrorMessage name=\"relationContactName\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_address\")}>\n            <Field type=\"text\" \n                    name=\"relationAddress\" \n                    className={(errors.relationAddress) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationAddress\", true, true)\n                    }} \n            />\n            <ErrorMessage name=\"relationAddress\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_postcode\")}>\n            <Field type=\"text\" \n                    name=\"relationPostcode\" \n                    className={(errors.relationPostcode) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationPostcode\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"relationPostcode\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_city\")}>\n            <Field type=\"text\" \n                    name=\"relationCity\" \n                    className={(errors.relationCity) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationCity\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"relationCity\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_country\")}>\n            <Field type=\"text\" \n                    name=\"relationCountry\" \n                    className={(errors.relationCountry) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationCountry\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"relationCountry\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          {(Object.keys(touched).length === 0) ? \"\" :\n            <Button \n              color=\"primary\"\n              className=\"pull-right\" \n              type=\"submit\" \n              disabled={isSubmitting}\n            >\n              {t('general.submit')}\n            </Button>\n          }\n        </Grid.Col>\n      </Grid.Row>\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditToForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport {\n  Card\n} from \"tabler-react\"\n\n\nimport { get_list_query_variables } from \"../tools\"\nimport { UPDATE_INVOICE, GET_INVOICES_QUERY } from \"../queries\"\nimport FinanceInvoiceEditToForm from \"./FinanceInvoiceEditToForm\"\n\n\nfunction FinanceInvoiceEditTo({ t, history, match, initialData }) {\n  const [ updateInvoice ] = useMutation(UPDATE_INVOICE)\n\n  return (\n    <Card title={t('general.to')} statusColor=\"blue\">\n      <Card.Body>\n        <Formik\n          initialValues={{ \n            relationCompany: initialData.financeInvoice.relationCompany, \n            relationCompanyRegistration: initialData.financeInvoice.relationCompanyRegistration, \n            relationCompanyTaxRegistration: initialData.financeInvoice.relationCompanyTaxRegistration, \n            relationContactName: initialData.financeInvoice.relationContactName, \n            relationAddress: initialData.financeInvoice.relationAddress, \n            relationPostcode: initialData.financeInvoice.relationPostcode, \n            relationCity: initialData.financeInvoice.relationCity, \n            relationCountry: initialData.financeInvoice.relationCountry, \n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting, setTouched }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                relationCompany: values.relationCompany,\n                relationCompanyRegistration: values.relationCompanyRegistration,\n                relationCompanyTaxRegistration: values.relationCompanyTaxRegistration,\n                relationContactName: values.relationContactName,\n                relationAddress: values.relationAddress,\n                relationPostcode: values.relationPostcode,\n                relationCity: values.relationCity,\n                relationCountry: values.relationCountry\n              }\n            }, refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables()}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_to_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n                setTouched({})\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, handleChange, setFieldTouched }) => (\n            <FinanceInvoiceEditToForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              touched={touched}\n              handleChange={handleChange}\n              setFieldTouched={setFieldTouched}\n            >\n            </FinanceInvoiceEditToForm>\n          )}\n        </Formik>\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditTo))","import React, { useContext } from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n// import { get_list_query_variables } from \"../tools\"\nimport { DELETE_INVOICE_PAYMENT, GET_INVOICES_QUERY, GET_INVOICE_QUERY } from \"../queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\nimport moment from 'moment'\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport { get_list_query_variables } from \"../tools\"\n\n\nfunction FinanceInvoiceEditPaymentDelete({t, match, node}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const [deleteInvoicePayment, { data }] = useMutation(DELETE_INVOICE_PAYMENT)\n\n    return (\n      <button className=\"icon btn btn-link btn-sm\" \n        title={t('general.delete')} \n        href=\"\"\n        onClick={() => {\n          confirm_delete({\n            t: t,\n            msgConfirm: t(\"finance.invoices.payment_delete_confirm_msg\"),\n            msgDescription: <p>{ moment(node.date).format(dateFormat) } - {node.amountDisplay}</p>,\n            msgSuccess: t('finance.invoices.payment_deleted'),\n            deleteFunction: deleteInvoicePayment,\n            functionVariables: { \n              variables: {\n                input: {\n                  id: node.id\n                }\n              }, \n              refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables() },\n                {query: GET_INVOICE_QUERY, variables: {id: match.params.id} },\n              ]\n            }\n          })\n      }}>\n        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n      </button>\n    )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditPaymentDelete))\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Button,\n  Card,\n  Icon, \n  Table\n} from \"tabler-react\"\n\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceInvoiceEditPaymentDelete from \"./FinanceInvoiceEditPaymentDelete\"\n\n\nfunction FinanceInvoiceEditPayments ({ t, history, match, refetchInvoice, inputData }) {\n  const id = match.params.id\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const paymentAddUrl = `/finance/invoices/${id}/payment/add`\n\n  return (\n    <Card statusColor=\"blue\">\n      <Card.Header>\n        <Card.Title>{t('general.payments')}</Card.Title>\n        <Card.Options>\n          {/* <FinanceInvoiceItemAdd /> */}\n          <Link to={paymentAddUrl}>\n            <Button className=\"btn-sm\" color=\"primary\">\n              <Icon prefix=\"fe\" name=\"plus\" /> {t('finance.invoice.payments.add')} \n            </Button>\n          </Link>\n        </Card.Options>\n      </Card.Header>\n        <Table cards>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t(\"general.date\")}</Table.ColHeader>\n              <Table.ColHeader>{t(\"general.amount\")}</Table.ColHeader>\n              <Table.ColHeader>{t(\"general.payment_method\")}</Table.ColHeader>\n              <Table.ColHeader>{t(\"general.note\")}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {inputData.financeInvoice.payments.edges.map(({ node }) => (\n              <Table.Row key={\"payment_\" + node.id}>\n                <Table.Col>\n                  { moment(node.date).format(dateFormat) }\n                </Table.Col>\n                <Table.Col>\n                  { node.amountDisplay }\n                </Table.Col>\n                <Table.Col>\n                  { (node.financePaymentMethod) ? node.financePaymentMethod.name : \"\" }\n                  { (node.onlinePaymentId) ? <div><small className=\"text-muted\">{node.onlinePaymentId}</small></div> : \"\" }\n                </Table.Col>\n                <Table.Col>\n                  <div dangerouslySetInnerHTML={{ __html:node.note }}></div>\n                </Table.Col>\n                <Table.Col>\n                  <span className=\"pull-right\">\n                    <Link to={ \"/finance/invoices/\" + inputData.financeInvoice.id + \"/payment/edit/\" + node.id } \n                          className='btn btn-secondary btn-sm mr-2'\n                    >\n                      {t('general.edit')}\n                    </Link>\n                    <FinanceInvoiceEditPaymentDelete node={node} />\n                  </span>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Card>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditPayments))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport { toast } from 'react-toastify'\n\nimport { GET_INVOICES_QUERY, GET_INVOICE_QUERY, CANCEL_AND_CREATE_CREDIT_INVOICE } from '../queries'\nimport { TOKEN_REFRESH } from \"../../../../queries/system/auth\"\nimport { refreshTokenAndOpenExportLinkInNewTab } from \"../../../../tools/refresh_token_and_open_export_link\"\n\nimport {\n  Dropdown,\n  Page,\n  Grid,\n  Icon,\n  Button,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n\nimport CSLS from \"../../../../tools/cs_local_storage\"\n\nimport FinanceInvoiceEditBase from \"./FinanceInvoiceEditBase\"\nimport FinanceInvoiceEditItems from \"./FinanceInvoiceEditItems\"\nimport FinanceInvoiceEditAdditional from \"./FinanceInvoiceEditAdditional\"\nimport FinanceInvoiceEditBalance from \"./FinanceInvoiceEditBalance\"\nimport FinanceInvoiceEditOptions from \"./FinanceInvoiceEditOptions\"\nimport FinanceInvoiceEditOrganization from \"./FinanceInvoiceEditOrganization\"\nimport FinanceInvoiceEditSummary from \"./FinanceInvoiceEditSummary\"\nimport FinanceInvoiceEditTo from \"./FinanceInvoiceEditTo\"\nimport FinanceInvoiceEditPayments from \"./FinanceInvoiceEditPayments\"\n\nfunction FinanceInvoiceEdit({t, match, history}) {\n  const id = match.params.id\n  const { loading, error, data, refetch } = useQuery(GET_INVOICE_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n  const [cancelAndCreateCreditInvoice] = useMutation(CANCEL_AND_CREATE_CREDIT_INVOICE)\n  \n  // Loading\n  if (loading) return <FinanceInvoiceEditBase>{t('general.loading_with_dots')}</FinanceInvoiceEditBase>\n  // Error\n  if (error) {\n    console.log(error)\n    return <FinanceInvoiceEditBase>{t('general.error_sad_smiley')}</FinanceInvoiceEditBase>\n  }\n\n  console.log(data)\n  // Fetch back location from localStorage, if no value set, default back to /finance/invoices\n  let return_url = localStorage.getItem(CSLS.FINANCE_INVOICES_EDIT_RETURN)\n  if (!return_url) {\n    return_url = \"/finance/invoices\"\n  }\n  const export_url = \"/d/export/invoice/pdf/\" + id\n  const payment_add_url = `/finance/invoices/${id}/payment/add`\n\n  return (\n    <FinanceInvoiceEditBase>\n      <Page.Header title={t('finance.invoice.title') + ' #' + data.financeInvoice.invoiceNumber}>\n        <div className=\"page-options d-flex\">\n          {/* Back */}\n          <Link to={return_url} \n                className='btn btn-secondary mr-2'>\n              <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')} \n          </Link>\n          {/* Add payment */}\n          <Link to={payment_add_url} \n              className='btn btn-secondary mr-2'>\n              <Icon prefix=\"fe\" name=\"dollar-sign\" /> {t('finance.invoice.payments.add')} \n          </Link>\n          {/* Export as PDF */}\n          <Button\n            color=\"secondary\"\n            icon=\"printer\"\n            className=\"mr-2\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url\n            )}\n          >\n            {t('general.pdf')} \n          </Button>\n          {/* Tools */}\n          <Dropdown\n            className=\"\"\n            type=\"button\"\n            toggle\n            icon=\"tool\"\n            color=\"secondary\"\n            triggerContent={t(\"general.tools\")}\n            items={[\n              <HasPermissionWrapper permission=\"change\" resource=\"financeinvoice\">\n                <Dropdown.Item\n                  key={v4()}\n                  icon=\"slash\"\n                  onClick={() => {\n                    cancelAndCreateCreditInvoice({ variables: {\n                      input: {\n                        id: id,\n                      }\n                    }, refetchQueries: []\n                    })\n                    .then(({ data }) => {\n                        console.log('got data', data)\n                        const creditInvoiceId = data.cancelAndCreateCreditFinanceInvoice.financeInvoice.id\n                        history.push(`/finance/invoices/edit/${creditInvoiceId}`)\n                        toast.success((t('finance.invoice.now_editing_credit_invoice')), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error)\n                      })\n                  }}>\n                    {t('finance.invoice.cancel_and_create_credit_invoice')}\n                </Dropdown.Item>\n              </HasPermissionWrapper>\n            ]}>\n          </Dropdown>\n        </div>\n      </Page.Header>\n      <Grid.Row>\n        <Grid.Col md={9}>\n          <FinanceInvoiceEditSummary \n            initialData={data}\n          />\n          <Grid.Row>\n            <Grid.Col md={6} ml={0}>\n              <FinanceInvoiceEditOrganization organization={data.organization} />\n            </Grid.Col>\n            <Grid.Col md={6} ml={0}>\n              <FinanceInvoiceEditTo initialData={data} />\n            </Grid.Col>\n          </Grid.Row>\n        </Grid.Col>\n        <Grid.Col md={3}>\n          <FinanceInvoiceEditBalance financeInvoice={data.financeInvoice} />\n          <FinanceInvoiceEditOptions\n            initialData={data}\n          />\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <FinanceInvoiceEditItems inputData={data} refetchInvoice={refetch} />\n          <FinanceInvoiceEditAdditional initialData={data} />\n          <FinanceInvoiceEditPayments inputData={data} />\n        </Grid.Col>\n      </Grid.Row>\n    </FinanceInvoiceEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Badge\n} from \"tabler-react\"\n\n\nconst BadgeBoolean = ({ t, value }) => (\n    (value) ?\n        <Badge color=\"success\">{t('general.yes')}</Badge> :\n        <Badge color=\"danger\">{t('general.no')}</Badge> \n)\n\nexport default withTranslation()(BadgeBoolean)","import { gql } from \"@apollo/client\"\n\nexport const GET_INVOICE_GROUPS_QUERY = gql`\n  query FinanceInvoiceGroupsQuery($archived: Boolean!) {\n    financeInvoiceGroups(archived: $archived) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          name\n          nextId\n          dueAfterDays\n          prefix\n          prefixYear\n          autoResetPrefixYear\n          terms\n          footer\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INVOICE_GROUP_QUERY = gql`\n  query FinanceInvoiceGroup($id: ID!) {\n    financeInvoiceGroup(id:$id) {\n      id\n      archived\n      displayPublic\n      name\n      nextId\n      dueAfterDays\n      prefix\n      prefixYear\n      autoResetPrefixYear\n      terms\n      footer\n      code\n    }\n  }\n`\n\nexport const UPDATE_INVOICE_GROUP = gql`\nmutation UpdateFinanceInvoiceGroup($input: UpdateFinanceInvoiceGroupInput!) {\n  updateFinanceInvoiceGroup(input: $input) {\n    financeInvoiceGroup {\n      id\n      name\n      code\n    }\n  }\n}\n`\n\nexport const ADD_INVOICE_GROUP = gql`\nmutation CreateFinanceInvoiceGroup($input:CreateFinanceInvoiceGroupInput!) {\n  createFinanceInvoiceGroup(input: $input) {\n    financeInvoiceGroup{\n      id\n      archived\n      displayPublic\n      name\n      nextId\n      dueAfterDays\n      prefix\n      prefixYear\n      autoResetPrefixYear\n      terms\n      footer\n      code\n    }\n  }\n}\n`\n\nexport const ARCHIVE_INVOICE_GROUP = gql`\nmutation ArchiveFinanceInvoiceGroup($input: ArchiveFinanceInvoiceGroupInput!) {\n  archiveFinanceInvoiceGroup(input: $input) {\n    financeInvoiceGroup {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  Text\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport ContentCard from \"../../../general/ContentCard\"\nimport FinanceMenu from \"../../FinanceMenu\"\n\nimport { GET_INVOICE_GROUPS_QUERY, ARCHIVE_INVOICE_GROUP } from \"./queries\"\n\n\nfunction FinanceInvoiceGroupsBase({t, history, children, showBack=true}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/finance/invoices\" \n                    className='btn btn-outline-secondary btn-sm mr-2'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('finance.invoices.title')}\n              </Link>\n              <Link to=\"/finance/invoices/groups/defaults\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"settings\" /> {t('finance.invoice_groups_defaults.title')}\n              </Link> \n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/finance/invoices/groups\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financeinvoicegroup\">\n                  <Link to=\"/finance/invoices/groups/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.invoice_groups.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <FinanceMenu activeLink='invoices'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nconst FinanceInvoiceGroups = ({ t, history, archived=false }) => (\n\n            <Query query={GET_INVOICE_GROUPS_QUERY} variables={{ archived }}>\n             {({ loading, error, data: {financeInvoiceGroups: invoice_groups}, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('finance.invoice_groups.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('finance.invoice_groups.title')}>\n                    <p>{t('finance.invoice_groups.error_loading')}</p>\n                  </ContentCard>\n                )\n                const headerOptions = <Card.Options>\n                  <Button color={(!archived) ? 'primary': 'secondary'}  \n                          size=\"sm\"\n                          onClick={() => {archived=false; refetch({archived});}}>\n                    {t('general.current')}\n                  </Button>\n                  <Button color={(archived) ? 'primary': 'secondary'} \n                          size=\"sm\" \n                          className=\"ml-2\" \n                          onClick={() => {archived=true; refetch({archived});}}>\n                    {t('general.archive')}\n                  </Button>\n                </Card.Options>\n                \n                // Empty list\n                if (!invoice_groups.edges.length) { return (\n                  <ContentCard cardTitle={t('finance.invoice_groups.title')}\n                               headerContent={headerOptions}>\n                    <p>\n                    {(!archived) ? t('finance.invoice_groups.empty_list') : t(\"finance.invoice_groups.empty_archive\")}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('finance.invoice_groups.title')}\n                               headerContent={headerOptions}\n                               pageInfo={invoice_groups.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: invoice_groups.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.financeInvoiceGroups.edges\n                                    const pageInfo = fetchMoreResult.financeInvoiceGroups.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new invoice_groups at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          financeInvoiceGroups: {\n                                            __typename: previousResult.financeInvoiceGroups.__typename,\n                                            edges: [ ...previousResult.financeInvoiceGroups.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} \n                    >\n                    <Table>\n                      <Table.Header>\n                        <Table.Row key={v4()}>\n                          <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                          <Table.ColHeader>{t('finance.invoice_groups.next_id')}</Table.ColHeader>\n                          <Table.ColHeader>{t('finance.invoice_groups.due_after_days')}</Table.ColHeader>\n                          <Table.ColHeader>{t('general.prefix')}</Table.ColHeader>\n                          <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                          <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n                        </Table.Row>\n                      </Table.Header>\n                      <Table.Body>\n                          {invoice_groups.edges.map(({ node }) => (\n                            <Table.Row key={v4()}>\n                              <Table.Col key={v4()}>\n                                {node.name}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.nextId}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.dueAfterDays}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.prefix} \n                                {(node.prefixYear) ? <span>[{t('general.year')}]<br /></span>: ''}\n                                {(node.autoResetPrefixYear) ? <Text.Small color=\"gray\">\n                                  {t('finance.invoice_groups.auto_reset_prefix_year')}\n                                </Text.Small>: ''}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                <BadgeBoolean value={node.displayPublic} />\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.code}\n                              </Table.Col>\n                              <Table.Col className=\"text-right\" key={v4()}>\n                                {(node.archived) ? \n                                  <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                  <Button className='btn-sm' \n                                          onClick={() => history.push(\"/finance/invoices/groups/edit/\" + node.id)}\n                                          color=\"secondary\">\n                                    {t('general.edit')}\n                                  </Button>\n                                }\n                              </Table.Col>\n                              <Mutation mutation={ARCHIVE_INVOICE_GROUP} key={v4()}>\n                                {(archiveInvoiceGroup, { data }) => (\n                                  <Table.Col className=\"text-right\" key={v4()}>\n                                    <button className=\"icon btn btn-link btn-sm\" \n                                        title={t('general.archive')} \n                                        href=\"\"\n                                        onClick={() => {\n                                          console.log(\"clicked archived\")\n                                          let id = node.id\n                                          archiveInvoiceGroup({ variables: {\n                                            input: {\n                                            id,\n                                            archived: !archived\n                                            }\n                                    }, refetchQueries: [\n                                        {query: GET_INVOICE_GROUPS_QUERY, variables: {\"archived\": archived }}\n                                    ]}).then(({ data }) => {\n                                      console.log('got data', data);\n                                      toast.success(\n                                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error);\n                                    })\n                                    }}>\n                                      <Icon prefix=\"fa\" name=\"inbox\" />\n                                    </button>\n                                  </Table.Col>\n                                )}\n                              </Mutation>\n                            </Table.Row>\n                          ))}\n                      </Table.Body>\n                    </Table>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n\n);\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupsBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table,\n  Text\n} from \"tabler-react\";\n\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport { GET_INVOICE_GROUPS_QUERY, ARCHIVE_INVOICE_GROUP } from \"./queries\"\nimport FinanceInvoiceGroupsBase from './FinanceInvoiceGroupsBase'\n\n\nfunction FinanceInvoiceGroups({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('finance.invoice_groups.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_INVOICE_GROUPS_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveInvoiceGroup ] = useMutation(ARCHIVE_INVOICE_GROUP)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <FinanceInvoiceGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceInvoiceGroupsBase>\n  )\n\n  if (error) return (\n    <FinanceInvoiceGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.invoice_groups.error_loading')}</p>\n      </ContentCard>\n    </FinanceInvoiceGroupsBase>\n  )\n\n  const invoiceGroups = data.financeInvoiceGroups\n\n  return (\n    <FinanceInvoiceGroupsBase>\n      <ContentCard cardTitle={t('finance.invoice_groups.title')}\n                   headerContent={headerOptions}\n                   pageInfo={invoiceGroups.pageInfo}\n                   onLoadMore={() => {\n                   fetchMore({\n                     variables: {\n                       after: invoiceGroups.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.financeInvoiceGroups.edges\n                        const pageInfo = fetchMoreResult.financeInvoiceGroups.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new invoiceGroups at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              financeInvoiceGroups: {\n                                __typename: previousResult.financeInvoiceGroups.__typename,\n                                edges: [ ...previousResult.financeInvoiceGroups.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} \n        >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoice_groups.next_id')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoice_groups.due_after_days')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.prefix')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {invoiceGroups.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.nextId}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dueAfterDays}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.prefix} \n                    {(node.prefixYear) ? <span>[{t('general.year')}]<br /></span>: ''}\n                    {(node.autoResetPrefixYear) ? <Text.Small color=\"gray\">\n                      {t('finance.invoice_groups.auto_reset_prefix_year')}\n                    </Text.Small>: ''}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <BadgeBoolean value={node.displayPublic} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.code}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/finance/invoices/groups/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveInvoiceGroup({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_INVOICE_GROUPS_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceInvoiceGroupsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroups))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const INVOICE_GROUP_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    dueAfterDays: Yup.number()\n      .moreThan(0, t('yup.field_above_0'))\n      .required(t('yup.field_required')),\n    nextId: Yup.number(),\n    prefix: Yup.string(),\n    prefixYear: Yup.boolean(),\n    autoResetPrefixYear: Yup.boolean(),\n    terms: Yup.string(),\n    footer: Yup.string(),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n\n\nconst FinanceInvoiceGroupForm = ({ t, history, isSubmitting, setFieldTouched, setFieldValue, errors, values, returnUrl, edit=false }) => (\n  <FoForm>\n    <Card.Body>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"displayPublic\" \n                checked={values.displayPublic} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('finance.invoice_groups.public')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n          </Form.Group>    \n        </Grid.Col>\n      </Grid.Row>\n      <Form.Group label={t('general.name')}>\n        <Field type=\"text\" \n                name=\"name\" \n                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Grid.Row>\n        {(edit) ?\n        <Grid.Col>\n          <Form.Group label={t('finance.invoice_groups.next_id')}>\n            <Field type=\"text\" \n                    name=\"nextId\" \n                    className={(errors.nextId) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"nextId\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col> : \"\"}\n        <Grid.Col>\n          <Form.Group label={t('finance.invoice_groups.due_after_days')}>\n            <Field type=\"text\" \n                    name=\"dueAfterDays\" \n                    className={(errors.dueAfterDays) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"dueAfterDays\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Form.Group label={t('general.prefix')}>\n        <Field type=\"text\" \n                name=\"prefix\" \n                className={(errors.prefix) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"prefix\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"prefixYear\" \n                checked={values.prefixYear} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('finance.invoice_groups.prefix_year')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"prefixYear\" component=\"div\" />   \n          </Form.Group>   \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"autoResetPrefixYear\" \n                checked={values.autoResetPrefixYear} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('finance.invoice_groups.auto_reset_prefix_year')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"autoResetPrefixYear\" component=\"div\" />   \n          </Form.Group>   \n        </Grid.Col>\n      </Grid.Row>\n      <Form.Group label={t('general.terms')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"terms\"\n          initialValue={values.terms}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldTouched(\"terms\", true, true)\n            setFieldValue(\"terms\", e.target.getContent())\n          }}\n        />\n        <ErrorMessage name=\"terms\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.footer')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"footer\"\n          initialValue={values.footer}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldTouched(\"footer\", true, true)\n            setFieldValue(\"footer\", e.target.getContent())\n          }}\n        />\n        <ErrorMessage name=\"footer\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('finance.code')}>\n        <Field type=\"text\" \n                name=\"code\" \n                className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button \n            type=\"button\" \n            color=\"link\">\n              {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupForm))","import React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_INVOICE_GROUPS_QUERY, ADD_INVOICE_GROUP } from './queries'\nimport { INVOICE_GROUP_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport FinanceInvoiceGroupsBase from './FinanceInvoiceGroupsBase';\nimport FinanceInvoiceGroupForm from './FinanceInvoiceGroupForm'\n\n\nfunction FinanceInvoiceGroupAdd({ t, history }) {\n  const returnUrl = \"/finance/invoices/groups\"\n  const [addInvoiceGroup] = useMutation(ADD_INVOICE_GROUP)\n\n  return (\n    <FinanceInvoiceGroupsBase showBack={true}>\n      <Card title={t('finance.invoice_groups.title_add')}>\n        <Formik\n          initialValues={{ \n            name: '', \n            displayPublic: true,\n            dueAfterDays: 30,\n            prefix: 'INV',\n            prefixYear: true,\n            autoResetPrefixYear: true,\n            terms: '',\n            footer: '',\n            code: '' \n          }}\n          validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addInvoiceGroup({ variables: {\n                input: {\n                  name: values.name, \n                  displayPublic: values.displayPublic,\n                  dueAfterDays: values.dueAfterDays,\n                  prefix: values.prefix,\n                  prefixYear: values.prefixYear,\n                  autoResetPrefixYear: values.autoResetPrefixYear,\n                  terms: values.terms,\n                  footer: values.footer,\n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_INVOICE_GROUPS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('finance.invoice_groups.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, values, errors, setFieldValue, setFieldTouched }) => (\n            <FinanceInvoiceGroupForm \n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n            />\n          )}\n        </Formik>\n      </Card>\n    </FinanceInvoiceGroupsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_INVOICE_GROUPS_QUERY, GET_INVOICE_GROUP_QUERY, UPDATE_INVOICE_GROUP } from './queries'\nimport { INVOICE_GROUP_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport FinanceInvoiceGroupForm from './FinanceInvoiceGroupForm'\nimport FinanceInvoiceGroupsBase from './FinanceInvoiceGroupsBase';\n\n\nfunction FinanceInvoiceGroupEdit({t, history, match}) {\n  const id = match.params.id\n  const returnUrl = \"/finance/invoices/groups\"\n  const cardTitle = t('finance.invoice_groups.title_edit')\n  const { loading, error, data } = useQuery(GET_INVOICE_GROUP_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateInvoiceGroup ] = useMutation(UPDATE_INVOICE_GROUP)\n\n  if (loading) return (\n    <FinanceInvoiceGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceInvoiceGroupsBase>\n  )\n\n  if (error) return (\n    <FinanceInvoiceGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.invoice_groups.error_loading')}</p>\n      </ContentCard>\n    </FinanceInvoiceGroupsBase>\n  )\n                    \n  const initialData = data.financeInvoiceGroup;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <FinanceInvoiceGroupsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            displayPublic: initialData.displayPublic,\n            dueAfterDays: initialData.dueAfterDays,\n            nextId: initialData.nextId,\n            prefix: initialData.prefix,\n            prefixYear: initialData.prefixYear,\n            autoResetPrefixYear: initialData.autoResetPrefixYear,\n            terms: initialData.terms,\n            footer: initialData.footer,\n            code: initialData.code\n          }}\n          validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateInvoiceGroup({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name, \n                  displayPublic: values.displayPublic,\n                  nextId: values.nextId,\n                  dueAfterDays: values.dueAfterDays,\n                  prefix: values.prefix,\n                  prefixYear: values.prefixYear,\n                  autoResetPrefixYear: values.autoResetPrefixYear,\n                  terms: values.terms,\n                  footer: values.footer,\n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_INVOICE_GROUPS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('finance.invoice_groups.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <FinanceInvoiceGroupForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              edit={true}\n            />\n          )}\n        </Formik>\n      </Card>\n    </FinanceInvoiceGroupsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport {\n  Dimmer,\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\n\nconst FinanceInvoiceGroupDefaultForm = ({ t, history, inputData, isSubmitting, setFieldTouched, setFieldValue, errors, values, submitForm }) => (\n  <FoForm>\n    <Dimmer active={isSubmitting} loader={isSubmitting} >\n      <Form.Group>\n        <Field component=\"select\" \n              name=\"financeInvoiceGroup\" \n              className={(errors.financeInvoiceGroup) ? \"form-control is-invalid\" : \"form-control\"} \n              onChange={(e) => {\n                setFieldValue('financeInvoiceGroup', e.target.value)\n                setFieldTouched('financeInvoiceGroup', true)\n                setTimeout(() => {submitForm()}, 200)\n              }}\n              autoComplete=\"off\">\n          {inputData.financeInvoiceGroups.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name}</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"financeInvoiceGroup\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>  \n    </Dimmer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupDefaultForm))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const INVOICE_GROUP_DEFAULT_SCHEMA = Yup.object().shape({\n    financeInvoiceGroup: Yup.string(),\n  })\n","import { gql } from \"@apollo/client\"\n\nexport const GET_INVOICE_GROUPS_DEFAULTS_QUERY = gql`\nquery FinanceInvoiceGroupDefaults {\n  financeInvoiceGroupDefaults(first: 100) {\n    edges {\n      node {\n        id\n        itemType\n        financeInvoiceGroup {\n          id\n          name\n        }\n      }\n    }\n  }\n}\n`\n\nexport const GET_INVOICE_GROUP_QUERY = gql`\n  query FinanceInvoiceGroup($id: ID!) {\n    financeInvoiceGroup(id:$id) {\n      id\n      archived\n      displayPublic\n      name\n      nextId\n      dueAfterDays\n      prefix\n      prefixYear\n      autoResetPrefixYear\n      terms\n      footer\n      code\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { Formik } from 'formik'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  Text\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport FinanceMenu from \"../../../FinanceMenu\"\nimport FinanceInvoiceGroupDefaultForm from './FinanceInvoiceGroupDefaultForm'\n\nimport { INVOICE_GROUP_DEFAULT_SCHEMA } from \"./yupSchema\"\nimport { GET_INVOICE_GROUPS_QUERY } from \"../queries\"\nimport { GET_INVOICE_GROUPS_DEFAULTS_QUERY } from \"./queries\"\n\n\nconst UPDATE_INVOICE_GROUP_DEFAULT = gql`\n  mutation UpdateFinanceInvoiceGroupDefault($input: UpdateFinanceInvoiceGroupDefaultInput!) {\n    updateFinanceInvoiceGroupDefault(input: $input) {\n      financeInvoiceGroupDefault {\n        id\n        itemType\n        financeInvoiceGroup {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nconst fetch_default_type_name = (t, itemType) => {\n  switch(itemType) {\n    case \"MEMBERSHIPS\":\n      return t('finance.invoice_groups_defaults.MEMBERSHIPS')\n      break\n    case \"SUBSCRIPTIONS\":\n      return t('finance.invoice_groups_defaults.SUBSCRIPTIONS')\n      break\n    case \"CLASSPASSES\":\n      return t('finance.invoice_groups_defaults.CLASSPASSES')\n      break\n    case \"DROPINCLASSES\":\n      return t('finance.invoice_groups_defaults.DROPINCLASSES')\n      break\n    case \"TRIALCLASSES\":\n      return t('finance.invoice_groups_defaults.TRIALCLASSES')\n      break\n    case \"EVENT_TICKETS\":\n      return t('finance.invoice_groups_defaults.EVENT_TICKETS')\n      break\n    case \"SHOP_SALES\":\n      return t('finance.invoice_groups_defaults.SHOP_SALES')\n      break\n    case \"TEACHER_PAYMENTS\":\n      return t('finance.invoice_groups_defaults.TEACHER_PAYMENTS')\n      break\n    case \"EMPLOYEE_EXPENSES\":\n      return t('finance.invoice_groups_defaults.EMPLOYEE_EXPENSES')\n      break\n    default:\n      return t('finance.invoice_groups_defaults.TYPE_NOT_FOUND')\n  }\n}\n\n\n\nconst FinanceInvoiceGroupsDefaults = ({ t, history }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"finance.title\")}>\n          <div className=\"page-options d-flex\">\n            <Link to=\"/finance/invoices/groups\" \n                  className='btn btn-outline-secondary btn-sm'>\n                <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('finance.invoice_groups.title')}\n            </Link>\n          </div>\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            <Query query={GET_INVOICE_GROUPS_DEFAULTS_QUERY} variables={{}}>\n             {({ loading, error, data: {financeInvoiceGroupDefaults: invoice_group_defaults}, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('finance.invoice_groups_defaults.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('finance.invoice_groups_defaults.title')}>\n                    <p>{t('finance.invoice_groups_defaults.error_loading')}</p>\n                  </ContentCard>\n                )\n                \n                // Empty list\n                if (!invoice_group_defaults.edges.length) { return (\n                  <ContentCard cardTitle={t('finance.invoice_groups_defaults.title')}>\n                    <p>\n                      {t('finance.invoice_groups_defaults.empty_list')}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('finance.invoice_groups_defaults.title')}\n                               pageInfo={invoice_group_defaults.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: invoice_group_defaults.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.financeInvoiceGroups.edges\n                                    const pageInfo = fetchMoreResult.financeInvoiceGroups.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new invoice_groups_defaults at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          financeInvoiceGroups: {\n                                            __typename: previousResult.financeInvoiceGroups.__typename,\n                                            edges: [ ...previousResult.financeInvoiceGroups.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} \n                    >\n                    <Table>\n                      <Table.Header>\n                        <Table.Row key={v4()}>\n                          <Table.ColHeader>{t('finance.invoice_groups_defaults.item_type')}</Table.ColHeader>\n                          <Table.ColHeader>{t('finance.invoice_groups_defaults.invoice_group')}</Table.ColHeader>\n                        </Table.Row>\n                      </Table.Header>\n                      <Table.Body>\n                          {invoice_group_defaults.edges.map(({ node }) => (\n                            <Table.Row key={v4()}>\n                              <Table.Col key={v4()}>\n                                { fetch_default_type_name(t, node.itemType) }\n                              </Table.Col>\n                              <Table.Col>\n                                <Query query={GET_INVOICE_GROUPS_QUERY} variables={{archived: false}}>\n                                  {({ loading, error, data, refetch, fetchMore }) => {\n                                    // Loading\n                                    if (loading) return ( \"Loading...\")\n                                    // Error\n                                    if (error) return ( \"error loading\" )\n\n                                    const inputData = data\n\n                                    return (\n                                      <Mutation mutation={UPDATE_INVOICE_GROUP_DEFAULT} key={v4()}>\n                                        {(updateDefault, { data }) => (\n                                          <Formik\n                                            initialValues={{ \n                                              financeInvoiceGroup:node.financeInvoiceGroup.id\n                                            }}\n                                            validationSchema={INVOICE_GROUP_DEFAULT_SCHEMA}\n                                            onSubmit={(values, { setSubmitting }) => {\n                                                console.log('submit values:')\n                                                console.log(values)\n\n                                                updateDefault({ variables: {\n                                                  input: {\n                                                    id: node.id,\n                                                    financeInvoiceGroup: values.financeInvoiceGroup\n                                                  }\n                                                }, refetchQueries: [\n                                                    // {query: GET_INVOICE_GROUPS_QUERY, variables: {\"archived\": false }}\n                                                ]})\n                                                .then(({ data }) => {\n                                                    console.log('got data', data)\n                                                    toast.success((t('finance.invoice_groups.toast_edit_success')), {\n                                                        position: toast.POSITION.BOTTOM_RIGHT\n                                                      })\n                                                  }).catch((error) => {\n                                                    toast.error((t('general.toast_server_error')) +  error, {\n                                                        position: toast.POSITION.BOTTOM_RIGHT\n                                                      })\n                                                    console.log('there was an error sending the query', error)\n                                                    setSubmitting(false)\n                                                  })\n                                            }}\n                                            >\n                                            {({ isSubmitting, errors, values, setFieldTouched, setFieldValue, submitForm }) => (\n                                              <FinanceInvoiceGroupDefaultForm\n                                                inputData={inputData}\n                                                isSubmitting={isSubmitting}\n                                                errors={errors}\n                                                values={values}\n                                                setFieldTouched={setFieldTouched}\n                                                setFieldValue={setFieldValue}\n                                                submitForm={submitForm}\n                                              />\n                                            )}\n                                        </Formik>\n                                        )}\n                                      </Mutation>\n                                    )}}\n                                  </Query>\n                                </Table.Col>\n                            </Table.Row>\n                          ))}\n                      </Table.Body>\n                    </Table>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <h5>{t(\"general.menu\")}</h5>\n            <FinanceMenu activeLink='invoices'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupsDefaults))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_INVOICE_PAYMENT_QUERY = gql`\n  query FinanceInvoicePayment($id: ID!) {\n    financeInvoicePayment(id:$id) {\n      id\n      date\n      amount\n      financePaymentMethod {\n        id\n        name\n      }\n      note\n      onlinePaymentId\n    }\n  }\n`\n\nexport const UPDATE_FINANCE_INVOICE_PAYMENT = gql`\n  mutation UpdateFinanceInvoicePayment($input:UpdateFinanceInvoicePaymentInput!) {\n    updateFinanceInvoicePayment(input:$input) {\n      financeInvoicePayment {\n        id\n      } \n    }\n  }\n`\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const FINANCE_INVOICE_PAYMENT_SCHEMA = Yup.object().shape({\n  // account: Yup.string()\n  //   .required(t('yup.field_required')),\n  // role: Yup.string(),\n  // account2: Yup.string(),\n  // role2: Yup.string(),\n  // dateStart: Yup.date()\n  //   .required(t('yup.field_required')),\n  // // dateEnd: Yup.date()\n  })\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\n// import { GET_INVOICE_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { GET_INVOICE_QUERY } from \"../queries\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\n// import ScheduleClassPriceBack from \"./ScheduleClassPriceBack\"\nimport FinanceInvoiceEditBalance from \"../edit/FinanceInvoiceEditBalance\"\n\n\nfunction FinanceInvoicePaymentBase({ t, history, match, children, form_type=\"create\" }) {\n  const invoiceId = match.params.invoice_id\n  const return_url = \"/finance/invoices/edit/\" + invoiceId\n  const { loading: queryLoading, error: queryError, data, } = useQuery(GET_INVOICE_QUERY, {\n    variables: {\n      id: invoiceId\n    }\n  })\n\n  if (queryLoading) return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <p>{t('general.loading_with_dots')}</p>\n      </div>\n    </SiteWrapper>\n  )\n  // Error\n  if (queryError) {\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          { console.log(queryError) }\n          <p>{t('general.error_sad_smiley')}</p>\n        </div>\n      </SiteWrapper>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const invoice_number = inputData.financeInvoice.invoiceNumber\n\n  let title\n  if ( form_type == \"create\" ) {\n    title = t('finance.invoice.payments.add')\n  } else {\n    title = t('finance.invoice.payments.edit')\n  }\n\n  title = title + \" #\" + invoice_number\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={ title }>\n            <div className=\"page-options d-flex\">\n              {/* Back */}\n              <Link to={return_url} \n                    className='btn btn-secondary mr-2'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')} \n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={8}>\n              {/* Form can go here */}\n              {children} \n            </Grid.Col>\n            <Grid.Col md={4}>\n            <Card statusColor=\"blue\">\n              <Card.Header>\n                <Card.Title>{t('general.info')}</Card.Title>\n              </Card.Header>\n              <Card.Body padding={0}>\n                <h4> #{ invoice_number } </h4>\n                { inputData.financeInvoice.account.fullName } <br />\n                { inputData.financeInvoice.summary }\n              </Card.Body>\n            </Card>\n            <FinanceInvoiceEditBalance financeInvoice={inputData.financeInvoice} />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoicePaymentBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\nconst FinanceInvoicePaymentForm = ({ t, history, match, isSubmitting, errors, values, inputData, return_url, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n    <Card statusColor=\"blue\">\n      <Card.Header>\n        <Card.Title>{t('general.details')}</Card.Title>\n      </Card.Header>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date')}>\n              <CSDatePicker \n                selected={values.date}\n                onChange={(date) => setFieldValue(\"date\", date)}\n                onBlur={() => setFieldTouched(\"date\", true)}\n              />\n              <ErrorMessage name=\"date\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.amount')}>\n              <Field type=\"text\" \n                      name=\"amount\" \n                      className={(errors.amount) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"amount\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.payment_method')}>\n              <Field component=\"select\" \n                      name=\"financePaymentMethod\" \n                      className={(errors.financePaymentMethod) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in finance payment form:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('')}</option>\n                {inputData.financePaymentMethods.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financePaymentMethod\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.note')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"note\"\n                initialValue={values.note}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldValue(\"note\", e.target.getContent())\n                  setFieldTouched(\"note\", true)\n                }}\n              />\n            <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(return_url)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </Card>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(FinanceInvoicePaymentForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n\n\nimport { get_list_query_variables } from \"../tools\"\n\nimport { GET_INVOICE_QUERY, GET_INVOICES_QUERY } from \"../queries\"\nimport { GET_INPUT_VALUES_QUERY } from './queries'\nimport { FINANCE_INVOICE_PAYMENT_SCHEMA } from './yupSchema'\n// import ScheduleClassPriceForm from './ScheduleClassPriceForm'\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport SiteWrapper from \"../../../SiteWrapper\"\n\nimport FinanceInvoicePaymentBase from \"./FinanceInvoicePaymentBase\"\nimport FinanceInvoicePaymentForm from \"./FinanceInvoicePaymentForm\"\n\n\nconst ADD_FINANCE_INVOICE_PAYMENT = gql`\n  mutation CreateFinanceInvoicePayment($input:CreateFinanceInvoicePaymentInput!) {\n    createFinanceInvoicePayment(input:$input) {\n      financeInvoicePayment {\n        id\n      } \n    }\n  }\n`\n\n\nfunction FinanceInvoicePaymentAdd({ t, history, match }) {\n  const invoiceId = match.params.invoice_id\n  const return_url = \"/finance/invoices/edit/\" + invoiceId\n  const { loading: queryLoading, error: queryError, data, } = useQuery(GET_INVOICE_QUERY, {\n    variables: {\n      id: invoiceId\n    }\n  })\n  const [addInvoicePayment, { mutationData, mutationLoading, mutationError, onCompleted }] = useMutation(ADD_FINANCE_INVOICE_PAYMENT, {\n    onCompleted: () => history.push(return_url),\n  })\n\n  if (queryLoading) return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <p>{t('general.loading_with_dots')}</p>\n      </div>\n    </SiteWrapper>\n  )\n  // Error\n  if (queryError) {\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          { console.log(queryError) }\n          <p>{t('general.error_sad_smiley')}</p>\n        </div>\n      </SiteWrapper>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n\n\n  return (\n    <FinanceInvoicePaymentBase form_type={\"create\"}>\n      <Formik\n        initialValues={{ \n          date: new Date() ,\n          amount: inputData.financeInvoice.balance,\n          financePaymentMethod: \"\",\n          note: \"\"\n        }}\n        // validationSchema={FINANCE_INVOICE_PAYMENT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n            addInvoicePayment({ variables: {\n              input: {\n                financeInvoice: invoiceId,\n                date: dateToLocalISO(values.date),\n                amount: values.amount,\n                financePaymentMethod: values.financePaymentMethod,\n                note: values.note\n              }\n            }, refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables() },\n                {query: GET_INVOICE_QUERY, variables: { id: invoiceId }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('finance.invoice.payments.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <FinanceInvoicePaymentForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            return_url={return_url}\n          />\n        )}\n      </Formik>\n    </FinanceInvoicePaymentBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoicePaymentAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport { get_list_query_variables } from \"../tools\"\n\nimport { GET_INVOICE_QUERY, GET_INVOICES_QUERY } from \"../queries\"\nimport { GET_INVOICE_PAYMENT_QUERY, UPDATE_FINANCE_INVOICE_PAYMENT } from './queries'\nimport { FINANCE_INVOICE_PAYMENT_SCHEMA } from './yupSchema'\n// import ScheduleClassPriceForm from './ScheduleClassPriceForm'\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport SiteWrapper from \"../../../SiteWrapper\"\n\nimport FinanceInvoicePaymentBase from \"./FinanceInvoicePaymentBase\"\nimport FinanceInvoicePaymentForm from \"./FinanceInvoicePaymentForm\"\n\n\n\nfunction FinanceInvoicePaymentEdit({ t, history, match }) {\n  const invoiceId = match.params.invoice_id\n  const id = match.params.id\n  console.log(invoiceId)\n  console.log(id)\n\n  const return_url = \"/finance/invoices/edit/\" + invoiceId\n  const { loading: invoiceQueryLoading, error: invoiceQueryError, data: invoiceData, } = useQuery(GET_INVOICE_QUERY, {\n    variables: {\n      id: invoiceId\n    }\n  })\n  const { loading: paymentQueryLoading, error: paymentQueryError, data: paymentData, } = useQuery(GET_INVOICE_PAYMENT_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n  const [updateInvoicePayment, { mutationData, mutationLoading, mutationError, onCompleted }] = useMutation(UPDATE_FINANCE_INVOICE_PAYMENT, {\n    onCompleted: () => history.push(return_url),\n  })\n\n  if (invoiceQueryLoading || paymentQueryLoading) return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <p>{t('general.loading_with_dots')}</p>\n      </div>\n    </SiteWrapper>\n  )\n  // Error\n  if (invoiceQueryError) {\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          { console.log(invoiceQueryError) }\n          <p>{t('general.error_sad_smiley')}</p>\n        </div>\n      </SiteWrapper>\n    )\n  }\n  // Error\n  if (paymentQueryError) {\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          { console.log(paymentQueryError) }\n          <p>{t('general.error_sad_smiley')}</p>\n        </div>\n      </SiteWrapper>\n    )\n  }\n\n  console.log('query data')\n  console.log(invoiceData)\n  console.log(paymentData)\n  const inputData = invoiceData\n  const initialValues = paymentData.financeInvoicePayment\n\n  let initialPaymentMethod\n  if (initialValues.financePaymentMethod) {\n    initialPaymentMethod = initialValues.financePaymentMethod.id\n  }\n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let initialDate = null\n  if (initialValues.date) {\n    initialDate = new Date(initialValues.date)\n  }\n\n  return (\n    <FinanceInvoicePaymentBase form_type={\"update\"}>\n      <Formik\n        initialValues={{ \n          date: initialDate,\n          amount: initialValues.amount,\n          financePaymentMethod: initialPaymentMethod,\n          note: initialValues.note\n        }}\n        // validationSchema={FINANCE_INVOICE_PAYMENT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n            updateInvoicePayment({ variables: {\n              input: {\n                id: id,\n                date: dateToLocalISO(values.date),\n                amount: values.amount,\n                financePaymentMethod: values.financePaymentMethod,\n                note: values.note\n              }\n            }, refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables() },\n                {query: GET_INVOICE_QUERY, variables: { id: invoiceId }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('finance.invoice.payments.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n        }\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <FinanceInvoicePaymentForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            return_url={return_url}\n          />\n        )}\n      </Formik>\n    </FinanceInvoicePaymentBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoicePaymentEdit))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let queryVars = {}\n\n  let status = localStorage.getItem(CSLS.FINANCE_ORDERS_FILTER_STATUS)\n  if (status) {\n    queryVars.status = status\n  } else {\n    queryVars.status = undefined\n  }\n  \n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from './tools'\n\n\nfunction getDefaultValue(value) {\n  let defaultValue = localStorage.getItem(value)\n  console.log(defaultValue)\n\n  if (defaultValue) {\n    return defaultValue\n  } else {\n    console.log('return empty default')\n    return \"\"\n  }\n}\n\n\nfunction updateLocalStorageAndRefetch(key, value, refetch) {\n  localStorage.setItem(key, value)\n  refetch(get_list_query_variables())\n\n}\n\nconst selectClass = \"form-control mb-2\"\n\n\nconst FinanceOrdersFilter = ({ t, history, data, refetch }) => (\n  <div>\n    {/* Status */}\n    <select \n      className={selectClass}\n      value={getDefaultValue(CSLS.FINANCE_ORDERS_FILTER_STATUS)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.FINANCE_ORDERS_FILTER_STATUS,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t('finance.orders.statuses.all')}</option>\n      <option value=\"RECEIVED\" key={v4()}>{t('finance.orders.statuses.RECEIVED')}</option>\n      <option value=\"AWAITING_PAYMENT\" key={v4()}>{t('finance.orders.statuses.AWAITING_PAYMENT')}</option>\n      <option value=\"PAID\" key={v4()}>{t('finance.orders.statuses.PAID')}</option>\n      <option value=\"DELIVERED\" key={v4()}>{t('finance.orders.statuses.DELIVERED')}</option>\n      <option value=\"CANCELLED\" key={v4()}>{t('finance.orders.statuses.CANCELLED')}</option>\n    </select>\n  </div>\n);\n\nexport default withTranslation()(withRouter(FinanceOrdersFilter))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Container,\n  Grid,\n  Page\n} from \"tabler-react\";\n\nimport SiteWrapper from \"../../SiteWrapper\"\n\nimport FinanceOrdersFilter from \"./FinanceOrdersFilter\"\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nconst FinanceOrdersBase = ({ t, history, children, refetch }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"finance.title\")}>\n          <div className=\"page-options d-flex\">\n          </div>\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            {children}\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n            <FinanceOrdersFilter refetch={refetch}/>\n            <h5>{t(\"general.menu\")}</h5>\n            <FinanceMenu activeLink='orders'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n)\n\nexport default withTranslation()(withRouter(FinanceOrdersBase))","// @flow\n\nimport React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Badge\n} from \"tabler-react\";\n\n\nclass FinanceOrderStatus extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"finance order status props:\")\n    console.log(props)\n  }\n\n  // ('RECEIVED', _(\"Received\")),\n  // ('AWAITING_PAYMENT', _(\"Awaiting payment\")),\n  // ('PAID', _(\"Paid\")),\n  // ('DELIVERED', _(\"Delivered\")),\n  // ('CANCELLED', _(\"Cancelled\")),\n\n  render() {\n    const t = this.props.t\n    const history = this.props.history\n    const status = this.props.status\n\n    switch (status) {\n      case \"RECEIVED\":\n        return <Badge color=\"secondary\">{t('finance.orders.statuses.RECEIVED')}</Badge>\n        break\n      case \"AWAITING_PAYMENT\":\n        return <Badge color=\"primary\">{t('finance.orders.statuses.AWAITING_PAYMENT')}</Badge>\n        break\n      case \"PAID\":\n        return <Badge color=\"success\">{t('finance.orders.statuses.PAID')}</Badge>\n        break\n      case \"DELIVERED\":\n        return <Badge color=\"success\">{t('finance.orders.statuses.DELIVERED')}</Badge>\n        break\n      case \"CANCELLED\":\n        return <Badge color=\"warning\">{t('finance.orders.statuses.CANCELLED')}</Badge>\n        break\n      default:\n        return t('finance.orders.statuses.NOT_FOUND') \n    }\n  }\n}\n\n\nexport default withTranslation()(withRouter(FinanceOrderStatus))","import { gql } from \"@apollo/client\"\n\nexport const GET_ORDERS_QUERY = gql`\n  query FinanceOrders($after: String, $before: String, $status: String) {\n    financeOrders(first: 15, before: $before, after: $after, status: $status) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          orderNumber\n          account {\n            id\n            fullName\n          }\n          message\n          status\n          total\n          totalDisplay\n          createdAt\n        }\n      }\n    }\n  }\n`\n\nexport const GET_ORDER_QUERY = gql`\n  query FinanceOrder($id: ID!) {\n    financeOrder(id: $id) {\n      id\n      orderNumber\n      account {\n        id\n        fullName\n      }\n      message\n      status\n      total\n      totalDisplay\n      createdAt\n      items {\n        edges {\n          node {\n            id\n            productName\n          }\n        }\n      }\n      \n    }\n  }\n`\n\n\nexport const UPDATE_FINANCE_ORDER = gql`\n  mutation UpdateFinanceOrder($input: UpdateFinanceOrderInput!) {\n    updateFinanceOrder(input: $input) {\n      financeOrder {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_FINANCE_ORDER = gql`\n  mutation DeleteFinanceOrder($input: DeleteFinanceOrderInput!) {\n    deleteFinanceOrder(input: $input) {\n      ok\n    }\n  }\n`\n","import React, { useContext } from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n// import { get_list_query_variables } from \"../tools\"\nimport { DELETE_FINANCE_ORDER, GET_ORDERS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\nimport moment from 'moment'\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport { get_list_query_variables } from \"./tools\"\n\n\nfunction FinanceOrderDelete({t, match, node}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const [deleteOrder, { data }] = useMutation(DELETE_FINANCE_ORDER)\n\n    return (\n      <button className=\"icon btn btn-link btn-sm\" \n        title={t('general.delete')} \n        href=\"\"\n        onClick={() => {\n          confirm_delete({\n            t: t,\n            msgConfirm: t(\"finance.orders.delete_confirm_msg\"),\n            msgDescription: <p>{t(\"general.order\")} # { node.orderNumber }</p>,\n            msgSuccess: t('finance.orders.deleted'),\n            deleteFunction: deleteOrder,\n            functionVariables: { \n              variables: {\n                input: {\n                  id: node.id\n                }\n              }, \n              refetchQueries: [\n                {query: GET_ORDERS_QUERY, variables: get_list_query_variables() },\n              ]\n            }\n          })\n      }}>\n        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n      </button>\n    )\n}\n\n\nexport default withTranslation()(withRouter(FinanceOrderDelete))\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table, \n  Text\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport { get_list_query_variables } from \"./tools\"\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceOrdersBase from './FinanceOrdersBase'\nimport FinanceOrderStatus from \"./FinanceOrderStatus\"\nimport FinanceOrderDelete from \"./FinanceOrderDelete\"\n\nimport { GET_ORDERS_QUERY, DELETE_FINANCE_ORDER } from \"./queries\"\n\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport moment from 'moment'\n\n\n\nfunction FinanceOrders({t, match, history}) {\n  const title = t(\"shop.home.title\")\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_ORDERS_QUERY, {\n    variables: {get_list_query_variables},\n    fetchPolicy: \"network-only\"\n  })\n\n  if (loading) return (\n    <FinanceOrdersBase title={title}>\n      {t(\"general.loading_with_dots\")}\n    </FinanceOrdersBase>\n  )\n\n  if (error) return (\n    <FinanceOrdersBase title={title}>\n      {t(\"finance.orders.error_loading\")}\n    </FinanceOrdersBase>\n  )\n\n  console.log(data)\n  const orders = data.financeOrders\n  console.log(orders)\n\n  // Empty list\n  if (!orders.edges.length) { return (\n    <FinanceOrdersBase refetch={refetch}>\n      <ContentCard cardTitle={t('finance.orders.title')}>\n        <p>\n          {t('finance.orders.empty_list')}\n        </p>\n      </ContentCard>\n    </FinanceOrdersBase>\n  )}\n\n  return (\n    <FinanceOrdersBase title={title} refetch={refetch}>\n      <ContentCard \n        cardTitle={t('finance.orders.title')} \n        pageInfo={orders.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: orders.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.financeOrders.edges\n              const pageInfo = fetchMoreResult.financeOrders.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new invoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    financeOrders: {\n                      __typename: previousResult.financeOrders.__typename,\n                      edges: [ ...previousResult.financeOrders.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.order_number')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.relation')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.date')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {orders.edges.map(({ node }) => (        \n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    <FinanceOrderStatus status={node.status} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    # {node.orderNumber}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.account && node.account.fullName}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {moment(node.createdAt).format('LL')}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.totalDisplay}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <Link to={\"/finance/orders/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <FinanceOrderDelete node={node}/>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceOrdersBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceOrders))","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\"\n\n\nexport function get_list_query_variables(batchType) {\n  let queryVars = {\n    batchType: batchType.toUpperCase()\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n\nexport function get_add_options_collection(t, batchType) {\n  return (\n    <List unstyled>\n      <List.Item>\n        <Link to={`/finance/paymentbatches/${batchType}/add/invoices`}>\n          <b>{t(\"finance.payment_batch_collections.invoices_batch\")} <Icon name=\"chevron-right\" /></b>\n        </Link><br />\n        <p>{t(\"finance.payment_batch_collections.invoices_batch_description\")}</p>\n      </List.Item>\n      <List.Item>\n        <Link to={`/finance/paymentbatches/${batchType}/add/category`}>\n          <b>{t(\"finance.payment_batch_collections.category_batch\")} <Icon name=\"chevron-right\" /></b>\n        </Link><br />\n        <p>{t(\"finance.payment_batch_collections.category_batch_description\")}</p>\n      </List.Item>\n    </List>\n  )\n}\n\n\nexport function get_add_options_payment(t, batchType) {\n  return (\n    <List unstyled>\n      <List.Item>\n        <Link to={`/finance/paymentbatches/${batchType}/add/category`}>\n          <b>{t(\"finance.payment_batch_payments.category_batch\")} <Icon name=\"chevron-right\" /></b>\n        </Link><br />\n        <p>{t(\"finance.payment_batch_payments.category_batch_description\")}</p>\n      </List.Item>\n    </List>\n  )\n}","import React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Badge\n} from \"tabler-react\"\n\n\nfunction BadgeFinancePaymentBatchStatus({ t, status }) {\n  switch (status) {\n    case \"SENT_TO_BANK\":\n      return <Badge color=\"success\">{t('finance.payment_batches.status.SENT_TO_BANK')}</Badge> \n      break\n    case \"APPROVED\":\n      return <Badge color=\"success\">{t('finance.payment_batches.status.APPROVED')}</Badge> \n      break\n    case \"AWAITING_APPROVAL\":\n      return <Badge color=\"primary\">{t('finance.payment_batches.status.AWAITING_APPROVAL')}</Badge> \n      break\n    case \"REJECTED\":\n      return <Badge color=\"danger\">{t('finance.payment_batches.status.REJECTED')}</Badge> \n      break\n    default:\n      return t(\"finance.payment_batches.status.invalid_type\")\n  }\n}\n\nexport default withTranslation()(BadgeFinancePaymentBatchStatus)\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinancePaymentBatchesBase({t, history, match, children, showAdd=false, showBack=false, returnUrl=\"\"}) {\n  const batchType = match.params.batch_type\n\n  let activeLink\n  if (batchType == 'collection') {\n    activeLink = 'payment_batch_collections'\n  } else {\n    activeLink = 'payment_batch_payments'\n  }\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showAdd) ?\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financepaymentbatch\">\n                  <Link to={`/finance/paymentbatches/${batchType}/add_what`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.payment_batches.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              {(showBack) ?\n                <HasPermissionWrapper permission=\"view\"\n                                      resource=\"financepaymentbatch\">\n                  <Link to={returnUrl}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              <FinanceMenu activeLink={activeLink} />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_PAYMENT_BATCHES_QUERY = gql`\n  query FinancePaymentBatches($after: String, $before: String, $batchType: String!) {\n    financePaymentBatches(first: 15, before: $before, after: $after, batchType: $batchType) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          status\n          financePaymentBatchCategory {\n            id\n            name\n          }\n          description\n          batchType\n          year\n          month\n          includeZeroAmounts\n          note\n        }\n      }\n    }\n  }\n`\n\nexport const GET_PAYMENT_BATCH_QUERY = gql`\n  query FinancePaymentBatch($id: ID!) {\n    financePaymentBatch(id:$id) {\n      id\n      name\n      status\n      financePaymentBatchCategory {\n        id\n        name\n      }\n      description\n      batchType\n      year\n      month\n      includeZeroAmounts\n      note\n      totalDisplay\n      countItems\n      items {\n        pageInfo {\n          startCursor\n          endCursor\n          hasNextPage\n          hasPreviousPage\n        }\n        edges {\n          node {\n            id\n            account {\n              id\n              fullName\n            }\n            financeInvoice {\n              id\n              invoiceNumber\n            }\n            accountHolder\n            accountNumber\n            accountBic\n            mandateReference\n            mandateSignatureDate\n            amount\n            amountDisplay\n            currency\n            description\n          }\n        }\n      }\n      exports {\n        pageInfo {\n          startCursor\n          endCursor\n          hasNextPage\n          hasPreviousPage\n        }\n        edges {\n          node {\n            id\n            account {\n              id\n              fullName\n            }\n            createdAt\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES = gql`\n  query InputValues($after: String, $before: String, $batchCategoryType: String!) {\n    financePaymentBatchCategories(first: 1000, before:$before, after:$after, archived:false, batchCategoryType: $batchCategoryType) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const ADD_PAYMENT_BATCH = gql`\n  mutation CreateFinancePaymentBatch($input:CreateFinancePaymentBatchInput!) {\n    createFinancePaymentBatch(input: $input) {\n      financePaymentBatch {\n        id\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_PAYMENT_BATCH = gql`\n  mutation UpdateFinancePaymentBatch($input:UpdateFinancePaymentBatchInput!) {\n    updateFinancePaymentBatch(input: $input) {\n      financePaymentBatch {\n        id\n      }\n    }\n  }\n`\n\n\nexport const DELETE_PAYMENT_BATCH = gql`\n  mutation DeleteFinancePaymentBatch($input: DeleteFinancePaymentBatchInput!) {\n    deleteFinancePaymentBatch(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport { get_list_query_variables } from \"./tools\"\n\n// import FinancePaymentBatchCategory from \"../../ui/FinancePaymentBatchCategory\"\nimport BadgeFinancePaymentBatchStatus from \"../../ui/BadgeFinancePaymentBatchStatus\"\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceMenu from \"../FinanceMenu\"\nimport FinancePaymentBatchesBase from \"./FinancePaymentBatchesBase\"\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport confirm_delete from \"../../../tools/confirm_delete\"\n\nimport { GET_PAYMENT_BATCHES_QUERY, DELETE_PAYMENT_BATCH } from \"./queries\"\nimport moment from 'moment'\n\nfunction FinancePaymentBatches({t, history, match }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const batchType = match.params.batch_type\n\n  const { loading, error, data, fetchMore, refetch } = useQuery(GET_PAYMENT_BATCHES_QUERY, {\n    variables: get_list_query_variables(batchType),\n  })\n  const [deletePaymentBatch] = useMutation(DELETE_PAYMENT_BATCH)\n\n  let cardTitle\n  let msgEmptyList\n  if (batchType == \"collection\") {\n    cardTitle = t('finance.payment_batch_collections.title')\n    msgEmptyList = t('finance.payment_batch_collections.empty_list')\n  } else {\n    cardTitle = t('finance.payment_batch_payments.title')\n    msgEmptyList = t('finance.payment_batch_payments.empty_list')\n  }\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinancePaymentBatchesBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.payment_batches.error_loading')}</p>\n      </ContentCard>\n      </FinancePaymentBatchesBase>\n  )\n\n  let financePaymentBatches = data.financePaymentBatches\n  // Empty list\n  if (!financePaymentBatches.edges.length) { return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <ContentCard cardTitle={cardTitle} >\n        <p>{msgEmptyList}</p>\n      </ContentCard>\n    </FinancePaymentBatchesBase>\n  )}\n\n  return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <ContentCard cardTitle={cardTitle}\n        pageInfo={financePaymentBatches.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: financePaymentBatches.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.financePaymentBatches.edges\n            const pageInfo = fetchMoreResult.financePaymentBatches.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new payment_methods at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  financePaymentBatches: {\n                    __typename: previousResult.financePaymentBatches.__typename,\n                    edges: [ ...previousResult.financePaymentBatches.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n            }\n        })\n      }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.payment_batches.execution_date')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.payment_batches.batch_category')}</Table.ColHeader>             \n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {financePaymentBatches.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  <BadgeFinancePaymentBatchStatus status={node.status} />\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.name}\n                </Table.Col>\n                <Table.Col>\n                  {moment(node.executionDate).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  {(node.financePaymentBatchCategory) ? node.financePaymentBatchCategory.name : t(\"general.invoices\")}\n                  {(node.year) ? <div><small className=\"text-muted\">{node.year} - {node.month}</small></div> : \"\"}\n                </Table.Col>\n                <Table.Col>\n                  <Link to={`/finance/paymentbatches/${batchType}/view/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.view')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <button className=\"icon btn btn-link btn-sm\" \n                    title={t('general.delete')} \n                    href=\"\"\n                    onClick={() => {\n                      confirm_delete({\n                        t: t,\n                        msgConfirm: t(\"finance.payment_batches.delete_confirm_msg\"),\n                        msgDescription: <p>{node.name}</p>,\n                        msgSuccess: t('finance.payment_batches.deleted'),\n                        deleteFunction: deletePaymentBatch,\n                        functionVariables: { variables: {\n                          input: {\n                            id: node.id\n                          }\n                        }, refetchQueries: [\n                          {query: GET_PAYMENT_BATCHES_QUERY, variables: get_list_query_variables(batchType) } \n                        ]}\n                      })\n                  }}>\n                    <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                  </button>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinancePaymentBatchesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatches))","// @flow\n\nimport React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Badge\n} from \"tabler-react\";\n\n\nclass FinancePaymentBatchCategory extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"finance payment batch category props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const categoryType = this.props.categoryType\n\n    switch (categoryType) {\n      case \"COLLECTION\":\n        return <Badge color=\"success\">{t('finance.payment_batch_categories.payment_batch_category_type.COLLECTION')}</Badge>\n        break\n      case \"PAYMENT\":\n        return <Badge color=\"warning\">{t('finance.payment_batch_categories.payment_batch_category_type.PAYMENT')}</Badge>\n        break\n      default:\n        return t('finance.payment_batch_categories.payment_batch_category_type.NOT_FOUND') \n    }\n  }\n}\n\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategory))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport FinancePaymentBatchCategory from \"../../ui/FinancePaymentBatchCategory\"\nimport ContentCard from \"../../general/ContentCard\"\nimport FinancePaymentBatchesBase from \"./FinancePaymentBatchesBase\"\n\nimport { get_add_options_collection, get_add_options_payment } from './tools'\n\n\nfunction FinancePaymentBatchAddWhat({t, history, match }) {\n  const batchType = match.params.batch_type\n  const returnUrl = `/finance/paymentbatches/${batchType}`\n\n  let cardTitle\n  let options\n  if (batchType == \"collection\") {\n    cardTitle = t('finance.payment_batch_collections.title_add_what')\n    options = get_add_options_collection(t, batchType)\n  } else {\n    cardTitle = t('finance.payment_batch_payments.title_add_what')\n    options = get_add_options_payment(t, batchType)\n  }\n\n  return (\n    <FinancePaymentBatchesBase showBack={true} returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          {options}\n        </Card.Body>\n      </Card>\n    </FinancePaymentBatchesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchAddWhat))","// @flow\n\nimport React, {useState} from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { useMutation } from \"@apollo/client\"\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { toast } from 'react-toastify'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { UPDATE_PAYMENT_BATCH, GET_PAYMENT_BATCHES_QUERY } from \"./queries\"\nimport { get_list_query_variables } from \"./tools\"\n\n\nfunction FinancePaymentBatchViewBase({t, history, match, children, status}) {\n  const batchId = match.params.id\n  const batchType = match.params.batch_type\n  const returnUrl = `/finance/paymentbatches/${batchType}`\n  const exportUrl = `/d/export/finance_payment_batch/csv/${batchId}`\n  const [disabled, setDisabled] = useState(false)\n\n  const [updateFinancePaymentBatch] = useMutation(UPDATE_PAYMENT_BATCH)\n\n  let sentToBankColor = \"secondary\"\n  let approvedColor = \"secondary\"\n  let awaitingApprovalColor = \"secondary\"\n  let rejectedColor = \"secondary\"\n\n  switch (status) {\n    case \"SENT_TO_BANK\":\n      sentToBankColor = \"success\"\n      break\n    case \"APPROVED\":\n      approvedColor = \"success\"\n      break\n    case \"AWAITING_APPROVAL\":\n      awaitingApprovalColor = \"primary\"\n      break\n    case \"REJECTED\":\n      rejectedColor = \"danger\"\n      break\n    default:\n      break\n  }\n\n  function onClickStatusButton(newStatus) {\n    setDisabled(true)\n\n    updateFinancePaymentBatch({ \n      variables: { input: {id: batchId, status: newStatus} }, \n      refetchQueries: [\n        {query: GET_PAYMENT_BATCHES_QUERY, variables: get_list_query_variables(batchType)}\n    ]})\n    .then(({ data }) => {\n        console.log('got data', data);\n        toast.success((t('finance.payment_batches.toast_edit_status_success')), {\n            position: toast.POSITION.BOTTOM_RIGHT\n          })\n        if (status != \"SENT_TO_BANK\") {\n          console.log(status)\n          setDisabled(false)\n        }\n      }).catch((error) => {\n        toast.error((t('general.toast_server_error')) +  error, {\n            position: toast.POSITION.BOTTOM_RIGHT\n          })\n        console.log('there was an error sending the query', error)\n        if (status != \"SENT_TO_BANK\") {\n          console.log(status)\n          setDisabled(false)\n        }\n      })\n  }\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} subTitle={t('finance.payment_batch.title_view')}>\n            <div className=\"page-options d-flex\">\n                <Link to={returnUrl} \n                      className='btn btn-secondary mr-2'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')}\n                </Link>\n                {/* Export as PDF */}\n                <a href={exportUrl} \n                    className='btn btn-secondary mr-2'>\n                    <Icon prefix=\"fe\" name=\"download\" /> {t('general.export')} \n                </a>\n                <Link to={`/finance/paymentbatches/${batchType}/edit/${batchId}`} \n                      className='btn btn-secondary mr-2'>\n                  <Icon name=\"edit-2\" /> {t('general.edit')}\n                </Link>\n                {(status) ? \n                  (status == \"SENT_TO_BANK\") ?\n                    <Button.List>\n                      <Button \n                        icon=\"mail\"\n                        disabled={true}\n                        color={sentToBankColor}\n                        onClick={() => onClickStatusButton(\"SENT_TO_BANK\")}\n                      >\n                        {t('finance.payment_batch.status.SENT_TO_BANK')}\n                      </Button>\n                    </Button.List>\n                  :\n                    <Button.List>\n                      <Button \n                        icon=\"mail\"\n                        disabled={disabled}\n                        color={sentToBankColor}\n                        onClick={() => onClickStatusButton(\"SENT_TO_BANK\")}\n                      >\n                        {t('finance.payment_batch.status.SENT_TO_BANK')}\n                      </Button>\n                      <Button \n                        icon=\"check\"\n                        disabled={disabled}\n                        color={approvedColor}\n                        onClick={() => onClickStatusButton(\"APPROVED\")}\n                      >\n                        {t('finance.payment_batch.status.APPROVED')}\n                      </Button>\n                      <Button \n                        icon=\"clock\"\n                        disabled={disabled}\n                        color={awaitingApprovalColor}\n                        onClick={() => onClickStatusButton(\"AWAITING_APPROVAL\")}\n                      >\n                        {t('finance.payment_batch.status.AWAITING_APPROVAL')}\n                      </Button>\n                      <Button \n                        icon=\"x\"\n                        disabled={disabled}\n                        color={rejectedColor}\n                        onClick={() => onClickStatusButton(\"REJECTED\")}\n                      >\n                        {t('finance.payment_batch.status.REJECTED')}\n                      </Button>\n                    </Button.List>\n                  : \"\"\n                }\n            </div>\n          </Page.Header>\n          {children}\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchViewBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\nimport CSDatePicker from \"../../ui/CSDatePicker\"\n\n\nconst FinancePaymentCollectionBatchForm = (\n  { t, history, isSubmitting, setFieldTouched, setFieldValue, errors, values, inputData, returnUrl, create=false, category=false }\n  ) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.name')}>\n              <Field type=\"text\" \n                      name=\"name\" \n                      className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          {(create) ? \n            <Grid.Col>\n              <Form.Group label={t('finance.payment_batches.execution_date')}>\n                <CSDatePicker \n                  selected={values.executionDate}\n                  onChange={(executionDate) => {\n                    setFieldValue(\"executionDate\", executionDate)\n                    setFieldTouched(\"executionDate\", true)\n                  }}\n                  onBlur={() => setFieldTouched(\"executionDate\", true)}\n                  placeholderText={t('')}\n                />\n                <ErrorMessage name=\"executionDate\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n            : \"\" \n          }\n        </Grid.Row>\n        {(create && category) ?\n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group label={t('general.category')}>\n                <Field component=\"select\" \n                        name=\"financePaymentBatchCategory\" \n                        className={(errors.financePaymentBatchCategory) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\">\n                  <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                  {inputData.financePaymentBatchCategories.edges.map(({ node }) =>\n                    <option value={node.id} key={v4()}>{node.name}</option>\n                  )}\n                </Field>\n                <ErrorMessage name=\"financePaymentBatchCategory\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n            <Grid.Col>\n              <Form.Group label={t('general.year')} >\n                <Field type=\"text\" \n                      name=\"year\" \n                      className={(errors.year) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n                <ErrorMessage name=\"year\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n            <Grid.Col>\n              <Form.Group label={t('general.month')} >\n                <Field type=\"text\" \n                      name=\"month\" \n                      className={(errors.month) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n                <ErrorMessage name=\"month\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          </Grid.Row> \n          : \"\"\n        }\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.note')}>\n              <Field type=\"textarea\"\n                     component=\"textarea\" \n                     name=\"note\" \n                     className={(errors.note) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        {(create) ? \n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group>\n                <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"includeZeroAmounts\" \n                  checked={values.includeZeroAmounts} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('finance.payment_batches.include_zero_amounts')}</span>\n                </Form.Label>\n                <ErrorMessage name=\"includeZeroAmounts\" component=\"div\" />   \n              </Form.Group>  \n            </Grid.Col>\n          </Grid.Row>\n          : \"\" \n        }\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(FinancePaymentCollectionBatchForm))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport { GET_PAYMENT_BATCHES_QUERY, GET_PAYMENT_BATCH_QUERY } from './queries'\n// import { PAYMENT_BATCH_CATEGORY_SCHEMA } from './yupSchema'\nimport { get_list_query_variables } from \"./tools\"\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n  List,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\nimport BooleanBadge from \"../../ui/BadgeBoolean\"\nimport FinancePaymentBatchCategory from \"../../ui/FinancePaymentBatchCategory\"\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport FinanceMenu from '../FinanceMenu'\nimport FinancePaymentBatchViewBase from './FinancePaymentBatchViewBase'\nimport FinancePaymentCollectionBatchForm from './FinancePaymentCollectionBatchForm'\nimport BadgeBoolean from '../../ui/BadgeBoolean';\n\nfunction FinancePaymentBatchView({ t, history, match }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n  const batchType = match.params.batch_type\n  const batchId = match.params.id\n  const returnUrl = `/finance/paymentbatches/${batchType}`\n\n  const { loading, error, data } = useQuery(GET_PAYMENT_BATCH_QUERY, {\n    variables: { id: batchId }\n  })\n  // const [updateFinancePaymentBatch] = useMutation(UPDATE_PAYMENT_BATCH)\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchViewBase>\n      <p>{t(\"general.loading_with_dots\")}</p>\n    </FinancePaymentBatchViewBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchViewBase>\n      <p>{t('finance.payment_batch.error_loading')}</p>\n    </FinancePaymentBatchViewBase>\n  )\n\n  const financePaymentBatch = data.financePaymentBatch\n  console.log(financePaymentBatch)\n\n  return (\n    <FinancePaymentBatchViewBase status={financePaymentBatch.status}>\n      <Grid.Row>\n        <Grid.Col md={4}>\n          <Card title={t(\"finance.payment_batch.title_batch_info\")}>\n            <Table cards>\n              <Table.Body>\n                <Table.Row>\n                  <Table.Col>\n                    {t(\"general.name\")}\n                  </Table.Col>\n                  <Table.Col>\n                    {financePaymentBatch.name}\n                  </Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Col>\n                    {t('finance.payment_batch_categories.batch_category_type')}\n                  </Table.Col>\n                  <Table.Col>\n                    <FinancePaymentBatchCategory categoryType={financePaymentBatch.batchType} />\n                  </Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Col>\n                    {t('finance.payment_batches.batch_category')}\n                  </Table.Col>\n                  <Table.Col>\n                    {\n                      (financePaymentBatch.financePaymentBatchCategory) ? \n                        <div>\n                          {financePaymentBatch.financePaymentBatchCategory.name}\n                          <div><small className=\"text-muted\">{financePaymentBatch.year} - {financePaymentBatch.month}</small></div>\n                        </div> : \n                        t(\"general.invoices\")\n                    }\n                  </Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Col>\n                    {t('finance.payment_batches.execution_date')}\n                  </Table.Col>\n                  <Table.Col>\n                    {moment(financePaymentBatch.executionDate).format(dateFormat)}\n                  </Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Col>\n                    {t('finance.payment_batches.include_zero_amounts')}\n                  </Table.Col>\n                  <Table.Col>\n                    <BadgeBoolean value={financePaymentBatch.includeZeroAmounts} />\n                  </Table.Col>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"finance.payment_batch.title_batch_totals\")}>\n            <Table cards>\n              <Table.Row>\n                <Table.Col>\n                  {t('general.total')}\n                </Table.Col>\n                <Table.Col>\n                  {financePaymentBatch.totalDisplay}\n                </Table.Col>\n              </Table.Row>\n              <Table.Row>\n                <Table.Col>\n                  {t('general.items')}\n                </Table.Col>\n                <Table.Col>\n                  {financePaymentBatch.countItems}\n                </Table.Col>\n              </Table.Row>\n            </Table>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"finance.payment_batch.title_batch_exports\")}>\n            <Card.Body>\n              <List unstyled>\n              {financePaymentBatch.exports.edges.map(({ node }) => (\n                <List.Item>\n                  {moment(node.createdAt).format(dateTimeFormat)} <br /> \n                  <small>{node.account.fullName}</small>\n                </List.Item>\n              ))}\n              </List>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n      {(financePaymentBatch.note) ?\n        <Grid.Row>\n          <Grid.Col md={12}>\n              <Card title={t(\"finance.payment_batch.title_batch_note\")}>\n                <Card.Body>\n                  {financePaymentBatch.note}\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n      : \"\" }\n      <Grid.Row>\n        <Grid.Col>\n          <Card title={t(\"finance.payment_batch.title_batch_items\")}>\n            <small>\n              <Table cards >\n                <Table.Header>\n                  <Table.Row>\n                    <Table.ColHeader>\n                      {t(\"general.line\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"general.account\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"relations.account.bank_accounts.holder\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"relations.account.bank_accounts.number\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"general.description\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"settings.finance.currency.title\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"general.amount\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"finance.invoices.invoice_number\")}\n                    </Table.ColHeader>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {financePaymentBatch.items.edges.map(({ node }, index) => (\n                    <Table.Row>\n                      <Table.Col>{index + 1}</Table.Col>\n                      <Table.Col>\n                        <Link to={`/relations/accounts/${node.account.id}/profile`}>\n                          {node.account.fullName}\n                        </Link>\n                      </Table.Col>\n                      <Table.Col>\n                        {node.accountHolder}\n                      </Table.Col>\n                      <Table.Col>\n                        {node.accountNumber} {(node.accountBic) ? <div>{node.accountBic}</div> : \"\"}\n                      </Table.Col>\n                      <Table.Col>\n                        {node.description}\n                      </Table.Col>\n                      <Table.Col>\n                        {node.currency}\n                      </Table.Col>\n                      <Table.Col>\n                        {node.amountDisplay}\n                      </Table.Col>\n                      <Table.Col>\n                        {(node.financeInvoice) ?\n                          <Link to={`/finance/invoices/edit/${node.financeInvoice.id}`}>\n                            {node.financeInvoice.invoiceNumber}\n                          </Link> : \"\" }\n                      </Table.Col>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </small>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n      {/* <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: '', description: '', executionDate: new Date() }}\n          // validationSchema={PAYMENT_BATCH_CATEGORY_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            let input = {\n                batchType: batchType.toUpperCase(),\n                name: values.name, \n                executionDate: dateToLocalISO(values.executionDate),\n                description: values.description,\n                note: values.note,\n                includeZeroAmounts: values.includeZeroAmounts\n            }\n\n            if (categoryType == \"category\") {\n              input.year = values.year\n              input.month = values.month\n              input.financePaymentBatchCategory = values.financePaymentBatchCategory\n            }\n\n            addFinancePaymentBatch({ \n              variables: { input: input }, \n              refetchQueries: [\n                {query: GET_PAYMENT_BATCHES_QUERY, variables: get_list_query_variables(batchType)}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('finance.payment_batches.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldValue, setFieldTouched }) => (\n              <FinancePaymentCollectionBatchForm\n                inputValues={inputValues}\n                create={true}\n                invoices={invoices}\n                category={category}\n                isSubmitting={isSubmitting}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                values={values}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card> */}\n    </FinancePaymentBatchViewBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchView))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const PAYMENT_BATCH_INVOICES_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    executionDate: Yup.date()\n      .required(t('yup.field_required')),\n    note: Yup.string(),\n    includeZeroAmounts: Yup.boolean()\n  })\n\nexport const PAYMENT_BATCH_CATEGORY_SCHEMA = Yup.object().shape({\n  name: Yup.string()\n    .min(3, t('yup.min_len_3'))\n    .required(t('yup.field_required')),\n  executionDate: Yup.date()\n    .required(t('yup.field_required')),\n  financePaymentBatchCategory: Yup.string()\n  .required(t('yup.field_required')),\n  year: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  month: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  note: Yup.string(),\n  includeZeroAmounts: Yup.boolean()\n  })\n\nexport const PAYMENT_BATCH_EDIT_SCHEMA = Yup.object().shape({\n  name: Yup.string()\n    .min(3, t('yup.min_len_3'))\n    .required(t('yup.field_required')),\n})","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { ADD_PAYMENT_BATCH, GET_PAYMENT_BATCHES_QUERY, GET_INPUT_VALUES } from './queries'\nimport { PAYMENT_BATCH_INVOICES_SCHEMA, PAYMENT_BATCH_CATEGORY_SCHEMA } from './yupSchema'\nimport { get_list_query_variables } from \"./tools\"\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\n\nimport FinanceMenu from '../FinanceMenu'\nimport FinancePaymentBatchesBase from './FinancePaymentBatchesBase'\nimport FinancePaymentCollectionBatchForm from './FinancePaymentCollectionBatchForm'\n\n\nfunction FinancePaymentCollectionBatchAdd({ t, history, match }) {\n  const batchType = match.params.batch_type\n  const returnUrl = `/finance/paymentbatches/${batchType}`\n  const categoryType = match.params.category_type\n  const cardTitle = t('finance.payment_batch.title_add')\n\n\n  let invoices = false\n  let category = false\n  switch (categoryType) {\n    case \"invoices\":\n      invoices = true\n      break\n    case \"category\":\n      category = true\n      break\n    default:\n      break\n  }\n\n  let batchCategoryType\n  switch (batchType) {\n    case \"collection\":\n      batchCategoryType = \"COLLECTION\"\n      break\n    case \"payment\":\n      batchCategoryType = \"PAYMENT\"\n      break\n    default:\n      break\n  }\n\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES, { variables: {\n    batchCategoryType: batchCategoryType\n  }})\n  const [addFinancePaymentBatch] = useMutation(ADD_PAYMENT_BATCH)\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <Card cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </Card>\n    </FinancePaymentBatchesBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <Card cardTitle={cardTitle}>\n        <p>{t('finance.payment_batches.error_loading_input_values')}</p>\n      </Card>\n      </FinancePaymentBatchesBase>\n  )\n\n  const inputData = data\n\n  let initialValues = { name: '', description: '', executionDate: new Date() }\n  let yupSchema\n  if (categoryType == \"category\") {\n    initialValues.year = new Date().getFullYear()\n    initialValues.month = new Date().getMonth() + 1\n    yupSchema = PAYMENT_BATCH_CATEGORY_SCHEMA\n  } else {\n    yupSchema = PAYMENT_BATCH_INVOICES_SCHEMA\n  }\n\n  return (\n    <FinancePaymentBatchesBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={yupSchema}\n          onSubmit={(values, { setSubmitting }) => {\n            let input = {\n                batchType: batchType.toUpperCase(),\n                name: values.name, \n                executionDate: dateToLocalISO(values.executionDate),\n                description: values.description,\n                note: values.note,\n                includeZeroAmounts: values.includeZeroAmounts\n            }\n\n            if (categoryType == \"category\") {\n              input.year = values.year\n              input.month = values.month\n              input.financePaymentBatchCategory = values.financePaymentBatchCategory\n            }\n\n            addFinancePaymentBatch({ \n              variables: { input: input }, \n              refetchQueries: [\n                {query: GET_PAYMENT_BATCHES_QUERY, variables: get_list_query_variables(batchType)}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                const id = data.createFinancePaymentBatch.financePaymentBatch.id\n                history.push(`/finance/paymentbatches/${batchType}/view/${id}`)\n                toast.success((t('finance.payment_batches.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldValue, setFieldTouched }) => (\n              <FinancePaymentCollectionBatchForm\n                inputData={inputData}\n                create={true}\n                invoices={invoices}\n                category={category}\n                isSubmitting={isSubmitting}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                values={values}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </FinancePaymentBatchesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentCollectionBatchAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { UPDATE_PAYMENT_BATCH, GET_PAYMENT_BATCH_QUERY, GET_PAYMENT_BATCHES_QUERY } from './queries'\nimport { PAYMENT_BATCH_EDIT_SCHEMA } from './yupSchema'\nimport { get_list_query_variables } from \"./tools\"\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\n\nimport FinanceMenu from '../FinanceMenu'\nimport FinancePaymentBatchesBase from './FinancePaymentBatchesBase'\nimport FinancePaymentCollectionBatchForm from './FinancePaymentCollectionBatchForm'\n\n\nfunction FinancePaymentCollectionBatchEdit({ t, history, match }) {\n  const batchType = match.params.batch_type\n  const batchId = match.params.id\n  const returnUrl = `/finance/paymentbatches/${batchType}/view/${batchId}`\n  const cardTitle = t('finance.payment_batch.title_edit')\n\n\n  const { loading, error, data } = useQuery(GET_PAYMENT_BATCH_QUERY, {\n    variables: { id: batchId }\n  })\n  const [updateFinancePaymentBatch] = useMutation(UPDATE_PAYMENT_BATCH)\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchesBase showAdd={false} returnUrl={returnUrl}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <Dimmer active={true} loader={true} />\n        </Card.Body>\n      </Card>\n    </FinancePaymentBatchesBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchesBase showAdd={true} returnUrl={returnUrl}>\n      <Card title={cardTitle}>\n        <p>{t('finance.payment_batches.error_loading_input_values')}</p>\n      </Card>\n      </FinancePaymentBatchesBase>\n  )\n\n  const inputValues = data.financePaymentBatch\n\n  return (\n    <FinancePaymentBatchesBase showBack={true} returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: inputValues.name , note: inputValues.note }}\n          validationSchema={PAYMENT_BATCH_EDIT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            let input = {\n                id: batchId,\n                name: values.name, \n                note: values.note,\n            }\n\n            updateFinancePaymentBatch({ \n              variables: { input: input }, \n              refetchQueries: [\n                {query: GET_PAYMENT_BATCHES_QUERY, variables: get_list_query_variables(batchType)}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('finance.payment_batches.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldValue, setFieldTouched }) => (\n              <FinancePaymentCollectionBatchForm\n                create={false}\n                isSubmitting={isSubmitting}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                values={values}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </FinancePaymentBatchesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentCollectionBatchEdit))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let showArchive = localStorage.getItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE)\n  if (showArchive === null) {\n    showArchive = \"false\"\n  }\n\n  let queryVars = {\n    archived: (showArchive === \"true\") ? true : false,\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinancePaymentBatchCategoriesBase({t, history, children, showAdd=false, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showAdd) ?\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financepaymentbatchcategory\">\n                  <Link to={\"/finance/paymentbatchcategories/add\"}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.payment_batch_categories.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              {(showBack) ?\n                <HasPermissionWrapper permission=\"view\"\n                                      resource=\"financepaymentbatchcategory\">\n                  <Link to=\"/finance/paymentbatchcategories\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              <FinanceMenu activeLink='payment_batch_categories'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategoriesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_PAYMENT_BATCH_CATEGORIES_QUERY = gql`\n  query FinancePaymentBatchCategories($after: String, $before: String, $archived: Boolean) {\n    financePaymentBatchCategories(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          description\n          batchCategoryType\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_PAYMENT_BATCH_CATEGORY_QUERY = gql`\n  query FinancePaymentBatchCategory($id: ID!) {\n    financePaymentBatchCategory(id:$id) {\n      id\n      name\n      description\n      archived\n    }\n  }\n`\n\n\nexport const ARCHIVE_PAYMENT_BATCH_CATEGORY = gql`\n  mutation ArchiveFinancePaymentBatchCategory($input: ArchiveFinancePaymentBatchCategoryInput!) {\n    archiveFinancePaymentBatchCategory(input: $input) {\n      financePaymentBatchCategory {\n        id\n        archived\n      }\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport { get_list_query_variables } from \"./tools\"\n\nimport FinancePaymentBatchCategory from \"../../ui/FinancePaymentBatchCategory\"\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceMenu from \"../FinanceMenu\"\nimport FinancePaymentBatchCategoriesBase from \"./FinancePaymentBatchCategoriesBase\"\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport { GET_PAYMENT_BATCH_CATEGORIES_QUERY, ARCHIVE_PAYMENT_BATCH_CATEGORY } from \"./queries\"\n\nfunction FinancePaymentBatchCategories({t, history}) {\n  const { loading, error, data, fetchMore, refetch } = useQuery(GET_PAYMENT_BATCH_CATEGORIES_QUERY, {\n    variables: get_list_query_variables(),\n  })\n  const [archivePaymentBatchCategory] = useMutation(ARCHIVE_PAYMENT_BATCH_CATEGORY)\n\n  // TODO: use local storage for archive buttons\n  const headerOptions = <Card.Options>\n    <Button color={(localStorage.getItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE) != \"true\") ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {\n              localStorage.setItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE, false)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.current')}\n    </Button>\n    <Button color={(localStorage.getItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE) === \"true\") ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {\n              localStorage.setItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE, true)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchCategoriesBase showAdd={true}>\n      <ContentCard cardTitle={t('finance.payment_batch_categories.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinancePaymentBatchCategoriesBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchCategoriesBase showAdd={true}>\n      <ContentCard cardTitle={t('finance.payment_batch_categories.title')}>\n        <p>{t('finance.payment_batch_categories.error_loading')}</p>\n      </ContentCard>\n      </FinancePaymentBatchCategoriesBase>\n  )\n\n  let payment_batch_categories = data.financePaymentBatchCategories\n  // Empty list\n  if (!payment_batch_categories.edges.length) { return (\n    <FinancePaymentBatchCategoriesBase showAdd={true}>\n      <ContentCard cardTitle={t('finance.payment_batch_categories.title')}\n                    headerContent={headerOptions}>\n        <p>\n          { (localStorage.getItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE === \"true\")) ? \n              t(\"finance.payment_batch_categories.empty_archive\") :\n              t('finance.payment_batch_categories.empty_list')\n          }\n        </p>\n      </ContentCard>\n    </FinancePaymentBatchCategoriesBase>\n  )}\n\n  return (\n    <FinancePaymentBatchCategoriesBase showAdd={true}>\n      <ContentCard cardTitle={t('finance.payment_batch_categories.title')}\n        headerContent={headerOptions}\n        pageInfo={payment_batch_categories.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: payment_batch_categories.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.financePaymentBatchCategories.edges\n            const pageInfo = fetchMoreResult.financePaymentBatchCategories.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new payment_methods at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  financePaymentBatchCategories: {\n                    __typename: previousResult.financePaymentBatchCategories.__typename,\n                    edges: [ ...previousResult.financePaymentBatchCategories.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n            }\n        })\n      }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.payment_batch_categories.batch_category_type')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {payment_batch_categories.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  {node.name}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  <FinancePaymentBatchCategory categoryType={node.batchCategoryType} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/finance/paymentbatchcategories/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.archive')} \n                      onClick={() => {\n                        console.log(\"clicked archived\")\n                        let id = node.id\n                        archivePaymentBatchCategory({ variables: {\n                          input: {\n                          id,\n                          archived: !node.archived\n                        }\n                      }, refetchQueries: [\n                          {query: GET_PAYMENT_BATCH_CATEGORIES_QUERY, variables: get_list_query_variables()}\n                      ]}).then(({ data }) => {\n                        console.log('got data', data);\n                        toast.success(\n                          (node.archived) ? t('general.unarchived'): t('general.archived'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error);\n                        })\n                      }}>\n                    <Icon prefix=\"fa\" name=\"inbox\" />\n                  </button>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinancePaymentBatchCategoriesBase>\n  )\n}\n\n\n\n// const FinancePaymentMethods = ({ t, history, archived=false }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t(\"finance.title\")} />\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//             <Query query={GET_PAYMENT_METHODS_QUERY} variables={{ archived }}>\n//              {({ loading, error, data: {financePaymentMethods: payment_methods}, refetch, fetchMore }) => {\n//                 // Loading\n//                 if (loading) return (\n//                   <ContentCard cardTitle={t('finance.payment_methods.title')}>\n//                     <Dimmer active={true}\n//                             loader={true}>\n//                     </Dimmer>\n//                   </ContentCard>\n//                 )\n//                 // Error\n//                 if (error) return (\n//                   <ContentCard cardTitle={t('finance.payment_methods.title')}>\n//                     <p>{t('finance.payment_methods.error_loading')}</p>\n//                   </ContentCard>\n//                 )\n//                 const headerOptions = <Card.Options>\n//                   <Button color={(!archived) ? 'primary': 'secondary'}  \n//                           size=\"sm\"\n//                           onClick={() => {archived=false; refetch({archived});}}>\n//                     {t('general.current')}\n//                   </Button>\n//                   <Button color={(archived) ? 'primary': 'secondary'} \n//                           size=\"sm\" \n//                           className=\"ml-2\" \n//                           onClick={() => {archived=true; refetch({archived});}}>\n//                     {t('general.archive')}\n//                   </Button>\n//                 </Card.Options>\n                \n//                 // Empty list\n//                 if (!payment_methods.edges.length) { return (\n//                   <ContentCard cardTitle={t('finance.payment_methods.title')}\n//                                headerContent={headerOptions}>\n//                     <p>\n//                     {(!archived) ? t('finance.payment_methods.empty_list') : t(\"finance.payment_methods.empty_archive\")}\n//                     </p>\n                   \n//                   </ContentCard>\n//                 )} else {   \n//                 // Life's good! :)\n//                 return (\n//                   <ContentCard cardTitle={t('finance.payment_methods.title')}\n//                                headerContent={headerOptions}\n//                                pageInfo={payment_methods.pageInfo}\n//                                onLoadMore={() => {\n//                                 fetchMore({\n//                                   variables: {\n//                                     after: payment_methods.pageInfo.endCursor\n//                                   },\n//                                   updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                     const newEdges = fetchMoreResult.financePaymentMethods.edges\n//                                     const pageInfo = fetchMoreResult.financePaymentMethods.pageInfo\n\n//                                     return newEdges.length\n//                                       ? {\n//                                           // Put the new payment_methods at the end of the list and update `pageInfo`\n//                                           // so we have the new `endCursor` and `hasNextPage` values\n//                                           financePaymentMethods: {\n//                                             __typename: previousResult.financePaymentMethods.__typename,\n//                                             edges: [ ...previousResult.financePaymentMethods.edges, ...newEdges ],\n//                                             pageInfo\n//                                           }\n//                                         }\n//                                       : previousResult\n//                                   }\n//                                 })\n//                               }} >\n//                     <Table>\n//                           <Table.Header>\n//                             <Table.Row key={v4()}>\n//                               <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n//                             </Table.Row>\n//                           </Table.Header>\n//                           <Table.Body>\n//                               {payment_methods.edges.map(({ node }) => (\n//                                 <Table.Row key={v4()}>\n//                                   <Table.Col key={v4()}>\n//                                     {node.name}\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     {node.code}\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     {(node.archived) ? \n//                                       <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/finance/paymentmethods/edit/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('general.edit')}\n//                                       </Button>\n//                                     }\n//                                   </Table.Col>\n//                                   {(node.systemMethod) ? \n//                                     <Table.Col></Table.Col> :\n//                                     <Mutation mutation={ARCHIVE_PAYMENT_METHOD} key={v4()}>\n//                                       {(archivePaymentMethod, { data }) => (\n//                                         <Table.Col className=\"text-right\" key={v4()}>\n//                                           <button className=\"icon btn btn-link btn-sm\" \n//                                             title={t('general.archive')} \n//                                             href=\"\"\n//                                             onClick={() => {\n//                                               console.log(\"clicked archived\")\n//                                               let id = node.id\n//                                               archivePaymentMethod({ variables: {\n//                                                 input: {\n//                                                   id,\n//                                                   archived: !archived\n//                                                 }\n//                                           }, refetchQueries: [\n//                                               {query: GET_PAYMENT_METHODS_QUERY, variables: {\"archived\": archived }}\n//                                           ]}).then(({ data }) => {\n//                                             console.log('got data', data);\n//                                             toast.success(\n//                                               (archived) ? t('general.unarchived'): t('general.archived'), {\n//                                                 position: toast.POSITION.BOTTOM_RIGHT\n//                                               })\n//                                           }).catch((error) => {\n//                                             toast.error((t('general.toast_server_error')) +  error, {\n//                                                 position: toast.POSITION.BOTTOM_RIGHT\n//                                               })\n//                                             console.log('there was an error sending the query', error);\n//                                           })\n//                                           }}>\n//                                             <Icon prefix=\"fa\" name=\"inbox\" />\n//                                           </button>\n//                                         </Table.Col>\n//                                       )}\n//                                     </Mutation>\n//                                   }\n//                                 </Table.Row>\n//                               ))}\n//                           </Table.Body>\n//                         </Table>\n//                   </ContentCard>\n//                 )}}\n//              }\n//             </Query>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"financepaymentmethod\">\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(\"/finance/paymentmethods/add\")}>\n//                 <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.payment_methods.add')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <FinanceMenu activeLink='payment_methods'/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// );\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategories))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const PAYMENT_BATCH_CATEGORY_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    description: Yup.string()\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\n\nconst FinancePaymentBatchCategoryForm = ({ t, history, isSubmitting, errors, values, returnUrl, create=false }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.name')}>\n              <Field type=\"text\" \n                      name=\"name\" \n                      className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        {(create) ?\n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group label={t('finance.payment_batch_categories.batch_category_type')}>\n                <Field component=\"select\" \n                        name=\"batchCategoryType\" \n                        className={(errors.batchCategoryType) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\">\n                  <option value=\"COLLECTION\" key={v4()}>{t('general.collection')}</option>\n                  <option value=\"PAYMENT\" key={v4()}>{t('general.payment')}</option>\n                </Field>\n                <ErrorMessage name=\"batchCategoryType\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          </Grid.Row> \n          : \"\"\n        }\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.description')}>\n              <Field type=\"text\" \n                      name=\"description\" \n                      className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategoryForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_PAYMENT_BATCH_CATEGORIES_QUERY } from './queries'\nimport { PAYMENT_BATCH_CATEGORY_SCHEMA } from './yupSchema'\nimport { get_list_query_variables } from \"./tools\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from '../FinanceMenu'\nimport FinancePaymentBatchCategoriesBase from './FinancePaymentBatchCategoriesBase'\nimport FinancePaymentBatchCategoryForm from './FinancePaymentBatchCategoryForm'\n\nconst ADD_PAYMENT_BATCH_CATEGORY = gql`\n  mutation CreateFinancePaymentBatchCategory($input:CreateFinancePaymentBatchCategoryInput!) {\n    createFinancePaymentBatchCategory(input: $input) {\n      financePaymentBatchCategory {\n        id\n      }\n    }\n  }\n`\n\nfunction FinancePaymentBatchCategoryAdd({ t, history }) {\n  const returnUrl = \"/finance/paymentbatchcategories\"\n  const [addFinancePaymentBatchCategory] = useMutation(ADD_PAYMENT_BATCH_CATEGORY, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  return (\n    <FinancePaymentBatchCategoriesBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('finance.payment_batch_categories.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: '', batchCategoryType: \"COLLECTION\", description: '' }}\n          validationSchema={PAYMENT_BATCH_CATEGORY_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            addFinancePaymentBatchCategory({ variables: {\n              input: {\n                name: values.name, \n                batchCategoryType: values.batchCategoryType,\n                description: values.description\n              }\n            }, refetchQueries: [\n                {query: GET_PAYMENT_BATCH_CATEGORIES_QUERY, variables: get_list_query_variables()}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('finance.payment_batch_categories.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <FinancePaymentBatchCategoryForm\n                create={true}\n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </FinancePaymentBatchCategoriesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategoryAdd))","// @flow\n\nimport React from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_PAYMENT_BATCH_CATEGORIES_QUERY, GET_PAYMENT_BATCH_CATEGORY_QUERY } from './queries'\nimport { get_list_query_variables } from './tools'\nimport { PAYMENT_BATCH_CATEGORY_SCHEMA } from './yupSchema'\n\n\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinancePaymentBatchCategoriesBase from './FinancePaymentBatchCategoriesBase'\nimport FinancePaymentBatchCategoryForm from './FinancePaymentBatchCategoryForm'\n\n\nconst UPDATE_PAYMENT_BATCH_CATEGORY = gql`\n  mutation UpdateFinancePaymentBatchCategory($input: UpdateFinancePaymentBatchCategoryInput!) {\n    updateFinancePaymentBatchCategory(input: $input) {\n      financePaymentBatchCategory {\n        id\n      }\n    }\n  }\n`\n\nfunction FinancePaymentBatchCategoryEdit({ t, history, match }) {\n  const returnUrl = \"/finance/paymentbatchcategories\"\n  const paymentBatchCategoryId = match.params.id\n\n  const { loading, error, data } = useQuery(GET_PAYMENT_BATCH_CATEGORY_QUERY, {\n    variables: {'id': paymentBatchCategoryId},\n  })\n  const [updateFinancePaymentBatchCategory] = useMutation(UPDATE_PAYMENT_BATCH_CATEGORY)\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchCategoriesBase showBack={true}>\n      <Card cardTitle={t('finance.payment_batch_categories.title')}>\n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true} />\n        </Card.Body>\n      </Card>\n    </FinancePaymentBatchCategoriesBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchCategoriesBase showBack={true}>\n      <Card cardTitle={t('finance.payment_batch_categories.title')}>\n        <Card.Body>\n          <p>{t('finance.payment_batch_categories.error_loading')}</p>\n        </Card.Body>\n      </Card>\n    </FinancePaymentBatchCategoriesBase>\n  )\n\n  const initialData = data.financePaymentBatchCategory\n\n  return (\n    <FinancePaymentBatchCategoriesBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('finance.payment_batch_categories.title_edit')}</Card.Title>\n        </Card.Header>\n          <Formik\n            initialValues={{ \n              name: initialData.name, \n              batchCategoryType: initialData.batchCategoryType,\n              description: initialData.description,\n            }}\n            validationSchema={PAYMENT_BATCH_CATEGORY_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateFinancePaymentBatchCategory({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name, \n                  batchCategoryType: values.batchCategoryType,\n                  description: values.description\n                }\n              }, refetchQueries: [\n                {query: GET_PAYMENT_BATCH_CATEGORIES_QUERY, variables: get_list_query_variables()}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('finance.payment_batch_categories.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n              }}\n            >\n            {({ isSubmitting, errors, values }) => (\n                <FinancePaymentBatchCategoryForm\n                  isSubmitting={isSubmitting}\n                  errors={errors}\n                  values={values}\n                  returnUrl={returnUrl}\n                />\n               \n            )}\n          </Formik>\n      </Card>\n    </FinancePaymentBatchCategoriesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategoryEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_FINANCE_ORDER_QUERY = gql`\n  query FinanceOrder($id: ID!) {\n    financeOrder(id: $id) {\n      id\n      account {\n        id\n        fullName\n      }\n      orderNumber\n      status\n      message\n      createdAt\n      total\n      totalDisplay\n      balanceDisplay\n      items(first: 100) {\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            id\n            organizationClasspass {\n              id\n              name\n            }\n            productName \n            description\n            quantity\n            price\n            priceDisplay\n            financeTaxRate {\n              name\n            }\n            subtotalDisplay\n            taxDisplay\n            totalDisplay\n            financeGlaccount {\n              name\n            }\n          \tfinanceCostcenter {\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_ORDER = gql`\n  mutation UpdateFinanceOrder($input: UpdateFinanceOrderInput!) {\n    updateFinanceOrder(input: $input) {\n      financeOrder {\n        id\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n  Icon\n} from \"tabler-react\";\n\n\nconst FinanceOrderEditForm = ({ t, isSubmitting, errors, values, returnUrl }) => (\n  <FoForm>\n    <Card title={t('general.status')}>\n      <Card.Body> \n        <Grid.Row>\n          <Grid.Col md={10}>\n            <Form.Group>\n              <Field component=\"select\" \n                     name=\"status\" \n                     className={(errors.status) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\">\n                <option value={\"RECEIVED\"} key={v4()}>{t(\"finance.orders.statuses.RECEIVED\")}</option>\n                <option value={\"AWAITING_PAYMENT\"} key={v4()}>{t(\"finance.orders.statuses.AWAITING_PAYMENT\")}</option>\n                <option value={\"PAID\"} key={v4()}>{t(\"finance.orders.statuses.PAID\")}</option>\n                <option value={\"DELIVERED\"} key={v4()}>{t(\"finance.orders.statuses.DELIVERED\")}</option>\n                <option value={\"CANCELLED\"} key={v4()}>{t(\"finance.orders.statuses.CANCELLED\")}</option>\n                <option value={\"NOT_FOUND\"} key={v4()}>{t(\"finance.orders.statuses.NOT_FOUND\")}</option>\n              </Field>\n              <ErrorMessage name=\"status\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n            <span className=\"text-muted\">\n              <Icon name=\"info\" /> {' '}\n              {t(\"finance.orders.set_status_to_delivered_to_deliver_manually\")}\n            </span>\n          </Grid.Col>\n          <Grid.Col md={2}>\n          <Button \n                className=\"pull-right\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n              >\n                {t('general.submit')}\n              </Button>\n          </Grid.Col>\n        </Grid.Row> \n      </Card.Body>\n    </Card>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(FinanceOrderEditForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Container,\n  Grid,\n  Icon,\n  Page\n} from \"tabler-react\";\n\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport FinanceMenu from \"../../FinanceMenu\"\n\n\nfunction FinanceOrderEditBase ({ t, match, history, children, refetch }) {\n  const returnUrl = \"/finance/orders\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")}>\n            <div className=\"page-options d-flex\">\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"change\"\n                                    resource=\"financeorder\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>            \n              <h5>{t(\"general.menu\")}</h5>\n              <FinanceMenu activeLink='orders'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceOrderEditBase))","// @flow\n\nimport React, { useContext } from 'react'\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { v4 } from \"uuid\"\nimport moment from 'moment'\n\nimport { GET_ORDERS_QUERY } from '../queries'\nimport { GET_FINANCE_ORDER_QUERY, UPDATE_ORDER } from './queries'\nimport FinanceOrderEditForm from \"./FinanceOrderEditForm\"\nimport FinanceOrderEditBase from './FinanceOrderEditBase'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\n\nfunction FinanceOrderEdit({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n\n  const id = match.params.id\n  const returnUrl = \"/finance/orders\"\n  \n  const { loading, error, data } = useQuery(GET_FINANCE_ORDER_QUERY, {\n    variables: { id: id },\n  })\n  const [updateOrder] = useMutation(UPDATE_ORDER)\n\n\n  // Loading\n  if (loading) return (\n    <FinanceOrderEditBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </FinanceOrderEditBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <FinanceOrderEditBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </FinanceOrderEditBase>\n    )\n  }\n\n  console.log(data) \n  const order = data.financeOrder\n  \n\n  return(\n    <FinanceOrderEditBase>\n      {/* Start info row */}\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Card title={t(\"finance.orders.edit_details\")}>\n            <Table cards>\n              <Table.Body>\n                <Table.Row>\n                  <Table.ColHeader>{t(\"general.order\")} #</Table.ColHeader>\n                  <Table.Col>{order.orderNumber}</Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.ColHeader>{t(\"general.account\")}</Table.ColHeader>\n                  <Table.Col>{order.account && order.account.fullName}</Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.ColHeader>{t(\"finance.orders.placed_at\")}</Table.ColHeader>\n                  <Table.Col>{moment(order.createdAt).format(dateTimeFormat)}</Table.Col>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </Card>\n\n        </Grid.Col>\n        <Grid.Col md={6}>\n          {(order.status != \"DELIVERED\") ? \n            <Formik\n              initialValues={{ \n                status: order.status, \n              }}\n              // validationSchema={GLACCOUNT_SCHEMA}\n              onSubmit={(values, { setSubmitting }) => {\n                  console.log('submit values:')\n                  console.log(values)\n\n                  updateOrder({ variables: {\n                    input: {\n                      id: match.params.id,\n                      status: values.status\n                    }\n                  }, refetchQueries: [\n                      {query: GET_ORDERS_QUERY }\n                  ]})\n                  .then(({ data }) => {\n                      console.log('got data', data)\n                      toast.success((t('finance.orders.toast_edit_success')), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      setSubmitting(false)\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error)\n                      setSubmitting(false)\n                    })\n              }}\n              >\n              {({ isSubmitting, errors, values }) => (\n                <FinanceOrderEditForm\n                  isSubmitting={isSubmitting}\n                  errors={errors}\n                  values={values}\n                  returnUrl={returnUrl}\n                />\n              )}\n            </Formik>\n            :     \n            <Card title={t('general.status')}>\n              <Card.Body> \n                <span className=\"text-green\"><Icon name=\"check\" /></span> {t(\"finance.orders.statuses.DELIVERED\")}\n              </Card.Body>\n            </Card>\n          }\n        </Grid.Col>\n      </Grid.Row> \n      {/* End information row */}\n      {/* Start items row */}\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <Card title={t(\"general.items\")}>\n            <Table cards>\n              <Table.Header>\n                <Table.Row>\n                  <Table.ColHeader>{t(\"general.product\")}</Table.ColHeader>\n                  <Table.ColHeader>{t(\"general.description\")}</Table.ColHeader>\n                  <Table.ColHeader>{t(\"general.quantity_short_and_price\")}</Table.ColHeader>\n                  <Table.ColHeader>{t(\"general.tax\")}</Table.ColHeader>\n                  <Table.ColHeader>{t(\"general.total\")}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                { order.items.edges.map(({ node }) => (        \n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      {node.productName}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.description}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.quantity} <br />\n                      {node.priceDisplay}\n                    </Table.Col>\n                    <Table.Col>\n                      {(node.financeTaxRate) ? node.financeTaxRate.name : \"\"}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.totalDisplay}\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>                \n            </Table>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n      {/* End items row */}\n      {/* Start note row */}\n      { (order.message) ?\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card title={t('finance.orders.customer_message')}>\n              <Card.Body>\n                {order.message}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row> : \"\"\n      }\n      {/* End note row */}\n    </FinanceOrderEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceOrderEdit))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinancePaymentMethodsBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"finance.title\")} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n            {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/finance/paymentmethods\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financepaymentmethod\">\n                  <Link to=\"/finance/paymentmethods/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.payment_methods.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <FinanceMenu activeLink='payment_methods'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinancePaymentMethodsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_PAYMENT_METHODS_QUERY = gql`\n  query FinancePaymentMethods($after: String, $before: String, $archived: Boolean) {\n    financePaymentMethods(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          systemMethod\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_PAYMENT_METHOD_QUERY = gql`\n  query FinancePaymentMethod($id: ID!) {\n    financePaymentMethod(id:$id) {\n      id\n      name\n      code\n      archived\n    }\n  }\n`\n\nexport const ADD_PAYMENT_METHOD = gql`\nmutation CreateFinancePaymentMethod($input:CreateFinancePaymentMethodInput!) {\n  createFinancePaymentMethod(input: $input) {\n    financePaymentMethod{\n      id\n      archived\n      name\n      code\n    }\n  }\n}\n`\n\nexport const UPDATE_PAYMENT_METHOD = gql`\nmutation UpdateFinancePaymentMethod($input: UpdateFinancePaymentMethodInput!) {\n  updateFinancePaymentMethod(input: $input) {\n    financePaymentMethod {\n      id\n      name\n      code\n    }\n  }\n}\n`\n\nexport const ARCHIVE_PAYMENT_METHOD = gql`\nmutation ArchiveFinancePaymentMethod($input: ArchiveFinancePaymentMethodInput!) {\n  archiveFinancePaymentMethod(input: $input) {\n    financePaymentMethod {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinancePaymentMethodsBase from './FinancePaymentMethodsBase'\n\nimport { GET_PAYMENT_METHODS_QUERY, ARCHIVE_PAYMENT_METHOD } from \"./queries\"\n\n\nfunction FinancePaymentMethods({ t, history }) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('finance.payment_methods.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_PAYMENT_METHODS_QUERY, {\n    variables: { archived: archived }\n  })\n\n  const [ archivePaymentMethod ] = useMutation(ARCHIVE_PAYMENT_METHOD)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <FinancePaymentMethodsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinancePaymentMethodsBase>\n  )\n\n  if (error) return (\n    <FinancePaymentMethodsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.payment_methods.error_loading')}</p>\n      </ContentCard>\n    </FinancePaymentMethodsBase>\n  )\n\n  const paymentMethods = data.financePaymentMethods\n\n  // Empty list\n  if (!paymentMethods.edges.length) { return (\n    <FinancePaymentMethodsBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('finance.payment_methods.empty_list') : t(\"finance.payment_methods.empty_archive\")}\n        </p>\n      </ContentCard>\n    </FinancePaymentMethodsBase>\n  )}\n\n  return (\n    <FinancePaymentMethodsBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}\n                    pageInfo={paymentMethods.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: paymentMethods.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.financePaymentMethods.edges\n                        const pageInfo = fetchMoreResult.financePaymentMethods.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new paymentMethods at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              financePaymentMethods: {\n                                __typename: previousResult.financePaymentMethods.__typename,\n                                edges: [ ...previousResult.financePaymentMethods.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {paymentMethods.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.code}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Link to={`/finance/paymentmethods/edit/${node.id}`}>\n                        <Button className='btn-sm' \n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                      </Link>\n                    }\n                  </Table.Col>\n                  {(node.systemMethod) ? \n                    <Table.Col></Table.Col> :\n                    <Table.Col className=\"text-right\" key={v4()}>\n                      <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archivePaymentMethod({ variables: {\n                            input: {\n                              id,\n                              archived: !archived\n                            }\n                      }, refetchQueries: [\n                          {query: GET_PAYMENT_METHODS_QUERY, variables: {\"archived\": archived }}\n                      ]}).then(({ data }) => {\n                        console.log('got data', data);\n                        toast.success(\n                          (archived) ? t('general.unarchived'): t('general.archived'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error);\n                      })\n                      }}>\n                        <Icon prefix=\"fa\" name=\"inbox\" />\n                      </button>\n                    </Table.Col>\n                  }\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>      \n    </FinancePaymentMethodsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinancePaymentMethods))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const PAYMENT_METHOD_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst FinancePaymentMethodForm = ({ t, history, isSubmitting, errors, values, returnUrl }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('finance.code')}>\n            <Field type=\"text\" \n                    name=\"code\" \n                    className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(FinancePaymentMethodForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_PAYMENT_METHODS_QUERY, ADD_PAYMENT_METHOD } from './queries'\nimport { PAYMENT_METHOD_SCHEMA } from './yupSchema'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport FinancePaymentMethodsBase from './FinancePaymentMethodsBase';\nimport FinancePaymentMethodForm from './FinancePaymentMethodForm'\n\n\nfunction FinancePaymentMethodAdd({ t, history }) {\n  const returnUrl = \"/finance/paymentmethods\"\n  const [ addPaymentMethod ] = useMutation(ADD_PAYMENT_METHOD)\n\n  return (\n    <FinancePaymentMethodsBase showBack={true}>\n      <Card title={t('finance.payment_methods.title_add')}>\n        <Formik\n          initialValues={{ name: '', code: '' }}\n          validationSchema={PAYMENT_METHOD_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addPaymentMethod({ variables: {\n                input: {\n                  name: values.name, \n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_PAYMENT_METHODS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('finance.payment_methods.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <FinancePaymentMethodForm\n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </FinancePaymentMethodsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinancePaymentMethodAdd))","import React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_PAYMENT_METHODS_QUERY, GET_PAYMENT_METHOD_QUERY, UPDATE_PAYMENT_METHOD } from './queries'\nimport { PAYMENT_METHOD_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinancePaymentMethodsBase from './FinancePaymentMethodsBase';\nimport FinancePaymentMethodForm from './FinancePaymentMethodForm'\n\n\nfunction FinancePaymentMethodEdit({ t, history, match }) {\n  const id = match.params.id\n  const cardTitle = t('finance.payment_methods.title_edit')\n  const returnUrl = \"/finance/paymentmethods\"\n\n  const { loading, error, data } = useQuery(GET_PAYMENT_METHOD_QUERY, {\n    variables: { id: id }\n  })\n  const [ updatePaymentMethod ] = useMutation(UPDATE_PAYMENT_METHOD)\n\n  if (loading) return (\n    <FinancePaymentMethodsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinancePaymentMethodsBase>\n  )\n\n  if (error) return (\n    <FinancePaymentMethodsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </FinancePaymentMethodsBase>\n  )\n\n  const initialData = data.financePaymentMethod;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <FinancePaymentMethodsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            code: initialData.code\n          }}\n          validationSchema={PAYMENT_METHOD_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updatePaymentMethod({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name,\n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_PAYMENT_METHODS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('finance.payment_methods.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n              <FinancePaymentMethodForm\n                isSubmitting={isSubmitting}\n                errors={errors}\n                values={values}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </FinancePaymentMethodsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinancePaymentMethodEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinanceTaxRatesBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/finance/taxrates\"  >\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financetaxrate\">\n                  <Link to=\"/finance/taxrates/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.taxrates.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <FinanceMenu activeLink='taxrates'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceTaxRatesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_TAXRATES_QUERY = gql`\n  query FinanceTaxRates($after: String, $before: String, $archived: Boolean) {\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_TAXRATE_QUERY = gql`\n  query FinanceTaxRate($id: ID!) {\n    financeTaxRate(id:$id) {\n      id\n      archived\n      name\n      percentage\n      rateType\n      code\n    }\n  }\n`\n\nexport const ADD_TAXRATE = gql`\nmutation CreateFinanceTaxRate($input:CreateFinanceTaxRateInput!) {\n  createFinanceTaxRate(input: $input) {\n    financeTaxRate{\n      id\n      archived\n      name\n      percentage\n      rateType\n      code\n    }\n  }\n}\n`\n\nexport const UPDATE_TAXRATE = gql`\nmutation UpdateFinanceTaxRate($input: UpdateFinanceTaxRateInput!) {\n  updateFinanceTaxRate(input: $input) {\n    financeTaxRate {\n      id\n      archived\n      name\n      percentage\n      rateType\n      code\n    }\n  }\n}\n`\n\nexport const ARCHIVE_TAXRATE = gql`\nmutation ArchiveFinanceTaxRate($input: ArchiveFinanceTaxRateInput!) {\n  archiveFinanceTaxRate(input: $input) {\n    financeTaxRate {\n      id\n      archived\n    }\n  }\n}\n`\n","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceTaxRatesBase from './FinanceTaxRatesBase'\n\nimport { GET_TAXRATES_QUERY, ARCHIVE_TAXRATE } from \"./queries\"\n\nfunction FinanceTaxRates({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('finance.taxrates.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_TAXRATES_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveTaxrate ] = useMutation(ARCHIVE_TAXRATE)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <FinanceTaxRatesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )\n\n  if (error) return (\n    <FinanceTaxRatesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.glaccounts.error_loading')}</p>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )\n\n  const taxrates = data.financeTaxRates\n\n  // Empty list\n  if (!taxrates.edges.length) { return (\n    <FinanceTaxRatesBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('finance.taxrates.empty_list') : t(\"finance.taxrates.empty_archive\")}\n        </p>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )}\n\n  return (\n    <FinanceTaxRatesBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}\n                    pageInfo={taxrates.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: taxrates.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.financeTaxRates.edges\n                        const pageInfo = fetchMoreResult.financeTaxRates.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new taxrates at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              financeTaxRates: {\n                                __typename: previousResult.financeTaxRates.__typename,\n                                edges: [ ...previousResult.financeTaxRates.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.taxrates.percentage')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.taxrates.rateType')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {taxrates.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.percentage} %\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.rateType}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.code}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/finance/taxrates/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveTaxrate({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_TAXRATES_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceTaxRates))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const TAX_RATE_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    percentage: Yup.number()\n      .max(100)\n      .typeError(t('yup.field_has_to_be_number'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_TAXRATES_QUERY, ADD_TAXRATE } from './queries'\nimport { TAX_RATE_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport FinanceTaxRatesBase from './FinanceTaxRatesBase';\n\n\nfunction FinanceTaxRateAdd({t, history}) {\n  const returnUrl = \"/finance/taxrates\"\n  const [ addFinanceTaxrate ] = useMutation(ADD_TAXRATE)\n\n  return (\n    <FinanceTaxRatesBase showBack={true}>\n      <Card title={t('finance.taxrates.title_add')}>\n        <Formik\n            initialValues={{ name: \"\", percentage: \"\", rateType: \"IN\", code: \"\" }}\n            validationSchema={TAX_RATE_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                addFinanceTaxrate({ variables: {\n                  input: {\n                    name: values.name,\n                    percentage: values.percentage,\n                    rateType: values.rateType, \n                    code: values.code,\n                  }\n                }, refetchQueries: [\n                    {query: GET_TAXRATES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data);\n                    history.push(returnUrl)\n                    toast.success((t('finance.taxrates.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n              <FoForm>\n                  <Card.Body>\n                      <Form.Group label={t('general.name')}>\n                        <Field type=\"text\" \n                                name=\"name\" \n                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.taxrates.percentage')}>\n                        <Field type=\"text\" \n                                name=\"percentage\" \n                                className={(errors.percentage) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"percentage\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.taxrates.rateType')}>\n                        <Field component=\"select\" \n                                name=\"rateType\" \n                                className={(errors.rateType) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\">\n                          <option value=\"IN\">{t('finance.taxrates.including')}</option>\n                          <option value=\"EX\">{t('finance.taxrates.excluding')}</option>\n                        </Field>\n                        <ErrorMessage name=\"rateType\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.code')}>\n                        <Field type=\"text\" \n                                name=\"code\" \n                                className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                  </Card.Body>\n                  <Card.Footer>\n                      <Button \n                        color=\"primary\"\n                        className=\"pull-right\" \n                        type=\"submit\" \n                        disabled={isSubmitting}\n                      >\n                        {t('general.submit')}\n                      </Button>\n                      <Link to={returnUrl}>\n                        <Button color=\"link\">\n                            {t('general.cancel')}\n                        </Button>\n                      </Link>\n                  </Card.Footer>\n              </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </FinanceTaxRatesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceTaxRateAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_TAXRATES_QUERY, GET_TAXRATE_QUERY, UPDATE_TAXRATE } from './queries'\nimport { TAX_RATE_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceTaxRatesBase from './FinanceTaxRatesBase';\n\n\nfunction FinanceTaxRateEdit({t, match, history}) {\n  const id = match.params.id\n  const returnUrl = \"/finance/taxrates\"\n  const cardTitle = t('finance.taxrates.title_edit')\n  const { loading, error, data } = useQuery(GET_TAXRATE_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateTaxrate ] = useMutation(UPDATE_TAXRATE)\n\n  if (loading) return (\n    <FinanceTaxRatesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )\n\n  if (error) return (\n    <FinanceTaxRatesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.taxrates.error_loading')}</p>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )\n\n  const initialData = data.financeTaxRate;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <FinanceTaxRatesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n              percentage: initialData.percentage,\n              rateType: initialData.rateType,\n              code: initialData.code,\n            }}\n            validationSchema={TAX_RATE_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateTaxrate({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                    percentage: values.percentage,\n                    rateType: values.rateType,\n                    code: values.code,\n                  }\n                }, refetchQueries: [\n                    {query: GET_TAXRATES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('finance.taxrates.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values }) => (\n                <FoForm>\n                    <Card.Body>\n                      <Form.Group label={t('general.name')}>\n                        <Field type=\"text\" \n                                name=\"name\" \n                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.taxrates.percentage')}>\n                        <Field type=\"text\" \n                              name=\"percentage\" \n                              className={(errors.percentage) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                        <ErrorMessage name=\"percentage\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.taxrates.rateType')}>\n                        <Field component=\"select\" \n                              name=\"rateType\" \n                              className={(errors.rateType) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\">\n                          <option value=\"IN\">{t('finance.taxrates.including')}</option>\n                          <option value=\"EX\">{t('finance.taxrates.excluding')}</option>\n                        </Field>\n                        <ErrorMessage name=\"rateType\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.code')}>\n                        <Field type=\"text\" \n                                name=\"code\" \n                                className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          className=\"pull-right\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          type=\"submit\"\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button\n                            type=\"button\" \n                            color=\"link\" \n                          >\n                              {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </FinanceTaxRatesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceTaxRateEdit))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\n\nfunction HomeItemButton({ t, link, linkTitle=null }) {\n  return (\n    <Link to={link} >\n      <Button \n        outline\n        block\n        color=\"primary\"\n      >\n        {linkTitle ? linkTitle: t(\"settings.home.link_edit\")} <Icon name=\"chevron-right\" />\n      </Button>\n    </Link>\n  )\n}\n\nexport default withTranslation()(withRouter(HomeItemButton))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\n\nimport HomeItemButton from \"../../ui/HomeItemButton\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n\n\nclass InsightHome extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Insight home props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const linkTitle = t(\"insight.home.link_view\")\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"insight.title\")} />\n            <Grid.Row>\n              <Grid.Col md={3} lg={3}>\n                <Card>\n                  <Card.Body>\n                    <h5>{t(\"insight.classpasses.title\")}</h5>\n                    {t(\"insight.classpasses.explanation\")}\n                    <br /><br />\n                    <HomeItemButton linkTitle={linkTitle} link=\"/insight/classpasses\" />\n                  </Card.Body>\n                </Card>\n              </Grid.Col>\n              <Grid.Col md={3} lg={3}>\n                <Card>\n                  <Card.Body>\n                    <h5>{t(\"insight.subscriptions.title\")}</h5>\n                    {t(\"insight.subscriptions.explanation\")}\n                    <br /><br />\n                    <HomeItemButton linkTitle={linkTitle} link=\"/insight/subscriptions\" />\n                  </Card.Body>\n                </Card>\n              </Grid.Col>\n              <Grid.Col md={3} lg={3}>\n                <Card>\n                  <Card.Body>\n                    <h5>{t(\"insight.revenue.title\")}</h5>\n                    {t(\"insight.revenue.explanation\")}\n                    <br /><br />\n                    <HomeItemButton linkTitle={linkTitle} link=\"/insight/revenue\" />\n                  </Card.Body>\n                </Card>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(InsightHome))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_CLASSPASSES_SOLD_QUERY = gql`\n  query InsightAccountClasspassesSold($year: Int!) {\n    insightAccountClasspassesSold(year: $year) {\n      description\n      data\n      year\n    }\n  }\n`\n\n\nexport const GET_CLASSPASSES_ACTIVE_QUERY = gql`\n  query InsightAccountClasspassesActive($year: Int!) {\n    insightAccountClasspassesActive(year: $year) {\n      description\n      data\n      year\n    }\n  }\n`","\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nconst InsightBackHome = ({ t }) => (\n  <div className=\"page-options d-flex\">\n    <Link to=\"/insight\" \n          className='btn btn-secondary mr-4'>\n        <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('insight.title')}\n    </Link>\n  </div>\n)\n\nexport default withTranslation()(InsightBackHome)","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport moment from 'moment'\n\nimport {\n  Button,\n  Container,\n  Grid,\n  Page\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport InsightBackHome from '../InsightBackHome'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.INSIGHT_CLASSPASSES_YEAR)) {\n  console.log('year from not found... defaulting to today...')\n  localStorage.setItem(CSLS.INSIGHT_CLASSPASSES_YEAR, moment().format('YYYY')) \n} \n\nfunction InsightClasspassesBase ({ t, history, children, year, refetchData=f=>f }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"insight.title\")} subTitle={t(\"general.classpasses\") + \" \" + year}>\n            <div className=\"page-options d-flex\">\n              <InsightBackHome />\n              <Button.List className=\"schedule-list-page-options-btn-list\">\n                <Button \n                  icon=\"chevron-left\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let previousYear = parseInt(localStorage.getItem(CSLS.INSIGHT_CLASSPASSES_YEAR)) - 1                    \n                    localStorage.setItem(CSLS.INSIGHT_CLASSPASSES_YEAR, previousYear) \n\n                    refetchData(previousYear)\n                }} />\n                <Button \n                  icon=\"sunset\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let currentYear = moment().format('YYYY')\n                    localStorage.setItem(CSLS.INSIGHT_CLASSPASSES_YEAR, currentYear) \n                    \n                    refetchData(currentYear)\n                }} />\n                <Button \n                  icon=\"chevron-right\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let nextYear = parseInt(localStorage.getItem(CSLS.INSIGHT_CLASSPASSES_YEAR)) + 1                    \n                    localStorage.setItem(CSLS.INSIGHT_CLASSPASSES_YEAR, nextYear) \n\n                    refetchData(nextYear)\n                }} />\n              </Button.List> \n            </div>\n          </Page.Header>\n          <Grid.Row>\n            {children}\n          </Grid.Row>\n        </Container>  \n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(InsightClasspassesBase))","import React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport C3Chart from \"react-c3js\"\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { refreshTokenAndOpenExportLinkInNewTab } from \"../../../tools/refresh_token_and_open_export_link\"\n\nimport {\n  colors,\n  Grid,\n  Button,\n  Card,\n} from \"tabler-react\";\n// import ContentCard from \"../../general/ContentCard\"\nimport { GET_CLASSPASSES_SOLD_QUERY, GET_CLASSPASSES_ACTIVE_QUERY } from './queries'\nimport { TOKEN_REFRESH } from \"../../../queries/system/auth\"\nimport InsightClasspassesBase from './InsightClasspassesBase'\n\nfunction InsightClasspasses ({ t, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const year = localStorage.getItem(CSLS.INSIGHT_CLASSPASSES_YEAR)\n  const export_url_active = \"/d/export/insight/classpasses/active/\" + year\n  const export_url_sold = \"/d/export/insight/classpasses/sold/\" + year\n\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n\n  const { \n    loading: loadingSold, \n    error: errorSold, \n    data: dataSold,\n    refetch: refetchSold\n   } = useQuery(GET_CLASSPASSES_SOLD_QUERY, {\n    variables: { year: year }\n  })\n\n  const { \n    loading: loadingActive, \n    error: errorActive, \n    data: dataActive,\n    refetch: refetchActive\n   } = useQuery(GET_CLASSPASSES_ACTIVE_QUERY, {\n    variables: { year: year }\n  })\n\n\n  if (loadingSold || loadingActive) {\n    return (\n      <InsightClasspassesBase year={year}>\n        {t(\"general.loading_with_dots\")}\n      </InsightClasspassesBase>\n    )\n  }\n\n  if (errorSold || errorActive) {\n    return (\n      <InsightClasspassesBase year={year}>\n        {t(\"general.error_sad_smiley\")}\n      </InsightClasspassesBase>\n    )\n  }\n\n  function refetchData(year) {\n    refetchActive({year: year})\n    refetchSold({year: year})\n  }\n\n  console.log(dataSold)\n  console.log(dataActive)\n\n  const data_sold_label = t(\"insight.classpasses.sold.title\")\n  const chart_data_sold = dataSold.insightAccountClasspassesSold.data\n  console.log(\"chart_data sold\")\n  console.log(data_sold_label, ...chart_data_sold)\n\n  const data_active_label = t(\"insight.classpasses.active.title\")\n  const chart_data_active = dataActive.insightAccountClasspassesActive.data\n  console.log(\"chart_data active\")\n  console.log(data_sold_label, ...chart_data_active)\n\n\n  return (\n    <InsightClasspassesBase year={year} refetchData={refetchData}>\n      {/* <Grid.Row> */}\n        <Grid.Col md={9}>\n          <Card title={t('general.chart')}>\n            <Card.Body>\n              <C3Chart\n                style={{ height: \"16rem\" }}\n                data={{\n                  x: 'x',\n                  columns: [\n                    // each columns data as array, starting with \"name\" and then containing data\n                    [ 'x',\n                      t(\"datetime.months.short_january\"),\n                      t(\"datetime.months.short_february\"),\n                      t(\"datetime.months.short_march\"),\n                      t(\"datetime.months.short_april\"),\n                      t(\"datetime.months.short_may\"),\n                      t(\"datetime.months.short_june\"),\n                      t(\"datetime.months.short_july\"),\n                      t(\"datetime.months.short_august\"),\n                      t(\"datetime.months.short_september\"),\n                      t(\"datetime.months.short_october\"),\n                      t(\"datetime.months.short_november\"),\n                      t(\"datetime.months.short_decemer\"),\n                    ],\n                    [ 'sold', ...chart_data_sold],\n                    [ 'active', ...chart_data_active],\n                  ],\n                  type: \"area\", // default type of chart\n                  groups: [['sold'], ['active']],\n                  colors: {\n                    sold: colors[\"blue\"],\n                    active: colors[\"green\"],\n                  },\n                  names: {\n                    // name of each serie\n                    sold: data_sold_label,\n                    active: data_active_label,\n                  },\n                  \n                }}\n                axis={{\n                  y: {\n                    padding: {\n                      bottom: 0,\n                    },\n                    show: true,\n                  },\n                  x: {\n                    padding: {\n                      left: 0,\n                      right: 0,\n                    },\n                    type: 'category',\n                    show: true,\n                  },\n                }}\n                tooltip={{\n                  format: {\n                    title: function(x) {\n                      return \"\";\n                    },\n                  },\n                }}\n                padding={{\n                  bottom: 0,\n                  // left: -1,\n                  right: -1,\n                }}\n                point={{\n                  show: false,\n                }}\n              />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={3}>\n          {/* Export as sold as excel sheet */}\n          <Button\n            block\n            color=\"secondary\"\n            RootComponent=\"a\"\n            icon=\"download-cloud\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url_sold\n            )}\n          >\n            {t(\"insight.classpasses.sold.export_excel\")}\n          </Button>\n          {/* Export as active as excel sheet */}\n          <Button\n            block\n            color=\"secondary\"\n            RootComponent=\"a\"\n            icon=\"download-cloud\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url_active\n            )}\n          >\n            {t(\"insight.classpasses.active.export_excel\")}\n          </Button>\n        </Grid.Col>\n      {/* </Grid.Row> */}\n    </InsightClasspassesBase>\n  //   <SiteWrapper>\n  //     <div className=\"my-3 my-md-5\">\n  //       <Container>\n  //         <Page.Header title={t(\"insight.title\")} subTitle={t(\"general.classpasses\") + \" \" + year}>\n  //           <div className=\"page-options d-flex\">\n  //             <InsightBackHome />\n  //           </div>\n  //         </Page.Header>\n\n  //       </Container>  \n  //     </div>\n  //   </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(InsightClasspasses))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_REVENUE_TOTAL_QUERY = gql`\n  query InsightRevenueTotal($year: Int!) {\n    insightRevenueTotal(year: $year) {\n      description\n      data\n      year\n    }\n  }\n`\n\n\nexport const GET_REVENUE_SUBTOTAL_QUERY = gql`\n  query InsightRevenueSubTotal($year: Int!) {\n    insightRevenueSubtotal(year: $year) {\n      description\n      data\n      year\n    }\n  }\n`\n\n\nexport const GET_REVENUE_TAX_QUERY = gql`\n  query InsightRevenueTax($year: Int!) {\n    insightRevenueTax(year: $year) {\n      description\n      data\n      year\n    }\n  }\n`\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport moment from 'moment'\n\nimport {\n  Button,\n  Container,\n  Grid,\n  Page\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport InsightBackHome from '../InsightBackHome'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.INSIGHT_REVENUE_YEAR)) {\n  console.log('year from not found... defaulting to today...')\n  localStorage.setItem(CSLS.INSIGHT_REVENUE_YEAR, moment().format('YYYY')) \n} \n\nfunction InsightRevenueBase ({ t, history, children, year, refetchData=f=>f }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"insight.title\")} subTitle={t(\"general.revenue\") + \" \" + year}>\n            <div className=\"page-options d-flex\">\n              <InsightBackHome />\n              <Button.List className=\"schedule-list-page-options-btn-list\">\n                <Button \n                  icon=\"chevron-left\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let previousYear = parseInt(localStorage.getItem(CSLS.INSIGHT_REVENUE_YEAR)) - 1                    \n                    localStorage.setItem(CSLS.INSIGHT_REVENUE_YEAR, previousYear) \n\n                    refetchData(previousYear)\n                }} />\n                <Button \n                  icon=\"sunset\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let currentYear = moment().format('YYYY')\n                    localStorage.setItem(CSLS.INSIGHT_REVENUE_YEAR, currentYear) \n                    \n                    refetchData(currentYear)\n                }} />\n                <Button \n                  icon=\"chevron-right\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let nextYear = parseInt(localStorage.getItem(CSLS.INSIGHT_REVENUE_YEAR)) + 1                    \n                    localStorage.setItem(CSLS.INSIGHT_REVENUE_YEAR, nextYear) \n\n                    refetchData(nextYear)\n                }} />\n              </Button.List> \n            </div>\n          </Page.Header>\n          <Grid.Row>\n            {children}\n          </Grid.Row>\n        </Container>  \n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(InsightRevenueBase))","import React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport C3Chart from \"react-c3js\"\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { refreshTokenAndOpenExportLinkInNewTab } from \"../../../tools/refresh_token_and_open_export_link\"\n\nimport {\n  colors,\n  Grid,\n  Button,\n  Card,\n} from \"tabler-react\";\n// import ContentCard from \"../../general/ContentCard\"\nimport { GET_REVENUE_TOTAL_QUERY, GET_REVENUE_SUBTOTAL_QUERY, GET_REVENUE_TAX_QUERY } from './queries'\nimport { TOKEN_REFRESH } from \"../../../queries/system/auth\"\nimport InsightRevenueBase from './InsightRevenueBase'\n\nfunction InsightRevenue ({ t, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const year = localStorage.getItem(CSLS.INSIGHT_REVENUE_YEAR)\n  // const export_url_active = \"/d/export/insight/classpasses/active/\" + year\n  // const export_url_sold = \"/d/export/insight/classpasses/sold/\" + year\n\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n\n  const { \n    loading: loadingTotal, \n    error: errorTotal, \n    data: dataTotal,\n    refetch: refetchTotal\n   } = useQuery(GET_REVENUE_TOTAL_QUERY, {\n    variables: { year: year }\n  })\n\n  const { \n    loading: loadingSubtotal, \n    error: errorSubtotal, \n    data: dataSubtotal,\n    refetch: refetchSubtotal\n   } = useQuery(GET_REVENUE_SUBTOTAL_QUERY, {\n    variables: { year: year }\n  })\n\n  const { \n    loading: loadingTax, \n    error: errorTax, \n    data: dataTax,\n    refetch: refetchTax\n   } = useQuery(GET_REVENUE_TAX_QUERY, {\n    variables: { year: year }\n  })\n\n\n  if (loadingTotal || loadingSubtotal || loadingTax) {\n    return (\n      <InsightRevenueBase year={year}>\n        {t(\"general.loading_with_dots\")}\n      </InsightRevenueBase>\n    )\n  }\n\n  if (errorTotal || errorSubtotal || errorTax) {\n    return (\n      <InsightRevenueBase year={year}>\n        {t(\"general.error_sad_smiley\")}\n      </InsightRevenueBase>\n    )\n  }\n\n  function refetchData(year) {\n    refetchTotal({year: year})\n    refetchSubtotal({year: year})\n    refetchTax({year: year})\n  }\n\n  console.log(dataTotal)\n  console.log(dataSubtotal)\n\n  const data_label_total = t(\"insight.revenue.total.title\")\n  const chart_data_total = dataTotal.insightRevenueTotal.data\n  console.log(\"chart_data total\")\n  console.log(data_label_total, ...chart_data_total)\n\n  const data_label_subtotal = t(\"insight.revenue.subtotal.title\")\n  const chart_data_subtotal = dataSubtotal.insightRevenueSubtotal.data\n  console.log(\"chart_data subtotal\")\n  console.log(data_label_subtotal, ...chart_data_subtotal)\n\n  const data_label_tax = t(\"insight.revenue.tax.title\")\n  const chart_data_tax = dataTax.insightRevenueTax.data\n  console.log(\"chart_data tax\")\n  console.log(data_label_tax, ...chart_data_tax)\n\n\n  return (\n    <InsightRevenueBase year={year} refetchData={refetchData}>\n      {/* <Grid.Row> */}\n        <Grid.Col md={9}>\n          <Card title={t('general.total')}>\n            <Card.Body>\n              <C3Chart\n                style={{ height: \"16rem\" }}\n                data={{\n                  x: 'x',\n                  columns: [\n                    // each columns data as array, starting with \"name\" and then containing data\n                    [ 'x',\n                      t(\"datetime.months.short_january\"),\n                      t(\"datetime.months.short_february\"),\n                      t(\"datetime.months.short_march\"),\n                      t(\"datetime.months.short_april\"),\n                      t(\"datetime.months.short_may\"),\n                      t(\"datetime.months.short_june\"),\n                      t(\"datetime.months.short_july\"),\n                      t(\"datetime.months.short_august\"),\n                      t(\"datetime.months.short_september\"),\n                      t(\"datetime.months.short_october\"),\n                      t(\"datetime.months.short_november\"),\n                      t(\"datetime.months.short_decemer\"),\n                    ],\n                    [ 'total', ...chart_data_total],\n                    [ 'subtotal', ...chart_data_subtotal],\n                    [ 'tax', ...chart_data_tax],\n                  ],\n                  type: \"bar\", // default type of chart\n                  // types: {\n                  //   total: \"bar\"\n                  // },\n                  groups: [['subtotal', 'tax']],\n                  colors: {\n                    total: colors[\"blue\"],\n                    subtotal: colors[\"green\"],\n                    tax: colors[\"orange\"],\n                  },\n                  names: {\n                    // name of each serie\n                    total: data_label_total,\n                    subtotal: data_label_subtotal,\n                    tax: data_label_tax,\n                  },\n                  \n                }}\n                axis={{\n                  y: {\n                    padding: {\n                      bottom: 0,\n                    },\n                    show: true,\n                  },\n                  x: {\n                    padding: {\n                      left: 0,\n                      right: 0,\n                    },\n                    type: 'category',\n                    show: true,\n                  },\n                }}\n                tooltip={{\n                  format: {\n                    title: function(x) {\n                      return \"\";\n                    },\n                  },\n                }}\n                padding={{\n                  bottom: 0,\n                  // left: -1,\n                  right: -1,\n                }}\n                point={{\n                  show: false,\n                }}\n              />\n            </Card.Body>\n            <Card.Footer>\n              {t(\"insight.revenue.total.explanation\")}\n            </Card.Footer>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={3}>\n          {/* Export as sold as excel sheet */}\n          {/* <Button\n            block\n            color=\"secondary\"\n            RootComponent=\"a\"\n            icon=\"download-cloud\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url_sold\n            )}\n          >\n            {t(\"insight.classpasses.sold.export_excel\")}\n          </Button> */}\n          {/* Export as active as excel sheet */}\n          {/* <Button\n            block\n            color=\"secondary\"\n            RootComponent=\"a\"\n            icon=\"download-cloud\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url_active\n            )}\n          >\n            {t(\"insight.classpasses.active.export_excel\")}\n          </Button> */}\n        </Grid.Col>\n      {/* </Grid.Row> */}\n    </InsightRevenueBase>\n  //   <SiteWrapper>\n  //     <div className=\"my-3 my-md-5\">\n  //       <Container>\n  //         <Page.Header title={t(\"insight.title\")} subTitle={t(\"general.classpasses\") + \" \" + year}>\n  //           <div className=\"page-options d-flex\">\n  //             <InsightBackHome />\n  //           </div>\n  //         </Page.Header>\n\n  //       </Container>  \n  //     </div>\n  //   </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(InsightRevenue))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SUBSCRIPTIONS_SOLD_QUERY = gql`\n  query InsightAccountSubscriptionsSold($year: Int!) {\n    insightAccountSubscriptionsSold(year: $year) {\n      description\n      data\n      year\n    }\n  }\n`\n\n\nexport const GET_SUBSCRIPTIONS_ACTIVE_QUERY = gql`\n  query InsightAccountSubscriptionsActive($year: Int!) {\n    insightAccountSubscriptionsActive(year: $year) {\n      description\n      data\n      year\n    }\n  }\n`","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport moment from 'moment'\n\nimport {\n  Button,\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport InsightBackHome from '../InsightBackHome'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR)) {\n  console.log('year from not found... defaulting to today...')\n  localStorage.setItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR, moment().format('YYYY')) \n} \n\nfunction InsightSubscriptionsBase ({ t, history, children, year, refetchData=f=>f}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"insight.title\")} subTitle={t(\"general.subscriptions\") + \" \" + year}>\n            <div className=\"page-options d-flex\">\n              <InsightBackHome />\n              <Button.List className=\"schedule-list-page-options-btn-list\">\n                <Button \n                  icon=\"chevron-left\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let previousYear = parseInt(localStorage.getItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR)) - 1                    \n                    localStorage.setItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR, previousYear) \n\n                    refetchData(previousYear)\n                }} />\n                <Button \n                  icon=\"sunset\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let currentYear = moment().format('YYYY')\n                    localStorage.setItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR, currentYear) \n                    \n                    refetchData(currentYear)\n                }} />\n                <Button \n                  icon=\"chevron-right\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let nextYear = parseInt(localStorage.getItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR)) + 1                    \n                    localStorage.setItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR, nextYear) \n\n                    refetchData(nextYear)\n                }} />\n              </Button.List> \n            </div>\n          </Page.Header>\n          <Grid.Row>\n            {children}\n          </Grid.Row>\n        </Container>  \n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(InsightSubscriptionsBase))","import React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport C3Chart from \"react-c3js\"\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { refreshTokenAndOpenExportLinkInNewTab } from \"../../../tools/refresh_token_and_open_export_link\"\n\nimport {\n  colors,\n  Grid,\n  Button,\n  Card,\n} from \"tabler-react\";\n// import ContentCard from \"../../general/ContentCard\"\nimport { GET_SUBSCRIPTIONS_SOLD_QUERY, GET_SUBSCRIPTIONS_ACTIVE_QUERY } from './queries'\nimport { TOKEN_REFRESH } from \"../../../queries/system/auth\"\nimport InsightSubscriptionsBase from './InsightSubscriptionsBase'\n\nfunction InsightSubscriptions ({ t, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const year = localStorage.getItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR)\n  const export_url_active = \"/d/export/insight/subscriptions/active/\" + year\n  const export_url_sold = \"/d/export/insight/subscriptions/sold/\" + year\n\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n\n  const { \n    loading: loadingSold, \n    error: errorSold, \n    data: dataSold,\n    refetch: refetchSold\n   } = useQuery(GET_SUBSCRIPTIONS_SOLD_QUERY, {\n    variables: { year: 2020 }\n  })\n\n  const { \n    loading: loadingActive, \n    error: errorActive, \n    data: dataActive,\n    refetch: refetchActive\n   } = useQuery(GET_SUBSCRIPTIONS_ACTIVE_QUERY, {\n    variables: { year: 2020 }\n  })\n\n\n  if (loadingSold || loadingActive) {\n    return (\n      <InsightSubscriptionsBase year={year}>\n        {t(\"general.loading_with_dots\")}\n      </InsightSubscriptionsBase>\n    )\n  }\n\n  if (errorSold || errorActive) {\n    return (\n      <InsightSubscriptionsBase year={year}>\n        {t(\"general.error_sad_smiley\")}\n      </InsightSubscriptionsBase>\n    )\n  }\n\n\n  function refetchData(year) {\n    refetchActive({year: year})\n    refetchSold({year: year})\n  }\n\n  console.log(dataSold)\n  console.log(dataActive)\n\n  const data_sold_label = t(\"insight.subscriptions.sold.title\")\n  const chart_data_sold = dataSold.insightAccountSubscriptionsSold.data\n  console.log(\"chart_data sold\")\n  console.log(data_sold_label, ...chart_data_sold)\n\n  const data_active_label = t(\"insight.subscriptions.active.title\")\n  const chart_data_active = dataActive.insightAccountSubscriptionsActive.data\n  console.log(\"chart_data active\")\n  console.log(data_sold_label, ...chart_data_active)\n\n\n  return (\n    <InsightSubscriptionsBase year={year} refetchData={refetchData}>\n      {/* <Grid.Row> */}\n        <Grid.Col md={9}>\n          <Card title={t('general.chart')}>\n            <Card.Body>\n              <C3Chart\n                style={{ height: \"16rem\" }}\n                data={{\n                  x: 'x',\n                  columns: [\n                    // each columns data as array, starting with \"name\" and then containing data\n                    [ 'x',\n                      t(\"datetime.months.short_january\"),\n                      t(\"datetime.months.short_february\"),\n                      t(\"datetime.months.short_march\"),\n                      t(\"datetime.months.short_april\"),\n                      t(\"datetime.months.short_may\"),\n                      t(\"datetime.months.short_june\"),\n                      t(\"datetime.months.short_july\"),\n                      t(\"datetime.months.short_august\"),\n                      t(\"datetime.months.short_september\"),\n                      t(\"datetime.months.short_october\"),\n                      t(\"datetime.months.short_november\"),\n                      t(\"datetime.months.short_decemer\"),\n                    ],\n                    [ 'sold', ...chart_data_sold],\n                    [ 'active', ...chart_data_active],\n                  ],\n                  type: \"area\", // default type of chart\n                  groups: [['sold'], ['active']],\n                  colors: {\n                    sold: colors[\"blue\"],\n                    active: colors[\"green\"],\n                  },\n                  names: {\n                    // name of each serie\n                    sold: data_sold_label,\n                    active: data_active_label,\n                  },\n                  \n                }}\n                axis={{\n                  y: {\n                    padding: {\n                      bottom: 0,\n                    },\n                    show: true,\n                  },\n                  x: {\n                    padding: {\n                      left: 0,\n                      right: 0,\n                    },\n                    type: 'category',\n                    show: true,\n                  },\n                }}\n                tooltip={{\n                  format: {\n                    title: function(x) {\n                      return \"\";\n                    },\n                  },\n                }}\n                padding={{\n                  bottom: 0,\n                  // left: -1,\n                  right: -1,\n                }}\n                point={{\n                  show: false,\n                }}\n              />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={3}>\n          {/* Export as sold as excel sheet */}\n          <Button\n            block\n            color=\"secondary\"\n            RootComponent=\"a\"\n            icon=\"download-cloud\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url_sold\n            )}\n          >\n            {t(\"insight.subscriptions.sold.export_excel\")}\n          </Button>\n          {/* Export as active as excel sheet */}\n          <Button\n            block\n            color=\"secondary\"\n            RootComponent=\"a\"\n            icon=\"download-cloud\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url_active\n            )}\n          >\n            {t(\"insight.subscriptions.active.export_excel\")}\n          </Button>\n        </Grid.Col>\n      {/* </Grid.Row> */}\n    </InsightSubscriptionsBase>\n  //   <SiteWrapper>\n  //     <div className=\"my-3 my-md-5\">\n  //       <Container>\n  //         <Page.Header title={t(\"insight.title\")} subTitle={t(\"general.classpasses\") + \" \" + year}>\n  //           <div className=\"page-options d-flex\">\n  //             <InsightBackHome />\n  //           </div>\n  //         </Page.Header>\n\n  //       </Container>  \n  //     </div>\n  //   </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(InsightSubscriptions))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\n\n\nlet classpasses_active\nlet classtypes_active\nlet discoveries_active\nlet documents_active\nlet languages_active\nlet locations_active\nlet levels_active\nlet holidays_active\nlet memberships_active\nlet subscriptions_active\nlet appointments_active\nlet organization_active\nlet organization_branding_active\nlet announcements_active\n\nconst OrganizationMenu = ({ t, activeLink }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'classpasses') ? classpasses_active = true: classpasses_active = false}\n        {(activeLink === 'classtypes') ? classtypes_active = true: classtypes_active = false}\n        {(activeLink === 'discoveries') ? discoveries_active = true: discoveries_active = false}\n        {(activeLink === 'documents') ? documents_active = true: documents_active = false}\n        {(activeLink === 'languages') ? languages_active = true: languages_active = false}\n        {(activeLink === 'locations') ? locations_active = true: locations_active = false}\n        {(activeLink === 'levels') ? levels_active = true: levels_active = false}\n        {(activeLink === 'holidays') ? holidays_active = true: holidays_active = false}\n        {(activeLink === 'memberships') ? memberships_active = true: memberships_active = false}\n        {(activeLink === 'subscriptions') ? subscriptions_active = true: subscriptions_active = false}\n        {(activeLink === 'appointments') ? appointments_active = true: appointments_active = false}\n        {(activeLink === 'organization') ? organization_active = true: organization_active = false}\n        {(activeLink === 'organization_branding') ? organization_branding_active = true: organization_branding_active = false}\n        {(activeLink === 'announcements') ? announcements_active = true: announcements_active = false}\n        \n\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/edit/T3JnYW5pemF0aW9uTm9kZToxMDA=\"\n            icon=\"layout\"\n            active={organization_active}\n            >\n            {t('organization.organization.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/locations\"\n            icon=\"home\"\n            active={locations_active}\n            >\n            {t('organization.locations.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/classtypes\"\n            icon=\"book-open\"\n            active={classtypes_active}\n            >\n            {t('organization.classtypes.title')}\n        </List.GroupItem>\n        {/* <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/memberships\"\n            icon=\"clipboard\"\n            active={memberships_active}\n            >\n            {t('organization.memberships.title')}\n        </List.GroupItem> */}\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/classpasses\"\n            icon=\"credit-card\"\n            active={classpasses_active}\n            >\n            {t('organization.classpasses.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/subscriptions\"\n            icon=\"edit\"\n            active={subscriptions_active}\n            >\n            {t('organization.subscriptions.title')}\n        </List.GroupItem>\n        {/* <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/appointment_categories\"\n            icon=\"calendar\"\n            active={appointments_active}\n            >\n            {t('organization.appointments.title')}\n        </List.GroupItem> */}\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/levels\"\n            icon=\"tag\"\n            active={levels_active}\n            >\n            {t('organization.levels.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/holidays\"\n            icon=\"sun\"\n            active={holidays_active}\n            >\n            {t('organization.holidays.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/discoveries\"\n            icon=\"compass\"\n            active={discoveries_active}\n            >\n            {t('organization.discoveries.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/languages\"\n            icon=\"flag\"\n            active={languages_active}\n            >\n            {t('organization.languages.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/edit/T3JnYW5pemF0aW9uTm9kZToxMDA=/branding\"\n            icon=\"image\"\n            active={organization_branding_active}\n            >\n            {t('organization.organization.branding.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/documents/T3JnYW5pemF0aW9uTm9kZToxMDA=\"\n            icon=\"briefcase\"\n            active={documents_active}\n            >\n            {t('organization.documents.title')}\n        </List.GroupItem>\n        <HasPermissionWrapper permission=\"view\"\n                              resource=\"organizationannouncement\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to=\"#/organization/announcements\"\n                icon=\"message-square\"\n                active={announcements_active}\n                >\n                {t('organization.announcements.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n    </List.Group>\n);\n\nexport default withTranslation()(OrganizationMenu)","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Container,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nclass OrganizationHome extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"School home props:\")\n    console.log(props)\n  }\n\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"organization.title\")} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n                <Grid.Row>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/edit/T3JnYW5pemF0aW9uTm9kZToxMDA='>\n                      <StampCard header={<small>{t('organization.organization.title')}</small>} footer={t('')} color=\"blue\" icon=\"layout\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/locations'>\n                      <StampCard header={<small>{t('organization.locations.title')}</small>} footer={t('')} color=\"blue\" icon=\"home\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/classtypes'>\n                      <StampCard header={<small>{t('organization.classtypes.title')}</small>} footer={t('')} color=\"blue\" icon=\"book-open\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/classpasses'>\n                      <StampCard header={<small>{t('organization.classpasses.title')}</small>} footer={t('')} color=\"blue\" icon=\"credit-card\" />\n                    </Link>\n                  </Grid.Col>\n                  {/* <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/memberships'>\n                      <StampCard header={<small>{t('organization.memberships.title')}</small>} footer={t('')} color=\"blue\" icon=\"clipboard\" />\n                    </Link>\n                  </Grid.Col> */}\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/subscriptions'>\n                      <StampCard header={<small>{t('organization.subscriptions.title')}</small>} footer={t('')} color=\"blue\" icon=\"edit\" />\n                    </Link>\n                  </Grid.Col>\n                  {/* <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/appointment_categories'>\n                      <StampCard header={<small>{t('organization.appointments.title')}</small>} footer={t('')} color=\"blue\" icon=\"calendar\" />\n                    </Link>\n                  </Grid.Col> */}\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/levels'>\n                      <StampCard header={<small>{t('organization.levels.title')}</small>} footer={t('')} color=\"blue\" icon=\"tag\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/holidays'>\n                      <StampCard header={<small>{t('organization.holidays.title')}</small>} footer={t('')} color=\"blue\" icon=\"sun\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/discoveries'>\n                      <StampCard header={<small>{t('organization.discoveries.title')}</small>} footer={t('')} color=\"blue\" icon=\"compass\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/languages'>\n                      <StampCard header={<small>{t('organization.languages.title')}</small>} footer={t('')} color=\"blue\" icon=\"flag\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/edit/T3JnYW5pemF0aW9uTm9kZToxMDA=/branding'>\n                      <StampCard header={<small>{t('organization.organization.branding.title')}</small>} footer={t('')} color=\"blue\" icon=\"image\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/documents/T3JnYW5pemF0aW9uTm9kZToxMDA='>\n                      <StampCard header={<small>{t('organization.documents.title')}</small>} footer={t('')} color=\"blue\" icon=\"briefcase\" />\n                    </Link>\n                  </Grid.Col>\n                  <HasPermissionWrapper permission=\"view\"\n                                        resource=\"organizationannouncement\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/organization/announcements'>\n                        <StampCard header={<small>{t('organization.announcements.title')}</small>} footer={t('')} color=\"blue\" icon=\"message-square\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                </Grid.Row>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <OrganizationMenu />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationHome))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ORGANIZATION_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .required(t('yup.field_required')),\n    address: Yup.string(),\n    phone: Yup.string(),\n    email: Yup.string()\n      .email(t('yup.email')),\n    registration: Yup.string(),\n    taxRegistration: Yup.string(),\n  })\n","export const customFileInputLabelStyle = {\n    whiteSpace: \"nowrap\",\n    display: \"block\",\n    overflow: \"hidden\"\n  }  \n  ","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\nimport { customFileInputLabelStyle } from \"../../../tools/custom_file_input_label_style\"\n\n\nconst OrganizationForm = ({ \n  t, \n  history, \n  isSubmitting, \n  errors, \n  values, \n  setFieldTouched, \n  setFieldValue,\n}) => (\n    <FoForm>\n      <Card.Body>\n        <Form.Group label={t('general.name')}>\n          <Field type=\"text\" \n                  name=\"name\" \n                  className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Form.Group label={t('general.address')}>\n          <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"address\"\n            initialValue={values.address}\n            init={tinymceBasicConf}\n            onBlur={(e) => {\n              setFieldValue(\"address\", e.target.getContent())\n              setFieldTouched(\"address\", true, true)\n            }}\n          />\n          <ErrorMessage name=\"address\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.phone')}>\n              <Field type=\"text\" \n                      name=\"phone\" \n                      className={(errors.phone) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"phone\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.email')}>\n              <Field type=\"text\" \n                      name=\"email\" \n                      className={(errors.email) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"email\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('organization.organization.registration')}>\n              <Field type=\"text\" \n                      name=\"registration\" \n                      className={(errors.registration) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"registration\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('organization.organization.tax_registration')}>\n              <Field type=\"text\" \n                      name=\"taxRegistration\" \n                      className={(errors.taxRegistration) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"taxRegistration\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n          color=\"primary\"\n          // className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n          >\n          {t('general.submit')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Page,\n  Grid,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationEditBase({t, match, history, children}) {\n  const id = match.params.id\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('organization.title')}>\n            <div className=\"page-options d-flex\">\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n            <Card>\n              <Card.Header>\n                <Card.Title>{t('organization.organization.title_edit')}</Card.Title>\n              </Card.Header>\n              {children}\n            </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <h5>{t(\"general.menu\")}</h5>\n              <OrganizationMenu activeLink='organization'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationEditBase))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ORGANIZATION_QUERY } from './queries'\nimport { ORGANIZATION_SCHEMA } from './yupSchema'\nimport OrganizationForm from './OrganizationForm'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationEditBase from \"./OrganizationEditBase\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nconst UPDATE_ORGANIZATION = gql`\n  mutation UpdateOrganization($input: UpdateOrganizationInput!) {\n    updateOrganization(input: $input) {\n      organization {\n        id\n        name\n      }\n    }\n  }\n`\n\n\nfunction OrganizationEdit({t, match, history}) {\n  const id = match.params.id\n\n  const [updateOrganization] = useMutation(UPDATE_ORGANIZATION)\n  const { loading, error, data, fetchMore } = useQuery(GET_ORGANIZATION_QUERY, {\n    variables: {\n      id: id\n  }})\n\n  if (loading) return (\n    <OrganizationEditBase>\n      {t(\"general.loading_with_dots\")}\n    </OrganizationEditBase>\n  )\n  if (error) return (\n    <OrganizationEditBase>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </OrganizationEditBase>\n  )\n\n  const initialData = data.organization\n\n  return (\n \n    <OrganizationEditBase>\n      <Formik\n        initialValues={{ \n          name: initialData.name, \n          address: initialData.address,\n          phone: initialData.phone,\n          email: initialData.email,\n          registration: initialData.registration,\n          taxRegistration: initialData.taxRegistration,\n        }}\n        validationSchema={ORGANIZATION_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log('submit values:')\n          console.log(values)\n\n          updateOrganization({ variables: {\n            input: {\n              id: match.params.id,\n              name: values.name,\n              address: values.address,\n              phone: values.phone,\n              email: values.email,\n              registration: values.registration,\n              taxRegistration: values.taxRegistration,\n            }\n          }})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('organization.organization.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n          }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <OrganizationForm \n            isSubmitting={isSubmitting}\n            values={values}\n            errors={errors}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n          />\n        )}\n      </Formik>\n    </OrganizationEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Page,\n  Grid,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nfunction OrganizationBrandingBase({t, match, history, children}) {\n  const id = match.params.id\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('organization.title')} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <h3>{t('organization.organization.branding.title')}</h3>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <h5>{t(\"general.menu\")}</h5>\n              <OrganizationMenu activeLink='organization_branding'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationBrandingBase))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ORGANIZATION_QUERY } from '../queries'\n\nimport {\n  Button,\n  GalleryCard,\n  Grid,\n  Icon\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationBrandingBase from \"./OrganizationBrandingBase\"\n\n\nconst UPDATE_ORGANIZATION = gql`\n  mutation UpdateOrganization($input: UpdateOrganizationInput!) {\n    updateOrganization(input: $input) {\n      organization {\n        id\n        name\n      }\n    }\n  }\n`\n\n\nfunction OrganizationBranding({t, match, history}) {\n  const id = match.params.id\n\n  const [updateOrganization] = useMutation(UPDATE_ORGANIZATION)\n  const { loading, error, data, fetchMore } = useQuery(GET_ORGANIZATION_QUERY, {\n    variables: {\n      id: id\n  }})\n\n  if (loading) return (\n    <OrganizationBrandingBase>\n      {t(\"general.loading_with_dots\")}\n    </OrganizationBrandingBase>\n  )\n  if (error) return (\n    <OrganizationBrandingBase>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </OrganizationBrandingBase>\n  )\n\n  const organization = data.organization\n\n  return (\n \n    <OrganizationBrandingBase>\n        <Grid.Row>\n          <Grid.Col md={4}>\n            <GalleryCard>\n              <h5>{t('organization.branding.logo_login')}</h5>\n              <GalleryCard.Image\n                src={organization.urlLogoLogin}\n              >\n              </GalleryCard.Image>\n              <GalleryCard.Details>\n                <Link to={`/organization/edit/${id}/branding/logoLogin`}>\n                  <Button block color=\"secondary\">\n                    {t(\"organization.branding.link_change\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </GalleryCard.Details>\n            </GalleryCard>\n          </Grid.Col>\n          <Grid.Col md={4}>\n            <GalleryCard>\n              <h5>{t('organization.branding.logo_invoice')}</h5>\n              <GalleryCard.Image\n                src={organization.urlLogoInvoice}\n              >\n              </GalleryCard.Image>\n              <GalleryCard.Details>\n                <Link to={`/organization/edit/${id}/branding/logoInvoice`}>\n                  <Button block color=\"secondary\">\n                    {t(\"organization.branding.link_change\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </GalleryCard.Details>\n            </GalleryCard>\n          </Grid.Col>\n          <Grid.Col md={4}>\n            <GalleryCard>\n              <h5>{t('organization.branding.logo_email')}</h5>\n              <GalleryCard.Image\n                src={organization.urlLogoEmail}\n              >\n              </GalleryCard.Image>\n              <GalleryCard.Details>\n                <Link to={`/organization/edit/${id}/branding/logoEmail`}>\n                  <Button block color=\"secondary\">\n                    {t(\"organization.branding.link_change\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </GalleryCard.Details>\n            </GalleryCard>\n          </Grid.Col>\n          <Grid.Col md={4}>\n            <GalleryCard>\n              <h5>{t('organization.branding.logo_shop_header')}</h5>\n              <GalleryCard.Image\n                src={organization.urlLogoShopHeader}\n              >\n              </GalleryCard.Image>\n              <GalleryCard.Details>\n                <Link to={`/organization/edit/${id}/branding/logoShopHeader`}>\n                  <Button block color=\"secondary\">\n                    {t(\"organization.branding.link_change\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </GalleryCard.Details>\n            </GalleryCard>\n          </Grid.Col>\n          <Grid.Col md={4}>\n            <GalleryCard>\n              <h5>{t('organization.branding.logo_self_checkin')}</h5>\n              <GalleryCard.Image\n                src={organization.urlLogoSelfCheckin}\n              >\n              </GalleryCard.Image>\n              <GalleryCard.Details>\n                <Link to={`/organization/edit/${id}/branding/logoSelfCheckin`}>\n                  <Button block color=\"secondary\">\n                    {t(\"organization.branding.link_change\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </GalleryCard.Details>\n            </GalleryCard>\n          </Grid.Col>\n        </Grid.Row>\n    </OrganizationBrandingBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationBranding))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { customFileInputLabelStyle } from \"../../../../tools/custom_file_input_label_style\"\n\n\nconst OrganizationBrandingEditForm = ({ \n  t, \n  history, \n  formTitle,\n  isSubmitting, \n  inputFileName, \n  fileInputLabel, \n  handleFileInputChange=f=>f\n}) => (\n    <FoForm>\n      <Card title={formTitle}>\n        <Card.Body>\n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group label={t('general.custom_file_input_label')}>\n                <div className=\"custom-file\">\n                  <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                  <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                    {fileInputLabel}\n                  </label>\n                </div>\n              </Form.Group>\n            </Grid.Col>\n          </Grid.Row>\n        </Card.Body>\n        <Card.Footer>\n            <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n            >\n            {t('general.submit')}\n            </Button>\n        </Card.Footer>\n      </Card>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationBrandingEditForm))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ORGANIZATION_QUERY } from '../queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationBrandingBase from \"./OrganizationBrandingBase\"\nimport OrganizationBrandingEditForm from \"./OrganizationBrandingEditForm\"\nimport { updateLocale } from 'moment'\n\n\nconst UPDATE_ORGANIZATION = gql`\n  mutation UpdateOrganization($input: UpdateOrganizationInput!) {\n    updateOrganization(input: $input) {\n      organization {\n        id\n      }\n    }\n  }\n`\n\n\nfunction OrganizationBrandingEdit({t, match, history}) {\n  const id = match.params.id\n  const updateField = match.params.update_field\n  const returnUrl = `/organization/edit/${id}/branding`\n\n  let formTitle = \"\"\n  switch (updateField) {\n    case \"logoLogin\":\n      formTitle = t(\"organization.branding.logo_login\")\n      break\n    default:\n      break\n  }\n\n\n  const [updateOrganization] = useMutation(UPDATE_ORGANIZATION)\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n\n  return (\n \n    <OrganizationBrandingBase>\n      <Formik\n        initialValues={{}}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"Submit values\")\n          console.log(values)\n          console.log(fileName)\n\n          let inputVars = {\n            id: id\n          }\n\n          let reader = new FileReader()\n          reader.onload = function(reader_event) {\n            console.log(reader_event.target.result)\n            let b64_enc_file = reader_event.target.result\n            console.log(b64_enc_file)\n            // Add uploaded document b64 encoded blob to input vars\n            switch(updateField) {\n              case \"logoLogin\":\n                inputVars.logoLoginFileName = fileName\n                inputVars.logoLogin = b64_enc_file\n                break\n              case \"logoInvoice\":\n                inputVars.logoInvoiceFileName = fileName\n                inputVars.logoInvoice = b64_enc_file\n                break\n              case \"logoEmail\":\n                inputVars.logoEmailFileName = fileName\n                inputVars.logoEmail = b64_enc_file\n                break\n              case \"logoShopHeader\":\n                inputVars.logoShopHeaderFileName = fileName\n                inputVars.logoShopHeader = b64_enc_file\n                break\n              case \"logoSelfCheckin\":\n                inputVars.logoSelfCheckinFileName = fileName\n                inputVars.logoSelfCheckin = b64_enc_file\n                break\n              default:\n                break              \n            }\n            \n            updateOrganization({ variables: {\n              input: inputVars\n            }, refetchQueries: [\n                {query: GET_ORGANIZATION_QUERY, variables: {id: id}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                setSubmitting(false)\n                history.push(returnUrl)\n                toast.success((t('organization.branding.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n          \n          let file = inputFileName.current.files[0]\n          if (file && file.size < 5242880) {\n            reader.readAsDataURL(file)\n          } else if (file && file.size > 5242880) { \n            toast.error(t(\"error_messages.selected_file_exceeds_max_filesize\"), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n            setSubmitting(false)\n          } else {\n            toast.error(t(\"general.please_select_a_file\"), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n            setSubmitting(false)\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <OrganizationBrandingEditForm \n            isSubmitting={isSubmitting}\n            formTitle={formTitle}\n            inputFileName={inputFileName}\n            fileInputLabel={fileInputLabel}\n            handleFileInputChange={handleFileInputChange}\n          />\n        )}\n      </Formik>\n    </OrganizationBrandingBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationBrandingEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationAnnouncementsBase({t, history, children, showEditBack=false}) {\n  return (\n    <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"organization.title\")} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n            {children}\n          </Grid.Col>\n          <Grid.Col md={3}>\n            {(showEditBack) ?\n              <Link to=\"/organization/announcements\">\n                <Button color=\"primary btn-block mb-6\">\n                  <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                </Button>\n              </Link>\n            :\n              <HasPermissionWrapper permission=\"add\"\n                          resource=\"organizationlevel\">\n                <Link to=\"/organization/announcements/add\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.announcements.add')}\n                  </Button>\n                </Link>\n                </HasPermissionWrapper>\n            }\n            <OrganizationMenu activeLink='announcements'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationAnnouncementsBase))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ANNOUNCEMENTS_QUERY = gql`\n  query OrganizationAnnouncements($after: String, $before: String) {\n    organizationAnnouncements(first: 15, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          displayPublic\n          displayShop\n          displayBackend\n          title\n          content\n          dateStart\n          dateEnd\n          priority\n        }\n      }\n    }\n  }\n`\n\nexport const GET_ANNOUNCEMENT_QUERY = gql`\n  query OrganizationAnnouncement($id: ID!) {\n    organizationAnnouncement(id:$id) {\n      id\n      displayPublic\n      displayShop\n      displayBackend\n      title\n      content\n      dateStart\n      dateEnd\n      priority\n    }\n  }\n`\n\nexport const ADD_ANNOUNCEMENT = gql`\n  mutation CreateOrganizationAnnouncement($input:CreateOrganizationAnnouncementInput!) {\n    createOrganizationAnnouncement(input: $input) {\n      organizationAnnouncement {\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_ANNOUNCEMENT = gql`\n  mutation UpdateOrganizationAnnouncement($input: UpdateOrganizationAnnouncementInput!) {\n    updateOrganizationAnnouncement(input: $input) {\n      organizationAnnouncement {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_ANNOUNCEMENT = gql`\nmutation DeleteOrganizationAnnouncement($input: DeleteOrganizationAnnouncementInput!) {\n  deleteOrganizationAnnouncement(input: $input) {\n    ok\n  }\n}\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\n\nimport {\n  Dimmer,\n  Button,\n  Icon,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport AppSettingsContext from '../../context/AppSettingsContext'\nimport ContentCard from \"../../general/ContentCard\"\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport OrganizationAnnouncementsBase from \"./OrganizationAnnouncementsBase\"\n\nimport { GET_ANNOUNCEMENTS_QUERY, DELETE_ANNOUNCEMENT } from \"./queries\"\n\nfunction OrganizationAnnouncements({ t, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ANNOUNCEMENTS_QUERY)\n  const [ deleteAnnouncement ] = useMutation(DELETE_ANNOUNCEMENT)\n\n  const cardTitle = t('organization.announcements.title')\n\n  // Loading\n  if (loading) return (\n    <OrganizationAnnouncementsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationAnnouncementsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationAnnouncementsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.announcements.error_loading')}</p>\n      </ContentCard>\n    </OrganizationAnnouncementsBase>\n  )\n\n  const organizationAnnouncements = data.organizationAnnouncements\n\n  // Empty list\n  if (!organizationAnnouncements.edges.length) { return (\n    <OrganizationAnnouncementsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.announcements.empty_list')}</p>\n      </ContentCard>\n    </OrganizationAnnouncementsBase>\n  )}\n\n  return (\n    <OrganizationAnnouncementsBase>\n      <ContentCard cardTitle={cardTitle}\n                    pageInfo={organizationAnnouncements.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: organizationAnnouncements.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationAnnouncements.edges\n                        const pageInfo = fetchMoreResult.organizationAnnouncements.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new organizationAnnouncements at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationAnnouncements: {\n                                __typename: previousResult.organizationAnnouncements.__typename,\n                                edges: [ ...previousResult.organizationAnnouncements.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.title')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.display_public')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.backend')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.priority')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                  {organizationAnnouncements.edges.map(({ node }) => (\n                    <Table.Row key={v4()}>\n                      <Table.Col key={v4()}>\n                        {node.title}\n                      </Table.Col>\n                      <Table.Col><BadgeBoolean value={node.displayPublic} /></Table.Col>\n                      <Table.Col><BadgeBoolean value={node.displayShop} /></Table.Col>\n                      <Table.Col><BadgeBoolean value={node.displayBackend} /></Table.Col>\n                      <Table.Col>{moment(node.dateStart).format(dateFormat)}</Table.Col>\n                      <Table.Col>{(node.dateEnd) ? moment(node.dateEnd).format(dateFormat): \"\"}</Table.Col>\n                      <Table.Col>{node.priority}</Table.Col>\n                      <Table.Col className=\"text-right\" key={v4()}>\n                        <Link to={`/organization/announcements/edit/${node.id}`}>\n                          <Button className='btn-sm' \n                                  color=\"secondary\">\n                            {t('general.edit')}\n                          </Button>\n                        </Link>\n                      </Table.Col>\n                      <Table.Col>\n                        <button \n                          className=\"icon btn btn-link btn-sm\" \n                          title={t('general.delete')} \n                          href=\"\"\n                          onClick={() => {\n                            confirm_delete({\n                              t: t,\n                              msgConfirm: t(\"organization.announcements.delete_confirm_msg\"),\n                              msgDescription: <p><br />{node.title}</p>,\n                              msgSuccess: t('organization.announcements.deleted'),\n                              deleteFunction: deleteAnnouncement,\n                              functionVariables: { variables: {\n                                input: {\n                                  id: node.id\n                                }\n                              }, refetchQueries: [\n                                {query: GET_ANNOUNCEMENTS_QUERY} \n                              ]}\n                            })\n                        }}>\n                          <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                        </button>\n                      </Table.Col>\n                      {/* <Mutation mutation={ARCHIVE_LEVEL} key={v4()}>\n                        {(archiveCostcenter, { data }) => (\n                          <Table.Col className=\"text-right\" key={v4()}>\n                            <button className=\"icon btn btn-link btn-sm\" \n                                title={t('general.archive')} \n                                href=\"\"\n                                onClick={() => {\n                                  console.log(\"clicked archived\")\n                                  let id = node.id\n                                  archiveCostcenter({ variables: {\n                                    input: {\n                                    id,\n                                    archived: !archived\n                                    }\n                            }, refetchQueries: [\n                                {query: GET_LEVELS_QUERY, variables: {\"archived\": archived }}\n                            ]}).then(({ data }) => {\n                              console.log('got data', data);\n                              toast.success(\n                                (archived) ? t('general.unarchived'): t('general.archived'), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error);\n                            })\n                            }}>\n                              <Icon prefix=\"fa\" name=\"inbox\" />\n                            </button>\n                          </Table.Col>\n                        )}\n                      </Mutation> */}\n                    </Table.Row>\n                  ))}\n              </Table.Body>\n            </Table>\n      </ContentCard>\n    </OrganizationAnnouncementsBase>\n  )\n}\n\n\n// const OrganizationLevels = ({ t, history, archived=false }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t(\"organization.title\")} />\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//             <Query query={GET_LEVELS_QUERY} variables={{ archived }}>\n//              {({ loading, error, data: {organizationLevels: levels}, refetch, fetchMore }) => {\n//                 // Loading\n//                 if (loading) return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}>\n//                     <Dimmer active={true}\n//                             loader={true}>\n//                     </Dimmer>\n//                   </ContentCard>\n//                 )\n//                 // Error\n//                 if (error) return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}>\n//                     <p>{t('organization.levels.error_loading')}</p>\n//                   </ContentCard>\n//                 )\n//                 const headerOptions = <Card.Options>\n//                   <Button color={(!archived) ? 'primary': 'secondary'}  \n//                           size=\"sm\"\n//                           onClick={() => {archived=false; refetch({archived});}}>\n//                     {t('general.current')}\n//                   </Button>\n//                   <Button color={(archived) ? 'primary': 'secondary'} \n//                           size=\"sm\" \n//                           className=\"ml-2\" \n//                           onClick={() => {archived=true; refetch({archived});}}>\n//                     {t('general.archive')}\n//                   </Button>\n//                 </Card.Options>\n                \n//                 // Empty list\n//                 if (!levels.edges.length) { return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}\n//                                headerContent={headerOptions}>\n//                     <p>\n//                     {(!archived) ? t('organization.levels.empty_list') : t(\"organization.levels.empty_archive\")}\n//                     </p>\n                   \n//                   </ContentCard>\n//                 )} else {   \n//                 // Life's good! :)\n//                 return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}\n//                                headerContent={headerOptions}\n//                                pageInfo={levels.pageInfo}\n//                                onLoadMore={() => {\n//                                 fetchMore({\n//                                   variables: {\n//                                     after: levels.pageInfo.endCursor\n//                                   },\n//                                   updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                     const newEdges = fetchMoreResult.organizationLevels.edges\n//                                     const pageInfo = fetchMoreResult.organizationLevels.pageInfo\n\n//                                     return newEdges.length\n//                                       ? {\n//                                           // Put the new levels at the end of the list and update `pageInfo`\n//                                           // so we have the new `endCursor` and `hasNextPage` values\n//                                           organizationLevels: {\n//                                             __typename: previousResult.organizationLevels.__typename,\n//                                             edges: [ ...previousResult.organizationLevels.edges, ...newEdges ],\n//                                             pageInfo\n//                                           }\n//                                         }\n//                                       : previousResult\n//                                   }\n//                                 })\n//                               }} >\n//                     <Table>\n//                           <Table.Header>\n//                             <Table.Row key={v4()}>\n//                               <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                             </Table.Row>\n//                           </Table.Header>\n//                           <Table.Body>\n//                               {levels.edges.map(({ node }) => (\n//                                 <Table.Row key={v4()}>\n//                                   <Table.Col key={v4()}>\n//                                     {node.name}\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     {(node.archived) ? \n//                                       <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/organization/levels/edit/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('general.edit')}\n//                                       </Button>\n//                                     }\n//                                   </Table.Col>\n//                                   <Mutation mutation={ARCHIVE_LEVEL} key={v4()}>\n//                                     {(archiveCostcenter, { data }) => (\n//                                       <Table.Col className=\"text-right\" key={v4()}>\n//                                         <button className=\"icon btn btn-link btn-sm\" \n//                                            title={t('general.archive')} \n//                                            href=\"\"\n//                                            onClick={() => {\n//                                              console.log(\"clicked archived\")\n//                                              let id = node.id\n//                                              archiveCostcenter({ variables: {\n//                                                input: {\n//                                                 id,\n//                                                 archived: !archived\n//                                                }\n//                                         }, refetchQueries: [\n//                                             {query: GET_LEVELS_QUERY, variables: {\"archived\": archived }}\n//                                         ]}).then(({ data }) => {\n//                                           console.log('got data', data);\n//                                           toast.success(\n//                                             (archived) ? t('general.unarchived'): t('general.archived'), {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                         }).catch((error) => {\n//                                           toast.error((t('general.toast_server_error')) +  error, {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                           console.log('there was an error sending the query', error);\n//                                         })\n//                                         }}>\n//                                           <Icon prefix=\"fa\" name=\"inbox\" />\n//                                         </button>\n//                                       </Table.Col>\n//                                     )}\n//                                   </Mutation>\n//                                 </Table.Row>\n//                               ))}\n//                           </Table.Body>\n//                         </Table>\n//                   </ContentCard>\n//                 )}}\n//              }\n//             </Query>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"organizationlevel\">\n//               <Link to={\"/organization/announcements/add\"}\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(\"\")}>\n//                 <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.levels.add')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <OrganizationMenu activeLink='levels'/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// );\n\nexport default withTranslation()(withRouter(OrganizationAnnouncements))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ANNOUNCEMENT_SCHEMA = Yup.object().shape({\n    title: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    content: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    dateStart: Yup.date()\n      .required(t('yup.field_required')),\n    dateEnd: Yup.date()\n      .required(t('yup.field_required')),\n    priority: Yup.number()\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nfunction OrganizationAnnouncementForm({ t, history, isSubmitting, values, errors, setFieldTouched, setFieldValue, returnUrl }) {\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"displayPublic\" \n                  checked={values.displayPublic} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('organization.announcements.display_public')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"displayShop\" \n                  checked={values.displayShop} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('organization.announcements.display_shop')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"displayShop\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"displayBackend\" \n                  checked={values.displayBackend} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('organization.announcements.display_backend')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"displayBackend\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.title')}>\n              <Field type=\"text\" \n                      name=\"title\" \n                      className={(errors.title) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"title\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('organization.announcements.content')}>\n              <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"content\"\n                initialValue={values.content}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldTouched(\"content\", true)\n                  setFieldValue(\"content\", e.target.getContent())\n                }}\n                />\n              <ErrorMessage name=\"content\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                selected={values.dateStart}\n                onChange={(date) => setFieldValue(\"dateStart\", date)}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                selected={values.dateEnd}\n                onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.priority')}>\n              <Field type=\"text\" \n                      name=\"priority\" \n                      className={(errors.priority) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"priority\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n  \n  \nexport default withTranslation()(withRouter(OrganizationAnnouncementForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_ANNOUNCEMENTS_QUERY, ADD_ANNOUNCEMENT } from './queries'\nimport { ANNOUNCEMENT_SCHEMA } from './yupSchema'\nimport OrganizationAnnouncementForm from './OrganizationAnnouncementForm'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from '../OrganizationMenu'\nimport { dateToLocalISO } from '../../../tools/date_tools'\n\nfunction OrganizationAnnouncementAdd({t, history}) {\n  const returnUrl = \"/organization/announcements\"\n  const [addAnnouncement] = useMutation(ADD_ANNOUNCEMENT)\n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('organization.title')} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n            <Card>\n              <Card.Header>\n                <Card.Title>{t('organization.announcements.title_add')}</Card.Title>\n              </Card.Header>\n                <Formik\n                    initialValues={{ \n                      displayPublic: false,\n                      displayShop: false,\n                      displayBackend: false,\n                      title: '', \n                      content: '',\n                      dateStart: new Date(),\n                      dateEnd: new Date(),\n                      priority: 100,\n                    }}\n                    validationSchema={ANNOUNCEMENT_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n                      let inputValues = {\n                        displayPublic: values.displayPublic,\n                        displayBackend: values.displayBackend,\n                        displayShop: values.displayShop,\n                        title: values.title, \n                        content: values.content,\n                        dateStart: dateToLocalISO(values.dateStart),\n                        dateEnd: dateToLocalISO(values.dateEnd),\n                        priority: values.priority\n                      }\n\n                      addAnnouncement({ variables: {\n                        input: inputValues\n                      }, refetchQueries: [\n                          {query: GET_ANNOUNCEMENTS_QUERY}\n                      ]})\n                      .then(({ data }) => {\n                          console.log('got data', data)\n                          history.push(returnUrl)\n                          toast.success((t('organization.announcements.toast_add_success')), {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error)\n                          setSubmitting(false)\n                        })\n                    }}\n                    >\n                    {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n                        <OrganizationAnnouncementForm \n                          isSubmitting={isSubmitting}\n                          values={values}\n                          errors={errors}\n                          setFieldTouched={setFieldTouched}\n                          setFieldValue={setFieldValue}\n                          returnUrl={returnUrl}\n                        />\n                    )}\n                </Formik>\n            </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"organizationannouncement\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              <OrganizationMenu activeLink='announcements'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationAnnouncementAdd))","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ANNOUNCEMENTS_QUERY, GET_ANNOUNCEMENT_QUERY, UPDATE_ANNOUNCEMENT } from './queries'\nimport { ANNOUNCEMENT_SCHEMA } from './yupSchema'\nimport OrganizationAnnouncementForm from './OrganizationAnnouncementForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationAnnouncementsBase from \"./OrganizationAnnouncementsBase\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\n\nfunction OrganizationAnnouncementEdit({t, history, match}) {\n  const announcementId = match.params.id\n  const cardTitle = t(\"organization.announcements.title_edit\")\n  const returnUrl = \"/organization/announcements\"\n  \n  const { loading, error, data } = useQuery(GET_ANNOUNCEMENT_QUERY, { variables: {\n    id: announcementId\n  }})\n  const [updateAnnouncement] = useMutation(UPDATE_ANNOUNCEMENT)\n\n  if (loading) return (\n    <OrganizationAnnouncementsBase showEditBack={true}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          {t(\"general.loading_with_dots\")}\n        </Card.Body>\n      </Card>\n    </OrganizationAnnouncementsBase>\n  )\n\n  if (error) return (\n    <OrganizationAnnouncementsBase showEditBack={true}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          {t(\"general.error_sad_smiley\")}\n        </Card.Body>\n      </Card>\n    </OrganizationAnnouncementsBase>\n  )\n\n  const organizationAnnouncement = data.organizationAnnouncement\n  \n  return (\n    <OrganizationAnnouncementsBase showEditBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n          <Formik\n              initialValues={{ \n                displayPublic: organizationAnnouncement.displayPublic,\n                displayShop: organizationAnnouncement.displayShop,\n                displayBackend: organizationAnnouncement.displayBackend,\n                title: organizationAnnouncement.title, \n                content: organizationAnnouncement.content,\n                dateStart: organizationAnnouncement.dateStart,\n                dateEnd: organizationAnnouncement.dateEnd,\n                priority: organizationAnnouncement.priority,\n              }}\n              validationSchema={ANNOUNCEMENT_SCHEMA}\n              onSubmit={(values, { setSubmitting }) => {\n                let inputValues = {\n                  id: announcementId,\n                  displayPublic: values.displayPublic,\n                  displayBackend: values.displayBackend,\n                  displayShop: values.displayShop,\n                  title: values.title, \n                  content: values.content,\n                  dateStart: dateToLocalISO(values.dateStart),\n                  dateEnd: dateToLocalISO(values.dateEnd),\n                  priority: values.priority\n                }\n\n                updateAnnouncement({ variables: {\n                  input: inputValues\n                }, refetchQueries: [\n                    {query: GET_ANNOUNCEMENTS_QUERY}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.announcements.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n              }}\n              >\n              {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n                  <OrganizationAnnouncementForm \n                    isSubmitting={isSubmitting}\n                    values={values}\n                    errors={errors}\n                    setFieldTouched={setFieldTouched}\n                    setFieldValue={setFieldValue}\n                    returnUrl={returnUrl}\n                  />\n              )}\n          </Formik>\n      </Card>\n    </OrganizationAnnouncementsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationAnnouncementEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_APPOINTMENTS_QUERY = gql`\n  query OrganizationAppointments($after: String, $before: String, $organizationAppointmentCategory: ID!, $archived: Boolean!) {\n    organizationAppointments(first: 15, before: $before, after: $after, organizationAppointmentCategory: $organizationAppointmentCategory, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationAppointmentCategory {\n            id\n            name\n          }\n          archived,\n          displayPublic\n          name\n        }\n      }\n    }\n    organizationAppointmentCategory(id: $organizationAppointmentCategory) {\n      id\n      name\n    }\n  }\n`\n\nexport const GET_APPOINTMENT_QUERY = gql`\n  query OrganizationAppointment($id: ID!, $after: String, $before: String) {\n    organizationAppointment(id:$id) {\n      id\n      name\n      displayPublic\n      archived\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query AppointmentInputValues($after: String, $before: String, $archived: Boolean) {\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport CardHeaderSeparator from \"../../../general/CardHeaderSeparator\"\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\nimport { GET_APPOINTMENTS_QUERY } from \"./queries\"\n\nconst ARCHIVE_APPOINTMENT = gql`\n  mutation ArchiveOrganizationAppointment($input: ArchiveOrganizationAppointmentInput!) {\n    archiveOrganizationAppointment(input: $input) {\n      organizationAppointment {\n        id\n        archived\n      }\n    }\n  }\n`\n\nconst OrganizationAppointments = ({ t, history, match, archived=false }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"organization.title\")}>\n          <div className=\"page-options d-flex\">\n            <Link to=\"/organization/appointment_categories\" \n                  className='btn btn-outline-secondary btn-sm'>\n                <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.appointment_categories.title')}\n            </Link>\n          </div>\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            <Query query={GET_APPOINTMENTS_QUERY} variables={{ archived, organizationAppointmentCategory: match.params.category_id }}>\n             {({ loading, error, data: {organizationAppointments: appointments, organizationAppointmentCategory: location}, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('organization.appointments.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('organization.appointments.title')}>\n                    <p>{t('organization.appointments.error_loading')}</p>\n                  </ContentCard>\n                )\n                const headerOptions = <Card.Options>\n                  <Button color={(!archived) ? 'primary': 'secondary'}  \n                          size=\"sm\"\n                          onClick={() => {archived=false; refetch({archived});}}>\n                    {t('general.current')}\n                  </Button>\n                  <Button color={(archived) ? 'primary': 'secondary'} \n                          size=\"sm\" \n                          className=\"ml-2\" \n                          onClick={() => {archived=true; refetch({archived});}}>\n                    {t('general.archive')}\n                  </Button>\n                </Card.Options>\n\n                // Empty list\n                if (!appointments.edges.length) { return (\n                  <ContentCard cardTitle={t('organization.appointments.title')}\n                               headerContent={headerOptions}>\n                    <p>\n                    {(!archived) ? t('organization.appointments.empty_list') : t(\"organization.appointments.empty_archive\")}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('organization.appointments.title')}\n                               headerContent={headerOptions}\n                               pageInfo={appointments.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: appointments.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.organizationAppointmentPrices.edges\n                                    const pageInfo = fetchMoreResult.organizationAppointmentPrices.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new locations at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          organizationAppointmentPrices: {\n                                            __typename: previousResult.organizationAppointmentPrices.__typename,\n                                            edges: [ ...previousResult.organizationAppointmentPrices.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} >\n                    <div>\n                      <Alert type=\"primary\">\n                        <strong>{t('general.appointment_category')}</strong> {location.name}\n                      </Alert>\n\n                      <Table>\n                        <Table.Header>\n                          <Table.Row key={v4()}>\n                            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                            <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                          </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            {appointments.edges.map(({ node }) => (\n                              <Table.Row key={v4()}>\n                                <Table.Col key={v4()}>\n                                  {node.name}\n                                </Table.Col>\n                                <Table.Col key={v4()}>\n                                  {(node.displayPublic) ? \n                                    <Badge color=\"success\">{t('general.yes')}</Badge>: \n                                    <Badge color=\"danger\">{t('general.no')}</Badge>}\n                                </Table.Col>\n                                <Table.Col className=\"text-right\" key={v4()}>\n                                  {(node.archived) ? \n                                    <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                    <span>\n                                      <Button className='btn-sm' \n                                              onClick={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/edit/\" + node.id)}\n                                              color=\"secondary\">\n                                        {t('general.edit')}\n                                      </Button>\n                                      <Button className='btn-sm' \n                                              onClick={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/prices/\" + node.id)}\n                                              color=\"secondary\">\n                                        {t('organization.appointments.teacher_prices')}\n                                      </Button>\n                                    </span>\n                                  }\n                                </Table.Col>\n                                <Mutation mutation={ARCHIVE_APPOINTMENT} key={v4()}>\n                                  {(archiveAppointmentCategorysRoom, { data }) => (\n                                    <Table.Col className=\"text-right\" key={v4()}>\n                                      <button className=\"icon btn btn-link btn-sm\" \n                                          title={t('general.archive')} \n                                          href=\"\"\n                                          onClick={() => {\n                                            console.log(\"clicked archived\")\n                                            let id = node.id\n                                            archiveAppointmentCategorysRoom({ variables: {\n                                              input: {\n                                              id,\n                                              archived: !archived\n                                              }\n                                      }, refetchQueries: [\n                                          { \n                                            query: GET_APPOINTMENTS_QUERY, \n                                            variables: {\"archived\": archived, organizationAppointmentCategory: match.params.category_id }\n                                          }\n                                      ]}).then(({ data }) => {\n                                        console.log('got data', data);\n                                        toast.success(\n                                          (archived) ? t('general.unarchived'): t('general.archived'), {\n                                            position: toast.POSITION.BOTTOM_RIGHT\n                                          })\n                                      }).catch((error) => {\n                                        toast.error((t('general.toast_server_error')) +  error, {\n                                            position: toast.POSITION.BOTTOM_RIGHT\n                                          })\n                                        console.log('there was an error sending the query', error);\n                                      })\n                                      }}>\n                                        <Icon prefix=\"fa\" name=\"inbox\" />\n                                      </button>\n                                    </Table.Col>\n                                  )}\n                                </Mutation>\n                              </Table.Row>\n                            ))}\n                        </Table.Body>\n                      </Table>\n                      </div>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointment\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/add/\")}>\n                <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.appointments.add')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointments'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointments))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const APPOINTMENT_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\n\nconst OrganizationAppointmentForm = ({ t, history, match, inputData, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"displayPublic\" \n                checked={values.displayPublic} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('organization.appointments.public')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n          </Form.Group>    \n\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.glaccount')}>\n              <Field component=\"select\" \n                    name=\"financeGlaccount\" \n                    className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.financeGlaccounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n            <Form.Group label={t('general.costcenter')}>\n              <Field component=\"select\" \n                    name=\"financeCostcenter\" \n                    className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.financeCostcenters.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={return_url}>\n            <Button color=\"link\" type=\"button\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentForm))","// @flow\n\nimport React from 'react'\nimport { Mutation, Query } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_APPOINTMENTS_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { APPOINTMENT_SCHEMA } from './yupSchema'\nimport OrganizationAppointmentForm from './OrganizationAppointmentForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nconst ADD_APPOINTMENT = gql`\n  mutation CreateOrganizationAppointment($input: CreateOrganizationAppointmentInput!) {\n    createOrganizationAppointment(input: $input) {\n      organizationAppointment {\n        id\n        organizationAppointmentCategory {\n          id\n          name\n        }\n        archived\n        displayPublic\n        name\n      }\n    }\n  }\n`\n\nconst return_url = \"/organization/appointment_categories/appointments/\"\n\nconst OrganizationAppointmentAdd = ({ t, history, match }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t('organization.title')} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n          <Card>\n            <Card.Header>\n              <Card.Title>{t('organization.appointments.title_add')}</Card.Title>\n            </Card.Header>\n            <Query query={GET_INPUT_VALUES_QUERY} variables = {{archived: false}} >\n              {({ loading, error, data, refetch }) => {\n                // Loading\n                if (loading) return <p>{t('general.loading_with_dots')}</p>\n                // Error\n                if (error) {\n                  console.log(error)\n                  return <p>{t('general.error_sad_smiley')}</p>\n                }\n                \n                console.log('query data')\n                console.log(data)\n                const inputData = data\n\n                return (\n                  <Mutation mutation={ADD_APPOINTMENT} onCompleted={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments\")}> \n                      {(addAppointment, { data }) => (\n                          <Formik\n                              initialValues={{ name: '', displayPublic: true }}\n                              validationSchema={APPOINTMENT_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  addAppointment({ variables: {\n                                    input: {\n                                      organizationAppointmentCategory: match.params.category_id,\n                                      name: values.name, \n                                      displayPublic: values.displayPublic,\n                                      financeGlaccount: values.financeGlaccount,\n                                      financeCostcenter: values.financeCostcenter\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_APPOINTMENTS_QUERY,\n                                      variables: {\"archived\": false, \"organizationAppointmentCategory\": match.params.category_id }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data);\n                                      toast.success((t('organization.appointments.toast_add_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values }) => (\n                                <OrganizationAppointmentForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments\"}\n                                  />\n                              )}\n                          </Formik>\n                      )}\n                    </Mutation>\n                )}}\n              </Query>                    \n          </Card>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointment\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(return_url + match.params.category_id)}>\n                <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointments'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APPOINTMENTS_QUERY, GET_APPOINTMENT_QUERY } from './queries'\nimport { APPOINTMENT_SCHEMA } from './yupSchema'\nimport OrganizationAppointmentForm from './OrganizationAppointmentForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nconst UPDATE_APPOINTMENT = gql`\n  mutation UpdateOrganizationAppointment($input: UpdateOrganizationAppointmentInput!) {\n    updateOrganizationAppointment(input: $input) {\n      organizationAppointment {\n        id\n        name\n        displayPublic\n      }\n    }\n  }\n`\n\n\nclass OrganizationAppointmentEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization appointment edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const category_id = match.params.category_id\n    const return_url = \"/organization/appointment_categories/\" + match.params.category_id + \"/appointments\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t('organization.title')} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.appointments.title_edit')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_APPOINTMENT_QUERY} variables={{ id }} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    const inputData = data\n                    const initialData = data.organizationAppointment\n                    console.log('query data')\n                    console.log(data)\n\n                    let initialGlaccount = \"\"\n                    if (initialData.financeGlaccount) {\n                      initialGlaccount =  initialData.financeGlaccount.id\n                    } \n\n                    let initialCostcenter = \"\"\n                    if (initialData.financeCostcenter) {\n                      initialCostcenter =  initialData.financeCostcenter.id\n                    } \n\n                    return (\n                      \n                      <Mutation mutation={UPDATE_APPOINTMENT} onCompleted={() => history.push(return_url)}> \n                      {(updateLocation, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                name: initialData.name, \n                                displayPublic: initialData.displayPublic,\n                                financeGlaccount: initialGlaccount,\n                                financeCostcenter: initialCostcenter,\n                              }}\n                              validationSchema={APPOINTMENT_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  updateLocation({ variables: {\n                                    input: {\n                                      id: match.params.id,\n                                      name: values.name,\n                                      displayPublic: values.displayPublic,\n                                      financeGlaccount: values.financeGlaccount,\n                                      financeCostcenter: values.financeCostcenter\n                                    }\n                                  }, refetchQueries: [\n                                    {query: GET_APPOINTMENTS_QUERY,\n                                      variables: {\"archived\": false, \"organizationAppointmentCategory\": match.params.category_id }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.appointments.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values }) => (\n                                <OrganizationAppointmentForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                />\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"change\"\n                                      resource=\"organizationappointment\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='appointments'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationAppointmentEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_APPOINTMENT_CATEGORIES_QUERY = gql`\n  query OrganizationAppointmentCategories($after: String, $before: String, $archived: Boolean) {\n    organizationAppointmentCategories(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id,\n          archived,\n          displayPublic,\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_APPOINTMENT_CATEGORY_QUERY = gql`\n  query OrganizationAppointmentCategory($id: ID!) {\n    organizationAppointmentCategory(id:$id) {\n      id\n      name\n      displayPublic\n      archived\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\nimport { GET_APPOINTMENT_CATEGORIES_QUERY } from \"./queries\"\n\nconst ARCHIVE_APPOINTMENT_CATEGORY = gql`\n  mutation ArchiveOrganizationAppointmentCategory($input: ArchiveOrganizationAppointmentCategoryInput!) {\n    archiveOrganizationAppointmentCategory(input: $input) {\n      organizationAppointmentCategory {\n        id\n        archived\n      }\n    }\n  }\n`\n\nconst OrganizationAppointmentCategories = ({ t, history, archived=false }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t('organization.title')} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n            <Query query={GET_APPOINTMENT_CATEGORIES_QUERY} variables={{ archived }}>\n             {({ loading, error, data: {organizationAppointmentCategories: appointment_categories}, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('organization.appointment_categories.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('organization.appointment_categories.title')}>\n                    <p>{t('organization.appointment_categories.error_loading')}</p>\n                  </ContentCard>\n                )\n                const headerOptions = <Card.Options>\n                  <Button color={(!archived) ? 'primary': 'secondary'}  \n                          size=\"sm\"\n                          onClick={() => {archived=false; refetch({archived});}}>\n                    {t('general.current')}\n                  </Button>\n                  <Button color={(archived) ? 'primary': 'secondary'} \n                          size=\"sm\" \n                          className=\"ml-2\" \n                          onClick={() => {archived=true; refetch({archived});}}>\n                    {t('general.archive')}\n                  </Button>\n                </Card.Options>\n                \n                // Empty list\n                if (!appointment_categories.edges.length) { return (\n                  <ContentCard cardTitle={t('organization.appointment_categories.title')}\n                               headerContent={headerOptions}>\n                    <p>\n                    {(!archived) ? t('organization.appointment_categories.empty_list') : t(\"organization.appointment_categories.empty_archive\")}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('organization.appointment_categories.title')}\n                               headerContent={headerOptions}\n                               pageInfo={appointment_categories.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: appointment_categories.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.organizationAppointmentCategories.edges\n                                    const pageInfo = fetchMoreResult.organizationAppointmentCategories.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new appointment_categories at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          organizationAppointmentCategories: {\n                                            __typename: previousResult.organizationAppointmentCategories.__typename,\n                                            edges: [ ...previousResult.organizationAppointmentCategories.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} >\n                    <Table>\n                          <Table.Header>\n                            <Table.Row key={v4()}>\n                              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                              {appointment_categories.edges.map(({ node }) => (\n                                <Table.Row key={v4()}>\n                                  <Table.Col key={v4()}>\n                                    {node.name}\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    {(node.displayPublic) ? \n                                      <Badge color=\"success\">{t('general.yes')}</Badge>: \n                                      <Badge color=\"danger\">{t('general.no')}</Badge>}\n                                  </Table.Col>\n                                  <Table.Col className=\"text-right\" key={v4()}>\n                                    {(node.archived) ? \n                                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                      <div>\n                                        <Button className='btn-sm' \n                                                onClick={() => history.push(\"/organization/appointment_categories/edit/\" + node.id)}\n                                                color=\"secondary\">\n                                          {t('general.edit')}\n                                        </Button>\n                                        <Button className='btn-sm' \n                                                onClick={() => history.push(\"/organization/appointment_categories/\" + node.id + \"/appointments/\")}\n                                                color=\"secondary\">\n                                          {t('organization.appointments.title')}\n                                        </Button>\n                                      </div>\n                                    }\n                                  </Table.Col>\n                                  <Mutation mutation={ARCHIVE_APPOINTMENT_CATEGORY} key={v4()}>\n                                    {(archiveLocation, { data }) => (\n                                      <Table.Col className=\"text-right\" key={v4()}>\n                                        <button className=\"icon btn btn-link btn-sm\" \n                                           title={t('general.archive')} \n                                           href=\"\"\n                                           onClick={() => {\n                                             console.log(\"clicked archived\")\n                                             let id = node.id\n                                             archiveLocation({ variables: {\n                                               input: {\n                                                id,\n                                                archived: !archived\n                                               }\n                                        }, refetchQueries: [\n                                            {query: GET_APPOINTMENT_CATEGORIES_QUERY, variables: {\"archived\": archived }}\n                                        ]}).then(({ data }) => {\n                                          console.log('got data', data);\n                                          toast.success(\n                                            (archived) ? t('general.unarchived'): t('general.archived'), {\n                                              position: toast.POSITION.BOTTOM_RIGHT\n                                            })\n                                        }).catch((error) => {\n                                          toast.error((t('general.toast_server_error')) +  error, {\n                                              position: toast.POSITION.BOTTOM_RIGHT\n                                            })\n                                          console.log('there was an error sending the query', error);\n                                        })\n                                        }}>\n                                          <Icon prefix=\"fa\" name=\"inbox\" />\n                                        </button>\n                                      </Table.Col>\n                                    )}\n                                  </Mutation>\n                                </Table.Row>\n                              ))}\n                          </Table.Body>\n                        </Table>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointmentcategory\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/organization/appointment_categories/add\")}>\n                <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.appointment_categories.add')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointments'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentCategories))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const APPOINTMENT_CATEGORY_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n    Button,\n    Card,\n    Form\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nconst OrganizationAppointmentCategoryForm = ({ t, history, isSubmitting, values, errors, return_url }) => (\n  <FoForm>\n    <Card.Body>\n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n            <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"displayPublic\" \n              checked={values.displayPublic} />\n            <span className=\"custom-switch-indicator\" ></span>\n            <span className=\"custom-switch-description\">{t('organization.appointment_category.public')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n        </Form.Group>    \n\n        <Form.Group label={t('general.name')}>\n          <Field type=\"text\" \n                  name=\"name\" \n                  className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={return_url}>\n          <Button color=\"link\" type=\"button\">\n              {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationAppointmentCategoryForm))","// @flow\n\nimport React from 'react'\nimport { Mutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_APPOINTMENT_CATEGORIES_QUERY } from './queries'\nimport { APPOINTMENT_CATEGORY_SCHEMA } from './yupSchema'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationAppointmentCategoryForm from \"./OrganizationAppointmentCategoryForm\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nconst ADD_ORGANIZATION_APPOINTMENT_CATEGORY = gql`\n  mutation CreateOrganizationAppointmentCategory($input: CreateOrganizationAppointmentCategoryInput!) {\n    createOrganizationAppointmentCategory(input: $input) {\n      organizationAppointmentCategory {\n        id\n        archived\n        displayPublic\n        name\n      }\n    }\n  }\n`\n\nconst return_url = \"/organization/appointment_categories\"\n\nconst OrganizationAppointmentCategoryAdd = ({ t, history }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t('organization.title')} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n          <Card>\n            <Card.Header>\n              <Card.Title>{t('organization.appointment_categories.title_add')}</Card.Title>\n            </Card.Header>\n            <Mutation mutation={ADD_ORGANIZATION_APPOINTMENT_CATEGORY} onCompleted={() => history.push(return_url)}> \n                {(addAppointmentCategory, { data }) => (\n                    <Formik\n                        initialValues={{ name: '', displayPublic: true }}\n                        validationSchema={APPOINTMENT_CATEGORY_SCHEMA}\n                        onSubmit={(values, { setSubmitting }) => {\n                            addAppointmentCategory({ variables: {\n                              input: {\n                                name: values.name, \n                                displayPublic: values.displayPublic\n                              }\n                            }, refetchQueries: [\n                                {query: GET_APPOINTMENT_CATEGORIES_QUERY, variables: {\"archived\": false }}\n                            ]})\n                            .then(({ data }) => {\n                                console.log('got data', data);\n                                toast.success((t('organization.appointment_categories.toast_add_success')), {\n                                    position: toast.POSITION.BOTTOM_RIGHT\n                                  })\n                              }).catch((error) => {\n                                toast.error((t('general.toast_server_error')) +  error, {\n                                    position: toast.POSITION.BOTTOM_RIGHT\n                                  })\n                                console.log('there was an error sending the query', error)\n                                setSubmitting(false)\n                              })\n                        }}\n                        >\n                        {({ isSubmitting, errors, values }) => (\n                          <OrganizationAppointmentCategoryForm\n                            isSubmitting={isSubmitting}\n                            errors={errors}\n                            values={values}\n                            return_url={return_url}\n                          />\n                        )}\n                    </Formik>\n                )}\n                </Mutation>\n          </Card>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointmentcategory\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(return_url)}>\n                <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointment_categories'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentCategoryAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APPOINTMENT_CATEGORIES_QUERY, GET_APPOINTMENT_CATEGORY_QUERY } from './queries'\nimport { APPOINTMENT_CATEGORY_SCHEMA } from './yupSchema'\n\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\nimport OrganizationAppointmentCategoryForm from \"./OrganizationAppointmentCategoryForm\"\n\n\nconst UPDATE_APPOINTMENT_CATEGORY = gql`\n  mutation UpdateOrganizationAppointmentCategory($input: UpdateOrganizationAppointmentCategoryInput!) {\n    updateOrganizationAppointmentCategory(input: $input) {\n      organizationAppointmentCategory {\n        id\n        name\n        displayPublic\n      }\n    }\n  }\n`\n\n\nclass OrganizationAppointmentCategoryEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization location edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const return_url = \"/organization/appointment_categories\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t('organization.title')} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.appointment_categories.title_edit')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_APPOINTMENT_CATEGORY_QUERY} variables={{ id }} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    const initialData = data.organizationAppointmentCategory;\n                    console.log('query data')\n                    console.log(data)\n\n                    return (\n                      \n                      <Mutation mutation={UPDATE_APPOINTMENT_CATEGORY} onCompleted={() => history.push(return_url)}> \n                      {(updateAppointmentCategory, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                name: initialData.name, \n                                displayPublic: initialData.displayPublic \n                              }}\n                              validationSchema={APPOINTMENT_CATEGORY_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  updateAppointmentCategory({ variables: {\n                                    input: {\n                                      id: match.params.id,\n                                      name: values.name,\n                                      displayPublic: values.displayPublic \n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_APPOINTMENT_CATEGORIES_QUERY, variables: {\"archived\": false }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.appointment_categories.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values }) => (\n                                  <OrganizationAppointmentCategoryForm\n                                    isSubmitting={isSubmitting}\n                                    errors={errors}\n                                    values={values}\n                                    return_url={return_url}\n                                  />\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"change\"\n                                      resource=\"organizationappointmentcategory\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='appointment_categories'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationAppointmentCategoryEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_APPOINTMENT_PRICES_QUERY = gql`\n  query OrganizationAppointmentPrices($after: String, $before: String, $organizationAppointment: ID!) {\n    organizationAppointmentPrices(first: 15, before: $before, after: $after, organizationAppointment: $organizationAppointment) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          price\n          priceDisplay\n          financeTaxRate {\n            id\n            name\n          }\n        }\n      }\n    }\n    organizationAppointment(id: $organizationAppointment) {\n      id\n      name\n    }\n  }\n`\n\nexport const GET_APPOINTMENT_PRICE_QUERY = gql`\n  query OrganizationAppointment($id: ID!, $after: String, $before: String) {\n    organizationAppointmentPrice(id:$id) {\n      id\n      price\n      account {\n        id\n        fullName\n      }\n      financeTaxRate {\n        id\n        name\n      }\n    }\n    financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    accountTeacherProfiles(first: 100, before: $before, after: $after, appointments: true, account_IsActive: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query AppointmentInputValues($after: String, $before: String, $archived: Boolean) {\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    accountTeacherProfiles(first: 100, before: $before, after: $after, appointments: true, account_IsActive: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport CardHeaderSeparator from \"../../../../general/CardHeaderSeparator\"\nimport OrganizationMenu from \"../../../OrganizationMenu\"\n\nimport { GET_APPOINTMENT_PRICES_QUERY } from \"./queries\"\n\nconst DELETE_APPOINTMENT_PRICE = gql`\n  mutation DeleteOrganizationAppointmentPrice($input: DeleteOrganizationAppointmentPriceInput!) {\n    deleteOrganizationAppointmentPrice(input: $input) {\n      ok\n    }\n  }\n`\n\nconst OrganizationAppointmentPrices = ({ t, history, match }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"organization.title\")}>\n          <div className=\"page-options d-flex\">\n            <Link to={\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments\"}\n                  className='btn btn-outline-secondary btn-sm'>\n                <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('general.appointment')}\n            </Link>\n          </div>\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            <Query query={GET_APPOINTMENT_PRICES_QUERY} variables={{ organizationAppointment: match.params.appointment_id }}>\n             {({ loading, error, data, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('organization.appointment_prices.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('organization.appointment_prices.title')}>\n                    <p>{t('organization.appointment_prices.error_loading')}</p>\n                  </ContentCard>\n                )\n\n                const prices = data.organizationAppointmentPrices\n\n                // Empty list\n                if (!prices.edges.length) { return (\n                  <ContentCard cardTitle={t('organization.appointment_prices.title')}>\n                    <p>\n                      {t('organization.appointment_prices.empty_list')}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('organization.appointment_prices.title')}\n                               pageInfo={prices.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: prices.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.organizationAppointmentPrices.edges\n                                    const pageInfo = fetchMoreResult.organizationAppointmentPrices.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new locations at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          organizationAppointmentPrices: {\n                                            __typename: previousResult.organizationAppointmentPrices.__typename,\n                                            edges: [ ...previousResult.organizationAppointmentPrices.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} >\n                    <div>\n                      <Alert type=\"primary\">\n                        <strong>{t('general.prices_for')} {t('general.appointment')}</strong> {data.organizationAppointment.name}\n                      </Alert>\n\n                      <Table>\n                        <Table.Header>\n                          <Table.Row key={v4()}>\n                            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                            <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n                          </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            {prices.edges.map(({ node }) => (\n                              <Table.Row key={v4()}>\n                                {console.log(node)}\n                                <Table.Col key={v4()}>\n                                  {node.account.fullName}\n                                </Table.Col>\n                                <Table.Col key={v4()}>\n                                  {node.priceDisplay}\n                                </Table.Col>\n                                <Table.Col className=\"text-right\" key={v4()}>\n                                  {(node.archived) ? \n                                    <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                    <span>\n                                      <Button className='btn-sm' \n                                              onClick={() => history.push(\"/organization/appointment_categories/\" + \n                                                match.params.category_id + \"/appointments/prices/\" + match.params.appointment_id + \"/edit/\" + node.id)}\n                                              color=\"secondary\">\n                                        {t('general.edit')}\n                                      </Button>\n                                    </span>\n                                  }\n                                </Table.Col>\n                                <Mutation mutation={DELETE_APPOINTMENT_PRICE} key={v4()}>\n                                  {(deleteAppointmentPrice, { data }) => (\n                                    <Table.Col className=\"text-right\" key={v4()}>\n                                      <button className=\"icon btn btn-link btn-sm\" \n                                        title={t('general.delete')} \n                                        href=\"\"\n                                        onClick={() => {\n                                          confirm_delete({\n                                            t: t,\n                                            msgConfirm: t(\"organization.appointment_prices.delete_confirm_msg\"),\n                                            msgDescription: <p>{node.account.fullName} {node.priceDisplay}</p>,\n                                            msgSuccess: t('organization.appointment_prices.deleted'),\n                                            deleteFunction: deleteAppointmentPrice,\n                                            functionVariables: { variables: {\n                                              input: {\n                                                id: node.id\n                                              }\n                                            }, refetchQueries: [\n                                              {query: GET_APPOINTMENT_PRICES_QUERY, variables: { organizationAppointment: match.params.appointment_id }} \n                                            ]}\n                                          })\n                                      }}>\n                                        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                                      </button>\n                                    </Table.Col>\n                                  )}\n                                </Mutation>\n                              </Table.Row>\n                            ))}\n                        </Table.Body>\n                      </Table>\n                      </div>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointment\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/prices/\" + match.params.appointment_id + \"/add\")}>\n                <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.appointment_prices.add')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointments'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentPrices))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const APPOINTMENT_PRICE_SCHEMA = Yup.object().shape({\n    account: Yup.string()\n      .required(t('yup.field_required')),\n    price: Yup.number()\n      .required(t('yup.field_required')),\n    financeTaxRate: Yup.string()\n      .required(t('yup.field_required'))\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\n\nconst OrganizationAppointmentForm = ({ t, history, match, inputData, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n         <Form.Group label={t('general.teacher')}>\n            <Field component=\"select\" \n                    name=\"account\" \n                    className={(errors.account) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n              {inputData.accountTeacherProfiles.edges.map(({ node }) =>\n                <option value={node.account.id} key={v4()}>{node.account.fullName}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"account\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.price')}>\n              <Field type=\"text\" \n                    name=\"price\" \n                    className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n            <Form.Group label={t('general.taxrate')}>\n              <Field component=\"select\" \n                      name=\"financeTaxRate\" \n                      className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in appointment price form:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.financeTaxRates.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={return_url}>\n            <Button color=\"link\" type=\"button\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentForm))","// @flow\n\nimport React from 'react'\nimport { Mutation, Query } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_APPOINTMENT_PRICES_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { APPOINTMENT_PRICE_SCHEMA } from './yupSchema'\nimport OrganizationAppointmentPriceForm from './OrganizationAppointmentPriceForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../../OrganizationMenu\"\n\n\nconst ADD_APPOINTMENT_PRICE = gql`\n  mutation CreateOrganizationAppointmentPrice($input: CreateOrganizationAppointmentPriceInput!) {\n    createOrganizationAppointmentPrice(input: $input) {\n      organizationAppointmentPrice {\n        id\n        account {\n          id\n          fullName\n        }\n        organizationAppointment {\n          id\n          name\n        }\n        price\n        financeTaxRate {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst return_url = \"/organization/appointment_categories/appointments/\"\n\nconst OrganizationAppointmentPriceAdd = ({ t, history, match }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t('organization.title')} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n          <Card>\n            <Card.Header>\n              <Card.Title>{t('organization.appointment_prices.title_add')}</Card.Title>\n            </Card.Header>\n            <Query query={GET_INPUT_VALUES_QUERY} variables = {{archived: false}} >\n              {({ loading, error, data, refetch }) => {\n                // Loading\n                if (loading) return <p>{t('general.loading_with_dots')}</p>\n                // Error\n                if (error) {\n                  console.log(error)\n                  return <p>{t('general.error_sad_smiley')}</p>\n                }\n                \n                console.log('query data')\n                console.log(data)\n                const inputData = data\n\n                return (\n                  <Mutation mutation={ADD_APPOINTMENT_PRICE} onCompleted={\n                    () => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/prices/\" + match.params.appointment_id)}> \n                      {(addAppointment, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                organizationAppointment: '', \n                                account: '',\n                                price: '',\n                                financeTaxRate: \"\",\n                              }}\n                              validationSchema={APPOINTMENT_PRICE_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  addAppointment({ variables: {\n                                    input: {\n                                      organizationAppointment: match.params.appointment_id,\n                                      account: values.account,\n                                      price: values.price, \n                                      financeTaxRate: values.financeTaxRate,\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_APPOINTMENT_PRICES_QUERY,\n                                      variables: {\"organizationAppointment\": match.params.appointment_id }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data);\n                                      toast.success((t('organization.appointment_prices.toast_add_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values }) => (\n                                <OrganizationAppointmentPriceForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/prices/\" + match.params.appointment_id}\n                                />\n                              )}\n                          </Formik>\n                      )}\n                    </Mutation>\n                )}}\n              </Query>                    \n          </Card>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointmentprice\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/prices/\" + match.params.appointment_id)}>\n                <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointments'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentPriceAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APPOINTMENT_PRICES_QUERY, GET_APPOINTMENT_PRICE_QUERY } from './queries'\nimport { APPOINTMENT_PRICE_SCHEMA } from './yupSchema'\nimport OrganizationAppointmentPriceForm from './OrganizationAppointmentPriceForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../../OrganizationMenu\"\n\n\nconst UPDATE_APPOINTMENT_PRICE = gql`\n  mutation UpdateOrganizationAppointmentPrice($input: UpdateOrganizationAppointmentPriceInput!) {\n    updateOrganizationAppointmentPrice(input: $input) {\n      organizationAppointmentPrice {\n        id\n        account {\n          id\n          fullName\n        }\n        organizationAppointment {\n          id\n          name\n        }\n        price\n        financeTaxRate {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nclass OrganizationAppointmentPriceEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization appointment edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const appointment_id = match.params.appointment_id\n    const category_id = match.params.category_id\n    const return_url = \"/organization/appointment_categories/\" + category_id + \"/appointments/prices/\" + appointment_id\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t('organization.title')} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.appointment_prices.title_edit')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_APPOINTMENT_PRICE_QUERY} variables={{ id: id }} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    const inputData = data\n                    const initialData = data.organizationAppointmentPrice\n                    console.log('query data')\n                    console.log(data)\n\n                    let initialAccount = \"\"\n                    if (initialData.account) {\n                      initialAccount = initialData.account.id\n                    }\n\n                    let initialFinanceTaxRate = \"\"\n                    if (initialData.financeTaxRate) {\n                      initialFinanceTaxRate =  initialData.financeTaxRate.id\n                    } \n\n                    return (\n                      \n                      <Mutation mutation={UPDATE_APPOINTMENT_PRICE} onCompleted={() => history.push(return_url)}> \n                      {(updateLocation, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                account: initialAccount,\n                                price: initialData.price, \n                                financeTaxRate: initialFinanceTaxRate,\n                              }}\n                              validationSchema={APPOINTMENT_PRICE_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  updateLocation({ variables: {\n                                    input: {\n                                      id: match.params.id,\n                                      account: values.account,\n                                      price: values.price,\n                                      financeTaxRate: values.financeTaxRate,\n                                    }\n                                  }, refetchQueries: [\n                                    {query: GET_APPOINTMENT_PRICES_QUERY,\n                                      variables: {organizationAppointment: match.params.appointment_id }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.appointment_prices.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values }) => (\n                                <OrganizationAppointmentPriceForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                />\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"change\"\n                                      resource=\"organizationappointmentprice\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='appointments'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationAppointmentPriceEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationClasspassesBase({t, children, showBack=false}) {\n  const activeLink = \"classpasses\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/classpasses/groups\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"folder\" /> {t('general.groups')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/classpasses/\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-let\" /> {t('general.back')}\n                  </Button>\n                </Link>            \n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationclasspass\">\n                  <Link to=\"/organization/classpasses/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.classpasses.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>              \n              }\n\n              <OrganizationMenu activeLink={activeLink}/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  ) \n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_CLASSPASSES_QUERY = gql`\n  query OrganizationClasspasses($after: String, $before: String, $archived: Boolean) {\n    organizationClasspasses(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          displayShop\n          trialPass\n          name\n          description\n          price\n          priceDisplay\n          financeTaxRate {\n            id\n            name\n          }\n          validity\n          validityUnit\n          validityUnitDisplay\n          classes\n          unlimited\n          organizationMembership {\n            id\n            name\n          }\n          quickStatsAmount\n          financeGlaccount {\n            id \n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_CLASSPASS_QUERY = gql`\n  query OrganizationClasspass($id: ID!, $after: String, $before: String) {\n    organizationClasspass(id:$id) {\n      id\n      archived\n      displayPublic\n      displayShop\n      trialPass\n      name\n      description\n      price\n      priceDisplay\n      financeTaxRate {\n        id\n        name\n      }\n      validity\n      validityUnit\n      validityUnitDisplay\n      classes\n      unlimited\n      organizationMembership {\n        id\n        name\n      }\n      quickStatsAmount\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    organizationMemberships(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financeTaxRates(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InputValues($after: String, $before: String) {\n    organizationMemberships(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financeTaxRates(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const CREATE_CLASSPASS = gql`\nmutation CreateClasspass($input: CreateOrganizationClasspassInput!) {\n  createOrganizationClasspass(input: $input) {\n    organizationClasspass {\n      id\n      displayPublic\n      displayShop\n      name\n      description\n      price\n      financeTaxRate {\n        id\n        name\n      }\n      validity\n      validityUnit\n      classes\n      unlimited\n      organizationMembership {\n        id\n        name\n      }\n      quickStatsAmount\n      financeGlaccount {\n        id\n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n  }\n}\n`\n\nexport const UPDATE_CLASSPASS = gql`\n  mutation UpdateOrganizationClasspass($input: UpdateOrganizationClasspassInput!) {\n    updateOrganizationClasspass(input: $input) {\n      organizationClasspass {\n        id\n        displayPublic\n        displayShop\n        name\n        description\n        price\n        financeTaxRate {\n          id\n          name\n        }\n        validity\n        validityUnit\n        classes\n        unlimited\n        organizationMembership {\n          id\n          name\n        }\n        quickStatsAmount\n        financeGlaccount {\n          id\n          name\n        }\n        financeCostcenter {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const ARCHIVE_CLASSPASS = gql`\nmutation ArchiveOrganizationClasspass($input: ArchiveOrganizationClasspassInput!) {\n  archiveOrganizationClasspass(input: $input) {\n    organizationClasspass {\n      id\n      archived\n    }\n  }\n}\n`\n","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesBase from './OrganizationClasspassesBase'\n\nimport { GET_CLASSPASSES_QUERY, ARCHIVE_CLASSPASS } from \"./queries\"\n\n\nfunction OrganizationClasspasses({t, history}) {\n  const cardTitle = t('organization.classpasses.title')\n  let [archived, setArchived] = useState(false)\n\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_CLASSPASSES_QUERY)\n  const [ archiveClasspass ] = useMutation(ARCHIVE_CLASSPASS)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: archived});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: archived});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <OrganizationClasspassesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n  if (error) return (\n    <OrganizationClasspassesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.classpasses.error_loading')}</p>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n  let classpasses = data.organizationClasspasses\n\n  // Empty list\n  if (!classpasses.edges.length) { return (\n    <OrganizationClasspassesBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('organization.classpasses.empty_list') : t(\"organization.classpasses.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )}\n\n  return (\n    <OrganizationClasspassesBase>\n      <ContentCard \n        cardTitle={cardTitle}\n        headerContent={headerOptions}\n        pageInfo={classpasses.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: classpasses.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.organizationClasspasses.edges\n            const pageInfo = fetchMoreResult.organizationClasspasses.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new memberships at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  organizationClasspasses: {\n                    __typename: previousResult.organizationClasspasses.__typename,\n                    edges: [ ...previousResult.organizationClasspasses.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n              <Table.ColHeader>{t('organization.classpasses.trial_pass')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.classes')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.validity')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {classpasses.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <BadgeBoolean value={node.displayPublic} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <BadgeBoolean value={node.displayShop} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <BadgeBoolean value={node.trialPass} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.unlimited) ? t('general.unlimited') : node.classes }\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.priceDisplay} <br />\n                    {(node.financeTaxRate) ? \n                      <span className=\"text-muted\">{node.financeTaxRate.name}</span>\n                      : \"\"\n                    }\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.validity} <br />\n                    <span className=\"text-muted\">\n                      {node.validityUnitDisplay}\n                    </span>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/organization/classpasses/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveClasspass({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_CLASSPASSES_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                      </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n}\n\n\n// const OrganizationClasspasses = ({ t, history, archived=false }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t(\"organization.title\")}>\n//          <div className=\"page-options d-flex\">\n//             <Link to=\"/organization/classpasses/groups\" \n//                   className='btn btn-outline-secondary btn-sm'>\n//                 <Icon prefix=\"fe\" name=\"folder\" /> {t('general.groups')}\n//             </Link>\n//           </div>\n//         </Page.Header>\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//             <Query query={GET_CLASSPASSES_QUERY} variables={{ archived }}>\n//              {({ loading, error, data: {organizationClasspasses: classpasses}, refetch, fetchMore }) => {\n//                 // Loading\n//                 if (loading) return (\n//                   <ContentCard cardTitle={t('organization.classpasses.title')}>\n//                     <Dimmer active={true}\n//                             loader={true}>\n//                     </Dimmer>\n//                   </ContentCard>\n//                 )\n//                 // Error\n//                 if (error) return (\n//                   <ContentCard cardTitle={t('organization.classpasses.title')}>\n//                     <p>{t('organization.classpasses.error_loading')}</p>\n//                   </ContentCard>\n//                 )\n//                 const headerOptions = <Card.Options>\n//                   {/* <Link to=\"/organization/classpasses/groups\">\n//                     <Button color='secondary'  \n//                             size=\"sm\"\n//                             icon=\"folder\"\n//                             // onClick={() => {archived=false; refetch({archived});}}>\n//                             >\n//                       {t('general.groups')}\n//                     </Button>\n//                   </Link>\n//                   <CardHeaderSeparator /> */}\n//                   <Button color={(!archived) ? 'primary': 'secondary'}  \n//                           size=\"sm\"\n//                           onClick={() => {archived=false; refetch({archived});}}>\n//                     {t('general.current')}\n//                   </Button>\n//                   <Button color={(archived) ? 'primary': 'secondary'} \n//                           size=\"sm\" \n//                           className=\"ml-2\" \n//                           onClick={() => {archived=true; refetch({archived});}}>\n//                     {t('general.archive')}\n//                   </Button>\n//                 </Card.Options>\n                \n//                 // Empty list\n//                 if (!classpasses.edges.length) { return (\n//                   <ContentCard cardTitle={t('organization.classpasses.title')}\n//                                headerContent={headerOptions}>\n//                     <p>\n//                     {(!archived) ? t('organization.classpasses.empty_list') : t(\"organization.classpasses.empty_archive\")}\n//                     </p>\n                   \n//                   </ContentCard>\n//                 )} else {   \n//                 // Life's good! :)\n//                 return (\n//                   <ContentCard cardTitle={t('organization.classpasses.title')}\n//                                headerContent={headerOptions}\n//                                pageInfo={classpasses.pageInfo}\n//                                onLoadMore={() => {\n//                                 fetchMore({\n//                                   variables: {\n//                                     after: classpasses.pageInfo.endCursor\n//                                   },\n//                                   updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                     const newEdges = fetchMoreResult.organizationClasspasses.edges\n//                                     const pageInfo = fetchMoreResult.organizationClasspasses.pageInfo\n\n//                                     return newEdges.length\n//                                       ? {\n//                                           // Put the new memberships at the end of the list and update `pageInfo`\n//                                           // so we have the new `endCursor` and `hasNextPage` values\n//                                           organizationMemberships: {\n//                                             __typename: previousResult.organizationClasspasses.__typename,\n//                                             edges: [ ...previousResult.organizationClasspasses.edges, ...newEdges ],\n//                                             pageInfo\n//                                           }\n//                                         }\n//                                       : previousResult\n//                                   }\n//                                 })\n//                               }} >\n//                     <Table>\n//                           <Table.Header>\n//                             <Table.Row key={v4()}>\n//                               <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('organization.classpasses.trial_pass')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('general.classes')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('general.validity')}</Table.ColHeader>\n//                             </Table.Row>\n//                           </Table.Header>\n//                           <Table.Body>\n//                               {classpasses.edges.map(({ node }) => (\n//                                 <Table.Row key={v4()}>\n//                                   <Table.Col key={v4()}>\n//                                     {node.name}\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     <BadgeBoolean value={node.displayPublic} />\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     <BadgeBoolean value={node.displayShop} />\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     <BadgeBoolean value={node.trialPass} />\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     {(node.unlimited) ? t('general.unlimited') : node.classes }\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     {node.priceDisplay} <br />\n//                                     {(node.financeTaxRate) ? \n//                                       <span className=\"text-muted\">{node.financeTaxRate.name}</span>\n//                                       : \"\"\n//                                     }\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     {node.validity} <br />\n//                                     <span className=\"text-muted\">\n//                                       {node.validityUnitDisplay}\n//                                     </span>\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     {(node.archived) ? \n//                                       <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/organization/classpasses/edit/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('general.edit')}\n//                                       </Button>\n//                                     }\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     <button className=\"icon btn btn-link btn-sm\" \n//                                         title={t('general.archive')} \n//                                         href=\"\"\n//                                         onClick={() => {\n//                                           console.log(\"clicked archived\")\n//                                           let id = node.id\n//                                           archiveClasspass({ variables: {\n//                                             input: {\n//                                             id,\n//                                             archived: !archived\n//                                             }\n//                                     }, refetchQueries: [\n//                                         {query: GET_CLASSPASSES_QUERY, variables: {\"archived\": archived }}\n//                                     ]}).then(({ data }) => {\n//                                       console.log('got data', data);\n//                                       toast.success(\n//                                         (archived) ? t('general.unarchived'): t('general.archived'), {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                     }).catch((error) => {\n//                                       toast.error((t('general.toast_server_error')) +  error, {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                       console.log('there was an error sending the query', error);\n//                                     })\n//                                     }}>\n//                                       <Icon prefix=\"fa\" name=\"inbox\" />\n//                                     </button>\n//                                       </Table.Col>\n//                                 </Table.Row>\n//                               ))}\n//                           </Table.Body>\n//                         </Table>\n//                   </ContentCard>\n//                 )}}\n//              }\n//             </Query>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"organizationclasspass\">\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(\"/organization/classpasses/add\")}>\n//                 <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.classpasses.add')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <OrganizationMenu activeLink='classpasses'/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// );\n\nexport default withTranslation()(withRouter(OrganizationClasspasses))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const CLASSPASS_SCHEMA = Yup.object().shape({\n  name: Yup.string()\n  .min(3, t('yup.min_len_3'))\n  .required(t('yup.field_required')),\n  price: Yup.number()\n    .required(t('yup.field_required')),\n  financeTaxRate: Yup.string()\n    .required(t('yup.field_required')),\n  validity: Yup.number()\n    .positive(t('yup.positive_number_required'))\n    .required(t('yup.field_required')),\n  validityUnit: Yup.string()\n    .required(t('yup.field_required')),\n  classes: Yup.number(),\n  quickStatsAmount: Yup.number()\n})\n\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\n\nimport {\n  Grid,\n  Button,\n  Card,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n\nclass OrganizationClasspassForm extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization classpass form props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const return_url = \"/organization/classpasses\"\n    const initialData = this.props.initialData\n    const isSubmitting = this.props.isSubmitting\n    const setFieldValue = this.props.setFieldValue\n    const setFieldTouched = this.props.setFieldTouched\n    const errors = this.props.errors\n    const values = this.props.values\n\n    return (\n        <FoForm>\n            <Card.Body> \n            <Form.Group>\n                <Form.Label className=\"custom-switch\">\n                    <Field \n                    className=\"custom-switch-input\"\n                    type=\"checkbox\" \n                    name=\"displayPublic\" \n                    checked={values.displayPublic} />\n                    <span className=\"custom-switch-indicator\" ></span>\n                    <span className=\"custom-switch-description\">{t('organization.classpass.public')}</span>\n                </Form.Label>\n                <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n            </Form.Group>      \n            <Form.Group>\n                <Form.Label className=\"custom-switch\">\n                    <Field \n                    className=\"custom-switch-input\"\n                    type=\"checkbox\" \n                    name=\"displayShop\" \n                    checked={values.displayShop} />\n                    <span className=\"custom-switch-indicator\" ></span>\n                    <span className=\"custom-switch-description\">{t('organization.classpass.shop')}</span>\n                </Form.Label>\n                <ErrorMessage name=\"displayShop\" component=\"div\" />   \n            </Form.Group> \n            <Grid.Row>\n              <Grid.Col>\n                <Form.Group>\n                  <Form.Label className=\"custom-switch\">\n                      <Field \n                      className=\"custom-switch-input\"\n                      type=\"checkbox\" \n                      name=\"trialPass\" \n                      checked={values.trialPass} />\n                      <span className=\"custom-switch-indicator\" ></span>\n                      <span className=\"custom-switch-description\">{t('organization.classpass.trial_pass')}</span>\n                  </Form.Label>\n                  <ErrorMessage name=\"displayShop\" component=\"div\" />   \n                </Form.Group>\n              </Grid.Col>\n            </Grid.Row>            \n            <Form.Group label={t('general.name')} >\n                <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n                <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n            <Form.Group label={t('general.description')}>\n                <Editor\n                  tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                  textareaName=\"description\"\n                  initialValue={values.description}\n                  init={tinymceBasicConf}\n                  onBlur={(e) => {\n                    setFieldTouched(\"description\", true)\n                    setFieldValue(\"description\", e.target.getContent())\n                  }}\n                />\n                <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n            <Grid.Row>\n              <Grid.Col>\n                <Form.Group label={t('general.price')}>\n                    <Field type=\"text\" \n                        name=\"price\" \n                        className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\" />\n                    <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n              <Grid.Col>\n                <Form.Group label={t('general.taxrate')}>\n                  <Field component=\"select\" \n                          name=\"financeTaxRate\" \n                          className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\">\n                  {console.log(\"query data in classpass add:\")}\n                  {console.log(initialData)}\n                  <option value=\"\" key={v4()}></option>\n                  {initialData.financeTaxRates.edges.map(({ node }) =>\n                      <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n                  )}\n                  </Field>\n                  <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Col>\n                <Form.Group label={t('general.validity')}>\n                  <Field type=\"text\" \n                      name=\"validity\" \n                      className={(errors.validity) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n                  <ErrorMessage name=\"validity\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n              <Grid.Col>\n                <Form.Group label={t('general.validity_unit')}>\n                  <Field component=\"select\" \n                          name=\"validityUnit\" \n                          className={(errors.validityUnit) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\">\n                  <option value=\"DAYS\" key={v4()}>{t('validity.days')}</option>\n                  <option value=\"WEEKS\" key={v4()}>{t('validity.weeks')}</option>\n                  <option value=\"MONTHS\" key={v4()}>{t('validity.months')}</option>\n                  </Field>\n                  <ErrorMessage name=\"validityUnit\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n            </Grid.Row>\n            <Form.Group>\n                <Form.Label className=\"custom-switch\">\n                    <Field \n                    className=\"custom-switch-input\"\n                    type=\"checkbox\" \n                    name=\"unlimited\" \n                    checked={values.unlimied} />\n                    <span className=\"custom-switch-indicator\" ></span>\n                    <span className=\"custom-switch-description\">{t('general.unlimited')}</span>\n                </Form.Label>\n                <ErrorMessage name=\"unlimited\" component=\"div\" />   \n            </Form.Group>  \n            { (values.unlimited) ? \"\" :\n            <Form.Group label={t('general.classes')}>\n                <Field type=\"text\" \n                        name=\"classes\" \n                        className={(errors.classes) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\" />\n                <ErrorMessage name=\"classes\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> } \n            {/* <Form.Group label={t('general.membership')}>\n                <Field component=\"select\" \n                        name=\"organizationMembership\" \n                        className={(errors.organizationMembership) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.membership_not_required\")}</option>\n                {initialData.organizationMemberships.edges.map(({ node }) =>\n                    <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                )}\n                </Field>\n                <ErrorMessage name=\"organizationMembership\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>  */}\n            { (values.unlimited) ? \n                    <Form.Group label={t('general.quickStatsAmount')}>\n                    <Field type=\"text\" \n                            name=\"quickStatsAmount\" \n                            className={(errors.quickStatsAmount) ? \"form-control is-invalid\" : \"form-control\"} \n                            autoComplete=\"off\" />\n                    <ErrorMessage name=\"quickStatsAmount\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                    : \"\"\n            }\n            <Grid.Row>\n              <Grid.Col>\n                <Form.Group label={t('general.glaccount')}>\n                  <Field component=\"select\" \n                          name=\"financeGlaccount\" \n                          className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\">\n                  <option value=\"\" key={v4()}></option>\n                  {initialData.financeGlaccounts.edges.map(({ node }) =>\n                      <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                  )}\n                  </Field>\n                  <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n              <Grid.Col>\n                <Form.Group label={t('general.costcenter')}>\n                  <Field component=\"select\" \n                          name=\"financeCostcenter\" \n                          className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\">\n                  <option value=\"\" key={v4()}></option>\n                  {initialData.financeCostcenters.edges.map(({ node }) =>\n                      <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                  )}\n                  </Field>\n                  <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n            </Grid.Row>\n            </Card.Body>\n            <Card.Footer>\n                <Button \n                className=\"pull-right\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                >\n                {t('general.submit')}\n                </Button>\n                <Button\n                type=\"button\" \n                color=\"link\" \n                onClick={() => history.push(return_url)}\n                >\n                    {t('general.cancel')}\n                </Button>\n            </Card.Footer>\n        </FoForm>\n    ) \n  }\n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassForm))","import React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_CLASSPASSES_QUERY, GET_INPUT_VALUES_QUERY, CREATE_CLASSPASS } from './queries'\nimport { CLASSPASS_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Dimmer\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesBase from './OrganizationClasspassesBase';\nimport OrganizationClasspassForm from \"./OrganizationClasspassForm\"\n\n\nfunction OrganizationClasspassAdd({t, match, history}) {\n  const cardTitle = t('organization.classpasses.title_add')\n  const returnUrl = \"/organization/classpasses\"\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES_QUERY)\n  const [createClasspass] = useMutation(CREATE_CLASSPASS)\n\n  if (loading) return (\n    <OrganizationClasspassesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n  if (error) return (\n    <OrganizationClasspassesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n                    \n  console.log('query data')\n  console.log(data)\n  const initialData = data\n\n  return (\n    <OrganizationClasspassesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            displayPublic: true,\n            displayShop: true,\n            trialPass: false,\n            name: \"\",\n            description: \"\",\n            price: 0,\n            financeTaxRate: \"\",\n            validity: 1,\n            validityUnit: \"MONTHS\",\n            classes: 1,\n            unlimited: false,\n            organizationMembership: \"\",\n            quickStatsAmount: 0,\n            financeGlaccount: \"\",\n            financeCostcenter: \"\"\n          }}\n          validationSchema={CLASSPASS_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              createClasspass({ variables: {\n                input: {\n                  displayPublic: values.displayPublic,\n                  displayShop: values.displayShop,\n                  trialPass: values.trialPass,\n                  name: values.name,\n                  description: values.description,\n                  price: values.price,\n                  financeTaxRate: values.financeTaxRate,\n                  validity: values.validity,\n                  validityUnit: values.validityUnit,\n                  classes: values.classes,\n                  unlimited: values.unlimited,\n                  organizationMembership: values.organizationMembership,\n                  quickStatsAmount: values.quickStatsAmount,\n                  financeGlaccount: values.financeGlaccount,\n                  financeCostcenter: values.financeCostcenter\n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSPASSES_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('organization.classpasses.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <OrganizationClasspassForm \n              initialData = {initialData}\n              isSubmitting = {isSubmitting}\n              setFieldValue = {setFieldValue}\n              setFieldTouched = {setFieldTouched}\n              errors = {errors}\n              values = {values}\n            />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationClasspassesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_CLASSPASSES_QUERY, GET_CLASSPASS_QUERY, UPDATE_CLASSPASS } from './queries'\nimport { CLASSPASS_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Dimmer\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesBase from './OrganizationClasspassesBase'\nimport OrganizationClasspassForm from \"./OrganizationClasspassForm\"\n\n\nfunction OrganizationClasspassEdit({ t, match, history}) {\n  const id = match.params.id\n  const returnUrl = \"/organization/classpasses\"\n  const cardTitle = t('organization.classpasses.title_edit')\n  const { loading, error, data } = useQuery(GET_CLASSPASS_QUERY, {\n    variables: { id: id }\n  })\n  const [updateClasspass] = useMutation(UPDATE_CLASSPASS)\n\n  if (loading) return (\n    <OrganizationClasspassesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n  if (error) return (\n    <OrganizationClasspassesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const initialData = data\n\n  let initialMembership = \"\"\n  if (initialData.organizationClasspass.organizationMembership) {\n    initialMembership = initialData.organizationClasspass.organizationMembership.id\n  }\n\n  let initialGlaccount = \"\"\n  if (initialData.organizationClasspass.financeGlaccount) {\n    initialGlaccount =  initialData.organizationClasspass.financeGlaccount.id\n  } \n\n  let initialCostcenter = \"\"\n  if (initialData.organizationClasspass.financeCostcenter) {\n    initialCostcenter =  initialData.organizationClasspass.financeCostcenter.id\n  } \n\n  return (\n    <OrganizationClasspassesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            displayPublic: initialData.organizationClasspass.displayPublic,\n            displayShop: initialData.organizationClasspass.displayShop,\n            trialPass: initialData.organizationClasspass.trialPass,\n            name: initialData.organizationClasspass.name,\n            description: initialData.organizationClasspass.description,\n            price: initialData.organizationClasspass.price,\n            financeTaxRate: initialData.organizationClasspass.financeTaxRate.id,\n            validity: initialData.organizationClasspass.validity,\n            validityUnit: initialData.organizationClasspass.validityUnit,\n            classes: initialData.organizationClasspass.classes,\n            unlimited: initialData.organizationClasspass.unlimited,\n            organizationMembership: initialMembership,\n            quickStatsAmount: initialData.organizationClasspass.quickStatsAmount,\n            financeGlaccount:  initialGlaccount,\n            financeCostcenter: initialCostcenter\n          }}\n          validationSchema={CLASSPASS_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateClasspass({ variables: {\n                input: {\n                  id: match.params.id,\n                  displayPublic: values.displayPublic,\n                  displayShop: values.displayShop,\n                  trialPass: values.trialPass,\n                  name: values.name,\n                  description: values.description,\n                  price: values.price,\n                  financeTaxRate: values.financeTaxRate,\n                  validity: values.validity,\n                  validityUnit: values.validityUnit,\n                  classes: values.classes,\n                  unlimited: values.unlimited,\n                  organizationMembership: values.organizationMembership,\n                  quickStatsAmount: values.quickStatsAmount,\n                  financeGlaccount: values.financeGlaccount,\n                  financeCostcenter: values.financeCostcenter\n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSPASSES_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('organization.classpasses.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <OrganizationClasspassForm \n              initialData = {initialData}\n              isSubmitting = {isSubmitting}\n              setFieldValue = {setFieldValue}\n              setFieldTouched = {setFieldTouched}\n              errors = {errors}\n              values = {values}\n            />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationClasspassesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassEdit))","// @flow\n\nimport React, { Children } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationClasspassesGroupsBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/classpasses\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.classpasses.title')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to={\"/organization/classpasses/groups\"}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t(\"general.back\")}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationclasspassgroup\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(\"/organization/classpasses/groups/add\")}>\n                    <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.classpass_groups.add')}\n                  </Button>\n                </HasPermissionWrapper>              \n              }\n              <OrganizationMenu activeLink=''/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasspassesGroupsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_CLASSPASS_GROUPS_QUERY = gql`\n  query OrganizationClasspassGroups($after: String, $before: String) {\n    organizationClasspassGroups(first: 100, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          description\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_CLASSPASS_GROUP_QUERY = gql`\n  query OrganizationClasspassGroup($id: ID!) {\n    organizationClasspassGroup(id:$id) {\n      id\n      name\n      description\n    }\n  }\n`\n\n\nexport const GET_CLASSPASS_GROUP_PASSES_QUERY = gql`\n  query GetPassesAndGroupMembership($after: String, $before: String, $id:ID!) {\n    organizationClasspasses(first: 100, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    organizationClasspassGroup(id: $id) {\n      id\n      name\n      description\n      organizationClasspasses {\n        edges {\n          node {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const ADD_CLASSPASS_GROUP = gql`\nmutation CreateOrganizationClasspassGroup($input:CreateOrganizationClasspassGroupInput!) {\n  createOrganizationClasspassGroup(input: $input) {\n    organizationClasspassGroup{\n      id\n    }\n  }\n}\n`\n\nexport const UPDATE_CLASSPASS_GROUP = gql`\nmutation UpdateOrganizationClasspassGroup($input: UpdateOrganizationClasspassGroupInput!) {\n  updateOrganizationClasspassGroup(input: $input) {\n    organizationClasspassGroup {\n      id\n      name\n    }\n  }\n}\n`\n\nexport const DELETE_CLASSPASS_GROUP = gql`\n  mutation DeleteClasspassGroup($input: DeleteOrganizationClasspassGroupInput!) {\n    deleteOrganizationClasspassGroup(input: $input) {\n      ok\n    }\n  }\n`\n\nexport const ADD_CARD_TO_GROUP = gql`\n  mutation AddCardToGroup($input: CreateOrganizationClasspassGroupClasspassInput!) {\n    createOrganizationClasspassGroupClasspass(input:$input) {\n      organizationClasspassGroupClasspass {\n        id\n        organizationClasspass {\n          id\n          name\n        }\n        organizationClasspassGroup {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const DELETE_CARD_FROM_GROUP = gql`\n  mutation DeleteCardFromGroup($input: DeleteOrganizationClasspassGroupClasspassInput!) {\n    deleteOrganizationClasspassGroupClasspass(input:$input) {\n      ok\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Table\n} from \"tabler-react\";\n\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesGroupsBase from \"./OrganizationClasspassesGroupsBase\"\n\nimport { GET_CLASSPASS_GROUPS_QUERY, DELETE_CLASSPASS_GROUP } from \"./queries\"\n\n\nfunction OrganizationClasspassesGroups({ t, history}) {\n  const { loading, error, data, fetchMore } = useQuery(GET_CLASSPASS_GROUPS_QUERY)\n  const [deleteClasspassGroup] = useMutation(DELETE_CLASSPASS_GROUP)\n\n  // Loading\n  if (loading) return (\n    <OrganizationClasspassesGroupsBase>\n      <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasspassesGroupsBase>\n      <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n        <p>{t('organization.classpass_groups.error_loading')}</p>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n  \n  const classpass_groups = data.organizationClasspassGroups\n\n  // Empty list\n  if (!classpass_groups.edges.length) { return (\n    <OrganizationClasspassesGroupsBase>\n      <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n        <p>{t('organization.classpass_groups.empty_list')}</p>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )} \n\n  \n  // We have data\n  return (\n    <OrganizationClasspassesGroupsBase>\n      <ContentCard cardTitle={t('organization.classpass_groups.title')}\n                    pageInfo={classpass_groups.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: classpass_groups.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationClasspassGroups.edges\n                        const pageInfo = fetchMoreResult.organizationClasspassGroups.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new classpass_groups at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationClasspassGroups: {\n                                __typename: previousResult.organizationClasspassGroups.__typename,\n                                edges: [ ...previousResult.organizationClasspassGroups.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {classpass_groups.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {node.name}\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.description.substring(0, 24)}\n                    </Table.Col>\n                    <Table.Col className=\"text-right\" key={v4()}>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/classpasses/groups/edit/\" + node.id)}\n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/classpasses/groups/edit/passes/\" + node.id)}\n                                color=\"secondary\">\n                          {t('organization.classpasses.groups.edit_passes')}\n                        </Button>\n                    </Table.Col>\n                    <Table.Col>\n                      <button className=\"icon btn btn-link btn-sm float-right\" \n                        title={t('general.delete')} \n                        href=\"\"\n                        onClick={() => {\n                          confirm_delete({\n                            t: t,\n                            msgConfirm: t(\"organization.classpasses.groups.delete_confirm_msg\"),\n                            msgDescription: <p>{node.name}</p>,\n                            msgSuccess: t('organization.classpasses.groups.deleted'),\n                            deleteFunction: deleteClasspassGroup,\n                            functionVariables: { variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, refetchQueries: [\n                              {query: GET_CLASSPASS_GROUPS_QUERY} \n                            ]}\n                          })\n                      }}>\n                        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                      </button>\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n   )\n\n}\n\n\n\n// const OrganizationClasspassesGroups = ({ t, history }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t(\"organization.title\")}>\n//           <div className=\"page-options d-flex\">\n//             <Link to=\"/organization/classpasses\" \n//                   className='btn btn-outline-secondary btn-sm'>\n//                 <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.classpasses.title')}\n//             </Link>\n//           </div>\n//         </Page.Header>\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//             <Query query={GET_CLASSPASS_GROUPS_QUERY} >\n//              {({ loading, error, data: {organizationClasspassGroups: classpass_groups}, refetch, fetchMore }) => {\n//                 // Loading\n//                 if (loading) return (\n//                   <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n//                     <Dimmer active={true}\n//                             loader={true}>\n//                     </Dimmer>\n//                   </ContentCard>\n//                 )\n//                 // Error\n//                 if (error) return (\n//                   <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n//                     <p>{t('organization.classpass_groups.error_loading')}</p>\n//                   </ContentCard>\n//                 )\n                \n//                 // Empty list\n//                 if (!classpass_groups.edges.length) { return (\n//                   <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n//                     <p>{t('organization.classpass_groups.empty_list')}</p>\n//                   </ContentCard>\n//                 )} else {   \n//                 // Life's good! :)\n//                 return (\n//                   <ContentCard cardTitle={t('organization.classpass_groups.title')}\n//                                pageInfo={classpass_groups.pageInfo}\n//                                onLoadMore={() => {\n//                                 fetchMore({\n//                                   variables: {\n//                                     after: classpass_groups.pageInfo.endCursor\n//                                   },\n//                                   updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                     const newEdges = fetchMoreResult.organizationClasspassGroups.edges\n//                                     const pageInfo = fetchMoreResult.organizationClasspassGroups.pageInfo\n\n//                                     return newEdges.length\n//                                       ? {\n//                                           // Put the new classpass_groups at the end of the list and update `pageInfo`\n//                                           // so we have the new `endCursor` and `hasNextPage` values\n//                                           organizationClasspassGroups: {\n//                                             __typename: previousResult.organizationClasspassGroups.__typename,\n//                                             edges: [ ...previousResult.organizationClasspassGroups.edges, ...newEdges ],\n//                                             pageInfo\n//                                           }\n//                                         }\n//                                       : previousResult\n//                                   }\n//                                 })\n//                               }} >\n//                         <Table>\n//                           <Table.Header>\n//                             <Table.Row key={v4()}>\n//                               <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                             </Table.Row>\n//                           </Table.Header>\n//                           <Table.Body>\n//                               {classpass_groups.edges.map(({ node }) => (\n//                                 <Table.Row key={v4()}>\n//                                   <Table.Col key={v4()}>\n//                                     {node.name}\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/organization/classpasses/groups/edit/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('general.edit')}\n//                                       </Button>\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/organization/classpasses/groups/edit/passes/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('organization.classpasses.groups.edit_passes')}\n//                                       </Button>\n//                                   </Table.Col>\n//                                   {/* <Mutation mutation={ARCHIVE_CLASSPASS_GROUP} key={v4()}>\n//                                     {(archiveCostcenter, { data }) => (\n//                                       <Table.Col className=\"text-right\" key={v4()}>\n//                                         <button className=\"icon btn btn-link btn-sm\" \n//                                            title={t('general.archive')} \n//                                            href=\"\"\n//                                            onClick={() => {\n//                                              console.log(\"clicked archived\")\n//                                              let id = node.id\n//                                              archiveCostcenter({ variables: {\n//                                                input: {\n//                                                 id,\n//                                                 archived: !archived\n//                                                }\n//                                         }, refetchQueries: [\n//                                             {query: GET_CLASSPASS_GROUPS_QUERY, variables: {\"archived\": archived }}\n//                                         ]}).then(({ data }) => {\n//                                           console.log('got data', data);\n//                                           toast.success(\n//                                             (archived) ? t('general.unarchived'): t('general.archived'), {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                         }).catch((error) => {\n//                                           toast.error((t('general.toast_server_error')) +  error, {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                           console.log('there was an error sending the query', error);\n//                                         })\n//                                         }}>\n//                                           <Icon prefix=\"fa\" name=\"inbox\" />\n//                                         </button>\n//                                       </Table.Col>\n//                                     )}\n//                                   </Mutation> */}\n//                                 </Table.Row>\n//                               ))}\n//                           </Table.Body>\n//                         </Table>\n//                   </ContentCard>\n//                 )}}\n//              }\n//             </Query>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"organizationclasspassgroup\">\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(\"/organization/classpasses/groups/add\")}>\n//                 <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.classpass_groups.add')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <OrganizationMenu activeLink=''/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// )\n\nexport default withTranslation()(withRouter(OrganizationClasspassesGroups))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const CLASSPASS_GROUP_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_CLASSPASS_GROUPS_QUERY, ADD_CLASSPASS_GROUP } from './queries'\nimport { CLASSPASS_GROUP_SCHEMA } from './yupSchema'\n\nimport {\n  Alert,\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport OrganizationClasspassesGroupsBase from './OrganizationClasspassesGroupsBase';\n\n\nfunction OrganizationClasspassGroupAdd({t, history}) {\n  const returnUrl = \"/organization/classpasses/groups\"\n  const [ addClasspassGroup ] = useMutation(ADD_CLASSPASS_GROUP)\n\n  return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <Card title={t('organization.classpass_groups.title_add')}>\n        <Formik\n          initialValues={{ name: '', description: '' }}\n          validationSchema={CLASSPASS_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addClasspassGroup({ variables: {\n                input: {\n                  name: values.name, \n                  description: values.description, \n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSPASS_GROUPS_QUERY}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.classpass_groups.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <FoForm>\n                  <Card.Body>\n                    <Form.Group label={t('general.name')}>\n                      <Field type=\"text\" \n                              name=\"name\" \n                              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                      <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                    <Form.Group label={t('general.description')}>\n                      <Field type=\"text\" \n                              name=\"description\" \n                              className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                      <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                  </Card.Body>\n                  <Card.Footer>\n                      <Button \n                        color=\"primary\"\n                        className=\"pull-right\" \n                        type=\"submit\" \n                        disabled={isSubmitting}\n                      >\n                        {t('general.submit')}\n                      </Button>\n                      <Link to={returnUrl}>\n                        <Button color=\"link\">\n                            {t('general.cancel')}\n                        </Button>\n                      </Link>\n                      {(isSubmitting) ? \n                        <Alert type=\"primary\" hasExtraSpace>\n                          <strong>{t('general.please_wait')}</strong> {t('organization.classpass_groups.toast_creating_might_take_a_while')}\n                        </Alert> : \n                        \"\"\n                      }\n                  </Card.Footer>\n              </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationClasspassesGroupsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassGroupAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_CLASSPASS_GROUPS_QUERY, GET_CLASSPASS_GROUP_QUERY, UPDATE_CLASSPASS_GROUP } from './queries'\nimport { CLASSPASS_GROUP_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Dimmer,\n  Button,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesGroupsBase from './OrganizationClasspassesGroupsBase';\n\n\nfunction OrganizationClasspassGroupEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('organization.classpass_groups.title_edit')\n  const returnUrl = \"/organization/classpasses/groups\"\n  const { loading, error, data } = useQuery(GET_CLASSPASS_GROUP_QUERY, {\n    variables: {id: id}\n  })\n  const [ updateClasspassGroup ] = useMutation(UPDATE_CLASSPASS_GROUP)\n\n  // Loading\n  if (loading) return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n    \n\n  const initialData = data.organizationClasspassGroup;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            description: initialData.description,\n          }}\n          validationSchema={CLASSPASS_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateClasspassGroup({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name,\n                  description: values.description,\n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSPASS_GROUPS_QUERY}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('organization.classpass_groups.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n              <FoForm>\n                  <Card.Body>    \n                      <Form.Group label={t('general.name')} >\n                        <Field type=\"text\" \n                              name=\"name\" \n                              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('general.description')}>\n                        <Field type=\"text\" \n                                name=\"description\" \n                                className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                  </Card.Body>\n                  <Card.Footer>\n                      <Button \n                        className=\"pull-right\"\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                        type=\"submit\"\n                      >\n                        {t('general.submit')}\n                      </Button>\n                      <Link to={returnUrl}>\n                        <Button\n                          type=\"button\" \n                          color=\"link\" \n                        >\n                            {t('general.cancel')}\n                        </Button>\n                      </Link>\n                  </Card.Footer>\n              </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationClasspassesGroupsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassGroupEdit))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { toast } from 'react-toastify'\n\nimport { GET_CLASSPASS_GROUP_PASSES_QUERY, ADD_CARD_TO_GROUP, DELETE_CARD_FROM_GROUP } from './queries'\n\nimport {\n  Dimmer,\n  Alert,\n  Icon,\n  Button,\n  Card,\n  Table,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesGroupsBase from './OrganizationClasspassesGroupsBase';\n\n\nfunction OrganizationClasspassGroupEditPasses({ t, match, history }) {\n  const groupId = match.params.id\n  const returnUrl = \"/organization/classpasses/groups\"\n  const cardTitle = t('organization.classpass_group_classpasses.title_edit')\n  const { loading, error, data } = useQuery(GET_CLASSPASS_GROUP_PASSES_QUERY, { \n    variables: { id: groupId }\n  })\n  const [ addCardToGroup ] = useMutation(ADD_CARD_TO_GROUP)\n  const [ deleteCardFromGroup ] = useMutation(DELETE_CARD_FROM_GROUP)\n\n  // Loading\n  if (loading) return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const passes = data.organizationClasspasses\n  const group = data.organizationClasspassGroup\n\n  let group_passes = {}\n  if (group.organizationClasspasses.edges) {\n    group.organizationClasspasses.edges.map(({ node}) => (\n      group_passes[node.id] = true\n    ))\n  }\n\n  return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <Alert type=\"primary\">\n            <strong>{t('general.group')}</strong> {group.name}\n          </Alert>\n          <Table>\n            <Table.Header>\n              <Table.Row key={v4()}>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {passes.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {(node.id in group_passes) ? \n                        <Icon name=\"check-circle\" className=\"text-green\" /> : <Icon name=\"x-circle\" className=\"text-red\" />\n                      }\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.name}\n                    </Table.Col>\n                    {console.log((node.id in group_passes))}\n                    {(!(node.id in group_passes)) ?\n                      // Add\n                      <Table.Col className=\"text-right text-green\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('general.add_to_group')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked add\")\n                            let pass_id = node.id\n                            addCardToGroup({ variables: {\n                              input: {\n                                organizationClasspass: pass_id,\n                                organizationClasspassGroup: groupId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_CLASSPASS_GROUP_PASSES_QUERY, variables: {\"id\": groupId }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('general.added_to_group'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"plus-circle\" /> { ' ' }\n                          {t('general.add_to_group')} \n                        </Button>\n                      </Table.Col>\n                      :\n                      // Delete\n                      <Table.Col className=\"text-right text-red\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('general.delete_from_group')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked delete\")\n                            console.log(node.id)\n                            let pass_id = node.id\n                            deleteCardFromGroup({ variables: {\n                              input: {\n                                organizationClasspass: pass_id,\n                                organizationClasspassGroup: groupId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_CLASSPASS_GROUP_PASSES_QUERY, variables: {\"id\": groupId }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('general.deleted_from_group'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"minus-circle\" /> { ' ' }\n                          {t('general.delete_from_group')}\n                        </Button>\n                      </Table.Col>\n                      }\n                  </Table.Row>\n                ))}\n            </Table.Body>\n          </Table>\n        </Card.Body>\n      </Card>\n    </OrganizationClasspassesGroupsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasspassGroupEditPasses))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let archived = localStorage.getItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED)\n  if (archived === null) {\n    archived = false\n  }\n\n  let queryVars = {\n    archived: (archived === \"true\") ? true : false,\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n","import { gql } from \"@apollo/client\"\n\nexport const GET_CLASSTYPES_QUERY = gql`\nquery OrganizationClasstypes($after: String, $before: String, $archived: Boolean) {\n  organizationClasstypes(first: 15, before: $before, after: $after, archived: $archived) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        archived\n        displayPublic\n        name\n        description\n        urlWebsite\n        urlImage\n        urlImageThumbnailSmall\n      }\n    }\n  }\n}\n`\n\nexport const GET_CLASSTYPE_QUERY = gql`\nquery getOrganizationClasstype($id: ID!) {\n  organizationClasstype(id:$id) {\n    id\n    archived\n    name\n    description\n    displayPublic\n    urlWebsite\n    urlImage\n  }\n}\n`\n\nexport const ADD_CLASSTYPE = gql`\nmutation CreateOrganizationClasstype($input: CreateOrganizationClasstypeInput!) {\n  createOrganizationClasstype(input: $input) {\n    organizationClasstype {\n      id\n      archived\n      name\n      description\n      displayPublic\n      urlWebsite\n      image\n    }\n  }\n}\n`\n\nexport const UPDATE_CLASSTYPE = gql`\n  mutation UpdateOrganizationClasstype($input: UpdateOrganizationClasstypeInput!) {\n    updateOrganizationClasstype(input: $input) {\n      organizationClasstype {\n        id\n        archived\n        name\n        description\n        displayPublic\n        urlWebsite\n      }\n    }\n  }\n`\n\nexport const UPDATE_CLASSTYPE_IMAGE = gql`\nmutation UploadOrganizationClasstypeImage($input: UploadOrganizationClasstypeImageInput!) {\n  uploadOrganizationClasstypeImage(input: $input) {\n    organizationClasstype {\n      id\n      archived\n      name\n      description\n      displayPublic\n      urlWebsite\n      image\n    }\n  }\n}\n`\n\nexport const ARCHIVE_CLASSTYPE = gql`\nmutation ArchiveOrganizationClasstype($input: ArchiveOrganizationClasstypeInput!) {\n    archiveOrganizationClasstype(input: $input) {\n      organizationClasstype {\n        id\n        archived\n      }\n    }\n}\n`\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationClasstypesBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title=\"Organization\" />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/classtypes/\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationclasstype\">\n                  <Link to=\"/organization/classtypes/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.classtypes.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <OrganizationMenu activeLink='classtypes'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>          \n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasstypesBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Avatar,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport ContentCard from \"../../general/ContentCard\"\n\nimport { get_list_query_variables } from './tools'\nimport { GET_CLASSTYPES_QUERY, ARCHIVE_CLASSTYPE } from \"./queries\"\nimport OrganizationClasstypesBase from \"./OrganizationClasstypesBase\"\n\n\nfunction OrganizationClasstypes({t, history, archived=false}) {\n  const {loading, error, data, refetch, fetchMore} = useQuery(GET_CLASSTYPES_QUERY, { \n    variables: get_list_query_variables()\n  })\n  const [archiveClasstype] = useMutation(ARCHIVE_CLASSTYPE)\n\n  if (loading) return (\n    <OrganizationClasstypesBase>\n      <ContentCard cardTitle={t('organization.classtypes.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasstypesBase>\n      <ContentCard cardTitle={t('organization.classtypes.title')}>\n        <p>{t('organization.classtypes.error_loading')}</p>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n  const headerOptions = <Card.Options>\n    <Button color={(localStorage.getItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED) === \"false\") ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {\n              localStorage.setItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED, false)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.active')}\n    </Button>\n    <Button color={(localStorage.getItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED) === \"true\") ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {\n              localStorage.setItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED, true)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n  \n  const classtypes = data.organizationClasstypes\n  // Empty list\n  if (!classtypes.edges.length) { return (\n    <OrganizationClasstypesBase>\n      <ContentCard cardTitle={t('organization.classtypes.title')}\n                  headerContent={headerOptions}>\n        <p>\n        {(!archived) ? t('organization.classtypes.empty_list') : t(\"organization.classtypes.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )}   \n\n  return (\n    <OrganizationClasstypesBase>\n      <ContentCard cardTitle={t('organization.classtypes.title')}\n                   headerContent={headerOptions}\n                   pageInfo={classtypes.pageInfo}\n                   onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: classtypes.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationClasstypes.edges\n                        const pageInfo = fetchMoreResult.organizationClasstypes.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new locations at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationClasstypes: {\n                                __typename: previousResult.organizationClasstypes.__typename,\n                                edges: [ ...previousResult.organizationClasstypes.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {classtypes.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    <Avatar size=\"lg\" imageURL={node.urlImageThumbnailSmall} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.displayPublic) ? \n                      <Badge color=\"success\">{t('general.yes')}</Badge>: \n                      <Badge color=\"danger\">{t('general.no')}</Badge>}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(localStorage.getItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED) === \"true\") ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <div>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/classtypes/edit/\" + node.id)}\n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/classtypes/edit_image/\" + node.id)}\n                                color=\"secondary\">\n                          {t('organization.classtypes.edit_image')}\n                        </Button>\n                      </div>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          archiveClasstype({ variables: {\n                            input: {\n                              id: node.id,\n                              archived: !node.archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_CLASSTYPES_QUERY, variables: get_list_query_variables()}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (node.archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasstypes))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const CLASSTYPE_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    description: Yup.string(),\n    urlWebsite: Yup.string()\n      .url(t(\"yup.url\")),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nimport { GET_CLASSTYPES_QUERY, ADD_CLASSTYPE } from './queries'\nimport { CLASSTYPE_SCHEMA } from './yupSchema'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport { get_list_query_variables } from './tools'\nimport OrganizationClasstypesBase from './OrganizationClasstypesBase';\n\n\nfunction OrganizationClasstypeAdd({t, history}) {\n  const returnUrl = \"/organization/classtypes\"\n  const [addClasstype] = useMutation(ADD_CLASSTYPE)\n\n  return (\n    <OrganizationClasstypesBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('organization.classtypes.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: \"\", description: \"\", displayPublic: true, urlWebsite: '' }}\n          validationSchema={CLASSTYPE_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addClasstype({ variables: {\n                input: {\n                  name: values.name, \n                  description: values.description,\n                  displayPublic: values.displayPublic,\n                  urlWebsite: values.urlWebsite,\n                  image: values.image\n                },\n                // file: values.image\n              }, refetchQueries: [\n                  {query: GET_CLASSTYPES_QUERY, variables: get_list_query_variables()}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.classtypes.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n            }}\n            >\n            {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n                <FoForm>\n                  {/* {console.log('values in FoForm')}\n                  {console.log(values)} */}\n                    <Card.Body>\n                        <Form.Group>\n                          <Form.Label className=\"custom-switch\">\n                            <Field \n                              className=\"custom-switch-input\"\n                              type=\"checkbox\" \n                              name=\"displayPublic\" \n                              checked={values.displayPublic} />\n                            <span className=\"custom-switch-indicator\" ></span>\n                            <span className=\"custom-switch-description\">{t('organization.classtype.public')}</span>\n                          </Form.Label>\n                          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                        </Form.Group>    \n                        <Form.Group label={t('general.name')}>\n                          <Field type=\"text\" \n                                  name=\"name\" \n                                  className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                  autoComplete=\"off\" />\n                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                        <Form.Group label={t('general.description')}>\n                          <Editor\n                              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                              textareaName=\"description\"\n                              initialValue={values.description}\n                              init={tinymceBasicConf}\n                              onBlur={(e) => {\n                                setFieldValue(\"description\", e.target.getContent())\n                                setFieldTouched(\"description\", true)\n                              }}\n                            />\n                          <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                        <Form.Group label={t('organization.classtype.url_website')}>\n                          <Field type=\"text\" \n                                name=\"urlWebsite\" \n                                className={(errors.urlWebsite) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                          <ErrorMessage name=\"urlWebsite\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          color=\"primary\"\n                          className=\"pull-right\" \n                          type=\"submit\" \n                          disabled={isSubmitting}\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Button color=\"link\" onClick={() => history.push(returnUrl)}>\n                            {t('general.cancel')}\n                        </Button>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </OrganizationClasstypesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasstypeAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from \"react-router-dom\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nimport { GET_CLASSTYPES_QUERY, GET_CLASSTYPE_QUERY, UPDATE_CLASSTYPE } from './queries'\nimport { CLASSTYPE_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasstypesBase from './OrganizationClasstypesBase';\n\n\nfunction OrganizationClasstypeEdit({ t, history, match }) {\n  const id = match.params.id\n  const cardTitle = t('organization.classtypes.title_edit')\n  const returnUrl = \"/organization/classtypes\"\n  const { loading, error, data } = useQuery(GET_CLASSTYPE_QUERY, { variables: {\n    id: id\n  }})\n  const [ updateClasstype ] = useMutation(UPDATE_CLASSTYPE)\n\n  if (loading) return (\n    <OrganizationClasstypesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasstypesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n\n                      \n  const initialData = data.organizationClasstype\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationClasstypesBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n              description: initialData.description,\n              displayPublic: initialData.displayPublic,\n              urlWebsite: initialData.urlWebsite\n            }}\n            validationSchema={CLASSTYPE_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateClasstype({ variables: {\n                  input: {\n                    id: id,\n                    name: values.name,\n                    description: (values.description) ? values.description: '',\n                    displayPublic: values.displayPublic,\n                    urlWebsite: (values.urlWebsite) ? values.urlWebsite: ''\n                  }\n                }, refetchQueries: [\n                    {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    toast.success((t('organization.classtypes.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    setSubmitting(false)\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values, setFieldValue, setFieldTouched }) => (\n                <FoForm>\n                    {console.log(values)}\n                    <Card.Body>\n                        <Form.Group>\n                          <Form.Label className=\"custom-switch\">\n                            <Field \n                              className=\"custom-switch-input\"\n                              type=\"checkbox\" \n                              name=\"displayPublic\" \n                              checked={values.displayPublic} />\n                            <span className=\"custom-switch-indicator\" ></span>\n                            <span className=\"custom-switch-description\">{t('organization.classtype.public')}</span>\n                          </Form.Label>\n                          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                        </Form.Group>     \n                        <Form.Group label={t('general.name')} >\n                          <Field type=\"text\" \n                                name=\"name\" \n                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                        <Form.Group label={t('general.description')}>\n                          <Editor\n                            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                            textareaName=\"description\"\n                            initialValue={values.description}\n                            init={tinymceBasicConf}\n                            onBlur={(e) => {\n                              setFieldValue(\"description\", e.target.getContent())\n                              setFieldTouched(\"description\", true)\n                            }}\n                          />\n                          <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                        <Form.Group label={t('organization.classtype.url_website')}>\n                          <Field type=\"text\" \n                                name=\"urlWebsite\" \n                                className={(errors.urlWebsite) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                          <ErrorMessage name=\"urlWebsite\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          className=\"pull-right\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          type=\"submit\"\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button\n                            type=\"button\" \n                            color=\"link\" \n                          >\n                              {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </OrganizationClasstypesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasstypeEdit))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\nimport { \n  Formik,\n  Form as FoForm, \n  Field, \n  ErrorMessage \n} from 'formik'\n\n\nimport { GET_CLASSTYPES_QUERY, GET_CLASSTYPE_QUERY, UPDATE_CLASSTYPE_IMAGE } from './queries'\n\nimport {\n  Dimmer,\n  Grid,\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasstypesBase from './OrganizationClasstypesBase';\nimport { customFileInputLabelStyle } from \"../../../tools/custom_file_input_label_style\"\n\n\nfunction OrganizationClasstypeEditImage({t, history, match}) {\n  const classtypeId = match.params.id\n  const returnUrl = \"/organization/classtypes\"\n  const cardTitle = t('organization.classtypes.edit_image')\n  const { loading, error, data } = useQuery(GET_CLASSTYPE_QUERY, {\n    variables: { id: classtypeId }\n  })\n  const [ uploadImage ] = useMutation(UPDATE_CLASSTYPE_IMAGE)\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n\n\n  if (loading) return (\n    <OrganizationClasstypesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasstypesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n\n  const initialData = data.organizationClasstype\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationClasstypesBase>\n      <Card title={cardTitle}>\n       <Formik\n          initialValues={{}}\n          // validationSchema={DOCUMENT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log(\"Submit values\")\n            console.log(values)\n            console.log(fileName)\n  \n            let inputVars = {\n              id: classtypeId,\n              imageFileName: fileName,\n            }\n  \n            let reader = new FileReader()\n            reader.onload = function(reader_event) {\n              console.log(reader_event.target.result)\n              let b64_enc_file = reader_event.target.result\n              console.log(b64_enc_file)\n              // Add uploaded document b64 encoded blob to input vars\n              inputVars.image = b64_enc_file\n  \n              uploadImage({ variables: {\n                input: inputVars\n              }, refetchQueries: [\n                {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.classtypes.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                    setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n            }\n            \n            let file = inputFileName.current.files[0]\n            if (file && file.size < 5242880) {\n              reader.readAsDataURL(file)\n            } else if (file && file.size > 5242880) { \n              toast.error(t(\"error_messages.selected_file_exceeds_max_filesize\"), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            } else {\n              toast.error(t(\"general.please_select_a_file\"), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <FoForm>\n            <Card.Body>\n              <Grid.Row>\n                <Grid.Col>\n                  <Form.Group label={t('general.custom_file_input_label')}>\n                    <div className=\"custom-file\">\n                      <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                      <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                        {fileInputLabel}\n                      </label>\n                    </div>\n                  </Form.Group>\n                </Grid.Col>\n              </Grid.Row>\n            </Card.Body>\n            <Card.Footer>\n              <Button \n                color=\"primary\"\n                className=\"pull-right\" \n                type=\"submit\" \n                disabled={isSubmitting}\n              >\n                {t('general.submit')}\n              </Button>\n              <Link to={returnUrl}>\n                <Button color=\"link\">\n                  {t('general.cancel')}\n                </Button>\n              </Link>\n            </Card.Footer>\n          </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationClasstypesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasstypeEditImage))","import { gql } from \"@apollo/client\"\n\nexport const GET_DISCOVERIES_QUERY = gql`\n  query OrganizationDiscoveries($after: String, $before: String, $archived: Boolean) {\n    organizationDiscoveries(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_DISCOVERY_QUERY = gql`\n  query SchoolDiscovery($id: ID!) {\n    organizationDiscovery(id:$id) {\n      id\n      name\n      archived\n    }\n  }\n`\n\nexport const ADD_DISCOVERY = gql`\n  mutation CreateOrganizationDiscovery($input:CreateOrganizationDiscoveryInput!) {\n    createOrganizationDiscovery(input: $input) {\n      organizationDiscovery{\n        id\n        archived\n        name\n      }\n    }\n  }\n`\n\nexport const UPDATE_DISCOVERY = gql`\nmutation UpdateOrganizationDiscovery($input: UpdateOrganizationDiscoveryInput!) {\n  updateOrganizationDiscovery(input: $input) {\n    organizationDiscovery {\n      id\n      name\n    }\n  }\n}\n`\n\nexport const ARCHIVE_DISCOVERY = gql`\nmutation ArchiveOrganizationDiscovery($input: ArchiveOrganizationDiscoveryInput!) {\n  archiveOrganizationDiscovery(input: $input) {\n    organizationDiscovery {\n      id\n      archived\n    }\n  }\n}\n`\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationDiscoveriesBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/discoveries\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n             :\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"organizationdiscovery\">\n                <Link to=\"/organization/discoveries/add\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.discoveries.add')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              }\n              <OrganizationMenu activeLink='discoveries'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n)}\n\n\nexport default withTranslation()(withRouter(OrganizationDiscoveriesBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\n\nimport { GET_DISCOVERIES_QUERY, ARCHIVE_DISCOVERY } from \"./queries\"\nimport OrganizationDiscoveriesBase from './OrganizationDiscoveriesBase'\n\n\nfunction OrganizationDiscoveries({ t, history }) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('organization.discoveries.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_DISCOVERIES_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveDiscovery ] = useMutation(ARCHIVE_DISCOVERY)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <OrganizationDiscoveriesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  )\n\n  if (error) return (\n    <OrganizationDiscoveriesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.discoveries.error_loading')}</p>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  )\n\n  const discoveries = data.organizationDiscoveries\n\n  // Empty list\n  if (!discoveries.edges.length) { return (\n    <OrganizationDiscoveriesBase>\n      <ContentCard cardTitle={cardTitle}\n                  headerContent={headerOptions}>\n        <p> \n          {(!archived) ? t('organization.discoveries.empty_list') : t(\"organization.discoveries.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  )}\n\n  return (\n    <OrganizationDiscoveriesBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}\n                    pageInfo={discoveries.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: discoveries.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationDiscoveries.edges\n                        const pageInfo = fetchMoreResult.organizationDiscoveries.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new discoveries at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationDiscoveries: {\n                                __typename: previousResult.organizationDiscoveries.__typename,\n                                edges: [ ...previousResult.organizationDiscoveries.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {discoveries.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/organization/discoveries/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveDiscovery({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_DISCOVERIES_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  ) \n}\n\n\nexport default withTranslation()(withRouter(OrganizationDiscoveries))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const DISCOVERY_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from \"react-router-dom\"\n\n\nimport { GET_DISCOVERIES_QUERY, ADD_DISCOVERY } from './queries'\nimport { DISCOVERY_SCHEMA } from './yupSchema'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport OrganizationDiscoveriesBase from './OrganizationDiscoveriesBase';\n\n\nfunction OrganizationDiscoveryAdd({t, history}) {\n  const returnUrl = \"/organization/discoveries\"\n  const [ addDiscovery ] = useMutation(ADD_DISCOVERY)\n\n  return (\n    <OrganizationDiscoveriesBase showBack={true}>\n      <Card title={t('organization.discoveries.title_add')}>\n        <Formik\n            initialValues={{ name: '', code: '' }}\n            validationSchema={DISCOVERY_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                addDiscovery({ variables: {\n                  input: {\n                    name: values.name, \n                  }\n                }, refetchQueries: [\n                    {query: GET_DISCOVERIES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data);\n                    history.push(returnUrl)\n                    toast.success((t('organization.discoveries.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n                <FoForm>\n                    <Card.Body>\n                        <Form.Group label={t('general.name')}>\n                          <Field type=\"text\" \n                                  name=\"name\" \n                                  className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                  autoComplete=\"off\" />\n                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          color=\"primary\"\n                          className=\"pull-right\" \n                          type=\"submit\" \n                          disabled={isSubmitting}\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button color=\"link\">\n                              {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </OrganizationDiscoveriesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationDiscoveryAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from \"react-router-dom\"\n\nimport { GET_DISCOVERIES_QUERY, GET_DISCOVERY_QUERY, UPDATE_DISCOVERY } from './queries'\nimport { DISCOVERY_SCHEMA } from './yupSchema'\n\nimport {\n  Dimmer,\n  Button,\n  Card,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationDiscoveriesBase from './OrganizationDiscoveriesBase';\n\n\nfunction OrganizationDiscoveryEdit({t, history, match}) {\n  const id = match.params.id\n  const returnUrl = \"/organization/discoveries\"\n  const cardTitle = t('organization.discoveries.title_edit')\n  const { loading, error, data } = useQuery(GET_DISCOVERY_QUERY, {\n    variables: {id: id}\n  })\n  const [ updateDiscovery ] = useMutation(UPDATE_DISCOVERY)\n\n  if (loading) return (\n    <OrganizationDiscoveriesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  )\n\n  if (error) return (\n    <OrganizationDiscoveriesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  )\n\n  const initialData = data.organizationDiscovery;\n\n  return (\n    <OrganizationDiscoveriesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n            }}\n            validationSchema={DISCOVERY_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateDiscovery({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                  }\n                }, refetchQueries: [\n                    {query: GET_DISCOVERIES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.discoveries.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values }) => (\n                <FoForm>\n                    <Card.Body>    \n                        <Form.Group label={t('general.name')} >\n                          <Field type=\"text\" \n                                name=\"name\" \n                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          className=\"pull-right\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          type=\"submit\"\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button\n                            type=\"button\" \n                            color=\"link\" \n                          >\n                              {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </OrganizationDiscoveriesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationDiscoveryEdit))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationDocuments({ t, match }) {\n  const organizationId = match.params.organization_id\n  const docTypes = [\n    [ \"TERMS_AND_CONDITIONS\", t(\"general.terms_and_conditions\")],\n    [ \"PRIVACY_POLICY\", t(\"general.privacy_policy\")],\n  ]\n\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('organization.title')}>\n            {/* <div className=\"page-options d-flex\">\n              <Link to={`/organization/edit/${organizationId}`}>\n                <Button \n                  icon=\"arrow-left\"\n                  className=\"mr-2\"\n                  outline\n                  color=\"secondary\"\n                >\n                  {t('general.back_to')} {t('organization.title')}\n                </Button>\n              </Link>\n            </div> */}\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.documents.title')}</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  <Table>\n                    <Table.Header>\n                      <Table.Row key={v4()}>\n                        <Table.ColHeader>{t('general.document')}</Table.ColHeader>\n                        <Table.ColHeader></Table.ColHeader>\n                      </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {docTypes.map((docType) => (\n                          <Table.Row key={v4()}>\n                            <Table.Col key={v4()}>\n                              {docType[1]}\n                            </Table.Col>\n                            <Table.Col className=\"text-right\" key={v4()}>\n                              <Link to={`/organization/documents/${organizationId}/${docType[0]}`}>\n                                <Button className='btn-sm' \n                                        color=\"secondary\">\n                                  {t('general.manage')} <Icon name=\"chevron-right\" />\n                                </Button>\n                              </Link>\n                            </Table.Col>\n                          </Table.Row>\n                        ))}\n                    </Table.Body>\n                  </Table>\n                </Card.Body>\n              </Card>        \n            </Grid.Col>\n            <Grid.Col md={3}>\n              <h5>{t(\"general.menu\")}</h5>\n              <OrganizationMenu activeLink='documents'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationDocuments))","import React, { useContext } from 'react'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../context/AppSettingsContext'\n\n\nfunction FormatISODateStr({ ISODateStr }) {\n    const appSettings = useContext(AppSettingsContext)\n    const dateFormat = appSettings.dateFormat\n\n    return (\n        moment(ISODateStr).format(dateFormat)    \n    )\n}\n\nexport default FormatISODateStr\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Button\n} from \"tabler-react\";\n\nconst FileDownloadTableButton = ({ t, mediaUrl, className=\"\", target=\"_blank\" }) => {\n  return <Button \n           color={\"secondary \" + className}\n           size=\"sm\"\n           icon=\"download-cloud\"\n           target={target}\n           RootComponent=\"a\" \n           href={mediaUrl}\n          >\n           {t('general.download')}\n          </Button>\n}\n\nexport default withTranslation()(FileDownloadTableButton)\n\n\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationDocumentsBase({ t, children, headerLinks, sidebarButton }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('organization.title')}>\n            <div className=\"page-options d-flex\">\n              {headerLinks}\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}        \n            </Grid.Col>\n            <Grid.Col md={3}>\n              {sidebarButton}\n              <h5>{t(\"general.menu\")}</h5>\n              <OrganizationMenu activeLink='documents'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationDocumentsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_DOCUMENTS_QUERY = gql`\n  query OrganizationDocuments($documentType: String!) {\n    organizationDocuments(documentType:$documentType) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          documentType\n          version\n          dateStart\n          dateEnd\n          document\n          urlDocument\n        }\n      }\n    }\n  }\n`\n\nexport const GET_DOCUMENT_QUERY = gql`\n  query OrganizationDocument($id: ID!) {\n    organizationDocument(id:$id) {\n      id\n      version\n      dateStart\n      dateEnd\n      document\n    }\n  }\n`\n\nexport const ADD_DOCUMENT = gql`\n  mutation CreateOrganizationDocument($input:CreateOrganizationDocumentInput!) {\n    createOrganizationDocument(input: $input) {\n      organizationDocument{\n        id\n        version\n        dateStart\n        dateEnd\n      }\n    }\n  }\n`\n\nexport const UPDATE_DOCUMENT = gql`\n  mutation UpdateOrganizationDocument($input:UpdateOrganizationDocumentInput!) {\n    updateOrganizationDocument(input: $input) {\n      organizationDocument{\n        id\n        version\n        dateStart\n        dateEnd\n      }\n    }\n  }\n`\n\nexport const DELETE_DOCUMENT = gql`\n  mutation DeleteOrganizationDocument($input:DeleteOrganizationDocumentInput!) {\n    deleteOrganizationDocument(input: $input) {\n      ok\n    }\n  }\n`","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_DOCUMENT, GET_DOCUMENTS_QUERY } from \"./queries\"\nimport confirmDelete from \"../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction OrganizationDocumentDelete({t, match, node}) {\n  const [deleteOrganizationDocument, { data }] = useMutation(DELETE_DOCUMENT)\n\n  return (\n    <button className=\"icon btn btn-link btn-sm\" \n      title={t('general.delete')} \n      href=\"\"\n      onClick={() => {\n        confirmDelete({\n          t: t,\n          msgConfirm: t(\"organization.documents.delete_confirm_msg\"),\n          msgDescription: <p> {t(\"general.version\")}: {node.version}</p>,\n          msgSuccess: t('organization.documents.deleted'),\n          deleteFunction: deleteOrganizationDocument,\n          functionVariables: { \n            variables: {\n              input: { id: node.id }\n            }, \n            refetchQueries: [\n              {query: GET_DOCUMENTS_QUERY, variables: { documentType: node.documentType} },\n            ]\n          }\n        })\n    }}>\n      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationDocumentDelete))\n","\nexport function getSubtitle(t, documentType) {\n  switch (documentType) {\n    case \"TERMS_AND_CONDITIONS\":\n      return t('general.terms_and_conditions')\n    case \"PRIVACY_POLICY\":\n      return t('general.privacy_policy')\n    default:\n      return \"Invalid document type\"\n  }\n}\n  ","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport ISODateString from \"../../ui/ISODateString\"\nimport FileDownloadTableButton from \"../../ui/FileDownloadTableButton\"\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationMenu from \"../OrganizationMenu\"\nimport OrganizationDocumentsBase from \"./OrganizationDocumentsBase\"\nimport OrganizationDocumentsDelete from \"./OrganizationDocumentDelete\"\nimport { getSubtitle } from './tools'\n\nimport { GET_DOCUMENTS_QUERY, DELETE_DOCUMENT } from \"./queries\"\n\n\nfunction OrganizationListDocuments({ t, match, history }) {\n  const organizationId = match.params.organization_id\n  const documentType = match.params.document_type\n  const subTitle = getSubtitle(t, documentType)\n\n  const back = <Link to={`/organization/documents/${organizationId}`}>\n    <Button \n      icon=\"arrow-left\"\n      className=\"mr-2\"\n      outline\n      color=\"secondary\"\n    >\n      {t('general.back_to')} {t('organization.documents.title')}\n    </Button>\n  </Link>\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"add\"\n    resource=\"organizationdocument\">\n      <Link to={`/organization/documents/${organizationId}/${documentType}/add`} >\n        <Button color=\"primary btn-block mb-6\" >\n          <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.documents.add')}\n        </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_DOCUMENTS_QUERY, {\n    variables: { documentType: documentType }\n  })\n\n  if (loading) {\n    return (\n      <OrganizationDocumentsBase headerLinks={back}>\n        {t('general.loading_with_dots')}\n      </OrganizationDocumentsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <OrganizationDocumentsBase headerLinks={back}>\n        {t('organization.documents.error_loading')}\n      </OrganizationDocumentsBase>\n    )\n  }\n  \n\n  return (\n    <OrganizationDocumentsBase headerLinks={back} sidebarButton={sidebarButton}>\n      <ContentCard \n        cardTitle={t('organization.documents.title') + ' - ' + subTitle}\n        pageInfo={data.organizationDocuments.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: data.organizationDocuments.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.organizationDocuments.edges\n              const pageInfo = fetchMoreResult.organizationDocuments.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the fetched documents at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    organizationDocuments: {\n                      __typename: previousResult.organizationDocuments.__typename,\n                      edges: [ ...previousResult.organizationDocuments.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }}\n      >\n        <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.date')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.version')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.download')}</Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                  {data.organizationDocuments.edges.map(({ node }) => (\n                    <Table.Row key={v4()}>\n                      <Table.Col key={v4()}>\n                        <ISODateString ISODateStr={node.dateStart} />\n                        {(node.dateEnd) ? <span> - <ISODateString ISODateStr={node.dateEnd} /></span> : \"\"}\n                      </Table.Col>\n                      <Table.Col key={v4()}>\n                        {node.version}\n                      </Table.Col>\n                      <Table.Col key={v4()}>\n                        <FileDownloadTableButton mediaUrl={node.urlDocument} />\n                      </Table.Col>\n                      <Table.Col className=\"text-right\" key={v4()}>\n                        <Link to={`/organization/documents/${organizationId}/${documentType}/edit/${node.id}`} >\n                          <Button className='btn-sm' \n                                  color=\"secondary\">\n                            {t('general.edit')}\n                          </Button>\n                        </Link>\n                        <OrganizationDocumentsDelete node={node} />\n                      </Table.Col>\n                    </Table.Row>\n                  ))}\n              </Table.Body>\n            </Table>\n      </ContentCard>\n    </OrganizationDocumentsBase>\n  )\n\n}\n\nexport default withTranslation()(withRouter(OrganizationListDocuments))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { \n  Formik,\n  Form as FoForm, \n  Field, \n  ErrorMessage \n} from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { ADD_DOCUMENT, GET_DOCUMENTS_QUERY } from \"./queries\"\nimport { DOCUMENT_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from \"../../../tools/date_tools\"\n// import OrganizationDocumentForm from './OrganizationDocumentForm'\nimport CSDatePicker from \"../../ui/CSDatePicker\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationDocumentsBase from \"./OrganizationDocumentsBase\"\nimport { getSubtitle } from './tools'\n\n\nconst customFileInputLabelStyle = {\n  whiteSpace: \"nowrap\",\n  display: \"block\",\n  overflow: \"hidden\"\n}  \n\n\nfunction OrganizationDocumentAdd({ t, match, history }) {\n  const organizationId = match.params.organization_id\n  const documentType = match.params.document_type\n  const subTitle = getSubtitle(t, documentType)\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n\n  // Vars for document file input field end\n  \n  const returnUrl = `/organization/documents/${organizationId}/${documentType}`\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"add\"\n    resource=\"organizationdocument\">\n      <Link to={returnUrl} >\n        <Button color=\"primary btn-block mb-6\" >\n          <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n        </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  const [addDocument, { data }] = useMutation(ADD_DOCUMENT, {\n    onCompleted: () => history.push(returnUrl)\n  })\n\n  return (\n    <OrganizationDocumentsBase sidebarButton={sidebarButton}>\n      <Card title={t('organization.documents.add') + ' - ' + subTitle}>\n        <Formik\n          initialValues={{ \n            version: '',\n            dateStart: '', \n            dateEnd: '',\n            document: ''\n          }}\n          // validationSchema={DOCUMENT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log(\"Submit values\")\n            console.log(values)\n            console.log(fileName)\n\n            let inputVars = {\n              documentType: documentType,\n              version: values.version,\n              dateStart: dateToLocalISO(values.dateStart),\n              documentFileName: fileName,\n            }\n\n            if (values.dateEnd) {\n              inputVars.dateEnd = dateToLocalISO(values.dateEnd)\n            }\n\n            let reader = new FileReader()\n            reader.onload = function(reader_event) {\n              console.log(reader_event.target.result)\n              let b64_enc_file = reader_event.target.result\n              console.log(b64_enc_file)\n              // Add uploaded document b64 encoded blob to input vars\n              inputVars.document = b64_enc_file\n\n              addDocument({ variables: {\n                input: inputVars\n              }, refetchQueries: [\n                  {query: GET_DOCUMENTS_QUERY, variables: {documentType: documentType}}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  toast.success((t('organization.documents.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                    setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n            }\n            \n            let file = inputFileName.current.files[0]\n            reader.readAsDataURL(file)\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <FoForm>\n            <Card.Body>\n              <Grid.Row>\n                <Grid.Col>\n                  <Form.Group label={t('general.version')}>\n                    <Field type=\"text\" \n                          name=\"version\" \n                          className={(errors.version) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\" />\n                    <ErrorMessage name=\"version\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n                <Grid.Col>\n                  <Form.Group label={t('general.custom_file_input_label')}>\n                    <div className=\"custom-file\">\n                      <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                      <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                        {fileInputLabel}\n                      </label>\n                    </div>\n                  </Form.Group>\n                </Grid.Col>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col>\n                  <Form.Group label={t('general.date_start')}>\n                    <CSDatePicker \n                      selected={values.dateStart}\n                      onChange={(date) => setFieldValue(\"dateStart\", date)}\n                      onBlur={() => setFieldTouched(\"dateStart\", true)}\n                    />\n                    <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n                <Grid.Col>\n                  <Form.Group label={t('general.date_end')}>\n                    <CSDatePicker \n                      selected={values.dateEnd}\n                      onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                      onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                    />\n                    <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n              </Grid.Row>\n            </Card.Body>\n            <Card.Footer>\n              <Button \n                color=\"primary\"\n                className=\"pull-right\" \n                type=\"submit\" \n                disabled={isSubmitting}\n              >\n                {t('general.submit')}\n              </Button>\n              <Button color=\"link\" onClick={() => history.push(returnUrl)}>\n                {t('general.cancel')}\n              </Button>\n            </Card.Footer>\n          </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationDocumentsBase>\n  )\n}\n\nexport default withTranslation()(OrganizationDocumentAdd)\n\n\n// const OrganizationLevelAdd = ({ t, history }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t('organization.title')} />\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//           <Card>\n//             <Card.Header>\n//               <Card.Title>{t('organization.levels.title_add')}</Card.Title>\n//             </Card.Header>\n//             <Mutation mutation={ADD_LEVEL} onCompleted={() => history.push(return_url)}> \n//                 {(addLocation, { data }) => (\n//                     <Formik\n//                         initialValues={{ name: '', code: '' }}\n//                         validationSchema={LEVEL_SCHEMA}\n//                         onSubmit={(values, { setSubmitting }) => {\n//                             addLocation({ variables: {\n//                               input: {\n//                                 name: values.name, \n//                               }\n//                             }, refetchQueries: [\n//                                 {query: GET_LEVELS_QUERY, variables: {\"archived\": false }}\n//                             ]})\n//                             .then(({ data }) => {\n//                                 console.log('got data', data);\n//                                 toast.success((t('organization.levels.toast_add_success')), {\n//                                     position: toast.POSITION.BOTTOM_RIGHT\n//                                   })\n//                               }).catch((error) => {\n//                                 toast.error((t('general.toast_server_error')) +  error, {\n//                                     position: toast.POSITION.BOTTOM_RIGHT\n//                                   })\n//                                 console.log('there was an error sending the query', error)\n//                                 setSubmitting(false)\n//                               })\n//                         }}\n//                         >\n//                         {({ isSubmitting, errors }) => (\n//                             <OrganizationLevelForm \n//                               isSubmitting={isSubmitting}\n//                               errors={errors}\n//                               return_url={return_url}\n//                             />\n//                         )}\n//                     </Formik>\n//                 )}\n//                 </Mutation>\n//           </Card>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"organizationlevel\">\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(return_url)}>\n//                 <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <OrganizationMenu activeLink='levels'/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// )\n\n// export default withTranslation()(withRouter(OrganizationLevelAdd))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const LEVEL_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { \n  Formik,\n  Form as FoForm, \n  Field, \n  ErrorMessage \n} from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { UPDATE_DOCUMENT, GET_DOCUMENT_QUERY, GET_DOCUMENTS_QUERY } from \"./queries\"\nimport { DOCUMENT_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from \"../../../tools/date_tools\"\n// import OrganizationDocumentForm from './OrganizationDocumentForm'\nimport CSDatePicker from \"../../ui/CSDatePicker\"\n\nimport {\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationDocumentsBase from \"./OrganizationDocumentsBase\"\nimport { getSubtitle } from './tools'\n\n\nfunction OrganizationDocumentEdit({ t, match, history }) {\n  const organizationId = match.params.organization_id\n  const documentType = match.params.document_type\n  const id = match.params.id\n  const subTitle = getSubtitle(t, documentType)\n  \n  const returnUrl = `/organization/documents/${organizationId}/${documentType}`\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"change\"\n    resource=\"organizationdocument\">\n      <Link to={returnUrl} >\n        <Button color=\"primary btn-block mb-6\" >\n          <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n        </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  const [updateDocument, { data: dataUpdate }] = useMutation(UPDATE_DOCUMENT, {\n    onCompleted: () => history.push(returnUrl)\n  })\n  const { loading, error, data } = useQuery(GET_DOCUMENT_QUERY, {\n    variables: { \"id\": id }\n  })\n\n  if (loading) {\n    return (\n      <OrganizationDocumentsBase sidebarButton={sidebarButton}>\n        {t(\"general.loading_with_dots\")}\n      </OrganizationDocumentsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <OrganizationDocumentsBase sidebarButton={sidebarButton}>\n        {t(\"organization.documents.error_loading\")}\n      </OrganizationDocumentsBase>\n    )\n  }\n\n\n  return (\n    <OrganizationDocumentsBase sidebarButton={sidebarButton}>\n      <Card>\n        <Card.Header>\n          <Card.Title>\n            {t('organization.documents.edit') + ' - ' + subTitle}\n          </Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            version: data.organizationDocument.version,\n            dateStart: data.organizationDocument.dateStart, \n            dateEnd: data.organizationDocument.dateEnd,\n          }}\n          // validationSchema={DOCUMENT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log(\"Submit values\")\n            console.log(values)\n\n            let inputVars = {\n              id: id,\n              version: values.version,\n              dateStart: dateToLocalISO(values.dateStart),\n            }\n\n            if (values.dateEnd) {\n              inputVars.dateEnd = dateToLocalISO(values.dateEnd)\n            }\n\n            updateDocument({ variables: {\n              input: inputVars\n            }, refetchQueries: [\n                {query: GET_DOCUMENTS_QUERY, variables: {documentType: documentType}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('organization.documents.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                  setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <FoForm>\n            <Card.Body>\n              <Grid.Row>\n                <Grid.Col>\n                  <Form.Group label={t('general.version')}>\n                    <Field type=\"text\" \n                          name=\"version\" \n                          className={(errors.version) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\" />\n                    <ErrorMessage name=\"version\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n                {/* <Grid.Col>\n                  <Form.Group label={t('general.custom_file_input_label')}>\n                    <div className=\"custom-file\">\n                      <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                      <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                        {fileInputLabel}\n                      </label>\n                    </div>\n                  </Form.Group>\n                </Grid.Col> */}\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col>\n                  <Form.Group label={t('general.date_start')}>\n                    <CSDatePicker \n                      selected={values.dateStart}\n                      onChange={(date) => setFieldValue(\"dateStart\", date)}\n                      onBlur={() => setFieldTouched(\"dateStart\", true)}\n                    />\n                    <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n                <Grid.Col>\n                  <Form.Group label={t('general.date_end')}>\n                    <CSDatePicker \n                      selected={values.dateEnd}\n                      onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                      onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                    />\n                    <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n              </Grid.Row>\n            </Card.Body>\n            <Card.Footer>\n              <Button \n                color=\"primary\"\n                className=\"pull-right\" \n                type=\"submit\" \n                disabled={isSubmitting}\n              >\n                {t('general.submit')}\n              </Button>\n              <Button color=\"link\" onClick={() => history.push(returnUrl)}>\n                {t('general.cancel')}\n              </Button>\n            </Card.Footer>\n          </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationDocumentsBase>\n  )\n}\n\nexport default withTranslation()(OrganizationDocumentEdit)\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationHolidaysBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/holidays\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>  \n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationholiday\">\n                  <Link to=\"/organization/holidays/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.holidays.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }     \n              <OrganizationMenu activeLink='holidays'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationHolidaysBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_HOLIDAYS_QUERY = gql`\n  query OrganizationHolidays($after: String, $before: String) {\n    organizationHolidays(first: 15, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          description\n          dateStart\n          dateEnd\n          classes\n          organizationLocations {\n            edges {\n              node {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_HOLIDAY_QUERY = gql`\n  query OrganizationHoliday($id: ID!) {\n    organizationHoliday(id:$id) {\n      id\n      name\n      description\n      dateStart\n      dateEnd\n      classes\n    }\n  }\n`\n\nexport const ADD_HOLIDAY = gql`\n  mutation CreateOrganizationHoliday($input:CreateOrganizationHolidayInput!) {\n    createOrganizationHoliday(input: $input) {\n      organizationHoliday {\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_HOLIDAY = gql`\n  mutation UpdateOrganizationHoliday($input: UpdateOrganizationHolidayInput!) {\n    updateOrganizationHoliday(input: $input) {\n      organizationHoliday {\n        id\n        name\n      }\n    }\n  }\n`\n\nexport const DELETE_HOLIDAY = gql`\n  mutation DeleteOrganizationHoliday($input: DeleteOrganizationHolidayInput!) {\n    deleteOrganizationHoliday(input: $input) {\n      ok\n    }\n  }\n`\n\nexport const GET_HOLIDAY_LOCATIONS_QUERY = gql`\n  query GetOrganizationHolidayLocations($after: String, $before: String, $id:ID!) {\n    organizationLocations(first: 100, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    organizationHoliday(id: $id) {\n      id\n      name\n      description\n      organizationLocations {\n        edges {\n          node {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const ADD_LOCATION_TO_HOLIDAY = gql`\n  mutation AddLocationToHoliday($input: CreateOrganizationHolidayLocationInput!) {\n    createOrganizationHolidayLocation(input:$input) {\n      organizationHolidayLocation {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_LOCATION_FROM_HOLIDAY = gql`\n  mutation DeleteLocationFromHoliday($input: DeleteOrganizationHolidayLocationInput!) {\n    deleteOrganizationHolidayLocation(input:$input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from \"moment\"\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\n\nimport {\n  Badge,\n  Icon,\n  Dimmer,\n  Button,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationHolidaysBase from './OrganizationHolidaysBase'\n\nimport { GET_HOLIDAYS_QUERY, DELETE_HOLIDAY } from \"./queries\"\n\n\nfunction OrganizationHolidays({t, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  const cardTitle = t('organization.holidays.title')\n  \n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_HOLIDAYS_QUERY)\n  const [ deleteHoliday ] = useMutation(DELETE_HOLIDAY)\n\n  if (loading) return (\n    <OrganizationHolidaysBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n\n  if (error) return (\n    <OrganizationHolidaysBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.holidays.error_loading')}</p>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n\n  let holidays = data.organizationHolidays\n\n  // Empty list\n  if (!holidays.edges.length) { return (\n    <OrganizationHolidaysBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.holidays.empty_list')}</p>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )}\n\n\n  return (\n    <OrganizationHolidaysBase>\n      <ContentCard \n        cardTitle={cardTitle}\n        pageInfo={holidays.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: holidays.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.organizationHolidays.edges\n            const pageInfo = fetchMoreResult.organizationHolidays.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new levels at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  organizationHolidays: {\n                    __typename: previousResult.organizationHolidays.__typename,\n                    edges: [ ...previousResult.organizationHolidays.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n          }\n        })\n      }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n              <Table.ColHeader>{t('organization.locations.title')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {holidays.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name} \n                    <div className=\"text-muted\">\n                      <small dangerouslySetInnerHTML={{__html: node.description}} />\n                    </div>\n                  </Table.Col>\n                  <Table.Col>\n                    {moment(node.dateStart).format(dateFormat)}\n                  </Table.Col>\n                  <Table.Col>\n                    {moment(node.dateEnd).format(dateFormat)}\n                  </Table.Col>\n                  <Table.Col>\n                    {node.organizationLocations.edges.map(({ node: location }) => (\n                       <div><Badge color=\"primary\" className=\"mr-1\">{location.name}</Badge></div>\n                    ))}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={`/organization/holidays/edit/${node.id}/locations`}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('organization.holidays.locations.title_edit')}\n                      </Button>\n                    </Link>\n                    <Link to={`/organization/holidays/edit/${node.id}`}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"organization.holidays.holiday_delete_confirm_msg\"),\n                          msgDescription: <p>{node.name}</p>,\n                          msgSuccess: t('organization.holidays.payment_deleted'),\n                          deleteFunction: deleteHoliday,\n                          functionVariables: { \n                            variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, \n                            refetchQueries: [\n                              {query: GET_HOLIDAYS_QUERY },\n                            ]\n                          }\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n}\n\n\n\nexport default withTranslation()(withRouter(OrganizationHolidays))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const HOLIDAY_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid,\n  } from \"tabler-react\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"  \nimport CSDatePicker from \"../../ui/CSDatePicker\"\n\nconst OrganizationHolidayForm = ({ t, history, isSubmitting, values, errors, setFieldTouched, setFieldValue, returnUrl }) => (\n    <FoForm>\n        <Card.Body>\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Grid.Row>\n              <Grid.Col>\n                <Form.Group label={t('general.date_start')}>\n                  <CSDatePicker \n                      className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                      selected={values.dateStart}\n                      onChange={(date) => {\n                      setFieldValue(\"dateStart\", date)\n                      setFieldTouched(\"dateStart\", true)\n                      }}\n                      onBlur={() => setFieldTouched(\"dateStart\", true)}\n                  />\n                  <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n                <Grid.Col>\n                  <Form.Group label={t('general.date_end')}>\n                    <CSDatePicker \n                      selected={values.dateEnd}\n                      onChange={(date) => {\n                          setFieldValue(\"dateEnd\", date)\n                          setFieldTouched(\"dateEnd\", true)\n                      }}\n                      onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                      placeholderText={t('general.date_end')}\n                    />\n                    <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n              </Grid.Row>\n            <h5>{t(\"general.apply_to\")}</h5>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"classes\" \n                  checked={values.classes} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('general.classes')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"classes\" component=\"div\" />   \n            </Form.Group>  \n          <Form.Group label={t('general.description')}>\n            <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"description\"\n                initialValue={values.description}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                    setFieldValue(\"description\", e.target.getContent())\n                    setFieldTouched(\"description\", true, true)\n                }}\n                />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Card.Body>\n        <Card.Footer>\n            <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n            >\n            {t('general.submit')}\n            </Button>\n            <Link to={returnUrl}>\n                <Button color=\"link\">\n                    {t('general.cancel')}\n                </Button>\n            </Link>\n        </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationHolidayForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport { dateToLocalISO } from \"../../../tools/date_tools\"\n\nimport { GET_HOLIDAYS_QUERY, ADD_HOLIDAY } from './queries'\nimport { HOLIDAY_SCHEMA } from './yupSchema'\nimport OrganizationHolidayForm from './OrganizationHolidayForm'\nimport OrganizationHolidaysBase from './OrganizationHolidaysBase';\n\n\nfunction OrganizationHolidayAdd({t, history}) {\n  const returnUrl = \"/organization/holidays\"\n  const [ addHoliday ] = useMutation(ADD_HOLIDAY)\n  \n  return (\n   <OrganizationHolidaysBase showBack={true}>\n    <Card>\n      <Card.Header>\n        <Card.Title>{t('organization.holidays.title_add')}</Card.Title>\n      </Card.Header>\n      <Formik\n          initialValues={{ name: '', description: '', classes: true }}\n          validationSchema={HOLIDAY_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addHoliday({ variables: {\n                input: {\n                  name: values.name, \n                  dateStart: dateToLocalISO(values.dateStart),\n                  dateEnd: dateToLocalISO(values.dateEnd),\n                  description: values.description,\n                  classes: values.classes,\n                }\n              }, refetchQueries: [\n                  {query: GET_HOLIDAYS_QUERY}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.holidays.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, values, errors, setFieldTouched, setFieldValue }) => (\n            <OrganizationHolidayForm \n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              returnUrl={returnUrl}\n            />\n          )}\n      </Formik>\n    </Card>\n   </OrganizationHolidaysBase> \n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationHolidayAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_HOLIDAYS_QUERY, GET_HOLIDAY_QUERY, UPDATE_HOLIDAY } from './queries'\nimport { HOLIDAY_SCHEMA } from './yupSchema'\nimport OrganizationHolidayForm from './OrganizationHolidayForm'\n\nimport { dateToLocalISO } from \"../../../tools/date_tools\"\n\nimport {\n  Dimmer,\n  Card,\n} from \"tabler-react\";\nimport OrganizationHolidaysBase from './OrganizationHolidaysBase';\nimport ContentCard from \"../../general/ContentCard\"\n\n\nfunction OrganizationHolidayEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('organization.holidays.title_edit')\n  const returnUrl = \"/organization/holidays\"\n  const { loading, error, data } = useQuery(GET_HOLIDAY_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateHoliday ] = useMutation(UPDATE_HOLIDAY)\n\n  if (loading) return (\n    <OrganizationHolidaysBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n\n  if (error) return (\n    <OrganizationHolidaysBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n                    \n  const initialData = data.organizationHoliday;\n  console.log('query data')\n  console.log(data)\n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  if (initialData.dateStart) {\n    dateStart = new Date(initialData.dateStart)\n  }\n  let dateEnd = null\n  if (initialData.dateEnd) {\n    dateEnd = new Date(initialData.dateEnd)\n  }\n\n\n  return (\n    <OrganizationHolidaysBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n              description: initialData.description,\n              dateStart: dateStart,\n              dateEnd: dateEnd,\n              classes: initialData.classes\n            }}\n            validationSchema={HOLIDAY_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateHoliday({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                    description: values.description,\n                    dateStart: dateToLocalISO(values.dateStart),\n                    dateEnd: dateToLocalISO(values.dateEnd)\n                  }\n                }, refetchQueries: [\n                    {query: GET_HOLIDAYS_QUERY}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.holidays.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, values, errors, setFieldTouched, setFieldValue }) => (\n              <OrganizationHolidayForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                values={values}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                returnUrl={returnUrl}\n              />\n            )}\n        </Formik>\n      </Card>\n    </OrganizationHolidaysBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationHolidayEdit))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { toast } from 'react-toastify'\n\nimport { GET_HOLIDAY_LOCATIONS_QUERY, ADD_LOCATION_TO_HOLIDAY, DELETE_LOCATION_FROM_HOLIDAY } from './queries'\n\nimport {\n  Dimmer,\n  Alert,\n  Icon,\n  Button,\n  Card,\n  Table,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationHolidaysBase from './OrganizationHolidaysBase';\n\n\nfunction OrganizationHolidayEditLocations({ t, match, history }) {\n  const holidayId = match.params.id\n  const returnUrl = \"/organization/holidays\"\n  let cardTitle = t('organization.holidays.locations.title_edit')\n  const { loading, error, data } = useQuery(GET_HOLIDAY_LOCATIONS_QUERY, { \n    variables: { id: holidayId }\n  })\n  const [ addLocationToHoliday ] = useMutation(ADD_LOCATION_TO_HOLIDAY)\n  const [ deleteLocationFromHoliday ] = useMutation(DELETE_LOCATION_FROM_HOLIDAY)\n\n  // Loading\n  if (loading) return (\n    <OrganizationHolidaysBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationHolidaysBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const locations = data.organizationLocations\n  const holiday = data.organizationHoliday\n\n  let holiday_locations = {}\n  if (holiday.organizationLocations.edges) {\n    holiday.organizationLocations.edges.map(({ node}) => (\n      holiday_locations[node.id] = true\n    ))\n  }\n\n  cardTitle = cardTitle + \" - \" + holiday.name\n\n  return (\n    <OrganizationHolidaysBase showBack={true}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <Table>\n            <Table.Header>\n              <Table.Row key={v4()}>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {locations.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {(node.id in holiday_locations) ? \n                        <Icon name=\"check-circle\" className=\"text-green\" /> : <Icon name=\"x-circle\" className=\"text-red\" />\n                      }\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.name}\n                    </Table.Col>\n                    {console.log((node.id in holiday_locations))}\n                    {(!(node.id in holiday_locations)) ?\n                      // Add\n                      <Table.Col className=\"text-right text-green\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('organization.holiday.locations.add_to_holiday')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked add\")\n                            let locationId = node.id\n                            addLocationToHoliday({ variables: {\n                              input: {\n                                organizationHoliday: holidayId,\n                                organizationLocation: locationId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_HOLIDAY_LOCATIONS_QUERY, variables: {\"id\": holidayId }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('organization.holiday.locations.added_to_holiday'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"plus-circle\" /> { ' ' }\n                          {t('organization.holiday.locations.add_to_holiday')} \n                        </Button>\n                      </Table.Col>\n                      :\n                      // Delete\n                      <Table.Col className=\"text-right text-red\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('organization.holiday.locations.delete_from_holiday')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked delete\")\n                            console.log(node.id)\n                            let locationId = node.id\n                            deleteLocationFromHoliday({ variables: {\n                              input: {\n                                organizationHoliday: holidayId,\n                                organizationLocation: locationId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_HOLIDAY_LOCATIONS_QUERY, variables: {\"id\": holidayId }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('organization.holiday.locations.deleted_from_holiday'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"minus-circle\" /> { ' ' }\n                          {t('organization.holiday.locations.delete_from_holiday')}\n                        </Button>\n                      </Table.Col>\n                      }\n                  </Table.Row>\n                ))}\n            </Table.Body>\n          </Table>\n        </Card.Body>\n      </Card>\n    </OrganizationHolidaysBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationHolidayEditLocations))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationLanguagesBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/languages\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>  \n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationlanguage\">\n                  <Link to=\"/organization/languages/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.languages.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }     \n              <OrganizationMenu activeLink='languages'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLanguagesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_LANGUAGES_QUERY = gql`\n  query OrganizationLanguages($after: String, $before: String, $archived: Boolean) {\n    organizationLanguages(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_LANGUAGE_QUERY = gql`\n  query OrganizationLanguage($id: ID!) {\n    organizationLanguage(id:$id) {\n      id\n      name\n      archived\n    }\n  }\n`\n\nexport const ADD_LANGUAGE = gql`\nmutation CreateOrganizationLanguage($input:CreateOrganizationLanguageInput!) {\n  createOrganizationLanguage(input: $input) {\n    organizationLanguage{\n      id\n      archived\n      name\n    }\n  }\n}\n`\n\nexport const UPDATE_LANGUAGE = gql`\nmutation UpdateOrganizationLanguage($input: UpdateOrganizationLanguageInput!) {\n  updateOrganizationLanguage(input: $input) {\n    organizationLanguage {\n      id\n      name\n    }\n  }\n}\n`\n\nexport const ARCHIVE_LANGUAGE = gql`\nmutation ArchiveOrganizationLanguage($input: ArchiveOrganizationLanguageInput!) {\n  archiveOrganizationLanguage(input: $input) {\n    organizationLanguage {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationLanguagesBase from './OrganizationLanguagesBase'\n\nimport { GET_LANGUAGES_QUERY, ARCHIVE_LANGUAGE } from \"./queries\"\n\n\nfunction OrganizationLanguages({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('organization.languages.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_LANGUAGES_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveLanguage ] = useMutation(ARCHIVE_LANGUAGE)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <OrganizationLanguagesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )\n\n  if (error) return (\n    <OrganizationLanguagesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.languages.error_loading')}</p>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )\n\n  let languages = data.organizationLanguages\n\n  // Empty list\n  if (!languages.edges.length) { return (\n    <OrganizationLanguagesBase>\n      <ContentCard cardTitle={t('organization.languages.title')}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('organization.languages.empty_list') : t(\"organization.languages.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )}\n\n\n  return (\n    <OrganizationLanguagesBase>\n      <ContentCard \n        cardTitle={cardTitle}\n        headerContent={headerOptions}\n        pageInfo={languages.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: languages.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.organizationLanguages.edges\n            const pageInfo = fetchMoreResult.organizationLanguages.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new languages at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  organizationLanguages: {\n                    __typename: previousResult.organizationLanguages.__typename,\n                    edges: [ ...previousResult.organizationLanguages.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n          }\n        })\n      }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {languages.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/organization/languages/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveLanguage({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_LANGUAGES_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fe\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLanguages))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const LANGUAGE_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nconst OrganizationLanguageForm = ({ t, history, isSubmitting, errors, returnUrl }) => (\n    <FoForm>\n        <Card.Body>\n            <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n        </Card.Body>\n        <Card.Footer>\n            <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n            >\n            {t('general.submit')}\n            </Button>\n            <Link to={returnUrl}>\n                <Button color=\"link\">\n                    {t('general.cancel')}\n                </Button>\n            </Link>\n        </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationLanguageForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_LANGUAGES_QUERY, ADD_LANGUAGE } from './queries'\nimport { LANGUAGE_SCHEMA } from './yupSchema'\nimport OrganizationLanguageForm from './OrganizationLanguageForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport OrganizationLanguagesBase from './OrganizationLanguagesBase';\n\n\nfunction OrganizationLanguageAdd({t, history}) {\n  const returnUrl = \"/organization/languages\"\n  const [ addLanguage ] = useMutation(ADD_LANGUAGE)\n  \n  return (\n   <OrganizationLanguagesBase showBack={true}>\n    <Card>\n      <Card.Header>\n        <Card.Title>{t('organization.languages.title_add')}</Card.Title>\n      </Card.Header>\n      <Formik\n          initialValues={{ name: '', code: '' }}\n          validationSchema={LANGUAGE_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addLanguage({ variables: {\n                input: {\n                  name: values.name, \n                }\n              }, refetchQueries: [\n                  {query: GET_LANGUAGES_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.languages.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n            <OrganizationLanguageForm \n              isSubmitting={isSubmitting}\n              errors={errors}\n              returnUrl={returnUrl}\n            />\n          )}\n      </Formik>\n    </Card>\n   </OrganizationLanguagesBase> \n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLanguageAdd))","import React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_LANGUAGES_QUERY, GET_LANGUAGE_QUERY, UPDATE_LANGUAGE } from './queries'\nimport { LANGUAGE_SCHEMA } from './yupSchema'\nimport OrganizationLanguageForm from './OrganizationLanguageForm'\n\nimport {\n  Dimmer,\n  Card,\n} from \"tabler-react\";\nimport OrganizationLanguagesBase from './OrganizationLanguagesBase';\nimport ContentCard from \"../../general/ContentCard\"\n\n\nfunction OrganizationLanguageEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('organization.languages.title_edit')\n  const returnUrl = \"/organization/languages\"\n  const { loading, error, data } = useQuery(GET_LANGUAGE_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateLanguage ] = useMutation(UPDATE_LANGUAGE)\n\n  if (loading) return (\n    <OrganizationLanguagesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )\n\n  if (error) return (\n    <OrganizationLanguagesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )\n                    \n  const initialData = data.organizationLanguage;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationLanguagesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n            }}\n            validationSchema={LANGUAGE_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateLanguage({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                  }\n                }, refetchQueries: [\n                    {query: GET_LANGUAGES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.languages.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n              <OrganizationLanguageForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n            )}\n        </Formik>\n      </Card>\n    </OrganizationLanguagesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLanguageEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_LOCATIONS_QUERY = gql`\n  query OrganizationLocations($after: String, $before: String, $archived: Boolean) {\n    organizationLocations(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id,\n          archived,\n          displayPublic,\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_LOCATION_QUERY = gql`\n  query OrganizationLocation($id: ID!) {\n    organizationLocation(id:$id) {\n      id\n      name\n      displayPublic\n      archived\n    }\n  }\n`\n\nexport const ADD_LOCATION = gql`\nmutation CreateOrganizationLocation($input: CreateOrganizationLocationInput!) {\n  createOrganizationLocation(input: $input) {\n    organizationLocation {\n      id\n      archived\n      displayPublic\n      name\n    }\n  }\n}\n`\n\nexport const UPDATE_LOCATION = gql`\nmutation UpdateOrganizationLocation($input: UpdateOrganizationLocationInput!) {\n  updateOrganizationLocation(input: $input) {\n    organizationLocation {\n      id\n      name\n      displayPublic\n    }\n  }\n}\n`\n\nexport const ARCHIVE_LOCATION = gql`\nmutation ArchiveOrganizationLocation($input: ArchiveOrganizationLocationInput!) {\n  archiveOrganizationLocation(input: $input) {\n    organizationLocation {\n      id\n      archived\n    }\n  }\n}\n`\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationLocationsBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title=\"Organization\" />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ? \n                <Link to=\"/organization/locations\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button> \n                </Link>\n                :\n                <HasPermissionWrapper permission=\"add\"\n                                resource=\"organizationlocation\">\n                  <Link to=\"/organization/locations/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.locations.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <OrganizationMenu activeLink='locations'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>  \n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLocationsBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\n\nimport { GET_LOCATIONS_QUERY, ARCHIVE_LOCATION } from \"./queries\"\nimport OrganizationLocationsBase from \"./OrganizationLocationsBase\"\n\nfunction OrganizationLocations({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('organization.locations.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_LOCATIONS_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveLocation ] = useMutation(ARCHIVE_LOCATION)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  // Loading\n  if (loading) return (\n    <OrganizationLocationsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationLocationsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.locations.error_loading')}</p>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )\n\n  let locations = data.organizationLocations\n\n  // Empty list\n  if (!locations.edges.length) { return (\n    <OrganizationLocationsBase>\n      <ContentCard cardTitle={cardTitle}\n                  headerContent={headerOptions}>\n        <p>\n        {(!archived) ? t('organization.locations.empty_list') : t(\"organization.locations.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )}\n\n  return (\n    <OrganizationLocationsBase>\n      <ContentCard cardTitle={cardTitle}\n                headerContent={headerOptions}\n                pageInfo={locations.pageInfo}\n                onLoadMore={() => {\n                fetchMore({\n                  variables: {\n                    after: locations.pageInfo.endCursor\n                  },\n                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                    const newEdges = fetchMoreResult.organizationLocations.edges\n                    const pageInfo = fetchMoreResult.organizationLocations.pageInfo\n\n                    return newEdges.length\n                      ? {\n                          // Put the new locations at the end of the list and update `pageInfo`\n                          // so we have the new `endCursor` and `hasNextPage` values\n                          organizationLocations: {\n                            __typename: previousResult.organizationLocations.__typename,\n                            edges: [ ...previousResult.organizationLocations.edges, ...newEdges ],\n                            pageInfo\n                          }\n                        }\n                      : previousResult\n                  }\n                })\n              }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {locations.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.displayPublic) ? \n                      <Badge color=\"success\">{t('general.yes')}</Badge>: \n                      <Badge color=\"danger\">{t('general.no')}</Badge>}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <div>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/locations/edit/\" + node.id)}\n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/locations/rooms/\" + node.id)}\n                                color=\"secondary\">\n                          {t('general.rooms')}\n                        </Button>\n                      </div>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveLocation({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_LOCATIONS_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLocations))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const LOCATION_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_LOCATIONS_QUERY, ADD_LOCATION } from './queries'\nimport { LOCATION_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport OrganizationLocationsBase from \"./OrganizationLocationsBase\"\n\nfunction OrganizationLocationAdd({ t, history }) {\n  const returnUrl = \"/organization/locations\"\n  const cardTitle = t('organization.locations.title_add')\n  const [ addLocation ] = useMutation(ADD_LOCATION)\n\n  return (\n    <OrganizationLocationsBase showBack={true}>\n      <Card>    \n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: '', displayPublic: true }}\n          validationSchema={LOCATION_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addLocation({ variables: {\n                input: {\n                  name: values.name, \n                  displayPublic: values.displayPublic\n                }\n              }, refetchQueries: [\n                  {query: GET_LOCATIONS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.locations.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <FoForm>\n                <Card.Body>\n                    <Form.Group>\n                      <Form.Label className=\"custom-switch\">\n                        <Field \n                          className=\"custom-switch-input\"\n                          type=\"checkbox\" \n                          name=\"displayPublic\" \n                          checked={values.displayPublic} />\n                        <span className=\"custom-switch-indicator\" ></span>\n                        <span className=\"custom-switch-description\">{t('organization.location.public')}</span>\n                      </Form.Label>\n                      <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                    </Form.Group>    \n\n                    <Form.Group label={t('general.name')}>\n                      <Field type=\"text\" \n                              name=\"name\" \n                              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                      <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                </Card.Body>\n                <Card.Footer>\n                    <Button \n                      color=\"primary\"\n                      className=\"pull-right\" \n                      type=\"submit\" \n                      disabled={isSubmitting}\n                    >\n                      {t('general.submit')}\n                    </Button>\n                    <Link to={returnUrl}>\n                      <Button color=\"link\">\n                          {t('general.cancel')}\n                      </Button>\n                    </Link>\n                </Card.Footer>\n            </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationLocationsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLocationAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_LOCATIONS_QUERY, GET_LOCATION_QUERY, UPDATE_LOCATION } from './queries'\nimport { LOCATION_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationLocationsBase from \"./OrganizationLocationsBase\"\n\n\nfunction OrganizationLocationEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('organization.locations.title_edit')\n  const returnUrl = \"/organization/locations\"\n  const { loading, error, data } = useQuery(GET_LOCATION_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateLocation ] = useMutation(UPDATE_LOCATION)\n\n  // Loading\n  if (loading) return (\n    <OrganizationLocationsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationLocationsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.locations.error_loading')}</p>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )\n\n  const initialData = data.organizationLocation;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationLocationsBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n          {console.log(match.params.id)}\n        </Card.Header>                    \n        <Formik\n            initialValues={{ \n              name: initialData.name, \n              displayPublic: initialData.displayPublic \n            }}\n            validationSchema={LOCATION_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateLocation({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                    displayPublic: values.displayPublic \n                  }\n                }, refetchQueries: [\n                    {query: GET_LOCATIONS_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.locations.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values }) => (\n              <FoForm>\n                  <Card.Body>\n                      <Form.Group>\n                        <Form.Label className=\"custom-switch\">\n                          <Field \n                            className=\"custom-switch-input\"\n                            type=\"checkbox\" \n                            name=\"displayPublic\" \n                            checked={values.displayPublic} />\n                          <span className=\"custom-switch-indicator\" ></span>\n                          <span className=\"custom-switch-description\">{t('organization.location.public')}</span>\n                        </Form.Label>\n                        <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                      </Form.Group>     \n                      <Form.Group label={t('general.name')} >\n                        <Field type=\"text\" \n                              name=\"name\" \n                              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                  </Card.Body>\n                  <Card.Footer>\n                      <Button \n                        className=\"pull-right\"\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                        type=\"submit\"\n                      >\n                        {t('general.submit')}\n                      </Button>\n                      <Link to={returnUrl}>\n                        <Button\n                          type=\"button\" \n                          color=\"link\" \n                        >\n                            {t('general.cancel')}\n                        </Button>\n                      </Link>\n                    </Card.Footer>\n                </FoForm>\n              )}\n            </Formik>\n          </Card>\n    </OrganizationLocationsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLocationEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_LOCATION_ROOMS_QUERY = gql`\n  query OrganizationLocationRooms($after: String, $before: String, $organizationLocation: ID!, $archived: Boolean!) {\n    organizationLocationRooms(first: 15, before: $before, after: $after, organizationLocation: $organizationLocation, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationLocation {\n            id\n            name\n          }\n          archived,\n          displayPublic\n          name\n        }\n      }\n    }\n    organizationLocation(id: $organizationLocation) {\n      id\n      name\n    }\n  }\n`\n\nexport const GET_LOCATION_ROOM_QUERY = gql`\n  query OrganizationLocationRoom($id: ID!) {\n    organizationLocationRoom(id:$id) {\n      id\n      organizationLocation {\n        id\n        name\n      }\n      name\n      displayPublic\n      archived\n    }\n  }\n`\n\nexport const ADD_LOCATION_ROOM = gql`\n  mutation CreateOrganizationLocationRoom($input: CreateOrganizationLocationRoomInput!) {\n    createOrganizationLocationRoom(input: $input) {\n      organizationLocationRoom {\n        id\n        organizationLocation {\n          id\n          name\n        }\n        archived\n        displayPublic\n        name\n      }\n    }\n  }\n`\n\nexport const UPDATE_LOCATION_ROOM = gql`\nmutation UpdateOrganizationLocationRoom($input: UpdateOrganizationLocationRoomInput!) {\n  updateOrganizationLocationRoom(input: $input) {\n    organizationLocationRoom {\n      id\n      organizationLocation {\n        id\n        name\n      }\n      name\n      displayPublic\n    }\n  }\n}\n`\n\nexport const ARCHIVE_LOCATION_ROOM = gql`\nmutation ArchiveOrganizationLocationRoom($input: ArchiveOrganizationLocationRoomInput!) {\n  archiveOrganizationLocationRoom(input: $input) {\n    organizationLocationRoom {\n      id\n      archived\n    }\n  }\n}\n`","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nfunction OrganizationLocationRoomsBase({t, history, match, children, showBack=false}) {\n  const locationId = match.params.location_id\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/locations\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.locations.title')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to={`/organization/locations/rooms/${locationId}`}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationlocationroom\">\n                  <Link to={`/organization/locations/rooms/add/${match.params.location_id}`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.location_rooms.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n            <OrganizationMenu activeLink='locations'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>        \n)}\n\n\nexport default withTranslation()(withRouter(OrganizationLocationRoomsBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Alert,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport { GET_LOCATION_ROOMS_QUERY, ARCHIVE_LOCATION_ROOM } from \"./queries\"\nimport OrganizationLocationRoomsBase from './OrganizationLocationRoomsBase'\n\n\nfunction OrganizationLocationsRooms({ t, history, match }) {\n  const organizationLocationId = match.params.location_id\n  const cardTitle = t('organization.location_rooms.title')\n  let [archived, setArchived] = useState(false)\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_LOCATION_ROOMS_QUERY, {\n    variables: { archived: archived, organizationLocation: organizationLocationId }\n  })\n  const [ archiveLocationRoom ] = useMutation(ARCHIVE_LOCATION_ROOM)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  // Loading\n  if (loading) return (\n    <OrganizationLocationRoomsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationLocationRoomsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.location_rooms.error_loading')}</p>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )\n\n  let locationRooms = data.organizationLocationRooms\n  let location = data.organizationLocation\n\n  // Empty list\n  if (!locationRooms.edges.length) { return (\n    <OrganizationLocationRoomsBase>\n      <ContentCard cardTitle={cardTitle}\n                  headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('organization.location_rooms.empty_list') : t(\"organization.location_rooms.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )}\n\n  return (\n    <OrganizationLocationRoomsBase>\n      <ContentCard \n        cardTitle={cardTitle}\n                    headerContent={headerOptions}\n                    pageInfo={locationRooms.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: locationRooms.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationLocationsRooms.edges\n                        const pageInfo = fetchMoreResult.organizationLocationsRooms.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new locations at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationLocationsRooms: {\n                                __typename: previousResult.organizationLocationsRooms.__typename,\n                                edges: [ ...previousResult.organizationLocationsRooms.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <div>\n          <Alert type=\"primary\">\n            <strong>{t('general.location')}</strong> {location.name}\n          </Alert>\n\n          <Table>\n            <Table.Header>\n              <Table.Row key={v4()}>\n                <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {locationRooms.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {node.name}\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {(node.displayPublic) ? \n                        <Badge color=\"success\">{t('general.yes')}</Badge>: \n                        <Badge color=\"danger\">{t('general.no')}</Badge>}\n                    </Table.Col>\n                    <Table.Col className=\"text-right\" key={v4()}>\n                      {(node.archived) ? \n                        <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/locations/rooms/edit/\" + match.params.location_id + '/' + node.id)}\n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                      }\n                    </Table.Col>\n                      <Table.Col className=\"text-right\" key={v4()}>\n                        <button className=\"icon btn btn-link btn-sm\" \n                            title={t('general.archive')} \n                            href=\"\"\n                            onClick={() => {\n                              console.log(\"clicked archived\")\n                              let id = node.id\n                              archiveLocationRoom({ variables: {\n                                input: {\n                                id,\n                                archived: !archived\n                                }\n                        }, refetchQueries: [\n                            { \n                              query: GET_LOCATION_ROOMS_QUERY, \n                              variables: {archived: archived, organizationLocation: organizationLocationId }\n                            }\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(\n                            (archived) ? t('general.unarchived'): t('general.archived'), {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fa\" name=\"inbox\" />\n                        </button>\n                      </Table.Col>\n                  </Table.Row>\n                ))}\n            </Table.Body>\n          </Table>\n          </div>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLocationsRooms))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const LOCATION_ROOM_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst OrganizationLocationRoomForm = ({ t, history, match, isSubmitting, errors, values, returnUrl }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"displayPublic\" \n                checked={values.displayPublic} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('organization.location_room.public')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n          </Form.Group>    \n\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(OrganizationLocationRoomForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_LOCATION_ROOMS_QUERY, ADD_LOCATION_ROOM } from './queries'\nimport { LOCATION_ROOM_SCHEMA } from './yupSchema'\nimport OrganizationLocationRoomForm from './OrganizationLocationRoomForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\nimport OrganizationLocationRoomsBase from './OrganizationLocationRoomsBase';\n\n\nfunction OrganizationLocationRoomAdd({ t, history, match }) {\n  const locationId = match.params.location_id\n  const returnUrl = `/organization/locations/rooms/${locationId}`\n  const [ addLocationRoom ] = useMutation(ADD_LOCATION_ROOM)\n\n  return (\n    <OrganizationLocationRoomsBase showBack={true}>\n      <Card title={t(\"organization.location_rooms.title_add\")}>\n        <Formik\n          initialValues={{ name: '', displayPublic: true }}\n          validationSchema={LOCATION_ROOM_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addLocationRoom({ variables: {\n                input: {\n                  organizationLocation: locationId,\n                  name: values.name, \n                  displayPublic: values.displayPublic\n                }\n              }, refetchQueries: [\n                  {query: GET_LOCATION_ROOMS_QUERY,\n                    variables: {\"archived\": false, \"organizationLocation\": locationId }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.location_rooms.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <OrganizationLocationRoomForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationLocationRoomsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLocationRoomAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_LOCATION_ROOMS_QUERY, GET_LOCATION_ROOM_QUERY, UPDATE_LOCATION_ROOM } from './queries'\nimport { LOCATION_ROOM_SCHEMA } from './yupSchema'\nimport OrganizationLocationRoomForm from './OrganizationLocationRoomForm'\n\nimport {\n  Card,\n  Dimmer\n} from \"tabler-react\";\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport OrganizationLocationRoomsBase from './OrganizationLocationRoomsBase'\n\n\nfunction OrganizationLocationRoomEdit({t, history, match}) {\n  const id = match.params.id\n  const locationId = match.params.location_id\n  const returnUrl = `/organization/locations/rooms/${locationId}`\n  const cardTitle = t('organization.location_rooms.title_edit')\n  const { loading, error, data } = useQuery(GET_LOCATION_ROOM_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateLocationRoom ] = useMutation(UPDATE_LOCATION_ROOM)\n\n  // Loading\n  if (loading) return (\n    <OrganizationLocationRoomsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationLocationRoomsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )\n\n  const initialData = data.organizationLocationRoom;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationLocationRoomsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            displayPublic: initialData.displayPublic \n          }}\n          validationSchema={LOCATION_ROOM_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateLocationRoom({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name,\n                  displayPublic: values.displayPublic \n                }\n              }, refetchQueries: [\n                {query: GET_LOCATION_ROOMS_QUERY,\n                  variables: {\"archived\": false, \"organizationLocation\": match.params.location_id }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('organization.location_rooms.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <OrganizationLocationRoomForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationLocationRoomsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLocationRoomEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationLevelsBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/levels\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>  \n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationlevel\">\n                  <Link to=\"/organization/levels/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.levels.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }     \n              <OrganizationMenu activeLink='levels'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLevelsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_LEVELS_QUERY = gql`\n  query OrganizationLevels($after: String, $before: String, $archived: Boolean) {\n    organizationLevels(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_LEVEL_QUERY = gql`\n  query SchoolLevel($id: ID!) {\n    organizationLevel(id:$id) {\n      id\n      name\n      archived\n    }\n  }\n`\n\nexport const ADD_LEVEL = gql`\nmutation CreateOrganizationLevel($input:CreateOrganizationLevelInput!) {\n  createOrganizationLevel(input: $input) {\n    organizationLevel{\n      id\n      archived\n      name\n    }\n  }\n}\n`\n\nexport const UPDATE_LEVEL = gql`\nmutation UpdateOrganizationLevel($input: UpdateOrganizationLevelInput!) {\n  updateOrganizationLevel(input: $input) {\n    organizationLevel {\n      id\n      name\n    }\n  }\n}\n`\n\nexport const ARCHIVE_LEVEL = gql`\nmutation ArchiveOrganizationLevel($input: ArchiveOrganizationLevelInput!) {\n  archiveOrganizationLevel(input: $input) {\n    organizationLevel {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationLevelsBase from './OrganizationLevelsBase'\n\nimport { GET_LEVELS_QUERY, ARCHIVE_LEVEL } from \"./queries\"\n\n\nfunction OrganizationLevels({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('organization.levels.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_LEVELS_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveLevel ] = useMutation(ARCHIVE_LEVEL)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <OrganizationLevelsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )\n\n  if (error) return (\n    <OrganizationLevelsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.levels.error_loading')}</p>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )\n\n  let levels = data.organizationLevels\n\n  // Empty list\n  if (!levels.edges.length) { return (\n    <OrganizationLevelsBase>\n      <ContentCard cardTitle={t('organization.levels.title')}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('organization.levels.empty_list') : t(\"organization.levels.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )}\n\n\n  return (\n    <OrganizationLevelsBase>\n      <ContentCard \n        cardTitle={cardTitle}\n        headerContent={headerOptions}\n        pageInfo={levels.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: levels.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.organizationLevels.edges\n            const pageInfo = fetchMoreResult.organizationLevels.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new levels at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  organizationLevels: {\n                    __typename: previousResult.organizationLevels.__typename,\n                    edges: [ ...previousResult.organizationLevels.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n          }\n        })\n      }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {levels.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/organization/levels/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveLevel({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_LEVELS_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fe\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )\n}\n\n\n\nexport default withTranslation()(withRouter(OrganizationLevels))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const LEVEL_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nconst OrganizationLevelForm = ({ t, history, isSubmitting, errors, returnUrl }) => (\n    <FoForm>\n        <Card.Body>\n            <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n        </Card.Body>\n        <Card.Footer>\n            <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n            >\n            {t('general.submit')}\n            </Button>\n            <Link to={returnUrl}>\n                <Button color=\"link\">\n                    {t('general.cancel')}\n                </Button>\n            </Link>\n        </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationLevelForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_LEVELS_QUERY, ADD_LEVEL } from './queries'\nimport { LEVEL_SCHEMA } from './yupSchema'\nimport OrganizationLevelForm from './OrganizationLevelForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport OrganizationLevelsBase from './OrganizationLevelsBase';\n\n\nfunction OrganizationLevelAdd({t, history}) {\n  const returnUrl = \"/organization/levels\"\n  const [ addLevel ] = useMutation(ADD_LEVEL)\n  \n  return (\n   <OrganizationLevelsBase showBack={true}>\n    <Card>\n      <Card.Header>\n        <Card.Title>{t('organization.levels.title_add')}</Card.Title>\n      </Card.Header>\n      <Formik\n          initialValues={{ name: '', code: '' }}\n          validationSchema={LEVEL_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addLevel({ variables: {\n                input: {\n                  name: values.name, \n                }\n              }, refetchQueries: [\n                  {query: GET_LEVELS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.levels.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n            <OrganizationLevelForm \n              isSubmitting={isSubmitting}\n              errors={errors}\n              returnUrl={returnUrl}\n            />\n          )}\n      </Formik>\n    </Card>\n   </OrganizationLevelsBase> \n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLevelAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_LEVELS_QUERY, GET_LEVEL_QUERY, UPDATE_LEVEL } from './queries'\nimport { LEVEL_SCHEMA } from './yupSchema'\nimport OrganizationLevelForm from './OrganizationLevelForm'\n\n\nimport {\n  Dimmer,\n  Card,\n} from \"tabler-react\";\nimport OrganizationLevelsBase from './OrganizationLevelsBase';\nimport ContentCard from \"../../general/ContentCard\"\n\n\nfunction OrganizationLevelEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('organization.levels.title_edit')\n  const returnUrl = \"/organization/levels\"\n  const { loading, error, data } = useQuery(GET_LEVEL_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateLevel ] = useMutation(UPDATE_LEVEL)\n\n  if (loading) return (\n    <OrganizationLevelsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )\n\n  if (error) return (\n    <OrganizationLevelsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )\n                    \n  const initialData = data.organizationLevel;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationLevelsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n            }}\n            validationSchema={LEVEL_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateLevel({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                  }\n                }, refetchQueries: [\n                    {query: GET_LEVELS_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.levels.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n              <OrganizationLevelForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n            )}\n        </Formik>\n      </Card>\n    </OrganizationLevelsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLevelEdit))","// @flow\n\nimport { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\n\n\nclass Validity extends Component {\n    render() {\n      const t = this.props.t\n      const validity = this.props.validity\n\n      switch(validity) {\n        case \"DAYS\":\n            return t('validity.days')\n            break\n        case \"WEEKS\":\n            return t('validity.weeks')\n            break\n        case \"MONTHS\":\n            return t('validity.months')\n            break\n        case \"YEARS\":\n            return t('validity.years')\n            break\n        default:\n            return \"\"\n            break\n        }\n    }\n}\n  \nexport default withTranslation()(Validity)\n","import { gql } from \"@apollo/client\"\n\nexport const GET_MEMBERSHIPS_QUERY = gql`\n  query OrganizationMemberships($after: String, $before: String, $archived: Boolean) {\n    organizationMemberships(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          displayShop\n          name\n          description\n          price\n          priceDisplay\n          financeTaxRate {\n            id\n            name\n          }\n          validity\n          validityUnit\n          validityUnitDisplay\n          termsAndConditions\n          financeGlaccount {\n            id \n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_MEMBERSHIP_QUERY = gql`\n  query OrganizationMembership($id: ID!, $after: String, $before: String, $archived: Boolean!) {\n    organizationMembership(id:$id) {\n      id\n      archived\n      displayPublic\n      displayShop\n      name\n      description\n      price\n      financeTaxRate {\n        id\n        name\n      }\n      validity\n      validityUnit\n      termsAndConditions\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query FinanceInputValues($after: String, $before: String, $archived: Boolean) {\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport Validity from \"../../ui/Validity\"\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\nimport { GET_MEMBERSHIPS_QUERY } from \"./queries\"\n\nconst ARCHIVE_MEMBERSHIP = gql`\n  mutation ArchiveOrganizationMembership($input: ArchiveOrganizationMembershipInput!) {\n    archiveOrganizationMembership(input: $input) {\n      organizationMembership {\n        id\n        archived\n      }\n    }\n  }\n`\n\n\nconst OrganizationMemberships = ({ t, history, archived=false }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"organization.title\")} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n            <Query query={GET_MEMBERSHIPS_QUERY} variables={{ archived }}>\n             {({ loading, error, data: {organizationMemberships: memberships}, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('organization.memberships.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('organization.memberships.title')}>\n                    <p>{t('organization.memberships.error_loading')}</p>\n                  </ContentCard>\n                )\n                const headerOptions = <Card.Options>\n                  <Button color={(!archived) ? 'primary': 'secondary'}  \n                          size=\"sm\"\n                          onClick={() => {archived=false; refetch({archived});}}>\n                    {t('general.current')}\n                  </Button>\n                  <Button color={(archived) ? 'primary': 'secondary'} \n                          size=\"sm\" \n                          className=\"ml-2\" \n                          onClick={() => {archived=true; refetch({archived});}}>\n                    {t('general.archive')}\n                  </Button>\n                </Card.Options>\n                \n                // Empty list\n                if (!memberships.edges.length) { return (\n                  <ContentCard cardTitle={t('organization.memberships.title')}\n                               headerContent={headerOptions}>\n                    <p>\n                    {(!archived) ? t('organization.memberships.empty_list') : t(\"organization.memberships.empty_archive\")}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('organization.memberships.title')}\n                               headerContent={headerOptions}\n                               pageInfo={memberships.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: memberships.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.organizationMemberships.edges\n                                    const pageInfo = fetchMoreResult.organizationMemberships.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new memberships at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          organizationMemberships: {\n                                            __typename: previousResult.organizationMemberships.__typename,\n                                            edges: [ ...previousResult.organizationMemberships.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} >\n                    <Table>\n                          <Table.Header>\n                            <Table.Row key={v4()}>\n                              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.validity')}</Table.ColHeader>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                              {memberships.edges.map(({ node }) => (\n                                <Table.Row key={v4()}>\n                                  <Table.Col key={v4()}>\n                                    {node.name}\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    <BadgeBoolean value={node.displayPublic} />\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    <BadgeBoolean value={node.displayShop} />\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    {node.priceDisplay} <br />\n                                    {(node.financeTaxRate) ? \n                                      <span className=\"text-muted\">{node.financeTaxRate.name}</span>\n                                      : \"\"\n                                    }\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    {node.validity} <br />\n                                    <span className=\"text-muted\">\n                                      {node.validityUnitDisplay}\n                                    </span>\n                                  </Table.Col>\n                                  <Table.Col className=\"text-right\" key={v4()}>\n                                    {(node.archived) ? \n                                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                      <Button className='btn-sm' \n                                              onClick={() => history.push(\"/organization/memberships/edit/\" + node.id)}\n                                              color=\"secondary\">\n                                        {t('general.edit')}\n                                      </Button>\n                                    }\n                                  </Table.Col>\n                                  <Mutation mutation={ARCHIVE_MEMBERSHIP} key={v4()}>\n                                    {(archiveMembership, { data }) => (\n                                      <Table.Col className=\"text-right\" key={v4()}>\n                                        <button className=\"icon btn btn-link btn-sm\" \n                                           title={t('general.archive')} \n                                           href=\"\"\n                                           onClick={() => {\n                                             console.log(\"clicked archived\")\n                                             let id = node.id\n                                             archiveMembership({ variables: {\n                                               input: {\n                                                id,\n                                                archived: !archived\n                                               }\n                                        }, refetchQueries: [\n                                            {query: GET_MEMBERSHIPS_QUERY, variables: {\"archived\": archived }}\n                                        ]}).then(({ data }) => {\n                                          console.log('got data', data);\n                                          toast.success(\n                                            (archived) ? t('general.unarchived'): t('general.archived'), {\n                                              position: toast.POSITION.BOTTOM_RIGHT\n                                            })\n                                        }).catch((error) => {\n                                          toast.error((t('general.toast_server_error')) +  error, {\n                                              position: toast.POSITION.BOTTOM_RIGHT\n                                            })\n                                          console.log('there was an error sending the query', error);\n                                        })\n                                        }}>\n                                          <Icon prefix=\"fa\" name=\"inbox\" />\n                                        </button>\n                                      </Table.Col>\n                                    )}\n                                  </Mutation>\n                                </Table.Row>\n                              ))}\n                          </Table.Body>\n                        </Table>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationmembership\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/organization/memberships/add\")}>\n                <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.memberships.add')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='memberships'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationMemberships))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const MEMBERSHIP_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    price: Yup.number()\n      .required(t('yup.field_required')),\n    financeTaxRate: Yup.string()\n      .required(t('yup.field_required')),\n    validity: Yup.number()\n      .positive(t('yup.positive_number_required'))\n      .required(t('yup.field_required')),\n    validityUnit: Yup.string()\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nimport { GET_MEMBERSHIPS_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { MEMBERSHIP_SCHEMA } from './yupSchema'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nconst CREATE_MEMBERSHIP = gql`\n  mutation CreateMembership($input: CreateOrganizationMembershipInput!) {\n    createOrganizationMembership(input: $input) {\n      organizationMembership {\n        id\n        displayPublic\n        displayShop\n        name\n        description\n        price\n        financeTaxRate {\n          id\n          name\n        }\n        validity\n        validityUnit\n        termsAndConditions\n        financeGlaccount {\n          id\n          name\n        }\n        financeCostcenter {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nclass OrganizationMembershipAdd extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization membership add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const return_url = \"/organization/memberships\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title=\"Organization\" />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.memberships.title_add')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_INPUT_VALUES_QUERY} variables={{ id }} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    console.log('query data')\n                    console.log(data)\n                    const inputData = data\n\n                    return (\n                      \n                      <Mutation mutation={CREATE_MEMBERSHIP} onCompleted={() => history.push(return_url)}> \n                      {(createMembership, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                displayPublic: true,\n                                displayShop: true,\n                                name: \"\",\n                                description: \"\",\n                                price: 0,\n                                financeTaxRate: \"\",\n                                validity: 1,\n                                validityUnit: \"MONTHS\",\n                                termsAndConditions: \"\",\n                                financeGlaccount: \"\",\n                                financeCostcenter: \"\"\n                              }}\n                              validationSchema={MEMBERSHIP_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  createMembership({ variables: {\n                                    input: {\n                                      displayPublic: values.displayPublic,\n                                      displayShop: values.displayShop,\n                                      name: values.name,\n                                      description: values.description,\n                                      price: values.price,\n                                      financeTaxRate: values.financeTaxRate,\n                                      validity: values.validity,\n                                      validityUnit: values.validityUnit,\n                                      termsAndConditions: values.termsAndConditions,\n                                      financeGlaccount: values.financeGlaccount,\n                                      financeCostcenter: values.financeCostcenter\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_MEMBERSHIPS_QUERY, variables: {\"archived\": false }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.memberships.toast_add_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n                                  <FoForm>\n                                      <Card.Body> \n                                        <Form.Group>\n                                          <Form.Label className=\"custom-switch\">\n                                              <Field \n                                                className=\"custom-switch-input\"\n                                                type=\"checkbox\" \n                                                name=\"displayPublic\" \n                                                checked={values.displayPublic} />\n                                              <span className=\"custom-switch-indicator\" ></span>\n                                              <span className=\"custom-switch-description\">{t('organization.membership.public')}</span>\n                                            </Form.Label>\n                                          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                                        </Form.Group>      \n                                        <Form.Group>\n                                          <Form.Label className=\"custom-switch\">\n                                              <Field \n                                                className=\"custom-switch-input\"\n                                                type=\"checkbox\" \n                                                name=\"displayShop\" \n                                                checked={values.displayShop} />\n                                              <span className=\"custom-switch-indicator\" ></span>\n                                              <span className=\"custom-switch-description\">{t('organization.membership.shop')}</span>\n                                            </Form.Label>\n                                          <ErrorMessage name=\"displayShop\" component=\"div\" />   \n                                        </Form.Group>      \n                                        <Form.Group label={t('general.name')} >\n                                          <Field type=\"text\" \n                                                name=\"name\" \n                                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.description')}>\n                                          <Editor\n                                            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                                            textareaName=\"description\"\n                                            initialValue={values.description}\n                                            init={tinymceBasicConf}\n                                            onBlur={(e) => {\n                                              setFieldValue(\"description\", e.target.getContent())\n                                              setFieldTouched(\"description\", true, true)\n                                            }}\n                                          />\n                                          <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.price')}>\n                                          <Field type=\"text\" \n                                                name=\"price\" \n                                                className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.taxrate')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeTaxRate\" \n                                                 className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            {console.log(\"query data in membership add:\")}\n                                            {console.log(inputData)}\n                                            <option value=\"\" key={v4()}></option>\n                                            {inputData.financeTaxRates.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.validity')}>\n                                          <Field type=\"text\" \n                                                name=\"validity\" \n                                                className={(errors.validity) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"validity\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.validity_unit')}>\n                                          <Field component=\"select\" \n                                                 name=\"validityUnit\" \n                                                 className={(errors.validityUnit) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"DAYS\" key={v4()}>{t('validity.days')}</option>\n                                            <option value=\"WEEKS\" key={v4()}>{t('validity.weeks')}</option>\n                                            <option value=\"MONTHS\" key={v4()}>{t('validity.months')}</option>\n                                          </Field>\n                                          <ErrorMessage name=\"validityUnit\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.terms_and_conditions')}>\n                                          <Editor\n                                            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                                            textareaName=\"termsAndConditions\"\n                                            initialValue={values.termsAndConditions}\n                                            init={tinymceBasicConf}\n                                            onBlur={(e) => {\n                                              setFieldValue(\"termsAndConditions\", e.target.getContent())\n                                              setFieldTouched(\"termsAndConditions\", true, true)\n                                            }}\n                                          />\n                                          <ErrorMessage name=\"termsAndConditions\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.glaccount')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeGlaccount\" \n                                                 className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"\" key={v4()}></option>\n                                            {inputData.financeGlaccounts.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.costcenter')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeCostcenter\" \n                                                 className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"\" key={v4()}></option>\n                                            {inputData.financeCostcenters.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                      </Card.Body>\n                                      <Card.Footer>\n                                          <Button \n                                            className=\"pull-right\"\n                                            color=\"primary\"\n                                            disabled={isSubmitting}\n                                            type=\"submit\"\n                                          >\n                                            {t('general.submit')}\n                                          </Button>\n                                          <Button\n                                            type=\"button\" \n                                            color=\"link\" \n                                            onClick={() => history.push(return_url)}\n                                          >\n                                              {t('general.cancel')}\n                                          </Button>\n                                      </Card.Footer>\n                                  </FoForm>\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationmembership\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='memberships'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationMembershipAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nimport { GET_MEMBERSHIPS_QUERY, GET_MEMBERSHIP_QUERY } from './queries'\nimport { MEMBERSHIP_SCHEMA } from './yupSchema'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nconst UPDATE_MEMBERSHIP = gql`\n  mutation UpdateOrganizationMembership($input: UpdateOrganizationMembershipInput!) {\n    updateOrganizationMembership(input: $input) {\n        organizationMembership {\n          id\n          displayPublic\n          displayShop\n          name\n          description\n          price\n          financeTaxRate {\n            id\n            name\n          }\n          validity\n          validityUnit\n          termsAndConditions\n          financeGlaccount {\n            id\n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n    }\n  }\n`\n\n\nclass OrganizationMembershipEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization membership edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const return_url = \"/organization/memberships\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title=\"Organization\" />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.memberships.title_edit')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_MEMBERSHIP_QUERY} variables={{ \"id\": id, \"archived\": false}} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    console.log('query data')\n                    console.log(data)\n                    const initialData = data\n\n                    let initialGlaccount = \"\"\n                    if (initialData.organizationMembership.financeGlaccount) {\n                      initialGlaccount =  initialData.organizationMembership.financeGlaccount.id\n                    } \n\n                    let initialCostcenter = \"\"\n                    if (initialData.organizationMembership.financeCostcenter) {\n                      initialCostcenter =  initialData.organizationMembership.financeCostcenter.id\n                    } \n\n                    return (\n                      <Mutation mutation={UPDATE_MEMBERSHIP} onCompleted={() => history.push(return_url)}> \n                      {(createMembership, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                displayPublic: initialData.organizationMembership.displayPublic,\n                                displayShop: initialData.organizationMembership.displayShop,\n                                name: initialData.organizationMembership.name,\n                                description: initialData.organizationMembership.description,\n                                price: initialData.organizationMembership.price,\n                                financeTaxRate: initialData.organizationMembership.financeTaxRate.id,\n                                validity: initialData.organizationMembership.validity,\n                                validityUnit: initialData.organizationMembership.validityUnit,\n                                termsAndConditions: initialData.organizationMembership.termsAndConditions,\n                                financeGlaccount:  initialGlaccount,\n                                financeCostcenter: initialCostcenter\n                              }}\n                              validationSchema={MEMBERSHIP_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  createMembership({ variables: {\n                                    input: {\n                                      id: match.params.id,\n                                      displayPublic: values.displayPublic,\n                                      displayShop: values.displayShop,\n                                      name: values.name,\n                                      description: values.description,\n                                      price: values.price,\n                                      financeTaxRate: values.financeTaxRate,\n                                      validity: values.validity,\n                                      validityUnit: values.validityUnit,\n                                      termsAndConditions: values.termsAndConditions,\n                                      financeGlaccount: values.financeGlaccount,\n                                      financeCostcenter: values.financeCostcenter\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_MEMBERSHIPS_QUERY, variables: {\"archived\": false }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.memberships.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n                                  <FoForm>\n                                      <Card.Body> \n                                        <Form.Group>\n                                          <Form.Label className=\"custom-switch\">\n                                              <Field \n                                                className=\"custom-switch-input\"\n                                                type=\"checkbox\" \n                                                name=\"displayPublic\" \n                                                checked={values.displayPublic} />\n                                              <span className=\"custom-switch-indicator\" ></span>\n                                              <span className=\"custom-switch-description\">{t('organization.membership.public')}</span>\n                                            </Form.Label>\n                                          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                                        </Form.Group>      \n                                        <Form.Group>\n                                          <Form.Label className=\"custom-switch\">\n                                              <Field \n                                                className=\"custom-switch-input\"\n                                                type=\"checkbox\" \n                                                name=\"displayShop\" \n                                                checked={values.displayShop} />\n                                              <span className=\"custom-switch-indicator\" ></span>\n                                              <span className=\"custom-switch-description\">{t('organization.membership.shop')}</span>\n                                            </Form.Label>\n                                          <ErrorMessage name=\"displayShop\" component=\"div\" />   \n                                        </Form.Group>      \n                                        <Form.Group label={t('general.name')} >\n                                          <Field type=\"text\" \n                                                name=\"name\" \n                                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.description')}>\n                                          <Editor\n                                              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                                              textareaName=\"description\"\n                                              initialValue={values.description}\n                                              init={tinymceBasicConf}\n                                              onBlur={(e) => {\n                                                setFieldValue(\"description\", e.target.getContent())\n                                                setFieldTouched(\"description\", true, true)\n                                              }}\n                                            />\n                                          <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.price')}>\n                                          <Field type=\"text\" \n                                                name=\"price\" \n                                                className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.taxrate')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeTaxRate\" \n                                                 className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            {initialData.financeTaxRates.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.validity')}>\n                                          <Field type=\"text\" \n                                                name=\"validity\" \n                                                className={(errors.validity) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"validity\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.validity_unit')}>\n                                          <Field component=\"select\" \n                                                 name=\"validityUnit\" \n                                                 className={(errors.validityUnit) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"DAYS\" key={v4()}>{t('validity.days')}</option>\n                                            <option value=\"WEEKS\" key={v4()}>{t('validity.weeks')}</option>\n                                            <option value=\"MONTHS\" key={v4()}>{t('validity.months')}</option>\n                                          </Field>\n                                          <ErrorMessage name=\"validityUnit\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.terms_and_conditions')}>\n                                          <Editor\n                                              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                                              textareaName=\"termsAndConditions\"\n                                              initialValue={values.termsAndConditions}\n                                              init={tinymceBasicConf}\n                                              onBlur={(e) => {\n                                                setFieldValue(\"termsAndConditions\", e.target.getContent())\n                                                setFieldTouched(\"termsAndConditions\", true, true)\n                                              }}\n                                            />\n                                          <ErrorMessage name=\"termsAndConditions\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.glaccount')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeGlaccount\" \n                                                 className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"\" key={v4()}></option>\n                                            {initialData.financeGlaccounts.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.costcenter')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeCostcenter\" \n                                                 className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"\" key={v4()}></option>\n                                            {initialData.financeCostcenters.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                      </Card.Body>\n                                      <Card.Footer>\n                                          <Button \n                                            className=\"pull-right\"\n                                            color=\"primary\"\n                                            disabled={isSubmitting}\n                                            type=\"submit\"\n                                          >\n                                            {t('general.submit')}\n                                          </Button>\n                                          <Button\n                                            type=\"button\" \n                                            color=\"link\" \n                                            onClick={() => history.push(return_url)}\n                                          >\n                                              {t('general.cancel')}\n                                          </Button>\n                                      </Card.Footer>\n                                  </FoForm>\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"change\"\n                                      resource=\"organizationmembership\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='memberships'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationMembershipEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationSubscriptionsBase({t, children, showBack=false}) {\n  const activeLink = \"subscriptions\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/subscriptions/groups\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"folder\" /> {t('general.groups')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ? \n                <Link to=\"/organization/subscriptions/\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationsubscription\">\n                  <Link to=\"/organization/subscriptions/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.subscriptions.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <OrganizationMenu activeLink={activeLink}/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  ) \n}\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_SUBSCRIPTIONS_QUERY = gql`\n  query OrganizationSubscriptions($after: String, $before: String, $archived: Boolean) {\n    organizationSubscriptions(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          priceTodayDisplay\n          displayPublic\n          displayShop\n          name\n          description\n          sortOrder\n          minDuration\n          classes\n          subscriptionUnit\n          subscriptionUnitDisplay\n          reconciliationClasses\n          creditAccumulationDays\n          unlimited\n          termsAndConditions\n          registrationFee\n          organizationMembership {\n            id\n            name\n          }\n          quickStatsAmount\n          financeGlaccount {\n            id \n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_SUBSCRIPTION_QUERY = gql`\n  query OrganizationSubscription($id: ID!, $after: String, $before: String) {\n    organizationSubscription(id:$id) {\n      id\n      archived\n      displayPublic\n      displayShop\n      name\n      description\n      sortOrder\n      minDuration\n      classes\n      subscriptionUnit\n      subscriptionUnitDisplay\n      reconciliationClasses\n      creditAccumulationDays\n      unlimited\n      termsAndConditions\n      registrationFee\n      organizationMembership {\n        id\n        name\n      }\n      quickStatsAmount\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    organizationMemberships(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query SubscriptionInputValues($after: String, $before: String) {\n    organizationMemberships(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\n\nexport const CREATE_SUBSCRIPTION = gql`\n  mutation CreateSubscription($input: CreateOrganizationSubscriptionInput!) {\n    createOrganizationSubscription(input: $input) {\n      organizationSubscription {\n        id\n        displayPublic\n        displayShop\n        name\n        description\n        sortOrder\n        minDuration\n        classes\n        subscriptionUnit\n        subscriptionUnitDisplay\n        reconciliationClasses\n        creditValidity\n        unlimited\n        termsAndConditions\n        organizationMembership {\n          id\n          name\n        }\n        quickStatsAmount\n        financeGlaccount {\n          id\n          name\n        }\n        financeCostcenter {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_SUBSCRIPTION = gql`\n  mutation UpdateOrganizationSubscription($input: UpdateOrganizationSubscriptionInput!) {\n    updateOrganizationSubscription(input: $input) {\n      organizationSubscription {\n        id\n        displayPublic\n        displayShop\n        name\n        description\n        sortOrder\n        minDuration\n        classes\n        subscriptionUnit\n        subscriptionUnitDisplay\n        reconciliationClasses\n        creditValidity\n        unlimited\n        termsAndConditions\n        organizationMembership {\n          id\n          name\n        }\n        quickStatsAmount\n        financeGlaccount {\n          id\n          name\n        }\n        financeCostcenter {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const ARCHIVE_SUBSCRIPTION = gql`\nmutation ArchiveOrganizationSubscription($input: ArchiveOrganizationSubscriptionInput!) {\n  archiveOrganizationSubscription(input: $input) {\n    organizationSubscription {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationSubscriptionsBase from './OrganizationSubscriptionsBase'\n\nimport { GET_SUBSCRIPTIONS_QUERY, ARCHIVE_SUBSCRIPTION } from \"./queries\"\n\n\nfunction OrganizationSubscriptions({t, history}) {\n  const cardTitle = t('organization.subscriptions.title')\n  let [archived, setArchived] = useState(false)\n  const {loading, error, data, refetch, fetchMore} = useQuery(GET_SUBSCRIPTIONS_QUERY, {\n    variables: {archived: archived}\n  })\n  const [archiveSubscription] = useMutation(ARCHIVE_SUBSCRIPTION)\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: archived});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: archived});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <OrganizationSubscriptionsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  if (error) return (\n    <OrganizationSubscriptionsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.subscriptions.error_loading')}</p>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  let subscriptions = data.organizationSubscriptions\n\n  // Empty list\n  if (!subscriptions.edges.length) { return (\n    <OrganizationSubscriptionsBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('organization.subscriptions.empty_list') : t(\"organization.subscriptions.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )}\n\n  return (\n    <OrganizationSubscriptionsBase>\n      <ContentCard cardTitle={t('organization.subscriptions.title')}\n                  headerContent={headerOptions}\n                  pageInfo={subscriptions.pageInfo}\n                  onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: subscriptions.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationSubscriptions.edges\n                        const pageInfo = fetchMoreResult.organizationSubscriptions.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new subscriptions at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationSubscriptions: {\n                                __typename: previousResult.organizationSubscriptions.__typename,\n                                edges: [ ...previousResult.organizationSubscriptions.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.classes')}</Table.ColHeader>\n              <Table.ColHeader><span className=\"pull-right\">{t('general.price')}</span></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {subscriptions.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  {node.name}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  <BadgeBoolean value={node.displayPublic} />\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  <BadgeBoolean value={node.displayShop} />\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {\n                    (node.unlimited) ? t(\"general.unlimited\"):\n                    <div>\n                      {node.classes} <br />\n                      <span className=\"text-muted\"> {t(\"general.a\")} {node.subscriptionUnitDisplay}</span>\n                    </div>\n                  }\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  {node.priceTodayDisplay} <br />\n                  <Link to={\"/organization/subscriptions/prices/\" + node.id}\n                        className='btn btn-link btn-sm'>\n                      {/* <Icon prefix=\"fe\" name=\"dollar-sign\" />  */}\n                      {t('general.edit_price')}\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  {(node.archived) ? \n                    <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                    <Button className='btn-sm' \n                            onClick={() => history.push(\"/organization/subscriptions/edit/\" + node.id)}\n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  }\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.archive')} \n                      href=\"\"\n                      onClick={() => {\n                        console.log(\"clicked archived\")\n                        let id = node.id\n                        archiveSubscription({ variables: {\n                          input: {\n                          id,\n                          archived: !archived\n                          }\n                  }, refetchQueries: [\n                      {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": archived }}\n                  ]}).then(({ data }) => {\n                    console.log('got data', data);\n                    toast.success(\n                      (archived) ? t('general.unarchived'): t('general.archived'), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                  })\n                  }}>\n                    <Icon prefix=\"fa\" name=\"inbox\" />\n                  </button>\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </ContentCard>\n  </OrganizationSubscriptionsBase>\n)}\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptions))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const SUBSCRIPTION_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    description: Yup.string(),\n    sortOrder: Yup.number()\n      .min(0),\n    minDuration: Yup.number()\n      .min(0),\n    classes: Yup.number()\n      .min(0),\n    subscriptionUnit: Yup.string(),\n    creditValidity: Yup.number()\n      .min(0),\n    quickStatsAmount: Yup.number()\n      .min(0),\n    termsAndConditions: Yup.string()\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\nimport { Link } from \"react-router-dom\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\";\n\n\nconst OrganizationSubscriptionForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, returnUrl }) => (\n  <FoForm>\n    <Card.Body> \n      <Form.Group>\n        <Form.Label className=\"custom-switch\">\n            <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"displayPublic\" \n              checked={values.displayPublic} />\n            <span className=\"custom-switch-indicator\" ></span>\n            <span className=\"custom-switch-description\">{t('organization.subscription.public')}</span>\n          </Form.Label>\n        <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n      </Form.Group>      \n      <Form.Group>\n        <Form.Label className=\"custom-switch\">\n            <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"displayShop\" \n              checked={values.displayShop} />\n            <span className=\"custom-switch-indicator\" ></span>\n            <span className=\"custom-switch-description\">{t('organization.subscription.shop')}</span>\n          </Form.Label>\n        <ErrorMessage name=\"displayShop\" component=\"div\" />   \n      </Form.Group>      \n      <Form.Group label={t('general.name')} >\n        <Field type=\"text\" \n              name=\"name\" \n              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.description')}>\n        <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"description\"\n            initialValue={values.description}\n            init={tinymceBasicConf}\n            onBlur={(e) => {\n              setFieldValue(\"description\", e.target.getContent())\n              setFieldTouched(\"description\", true)\n            }}\n          />\n        <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('shop.subscriptions.min_duration_in_months')}>\n            <Field type=\"text\" \n                  name=\"minDuration\" \n                  className={(errors.minDuration) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"minDuration\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.sort_order')}>\n            <Field type=\"text\" \n                  name=\"sortOrder\" \n                  className={(errors.sortOrder) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"sortOrder\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Form.Group>\n        <Form.Label className=\"custom-switch\">\n            <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"unlimited\" \n              checked={values.unlimied} />\n            <span className=\"custom-switch-indicator\" ></span>\n            <span className=\"custom-switch-description\">{t('general.unlimited')}</span>\n          </Form.Label>\n        <ErrorMessage name=\"unlimited\" component=\"div\" />   \n      </Form.Group>  \n      {/* Show if unlimited */}\n      { (values.unlimited) ? \"\"\n        : \n        // Show if not unlimited\n        <span>\n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group label={t('general.classes')}>\n                <Field type=\"text\" \n                      name=\"classes\" \n                      className={(errors.classes) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n                <ErrorMessage name=\"classes\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group> \n            </Grid.Col>\n            <Grid.Col>\n              <Form.Group label={t('general.subscription_unit')}>\n                <Field component=\"select\" \n                      name=\"subscriptionUnit\" \n                      className={(errors.subscriptionUnit) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                  <option value=\"WEEK\" key={v4()}>{t('subscription_unit.week')}</option>\n                  <option value=\"MONTH\" key={v4()}>{t('subscription_unit.month')}</option>\n                </Field>\n                <ErrorMessage name=\"subscriptionUnit\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          </Grid.Row>\n          <Form.Group label={t('organization.subscriptions.credit_accumulation_days')}>\n            <Field type=\"text\" \n                  name=\"creditAccumulationDays\" \n                  className={(errors.creditAccumulationDays) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"creditAccumulationDays\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </span>\n      } \n      <Form.Group label={t('general.terms_and_conditions')}>\n        <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"termsAndConditions\"\n            initialValue={values.termsAndConditions}\n            init={tinymceBasicConf}\n            onBlur={(e) => {\n              setFieldValue(\"termsAndConditions\", e.target.getContent())\n              setFieldTouched(\"termsAndConditions\", true)\n            }}\n          />\n        <ErrorMessage name=\"termsAndConditions\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      {/* <Form.Group label={t('general.membership')}>\n        <Field component=\"select\" \n              name=\"organizationMembership\" \n              className={(errors.organizationMembership) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\">\n          <option value=\"\" key={v4()}>{t(\"general.membership_not_required\")}</option>\n          {inputData.organizationMemberships.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"organizationMembership\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>  */}\n      <Form.Group label={t('general.quickStatsAmount')}>\n        <Field type=\"text\" \n              name=\"quickStatsAmount\" \n              className={(errors.quickStatsAmount) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n        <ErrorMessage name=\"quickStatsAmount\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.glaccount')}>\n            <Field component=\"select\" \n                  name=\"financeGlaccount\" \n                  className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}></option>\n              {inputData.financeGlaccounts.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.costcenter')}>\n            <Field component=\"select\" \n                  name=\"financeCostcenter\" \n                  className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}></option>\n              {inputData.financeCostcenters.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button\n            type=\"button\" \n            color=\"link\"\n          >\n              {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTIONS_QUERY, GET_INPUT_VALUES_QUERY, CREATE_SUBSCRIPTION } from './queries'\nimport { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionForm from './OrganizationSubscriptionForm'\n\nimport {\n  Card,\n  Dimmer\n} from \"tabler-react\";\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationSubscriptionsBase from \"./OrganizationSubscriptionsBase\"\n\n\nfunction OrganizationSubscriptionAdd({ t, history }) {\n  const cardTitle = t('organization.subscriptions.title_add')\n  const returnUrl =  \"/organization/subscriptions\"\n  const {loading, error, data} = useQuery(GET_INPUT_VALUES_QUERY)\n  const [createSubscription] = useMutation(CREATE_SUBSCRIPTION)\n\n  if (loading) return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  if (error) return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n\n  return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n            initialValues={{ \n              displayPublic: true,\n              displayShop: true,\n              name: \"\",\n              description: \"\",\n              sortOrder: 0,\n              minDuration: 1,\n              classes: 1,\n              subscriptionUnit: \"WEEK\",\n              reconciliationClasses: 0,\n              creditAccumulationDays: 31,\n              unlimited: false,\n              termsAndConditions: \"\",\n              organizationMembership: \"\",\n              quickStatsAmount: 0,\n              financeGlaccount: \"\",\n              financeCostcenter: \"\"\n            }}\n            validationSchema={SUBSCRIPTION_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                createSubscription({ variables: {\n                  input: {\n                    displayPublic: values.displayPublic,\n                    displayShop: values.displayShop,\n                    name: values.name,\n                    description: values.description,\n                    sortOrder: values.sortOrder,\n                    minDuration: values.minDuration,\n                    classes: values.classes,\n                    subscriptionUnit: values.subscriptionUnit,\n                    reconciliationClasses: values.reconciliationClasses,\n                    creditAccumulationDays: values.creditAccumulationDays,\n                    unlimited: values.unlimited,\n                    termsAndConditions: values.termsAndConditions,\n                    quickStatsAmount: values.quickStatsAmount,\n                    financeGlaccount: values.financeGlaccount,\n                    financeCostcenter: values.financeCostcenter\n                  }\n                }, refetchQueries: [\n                    {query: GET_SUBSCRIPTIONS_QUERY, variables: {archived: false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.subscriptions.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n              }}\n            >\n            {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n              <OrganizationSubscriptionForm\n                inputData={inputData}\n                isSubmitting={isSubmitting}\n                setFieldValue={setFieldValue}\n                setFieldTouched={setFieldTouched}\n                errors={errors}\n                values={values}\n                returnUrl={returnUrl}\n              />\n            )}\n        </Formik>\n      </Card>\n    </OrganizationSubscriptionsBase>\n  )\n}\n\n\n\n// class OrganizationSubscriptionAdd extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Organization subscription add props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const history = this.props.history\n//     const return_url = \"/organization/subscriptions\"\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//           <Container>\n//             <Page.Header title=\"Organization\" />\n//             <Grid.Row>\n//               <Grid.Col md={9}>\n\n//               </Grid.Col>\n//               <Grid.Col md={3}>\n//                 <HasPermissionWrapper permission=\"add\"\n//                                       resource=\"organizationsubscription\">\n//                   <Button color=\"primary btn-block mb-6\"\n//                           onClick={() => history.push(return_url)}>\n//                     <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n//                   </Button>\n//                 </HasPermissionWrapper>\n//                 <OrganizationMenu activeLink='subscriptions'/>\n//               </Grid.Col>\n//             </Grid.Row>\n//           </Container>\n//         </div>\n//     </SiteWrapper>\n//     )}\n//   }\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTIONS_QUERY, GET_SUBSCRIPTION_QUERY, UPDATE_SUBSCRIPTION } from './queries'\nimport { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionForm from './OrganizationSubscriptionForm'\n\n\nimport {\n  Card,\n  Dimmer\n} from \"tabler-react\";\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationSubscriptionsBase from './OrganizationSubscriptionsBase';\n\n\nfunction OrganizationSubscriptionEdit({t, match, history}) {\n  const id = match.params.id\n  const returnUrl = \"/organization/subscriptions\"\n  const cardTitle = t('organization.subscriptions.title_edit')\n\n  const { loading, error, data } = useQuery(GET_SUBSCRIPTION_QUERY, { \n    variables: { id: id }\n  })\n  const [ updateSubscription ] = useMutation(UPDATE_SUBSCRIPTION)\n\n  if (loading) return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  if (error) return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const initialData = data\n\n  let initialMembership = \"\"\n  if (initialData.organizationSubscription.organizationMembership) {\n    initialMembership =  initialData.organizationSubscription.organizationMembership.id\n  } \n\n  let initialGlaccount = \"\"\n  if (initialData.organizationSubscription.financeGlaccount) {\n    initialGlaccount =  initialData.organizationSubscription.financeGlaccount.id\n  } \n\n  let initialCostcenter = \"\"\n  if (initialData.organizationSubscription.financeCostcenter) {\n    initialCostcenter =  initialData.organizationSubscription.financeCostcenter.id\n  } \n\n  return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            displayPublic: initialData.organizationSubscription.displayPublic,\n            displayShop: initialData.organizationSubscription.displayShop,\n            name: initialData.organizationSubscription.name,\n            description: initialData.organizationSubscription.description,\n            sortOrder: initialData.organizationSubscription.sortOrder,\n            minDuration: initialData.organizationSubscription.minDuration,\n            classes: initialData.organizationSubscription.classes,\n            subscriptionUnit: initialData.organizationSubscription.subscriptionUnit,\n            reconciliationClasses: initialData.organizationSubscription.reconciliationClasses,\n            creditAccumulationDays: initialData.organizationSubscription.creditAccumulationDays,\n            unlimited: initialData.organizationSubscription.unlimited,\n            termsAndConditions: initialData.organizationSubscription.termsAndConditions,\n            organizationMembership: initialMembership,\n            quickStatsAmount: initialData.organizationSubscription.quickStatsAmount,\n            financeGlaccount:  initialGlaccount,\n            financeCostcenter: initialCostcenter\n          }}\n          validationSchema={SUBSCRIPTION_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateSubscription({ variables: {\n                input: {\n                  id: match.params.id,\n                  displayPublic: values.displayPublic,\n                  displayShop: values.displayShop,\n                  name: values.name,\n                  description: values.description,\n                  sortOrder: values.sortOrder,\n                  minDuration: values.minDuration,\n                  classes: values.classes,\n                  subscriptionUnit: values.subscriptionUnit,\n                  reconciliationClasses: values.reconciliationClasses,\n                  creditAccumulationDays: values.creditAccumulationDays,\n                  unlimited: values.unlimited,\n                  termsAndConditions: values.termsAndConditions,\n                  quickStatsAmount: values.quickStatsAmount,\n                  financeGlaccount: values.financeGlaccount,\n                  financeCostcenter: values.financeCostcenter\n                }\n              }, refetchQueries: [\n                  {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('organization.subscriptions.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <OrganizationSubscriptionForm\n              inputData={initialData}\n              isSubmitting={isSubmitting}\n              setFieldValue={setFieldValue}\n              setFieldTouched={setFieldTouched}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n            />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationSubscriptionsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationSubscriptionsGroupsBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/subscriptions\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.subscriptions.title')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ? \n                <Link to=\"/organization/subscriptions/groups\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationsubscriptiongroup\">\n                  <Link to=\"/organization/subscriptions/groups/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.subscription_groups.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <OrganizationMenu activeLink=''/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionsGroupsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_SUBSCRIPTION_GROUPS_QUERY = gql`\n  query OrganizationSubscriptionGroups($after: String, $before: String) {\n    organizationSubscriptionGroups(first: 100, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          description\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_SUBSCRIPTION_GROUP_QUERY = gql`\n  query OrganizationSubscriptionGroup($id: ID!) {\n    organizationSubscriptionGroup(id:$id) {\n      id\n      name\n      description\n    }\n  }\n`\n\n\nexport const GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY = gql`\n  query GetPassesAndGroupMembership($after: String, $before: String, $id:ID!) {\n    organizationSubscriptions(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    organizationSubscriptionGroup(id: $id) {\n      id\n      name\n      description\n      organizationSubscriptions {\n        edges {\n          node {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const ADD_SUBSCRIPTION_GROUP = gql`\n  mutation CreateOrganizationSubscriptionGroup($input:CreateOrganizationSubscriptionGroupInput!) {\n    createOrganizationSubscriptionGroup(input: $input) {\n      organizationSubscriptionGroup{\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_SUBSCRIPTION_GROUP = gql`\nmutation UpdateOrganizationSubscriptionGroup($input: UpdateOrganizationSubscriptionGroupInput!) {\n  updateOrganizationSubscriptionGroup(input: $input) {\n    organizationSubscriptionGroup {\n      id\n    }\n  }\n}\n`\n\nexport const DELETE_SUBSCRIPTION_GROUP = gql`\n  mutation DeleteSubscriptionGroup($input: DeleteOrganizationSubscriptionGroupInput!) {\n    deleteOrganizationSubscriptionGroup(input: $input) {\n      ok\n    }\n  }\n`\n\nexport const ADD_CARD_TO_GROUP = gql`\n  mutation AddCardToGroup($input: CreateOrganizationSubscriptionGroupSubscriptionInput!) {\n    createOrganizationSubscriptionGroupSubscription(input:$input) {\n      organizationSubscriptionGroupSubscription {\n        id\n        organizationSubscription {\n          id\n          name\n        }\n        organizationSubscriptionGroup {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const DELETE_CARD_FROM_GROUP = gql`\n  mutation DeleteCardFromGroup($input: DeleteOrganizationSubscriptionGroupSubscriptionInput!) {\n    deleteOrganizationSubscriptionGroupSubscription(input:$input) {\n      ok\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport ContentCard from \"../../general/ContentCard\"\nimport CardHeaderSeparator from \"../../general/CardHeaderSeparator\"\nimport OrganizationMenu from \"../OrganizationMenu\"\nimport OrganizationGroupsSubscriptionsBase from \"./OrganizationSubscriptionsGroupsBase\"\n\nimport { GET_SUBSCRIPTION_GROUPS_QUERY, DELETE_SUBSCRIPTION_GROUP } from \"./queries\"\n\n\nfunction OrganizationSubscriptionsGroups({ t, history }) {\n  const { loading, error, data, fetchMore } = useQuery(GET_SUBSCRIPTION_GROUPS_QUERY)\n  const [deleteSubscriptionGroup] = useMutation(DELETE_SUBSCRIPTION_GROUP)\n\n  if (loading) return (\n    <OrganizationGroupsSubscriptionsBase>\n      <ContentCard cardTitle={t('organization.subscription_groups.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationGroupsSubscriptionsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationGroupsSubscriptionsBase>\n      <ContentCard cardTitle={t('organization.subscription_groups.title')}>\n        <p>{t('organization.subscription_groups.error_loading')}</p>\n      </ContentCard>\n    </OrganizationGroupsSubscriptionsBase>\n  )\n\n  const subscription_groups = data.organizationSubscriptionGroups\n  \n  // Empty list\n  if (!subscription_groups.edges.length) return (\n    <OrganizationGroupsSubscriptionsBase>\n      <ContentCard cardTitle={t('organization.subscription_groups.title')}>\n        <p>{t('organization.subscription_groups.empty_list')}</p>\n      </ContentCard>\n    </OrganizationGroupsSubscriptionsBase>\n  )\n\n  return (\n    <OrganizationGroupsSubscriptionsBase>\n      <ContentCard cardTitle={t('organization.subscription_groups.title')}\n            pageInfo={subscription_groups.pageInfo}\n            onLoadMore={() => {\n            fetchMore({\n              variables: {\n                after: subscription_groups.pageInfo.endCursor\n              },\n              updateQuery: (previousResult, { fetchMoreResult }) => {\n                const newEdges = fetchMoreResult.organizationSubscriptionGroups.edges\n                const pageInfo = fetchMoreResult.organizationSubscriptionGroups.pageInfo\n\n                return newEdges.length\n                  ? {\n                      // Put the new subscription_groups at the end of the list and update `pageInfo`\n                      // so we have the new `endCursor` and `hasNextPage` values\n                      organizationSubscriptionGroups: {\n                        __typename: previousResult.organizationSubscriptionGroups.__typename,\n                        edges: [ ...previousResult.organizationSubscriptionGroups.edges, ...newEdges ],\n                        pageInfo\n                      }\n                    }\n                  : previousResult\n              }\n            })\n          }} >\n        <Table>\n          <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n          </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {subscription_groups.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  {node.name}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.description.substring(0, 24)}\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <span>\n                    <Button className='btn-sm' \n                            onClick={() => history.push(\"/organization/subscriptions/groups/edit/\" + node.id)}\n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                    <Button className='btn-sm' \n                            onClick={() => history.push(\"/organization/subscriptions/groups/edit/subscriptions/\" + node.id)}\n                            color=\"secondary\">\n                      {t('organization.subscriptions.groups.edit_subscriptions')}\n                    </Button>\n                  </span>\n                </Table.Col>\n                <Table.Col>\n                  <button className=\"icon btn btn-link btn-sm float-right\" \n                    title={t('general.delete')} \n                    href=\"\"\n                    onClick={() => {\n                      confirm_delete({\n                        t: t,\n                        msgConfirm: t(\"organization.subscriptions.groups.delete_confirm_msg\"),\n                        msgDescription: <p>{node.name}</p>,\n                        msgSuccess: t('organization.subscriptions.groups.deleted'),\n                        deleteFunction: deleteSubscriptionGroup,\n                        functionVariables: { variables: {\n                          input: {\n                            id: node.id\n                          }\n                        }, refetchQueries: [\n                          {query: GET_SUBSCRIPTION_GROUPS_QUERY} \n                        ]}\n                      })\n                  }}>\n                    <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                  </button>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationGroupsSubscriptionsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionsGroups))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SUBSCRIPTION_GROUP_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Alert,\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nconst OrganizationSubscriptionGroupForm = ({ t, history, isSubmitting, errors, returnUrl }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.description')}>\n            <Field type=\"text\" \n                    name=\"description\" \n                    className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n        {(isSubmitting) ?\n        <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          loading\n          disabled={isSubmitting}\n        >\n          {t(\"general.submit\")}\n        </Button>\n        :\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n        }\n        <Link to={returnUrl}>\n          <Button color=\"link\">\n              {t('general.cancel')}\n          </Button>\n        </Link>\n        {(isSubmitting) ? \n          <Alert type=\"primary\" hasExtraSpace>\n            <strong>{t('general.please_wait')}</strong> {t('organization.subscription_groups.toast_creating_might_take_a_while')}\n          </Alert> : \n          \"\"\n        }\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionGroupForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTION_GROUPS_QUERY, ADD_SUBSCRIPTION_GROUP } from './queries'\nimport { SUBSCRIPTION_GROUP_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionGroupForm from './OrganizationSubscriptionsGroupForm'\n\nimport {\n  Card,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationSubscriptionsGroupsBase from './OrganizationSubscriptionsGroupsBase';\n\nfunction OrganizationSubscriptionGroupAdd({t, history}) {\n  const returnUrl = \"/organization/subscriptions/groups\"\n  const [addSubscriptionGroup] = useMutation(ADD_SUBSCRIPTION_GROUP)\n\n  return (\n    <OrganizationSubscriptionsGroupsBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('organization.subscription_groups.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: '', description: '' }}\n          validationSchema={SUBSCRIPTION_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            addSubscriptionGroup({ variables: {\n              input: {\n                name: values.name, \n                description: values.description,\n              }\n            }, refetchQueries: [\n                {query: GET_SUBSCRIPTION_GROUPS_QUERY}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                history.push(returnUrl)\n                toast.success((t('organization.subscription_groups.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n              <OrganizationSubscriptionGroupForm\n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n            )}\n        </Formik>\n      </Card>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionGroupAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTION_GROUPS_QUERY, GET_SUBSCRIPTION_GROUP_QUERY, UPDATE_SUBSCRIPTION_GROUP } from './queries'\nimport { SUBSCRIPTION_GROUP_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionGroupForm from './OrganizationSubscriptionsGroupForm'\n\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationSubscriptionsGroupsBase from './OrganizationSubscriptionsGroupsBase';\n\n\nfunction OrganizationSubscriptionGroupEdit({t, match, history}) {\n  const id = match.params.id\n  const returnUrl = \"/organization/subscriptions/groups\"\n  const cardTitle = t('organization.subscription_groups.title_edit')\n  const {loading, error, data} = useQuery(GET_SUBSCRIPTION_GROUP_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateSubscriptionGroup ] = useMutation(UPDATE_SUBSCRIPTION_GROUP)\n  \n  if (loading) return (\n    <OrganizationSubscriptionsGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationSubscriptionsGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.subscription_groups.error_loading')}</p>\n      </ContentCard>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n\n  const initialData = data.organizationSubscriptionGroup;\n\n  return (\n    <OrganizationSubscriptionsGroupsBase>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            description: initialData.description,\n          }}\n          validationSchema={SUBSCRIPTION_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateSubscriptionGroup({ variables: {\n              input: {\n                id: match.params.id,\n                name: values.name,\n                description: values.description,\n              }\n            }, refetchQueries: [\n                {query: GET_SUBSCRIPTION_GROUPS_QUERY}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                history.push(returnUrl)\n                toast.success((t('organization.subscription_groups.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <OrganizationSubscriptionGroupForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              returnUrl={returnUrl}\n            />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n}\n\n\n// class OrganizationSubscriptionGroupEdit extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Organization subscriptiongroup edit props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const match = this.props.match\n//     const history = this.props.history\n//     const id = match.params.id\n//     const return_url = \"/organization/subscriptions/groups\"\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//           <Container>\n//             <Page.Header title=\"Organization\" />\n//             <Grid.Row>\n//               <Grid.Col md={9}>\n//               <Card>\n//                 <Card.Header>\n//                   <Card.Title>{t('organization.subscription_groups.title_edit')}</Card.Title>\n//                   {console.log(match.params.id)}\n//                 </Card.Header>\n//                 <Query query={GET_SUBSCRIPTION_GROUP_QUERY} variables={{ id }} >\n//                 {({ loading, error, data, refetch }) => {\n//                     // Loading\n//                     if (loading) return <p>{t('general.loading_with_dots')}</p>\n//                     // Error\n//                     if (error) {\n//                       console.log(error)\n//                       return <p>{t('general.error_sad_smiley')}</p>\n//                     }\n                    \n//                     const initialData = data.organizationSubscriptionGroup;\n//                     console.log('query data')\n//                     console.log(data)\n\n//                     return (\n                      \n//                       <Mutation mutation={UPDATE_SUBSCRIPTION_GROUP} onCompleted={() => history.push(return_url)}> \n//                       {(updateSubscriptionGroup, { data }) => (\n//                           <Formik\n//                               initialValues={{ \n//                                 name: initialData.name, \n//                                 description: initialData.description,\n//                               }}\n//                               validationSchema={SUBSCRIPTION_GROUP_SCHEMA}\n//                               onSubmit={(values, { setSubmitting }) => {\n//                                   console.log('submit values:')\n//                                   console.log(values)\n\n//                                   updateSubscriptionGroup({ variables: {\n//                                     input: {\n//                                       id: match.params.id,\n//                                       name: values.name,\n//                                       description: values.description,\n//                                     }\n//                                   }, refetchQueries: [\n//                                       {query: GET_SUBSCRIPTION_GROUPS_QUERY}\n//                                   ]})\n//                                   .then(({ data }) => {\n//                                       console.log('got data', data)\n//                                       toast.success((t('organization.subscription_groups.toast_edit_success')), {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                     }).catch((error) => {\n//                                       toast.error((t('general.toast_server_error')) +  error, {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                       console.log('there was an error sending the query', error)\n//                                       setSubmitting(false)\n//                                     })\n//                               }}\n//                               >\n//                               {({ isSubmitting, errors, values }) => (\n//                                 <OrganizationSubscriptionGroupForm\n//                                   isSubmitting={isSubmitting}\n//                                   errors={errors}\n//                                   return_url={return_url}\n//                                 />\n//                               )}\n//                           </Formik>\n//                       )}\n//                       </Mutation>\n//                       )}}\n//                 </Query>\n//               </Card>\n//               </Grid.Col>\n//               <Grid.Col md={3}>\n//                 <HasPermissionWrapper permission=\"change\"\n//                                       resource=\"organizationsubscriptiongroup\">\n//                   <Button color=\"primary btn-block mb-6\"\n//                           onClick={() => history.push(return_url)}>\n//                     <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n//                   </Button>\n//                 </HasPermissionWrapper>\n//                 <OrganizationMenu activeLink=''/>\n//               </Grid.Col>\n//             </Grid.Row>\n//           </Container>\n//         </div>\n//     </SiteWrapper>\n//     )}\n//   }\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionGroupEdit))","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY, ADD_CARD_TO_GROUP, DELETE_CARD_FROM_GROUP } from './queries'\n\n\nimport {\n  Alert,\n  Icon,\n  Button,\n  Card,\n  Dimmer,\n  Table,\n} from \"tabler-react\";\n\nimport ContentCard from '../../general/ContentCard'\nimport OrganizationSubscriptionsGroupsBase from './OrganizationSubscriptionsGroupsBase';\n\nfunction OrganizationSubscriptionGroupEditSubscriptions({t, match, history}) {\n  const groupId = match.params.id\n  const returnUrl = \"/organization/subscriptions/groups\"\n  const cardTitle = t('organization.subscription_group_subscriptions.title_edit')\n  const { loading, error, data } = useQuery(GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY, {\n    variables: { id: groupId }\n  })\n  const [ addCardToGroup ] = useMutation(ADD_CARD_TO_GROUP)\n  const [ deleteCardFromGroup ] = useMutation(DELETE_CARD_FROM_GROUP)\n\n  if (loading) return (\n    <OrganizationSubscriptionsGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationSubscriptionsGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const subscriptions = data.organizationSubscriptions\n  const group = data.organizationSubscriptionGroup\n\n  let group_subscriptions = {}\n  if (group.organizationSubscriptions.edges) {\n    group.organizationSubscriptions.edges.map(({ node }) => (\n      group_subscriptions[node.id] = true\n    ))\n  }\n\n  console.log(\"group_subscriptions\")\n  console.log(group_subscriptions)\n\n\n  return (\n    <OrganizationSubscriptionsGroupsBase>\n      <Card title={cardTitle}>\n      {\n      (!subscriptions.edges) ? \"\" : \n        <Card.Body>\n          <Alert type=\"primary\">\n            <strong>{t('general.group')}</strong> {group.name}\n          </Alert>\n          <Table>\n            <Table.Header>\n              <Table.Row key={v4()}>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {subscriptions.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {(node.id in group_subscriptions) ? \n                        <Icon name=\"check-circle\" className=\"text-green\" /> : <Icon name=\"x-circle\" className=\"text-red\" />\n                      }\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.name}\n                    </Table.Col>\n                    {console.log((node.id in group_subscriptions))}\n                    {(!(node.id in group_subscriptions)) ?\n                      // Add\n                      <Table.Col className=\"text-right text-green\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('general.add_to_group')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked add\")\n                            let pass_id = node.id\n                            addCardToGroup({ variables: {\n                              input: {\n                                organizationSubscription: pass_id,\n                                organizationSubscriptionGroup: groupId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY, variables: {\"id\": groupId, \"archived\": false }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('general.added_to_group'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"plus-circle\" /> { ' ' }\n                          {t('general.add_to_group')} \n                        </Button>\n                      </Table.Col>\n                      :\n                      // Delete\n                      <Table.Col className=\"text-right text-red\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('general.delete_from_group')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked delete\")\n                            console.log(node.id)\n                            let pass_id = node.id\n                            deleteCardFromGroup({ variables: {\n                              input: {\n                                organizationSubscription: pass_id,\n                                organizationSubscriptionGroup: groupId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY, variables: {\"id\": groupId, \"archived\": false }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('general.deleted_from_group'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"minus-circle\" /> { ' ' }\n                          {t('general.delete_from_group')}\n                        </Button>\n                      </Table.Col>\n                      }\n                  </Table.Row>\n                ))}\n            </Table.Body>\n          </Table>\n        </Card.Body>\n      }\n    </Card>\n  </OrganizationSubscriptionsGroupsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionGroupEditSubscriptions))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Alert\n} from \"tabler-react\"\n\nconst AlertInfo = ({ t, title, message }) => (\n  <Alert type=\"primary\">\n      <strong>{title}</strong> {message}\n  </Alert> \n)\n\nexport default withTranslation()(AlertInfo)\n\n\n\n","import { gql } from \"@apollo/client\"\n\nexport const GET_SUBSCRIPTION_PRICES_QUERY = gql`\n  query OrganizationSubscriptionPrices($after: String, $before: String, $organizationSubscription: ID!) {\n    organizationSubscriptionPrices(first: 15, before: $before, after: $after, organizationSubscription: $organizationSubscription) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationSubscription {\n            id\n            name\n          }\n          price\n          priceDisplay\n          financeTaxRate {\n            id\n            name\n          }\n          dateStart\n          dateEnd\n        }\n      }\n    }\n    organizationSubscription(id: $organizationSubscription) {\n      id\n      name\n    }\n  }\n`\n\nexport const GET_SUBSCRIPTION_PRICE_QUERY = gql`\n  query OrganizationSubscriptionPrice($id: ID!, $after: String, $before: String, $archived: Boolean!) {\n    organizationSubscriptionPrice(id:$id) {\n      id\n      organizationSubscription {\n        id\n        name\n      }\n      price\n      priceDisplay\n      financeTaxRate {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n    }\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InputValues($after: String, $before: String, $archived: Boolean) {\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\nimport { confirmAlert } from 'react-confirm-alert'\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport OrganizationMenu from \"../../OrganizationMenu\"\nimport AlertInfo from \"../../../ui/AlertInfo\"\n\nimport { GET_SUBSCRIPTION_PRICES_QUERY } from \"./queries\"\nimport { GET_SUBSCRIPTIONS_QUERY } from \"../queries\"\n\nimport moment from 'moment'\n\n\nconst DELETE_SUBSCRIPTION_PRICE = gql`\n  mutation DeleteOrganizationSubscriptionPrice($input: DeleteOrganizationSubscriptionPriceInput!) {\n    deleteOrganizationSubscriptionPrice(input: $input) {\n      ok\n    }\n  }\n`\n\n\nconst confirmDelete = (t, match, deleteSubscriptionPrice, node) => {\n  console.log(\"clicked delete\")\n  let id = node.id\n\n  confirmAlert({\n    customUI: ({ onClose }) => {\n      return (\n        <div className='custom-ui'>\n          <h1>{t('general.confirm_delete')}</h1>\n          <p>{t('organization.subscription_prices.delete_confirm_msg')}</p>\n          <p>\n            {node.priceDisplay} {node.financeTaxRate.name} <br />\n            <span className=\"text-muted\">\n              {node.dateStart} {(node.dateEnd) ? ' - ' + node.dateEnd : \"\"}\n            </span>\n          </p>\n          <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_delete_no')}</button>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n            deleteSubscriptionPrice({ variables: {\n                input: {\n                id\n                }\n              }, refetchQueries: [\n                  {query: GET_SUBSCRIPTION_PRICES_QUERY, variables: { organizationSubscription: match.params.subscription_id }},\n                  {query: GET_SUBSCRIPTIONS_QUERY, variables: {archived: false}},\n              ]}).then(({ data }) => {\n                console.log('got data', data);\n                toast.success(\n                  t('organization.subscription_prices.deleted'), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error);\n              })\n              onClose()\n            }}\n          >\n            <Icon name=\"trash-2\" /> {t('general.confirm_delete_yes')}\n          </button>\n          \n        </div>\n      );\n    }\n  })\n}\n\n\nfunction OrganizationSubscriptionsPrices ({ t, history, match, archived=false }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/subscriptions\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.subscriptions.title')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <Query query={GET_SUBSCRIPTION_PRICES_QUERY} variables={{ organizationSubscription: match.params.subscription_id }}>\n              {({ loading, error, data: {organizationSubscriptionPrices: subscription_prices, organizationSubscription: subscription}, refetch, fetchMore }) => {\n                  // Loading\n                  if (loading) return (\n                    <ContentCard cardTitle={t('organization.subscription_prices.title')}>\n                      <Dimmer active={true}\n                              loader={true}>\n                      </Dimmer>\n                    </ContentCard>\n                  )\n                  // Error\n                  if (error) return (\n                    <ContentCard cardTitle={t('organization.subscription_prices.title')}>\n                      <p>{t('organization.subscription_prices.error_loading')}</p>\n                    </ContentCard>\n                  )\n                  const headerOptions = null\n\n                  // Empty list\n                  if (!subscription_prices.edges.length) { return (\n                    <ContentCard cardTitle={t('organization.subscription_prices.title')}\n                                headerContent={headerOptions}>\n                      <AlertInfo title={t('general.subscription')} message={subscription.name} />\n                      <p>\n                      {(!archived) ? t('organization.subscription_prices.empty_list') : t(\"organization.subscription_prices.empty_archive\")}\n                      </p>\n                    \n                    </ContentCard>\n                  )} else {   \n                  // Life's good! :)\n                  return (\n                    <ContentCard cardTitle={t('organization.subscription_prices.title')}\n                                headerContent={headerOptions}\n                                pageInfo={subscription_prices.pageInfo}\n                                onLoadMore={() => {\n                                  fetchMore({\n                                    variables: {\n                                      after: subscription_prices.pageInfo.endCursor\n                                    },\n                                    updateQuery: (previousResult, { fetchMoreResult }) => {\n                                      const newEdges = fetchMoreResult.organizationSubscriptionsPrices.edges\n                                      const pageInfo = fetchMoreResult.organizationSubscriptionsPrices.pageInfo\n\n                                      return newEdges.length\n                                        ? {\n                                            // Put the new subscriptions at the end of the list and update `pageInfo`\n                                            // so we have the new `endCursor` and `hasNextPage` values\n                                            organizationSubscriptionsPrices: {\n                                              __typename: previousResult.organizationSubscriptionsPrices.__typename,\n                                              edges: [ ...previousResult.organizationSubscriptionsPrices.edges, ...newEdges ],\n                                              pageInfo\n                                            }\n                                          }\n                                        : previousResult\n                                    }\n                                  })\n                                }} >\n                      <div>\n                        <AlertInfo title={t('general.subscription')} message={subscription.name} />\n\n                        <Table>\n                          <Table.Header>\n                            <Table.Row key={v4()}>\n                              <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n                              <Table.ColHeader></Table.ColHeader>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                              {subscription_prices.edges.map(({ node }) => (\n                                <Table.Row key={v4()}>\n                                  <Table.Col key={v4()}>\n                                    {moment(node.dateStart).format(dateFormat)}\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    {(node.dateEnd) ? moment(node.dateEnd).format(dateFormat) : \"\"}\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    {node.priceDisplay} <br />\n                                    <span className=\"text-muted\">{node.financeTaxRate.name}</span>\n                                  </Table.Col>\n                                  <Table.Col className=\"text-right\" key={v4()}>\n                                    {(node.archived) ? \n                                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                      <Button className='btn-sm' \n                                              onClick={() => history.push(\"/organization/subscriptions/prices/edit/\" + match.params.subscription_id + '/' + node.id)}\n                                              color=\"secondary\">\n                                        {t('general.edit')}\n                                      </Button>\n                                    }\n                                  </Table.Col>\n                                  <Mutation mutation={DELETE_SUBSCRIPTION_PRICE} key={v4()}>\n                                      {(deleteSubscriptionPrice, { data }) => (\n                                        <Table.Col className=\"text-right\" key={v4()}>\n                                          <button className=\"icon btn btn-link btn-sm\" \n                                            title={t('general.delete')} \n                                            href=\"\"\n                                            onClick={() => {confirmDelete(t, match, deleteSubscriptionPrice, node)}}\n                                          >\n                                            <span className=\"text-red\">\n                                              <Icon prefix=\"fe\" name=\"trash-2\" />\n                                            </span>\n                                          </button>\n                                        </Table.Col>\n                                      )}\n                                    </Mutation>\n                                </Table.Row>\n                              ))}\n                          </Table.Body>\n                        </Table>\n                        </div>\n                    </ContentCard>\n                  )}}\n              }\n              </Query>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"organizationsubscriptionprice\">\n                <Button color=\"primary btn-block mb-6\"\n                        onClick={() => history.push(\"/organization/subscriptions/prices/add/\" + match.params.subscription_id)}>\n                  <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.subscription_prices.add')}\n                </Button>\n              </HasPermissionWrapper>\n              <OrganizationMenu activeLink='subscriptions'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionsPrices))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\n\n\nlet accounts_active\nlet b2b_active\nlet suppliers_active\n\n\nconst RelationsMenu = ({ t, activeLink }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'accounts') ? accounts_active = true: accounts_active = false}\n        {(activeLink === 'b2b') ? b2b_active = true: b2b_active = false}\n        {(activeLink === 'suppliers') ? suppliers_active = true: suppliers_active = false}\n        \n\n        <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to=\"#/relations/accounts\"\n          icon=\"users\"\n          active={accounts_active}\n        >\n          {t('relations.accounts.title')}\n        </List.GroupItem>\n        {/* <HasPermissionWrapper \n          permission=\"view\"\n          resource=\"business\">\n          <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/relations/suppliers\"\n            icon=\"package\"\n            active={suppliers_active}\n          >\n            {t('relations.suppliers.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper> */}\n        <HasPermissionWrapper \n          permission=\"view\"\n          resource=\"business\">\n          <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/relations/b2b\"\n            icon=\"briefcase\"\n            active={b2b_active}\n          >\n            {t('relations.b2b.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n    </List.Group>\n);\n\nexport default withTranslation()(RelationsMenu)","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SUBSCRIPTION_PRICE_SCHEMA = Yup.object().shape({\n    price: Yup.number()\n      .typeError(t('yup.type_error_number'))\n      .required(t('yup.field_required'))\n      .max(99999999999999999999, t('yup.max_decimal_number')),\n    financeTaxRate: Yup.string()\n      .required(t('yup.field_required')),\n    dateStart: Yup.date()\n      .required(t('yup.field_required')),\n    // dateEnd: Yup.date(),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nconst OrganizationSubscriptionPriceForm = (\n  { t, history, inputData, isSubmitting, errors, values, setFieldTouched, setFieldValue, return_url }\n  ) => (\n  <FoForm>\n    <Card.Body>\n      <Form.Group label={t('general.price')}>\n        <Field type=\"text\" \n              name=\"price\" \n              className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n        <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.taxrate')}>\n        <Field component=\"select\" \n                name=\"financeTaxRate\" \n                className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n          {console.log(\"query data in subscription price add:\")}\n          {console.log(inputData)}\n          <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n          {inputData.financeTaxRates.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.date_start')}>\n        <CSDatePicker \n          selected={values.dateStart}\n          onChange={(date) => setFieldValue(\"dateStart\", date)}\n          onBlur={() => setFieldTouched(\"dateStart\", true)}\n        />\n        <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.date_end')}>\n        <CSDatePicker \n          selected={values.dateEnd}\n          onChange={(date) => setFieldValue(\"dateEnd\", date)}\n          onBlur={() => setFieldTouched(\"dateEnd\", true)}\n        />\n        <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n      <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('general.submit')}\n      </Button>\n      <Button color=\"link\" onClick={() => history.push(return_url)}>\n        {t('general.cancel')}\n      </Button>\n    </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionPriceForm))","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_SUBSCRIPTION_PRICES_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { GET_SUBSCRIPTIONS_QUERY } from '../queries'\nimport { SUBSCRIPTION_PRICE_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionPriceForm from './OrganizationSubscriptionPriceForm'\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nconst ADD_SUBSCRIPTION_PRICE = gql`\n  mutation CreateOrganizationSubscriptionPrice($input: CreateOrganizationSubscriptionPriceInput!) {\n    createOrganizationSubscriptionPrice(input: $input) {\n      organizationSubscriptionPrice {\n        id\n        organizationSubscription {\n          id\n          name\n        }\n        price\n        financeTaxRate {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n      }\n    }\n  }\n`\n\nconst return_url = \"/organization/subscriptions/prices/\"\n\nconst OrganizationSubscriptionPriceAdd = ({ t, history, match }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title=\"Organization\" />\n        <Grid.Row>\n          <Grid.Col md={9}>\n          <Card>\n            <Card.Header>\n              <Card.Title>{t('organization.subscription_prices.title_add')}</Card.Title>\n            </Card.Header>\n            <Query query={GET_INPUT_VALUES_QUERY} variables={{ archived: false }} >\n              {({ loading, error, data, refetch }) => {\n                  // Loading\n                  if (loading) return <p>{t('general.loading_with_dots')}</p>\n                  // Error\n                  if (error) {\n                    console.log(error)\n                    return <p>{t('general.error_sad_smiley')}</p>\n                  }\n                  \n                  console.log('query data')\n                  console.log(data)\n                  const inputData = data\n\n                  return (\n                    <Mutation mutation={ADD_SUBSCRIPTION_PRICE} onCompleted={() => history.push(return_url + match.params.subscription_id)}> \n                      {(addSubscription, { data }) => (\n                          <Formik\n                              initialValues={{ price: \"\", dateStart: new Date() }}\n                              validationSchema={SUBSCRIPTION_PRICE_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n\n                                  let dateEnd\n                                  if (values.dateEnd) {\n                                    dateEnd = dateToLocalISO(values.dateEnd)\n                                  } else {\n                                    dateEnd = values.dateEnd\n                                  }\n\n                                  addSubscription({ variables: {\n                                    input: {\n                                      organizationSubscription: match.params.subscription_id,\n                                      price: values.price,\n                                      financeTaxRate: values.financeTaxRate,\n                                      dateStart: dateToLocalISO(values.dateStart),\n                                      dateEnd: dateEnd\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_SUBSCRIPTION_PRICES_QUERY, variables: {\"organizationSubscription\": match.params.subscription_id }},\n                                      {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data);\n                                      toast.success((t('organization.subscription_prices.toast_add_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n                                <OrganizationSubscriptionPriceForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  setFieldTouched={setFieldTouched}\n                                  setFieldValue={setFieldValue}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                />\n                              )}\n                          </Formik>\n                      )}\n                    </Mutation>\n                  )}}\n                </Query>\n          </Card>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationsubscriptionprice\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(return_url + match.params.subscription_id)}>\n                <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='subscriptions'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionPriceAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTION_PRICES_QUERY, GET_SUBSCRIPTION_PRICE_QUERY } from './queries'\nimport { GET_SUBSCRIPTIONS_QUERY } from '../queries'\n\nimport { SUBSCRIPTION_PRICE_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionPriceForm from './OrganizationSubscriptionPriceForm'\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nconst UPDATE_SUBSCRIPTION_PRICE = gql`\n  mutation UpdateOrganizationSubscriptionPrice($input: UpdateOrganizationSubscriptionPriceInput!) {\n    updateOrganizationSubscriptionPrice(input: $input) {\n      organizationSubscriptionPrice {\n        id\n        organizationSubscription {\n          id\n          name\n        }\n        price\n        financeTaxRate {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n      }\n    }\n  }\n`\n\n\nclass OrganizationSubscriptionPriceEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization location room edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const subscription_id = match.params.subscription_id\n    const return_url = \"/organization/subscriptions/prices/\" + subscription_id\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title=\"Organization\" />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.subscription_prices.title_edit')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_SUBSCRIPTION_PRICE_QUERY} variables={{ id, archived: false }} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    const initialData = data.organizationSubscriptionPrice\n                    console.log('query data')\n                    console.log(data)\n                    const inputData = data\n\n                    return (\n                      \n                      <Mutation mutation={UPDATE_SUBSCRIPTION_PRICE} onCompleted={() => history.push(return_url)}> \n                      {(updateSubscriptionPrice, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                price: initialData.price, \n                                financeTaxRate: initialData.financeTaxRate.id,\n                                dateStart: initialData.dateStart,\n                                dateEnd: initialData.dateEnd,\n                              }}\n                              validationSchema={SUBSCRIPTION_PRICE_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  let dateEnd\n                                  if (values.dateEnd) {\n                                    if (values.dateEnd instanceof Date) {\n                                      dateEnd = dateToLocalISO(values.dateEnd)\n                                    } else {\n                                      dateEnd = values.dateEnd\n                                    }\n                                  } else {\n                                    dateEnd = values.dateEnd\n                                  }\n\n                                  let dateStart\n                                  if (values.dateStart instanceof Date) {\n                                    dateStart = dateToLocalISO(values.dateStart)\n                                  } else {\n                                    // Input hasn't changed and DatePicket hasn't made a Date object out of it\n                                    dateStart = values.dateStart\n                                  }\n\n                                  updateSubscriptionPrice({ variables: {\n                                    input: {\n                                      id: match.params.id,\n                                      price: values.price,\n                                      financeTaxRate: values.financeTaxRate,\n                                      dateStart: dateStart,\n                                      dateEnd: dateEnd,\n                                    }\n                                  }, refetchQueries: [\n                                    {query: GET_SUBSCRIPTION_PRICES_QUERY, variables: { organizationSubscription: match.params.subscription_id }},\n                                    {query: GET_SUBSCRIPTIONS_QUERY, variables: { \"archived\": false }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.subscription_prices.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n                                <OrganizationSubscriptionPriceForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  setFieldTouched={setFieldTouched}\n                                  setFieldValue={setFieldValue}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                >\n                                  {console.log(errors)}\n                                </OrganizationSubscriptionPriceForm>\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"change\"\n                                      resource=\"organizationlocationroom\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='locations'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionPriceEdit))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Container,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport RelationsMenu from \"../RelationsMenu\"\n\n\nclass RelationsHome extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"School home props:\")\n    console.log(props)\n  }\n\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"relations.title\")} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n                <Grid.Row>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/relations/accounts'>\n                      <StampCard header={<small>{t('relations.accounts.title')}</small>} footer={t('')} color=\"blue\" icon=\"users\" />\n                    </Link>\n                  </Grid.Col>\n                  {/* <HasPermissionWrapper permission=\"view\"\n                                        resource=\"business\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/relations/suppliers')}>\n                        <StampCard header={<small>{t('relations.suppliers.title')}</small>} footer={t('')} color=\"blue\" icon=\"package\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper> */}\n                  <HasPermissionWrapper permission=\"view\"\n                                        resource=\"business\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/relations/b2b'>\n                        <StampCard header={<small>{t('relations.b2b.title')}</small>} footer={t('')} color=\"blue\" icon=\"briefcase\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                </Grid.Row>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <RelationsMenu />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(RelationsHome))","// @flow\n\nimport React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n    Button,\n    Icon\n  } from \"tabler-react\"\n\nimport CSLS from \"../../tools/cs_local_storage\"\n\nclass InputSearch extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Input search props:\")\n    console.log(props)\n    this.input = React.createRef()\n    let inputValue\n    const initialValue = localStorage.getItem(this.props.initialValueKey)\n    if (initialValue) {\n      inputValue = initialValue \n    } else {\n      inputValue = \"\"\n    }\n\n    this.state = {\n      inputValue: inputValue,\n      submitValue: \"\",\n      doneTypingInterval: 500\n    }\n  }\n  \n  componentDidMount() {\n    this.typingTimer = null\n    this.input.current.focus()\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.typingTimer)\n  }\n\n\n  onInputKeyUp() {\n    // Clear timeout\n    if (this.typingTimer) {\n      clearTimeout(this.typingTimer)\n    }\n    \n    this.typingTimer = setTimeout(() => {\n      // console.log(this.input.current.value)  \n      this.setState({submitValue: this.input.current.value})\n      this.props.onChange(this.state.submitValue)\n    }, this.state.doneTypingInterval)\n  }\n\n\n  onInputChange(event) {\n    this.setState({inputValue: event.target.value})\n  }\n\n\n  render() {\n    const t = this.props.t\n    const placeholder = this.props.placeholder\n\n    return(\n        <div className=\"row row gutters-xs\">\n          <div className=\"col\">\n            <div className=\"input-icon\">\n              <span className=\"input-icon-addon\">\n                <Icon name=\"search\" />\n              </span>\n              <input \n                ref={this.input}\n                className=\"form-control\" \n                type=\"text\" \n                placeholder={placeholder} \n                value={this.state.inputValue}\n                onKeyUp={this.onInputKeyUp.bind(this)}\n                onChange={this.onInputChange.bind(this)}\n              />\n            </div>\n          </div>\n          <div className=\"col col-auto\">\n            <Button\n              color=\"secondary\"\n              icon=\"x\"\n              disabled={!(this.state.inputValue)}\n              onClick={() => {\n                this.setState({inputValue: \"\", submitValue: \"\"}, () => {\n                  // setState callback, this makes sure the onChange function is calles with new values\n                  console.log(this.state)\n                  this.props.onChange(this.state.submitValue) \n                })\n              }}\n            >\n            </Button>\n          </div>\n        </div>\n    )\n  }\n}\n\nInputSearch.defaultProps = {\n  onChange: f=>f,\n  onClear: f=>f,\n}\n  \nexport default withTranslation()(InputSearch)","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let isActive = localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE)\n  if (isActive === null) {\n    isActive = true\n  }\n\n  let queryVars = {\n    isActive: (isActive === \"true\") ? true : false,\n    customer: undefined,\n    teacher: undefined,\n    employee: undefined\n  }\n\n  let search = localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_SEARCH)\n  queryVars.searchName = search\n\n  let type_filter = localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_FILTER_TYPE)\n  switch (type_filter) {\n    case \"customer\":\n      queryVars.customer = true\n      break\n    case \"teacher\":\n      queryVars.teacher = true\n      break\n    case \"employee\":\n      queryVars.employee = true\n      break\n  }\n\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Form,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport InputSearch from \"../../general/InputSearch\"\nimport RelationsMenu from \"../RelationsMenu\"\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from \"./tools\"\n\n\nfunction RelationsAccountsBase({t, history, children, refetch}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"relations.title\")}>\n            <div className=\"page-options d-flex\">\n              <Form.Select\n                className=\"w-auto mr-2\"\n                onChange={(event) => {\n                  console.log(event.target.value)\n                  localStorage.setItem(CSLS.RELATIONS_ACCOUNTS_FILTER_TYPE, event.target.value)\n                  console.log('fire refetch')\n                  console.log(refetch(get_list_query_variables()))\n                }}\n              >\n                <option value=\"\">{t(\"general.all_accounts\")}</option>\n                <option value=\"customer\">{t(\"general.customers\")}</option>\n                <option value=\"teacher\">{t(\"general.teachers\")}</option>\n                <option value=\"employee\">{t(\"general.employees\")}</option>\n              </Form.Select>\n              <InputSearch \n                initialValueKey={CSLS.RELATIONS_ACCOUNTS_SEARCH}\n                placeholder=\"Search...\"\n                onChange={(value) => {\n                  console.log(value)\n                  localStorage.setItem(CSLS.RELATIONS_ACCOUNTS_SEARCH, value)\n                  refetch(get_list_query_variables())\n                }}\n              />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"account\">\n                <Button color=\"primary btn-block mb-6\"\n                        onClick={() => history.push(\"/relations/accounts/add\")}>\n                  <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.accounts.add')}\n                </Button>\n              </HasPermissionWrapper>\n              <RelationsMenu activeLink='accounts'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>        \n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsAccountsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNTS_QUERY = gql`\nquery Accounts(\n  $after: String, \n  $before: String, \n  $isActive: Boolean!, \n  $searchName: String,\n  $customer: Boolean,\n  $teacher: Boolean,\n  $employee: Boolean\n  \n) {\n  accounts(\n    first: 15, \n    before: $before, \n    after: $after, \n    isActive: $isActive, \n    fullName_Icontains: $searchName,\n    customer: $customer,\n    teacher: $teacher,\n    employee: $employee\n  ) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        customer\n        teacher\n        employee\n        firstName\n        lastName\n        fullName\n        email\n        isActive\n        urlImageThumbnailSmall\n        subscriptions(last: 2) {\n          edges {\n            node {\n              organizationSubscription {\n                id\n                name\n              }\n              dateStart\n              dateEnd\n            }\n          }\n        }\n        classpasses(last: 2) {\n          edges {\n            node {\n              id\n              organizationClasspass {\n                id\n                name\n              }\n              dateStart\n              dateEnd\n              classesRemaining\n              classesRemainingDisplay\n              isExpired\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport const GET_ACCOUNT_QUERY = gql`\n  query Account($id: ID!) {\n    account(id:$id) {\n      id\n      customer\n      teacher\n      employee\n      firstName\n      lastName\n      email\n      dateOfBirth\n      gender\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n      isActive\n      keyNumber\n      urlImageThumbnailSmall\n      organizationDiscovery {\n        id\n      }\n      organizationLanguage {\n        id\n      }\n    }\n    organizationDiscoveries(first: 100){\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    organizationLanguages(first: 100) {\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const ADD_ACCOUNT = gql`\n  mutation CreateAccount($input:CreateAccountInput!) {\n    createAccount(input: $input) {\n      account {\n        id\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT = gql`\n  mutation UpdateAccount($input:UpdateAccountInput!) {\n    updateAccount(input: $input) {\n      account {\n        id\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT_ACTIVE = gql`\n  mutation UpdateAccountActive($input: UpdateAccountActiveInput!) {\n    updateAccountActive(input: $input) {\n      account {\n        id\n        isActive\n      }\n    }\n  }\n`\n\nexport const DELETE_ACCOUNT = gql`\n  mutation DeleteAccount($input: DeleteAccountInput!) {\n    deleteAccount(input: $input) {\n      ok\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\n\nimport {\n  Avatar,\n  Badge,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport ContentCard from \"../../general/ContentCard\"\nimport RelationsAccountsBase from \"./RelationsAccountsBase\"\nimport { GET_ACCOUNTS_QUERY, UPDATE_ACCOUNT_ACTIVE, DELETE_ACCOUNT } from \"./queries\"\nimport { get_list_query_variables } from \"./tools\"\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\n// Set some initial value for isActive, if not found\nif (!localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE)) {\n  localStorage.setItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE, true) \n} \n\nconst confirm_delete = ({t, msgConfirm, msgDescription, msgSuccess, deleteFunction, functionVariables}) => {\n  confirmAlert({\n    customUI: ({ onClose }) => {\n      return (\n        <div className='custom-ui'>\n          <h1>{t('general.confirm_delete')}</h1>\n          {msgConfirm}\n          {msgDescription}\n          <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_delete_no')}</button>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              deleteFunction(functionVariables)\n                .then(({ data }) => {\n                  console.log('got data', data);\n                  toast.success(\n                    msgSuccess, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error);\n                })\n              onClose()\n            }}\n          >\n            <Icon name=\"trash-2\" /> {t('general.confirm_delete_yes')}\n          </button>\n        </div>\n      )\n    }\n  })\n}\n\n\nfunction RelationsAccounts({t, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const {loading, error, data, fetchMore, refetch} = useQuery(GET_ACCOUNTS_QUERY, {\n    variables: get_list_query_variables(),\n    fetchPolicy: \"network-only\"\n  })\n  const [updateAccountActive] = useMutation(UPDATE_ACCOUNT_ACTIVE)\n  const [deleteAccount] = useMutation(DELETE_ACCOUNT)\n\n  if (loading || (data && !data.accounts)) return (\n    <RelationsAccountsBase>\n      <ContentCard cardTitle={t('relations.accounts.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </RelationsAccountsBase>\n  )\n  \n  if (error) return (\n    <RelationsAccountsBase>\n      <Container>\n        <ContentCard cardTitle={t('relations.accounts.title')}>\n          <p>{t('relations.accounts.error_loading')}</p>\n        </ContentCard>\n      </Container>\n    </RelationsAccountsBase>\n  )\n\n  const headerOptions = <Card.Options>\n    <Button color={(localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE) === \"true\") ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {\n              localStorage.setItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE, true)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.active')}\n    </Button>\n    <Button color={(localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE) === \"false\") ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {\n              localStorage.setItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE, false)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.deleted')}\n    </Button>\n  </Card.Options>\n\n  let accounts = data.accounts\n\n  // Empty list\n  if (!accounts.edges.length) { return (\n    <RelationsAccountsBase refetch={refetch}>\n      <ContentCard cardTitle={t('relations.accounts.title')}\n                    headerContent={headerOptions}>\n        <p>\n          {(localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE) === \"true\") ? t('relations.accounts.empty_list') : t(\"relations.accounts.empty_archive\")}\n        </p>\n      </ContentCard>\n    </RelationsAccountsBase>\n  )}\n\n  // Data\n  return (\n    <RelationsAccountsBase refetch={refetch}>\n      <ContentCard \n        cardTitle={t('relations.accounts.title')}\n        headerContent={headerOptions}\n        pageInfo={data.accounts.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: data.accounts.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accounts.edges\n              const pageInfo = fetchMoreResult.accounts.pageInfo \n\n              return newEdges.length\n                ? {\n                    // Put the new accounts at the end of the list and update `pageInfo`\n                  accounts: {\n                    __typename: previousResult.accounts.__typename,\n                    edges: [ ...previousResult.accounts.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader>{t('general.account')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.products')}</Table.ColHeader>\n              {/* <Table.ColHeader>{t('general.info')}</Table.ColHeader> */}\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {accounts.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col>\n                    <Link to={`/relations/accounts/${node.id}/profile`}>\n                      {(node.urlImageThumbnailSmall) ? \n                        <Avatar size={\"lg\"} imageURL={node.urlImageThumbnailSmall} /> :\n                        <Avatar size={\"lg\"} icon=\"user\" />\n                      }\n                    </Link>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <span className=\"bold\">{node.fullName}</span>\n                    <div className=\"text-muted\">\n                      <a href={`mailto:${node.email}`}>{node.email}</a>\n                    </div>\n                    {(node.customer) ? <span>\n                        <Badge color=\"primary\" className=\"mr-1\">{t(\"general.customer\")}</Badge>\n                      </span> : null}\n                    {(node.teacher) ? <span>\n                        <Badge color=\"info\" className=\"mr-1\">{t(\"general.teacher\")}</Badge>\n                      </span> : null}\n                    {(node.employee) ? <span>\n                        <Badge color=\"secondary\">{t(\"general.employee\")}</Badge>\n                      </span> : null}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.subscriptions) ? \n                      // This is a workaround that reserves the array. Not yet figured out how to get the sorting right on subqueries in the backend\n                      node.subscriptions.edges.slice(0).reverse().map(({ node: subscription }) => (\n                        <div>\n                          <small>\n                          <Icon name=\"edit\" /> {' '}\n                          { subscription.organizationSubscription.name } <br />\n                          <div className=\"text-muted \">\n                            <small>\n                              { moment(subscription.dateStart).format(dateFormat) } \n                              {(subscription.dateEnd) ? \n                                <span> - {moment(subscription.dateEnd).format(dateFormat)}</span>  \n                                : \"\"\n                              }\n                            </small>\n                          </div>\n                          </small>\n                        </div>\n                      )) \n                      : \"\"\n                    }\n                    {(node.classpasses) ? \n                      // This is a workaround that reserves the array. Not yet figured out how to get the sorting right on subqueries in the backend\n                      node.classpasses.edges.slice(0).reverse().map(({ node: classpass }) => (\n                        <div>\n                          <small>\n                          <Icon name=\"credit-card\" /> {' '}\n                          { classpass.organizationClasspass.name } <br />\n                          <div className=\"text-muted \">\n                            <small>\n                              { moment(classpass.dateStart).format(dateFormat) } {\" - \"}\n                              { moment(classpass.dateEnd).format(dateFormat)} { \" | \" }  \n                              { t(\"general.classes_remaining\") }: { classpass.classesRemainingDisplay }\n                            </small>\n                          </div>\n                          </small>\n                        </div>\n                      )) \n                      : \"\"\n                    }\n                  </Table.Col>\n                  {/* <Table.Col key={v4()}>\n                    {(node.customer) ? <span>\n                        <Badge color=\"primary\" className=\"mb-1\">{t(\"general.customer\")}</Badge> <br />\n                      </span> : null}\n                    {(node.teacher) ? <span>\n                        <Badge color=\"info\" className=\"mb-1\">{t(\"general.teacher\")}</Badge> <br />\n                      </span> : null}\n                    {(node.employee) ? <span>\n                        <Badge color=\"secondary\" className=\"mb-1\">{t(\"general.employee\")}</Badge> <br />\n                      </span> : null}\n                  </Table.Col> */}\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(!node.isActive) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Link to={`/relations/accounts/${node.id}/profile`}>\n                        <Button className='btn-sm' \n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                      </Link>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.deactivate')} \n                      href=\"\"\n                      onClick={() => {\n                        console.log(\"clicked isActive\")\n                        let id = node.id\n                        let isActive \n                        if (localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE) == \"true\") {\n                          isActive = true\n                        } else {\n                          isActive = false\n                        }\n\n                        updateAccountActive({ variables: {\n                          input: {\n                            id,\n                            isActive: !isActive // invert, as we need the opposite from the list currently displayed\n                          }\n                    }, refetchQueries: [\n                        {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (isActive) ? t('relations.accounts.deactivated'): t('relations.accounts.restored'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      {\n                        (node.isActive) ?\n                          <Icon prefix=\"fe\" name=\"trash-2\" /> :\n                          t(\"general.restore\")\n                      }\n                    </button>\n                  </Table.Col>\n                  {\n                    (node.isActive) ? '' :\n                      <Table.Col className=\"text-right\" key={v4()}>\n                        <button className=\"icon btn btn-link btn-sm\" \n                          title={t('general.delete')} \n                          href=\"\"\n                          onClick={() => {\n                            confirm_delete({\n                              t: t,\n                              msgConfirm: t(\"relations.accounts.delete_confirm_msg\"),\n                              msgDescription: <p>{node.first_name} {node.last_name}</p>,\n                              msgSuccess: t('relations.accounts.deleted'),\n                              deleteFunction: deleteAccount,\n                              functionVariables: { variables: {\n                                input: {\n                                  id: node.id\n                                }\n                              }, refetchQueries: [\n                                {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()}\n                              ]}\n                            })\n                        }}>\n                          <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                        </button>\n                      </Table.Col>\n                  }\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </RelationsAccountsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsAccounts))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SCHEMA = Yup.object().shape({\n    firstName: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n    lastName: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n    email: Yup.string()\n      .email(t('yup.email'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nconst RelationsAccountForm = ({ t, history, isSubmitting, errors, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group label={t('general.first_name')}>\n                <Field type=\"text\" \n                        name=\"firstName\" \n                        className={(errors.firstName) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\" />\n                <ErrorMessage name=\"firstName\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n            <Grid.Col>\n              <Form.Group label={t('general.last_name')}>\n                <Field type=\"text\" \n                        name=\"lastName\" \n                        className={(errors.lastName) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\" />\n                <ErrorMessage name=\"lastName\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          </Grid.Row>\n          <Form.Group label={t('general.email')}>\n            <Field type=\"text\" \n                    name=\"email\" \n                    className={(errors.email) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"email\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsAccountForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNTS_QUERY, ADD_ACCOUNT } from './queries'\nimport { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { get_list_query_variables } from \"./tools\"\nimport RelationsAccountForm from \"./RelationsAccountForm\"\nimport RelationsMenu from '../RelationsMenu'\n\nconst returnUrl = \"/relations/accounts\"\n\nfunction RelationsAccountAdd({t, history}) {\n  const [addAccount] = useMutation(ADD_ACCOUNT)\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('relations.title')} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n            <Card>\n              <Card.Header>\n                <Card.Title>{t('relations.accounts.title_add')}</Card.Title>\n              </Card.Header>\n                <Formik\n                    initialValues={{ name: '', code: '' }}\n                    validationSchema={ACCOUNT_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n                        addAccount({ variables: {\n                          input: {\n                            firstName: values.firstName,\n                            lastName: values.lastName,\n                            email: values.email\n                          }\n                        }, refetchQueries: [\n                            {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()}\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            const accountId = data.createAccount.account.id\n                            history.push(`/relations/accounts/${accountId}/profile`)\n                            toast.success((t('relations.accounts.toast_add_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setSubmitting(false)\n                          })\n                    }}\n                    >\n                    {({ isSubmitting, errors }) => (\n                        <RelationsAccountForm\n                          isSubmitting={isSubmitting}\n                          errors={errors}\n                          returnUrl={returnUrl}\n                        />\n                    )}\n                </Formik>\n            </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"account\">\n                <Button color=\"primary btn-block mb-6\"\n                        onClick={() => history.push(returnUrl)}>\n                  <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                </Button>\n              </HasPermissionWrapper>\n              <RelationsMenu activeLink='accounts'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsAccountAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Avatar,\n  Card,\n  Icon,\n  List,\n  Media,\n  SocialNetworksList,\n  Tooltip,\n} from \"tabler-react\"\n\nfunction ProfileCardSmall({ t, value, user, avatarSize='md' }) {\n  if (!user) {\n    return \"\"\n  }\n\n  const accountId = user.id\n\n  return (\n    <Card>\n      <Card.Body>\n        <Media>\n          <Link to={`/relations/accounts/${accountId}/profile/image`}>\n            {(user.urlImageThumbnailSmall) ? \n              <Avatar size={avatarSize + \" mr-5\"} imageURL={user.urlImageThumbnailSmall} /> :\n              <Avatar size={avatarSize + \" mr-5\"} icon=\"user\" />\n            }\n          </Link>\n          <Media.Body>\n            <h4 className=\"mb-2\">{user.firstName + \" \" + user.lastName}</h4>\n            <div className=\"text-muted mb-0\">\n              <SocialNetworksList className=\"mb-0 mt-2\">\n                {\n                  (user.phone) ? \n                    <List.Item inline>\n                      <Tooltip content={user.phone} placement=\"top\">\n                        <span>\n                          <Icon prefix=\"fe\" name=\"phone\" />\n                        </span>\n                      </Tooltip>\n                    </List.Item>\n                  // No phone number found\n                  : \"\"\n                }\n                {\n                  (user.mobile) ?\n                    <List.Item inline>\n                      <Tooltip content={user.mobile} placement=\"top\">\n                        <span>\n                          <Icon prefix=\"fe\" name=\"smartphone\" />\n                        </span>\n                      </Tooltip>\n                    </List.Item> \n                    // No mobile number found\n                    : \"\"\n                }\n\n                <List.Item inline>\n                  <Tooltip content={user.email} placement=\"top\">\n                    <a href={\"mailto:\" + user.email}>\n                      <Icon prefix=\"fe\" name=\"mail\" />\n                    </a>\n                  </Tooltip>\n                </List.Item>\n\n              </SocialNetworksList>\n              {/* items={[\n                <a href={\"mailto:\" + user.email}\n                  title={user.email}>\n                  <Icon prefix=\"fe\" name=\"mail\" />\n                </a>,\n                <span title=\"Phone number here\">\n                  <Icon prefix=\"fe\" name=\"phone\" />\n                </span>,\n                <span title=\"Phone number here\">\n                  <Icon prefix=\"fe\" name=\"mobile\" />\n                </span>,\n                \n              ]}\n            /> */}\n              {/* <Text.Small>\n                <Icon name=\"mail\" />  <a href={\"mailto:\" + user.email}>{user.email}</a> <br/>\n                <Icon name=\"phone\" /> user phone nr here... <br />\n                <Icon name=\"smartphone\" /> user mobile nr here...\n              </Text.Small> */}\n            </div>\n            {/* <SocialNetworksList\n              items={[\n                <a href=\"http://www.twitter.com\">\n                  <Icon prefix=\"fa\" name=\"twitter\" />\n                </a>,\n                <a href=\"http://www.facebook.com\">\n                  <Icon prefix=\"fa\" name=\"facebook\" />\n                </a>,\n              ]}\n            /> */}\n          </Media.Body>\n        </Media>\n      </Card.Body>\n    </Card>  \n  )\n}\n\nexport default withTranslation()(ProfileCardSmall)","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\nimport { GET_ACCOUNT_QUERY } from './queries'\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n\nlet profile_active\nlet memberships_active\nlet subscriptions_active\nlet classpasses_active\nlet classes_active\nlet documents_active\nlet tickets_active\nlet teacher_profile_active\nlet orders_active\nlet invoices_active\nlet bank_account_active\nlet notes_active\nlet finance_payment_batch_category_item_active\nlet accepted_documents_active\n\nfunction ProfileMenu({t, accountId, activeLink}) {\n    const {loading, error, data} = useQuery(GET_ACCOUNT_QUERY, {\n        variables: {id: accountId}\n    })\n\n    if (loading) return <p>{t('general.loading_with_dots')}</p>\n    // Error\n    if (error) {\n      console.log(error)\n      return <p>{t('general.error_sad_smiley')}</p>\n    }\n    const account = data.account\n    console.log('account in profile menu')\n    console.log(account)\n\n    return (\n      <List.Group transparent={true}>\n        {(activeLink === 'profile') ? profile_active = true: profile_active = false}\n        {(activeLink === 'memberships') ? memberships_active = true: memberships_active = false}\n        {(activeLink === 'subscriptions') ? subscriptions_active = true: subscriptions_active = false}\n        {(activeLink === 'classpasses') ? classpasses_active = true: classpasses_active = false}\n        {(activeLink === 'classes') ? classes_active = true: classes_active = false}\n        {(activeLink === 'documents') ? documents_active = true: documents_active = false}\n        {(activeLink === 'tickets') ? tickets_active = true: tickets_active = false}\n        {(activeLink === 'teacher_profile') ? teacher_profile_active = true: teacher_profile_active = false}\n        {(activeLink === 'orders') ? orders_active = true: orders_active = false}\n        {(activeLink === 'invoices') ? invoices_active = true: invoices_active = false}\n        {(activeLink === 'bank_account') ? bank_account_active = true: bank_account_active = false}\n        {(activeLink === 'notes') ? notes_active = true: notes_active = false}\n        {(activeLink === 'finance_payment_batch_category_item') ? \n            finance_payment_batch_category_item_active = true : \n            finance_payment_batch_category_item_active = false }\n        {(activeLink === 'accepted_documents') ? accepted_documents_active = true: accepted_documents_active = false}\n        \n\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/relations/accounts/\" + accountId + \"/profile\"}\n            icon=\"user\"\n            active={profile_active}\n        >\n            {t('relations.accounts.profile')}\n        </List.GroupItem>\n        {/* <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountmembership\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/memberships\"}\n                icon=\"clipboard\"\n                active={memberships_active}\n                >\n            {t('relations.account.memberships.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper> */}\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountsubscription\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/subscriptions\"}\n                icon=\"edit\"\n                active={subscriptions_active}\n                >\n            {t('relations.account.subscriptions.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountclasspass\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/classpasses\"}\n                icon=\"credit-card\"\n                active={classpasses_active}\n                >\n            {t('relations.account.classpasses.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"scheduleitemattendance\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/classes\"}\n                icon=\"book\"\n                active={classes_active}\n                >\n            {t('relations.account.classes.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountscheduleeventticket\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/event_tickets\"}\n                icon=\"clipboard\"\n                active={tickets_active}\n                >\n            {t('relations.account.event_tickets.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"financeorder\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/orders\"}\n                icon=\"file-plus\"\n                active={orders_active}\n                >\n            {t('relations.account.orders.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"financeinvoice\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/invoices\"}\n                icon=\"file-text\"\n                active={invoices_active}\n                >\n            {t('relations.account.invoices.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountbankaccount\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/bank_accounts\"}\n                icon=\"briefcase\"\n                active={bank_account_active}\n                >\n            {t('relations.account.bank_accounts.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountfinancepaymentbatchcategoryitem\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/finance_payment_batch_category_items\"}\n                icon=\"list\"\n                active={finance_payment_batch_category_item_active}\n                >\n            {t('relations.account.finance_payment_batch_category_items.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        { (account.teacher) ?\n            <HasPermissionWrapper \n                permission=\"view\"\n                resource=\"accountteacherprofile\">\n                <List.GroupItem\n                    key={v4()}\n                    className=\"d-flex align-items-center\"\n                    to={\"#/relations/accounts/\" + accountId + \"/teacher_profile\"}\n                    icon=\"paperclip\"\n                    active={teacher_profile_active}\n                    >\n                {t('relations.account.teacher_profile.title')}\n                </List.GroupItem>\n            </HasPermissionWrapper>\n        : \"\" }\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountaccepteddocument\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/accepted_documents\"}\n                icon=\"check-square\"\n                active={accepted_documents_active}\n                >\n            {t('relations.account.accepted_documents.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountdocument\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/documents\"}\n                icon=\"file\"\n                active={documents_active}\n                >\n            {t('relations.account.documents.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountnote\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/notes\"}\n                icon=\"message-square\"\n                active={notes_active}\n                >\n            {t('relations.account.notes.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n    </List.Group>\n  )\n}\n\nexport default withTranslation()(ProfileMenu)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nconst RelationsAccountsBack = ({ t }) => (\n  <div className=\"page-options d-flex\">\n    <Link to=\"/relations/accounts\" \n          className='btn btn-outline-secondary btn-sm'>\n        <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('relations.accounts.title')}\n    </Link>\n  </div>\n)\n\nexport default withTranslation()(RelationsAccountsBack)","import { t } from 'i18next'\n\nconst ISO_COUNTRY_CODES = [{\"Name\":t(\"countries.Afghanistan\"),\"Code\":\"AF\"},{\"Name\":t(\"countries.Åland_Islands\"),\"Code\":\"AX\"},{\"Name\":t(\"countries.Albania\"),\"Code\":\"AL\"},{\"Name\":t(\"countries.Algeria\"),\"Code\":\"DZ\"},{\"Name\":t(\"countries.American_Samoa\"),\"Code\":\"AS\"},{\"Name\":t(\"countries.Andorra\"),\"Code\":\"AD\"},{\"Name\":t(\"countries.Angola\"),\"Code\":\"AO\"},{\"Name\":t(\"countries.Anguilla\"),\"Code\":\"AI\"},{\"Name\":t(\"countries.Antarctica\"),\"Code\":\"AQ\"},{\"Name\":t(\"countries.Antigua_and_Barbuda\"),\"Code\":\"AG\"},{\"Name\":t(\"countries.Argentina\"),\"Code\":\"AR\"},{\"Name\":t(\"countries.Armenia\"),\"Code\":\"AM\"},{\"Name\":t(\"countries.Aruba\"),\"Code\":\"AW\"},{\"Name\":t(\"countries.Australia\"),\"Code\":\"AU\"},{\"Name\":t(\"countries.Austria\"),\"Code\":\"AT\"},{\"Name\":t(\"countries.Azerbaijan\"),\"Code\":\"AZ\"},{\"Name\":t(\"countries.Bahamas\"),\"Code\":\"BS\"},{\"Name\":t(\"countries.Bahrain\"),\"Code\":\"BH\"},{\"Name\":t(\"countries.Bangladesh\"),\"Code\":\"BD\"},{\"Name\":t(\"countries.Barbados\"),\"Code\":\"BB\"},{\"Name\":t(\"countries.Belarus\"),\"Code\":\"BY\"},{\"Name\":t(\"countries.Belgium\"),\"Code\":\"BE\"},{\"Name\":t(\"countries.Belize\"),\"Code\":\"BZ\"},{\"Name\":t(\"countries.Benin\"),\"Code\":\"BJ\"},{\"Name\":t(\"countries.Bermuda\"),\"Code\":\"BM\"},{\"Name\":t(\"countries.Bhutan\"),\"Code\":\"BT\"},{\"Name\":t(\"countries.Bolivia,_Plurinational_State_of\"),\"Code\":\"BO\"},{\"Name\":t(\"countries.Bonaire,_Sint_Eustatius_and_Saba\"),\"Code\":\"BQ\"},{\"Name\":t(\"countries.Bosnia_and_Herzegovina\"),\"Code\":\"BA\"},{\"Name\":t(\"countries.Botswana\"),\"Code\":\"BW\"},{\"Name\":t(\"countries.Bouvet_Island\"),\"Code\":\"BV\"},{\"Name\":t(\"countries.Brazil\"),\"Code\":\"BR\"},{\"Name\":t(\"countries.British_Indian_Ocean_Territory\"),\"Code\":\"IO\"},{\"Name\":t(\"countries.Brunei_Darussalam\"),\"Code\":\"BN\"},{\"Name\":t(\"countries.Bulgaria\"),\"Code\":\"BG\"},{\"Name\":t(\"countries.Burkina_Faso\"),\"Code\":\"BF\"},{\"Name\":t(\"countries.Burundi\"),\"Code\":\"BI\"},{\"Name\":t(\"countries.Cambodia\"),\"Code\":\"KH\"},{\"Name\":t(\"countries.Cameroon\"),\"Code\":\"CM\"},{\"Name\":t(\"countries.Canada\"),\"Code\":\"CA\"},{\"Name\":t(\"countries.Cape_Verde\"),\"Code\":\"CV\"},{\"Name\":t(\"countries.Cayman_Islands\"),\"Code\":\"KY\"},{\"Name\":t(\"countries.Central_African_Republic\"),\"Code\":\"CF\"},{\"Name\":t(\"countries.Chad\"),\"Code\":\"TD\"},{\"Name\":t(\"countries.Chile\"),\"Code\":\"CL\"},{\"Name\":t(\"countries.China\"),\"Code\":\"CN\"},{\"Name\":t(\"countries.Christmas_Island\"),\"Code\":\"CX\"},{\"Name\":t(\"countries.Cocos_(Keeling)_Islands\"),\"Code\":\"CC\"},{\"Name\":t(\"countries.Colombia\"),\"Code\":\"CO\"},{\"Name\":t(\"countries.Comoros\"),\"Code\":\"KM\"},{\"Name\":t(\"countries.Congo\"),\"Code\":\"CG\"},{\"Name\":t(\"countries.Congo,_the_Democratic_Republic_of_the\"),\"Code\":\"CD\"},{\"Name\":t(\"countries.Cook_Islands\"),\"Code\":\"CK\"},{\"Name\":t(\"countries.Costa_Rica\"),\"Code\":\"CR\"},{\"Name\":t(\"countries.Côte_d'Ivoire\"),\"Code\":\"CI\"},{\"Name\":t(\"countries.Croatia\"),\"Code\":\"HR\"},{\"Name\":t(\"countries.Cuba\"),\"Code\":\"CU\"},{\"Name\":t(\"countries.Curaçao\"),\"Code\":\"CW\"},{\"Name\":t(\"countries.Cyprus\"),\"Code\":\"CY\"},{\"Name\":t(\"countries.Czech_Republic\"),\"Code\":\"CZ\"},{\"Name\":t(\"countries.Denmark\"),\"Code\":\"DK\"},{\"Name\":t(\"countries.Djibouti\"),\"Code\":\"DJ\"},{\"Name\":t(\"countries.Dominica\"),\"Code\":\"DM\"},{\"Name\":t(\"countries.Dominican_Republic\"),\"Code\":\"DO\"},{\"Name\":t(\"countries.Ecuador\"),\"Code\":\"EC\"},{\"Name\":t(\"countries.Egypt\"),\"Code\":\"EG\"},{\"Name\":t(\"countries.El_Salvador\"),\"Code\":\"SV\"},{\"Name\":t(\"countries.Equatorial_Guinea\"),\"Code\":\"GQ\"},{\"Name\":t(\"countries.Eritrea\"),\"Code\":\"ER\"},{\"Name\":t(\"countries.Estonia\"),\"Code\":\"EE\"},{\"Name\":t(\"countries.Ethiopia\"),\"Code\":\"ET\"},{\"Name\":t(\"countries.Falkland_Islands_(Malvinas)\"),\"Code\":\"FK\"},{\"Name\":t(\"countries.Faroe_Islands\"),\"Code\":\"FO\"},{\"Name\":t(\"countries.Fiji\"),\"Code\":\"FJ\"},{\"Name\":t(\"countries.Finland\"),\"Code\":\"FI\"},{\"Name\":t(\"countries.France\"),\"Code\":\"FR\"},{\"Name\":t(\"countries.French_Guiana\"),\"Code\":\"GF\"},{\"Name\":t(\"countries.French_Polynesia\"),\"Code\":\"PF\"},{\"Name\":t(\"countries.French_Southern_Territories\"),\"Code\":\"TF\"},{\"Name\":t(\"countries.Gabon\"),\"Code\":\"GA\"},{\"Name\":t(\"countries.Gambia\"),\"Code\":\"GM\"},{\"Name\":t(\"countries.Georgia\"),\"Code\":\"GE\"},{\"Name\":t(\"countries.Germany\"),\"Code\":\"DE\"},{\"Name\":t(\"countries.Ghana\"),\"Code\":\"GH\"},{\"Name\":t(\"countries.Gibraltar\"),\"Code\":\"GI\"},{\"Name\":t(\"countries.Greece\"),\"Code\":\"GR\"},{\"Name\":t(\"countries.Greenland\"),\"Code\":\"GL\"},{\"Name\":t(\"countries.Grenada\"),\"Code\":\"GD\"},{\"Name\":t(\"countries.Guadeloupe\"),\"Code\":\"GP\"},{\"Name\":t(\"countries.Guam\"),\"Code\":\"GU\"},{\"Name\":t(\"countries.Guatemala\"),\"Code\":\"GT\"},{\"Name\":t(\"countries.Guernsey\"),\"Code\":\"GG\"},{\"Name\":t(\"countries.Guinea\"),\"Code\":\"GN\"},{\"Name\":t(\"countries.Guinea-Bissau\"),\"Code\":\"GW\"},{\"Name\":t(\"countries.Guyana\"),\"Code\":\"GY\"},{\"Name\":t(\"countries.Haiti\"),\"Code\":\"HT\"},{\"Name\":t(\"countries.Heard_Island_and_McDonald_Islands\"),\"Code\":\"HM\"},{\"Name\":t(\"countries.Holy_See_(Vatican_City_State)\"),\"Code\":\"VA\"},{\"Name\":t(\"countries.Honduras\"),\"Code\":\"HN\"},{\"Name\":t(\"countries.Hong_Kong\"),\"Code\":\"HK\"},{\"Name\":t(\"countries.Hungary\"),\"Code\":\"HU\"},{\"Name\":t(\"countries.Iceland\"),\"Code\":\"IS\"},{\"Name\":t(\"countries.India\"),\"Code\":\"IN\"},{\"Name\":t(\"countries.Indonesia\"),\"Code\":\"ID\"},{\"Name\":t(\"countries.Iran,_Islamic_Republic_of\"),\"Code\":\"IR\"},{\"Name\":t(\"countries.Iraq\"),\"Code\":\"IQ\"},{\"Name\":t(\"countries.Ireland\"),\"Code\":\"IE\"},{\"Name\":t(\"countries.Isle_of_Man\"),\"Code\":\"IM\"},{\"Name\":t(\"countries.Israel\"),\"Code\":\"IL\"},{\"Name\":t(\"countries.Italy\"),\"Code\":\"IT\"},{\"Name\":t(\"countries.Jamaica\"),\"Code\":\"JM\"},{\"Name\":t(\"countries.Japan\"),\"Code\":\"JP\"},{\"Name\":t(\"countries.Jersey\"),\"Code\":\"JE\"},{\"Name\":t(\"countries.Jordan\"),\"Code\":\"JO\"},{\"Name\":t(\"countries.Kazakhstan\"),\"Code\":\"KZ\"},{\"Name\":t(\"countries.Kenya\"),\"Code\":\"KE\"},{\"Name\":t(\"countries.Kiribati\"),\"Code\":\"KI\"},{\"Name\":t(\"countries.Korea,_Democratic_People's_Republic_of\"),\"Code\":\"KP\"},{\"Name\":t(\"countries.Korea,_Republic_of\"),\"Code\":\"KR\"},{\"Name\":t(\"countries.Kuwait\"),\"Code\":\"KW\"},{\"Name\":t(\"countries.Kyrgyzstan\"),\"Code\":\"KG\"},{\"Name\":t(\"countries.Lao_People's_Democratic_Republic\"),\"Code\":\"LA\"},{\"Name\":t(\"countries.Latvia\"),\"Code\":\"LV\"},{\"Name\":t(\"countries.Lebanon\"),\"Code\":\"LB\"},{\"Name\":t(\"countries.Lesotho\"),\"Code\":\"LS\"},{\"Name\":t(\"countries.Liberia\"),\"Code\":\"LR\"},{\"Name\":t(\"countries.Libya\"),\"Code\":\"LY\"},{\"Name\":t(\"countries.Liechtenstein\"),\"Code\":\"LI\"},{\"Name\":t(\"countries.Lithuania\"),\"Code\":\"LT\"},{\"Name\":t(\"countries.Luxembourg\"),\"Code\":\"LU\"},{\"Name\":t(\"countries.Macao\"),\"Code\":\"MO\"},{\"Name\":t(\"countries.Macedonia,_the_Former_Yugoslav_Republic_of\"),\"Code\":\"MK\"},{\"Name\":t(\"countries.Madagascar\"),\"Code\":\"MG\"},{\"Name\":t(\"countries.Malawi\"),\"Code\":\"MW\"},{\"Name\":t(\"countries.Malaysia\"),\"Code\":\"MY\"},{\"Name\":t(\"countries.Maldives\"),\"Code\":\"MV\"},{\"Name\":t(\"countries.Mali\"),\"Code\":\"ML\"},{\"Name\":t(\"countries.Malta\"),\"Code\":\"MT\"},{\"Name\":t(\"countries.Marshall_Islands\"),\"Code\":\"MH\"},{\"Name\":t(\"countries.Martinique\"),\"Code\":\"MQ\"},{\"Name\":t(\"countries.Mauritania\"),\"Code\":\"MR\"},{\"Name\":t(\"countries.Mauritius\"),\"Code\":\"MU\"},{\"Name\":t(\"countries.Mayotte\"),\"Code\":\"YT\"},{\"Name\":t(\"countries.Mexico\"),\"Code\":\"MX\"},{\"Name\":t(\"countries.Micronesia,_Federated_States_of\"),\"Code\":\"FM\"},{\"Name\":t(\"countries.Moldova,_Republic_of\"),\"Code\":\"MD\"},{\"Name\":t(\"countries.Monaco\"),\"Code\":\"MC\"},{\"Name\":t(\"countries.Mongolia\"),\"Code\":\"MN\"},{\"Name\":t(\"countries.Montenegro\"),\"Code\":\"ME\"},{\"Name\":t(\"countries.Montserrat\"),\"Code\":\"MS\"},{\"Name\":t(\"countries.Morocco\"),\"Code\":\"MA\"},{\"Name\":t(\"countries.Mozambique\"),\"Code\":\"MZ\"},{\"Name\":t(\"countries.Myanmar\"),\"Code\":\"MM\"},{\"Name\":t(\"countries.Namibia\"),\"Code\":\"NA\"},{\"Name\":t(\"countries.Nauru\"),\"Code\":\"NR\"},{\"Name\":t(\"countries.Nepal\"),\"Code\":\"NP\"},{\"Name\":t(\"countries.Netherlands\"),\"Code\":\"NL\"},{\"Name\":t(\"countries.New_Caledonia\"),\"Code\":\"NC\"},{\"Name\":t(\"countries.New_Zealand\"),\"Code\":\"NZ\"},{\"Name\":t(\"countries.Nicaragua\"),\"Code\":\"NI\"},{\"Name\":t(\"countries.Niger\"),\"Code\":\"NE\"},{\"Name\":t(\"countries.Nigeria\"),\"Code\":\"NG\"},{\"Name\":t(\"countries.Niue\"),\"Code\":\"NU\"},{\"Name\":t(\"countries.Norfolk_Island\"),\"Code\":\"NF\"},{\"Name\":t(\"countries.Northern_Mariana_Islands\"),\"Code\":\"MP\"},{\"Name\":t(\"countries.Norway\"),\"Code\":\"NO\"},{\"Name\":t(\"countries.Oman\"),\"Code\":\"OM\"},{\"Name\":t(\"countries.Pakistan\"),\"Code\":\"PK\"},{\"Name\":t(\"countries.Palau\"),\"Code\":\"PW\"},{\"Name\":t(\"countries.Palestine,_State_of\"),\"Code\":\"PS\"},{\"Name\":t(\"countries.Panama\"),\"Code\":\"PA\"},{\"Name\":t(\"countries.Papua_New_Guinea\"),\"Code\":\"PG\"},{\"Name\":t(\"countries.Paraguay\"),\"Code\":\"PY\"},{\"Name\":t(\"countries.Peru\"),\"Code\":\"PE\"},{\"Name\":t(\"countries.Philippines\"),\"Code\":\"PH\"},{\"Name\":t(\"countries.Pitcairn\"),\"Code\":\"PN\"},{\"Name\":t(\"countries.Poland\"),\"Code\":\"PL\"},{\"Name\":t(\"countries.Portugal\"),\"Code\":\"PT\"},{\"Name\":t(\"countries.Puerto_Rico\"),\"Code\":\"PR\"},{\"Name\":t(\"countries.Qatar\"),\"Code\":\"QA\"},{\"Name\":t(\"countries.Réunion\"),\"Code\":\"RE\"},{\"Name\":t(\"countries.Romania\"),\"Code\":\"RO\"},{\"Name\":t(\"countries.Russian_Federation\"),\"Code\":\"RU\"},{\"Name\":t(\"countries.Rwanda\"),\"Code\":\"RW\"},{\"Name\":t(\"countries.Saint_Barthélemy\"),\"Code\":\"BL\"},{\"Name\":t(\"countries.Saint_Helena,_Ascension_and_Tristan_da_Cunha\"),\"Code\":\"SH\"},{\"Name\":t(\"countries.Saint_Kitts_and_Nevis\"),\"Code\":\"KN\"},{\"Name\":t(\"countries.Saint_Lucia\"),\"Code\":\"LC\"},{\"Name\":t(\"countries.Saint_Martin_(French_part)\"),\"Code\":\"MF\"},{\"Name\":t(\"countries.Saint_Pierre_and_Miquelon\"),\"Code\":\"PM\"},{\"Name\":t(\"countries.Saint_Vincent_and_the_Grenadines\"),\"Code\":\"VC\"},{\"Name\":t(\"countries.Samoa\"),\"Code\":\"WS\"},{\"Name\":t(\"countries.San_Marino\"),\"Code\":\"SM\"},{\"Name\":t(\"countries.Sao_Tome_and_Principe\"),\"Code\":\"ST\"},{\"Name\":t(\"countries.Saudi_Arabia\"),\"Code\":\"SA\"},{\"Name\":t(\"countries.Senegal\"),\"Code\":\"SN\"},{\"Name\":t(\"countries.Serbia\"),\"Code\":\"RS\"},{\"Name\":t(\"countries.Seychelles\"),\"Code\":\"SC\"},{\"Name\":t(\"countries.Sierra_Leone\"),\"Code\":\"SL\"},{\"Name\":t(\"countries.Singapore\"),\"Code\":\"SG\"},{\"Name\":t(\"countries.Sint_Maarten_(Dutch_part)\"),\"Code\":\"SX\"},{\"Name\":t(\"countries.Slovakia\"),\"Code\":\"SK\"},{\"Name\":t(\"countries.Slovenia\"),\"Code\":\"SI\"},{\"Name\":t(\"countries.Solomon_Islands\"),\"Code\":\"SB\"},{\"Name\":t(\"countries.Somalia\"),\"Code\":\"SO\"},{\"Name\":t(\"countries.South_Africa\"),\"Code\":\"ZA\"},{\"Name\":t(\"countries.South_Georgia_and_the_South_Sandwich_Islands\"),\"Code\":\"GS\"},{\"Name\":t(\"countries.South_Sudan\"),\"Code\":\"SS\"},{\"Name\":t(\"countries.Spain\"),\"Code\":\"ES\"},{\"Name\":t(\"countries.Sri_Lanka\"),\"Code\":\"LK\"},{\"Name\":t(\"countries.Sudan\"),\"Code\":\"SD\"},{\"Name\":t(\"countries.Suriname\"),\"Code\":\"SR\"},{\"Name\":t(\"countries.Svalbard_and_Jan_Mayen\"),\"Code\":\"SJ\"},{\"Name\":t(\"countries.Swaziland\"),\"Code\":\"SZ\"},{\"Name\":t(\"countries.Sweden\"),\"Code\":\"SE\"},{\"Name\":t(\"countries.Switzerland\"),\"Code\":\"CH\"},{\"Name\":t(\"countries.Syrian_Arab_Republic\"),\"Code\":\"SY\"},{\"Name\":t(\"countries.Taiwan,_Province_of_China\"),\"Code\":\"TW\"},{\"Name\":t(\"countries.Tajikistan\"),\"Code\":\"TJ\"},{\"Name\":t(\"countries.Tanzania,_United_Republic_of\"),\"Code\":\"TZ\"},{\"Name\":t(\"countries.Thailand\"),\"Code\":\"TH\"},{\"Name\":t(\"countries.Timor-Leste\"),\"Code\":\"TL\"},{\"Name\":t(\"countries.Togo\"),\"Code\":\"TG\"},{\"Name\":t(\"countries.Tokelau\"),\"Code\":\"TK\"},{\"Name\":t(\"countries.Tonga\"),\"Code\":\"TO\"},{\"Name\":t(\"countries.Trinidad_and_Tobago\"),\"Code\":\"TT\"},{\"Name\":t(\"countries.Tunisia\"),\"Code\":\"TN\"},{\"Name\":t(\"countries.Turkey\"),\"Code\":\"TR\"},{\"Name\":t(\"countries.Turkmenistan\"),\"Code\":\"TM\"},{\"Name\":t(\"countries.Turks_and_Caicos_Islands\"),\"Code\":\"TC\"},{\"Name\":t(\"countries.Tuvalu\"),\"Code\":\"TV\"},{\"Name\":t(\"countries.Uganda\"),\"Code\":\"UG\"},{\"Name\":t(\"countries.Ukraine\"),\"Code\":\"UA\"},{\"Name\":t(\"countries.United_Arab_Emirates\"),\"Code\":\"AE\"},{\"Name\":t(\"countries.United_Kingdom\"),\"Code\":\"GB\"},{\"Name\":t(\"countries.United_States\"),\"Code\":\"US\"},{\"Name\":t(\"countries.United_States_Minor_Outlying_Islands\"),\"Code\":\"UM\"},{\"Name\":t(\"countries.Uruguay\"),\"Code\":\"UY\"},{\"Name\":t(\"countries.Uzbekistan\"),\"Code\":\"UZ\"},{\"Name\":t(\"countries.Vanuatu\"),\"Code\":\"VU\"},{\"Name\":t(\"countries.Venezuela,_Bolivarian_Republic_of\"),\"Code\":\"VE\"},{\"Name\":t(\"countries.Viet_Nam\"),\"Code\":\"VN\"},{\"Name\":t(\"countries.Virgin_Islands_British\"),\"Code\":\"VG\"},{\"Name\":t(\"countries.Virgin_Islands_US\"),\"Code\":\"VI\"},{\"Name\":t(\"countries.Wallis_and_Futuna\"),\"Code\":\"WF\"},{\"Name\":t(\"countries.Western_Sahara\"),\"Code\":\"EH\"},{\"Name\":t(\"countries.Yemen\"),\"Code\":\"YE\"},{\"Name\":t(\"countries.Zambia\"),\"Code\":\"ZM\"},{\"Name\":t(\"countries.Zimbabwe\"),\"Code\":\"ZW\"}]\n\nexport default ISO_COUNTRY_CODES","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport ISO_COUNTRY_CODES from \"../../../tools/iso_country_codes\"\nimport { GraphQLID } from 'graphql'\n\n\nconst RelationsAccountProfileForm = ({ t, history, isSubmitting, errors, values, inputData, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"customer\" \n                  checked={values.customer} \n                />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('general.customer')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"customer\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"teacher\" \n                  checked={values.teacher} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('general.teacher')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"teacher\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"employee\" \n                  checked={values.employee} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('general.employee')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"employee\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.first_name')}>\n              <Field type=\"text\" \n                      name=\"firstName\" \n                      className={(errors.firstName) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"firstName\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.last_name')}>\n              <Field type=\"text\" \n                      name=\"lastName\" \n                      className={(errors.lastName) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"lastName\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n         <Grid.Col>\n            <Form.Group label={t('general.date_of_birth')}>\n              <CSDatePicker \n                selected={values.dateOfBirth}\n                onChange={(date) => setFieldValue(\"dateOfBirth\", date)}\n                onBlur={() => setFieldTouched(\"dateOfBirth\", true)}\n              />\n              <ErrorMessage name=\"dateOfBirth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.gender')}>\n              <Field component=\"select\" \n                    name=\"gender\" \n                    className={(errors.organizationMembership) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\"></option>\n                <option value=\"F\">{t(\"genders.female\")}</option>\n                <option value=\"M\">{t(\"genders.male\")}</option>\n                <option value=\"X\">{t(\"genders.other\")}</option>\n              </Field>\n              <ErrorMessage name=\"gender\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.email')}>\n              <Field type=\"text\" \n                      name=\"email\" \n                      className={(errors.email) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"email\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('relations.accounts.emergency')}>\n              <Field type=\"text\" \n                     name=\"emergency\" \n                     className={(errors.emergency) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"emergency\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.phone')}>\n              <Field type=\"text\" \n                      name=\"phone\" \n                      className={(errors.phone) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"phone\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.mobile')}>\n              <Field type=\"text\" \n                     name=\"mobile\" \n                     className={(errors.mobile) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"mobile\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.address')}>\n              <Field type=\"text\" \n                      name=\"address\" \n                      className={(errors.address) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"address\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.postcode')}>\n              <Field type=\"text\" \n                     name=\"postcode\" \n                     className={(errors.postcode) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"postcode\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.city')}>\n              <Field type=\"text\" \n                      name=\"city\" \n                      className={(errors.city) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"city\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.country')}>\n              <Field component=\"select\" \n                     name=\"country\" \n                     className={(errors.country) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\">\n                <option value=\"\"></option>\n                { ISO_COUNTRY_CODES.map(\n                    country => <option value={country.Code} key={v4()}>{country.Name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"country\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.discovery')}>\n              <Field component=\"select\" \n                    name=\"organizationDiscovery\" \n                    className={(errors.organizationDiscovery) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.organizationDiscoveries.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationDiscovery\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.language')}>\n              <Field component=\"select\" \n                    name=\"organizationLanguage\" \n                    className={(errors.organizationLanguage) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.organizationLanguages.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLanguage\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row> \n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.key_number')}>\n              <Field type=\"text\" \n                      name=\"keyNumber\" \n                      className={(errors.keyNumber) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"keyNumber\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          \n          {/* <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsAccountProfileForm))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport ProfileCardSmall from \"../../ui/ProfileCardSmall\"\n\nimport RelationsAccountsBack from \"./RelationsAccountsBack\"\nimport ProfileMenu from \"./ProfileMenu\"\n\nfunction RelationsAccountProfileBase({t, match, children, sidebarButton=\"\", activeLink=\"\", user={}}) {\n  const accountId = match.params.account_id\n  let headerTitle = \"\"\n  if (user) {\n    headerTitle = `${user.firstName} ${user.lastName}`\n  }\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={headerTitle}>\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>                                    \n            <Grid.Col md={3}>\n              <ProfileCardSmall user={user}/>\n              {sidebarButton}\n              <ProfileMenu \n                activeLink={activeLink}\n                accountId={accountId}\n              /> \n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsAccountProfileBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNTS_QUERY, GET_ACCOUNT_QUERY, UPDATE_ACCOUNT } from './queries'\nimport { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\nimport ProfileCardSmall from \"../../ui/ProfileCardSmall\"\n\nimport { get_list_query_variables } from \"./tools\"\nimport RelationsAccountsBack from \"./RelationsAccountsBack\"\nimport RelationsAccountProfileForm from \"./RelationsAccountProfileForm\"\n\n// import OrganizationMenu from \"../OrganizationMenu\"\nimport ProfileMenu from \"./ProfileMenu\"\nimport RelationsAccountProfileBase from './RelationsAccountProfileBase'\n\nfunction RelationsAccountProfile({t, match}) {\n  const accountId = match.params.account_id\n  const activeLink = \"profile\"\n  const returnUrl = \"/relations/accounts\"\n\n  const {loading, error, data} = useQuery(GET_ACCOUNT_QUERY, {\n    variables: {id: accountId}\n  })\n  const [updateAccount] = useMutation(UPDATE_ACCOUNT)\n\n  if (loading) return (\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>  \n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      {console.log(error)}\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <p>{t('general.error_sad_smiley')}</p>\n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const account = data.account\n  console.log(account)\n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateOfBirth = null\n  if (account.dateOfBirth) {\n    dateOfBirth = new Date(account.dateOfBirth)\n  }\n\n  let initialValues = { \n    customer: account.customer, \n    teacher: account.teacher, \n    employee: account.employee, \n    firstName: account.firstName, \n    lastName: account.lastName, \n    email: account.email,\n    dateOfBirth: dateOfBirth,\n    gender: account.gender,\n    emergency: account.emergency,\n    phone: account.phone,\n    mobile: account.mobile,\n    address: account.address,\n    postcode: account.postcode,\n    city: account.city,\n    country: account.country,\n    keyNumber: account.keyNumber\n  }\n\n  if (account.organizationDiscovery) {\n    initialValues.organizationDiscovery = account.organizationDiscovery.id\n  }\n\n  if (account.organizationLanguage) {\n    initialValues.organizationLanguage = account.organizationLanguage.id\n  }\n\n  return (\n    <RelationsAccountProfileBase \n      user={account}\n      activeLink={activeLink}\n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n\n        <Formik\n            initialValues={initialValues}\n            validationSchema={ACCOUNT_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                let input_vars = {\n                  id: accountId,\n                  customer: values.customer,\n                  teacher: values.teacher,\n                  employee: values.employee,\n                  firstName: values.firstName,\n                  lastName: values.lastName,\n                  email: values.email,\n                  gender: values.gender,\n                  emergency: values.emergency,\n                  phone: values.phone,\n                  mobile: values.mobile,\n                  address: values.address,\n                  postcode: values.postcode,\n                  city: values.city,\n                  country: values.country,\n                  keyNumber: values.keyNumber,\n                  organizationDiscovery: values.organizationDiscovery,\n                  organizationLanguage: values.organizationLanguage\n                }\n\n                if (values.dateOfBirth) {\n                  input_vars['dateOfBirth'] = dateToLocalISO(values.dateOfBirth)\n                } \n\n                updateAccount({ variables: {\n                  input: input_vars\n                }, refetchQueries: [\n                    // Refetch list\n                    {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()},\n                    // Refresh local cached results for this account\n                    {query: GET_ACCOUNT_QUERY, variables: {id: accountId}}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    toast.success((t('relations.accounts.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    setSubmitting(false)\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n              <RelationsAccountProfileForm\n                isSubmitting={isSubmitting}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                errors={errors}\n                values={values}\n                inputData={data}\n              />\n            )}\n          </Formik>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsAccountProfile))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\nimport { customFileInputLabelStyle } from \"../../../tools/custom_file_input_label_style\"\n\n\nconst RelationsAccountProfileImageForm = ({ t, history, isSubmitting, returnUrl, inputFileName, fileInputLabel, handleFileInputChange=f=>f }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.custom_file_input_label')}>\n              <div className=\"custom-file\">\n                <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                  {fileInputLabel}\n                </label>\n              </div>\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Link to={returnUrl}>\n            <Button color=\"link\" className=\"pull-right\">\n              {t('general.cancel')}\n            </Button>\n          </Link>\n          <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsAccountProfileImageForm))\n\n","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNTS_QUERY, GET_ACCOUNT_QUERY, UPDATE_ACCOUNT } from './queries'\nimport { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\nimport ProfileCardSmall from \"../../ui/ProfileCardSmall\"\n\nimport { get_list_query_variables } from \"./tools\"\nimport RelationsAccountsBack from \"./RelationsAccountsBack\"\nimport RelationsAccountProfileImageForm from \"./RelationsAccountProfileImageForm\"\n\n// import OrganizationMenu from \"../OrganizationMenu\"\nimport ProfileMenu from \"./ProfileMenu\"\nimport RelationsAccountProfileBase from './RelationsAccountProfileBase'\n\nfunction RelationsAccountProfileImage({t, match, history}) {\n  const accountId = match.params.account_id\n  const activeLink = \"profile\"\n  const cardTitle = t('relations.accounts.profile_image')\n  const returnUrl = `/relations/accounts/${accountId}/profile` \n\n  const {loading, error, data} = useQuery(GET_ACCOUNT_QUERY, {\n    variables: {id: accountId}\n  })\n  const [updateAccount] = useMutation(UPDATE_ACCOUNT)\n\n  // Vars file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n  // Vars file input field end\n\n  if (loading) return (\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>  \n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      {console.log(error)}\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <p>{t('general.error_sad_smiley')}</p>\n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const account = data.account\n  console.log(account)\n\n  return (\n    <RelationsAccountProfileBase \n      user={account}\n      activeLink={activeLink}\n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n            initialValues={{}}\n            // validationSchema={ACCOUNT_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                let inputVars = {\n                  id: accountId,\n                }\n\n                function updateImage() {\n                  updateAccount({ variables: {\n                    input: inputVars\n                  }, refetchQueries: [\n                      // Refetch list\n                      {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()},\n                      // Refresh local cached results for this account\n                      {query: GET_ACCOUNT_QUERY, variables: {id: accountId}}\n                  ]})\n                  .then(({ data }) => {\n                      console.log('got data', data)\n                      history.push(`/relations/accounts/${accountId}/profile`)\n                      toast.success((t('relations.accounts.toast_edit_success')), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      setSubmitting(false)\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n                }\n\n                let reader = new FileReader()\n                reader.onload = function(reader_event) {\n                  console.log(reader_event.target.result)\n                  let b64_enc_file = reader_event.target.result\n                  console.log(b64_enc_file)\n                  // Add uploaded document b64 encoded blob to input vars\n                  inputVars.image = b64_enc_file\n                  inputVars.imageFileName = fileName\n      \n                  updateImage()\n                }\n                \n                let file = inputFileName.current.files[0]\n                if (file && file.size < 5242880) {\n                  reader.readAsDataURL(file)\n                } else if (file && file.size > 5242880) { \n                  toast.error(t(\"error_messages.selected_file_exceeds_max_filesize\"), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                  setSubmitting(false)\n                } else {\n                  updateImage()\n                }\n            }}\n            >\n            {({ isSubmitting, values }) => (\n              <RelationsAccountProfileImageForm\n                isSubmitting={isSubmitting}\n                values={values}\n                inputData={data}\n                inputFileName={inputFileName}\n                fileInputLabel={fileInputLabel}\n                handleFileInputChange={handleFileInputChange}\n                returnUrl={returnUrl}\n              />\n            )}\n          </Formik>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsAccountProfileImage))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nconst DocumentType = ({ t, documentType }) => {\n  switch (documentType) {\n    case \"TERMS_AND_CONDITIONS\":  \n      return t('general.terms_and_conditions')\n      break\n    case \"PRIVACY_POLICY\":\n      return t('general.privacy_policy')\n      break\n    default:\n      return t('general.unknown_document_type')\n  }\n}\n\nexport default withTranslation()(DocumentType)\n\n\n\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_ACCEPTED_DOCUMENTS_QUERY = gql`\n  query AccountAcceptedDocuments($after: String, $before: String, $account: ID!) {\n    accountAcceptedDocuments(first: 15, before:$before, after:$after, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          document {\n            id\n            documentType\n            version\n            urlDocument\n          }\n          dateAccepted\n          clientIp\n        }\n      }\n    }\n    account(id:$account) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\nimport DocumentType from \"../../../ui/DocumentType\"\nimport FileDownloadTableButton from \"../../../ui/FileDownloadTableButton\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport { GET_ACCOUNT_ACCEPTED_DOCUMENTS_QUERY } from \"./queries\"\n\nimport moment from 'moment'\n\n\nfunction AccountAcceptedDocuments({ t, history, match }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  const accountId = match.params.account_id\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_ACCEPTED_DOCUMENTS_QUERY, {\n    variables: {\n      account: accountId\n    }\n  })\n\n  // Loading\n  if (loading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (error) {\n    console.log(error)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n\n  console.log(data)\n  \n  const account = data.account\n  const acceptedDocuments = data.accountAcceptedDocuments\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.firstName + \" \" + account.lastName} >\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <ContentCard \n                cardTitle={t('relations.account.accepted_documents.title')}\n                pageInfo={acceptedDocuments.pageInfo}\n                onLoadMore={() => {\n                  fetchMore({\n                    variables: {\n                      after: data.accountAcceptedDocuments.pageInfo.endCursor\n                    },\n                    updateQuery: (previousResult, { fetchMoreResult }) => {\n                      const newEdges = fetchMoreResult.accountAcceptedDocuments.edges\n                      const pageInfo = fetchMoreResult.accountAcceptedDocuments.pageInfo\n\n                      return newEdges.length\n                        ? {\n                            // Put the new acceptedDocuments at the end of the list and update `pageInfo`\n                            // so we have the new `endCursor` and `hasNextPage` values\n                            accountAcceptedDocuments: {\n                              __typename: previousResult.accountAcceptedDocuments.__typename,\n                              edges: [ ...previousResult.accountAcceptedDocuments.edges, ...newEdges ],\n                              pageInfo\n                            }\n                          }\n                        : previousResult\n                    }\n                  })\n                }} \n              >\n                <Table>\n                  <Table.Header>\n                    <Table.Row key={v4()}>\n                      <Table.ColHeader>{t('general.document_type')}</Table.ColHeader>\n                      <Table.ColHeader>{t('general.date_accepted')}</Table.ColHeader>\n                      <Table.ColHeader>{t('relations.account.accepted_documents.accepted_from_address')}</Table.ColHeader>\n                      <Table.ColHeader><span className=\"pull-right\">{t('general.document')}</span></Table.ColHeader>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                      {acceptedDocuments.edges.map(({ node }) => (\n                        <Table.Row key={v4()}>\n                          <Table.Col key={v4()}>\n                            <DocumentType documentType={node.document.documentType} />\n                          </Table.Col>\n                          <Table.Col key={v4()}>\n                            {moment(node.dateAccepted).format(dateFormat)}\n                          </Table.Col>\n                          <Table.Col>\n                            {node.clientIp}\n                          </Table.Col>\n                          <Table.Col key={v4()}>\n                            <FileDownloadTableButton mediaUrl={node.document.urlDocument} className=\"pull-right\" />\n                          </Table.Col>\n                        </Table.Row>\n                      ))}\n                  </Table.Body>\n                </Table>\n              </ContentCard>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              <ProfileMenu \n                activeLink='accepted_documents' \n                accountId={match.params.account_id}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n      \n        \nexport default withTranslation()(withRouter(AccountAcceptedDocuments))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ACCOUNT_BANK_ACCOUNTS_QUERY = gql`\n  query AccountBankAccounts($after: String, $before: String, $account: ID!) {\n    accountBankAccounts(\n      first: 1, \n      before: $before, \n      after: $after, \n      account: $account\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          number\n          holder\n          bic\n          mandates(first: 100) {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n              startCursor\n              endCursor\n            }\n            edges {\n              node {\n                id\n                reference\n                content\n                signatureDate\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n// export const GET_ACCOUNT_QUERY = gql`\n//   query Account($id: ID!) {\n//     account(id:$id) {\n//       id\n//       customer\n//       teacher\n//       employee\n//       firstName\n//       lastName\n//       email\n//       dateOfBirth\n//       gender\n//       address\n//       postcode\n//       city\n//       country\n//       phone\n//       mobile\n//       emergency\n//       isActive\n//     }\n//   }\n// `\n\nexport const UPDATE_ACCOUNT_BANK_ACCOUNT = gql`\n  mutation UpdateAccountBanKAccount($input:UpdateAccountBankAccountInput!) {\n    updateAccountBankAccount(input: $input) {\n      accountBankAccount {\n        id\n        number\n        holder\n        bic\n      }\n    }\n  }\n`\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ACCOUNT_BANK_ACCOUNT_MANDATE_QUERY = gql`\n  query AccountBankAccountMandate($id: ID!) {\n    accountBankAccountMandate(id:$id) {\n      id\n      reference\n      content\n      signatureDate\n    }\n  }\n`\n\n\nexport const CREATE_ACCOUNT_BANK_ACCOUNT_MANDATE = gql`\n  mutation CreateAccountBankAccountMandate($input:CreateAccountBankAccountMandateInput!) {\n    createAccountBankAccountMandate(input: $input) {\n      accountBankAccountMandate {\n        id\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_ACCOUNT_BANK_ACCOUNT_MANDATE = gql`\n  mutation UpdateAccountBankAccountMandate($input:UpdateAccountBankAccountMandateInput!) {\n    updateAccountBankAccountMandate(input: $input) {\n      accountBankAccountMandate {\n        id\n      }\n    }\n  }\n`\n\n\nexport const DELETE_ACCOUNT_BANK_ACCOUNT_MANDATE = gql`\n  mutation DeleteAccountBankAccountMandate($input:DeleteAccountBankAccountMandateInput!) {\n    deleteAccountBankAccountMandate(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport { GET_ACCOUNT_QUERY } from '../queries'\n\nimport {\n  Button,\n  Icon,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\nimport ProfileMenu from \"../ProfileMenu\"\n\n\nfunction RelationsAccountBankAccountBase({ t, match, history, children, bankAccountId=\"\", showBack=false }) {\n  const accountId = match.params.account_id\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_QUERY, {\n    variables: { id: accountId }\n  })\n\n  if (loading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (error) {\n    console.log(error)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n\n  const account = data.account\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.firstName + \" \" + account.lastName}>\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              {((bankAccountId) && !(showBack)) ?\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"accountbankaccountmandate\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/bank_accounts/${bankAccountId}/mandates/add`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.bank_accounts.mandates.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              {(showBack) ?\n                <HasPermissionWrapper permission=\"view\"\n                                      resource=\"accountbankaccount\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/bank_accounts/`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\"\n              }\n              <ProfileMenu \n                activeLink='bank_account'\n                accountId={accountId}\n              /> \n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccountBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nconst RelationsAccountBankAccountForm = ({ t, history, isSubmitting, errors, values, }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.bank_accounts.holder')}>\n              <Field type=\"text\" \n                      name=\"holder\" \n                      className={(errors.holder) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"bic\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.bank_accounts.number')}>\n              <Field type=\"text\" \n                      name=\"number\" \n                      className={(errors.number) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"number\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.bank_accounts.bic')}>\n              <Field type=\"text\" \n                      name=\"bic\" \n                      className={(errors.bic) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"bic\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          \n          {/* <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccountForm))\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport moment from 'moment'\n\nimport { GET_ACCOUNT_BANK_ACCOUNTS_QUERY, UPDATE_ACCOUNT_BANK_ACCOUNT } from './queries'\nimport { DELETE_ACCOUNT_BANK_ACCOUNT_MANDATE } from './mandates/queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card, \n  Grid,\n  Icon\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport RelationsAccountBankAccountBase from \"./RelationsAccountBankAccountBase\"\nimport RelationsAccountBankAccountForm from \"./RelationsAccountBankAccountForm\"\n\n\n\nfunction RelationsAccountBankAccount({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  \n  const accountId = match.params.account_id\n  const returnUrl = \"/relations/accounts\"\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_BANK_ACCOUNTS_QUERY, {\n    variables: { account: accountId }\n  })\n\n  const [ updateAccountBankAccount ] = useMutation(UPDATE_ACCOUNT_BANK_ACCOUNT)\n  const [ deleteAccountBankAccountMandate ] = useMutation(DELETE_ACCOUNT_BANK_ACCOUNT_MANDATE)\n\n  if (loading) return (\n    <RelationsAccountBankAccountBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </RelationsAccountBankAccountBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <RelationsAccountBankAccountBase>\n        <p>{t('general.loading_with_dots')}</p><p>{t('general.error_sad_smiley')}</p>\n      </RelationsAccountBankAccountBase>\n    )\n  }\n\n  const accountBankAccounts = data.accountBankAccounts\n  const accountBankAccount = accountBankAccounts.edges[0].node\n  const mandates = accountBankAccount.mandates\n  console.log(accountBankAccount)\n\n  return (\n    <RelationsAccountBankAccountBase bankAccountId={accountBankAccount.id}>\n      <Card title={t('relations.account.bank_accounts.title')}>\n        <Formik\n          initialValues={{ \n            number: accountBankAccount.number,\n            holder: accountBankAccount.holder,\n            bic: accountBankAccount.bic\n          }}\n          // validationSchema={ACCOUNT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              let input_vars = {\n                id: accountBankAccount.id,\n                number: values.number,\n                holder: values.holder,\n                bic: values.bic              \n              }\n\n              updateAccountBankAccount({ variables: {\n                input: input_vars\n              }, refetchQueries: [\n                  // Refresh local cached results for this account\n                  {query: GET_ACCOUNT_BANK_ACCOUNTS_QUERY, variables: { account: accountId }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('relations.account.bank_accounts.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <RelationsAccountBankAccountForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n            />\n          )}\n        </Formik>\n      </Card>\n      {(mandates.edges.length) ? <h5>{t(\"relations.account.bank_accounts.mandates.title\")}</h5> : \"\"}\n      <Grid.Row>\n      {mandates.edges.map(({ node }) => (\n        <Grid.Col md={6}>\n          <Card title={node.reference}>\n            <Card.Body>\n              {t(\"relations.account.bank_accounts.mandates.signature_date\")} {moment(node.signatureDate).format(dateFormat)}\n              <div dangerouslySetInnerHTML={{ __html: node.content}} />\n            </Card.Body>\n            <Card.Footer>\n              <Button \n                className=\"pull-right\"\n                color=\"danger\"\n                type=\"button\"\n                onClick={() => {\n                  confirm_delete({\n                    t: t,\n                    msgConfirm: t(\"relations.account.bank_accounts.mandates.delete_confirm_msg\"),\n                    msgDescription: <p>{node.reference}</p>,\n                    msgSuccess: t('relations.account.bank_accounts.mandates.deleted'),\n                    deleteFunction: deleteAccountBankAccountMandate,\n                    functionVariables: { \n                      variables: {\n                        input: {\n                          id: node.id\n                        }\n                      }, \n                      refetchQueries: [\n                        {query: GET_ACCOUNT_BANK_ACCOUNTS_QUERY, variables: { account: accountId} } \n                      ]\n                    }\n                  })\n                }}\n              >\n                <Icon name=\"trash-2\" />\n              </Button>\n              <Link to={`/relations/accounts/${accountId}/bank_accounts/${accountBankAccount.id}/mandates/edit/${node.id}`}>\n                <Button\n                  type=\"button\" \n                  color=\"secondary\" \n                >\n                    {t('general.edit')}\n                </Button>\n              </Link>\n            </Card.Footer>\n          </Card>\n        </Grid.Col>\n      ))}\n      </Grid.Row>\n    </RelationsAccountBankAccountBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccount))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\nimport CSDatePicker from \"../../../../ui/CSDatePicker\"\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../plugin_config/tinymce\"\n\n\nconst RelationsAccountBankAccountMandateForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, returnUrl }) => (\n  <FoForm>\n    <Card.Body>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('relations.account.bank_accounts.mandates.reference')}>\n            <Field type=\"text\" \n                    name=\"reference\" \n                    className={(errors.reference) ? \"form-control is-invalid\" : \"form-control\"}\n                    placeholder={t('relations.account.bank_accounts.mandates.reference_placeholder')}\n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"reference\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('relations.account.bank_accounts.mandates.signature_date')}>\n            <CSDatePicker \n              selected={values.signatureDate}\n              onChange={(date) => setFieldValue(\"signatureDate\", date)}\n              onBlur={() => setFieldTouched(\"signatureDate\", true)}\n            />\n            <ErrorMessage name=\"signatureDate\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('relations.account.bank_accounts.mandates.content')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"content\"\n              initialValue={values.content}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"content\", e.target.getContent())\n                setFieldTouched(\"content\", true, true)\n              }}\n              />\n            <ErrorMessage name=\"content\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button\n            type=\"button\" \n            color=\"link\" \n          >\n              {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccountMandateForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { CREATE_ACCOUNT_BANK_ACCOUNT_MANDATE } from './queries'\nimport { GET_ACCOUNT_BANK_ACCOUNTS_QUERY } from '../queries'\n// import { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport RelationsAccountBankAccountMandateForm from './RelationsAccountBankAccountMandateForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport RelationsAccountBankAccountBase from '../RelationsAccountBankAccountBase'\n\n\nfunction RelationsAccountBankAccountMandateAdd({ t, match, history }) {\n  const accountId = match.params.account_id\n  const bankAccountId = match.params.bank_account_id\n  const returnUrl = `/relations/accounts/${accountId}/bank_accounts`\n\n  const [createAccountBankAccountMandate] = useMutation(CREATE_ACCOUNT_BANK_ACCOUNT_MANDATE) \n \n\n  return (\n    <RelationsAccountBankAccountBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.account.bank_accounts.mandates.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{\n            reference: \"\",\n            content: \"\",\n            signatureDate: new Date()\n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            createAccountBankAccountMandate({ variables: {\n              input: {\n                accountBankAccount: bankAccountId,\n                reference: values.refrence, \n                content: values.content,\n                signatureDate: dateToLocalISO(values.signatureDate)\n              }\n            }, refetchQueries: [\n              {query: GET_ACCOUNT_BANK_ACCOUNTS_QUERY, variables: { account: accountId }}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                history.push(returnUrl)\n                toast.success((t('relations.account.bank_accounts.mandates.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, submitForm, setFieldTouched, setFieldValue }) => (\n            <RelationsAccountBankAccountMandateForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              submitForm={submitForm}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              returnUrl={returnUrl}\n            >\n            </RelationsAccountBankAccountMandateForm>   \n          )}\n        </Formik>\n      </Card>\n    </RelationsAccountBankAccountBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccountMandateAdd))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_BANK_ACCOUNT_MANDATE_QUERY, UPDATE_ACCOUNT_BANK_ACCOUNT_MANDATE } from './queries'\nimport { GET_ACCOUNT_BANK_ACCOUNTS_QUERY } from '../queries'\n// import { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport RelationsAccountBankAccountMandateForm from './RelationsAccountBankAccountMandateForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport RelationsAccountBankAccountBase from '../RelationsAccountBankAccountBase'\n\n\nfunction RelationsAccountBankAccountMandateEdit({ t, match, history }) {\n  const accountId = match.params.account_id\n  const bankAccountId = match.params.bank_account_id\n  const mandateId = match.params.id\n  const returnUrl = `/relations/accounts/${accountId}/bank_accounts`\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_BANK_ACCOUNT_MANDATE_QUERY, {\n    variables: {'id': mandateId},\n  })\n  const [updateAccountBankAccountMandate] = useMutation(UPDATE_ACCOUNT_BANK_ACCOUNT_MANDATE) \n\n  if (loading) return (\n    <RelationsAccountBankAccountBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </RelationsAccountBankAccountBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <RelationsAccountBankAccountBase>\n        <p>{t('general.loading_with_dots')}</p><p>{t('general.error_sad_smiley')}</p>\n      </RelationsAccountBankAccountBase>\n    )\n  }\n\n  const mandate = data.accountBankAccountMandate\n \n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let signDate = null\n  if (mandate.signatureDate) {\n    signDate = new Date(mandate.signatureDate)\n  }\n\n  return (\n    <RelationsAccountBankAccountBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.account.bank_accounts.mandates.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{\n            reference: mandate.reference,\n            content: mandate.content,\n            signatureDate: signDate\n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateAccountBankAccountMandate({ variables: {\n              input: {\n                id: mandateId,\n                reference: values.refrence, \n                content: values.content,\n                signatureDate: dateToLocalISO(values.signatureDate)\n              }\n            }, refetchQueries: [\n              {query: GET_ACCOUNT_BANK_ACCOUNTS_QUERY, variables: { account: accountId }}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('relations.account.bank_accounts.mandates.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                history.push(returnUrl)\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, submitForm, setFieldTouched, setFieldValue }) => (\n            <RelationsAccountBankAccountMandateForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              submitForm={submitForm}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              returnUrl={returnUrl}\n            >\n            </RelationsAccountBankAccountMandateForm>   \n          )}\n        </Formik>\n      </Card>\n    </RelationsAccountBankAccountBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccountMandateEdit))\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Badge\n} from \"tabler-react\"\n\n\nfunction BadgeBookingStatus({ t, status }) {\n  switch (status) {\n    case \"ATTENDING\":\n      return <Badge color=\"success\">{t('schedule.classes.class.attendance.booking_status.ATTENDING')}</Badge> \n      break\n    case \"BOOKED\":\n      return <Badge color=\"primary\">{t('schedule.classes.class.attendance.booking_status.BOOKED')}</Badge> \n      break\n    case \"CANCELLED\":\n      return <Badge color=\"warning\">{t('schedule.classes.class.attendance.booking_status.CANCELLED')}</Badge> \n      break\n    default:\n      return t(\"schedule.classes.class.attendance.booking_status.invalid_type\")\n  }\n}\n\nexport default withTranslation()(BadgeBookingStatus)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\n\nfunction AccountClassesBase({ t, match, history, children, account={} }) {\n  const accountId = match.params.account_id\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.fullName} >\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n                {/* <HasPermissionWrapper permission=\"view\"\n                                      resource=\"scheduleitemattendance\">\n                  <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classes/add\"}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.classes.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper> */}\n              <ProfileMenu \n                activeLink='classes' \n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountClassesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_CLASSES_QUERY = gql`\n  query ScheduleItemAttendance($account: ID!, $before: String, $after: String) {\n    scheduleItemAttendances(first: 20, before: $before, after: $after, account: $account, accountScheduleEventTicket_Isnull: true) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          attendanceType\n          date\n          bookingStatus\n          scheduleItem {\n            id\n            timeStart\n            timeEnd\n            organizationLocationRoom {\n              name\n              organizationLocation {\n                name\n              }\n            }\n            organizationClasstype {\n              name\n            }\n          }\n        }\n      } \n    }\n    account(id:$account) {\n      id\n      firstName\n      lastName\n      fullName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_CLASS_ATTENDANCE_QUERY = gql`\n  query ScheduleItemAttendances($after: String, $before: String, $scheduleItem: ID!, $date: Date!) {\n    scheduleItemAttendances(first: 100, before: $before, after: $after, scheduleItem: $scheduleItem, date: $date) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }     \n          attendanceType\n          bookingStatus\n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const DELETE_SCHEDULE_CLASS_ATTENDANCE = gql`\n  mutation DeleteScheduleItemAttendance($input: DeleteScheduleItemAttendanceInput!) {\n    deleteScheduleItemAttendance(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const UPDATE_SCHEDULE_ITEM_ATTENDANCE = gql`\n  mutation UpdateScheduleItemAttendance($input: UpdateScheduleItemAttendanceInput!) {\n    updateScheduleItemAttendance(input:$input) {\n      scheduleItemAttendance {\n        id\n      }\n    }\n  }\n`\n\n\n// export const GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY = gql`\n//   query ScheduleItemTeacher($before: String, $after: String, $id: ID!) {\n//     scheduleItemTeacher(id: $id) {\n//       id\n//       account {\n//         id\n//         fullName\n//       }\n//       role\n//       account2 {\n//         id\n//         fullName\n//       }\n//       role2\n//       dateStart\n//       dateEnd       \n//     }\n//     accounts(first: 15, before: $before, after: $after, isActive: true, teacher: true) {\n//       pageInfo {\n//         startCursor\n//         endCursor\n//         hasNextPage\n//         hasPreviousPage\n//       }\n//       edges {\n//         node {\n//           id\n//           fullName\n//         }\n//       }\n//     }\n//   }\n// `\n\n\n// export const GET_INPUT_VALUES_QUERY = gql`\n//   query InputValues($after: String, $before: String) {\n//     accounts(first: 15, before: $before, after: $after, isActive: true, teacher: true) {\n//       pageInfo {\n//         startCursor\n//         endCursor\n//         hasNextPage\n//         hasPreviousPage\n//       }\n//       edges {\n//         node {\n//           id\n//           fullName\n//         }\n//       }\n//     }\n//   }\n// `","import React, { useContext } from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_ACCOUNT_CLASSES_QUERY } from \"./queries\"\nimport { DELETE_SCHEDULE_CLASS_ATTENDANCE } from \"../../../schedule/classes/class/attendance/queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport moment from 'moment'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\"\n\n\nfunction AccountClassDelete({t, match, node, account}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const [deleteScheduleItemAttendance, { data }] = useMutation(DELETE_SCHEDULE_CLASS_ATTENDANCE)\n\n  console.log(\"AccountClassDelete\")\n  console.log(node)\n  console.log(account)\n  console.log(\"---\")\n\n  return (\n    <button className=\"icon btn btn-link btn-sm pull-right\" \n      title={t('general.delete')} \n      href=\"\"\n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.classes.class.attendance.delete_confirm_msg\"),\n          msgDescription: <p>\n            <List>\n              <List.Item>\n                {t(\"general.time\")}: { moment(node.date).format(dateFormat) } { ' ' }\n                {moment(node.date + ' ' + node.scheduleItem.timeStart).format(timeFormat)}\n              </List.Item>\n              <List.Item>\n                {t(\"general.class\")}: {node.scheduleItem.organizationClasstype.name} \n              </List.Item>\n              <List.Item>\n                {t(\"general.location\")}: {node.scheduleItem.organizationLocationRoom.organizationLocation.name} \n              </List.Item>\n            </List>    \n          </p>,\n          msgSuccess: t('schedule.classes.class.attendance.delete_success'),\n          deleteFunction: deleteScheduleItemAttendance,\n          functionVariables: { \n            variables: {\n              input: {\n                id: node.id\n              }\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_CLASSES_QUERY, \n                variables: { account: account.id } },\n            ]\n          }\n        })\n    }}>\n      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountClassDelete))\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Card,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport BadgeBookingStatus from \"../../../ui/BadgeBookingStatus\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport AccountClassesBase from \"./AccountClassesBase\"\nimport AccountClassDelete from \"./AccountClassDelete\"\n\nimport { GET_ACCOUNT_CLASSES_QUERY } from \"./queries\"\n\n\nfunction AccountClasses({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const account_id = match.params.account_id\n  const cardTitle = t('relations.account.classes.title')\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_CLASSES_QUERY, {\n    variables: {'account': account_id},\n    fetchPolicy: \"network-only\"\n  })\n\n  // Loading\n  if (loading) return (\n    <AccountClassesBase>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>\n        </Card.Body>\n      </Card>\n    </AccountClassesBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountClassesBase>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('general.error_sad_smiley')}</p>\n          </Card.Body>\n        </Card>\n      </AccountClassesBase>\n    )\n  }\n\n  console.log(\"AccountClasses data:\")\n  console.log(data)\n  const account = data.account\n  const scheduleItemAttendances = data.scheduleItemAttendances\n  \n  // Empty list\n  if (!scheduleItemAttendances.edges.length) {\n    return (\n      <AccountClassesBase account={account}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('relations.account.classes.empty_list')}</p>\n          </Card.Body>\n        </Card>\n      </AccountClassesBase>\n    )\n  }\n\n  // Return populated list\n  return (\n    <AccountClassesBase account={account}>\n      <ContentCard \n        cardTitle={cardTitle}\n        pageInfo={scheduleItemAttendances.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: scheduleItemAttendances.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.scheduleItemAttendances.edges\n              const pageInfo = fetchMoreResult.scheduleItemAttendances.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new scheduleItemAttendances at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    scheduleItemAttendances: {\n                      __typename: previousResult.scheduleItemAttendances.__typename,\n                      edges: [ ...previousResult.scheduleItemAttendances.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.class')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.booking_status')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>  \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {scheduleItemAttendances.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                { console.log(node) }\n                { console.log(account) }\n                <Table.Col>\n                  { moment(node.date).format(dateFormat) } <br />\n                  <span className=\"text-muted\">\n                    {moment(node.date + ' ' + node.scheduleItem.timeStart).format(timeFormat)}\n                  </span>\n                </Table.Col>\n                <Table.Col>\n                  { node.scheduleItem.organizationClasstype.name }\n                </Table.Col>\n                <Table.Col>\n                  { node.scheduleItem.organizationLocationRoom.organizationLocation.name } <br />\n                  <span className=\"text-muted\">\n                    { node.scheduleItem.organizationLocationRoom.name }\n                  </span> \n                </Table.Col>\n                <Table.Col>\n                  <BadgeBookingStatus status={node.bookingStatus} />\n                </Table.Col>\n                <Table.Col>\n                  <AccountClassDelete account={account} node={node} />\n                </Table.Col>\n                {/* <Table.Col className=\"text-right\" key={v4()}>\n                  <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/edit/\" + node.id}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col> */}\n                {/* <Mutation mutation={DELETE_ACCOUNT_CLASSPASS} key={v4()}>\n                  {(deleteAccountClasspass, { data }) => (\n                    <Table.Col className=\"text-right\" key={v4()}>\n                      <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.delete')} \n                        href=\"\"\n                        onClick={() => {\n                          confirm_delete({\n                            t: t,\n                            msgConfirm: t(\"relations.account.classpasses.delete_confirm_msg\"),\n                            msgDescription: <p>{node.organizationClasspass.name} {node.dateStart}</p>,\n                            msgSuccess: t('relations.account.classpasses.deleted'),\n                            deleteFunction: deleteAccountClasspass,\n                            functionVariables: { variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, refetchQueries: [\n                              {query: GET_ACCOUNT_CLASSPASSES_QUERY, variables: { archived: archived, accountId: match.params.account_id }} \n                            ]}\n                          })\n                      }}>\n                        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                      </button>\n                    </Table.Col>\n                  )}\n                </Mutation> */}\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </AccountClassesBase>\n  )\n}\n\n        \nexport default withTranslation()(withRouter(AccountClasses))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_CLASSPASSES_QUERY = gql`\n  query AccountClasspasses($after: String, $before: String, $accountId: ID!) {\n    accountClasspasses(first: 15, before: $before, after: $after, account: $accountId) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationClasspass {\n            id\n            name\n          }\n          dateStart\n          dateEnd\n          classesRemainingDisplay\n          createdAt\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const GET_ACCOUNT_CLASSPASS_QUERY = gql`\n  query AccountClasspass($id: ID!, $accountId: ID!, $after: String, $before: String) {\n    accountClasspass(id:$id) {\n      id\n      organizationClasspass {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      note\n      createdAt\n    }\n    organizationClasspasses(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ClasspassInputValues($after: String, $before: String, $accountId: ID!) {\n    organizationClasspasses(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const CREATE_ACCOUNT_CLASSPASS = gql`\n  mutation CreateAccountClasspass($input: CreateAccountClasspassInput!) {\n    createAccountClasspass(input: $input) {\n      accountClasspass {\n        id\n        account {\n          id\n          firstName\n          lastName\n          email\n        }\n        organizationClasspass {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        note\n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT_CLASSPASS = gql`\nmutation UpdateAccountClasspass($input: UpdateAccountClasspassInput!) {\n  updateAccountClasspass(input: $input) {\n    accountClasspass {\n      id\n      account {\n        id\n        firstName\n        lastName\n        email\n      }\n      organizationClasspass {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      note\n    }\n  }\n}\n`\n\nexport const DELETE_ACCOUNT_CLASSPASS = gql`\n  mutation DeleteAccountClasspass($input: DeleteAccountClasspassInput!) {\n    deleteAccountClasspass(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Icon,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase'\n\nimport { GET_ACCOUNT_CLASSPASSES_QUERY, DELETE_ACCOUNT_CLASSPASS } from \"./queries\"\n\n\nfunction AccountClasspasses({t, match}) {\n  const accountId = match.params.account_id\n  const activeLink = \"classpasses\"\n  const cardTitle = t('relations.account.classpasses.title')\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"add\"\n    resource=\"accountclasspass\">\n      <Link to={`/relations/accounts/${accountId}/classpasses/add`}>\n        <Button color=\"primary btn-block mb-6\">\n          <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.classpasses.add')}\n        </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  const {loading, error, data, fetchMore} = useQuery(GET_ACCOUNT_CLASSPASSES_QUERY, {\n    variables: { accountId: accountId }\n  })\n  const [deleteAccountClasspass] = useMutation(DELETE_ACCOUNT_CLASSPASS)\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const account = data.account\n  const accountClasspasses = data.accountClasspasses\n\n  return (\n    <RelationsAccountProfileBase \n      user={account}\n      activeLink={activeLink}\n      sidebarButton={sidebarButton}\n    >\n      <ContentCard \n        cardTitle={t('relations.account.classpasses.title')}\n        pageInfo={accountClasspasses.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: accountClasspasses.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountClasspasses.edges\n              const pageInfo = fetchMoreResult.accountClasspasses.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountClasspasses at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    accountClasspasses: {\n                      __typename: previousResult.accountClasspasses.__typename,\n                      edges: [ ...previousResult.accountClasspasses.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.classes_remaining')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader> \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {accountClasspasses.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.organizationClasspass.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dateStart}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dateEnd}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.classesRemainingDisplay}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"relations.account.classpasses.delete_confirm_msg\"),\n                          msgDescription: <p>{node.organizationClasspass.name} {node.dateStart}</p>,\n                          msgSuccess: t('relations.account.classpasses.deleted'),\n                          deleteFunction: deleteAccountClasspass,\n                          functionVariables: { variables: {\n                            input: {\n                              id: node.id\n                            }\n                          }, refetchQueries: [\n                            {query: GET_ACCOUNT_CLASSPASSES_QUERY, variables: { accountId: accountId }} \n                          ]}\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>    \n    </RelationsAccountProfileBase>\n  )\n}\n\n        \nexport default withTranslation()(withRouter(AccountClasspasses))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const CLASSPASS_SCHEMA = Yup.object().shape({\n  organizationClasspass: Yup.string()\n    .required(t('yup.field_required')),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .nullable(),\n  note: Yup.string(),\n})\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountClasspassForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, returnUrl }) => (\n  <FoForm>\n    <Card.Body> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.classpass')}>\n            <Field component=\"select\" \n                  name=\"organizationClasspass\" \n                  className={(errors.organizationClasspass) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n              {inputData.organizationClasspasses.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"organizationClasspass\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.date_start')}>\n            <CSDatePicker \n              className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n              selected={values.dateStart}\n              onChange={(date) => {\n                setFieldValue(\"dateStart\", date)\n                setFieldTouched(\"dateEnd\", true)\n              }}\n              onBlur={() => setFieldTouched(\"dateStart\", true)}\n            />\n            <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.date_end')}>\n            <CSDatePicker \n              selected={values.dateEnd}\n              onChange={(date) => {\n                setFieldValue(\"dateEnd\", date)\n                setFieldTouched(\"dateEnd\", true)\n              }}\n              onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              placeholderText={t('schedule.classes.placeholder_enddate')}\n            />\n            <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        </Grid.Row>\n      <Form.Group label={t('general.note')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"note\"\n          initialValue={values.note}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldValue(\"note\", e.target.getContent())\n            setFieldTouched(\"note\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Button\n          type=\"button\" \n          color=\"link\" \n          onClick={() => history.push(returnUrl)}\n        >\n          {t('general.cancel')}\n        </Button>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountClasspassForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_CLASSPASSES_QUERY, GET_INPUT_VALUES_QUERY, CREATE_ACCOUNT_CLASSPASS } from './queries'\nimport { CLASSPASS_SCHEMA } from './yupSchema'\nimport AccountClasspassForm from './AccountClasspassForm'\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase';\n\nimport {\n  Icon,\n  Button,\n  Card,\n} from \"tabler-react\";\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\n\n\nfunction AccountClasspassAdd({t, match, history}) {\n  const accountId = match.params.account_id\n  const activeLink = \"classpasses\"\n  const cardTitle = t('relations.account.classpasses.title_add')\n  const returnUrl = `/relations/accounts/${accountId}/classpasses`\n  \n  const {loading, error, data} = useQuery(GET_INPUT_VALUES_QUERY, { \n    variables: { accountId: accountId }\n  })\n  const [createAccountClasspass] = useMutation(CREATE_ACCOUNT_CLASSPASS)\n\n  const sidebarButton = <Link to={returnUrl}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n  \n  const inputData = data\n  const account = data.account\n\n  return (\n    <RelationsAccountProfileBase\n      activeLink={activeLink}\n      user={account}\n      sidebarButton={sidebarButton} \n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n          <Formik\n            initialValues={{ \n              organizationClasspass: \"\",\n              dateStart: new Date(),\n              note: \"\",\n            }}\n            validationSchema={CLASSPASS_SCHEMA}\n            onSubmit={(values, { setSubmitting }, errors) => {\n                console.log('submit values:')\n                console.log(values)\n                console.log(errors)\n\n                \n                let dateEnd\n                if (values.dateEnd) {\n                  dateEnd = dateToLocalISO(values.dateEnd)\n                } else {\n                  dateEnd = values.dateEnd\n                }\n\n                createAccountClasspass({ variables: {\n                  input: {\n                    account: accountId, \n                    organizationClasspass: values.organizationClasspass,\n                    dateStart: dateToLocalISO(values.dateStart),\n                    dateEnd: dateEnd,\n                    note: values.note,\n                  }\n                }, refetchQueries: [\n                    {query: GET_ACCOUNT_CLASSPASSES_QUERY, variables: { accountId: accountId}}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    const classpassId = data.createAccountClasspass.accountClasspass.id\n                    history.push(`/relations/accounts/${accountId}/classpasses/edit/${classpassId}`)\n                    toast.success((t('relations.account.classpasses.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n              <AccountClasspassForm\n                inputData={inputData}\n                isSubmitting={isSubmitting}\n                setFieldValue={setFieldValue}\n                setFieldTouched={setFieldTouched}\n                errors={errors}\n                values={values}\n                returnUrl={returnUrl}\n              >\n                {console.log(errors)}\n              </AccountClasspassForm>\n            )}\n          </Formik>\n      </Card>\n    </RelationsAccountProfileBase>\n  ) \n}\n\nexport default withTranslation()(withRouter(AccountClasspassAdd))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_CLASSPASSES_QUERY, GET_ACCOUNT_CLASSPASS_QUERY, UPDATE_ACCOUNT_CLASSPASS } from './queries'\nimport { CLASSPASS_SCHEMA } from './yupSchema'\nimport AccountClasspassForm from './AccountClasspassForm'\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase';\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport ProfileMenu from \"../ProfileMenu\"\n\n\nfunction AccountClasspassEdit({t, history, match}) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const activeLink = \"classpasses\"\n  const cardTitle = t('relations.account.classpasses.title_edit')\n  const returnUrl = `/relations/accounts/${accountId}/classpasses`\n  \n  const {loading, error, data} = useQuery(GET_ACCOUNT_CLASSPASS_QUERY, {\n    variables: { id: id, accountId: accountId }\n  })\n  const [updateClasspass] = useMutation(UPDATE_ACCOUNT_CLASSPASS)\n\n  const sidebarButton = <Link to={returnUrl}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const inputData = data\n  const account = data.account\n  const initialdata = data.accountClasspass\n\n    // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  let dateEnd = null\n  if (initialdata.dateStart) {\n    dateStart = new Date(initialdata.dateStart)\n  }\n  if (initialdata.dateEnd) {\n    dateEnd = new Date(initialdata.dateEnd)\n  }\n\n  return (\n    <RelationsAccountProfileBase\n      activeLink={activeLink}\n      user={account}\n      sidebarButton={sidebarButton} \n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n          <Formik\n            initialValues={{ \n              organizationClasspass: initialdata.organizationClasspass.id,\n              dateStart: dateStart,\n              dateEnd: dateEnd,\n              note: initialdata.note,\n            }}\n            validationSchema={CLASSPASS_SCHEMA}\n            onSubmit={(values, { setSubmitting }, errors) => {\n                console.log('submit values:')\n                console.log(values)\n                console.log(errors)\n\n                \n                let dateEnd\n                if (values.dateEnd) {\n                  dateEnd = dateToLocalISO(values.dateEnd)\n                } else {\n                  dateEnd = values.dateEnd\n                }\n\n                updateClasspass({ variables: {\n                  input: {\n                    id: id,\n                    organizationClasspass: values.organizationClasspass,\n                    dateStart: dateToLocalISO(values.dateStart),\n                    dateEnd: dateEnd,\n                    note: values.note,\n                  }\n                }, refetchQueries: [\n                    {query: GET_ACCOUNT_CLASSPASSES_QUERY, variables: { accountId: accountId }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    toast.success((t('relations.account.classpasses.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n              <AccountClasspassForm\n                inputData={inputData}\n                isSubmitting={isSubmitting}\n                setFieldValue={setFieldValue}\n                setFieldTouched={setFieldTouched}\n                errors={errors}\n                values={values}\n                returnUrl={returnUrl}\n              >\n                {console.log(errors)}\n              </AccountClasspassForm>\n            )}\n          </Formik>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountClasspassEdit))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_DOCUMENTS_QUERY = gql`\n  query AccountDocuments($account: ID!) {\n    accountDocuments(account:$account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          description\n          urlProtectedDocument\n          createdAt\n        }\n      }\n    }\n    account(id:$account) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const GET_DOCUMENT_QUERY = gql`\n  query AccountDocument($id: ID!, $account: ID!) {\n    accountDocument(id:$id) {\n      id\n      description\n    }\n    account(id:$account) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const ADD_DOCUMENT = gql`\n  mutation CreateAccountDocument($input:CreateAccountDocumentInput!) {\n    createAccountDocument(input: $input) {\n      accountDocument{\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_DOCUMENT = gql`\n  mutation UpdateAccountDocument($input:UpdateAccountDocumentInput!) {\n    updateAccountDocument(input: $input) {\n      accountDocument{\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_DOCUMENT = gql`\n  mutation DeleteAccountDocument($input:DeleteAccountDocumentInput!) {\n    deleteAccountDocument(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button\n} from \"tabler-react\";\n\nimport { TOKEN_REFRESH } from \"../../queries/system/auth\"\nimport { refreshTokenAndOpenExportLinkInNewTab } from \"../../tools/refresh_token_and_open_export_link\"\n\n\nfunction FileProtectedDownloadTableButton({ t, history, protectedMediaUrl, className=\"\" }) {\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n\n  return (\n    <Button \n      color={\"secondary \" + className}\n      size=\"sm\"\n      icon=\"download-cloud\"\n      RootComponent=\"a\" \n      onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n      doTokenRefresh, history, protectedMediaUrl\n    )}\n    >\n      {t('general.download')}\n    </Button>\n  )\n}\n\nexport default withTranslation()(withRouter(FileProtectedDownloadTableButton))\n\n\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Icon,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase'\nimport FileDownloadTableButton from \"../../../ui/FileDownloadTableButton\"\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport { GET_DOCUMENTS_QUERY, DELETE_DOCUMENT } from \"./queries\"\nimport moment from 'moment'\n\nimport FileProtectedDownloadTableButton from \"../../../ui/FileProtectedDownloadTableButton\"\n\n\nfunction AccountDocuments({t, match}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  const accountId = match.params.account_id\n  const activeLink = \"documents\"\n  const cardTitle = t('relations.account.documents.title')\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"add\"\n    resource=\"accountdocument\">\n      <Link to={`/relations/accounts/${accountId}/documents/add`}>\n        <Button color=\"primary btn-block mb-6\">\n          <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.documents.add')}\n        </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  const {loading, error, data, fetchMore} = useQuery(GET_DOCUMENTS_QUERY, {\n    variables: { account: accountId }\n  })\n  const [deleteAccountDocument] = useMutation(DELETE_DOCUMENT)\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const account = data.account\n  const accountDocuments = data.accountDocuments\n  console.log(accountDocuments)\n\n  return (\n    <RelationsAccountProfileBase \n      user={account}\n      activeLink={activeLink}\n      sidebarButton={sidebarButton}\n    >\n      <ContentCard \n        cardTitle={t('relations.account.documents.title')}\n        pageInfo={accountDocuments.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: accountDocuments.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountDocuments.edges\n              const pageInfo = fetchMoreResult.accountDocuments.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountDocuments at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    accountDocuments: {\n                      __typename: previousResult.accountDocuments.__typename,\n                      edges: [ ...previousResult.accountDocuments.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.document')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.download')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader> \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {accountDocuments.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.description}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {moment(node.createdAt).format(dateFormat)}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <FileProtectedDownloadTableButton protectedMediaUrl={node.urlProtectedDocument} />\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={\"/relations/accounts/\" + accountId + \"/documents/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"relations.account.documents.delete_confirm_msg\"),\n                          msgDescription: <p>{node.description}</p>,\n                          msgSuccess: t('relations.account.documents.deleted'),\n                          deleteFunction: deleteAccountDocument,\n                          functionVariables: { variables: {\n                            input: {\n                              id: node.id\n                            }\n                          }, refetchQueries: [\n                            {query: GET_DOCUMENTS_QUERY, variables: { account: accountId }} \n                          ]}\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>    \n    </RelationsAccountProfileBase>\n  )\n}\n\n        \nexport default withTranslation()(withRouter(AccountDocuments))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\nimport { customFileInputLabelStyle } from \"../../../../tools/custom_file_input_label_style\"\n  \n\nfunction AccountDocumentForm({ t, history, errors, values, isSubmitting, returnUrl, inputFileName, fileInputLabel, handleFileInputChange=f=>f, }) {\n  return (\n    <FoForm>\n      <Card.Body> \n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.description')}>\n              <Field type=\"text\" \n                    name=\"description\" \n                    className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row> \n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.custom_file_input_label')}>\n              <div className=\"custom-file\">\n                <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                  {fileInputLabel}\n                </label>\n              </div>\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            className=\"pull-right\"\n            color=\"primary\"\n            disabled={isSubmitting}\n            type=\"submit\"\n          >\n            {t('general.submit')}\n          </Button>\n          <Button\n            type=\"button\" \n            color=\"link\" \n            onClick={() => history.push(returnUrl)}\n          >\n            {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountDocumentForm))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_DOCUMENTS_QUERY, ADD_DOCUMENT } from './queries'\nimport { GET_ACCOUNT_QUERY } from '../queries'\n// import { CLASSPASS_SCHEMA } from './yupSchema'\nimport AccountClasspassForm from './AccountDocumentForm'\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase';\n\nimport {\n  Icon,\n  Button,\n  Card,\n} from \"tabler-react\";\n\n\nfunction AccountDocumentAdd({t, match, history}) {\n  const accountId = match.params.account_id\n  const activeLink = \"classpasses\"\n  const cardTitle = t('relations.account.documents.title_add')\n  const returnUrl = `/relations/accounts/${accountId}/documents`\n  \n  const { loading, error, data } = useQuery(GET_ACCOUNT_QUERY, {\n    variables: { id: accountId }\n  })\n  const [addAccountDocument] = useMutation(ADD_DOCUMENT)\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n\n  const sidebarButton = <Link to={returnUrl}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n  \n  const inputData = data\n  const account = data.account\n\n  return (\n    <RelationsAccountProfileBase\n      activeLink={activeLink}\n      user={account}\n      sidebarButton={sidebarButton} \n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            description: \"\"\n          }}\n          // validationSchema={CLASSPASS_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log(\"Submit values\")\n            console.log(values)\n            console.log(fileName)\n  \n            let inputVars = {\n              account: accountId,\n              description: values.description,\n              documentFileName: fileName,\n            }\n  \n            let reader = new FileReader()\n            reader.onload = function(reader_event) {\n              console.log(reader_event.target.result)\n              let b64_enc_file = reader_event.target.result\n              console.log(b64_enc_file)\n              // Add uploaded document b64 encoded blob to input vars\n              inputVars.document = b64_enc_file\n  \n              addAccountDocument({ variables: {\n                input: inputVars\n              }, refetchQueries: [\n                  {query: GET_DOCUMENTS_QUERY, variables: {account: accountId}}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('relations.account.documents.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                    setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n            }\n            \n            let file = inputFileName.current.files[0]\n            if (file && file.size < 5242880) {\n              reader.readAsDataURL(file)\n            } else if (file && file.size > 5242880) { \n              toast.error(t(\"error_messages.selected_file_exceeds_max_filesize\"), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            } else {\n              toast.error(t(\"general.please_select_a_file\"), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <AccountClasspassForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              inputFileName={inputFileName}\n              fileInputLabel={fileInputLabel}\n              handleFileInputChange={handleFileInputChange}\n              returnUrl={returnUrl}\n            >\n              {console.log(errors)}\n            </AccountClasspassForm>\n          )}\n        </Formik>\n      </Card>\n    </RelationsAccountProfileBase>\n  ) \n}\n\nexport default withTranslation()(withRouter(AccountDocumentAdd))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const DOCUMENT_SCHEMA = Yup.object().shape({\n    description: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n  \n\nfunction AccountDocumentFormEdit({ t, history, errors, values, isSubmitting, returnUrl }) {\n  return (\n    <FoForm>\n      <Card.Body> \n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.description')}>\n              <Field type=\"text\" \n                    name=\"description\" \n                    className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row> \n      </Card.Body>\n      <Card.Footer>\n          <Button \n            className=\"pull-right\"\n            color=\"primary\"\n            disabled={isSubmitting}\n            type=\"submit\"\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button\n              type=\"button\" \n              color=\"link\"\n            >\n              {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountDocumentFormEdit))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_DOCUMENTS_QUERY, GET_DOCUMENT_QUERY, UPDATE_DOCUMENT } from './queries'\nimport { DOCUMENT_SCHEMA } from './yupSchema'\nimport AccountDocumentFormEdit from './AccountDocumentFormEdit'\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase';\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport ProfileMenu from \"../ProfileMenu\"\n\n\nfunction AccountDocumentEdit({t, history, match}) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const activeLink = \"documents\"\n  const cardTitle = t('relations.account.documents.title_edit')\n  const returnUrl = `/relations/accounts/${accountId}/documents`\n  \n  const {loading, error, data} = useQuery(GET_DOCUMENT_QUERY, {\n    variables: { id: id, account: accountId }\n  })\n  const [updateDocument] = useMutation(UPDATE_DOCUMENT)\n\n  const sidebarButton = <Link to={returnUrl}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const inputData = data\n  const account = data.account\n  const initialdata = data.accountDocument\n\n  return (\n    <RelationsAccountProfileBase\n      activeLink={activeLink}\n      user={account}\n      sidebarButton={sidebarButton} \n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            description: initialdata.description,\n          }}\n          validationSchema={DOCUMENT_SCHEMA}\n          onSubmit={(values, { setSubmitting }, errors) => {\n              console.log('submit values:')\n              console.log(values)\n              console.log(errors)\n\n              updateDocument({ variables: {\n                input: {\n                  id: id,\n                  description: values.description\n                }\n              }, refetchQueries: [\n                {query: GET_DOCUMENTS_QUERY, variables: { account: accountId }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('relations.account.documents.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <AccountDocumentFormEdit\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n            >\n              {console.log(errors)}\n            </AccountDocumentFormEdit>\n          )}\n        </Formik>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountDocumentEdit))\n","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport { GET_ACCOUNT_QUERY } from '../queries'\n\n\nfunction AccountFinancePaymentBatchcAtegoryItemsBase({ t, history, match, children, showBack=false }) {\n  const accountId = match.params.account_id\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_QUERY, {\n    variables: { id: accountId }\n  })\n\n  if (loading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (error) {\n    console.log(error)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n\n  const account = data.account\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.firstName + \" \" + account.lastName}>\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              {!(showBack) ?\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"accountfinancepaymentbatchcategoryitem\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/finance_payment_batch_category_items/add`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.finance_payment_batch_category_items.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              {(showBack) ?\n                <HasPermissionWrapper permission=\"view\"\n                                      resource=\"accountfinancepaymentbatchcategoryitem\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/finance_payment_batch_category_items/`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\"\n              }\n              <ProfileMenu \n                activeLink='finance_payment_batch_category_item'\n                accountId={accountId}\n              /> \n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}    \n        \nexport default withTranslation()(withRouter(AccountFinancePaymentBatchcAtegoryItemsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY = gql`\n  query AccountFinancePaymentBatchCategoryItems($after: String, $before: String, $account: ID!) {\n    accountFinancePaymentBatchCategoryItems(first: 15, before: $before, after: $after, account: $account) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          financePaymentBatchCategory {\n            id\n            name\n          }\n          year\n          month\n          amountDisplay\n          description\n        }\n      }\n    }\n  }\n`\n\nexport const GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_QUERY = gql`\n  query AccountFinancePaymentBatchCategoryItem($id: ID!) {\n    accountFinancePaymentBatchCategoryItem(id: $id) {\n      id\n      financePaymentBatchCategory {\n        id\n        name\n      }\n      year\n      month\n      amount\n      description\n    }\n    financePaymentBatchCategories(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          batchCategoryType\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query AccountPaymentBatchCategoryItemInputValues($after: String, $before: String) {\n    financePaymentBatchCategories(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          batchCategoryType\n        }\n      }\n    }\n  }\n`\n\nexport const CREATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM = gql`\n  mutation CreateAccountFinancePaymentBatchCategoryItem($input: CreateAccountFinancePaymentBatchCategoryItemInput!) {\n    createAccountFinancePaymentBatchCategoryItem(input: $input) {\n      accountFinancePaymentBatchCategoryItem {\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM = gql`\n  mutation UpdateAccountFinancePaymentBatchCategoryItem($input: UpdateAccountFinancePaymentBatchCategoryItemInput!) {\n    updateAccountFinancePaymentBatchCategoryItem(input: $input) {\n      accountFinancePaymentBatchCategoryItem {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM = gql`\n  mutation DeleteAccountFinancePaymentBatchCategoryItem($input: DeleteAccountFinancePaymentBatchCategoryItemInput!) {\n    deleteAccountFinancePaymentBatchCategoryItem(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport AccountFinancePaymentBatchCategoryItemsBase from \"./AccountFinancePaymentBatchCategoryItemsBase\"\n\nimport { \n  GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY,\n  DELETE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM\n} from \"./queries\"\n\n\n\nfunction AccountFinancePaymentBatchCategoryItems({ t, history, match }) {\n  const accountId = match.params.account_id\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, {\n    variables: { account: accountId }\n  })\n  const [deleteAccountFinancePaymentBatchCategoryItem] = useMutation(DELETE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM)\n\n  if (loading) return (\n    <AccountFinancePaymentBatchCategoryItemsBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AccountFinancePaymentBatchCategoryItemsBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountFinancePaymentBatchCategoryItemsBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AccountFinancePaymentBatchCategoryItemsBase>\n    )\n  }\n\n  let batchCategoryItems = data.accountFinancePaymentBatchCategoryItems\n\n  return (\n    <AccountFinancePaymentBatchCategoryItemsBase>\n      <ContentCard \n        cardTitle={t('relations.account.finance_payment_batch_category_items.title')}\n        hasCardBody={false}\n        pageInfo={batchCategoryItems.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: batchCategoryItems.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountFinancePaymentBatchCategoryItems.edges\n              const pageInfo = fetchMoreResult.accountFinancePaymentBatchCategoryItems.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountClasspasses at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    batchCategoryItems: {\n                      __typename: previousResult.accountFinancePaymentBatchCategoryItems.__typename,\n                      edges: [ ...previousResult.accountFinancePaymentBatchCategoryItems.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table cards>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.year')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.month')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.amount')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.category')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader> \n              <Table.ColHeader></Table.ColHeader> \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {batchCategoryItems.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.year}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.month}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.amountDisplay}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.financePaymentBatchCategory.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.description.replace(/(.{28})..+/, \"$1...\")}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={`/relations/accounts/${match.params.account_id}/finance_payment_batch_category_items/edit/${node.id}`}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col>\n                    <button \n                      className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"relations.account.finance_payment_batch_category_items.delete_confirm_msg\"),\n                          msgDescription: <p><br />{node.financePaymentBatchCategory.name} {node.amountDisplay} <br/>{node.description}</p>,\n                          msgSuccess: t('relations.account.finance_payment_batch_category_items.deleted'),\n                          deleteFunction: deleteAccountFinancePaymentBatchCategoryItem,\n                          functionVariables: { variables: {\n                            input: {\n                              id: node.id\n                            }\n                          }, refetchQueries: [\n                            {query: GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, variables: { \n                              account: accountId\n                            }} \n                          ]}\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </AccountFinancePaymentBatchCategoryItemsBase>\n  )\n}\n      \n        \nexport default withTranslation()(withRouter(AccountFinancePaymentBatchCategoryItems))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA = Yup.object().shape({\n  financePaymentBatchCategory: Yup.string()\n    .required(t('yup.field_required')),\n  year: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  month: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  amount: Yup.number()\n    .required(t('yup.field_required')),\n  description: Yup.string(),\n})\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\nimport { Link } from \"react-router-dom\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountFinancePaymentBatchCategoryItemsForm = ({ t, history, inputData, isSubmitting, errors, returnUrl }) => (\n  <FoForm>\n    <Card.Body> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.year')} >\n            <Field type=\"text\" \n                  name=\"year\" \n                  className={(errors.year) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"year\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.month')} >\n            <Field type=\"text\" \n                  name=\"month\" \n                  className={(errors.month) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"month\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.amount')} >\n            <Field type=\"text\" \n                  name=\"amount\" \n                  className={(errors.amount) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"amount\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.category')}>\n            <Field component=\"select\" \n                  name=\"financePaymentBatchCategory\" \n                  className={(errors.financePaymentBatchCategory) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n              {inputData.financePaymentBatchCategories.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"financePaymentBatchCategory\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.description')} >\n            <Field type=\"text\" \n                  name=\"description\" \n                  className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button\n            type=\"button\" \n            color=\"link\" \n          >\n            {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountFinancePaymentBatchCategoryItemsForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { \n  GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, \n  CREATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM,\n  GET_INPUT_VALUES_QUERY \n} from './queries'\nimport { ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA } from './yupSchema'\nimport AccountFinancePaymentBatchCategoryItemsForm from './AccountFinancePaymentBatchCategoryItemsForm'\n\nimport {\n  Card,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport AccountFinancePaymentBatchCategoryItemsBase from \"./AccountFinancePaymentBatchCategoryItemsBase\"\n\nfunction AccountFinancePaymentBatchCategoryItemAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const returnUrl = `/relations/accounts/${accountId}/finance_payment_batch_category_items`\n\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES_QUERY)\n  const [addAccountFinancePaymentBatchCategoryItem] = useMutation(\n    CREATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM\n  )\n\n  if (loading) {\n    return (\n      <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n        <Card title={t('relations.account.finance_payment_batch_category_items.title_add')}>\n          <Card.Body>\n            {t(\"general.loading_with_dots\")}\n          </Card.Body>\n        </Card>\n      </AccountFinancePaymentBatchCategoryItemsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n        <Card title={t('relations.account.finance_payment_batch_category_items.title_add')}>\n          <Card.Body>\n            {t(\"relations.account.finance_payment_batch_category_items.error_loading\")}\n          </Card.Body>\n        </Card>\n      </AccountFinancePaymentBatchCategoryItemsBase>\n    )\n  }\n\n  const inputData = data\n\n  return (\n    <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n      <Card title={t('relations.account.finance_payment_batch_category_items.title_add')}>\n        <Formik\n          initialValues={{ \n            financePaymentBatchCategory: \"\",\n            year: new Date().getFullYear(),\n            month: new Date().getMonth() + 1,\n            amount: \"\",\n            description: \"\"\n          }}\n          validationSchema={ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA}\n          onSubmit={(values, { setSubmitting }, errors) => {\n              console.log('submit values:')\n              console.log(values)\n              console.log(errors)\n\n              addAccountFinancePaymentBatchCategoryItem({ variables: {\n                input: {\n                  account: accountId, \n                  amount: values.amount,\n                  year: values.year,\n                  month: values.month,\n                  financePaymentBatchCategory: values.financePaymentBatchCategory,\n                  description: values.description\n                }\n              }, refetchQueries: [\n                  {query: GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, variables: {account: accountId}}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('relations.account.finance_payment_batch_category_items.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <AccountFinancePaymentBatchCategoryItemsForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              errors={errors}\n              returnUrl={returnUrl}\n            >\n              {console.log(errors)}\n            </AccountFinancePaymentBatchCategoryItemsForm>\n          )}\n        </Formik>\n      </Card>\n    </AccountFinancePaymentBatchCategoryItemsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountFinancePaymentBatchCategoryItemAdd))\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { \n  GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, \n  GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_QUERY, \n  UPDATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM\n} from './queries'\nimport { ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA } from './yupSchema'\nimport AccountFinancePaymentBatchCategoryItemsForm from './AccountFinancePaymentBatchCategoryItemsForm'\n\nimport {\n  Card,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport AccountFinancePaymentBatchCategoryItemsBase from \"./AccountFinancePaymentBatchCategoryItemsBase\"\n\nfunction AccountFinancePaymentBatchCategoryItemEdit({ t, history, match }) {\n  const accountId = match.params.account_id\n  const accountFinancePaymentBatchCategoryItemId = match.params.id\n  const returnUrl = `/relations/accounts/${accountId}/finance_payment_batch_category_items`\n  const cardTitle = t('relations.account.finance_payment_batch_category_items.title_edit')\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_QUERY, { variables: {\n    id: accountFinancePaymentBatchCategoryItemId\n  }})\n  const [updateAccountFinancePaymentBatchCategoryItem] = useMutation(\n    UPDATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM\n  )\n\n  if (loading) {\n    return (\n      <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            {t(\"general.loading_with_dots\")}\n          </Card.Body>\n        </Card>\n      </AccountFinancePaymentBatchCategoryItemsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            {t(\"relations.account.finance_payment_batch_category_items.error_loading\")}\n          </Card.Body>\n        </Card>\n      </AccountFinancePaymentBatchCategoryItemsBase>\n    )\n  }\n\n  const inputData = data\n  const initialValues = data.accountFinancePaymentBatchCategoryItem\n\n  return (\n    <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            financePaymentBatchCategory: initialValues.financePaymentBatchCategory.id,\n            year: initialValues.year,\n            month: initialValues.month,\n            amount: initialValues.amount,\n            description: initialValues.description\n          }}\n          validationSchema={ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA}\n          onSubmit={(values, { setSubmitting }, errors) => {\n              console.log('submit values:')\n              console.log(values)\n              console.log(errors)\n\n              updateAccountFinancePaymentBatchCategoryItem({ variables: {\n                input: {\n                  id: accountFinancePaymentBatchCategoryItemId, \n                  amount: values.amount,\n                  year: values.year,\n                  month: values.month,\n                  financePaymentBatchCategory: values.financePaymentBatchCategory,\n                  description: values.description\n                }\n              }, refetchQueries: [\n                  {query: GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, variables: {account: accountId}}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('relations.account.finance_payment_batch_category_items.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <AccountFinancePaymentBatchCategoryItemsForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              errors={errors}\n              returnUrl={returnUrl}\n            >\n              {console.log(errors)}\n            </AccountFinancePaymentBatchCategoryItemsForm>\n          )}\n        </Formik>\n      </Card>\n    </AccountFinancePaymentBatchCategoryItemsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountFinancePaymentBatchCategoryItemEdit))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_INVOICES_QUERY = gql`\n  query FinanceInvoices($after: String, $before: String, $status: String, $accountId: ID!) {\n    financeInvoices(first: 15, before: $before, after: $after, status: $status, account: $accountId) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          invoiceNumber\n          status\n          summary\n          relationCompany\n          relationContactName\n          dateSent\n          dateDue\n          total\n          totalDisplay\n          balance\n          balanceDisplay\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      fullName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\n// export const GET_ACCOUNT_SUBSCRIPTION_QUERY = gql`\n//   query AccountSubscription($id: ID!, $accountId: ID!, $after: String, $before: String) {\n//     accountSubscription(id:$id) {\n//       id\n//       organizationSubscription {\n//         id\n//         name\n//       }\n//       financePaymentMethod {\n//         id\n//         name\n//       }\n//       dateStart\n//       dateEnd\n//       note\n//       registrationFeePaid\n//       createdAt\n//     }\n//     organizationSubscriptions(first: 100, before: $before, after: $after, archived: false) {\n//       pageInfo {\n//         startCursor\n//         endCursor\n//         hasNextPage\n//         hasPreviousPage\n//       }\n//       edges {\n//         node {\n//           id\n//           archived\n//           name\n//         }\n//       }\n//     }\n//     financePaymentMethods(first: 100, before: $before, after: $after, archived: false) {\n//       pageInfo {\n//         startCursor\n//         endCursor\n//         hasNextPage\n//         hasPreviousPage\n//       }\n//       edges {\n//         node {\n//           id\n//           archived\n//           name\n//           code\n//         }\n//       }\n//     }\n//     account(id:$accountId) {\n//       id\n//       firstName\n//       lastName\n//       email\n//       phone\n//       mobile\n//       isActive\n//     }\n//   }\n// `\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InvoiceInputValues($after: String, $before: String, $accountId: ID!) {\n    financeInvoiceGroups(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const CREATE_ACCOUNT_INVOICE = gql`\n  mutation CreateFinanceInvoice($input: CreateFinanceInvoiceInput!) {\n    createFinanceInvoice(input: $input) {\n      financeInvoice {\n        id\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nfunction AccountInvoicesBase({ t, match, history, children, account={} }) {\n  const accountId = match.params.account_id\n  let pageHeader\n  if (account) {\n    pageHeader = account.fullName\n  }\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={pageHeader} >\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financeinvoice\">\n                  <Link to={`/relations/accounts/${accountId}/invoices/add`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.invoices.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              <ProfileMenu \n                activeLink='invoices' \n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountInvoicesBase))\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport moment from 'moment'\n\nimport {\n  Card,\n  Icon,\n  Button,\n  Table,\n  Text\n} from \"tabler-react\";\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport { GET_ACCOUNT_INVOICES_QUERY } from \"./queries\"\nimport CSLS from \"../../../../tools/cs_local_storage\"\nimport { DELETE_FINANCE_INVOICE } from \"../../../finance/invoices/queries\"\nimport FinanceInvoiceStatus from \"../../../ui/FinanceInvoiceStatus\"\nimport AccountInvoicesBase from './AccountInvoicesBase'\n\n\nfunction AccountInvoices({ t, location, match, history }) {\n  const accountId = match.params.account_id\n  const cardTitle = t('relations.account.invoices.title')\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_INVOICES_QUERY, {\n    variables: {accountId: accountId},\n    fetchPolicy: \"network-only\"\n  })\n  const [deleteFinanceInvoice] = useMutation(DELETE_FINANCE_INVOICE)\n\n  // Loading\n  if (loading) return (\n    <AccountInvoicesBase>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>\n        </Card.Body>\n      </Card>\n    </AccountInvoicesBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountInvoicesBase>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('general.error_sad_smiley')}</p>\n          </Card.Body>\n        </Card>\n      </AccountInvoicesBase>\n    )\n  }\n\n  // Set back location for edit invoice\n  localStorage.setItem(CSLS.FINANCE_INVOICES_EDIT_RETURN, location.pathname)\n\n  let financeInvoices = data.financeInvoices\n  const account = data.account\n  \n  return (\n    <AccountInvoicesBase account={account}>\n      <ContentCard \n        cardTitle={cardTitle}\n        pageInfo={financeInvoices.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: financeInvoices.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.financeInvoices.edges\n              const pageInfo = fetchMoreResult.financeInvoices.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new financeInvoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    financeInvoices: {\n                      __typename: previousResult.financeInvoices.__typename,\n                      edges: [ ...previousResult.financeInvoices.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoices.invoice_number')} & {t('finance.invoices.summary')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoices.date')} & {t('finance.invoices.due')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.balance')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {financeInvoices.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    <FinanceInvoiceStatus status={node.status} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.invoiceNumber} <br />\n                    <Text.Small color=\"gray\">{node.summary.trunc(35)}</Text.Small>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {moment(node.dateSent).format('LL')} <br />\n                    <Text.Small color=\"gray\">{moment(node.dateDue).format('LL')}</Text.Small>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.totalDisplay}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.balanceDisplay}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Button className='btn-sm' \n                            onClick={() => history.push(\"/finance/invoices/edit/\" + node.id)}\n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"finance.invoices.delete_confirm_msg\"),\n                          msgDescription: <p>{node.invoiceNumber}</p>,\n                          msgSuccess: t('finance.invoices.deleted'),\n                          deleteFunction: deleteFinanceInvoice,\n                          functionVariables: { \n                            variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, \n                            refetchQueries: [\n                              {query: GET_ACCOUNT_INVOICES_QUERY, variables: {accountId: accountId}},\n                            ]\n                          }\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </AccountInvoicesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountInvoices))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountInvoiceAddForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, return_url }) => (\n  <FoForm>\n    <Card.Body>\n      <Form.Group label={t('general.finance_invoice_group')}>\n        <Field component=\"select\" \n              name=\"financeInvoiceGroup\" \n              className={(errors.financeInvoiceGroup) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\">\n          <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n          {inputData.financeInvoiceGroups.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name}</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"financeInvoiceGroup\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.summary')}>\n        <Field type=\"text\" \n                name=\"summary\" \n                className={(errors.summary) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"summary\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={return_url}>\n          <Button\n            type=\"button\" \n            color=\"link\" \n          >\n              {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountInvoiceAddForm))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const SUBSCRIPTION_SCHEMA = Yup.object().shape({\n  organizationSubscription: Yup.string()\n    .required(t('yup.field_required')),\n  financePaymentMethod: Yup.string(),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .nullable(),\n  registrationFeePaid: Yup.boolean(),\n  note: Yup.string(),\n})\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTIONS_QUERY, GET_INPUT_VALUES_QUERY, CREATE_ACCOUNT_INVOICE } from './queries'\nimport { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport AccountInvoiceAddForm from './AccountInvoiceAddForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase'\nimport ProfileMenu from \"../ProfileMenu\"\n\n\n\nfunction AccountInvoiceAdd({ t, match, history }) {\n  const account_id = match.params.account_id\n  const activeLink = \"invoices\"\n  const cardTitle = t('relations.account.invoices.title_add')\n  const returnUrl = `/relations/accounts/${account_id}/invoices`\n  const sidebarButton = <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES_QUERY, {\n      variables: {\n        accountId: account_id\n      }\n    }\n  )\n  const [createInvoice] = useMutation(CREATE_ACCOUNT_INVOICE, {\n    // onCompleted = () => history.push('/finance/invoices/edit/')\n  }) \n\n  // Query\n  // Loading\n  if (loading) {\n    return <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('general.loading_with_dots')}</p>\n          </Card.Body>\n        </Card>\n      </RelationsAccountProfileBase>\n  }\n  // Error\n  if (error) {\n    console.log(error)\n    return <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('general.error_sad_smiley')}</p>\n          </Card.Body>\n        </Card>\n      </RelationsAccountProfileBase>\n  }\n  \n  console.log(data)\n  const account = data.account\n\n\n  return (\n    <RelationsAccountProfileBase activeLink={activeLink} user={account} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{\n            financeInvoiceGroup: \"\",\n            summary: \"\"\n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            createInvoice({ variables: {\n              input: {\n                account: account_id, \n                financeInvoiceGroup: values.financeInvoiceGroup,\n                summary: values.summary\n              }\n            }, refetchQueries: [\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('relations.account.invoices.title_add')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                history.push('/finance/invoices/edit/' + data.createFinanceInvoice.financeInvoice.id)\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, submitForm, setFieldTouched, setFieldValue }) => (\n            <AccountInvoiceAddForm\n              inputData={data}\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              submitForm={submitForm}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              return_url={returnUrl}\n            >\n            </AccountInvoiceAddForm>   \n          )}\n        </Formik>\n      </Card>\n    </RelationsAccountProfileBase>\n\n    // <SiteWrapper>\n    //   <div className=\"my-3 my-md-5\">\n    //     <Container>\n    //       <Page.Header title={account.firstName + \" \" + account.lastName} />\n    //       <Grid.Row>\n    //           <Grid.Col md={9}>\n                \n    //           </Grid.Col>\n    //           <Grid.Col md={3}>\n    //             <ProfileMenu \n    //               activeLink='invoices'\n    //               accountId={match.params.account_id}\n    //             />\n    //           </Grid.Col>\n    //         </Grid.Row>\n    //       </Container>\n    //   </div>\n    // </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountInvoiceAdd))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_MEMBERSHIPS_QUERY = gql`\n  query AccountMemberships($after: String, $before: String, $accountId: ID!) {\n    accountMemberships(first: 15, before: $before, after: $after, account: $accountId) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationMembership {\n            id\n            name\n          }\n          financePaymentMethod {\n            id\n            name\n          }\n          dateStart\n          dateEnd\n          createdAt\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\nexport const GET_ACCOUNT_MEMBERSHIP_QUERY = gql`\n  query AccountMembership($id: ID!, $accountId: ID!, $after: String, $before: String, $archived: Boolean!) {\n    accountMembership(id:$id) {\n      id\n      organizationMembership {\n        id\n        name\n      }\n      financePaymentMethod {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      note\n      createdAt\n    }\n    organizationMemberships(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query MembershipInputValues($after: String, $before: String, $archived: Boolean!, $accountId: ID!) {\n    organizationMemberships(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport { GET_ACCOUNT_MEMBERSHIPS_QUERY } from \"./queries\"\n\nconst DELETE_ACCOUNT_MEMBERSHIP = gql`\n  mutation DeleteAccountMembership($input: DeleteAccountMembershipInput!) {\n    deleteAccountMembership(input: $input) {\n      ok\n    }\n  }\n`\n\n\nconst AccountMemberships = ({ t, history, match, archived=false }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Query query={GET_ACCOUNT_MEMBERSHIPS_QUERY} variables={{ archived: archived, accountId: match.params.account_id }}> \n        {({ loading, error, data, refetch, fetchMore }) => {\n          // Loading\n          if (loading) return <p>{t('general.loading_with_dots')}</p>\n          // Error\n          if (error) {\n            console.log(error)\n            return <p>{t('general.error_sad_smiley')}</p>\n          }\n\n          const account = data.account\n          const accountMemberships = data.accountMemberships\n\n          return (\n            <Container>\n              <Page.Header title={account.firstName + \" \" + account.lastName} >\n                <RelationsAccountsBack />\n              </Page.Header>\n              <Grid.Row>\n                <Grid.Col md={9}>\n                  <ContentCard \n                    cardTitle={t('relations.account.memberships.title')}\n                    pageInfo={accountMemberships.pageInfo}\n                    onLoadMore={() => {\n                      fetchMore({\n                        variables: {\n                          after: accountMemberships.pageInfo.endCursor\n                        },\n                        updateQuery: (previousResult, { fetchMoreResult }) => {\n                          const newEdges = fetchMoreResult.accountMemberships.edges\n                          const pageInfo = fetchMoreResult.accountMemberships.pageInfo\n\n                          return newEdges.length\n                            ? {\n                                // Put the new accountMemberships at the end of the list and update `pageInfo`\n                                // so we have the new `endCursor` and `hasNextPage` values\n                                accountMemberships: {\n                                  __typename: previousResult.accountMemberships.__typename,\n                                  edges: [ ...previousResult.accountMemberships.edges, ...newEdges ],\n                                  pageInfo\n                                }\n                              }\n                            : previousResult\n                        }\n                      })\n                    }} \n                  >\n                    <Table>\n                      <Table.Header>\n                        <Table.Row key={v4()}>\n                          <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                          <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                          <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                          <Table.ColHeader>{t('general.payment_method')}</Table.ColHeader>\n                          <Table.ColHeader></Table.ColHeader> \n                        </Table.Row>\n                      </Table.Header>\n                      <Table.Body>\n                          {accountMemberships.edges.map(({ node }) => (\n                            <Table.Row key={v4()}>\n                              <Table.Col key={v4()}>\n                                {node.organizationMembership.name}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.dateStart}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.dateEnd}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {(node.financePaymentMethod) ? node.financePaymentMethod.name : \"\"}\n                              </Table.Col>\n                              <Table.Col className=\"text-right\" key={v4()}>\n                                <Link to={\"/relations/accounts/\" + match.params.account_id + \"/memberships/edit/\" + node.id}>\n                                  <Button className='btn-sm' \n                                          color=\"secondary\">\n                                    {t('general.edit')}\n                                  </Button>\n                                </Link>\n                              </Table.Col>\n                              <Mutation mutation={DELETE_ACCOUNT_MEMBERSHIP} key={v4()}>\n                                {(deleteAccountMembership, { data }) => (\n                                  <Table.Col className=\"text-right\" key={v4()}>\n                                    <button className=\"icon btn btn-link btn-sm\" \n                                      title={t('general.delete')} \n                                      href=\"\"\n                                      onClick={() => {\n                                        confirm_delete({\n                                          t: t,\n                                          msgConfirm: t(\"relations.account.memberships.delete_confirm_msg\"),\n                                          msgDescription: <p>{node.organizationMembership.name} {node.dateStart}</p>,\n                                          msgSuccess: t('relations.account.memberships.deleted'),\n                                          deleteFunction: deleteAccountMembership,\n                                          functionVariables: { variables: {\n                                            input: {\n                                              id: node.id\n                                            }\n                                          }, refetchQueries: [\n                                            {query: GET_ACCOUNT_MEMBERSHIPS_QUERY, variables: { archived: archived, accountId: match.params.account_id }} \n                                          ]}\n                                        })\n                                    }}>\n                                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                                    </button>\n                                  </Table.Col>\n                                )}\n                              </Mutation>\n                            </Table.Row>\n                          ))}\n                      </Table.Body>\n                    </Table>\n                  </ContentCard>\n                </Grid.Col>\n                <Grid.Col md={3}>\n                  <ProfileCardSmall user={account}/>\n                  <HasPermissionWrapper permission=\"add\"\n                                        resource=\"accountmembership\">\n                    <Link to={\"/relations/accounts/\" + match.params.account_id + \"/memberships/add\"}>\n                      <Button color=\"primary btn-block mb-6\">\n                              {/* //  onClick={() => history.push(\"/organization/memberships/add\")}> */}\n                        <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.memberships.add')}\n                      </Button>\n                    </Link>\n                  </HasPermissionWrapper>\n                  <ProfileMenu \n                    activeLink='memberships' \n                    account_id={match.params.account_id}\n                  />\n                </Grid.Col>\n              </Grid.Row>\n            </Container>\n          )\n        }}\n      </Query>\n    </div>\n  </SiteWrapper>\n)\n      \n        \nexport default withTranslation()(withRouter(AccountMemberships))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const MEMBERSHIP_SCHEMA = Yup.object().shape({\n  organizationMembership: Yup.string()\n    .required(t('yup.field_required')),\n  financePaymentMethod: Yup.string(),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  // dateEnd: Yup.date()\n  //   .nullable(),\n  note: Yup.string(),\n})\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountMembershipForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, return_url }) => (\n  <FoForm>\n    <Card.Body> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.membership')}>\n            <Field component=\"select\" \n                  name=\"organizationMembership\" \n                  className={(errors.organizationMembership) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n              {inputData.organizationMemberships.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"organizationMembership\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.payment_method')}>\n            <Field component=\"select\" \n                  name=\"financePaymentMethod\" \n                  className={(errors.financePaymentMethod) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}></option>\n              {inputData.financePaymentMethods.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"financePaymentMethod\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row> \n      <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={(values.frequencyType == \"SPECIFIC\") ? t('general.date') : t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateEnd\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n            <Grid.Col>\n              <Form.Group label={t('general.date_end')}>\n                <CSDatePicker \n                  selected={values.dateEnd}\n                  onChange={(date) => {\n                    setFieldValue(\"dateEnd\", date)\n                    setFieldTouched(\"dateEnd\", true)\n                  }}\n                  onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                  placeholderText={t('schedule.classes.placeholder_enddate')}\n                />\n                <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          }\n        </Grid.Row>\n      <Form.Group label={t('general.note')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"note\"\n          initialValue={values.note}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldValue(\"note\", e.target.getContent())\n            setFieldTouched(\"note\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Button\n          type=\"button\" \n          color=\"link\" \n          onClick={() => history.push(return_url)}\n        >\n            {t('general.cancel')}\n        </Button>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountMembershipForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_MEMBERSHIPS_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { MEMBERSHIP_SCHEMA } from './yupSchema'\nimport AccountMembershipForm from './AccountMembershipForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport ProfileMenu from \"../ProfileMenu\"\n\n\nconst CREATE_ACCOUNT_MEMBERSHIP = gql`\n  mutation CreateAccountMembership($input: CreateAccountMembershipInput!) {\n    createAccountMembership(input: $input) {\n      accountMembership {\n        id\n        account {\n          id\n          firstName\n          lastName\n          email\n        }\n        organizationMembership {\n          id\n          name\n        }\n        financePaymentMethod {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        note     \n      }\n    }\n  }\n`\n\n\nclass AccountMembershipAdd extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Account membership add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const history = this.props.history\n    const match = this.props.match\n    const account_id = match.params.account_id\n    const return_url = \"/relations/accounts/\" + account_id + \"/memberships\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n        <Query query={GET_INPUT_VALUES_QUERY} variables = {{archived: false, accountId: account_id}} >\n          {({ loading, error, data, refetch }) => {\n            // Loading\n            if (loading) return <p>{t('general.loading_with_dots')}</p>\n            // Error\n            if (error) {\n              console.log(error)\n              return <p>{t('general.error_sad_smiley')}</p>\n            }\n            \n            console.log('query data')\n            console.log(data)\n            const inputData = data\n            const account = data.account\n\n            return (\n              <Container>\n               <Page.Header title={account.firstName + \" \" + account.lastName} />\n               <Grid.Row>\n                  <Grid.Col md={9}>\n                  <Card>\n                    <Card.Header>\n                      <Card.Title>{t('relations.account.memberships.title_add')}</Card.Title>\n                    </Card.Header>\n                      <Mutation mutation={CREATE_ACCOUNT_MEMBERSHIP} onCompleted={() => history.push(return_url)}> \n                      {(createMembership, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                organizationMembership: \"\",\n                                financePaymentMethod: \"\",\n                                dateStart: new Date(),\n                                note: \"\",\n                              }}\n                              validationSchema={MEMBERSHIP_SCHEMA}\n                              onSubmit={(values, { setSubmitting }, errors) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n                                  console.log(errors)\n\n                                  \n                                  let dateEnd\n                                  if (values.dateEnd) {\n                                    dateEnd = dateToLocalISO(values.dateEnd)\n                                  } else {\n                                    dateEnd = values.dateEnd\n                                  }\n\n                                  createMembership({ variables: {\n                                    input: {\n                                      account: account_id, \n                                      organizationMembership: values.organizationMembership,\n                                      financePaymentMethod: values.financePaymentMethod,\n                                      dateStart: dateToLocalISO(values.dateStart),\n                                      dateEnd: dateEnd,\n                                      note: values.note,\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_ACCOUNT_MEMBERSHIPS_QUERY, variables: {archived: false, accountId: account_id}}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('relations.account.memberships.toast_add_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n                                <AccountMembershipForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  setFieldValue={setFieldValue}\n                                  setFieldTouched={setFieldTouched}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                >\n                                  {console.log(errors)}\n                                </AccountMembershipForm>\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                    </Card>\n                  </Grid.Col>\n                  <Grid.Col md={3}>\n                    <HasPermissionWrapper permission=\"add\"\n                                          resource=\"accountmembership\">\n                      <Link to={return_url}>\n                        <Button color=\"primary btn-block mb-6\">\n                          <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                        </Button>\n                      </Link>\n                    </HasPermissionWrapper>\n                    <ProfileMenu account_id={account_id} activeLink='memberships'/>\n                  </Grid.Col>\n                </Grid.Row>\n              </Container>\n            )}}\n          </Query>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(AccountMembershipAdd))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_MEMBERSHIPS_QUERY, GET_ACCOUNT_MEMBERSHIP_QUERY } from './queries'\nimport { MEMBERSHIP_SCHEMA } from './yupSchema'\nimport AccountMembershipForm from './AccountMembershipForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport ProfileMenu from \"../ProfileMenu\"\n\n\nconst UPDATE_ACCOUNT_MEMBERSHIP = gql`\n  mutation UpdateAccountMembership($input: UpdateAccountMembershipInput!) {\n    updateAccountMembership(input: $input) {\n      accountMembership {\n        id\n        account {\n          id\n          firstName\n          lastName\n          email\n        }\n        organizationMembership {\n          id\n          name\n        }\n        financePaymentMethod {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        note\n      }\n    }\n  }\n`\n\n\nclass AccountMembershipEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Account membership add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const history = this.props.history\n    const match = this.props.match\n    const id = match.params.id\n    const account_id = match.params.account_id\n    const return_url = \"/relations/accounts/\" + account_id + \"/memberships\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n        <Query query={GET_ACCOUNT_MEMBERSHIP_QUERY} variables = {{archived: false,  accountId: account_id, id: id}} >\n          {({ loading, error, data, refetch }) => {\n            // Loading\n            if (loading) return <p>{t('general.loading_with_dots')}</p>\n            // Error\n            if (error) {\n              console.log(error)\n              return <p>{t('general.error_sad_smiley')}</p>\n            }\n            \n            console.log('query data')\n            console.log(data)\n            const inputData = data\n            const account = data.account\n            const initialdata = data.accountMembership\n\n            let initialPaymentMethod = \"\"\n            if (initialdata.financePaymentMethod) {\n              initialPaymentMethod = initialdata.financePaymentMethod.id\n            }\n\n            return (\n              <Container>\n               <Page.Header title={account.firstName + \" \" + account.lastName} />\n               <Grid.Row>\n                  <Grid.Col md={9}>\n                  <Card>\n                    <Card.Header>\n                      <Card.Title>{t('relations.account.memberships.title_edit')}</Card.Title>\n                    </Card.Header>\n                      <Mutation mutation={UPDATE_ACCOUNT_MEMBERSHIP} onCompleted={() => history.push(return_url)}> \n                      {(updateMembership, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                organizationMembership: initialdata.organizationMembership.id,\n                                financePaymentMethod: initialPaymentMethod,\n                                dateStart: initialdata.dateStart,\n                                dateEnd: initialdata.dateEnd,\n                                note: initialdata.note,\n                                registrationFeePaid: initialdata.registrationFeePaid\n                              }}\n                              validationSchema={MEMBERSHIP_SCHEMA}\n                              onSubmit={(values, { setSubmitting }, errors) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n                                  console.log(errors)\n\n                                  \n                                  let dateEnd\n                                  if (values.dateEnd) {\n                                    dateEnd = dateToLocalISO(values.dateEnd)\n                                  } else {\n                                    dateEnd = values.dateEnd\n                                  }\n\n                                  updateMembership({ variables: {\n                                    input: {\n                                      id: id,\n                                      organizationMembership: values.organizationMembership,\n                                      financePaymentMethod: values.financePaymentMethod,\n                                      dateStart: dateToLocalISO(values.dateStart),\n                                      dateEnd: dateEnd,\n                                      note: values.note,\n                                      registrationFeePaid: values.registrationFeePaid\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_ACCOUNT_MEMBERSHIPS_QUERY, variables: {archived: false, accountId: account_id}}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('relations.account.memberships.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n                                <AccountMembershipForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  setFieldValue={setFieldValue}\n                                  setFieldTouched={setFieldTouched}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                >\n                                  {console.log(errors)}\n                                </AccountMembershipForm>\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                    </Card>\n                  </Grid.Col>\n                  <Grid.Col md={3}>\n                    <HasPermissionWrapper permission=\"change\"\n                                          resource=\"accountmembership\">\n                      <Link to={return_url}>\n                        <Button color=\"primary btn-block mb-6\">\n                          <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                        </Button>\n                      </Link>\n                    </HasPermissionWrapper>\n                    <ProfileMenu account_id={account_id} activeLink='memberships'/>\n                  </Grid.Col>\n                </Grid.Row>\n              </Container>\n            )}}\n          </Query>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(AccountMembershipEdit))\n","import React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n    Button,\n    Card,\n    Grid,\n  } from \"tabler-react\"\n\n\nclass LoadMoreOnBottomScroll extends Component {\n    componentDidMount() {\n      window.addEventListener(\"scroll\", this.handleOnScroll);\n    }\n  \n    componentWillUnmount() {\n      window.removeEventListener(\"scroll\", this.handleOnScroll);\n    }\n\n    handleOnScroll = () => {\n      // http://stackoverflow.com/questions/9439725/javascript-how-to-detect-if-browser-window-is-scrolled-to-bottom\n      var scrollTop =\n        (document.documentElement && document.documentElement.scrollTop) ||\n        document.body.scrollTop;\n      var scrollHeight =\n        (document.documentElement && document.documentElement.scrollHeight) ||\n        document.body.scrollHeight;\n      var clientHeight =\n        document.documentElement.clientHeight || window.innerHeight;\n      var scrolledToBottom = Math.ceil(scrollTop + clientHeight) >= scrollHeight;\n      if (scrolledToBottom) {\n        const pageInfo = this.props.pageInfo\n        if (pageInfo) {\n          if (pageInfo.hasNextPage) {\n            this.props.onLoadMore()\n          }\n        }\n      }\n    }\n\n    render() {\n      const t = this.props.t\n      const onLoadMore = this.props.onLoadMore \n      const pageInfo = this.props.pageInfo\n      const children = this.props.children\n\n\n      return(\n        <div>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <Card>\n                <Card.Body>\n                  {(!pageInfo) ? '':\n                    (pageInfo.hasNextPage) ? \n                      <Button \n                        link\n                        onClick={onLoadMore} \n                        >\n                        {t('general.load_more')}\n                      </Button>\n                    : t('general.loaded_all')\n                  }\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n        </div>\n      )\n    }\n}\n\nLoadMoreOnBottomScroll.defaultProps = {\n  onLoadMore: f=>f\n}\n  \nexport default withTranslation()(LoadMoreOnBottomScroll)\n","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport { GET_ACCOUNT_QUERY } from '../queries'\n\n\nfunction AccountNotesBase({ t, history, match, children, showBack=false }) {\n  const accountId = match.params.account_id\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_QUERY, {\n    variables: { id: accountId }\n  })\n\n  if (loading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (error) {\n    console.log(error)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n\n  const account = data.account\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.firstName + \" \" + account.lastName}>\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              {!(showBack) ?\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"accountnote\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/notes/add`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.notes.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              {(showBack) ?\n                <HasPermissionWrapper permission=\"view\"\n                                      resource=\"accountnote\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/notes/`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\"\n              }\n              <ProfileMenu \n                activeLink='notes'\n                accountId={accountId}\n              /> \n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}    \n        \nexport default withTranslation()(withRouter(AccountNotesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_NOTES_QUERY = gql`\n  query AccountNotes($after: String, $before: String, $account: ID!, $noteType: String!) {\n    accountNotes(first: 15, before: $before, after: $after, account: $account, noteType: $noteType ) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          note\n          injury\n          noteType\n          noteBy {\n            id\n            fullName\n          }\n          createdAt\n        }\n      }\n    }\n  }\n`\n\nexport const GET_ACCOUNT_NOTE_QUERY = gql`\n  query AccountNote($id: ID!) {\n    accountNote(id: $id) {\n      id\n      note\n      injury\n    }\n  }\n`\n\n\nexport const CREATE_ACCOUNT_NOTE = gql`\n  mutation CreateAccountNote($input: CreateAccountNoteInput!) {\n    createAccountNote(input: $input) {\n      accountNote {\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT_NOTE = gql`\n  mutation UpdateAccountNote($input: UpdateAccountNoteInput!) {\n    updateAccountNote(input: $input) {\n      accountNote {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_ACCOUNT_NOTE = gql`\n  mutation DeleteAccountNote($input: DeleteAccountNoteInput!) {\n    deleteAccountNote(input: $input) {\n      ok\n    }\n  }\n`\n","import CSLS from \"../../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables(accountId) {\n  let queryVars = {\n      account: accountId\n  }\n\n  let noteType = localStorage.getItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE)\n\n  queryVars.noteType = noteType  \n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport CSLS from \"../../../../tools/cs_local_storage\"\n\n\nimport {\n  BlogCard,\n  Button,\n  Badge,\n  Card,\n  Grid,\n  Icon,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport LoadMoreOnBottomScroll from \"../../../general/LoadMoreOnBottomScroll\"\nimport AccountNotesBase from \"./AccountNotesBase\"\n\nimport { \n  GET_ACCOUNT_NOTES_QUERY,\n  DELETE_ACCOUNT_NOTE\n} from \"./queries\"\n\nimport { get_list_query_variables } from \"./tools\"\n\n\n\nfunction AccountNotes({ t, history, match }) {\n  // Set some initial value for noteType, if not found\n  if (!localStorage.getItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE)) {\n    localStorage.setItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE, \"BACKOFFICE\") \n  }\n\n  const appSettings = useContext(AppSettingsContext)\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n\n  const accountId = match.params.account_id\n\n  const { loading, error, data, fetchMore, refetch } = useQuery(GET_ACCOUNT_NOTES_QUERY, {\n    variables: get_list_query_variables(accountId)\n  })\n  const [deleteAccountNote] = useMutation(DELETE_ACCOUNT_NOTE)\n\n  if (loading) return (\n    <AccountNotesBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AccountNotesBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountNotesBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AccountNotesBase>\n    )\n  }\n\n  let notes = data.accountNotes\n\n  return (\n    <AccountNotesBase>\n      <Grid.Row>\n        <Grid.Col>\n          <div className=\"float-right mb-4\">\n            <Button.List>\n              <Button color={(localStorage.getItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE) === \"BACKOFFICE\") ? 'primary': 'secondary'}  \n                      size=\"\"\n                      onClick={() => {\n                        localStorage.setItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE, \"BACKOFFICE\")\n                        refetch(get_list_query_variables(accountId))\n                      }\n              }>\n                {t('relations.account.notes.backoffice')}\n              </Button>\n              <Button color={(localStorage.getItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE) === \"TEACHERS\") ? 'primary': 'secondary'} \n                      size=\"\" \n                      className=\"ml-2\" \n                      onClick={() => {\n                        localStorage.setItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE, \"TEACHERS\")\n                        refetch(get_list_query_variables(accountId))\n                      }\n              }>\n                {t('relations.account.notes.teachers')}\n              </Button>\n            </Button.List>\n          </div>\n        </Grid.Col>\n      </Grid.Row>\n      <LoadMoreOnBottomScroll \n        pageInfo={notes.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: notes.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountNotes.edges\n              const pageInfo = fetchMoreResult.accountNotes.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountClasspasses at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    accountNotes: {\n                      __typename: previousResult.accountNotes.__typename,\n                      edges: [ ...previousResult.accountNotes.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        {notes.edges.map(({ node }) => (\n          <Card>\n            <Card.Body>\n              {(node.injury) ? <Badge color=\"danger\" className=\"float-right\">{t(\"general.injury\")}</Badge> : \"\"}\n              <div dangerouslySetInnerHTML={{__html: node.note}} />\n            </Card.Body>\n            <Card.Footer>\n              <Button \n                color=\"danger\"\n                size=\"sm\"\n                className=\"float-right\"\n                outline\n                onClick={() => {\n                  confirm_delete({\n                    t: t,\n                    msgConfirm: t(\"relations.account.notes.delete_confirm_msg\"),\n                    msgDescription: <p><div dangerouslySetInnerHTML={{__html: node.note}} /></p>,\n                    msgSuccess: t('relations.account.notes.deleted'),\n                    deleteFunction: deleteAccountNote,\n                    functionVariables: { \n                      variables: {\n                        input: {\n                          id: node.id\n                        }\n                      }, \n                      refetchQueries: [\n                        {query: GET_ACCOUNT_NOTES_QUERY, variables: get_list_query_variables(accountId) },\n                      ]\n                    }\n                  })\n                }}\n              >\n                <Icon name=\"trash-2\" />\n              </Button>\n              <Link to={`/relations/accounts/${match.params.account_id}/notes/edit/${node.id}`}>\n                <Button\n                  color=\"secondary\"\n                  size=\"sm\"\n                  className=\"float-right mr-4\"\n                  outline\n                >\n                  {t(\"general.edit\")}\n                </Button>\n              </Link>              \n              <small className=\"text-muted float-right mr-4\">{moment(node.createdAt).format(dateTimeFormatMoment)}</small>\n              {node.noteBy.fullName} <br />\n            </Card.Footer>\n          </Card>\n        ))}\n      </LoadMoreOnBottomScroll>\n    </AccountNotesBase>\n  )\n}\n      \n        \nexport default withTranslation()(withRouter(AccountNotes))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from \"react-router-dom\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountNoteForm = ({ t, history, isSubmitting, values, errors, setFieldTouched, setFieldValue, returnUrl }) => (\n  <FoForm>\n    <Card.Body> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.note')}>\n          <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"note\"\n            initialValue={values.note}\n            init={tinymceBasicConf}\n            onBlur={(e) => { \n              setFieldTouched(\"note\", true)\n              setFieldValue(\"note\", e.target.getContent())\n            }}\n          />\n          <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n                <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"injury\" \n                checked={values.injury} />\n                <span className=\"custom-switch-indicator\" ></span>\n                <span className=\"custom-switch-description\">{t('general.injury')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"injury\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n      </Grid.Row>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button\n            type=\"button\" \n            color=\"link\" \n          >\n            {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountNoteForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../../tools/cs_local_storage\"\n\nimport { \n  GET_ACCOUNT_NOTES_QUERY, \n  CREATE_ACCOUNT_NOTE,\n} from './queries'\n// import { ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA } from './yupSchema'\nimport AccountNoteForm from './AccountNoteForm'\n\nimport {\n  Card,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport AccountNotesBase from \"./AccountNotesBase\"\n\nimport { get_list_query_variables } from \"./tools\"\n\n\nfunction AccountNoteAdd({ t, history, match }) {\n  // Set some initial value for noteType, if not found\n  let noteType = localStorage.getItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE)\n  if (!noteType) {\n    localStorage.setItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE, \"BACKOFFICE\") \n  }\n\n  const accountId = match.params.account_id\n  const returnUrl = `/relations/accounts/${accountId}/notes`\n  const cardTitle = t('relations.account.notes.title_add')\n\n  const [addNote] = useMutation(\n    CREATE_ACCOUNT_NOTE\n  )\n\n  return (\n    <AccountNotesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            injury: false,\n            note: \"\"\n          }}\n          // validationSchema={ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA}\n          onSubmit={(values, { setSubmitting }, errors) => {\n              console.log('submit values:')\n              console.log(values)\n              console.log(errors)\n\n              addNote({ variables: {\n                input: {\n                  account: accountId, \n                  noteType: noteType,\n                  injury: values.injury,\n                  note: values.note\n                }\n              }, refetchQueries: [\n                  {query: GET_ACCOUNT_NOTES_QUERY, variables: get_list_query_variables(accountId)}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('relations.account.notes.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <AccountNoteForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              returnUrl={returnUrl}\n            >\n              {console.log(errors)}\n            </AccountNoteForm>\n          )}\n        </Formik>\n      </Card>\n    </AccountNotesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountNoteAdd))\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { \n  GET_ACCOUNT_NOTE_QUERY, \n  GET_ACCOUNT_NOTES_QUERY, \n  UPDATE_ACCOUNT_NOTE,\n} from './queries'\n// import { ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA } from './yupSchema'\nimport AccountNoteForm from './AccountNoteForm'\n\nimport {\n  Card,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport AccountNotesBase from \"./AccountNotesBase\"\n\nimport { get_list_query_variables } from \"./tools\"\n\n\nfunction AccountNoteEdit({ t, history, match }) {\n  // Set some initial value for noteType, if not found\n\n  const accountId = match.params.account_id\n  const noteId = match.params.id\n  const returnUrl = `/relations/accounts/${accountId}/notes`\n  const cardTitle = t('relations.account.notes.title_edit')\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_NOTE_QUERY, {\n    variables: { id: noteId }\n  })\n  const [updateNote] = useMutation(\n    UPDATE_ACCOUNT_NOTE\n  )\n\n  if (loading) return (\n    <AccountNotesBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AccountNotesBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountNotesBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AccountNotesBase>\n    )\n  }\n\n  const note = data.accountNote\n\n  return (\n    <AccountNotesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            injury: note.injury,\n            note: note.note\n          }}\n          // validationSchema={ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA}\n          onSubmit={(values, { setSubmitting }, errors) => {\n              console.log('submit values:')\n              console.log(values)\n              console.log(errors)\n\n              updateNote({ variables: {\n                input: {\n                  id: noteId,\n                  injury: values.injury,\n                  note: values.note\n                }\n              }, refetchQueries: [\n                  {query: GET_ACCOUNT_NOTES_QUERY, variables: get_list_query_variables(accountId)}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('relations.account.notes.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <AccountNoteForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              returnUrl={returnUrl}\n            >\n              {console.log(errors)}\n            </AccountNoteForm>\n          )}\n        </Formik>\n      </Card>\n    </AccountNotesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountNoteEdit))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\n\nfunction AccountOrdersBase({ t, match, history, children, account={} }) {\n  const accountId = match.params.account_id\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.fullName} >\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              <ProfileMenu \n                activeLink='orders' \n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountOrdersBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_ORDERS_QUERY = gql`\n  query FinanceOrders($after: String, $before: String, $status: String, $account: ID!) {\n    financeOrders(first: 15, before: $before, after: $after, status: $status, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          orderNumber\n          account {\n            id\n            fullName\n          }\n          status\n          createdAt\n          total\n          totalDisplay\n          balanceDisplay\n        }\n      }\n    }\n    account(id:$account) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n","import React, { useContext } from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_ACCOUNT_ORDERS_QUERY } from \"./queries\"\nimport { DELETE_FINANCE_ORDER } from \"../../../finance/orders/queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport moment from 'moment'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\"\n\n\nfunction AccountClassDelete({t, match, node, account}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const [deleteOrder, { data }] = useMutation(DELETE_FINANCE_ORDER)\n\n  console.log(\"AccountOrderDelete\")\n  console.log(node)\n  console.log(account)\n  console.log(\"---\")\n\n  return (\n    <button className=\"icon btn btn-link btn-sm pull-right\" \n      title={t('general.delete')} \n      href=\"\"\n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"relations.account.orders.delete_confirm_msg\"),\n          msgDescription: <p>\n            {t('general.order')}# {node.orderNumber}\n          </p>,\n          msgSuccess: t('relations.account.orders.delete_success'),\n          deleteFunction: deleteOrder,\n          functionVariables: { \n            variables: {\n              input: {\n                id: node.id\n              }\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_ORDERS_QUERY, \n                variables: { account: account.id } },\n            ]\n          }\n        })\n    }}>\n      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountClassDelete))\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceOrderStatus from \"../../../finance/orders/FinanceOrderStatus\"\n\nimport {\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport BadgeBookingStatus from \"../../../ui/BadgeBookingStatus\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport AccountOrdersBase from \"./AccountOrdersBase\"\nimport AccountOrderDelete from \"./AccountOrderDelete\"\n\nimport { GET_ACCOUNT_ORDERS_QUERY } from \"./queries\"\n\n\nfunction AccountOrders({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  // const timeFormat = appSettings.timeFormatMoment\n  const cardTitle = t('relations.account.orders.title')\n  const account_id = match.params.account_id\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_ORDERS_QUERY, {\n    variables: {'account': account_id},\n  })\n\n  // Loading\n  if (loading) return (\n    <AccountOrdersBase>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>\n        </Card.Body>\n      </Card>\n    </AccountOrdersBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountOrdersBase>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('general.error_sad_smiley')}</p>\n          </Card.Body>\n        </Card>\n      </AccountOrdersBase>\n    )\n  }\n\n  console.log(\"AccountClasses data:\")\n  console.log(data)\n  const account = data.account\n  const financeOrders = data.financeOrders\n  \n  // Empty list\n  if (!financeOrders.edges.length) {\n    return (\n      <AccountOrdersBase account={account}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('relations.account.orders.empty_list')}</p>\n          </Card.Body>\n        </Card>\n      </AccountOrdersBase>\n    )\n  }\n\n  // Return populated list\n  return (\n    <AccountOrdersBase account={account}>\n      <ContentCard \n        cardTitle={t('relations.account.orders.title')}\n        pageInfo={financeOrders.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: financeOrders.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.financeOrders.edges\n              const pageInfo = fetchMoreResult.financeOrders.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new financeOrders at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    financeOrders: {\n                      __typename: previousResult.financeOrders.__typename,\n                      edges: [ ...previousResult.financeOrders.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.order_number')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.relation')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.date')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {financeOrders.edges.map(({ node }) => (        \n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    <FinanceOrderStatus status={node.status} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    # {node.orderNumber}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.account.fullName}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {moment(node.createdAt).format('LL')}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.totalDisplay}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <Link to={\"/finance/orders/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <AccountOrderDelete node={node} account={account} />\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </AccountOrdersBase>\n  )\n}\n      \n        \nexport default withTranslation()(withRouter(AccountOrders))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY = gql`\n  query AccountScheduleEventTickets($after: String, $before: String, $account: ID!) {\n    accountScheduleEventTickets(first: 15, before: $before, after: $after, account: $account) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          cancelled\n          infoMailSent\n          scheduleEventTicket {\n            id\n            name\n            scheduleEvent {\n              id\n              name\n              dateStart\n              organizationLocation {\n                name\n              }\n            }\n          }\n          invoiceItems(first:1) {\n            edges {\n              node {\n                financeInvoice {\n                  id\n                  invoiceNumber\n                  status\n                }\n              }\n            }\n          }\n        }\n        \n      }\n    }\n  }\n`\n\n// export const GET_ACCOUNT_CLASSPASS_QUERY = gql`\n//   query AccountClasspass($id: ID!, $accountId: ID!, $after: String, $before: String, $archived: Boolean!) {\n//     accountClasspass(id:$id) {\n//       id\n//       organizationClasspass {\n//         id\n//         name\n//       }\n//       dateStart\n//       dateEnd\n//       note\n//       createdAt\n//     }\n//     organizationClasspasses(first: 100, before: $before, after: $after, archived: $archived) {\n//       pageInfo {\n//         startCursor\n//         endCursor\n//         hasNextPage\n//         hasPreviousPage\n//       }\n//       edges {\n//         node {\n//           id\n//           archived\n//           name\n//         }\n//       }\n//     }\n//     account(id:$accountId) {\n//       id\n//       firstName\n//       lastName\n//       email\n//       phone\n//       mobile\n//       isActive\n//     }\n//   }\n// `\n\n// export const GET_INPUT_VALUES_QUERY = gql`\n//   query ClasspassInputValues($after: String, $before: String, $archived: Boolean!, $accountId: ID!) {\n//     organizationClasspasses(first: 100, before: $before, after: $after, archived: $archived) {\n//       pageInfo {\n//         startCursor\n//         endCursor\n//         hasNextPage\n//         hasPreviousPage\n//       }\n//       edges {\n//         node {\n//           id\n//           archived\n//           name\n//         }\n//       }\n//     }\n//     account(id:$accountId) {\n//       id\n//       firstName\n//       lastName\n//       email\n//       phone\n//       mobile\n//       isActive\n//     }\n//   }\n// `","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT = gql`\n  query Account($accountId: ID!){\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport { GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY } from \"./queries\"\nimport { GET_ACCOUNT } from \"../../../../queries/accounts/get_account\"\nimport ScheduleEventTickets from './AccountScheduleEventTickets'\n\n// const CANCEL_SCHEDULE_EVENT_TICKET = gql`\n//   mutation DeleteAccountClasspass($input: DeleteAccountClasspassInput!) {\n//     deleteAccountClasspass(input: $input) {\n//       ok\n//     }\n//   }\n// `\n\n\nfunction AccountScheduleEventTicketsBase({t, history, match, children}) {\n  const accountId = match.params.account_id\n  const { loading, error, data } = useQuery(GET_ACCOUNT, { variables: {\n    accountId: accountId\n  }})\n\n  if (loading) return (\n    <p>\n      {t(\"general.loading_with_dots\")}\n    </p>\n  )\n  if (error) return (\n    <p>\n      {t(\"relations.account.error_loading\")}\n    </p>\n  )\n\n  console.log(data)\n  const account = data.account\n  console.log(account)\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.firstName + \" \" + account.lastName} >\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              {/* <HasPermissionWrapper permission=\"add\"\n                                    resource=\"accountclasspass\">\n                <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/add\"}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.classpasses.add')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper> */}\n              <ProfileMenu \n                activeLink='tickets' \n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountScheduleEventTicketsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY = gql`\nquery AccountScheduleEventTickets($before:String, $after:String, $scheduleEventTicket:ID!) {\n  accountScheduleEventTickets(first: 100, before: $before, after: $after, scheduleEventTicket:$scheduleEventTicket) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        account {\n          id\n          fullName\n        }\n        cancelled\n        paymentConfirmation\n        infoMailSent\n      }\n    }\n  }\n}\n`\n\nexport const GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM_QUERY = gql`\nquery ScheduleEventTicket($before:String, $after:String, $id:ID!) {\n  scheduleEventTicket(id: $id) {\n    id\n    displayPublic\n    name\n    description\n    price\n    financeTaxRate {\n      id\n      name\n    }\n    financeGlaccount {\n      id\n      name\n    }\n    financeCostcenter {\n      id\n      name\n    }\n  }\n  financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n  financeGlaccounts(first: 100, before: $before, after: $after, archived: false) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n  financeCostcenters(first: 100, before: $before, after: $after, archived: false) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n}\n`\n\nexport const UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET = gql`\n  mutation UpdateAccountScheduleEventTicket($input:UpdateAccountScheduleEventTicketInput!) {\n    updateAccountScheduleEventTicket(input: $input) {\n      accountScheduleEventTicket {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_SCHEDULE_EVENT_TICKET = gql`\n  mutation DeleteScheduleEventTicket($input: DeleteScheduleEventTicketInput!) {\n    deleteScheduleEventTicket(input: $input) {\n      ok\n    }\n  }\n`\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport moment from 'moment'\n\nimport {\n  Badge,\n  Button,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport FinanceInvoicesStatus from \"../../../ui/FinanceInvoiceStatus\"\n\nimport AccountScheduleEventTicketsBase from \"./AccountScheduleEventTicketsBase\"\n\n\nimport { UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET } from \"../../../schedule/events/tickets/customers/queries\"\nimport { GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY } from \"./queries\"\n\n\n\nfunction AccountScheduleEventTickets({t, history, match}) {\n  // const title = t(\"relations.account.event_tickets.title\")\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const accountId = match.params.account_id\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, { variables: {\n    account: accountId\n  }})\n  const [updateAccountScheduleEventTicket] = useMutation(UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET)\n\n\n  if (loading) return (\n    <AccountScheduleEventTicketsBase>\n      {t(\"general.loading_with_dots\")}\n    </AccountScheduleEventTicketsBase>\n  )\n  if (error) return (\n    <AccountScheduleEventTicketsBase>\n      {t(\"shop.classpasses.error_loading\")}\n    </AccountScheduleEventTicketsBase>\n  )\n\n  console.log(data)\n  const accountScheduleEventTickets = data.accountScheduleEventTickets\n  console.log(accountScheduleEventTickets)\n\n\n  return (\n    <AccountScheduleEventTicketsBase>\n      <ContentCard \n        cardTitle={t('relations.account.event_tickets.title')}\n        pageInfo={accountScheduleEventTickets.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: accountScheduleEventTickets.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountScheduleEventTickets.edges\n              const pageInfo = fetchMoreResult.accountScheduleEventTickets.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountScheduleEventTickets at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    accountScheduleEventTickets: {\n                      __typename: previousResult.accountScheduleEventTickets.__typename,\n                      edges: [ ...previousResult.accountScheduleEventTickets.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.ticket')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.invoice')}</Table.ColHeader>\n              <Table.ColHeader>{t('schedule.events.tickets.info_mail_sent')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader> \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {accountScheduleEventTickets.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col>\n                    {node.scheduleEventTicket.scheduleEvent.name} <br />\n                    <Badge>{node.scheduleEventTicket.name}</Badge> {\" \"}\n                    {(node.cancelled) ? <Badge color=\"warning\">{t(\"general.cancelled\")}</Badge> : \"\"}\n                  </Table.Col>\n                  <Table.Col>\n                    {moment(node.scheduleEventTicket.scheduleEvent.dateStart).format(dateFormat)}\n                  </Table.Col>\n                  <Table.Col>\n                    {(node.invoiceItems.edges.length) ? \n                      <span>\n                        <Link to={`/finance/invoices/edit/${node.invoiceItems.edges[0].node.financeInvoice.id}`}>\n                          {node.invoiceItems.edges[0].node.financeInvoice.invoiceNumber}\n                        </Link> <br />\n                        <FinanceInvoicesStatus status={node.invoiceItems.edges[0].node.financeInvoice.status} />\n                        \n                      </span>\n                      : \"\"\n                    }\n                    \n                  </Table.Col>\n                  {/* <Table.Col key={v4()}>\n                    {node.dateStart}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dateEnd}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.classesRemainingDisplay}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col> */}\n                  <Table.Col>\n                    <BadgeBoolean value={node.infoMailSent} />\n                  </Table.Col>\n                  <Table.Col>\n                    {(node.cancelled) ?\n                      <Button \n                        className=\"pull-right\"\n                        color=\"warning\"\n                        onClick={() =>\n                          updateAccountScheduleEventTicket({ variables: {\n                            input: {\n                              id: node.id,\n                              cancelled: false\n                            }\n                          }, refetchQueries: [\n                            { \n                              query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, \n                              variables: { account: accountId }\n                            },\n                          ]})\n                          .then(({ data }) => {\n                              console.log('got data', data);\n                              toast.success((t('schedule.events.tickets.customers.uncancelled')), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error)\n                            }\n                          )\n                        }\n                      >\n                        {t(\"general.uncancel\")}\n                      </Button>\n                    :\n                      <Button \n                        className=\"pull-right\"\n                        color=\"warning\"\n                        onClick={() =>\n                          updateAccountScheduleEventTicket({ variables: {\n                            input: {\n                              id: node.id,\n                              cancelled: true\n                            }\n                          }, refetchQueries: [\n                              { \n                                query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, \n                                variables: { account: accountId }\n                              },\n                          ]})\n                          .then(({ data }) => {\n                              console.log('got data', data);\n                              toast.success((t('schedule.events.tickets.customers.cancelled')), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error)\n                            })\n                          }\n                        >\n                          {t(\"general.cancel\")}\n                        </Button>\n                    }\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </AccountScheduleEventTicketsBase>\n  )\n}\n\n\n\n// const AccountClasspasses = ({ t, history, match, archived=false }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Query query={GET_ACCOUNT_CLASSPASSES_QUERY} variables={{ archived: archived, accountId: match.params.account_id }} \n//         fetchPolicy=\"network-only\"> \n//         {({ loading, error, data, refetch, fetchMore }) => {\n//           // Loading\n//           if (loading) return <p>{t('general.loading_with_dots')}</p>\n//           // Error\n//           if (error) {\n//             console.log(error)\n//             return <p>{t('general.error_sad_smiley')}</p>\n//           }\n\n//           const account = data.account\n//           const accountClasspasses = data.accountClasspasses\n\n//           return (\n//             <Container>\n//               <Page.Header title={account.firstName + \" \" + account.lastName} >\n//                 <RelationsAccountsBack />\n//               </Page.Header>\n//               <Grid.Row>\n//                 <Grid.Col md={9}>\n//                   <ContentCard \n//                     cardTitle={t('relations.account.classpasses.title')}\n//                     pageInfo={accountClasspasses.pageInfo}\n//                     onLoadMore={() => {\n//                       fetchMore({\n//                         variables: {\n//                           after: accountClasspasses.pageInfo.endCursor\n//                         },\n//                         updateQuery: (previousResult, { fetchMoreResult }) => {\n//                           const newEdges = fetchMoreResult.accountClasspasses.edges\n//                           const pageInfo = fetchMoreResult.accountClasspasses.pageInfo\n\n//                           return newEdges.length\n//                             ? {\n//                                 // Put the new accountClasspasses at the end of the list and update `pageInfo`\n//                                 // so we have the new `endCursor` and `hasNextPage` values\n//                                 accountClasspasses: {\n//                                   __typename: previousResult.accountClasspasses.__typename,\n//                                   edges: [ ...previousResult.accountClasspasses.edges, ...newEdges ],\n//                                   pageInfo\n//                                 }\n//                               }\n//                             : previousResult\n//                         }\n//                       })\n//                     }} \n//                   >\n//                     <Table>\n//                       <Table.Header>\n//                         <Table.Row key={v4()}>\n//                           <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                           <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n//                           <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n//                           <Table.ColHeader>{t('general.classes_remaining')}</Table.ColHeader>\n//                           <Table.ColHeader></Table.ColHeader> \n//                         </Table.Row>\n//                       </Table.Header>\n//                       <Table.Body>\n//                           {accountClasspasses.edges.map(({ node }) => (\n//                             <Table.Row key={v4()}>\n//                               <Table.Col key={v4()}>\n//                                 {node.organizationClasspass.name}\n//                               </Table.Col>\n//                               <Table.Col key={v4()}>\n//                                 {node.dateStart}\n//                               </Table.Col>\n//                               <Table.Col key={v4()}>\n//                                 {node.dateEnd}\n//                               </Table.Col>\n//                               <Table.Col key={v4()}>\n//                                 {node.classesRemainingDisplay}\n//                               </Table.Col>\n//                               <Table.Col className=\"text-right\" key={v4()}>\n//                                 <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/edit/\" + node.id}>\n//                                   <Button className='btn-sm' \n//                                           color=\"secondary\">\n//                                     {t('general.edit')}\n//                                   </Button>\n//                                 </Link>\n//                               </Table.Col>\n//                               <Mutation mutation={DELETE_ACCOUNT_CLASSPASS} key={v4()}>\n//                                 {(deleteAccountClasspass, { data }) => (\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     <button className=\"icon btn btn-link btn-sm\" \n//                                       title={t('general.delete')} \n//                                       href=\"\"\n//                                       onClick={() => {\n//                                         confirm_delete({\n//                                           t: t,\n//                                           msgConfirm: t(\"relations.account.classpasses.delete_confirm_msg\"),\n//                                           msgDescription: <p>{node.organizationClasspass.name} {node.dateStart}</p>,\n//                                           msgSuccess: t('relations.account.classpasses.deleted'),\n//                                           deleteFunction: deleteAccountClasspass,\n//                                           functionVariables: { variables: {\n//                                             input: {\n//                                               id: node.id\n//                                             }\n//                                           }, refetchQueries: [\n//                                             {query: GET_ACCOUNT_CLASSPASSES_QUERY, variables: { archived: archived, accountId: match.params.account_id }} \n//                                           ]}\n//                                         })\n//                                     }}>\n//                                       <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n//                                     </button>\n//                                   </Table.Col>\n//                                 )}\n//                               </Mutation>\n//                             </Table.Row>\n//                           ))}\n//                       </Table.Body>\n//                     </Table>\n//                   </ContentCard>\n//                 </Grid.Col>\n//                 <Grid.Col md={3}>\n//                   <ProfileCardSmall user={account}/>\n//                   <HasPermissionWrapper permission=\"add\"\n//                                         resource=\"accountclasspass\">\n//                     <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/add\"}>\n//                       <Button color=\"primary btn-block mb-6\">\n//                               {/* //  onClick={() => history.push(\"/organization/classpasses/add\")}> */}\n//                         <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.classpasses.add')}\n//                       </Button>\n//                     </Link>\n//                   </HasPermissionWrapper>\n//                   <ProfileMenu \n//                     activeLink='classpasses' \n//                     account_id={match.params.account_id}\n//                   />\n//                 </Grid.Col>\n//               </Grid.Row>\n//             </Container>\n//           )\n//         }}\n//       </Query>\n//     </div>\n//   </SiteWrapper>\n// )\n      \n        \nexport default withTranslation()(withRouter(AccountScheduleEventTickets))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SUBSCRIPTIONS_QUERY = gql`\n  query AccountSubscriptions($after: String, $before: String, $accountId: ID!) {\n    accountSubscriptions(first: 15, before: $before, after: $after, account: $accountId) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationSubscription {\n            id\n            name\n          }\n          financePaymentMethod {\n            id\n            name\n          }\n          dateStart\n          dateEnd\n          creditTotal\n          registrationFeePaid\n          createdAt\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const GET_ACCOUNT_SUBSCRIPTION_QUERY = gql`\n  query AccountSubscription($id: ID!, $accountId: ID!, $after: String, $before: String) {\n    accountSubscription(id:$id) {\n      id\n      organizationSubscription {\n        id\n        name\n      }\n      financePaymentMethod {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      note\n      creditTotal\n      registrationFeePaid\n      createdAt\n    }\n    organizationSubscriptions(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query SubscriptionInputValues($after: String, $before: String, $archived: Boolean!, $accountId: ID!) {\n    organizationSubscriptions(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\n\nexport const GET_ACCOUNT_QUERY = gql`\n  query Account($accountId: ID!) {\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const CREATE_ACCOUNT_SUBSCRIPTION = gql`\n  mutation CreateAccountSubscription($input: CreateAccountSubscriptionInput!) {\n    createAccountSubscription(input: $input) {\n      accountSubscription {\n        id\n        account {\n          id\n          firstName\n          lastName\n          email\n        }\n        organizationSubscription {\n          id\n          name\n        }\n        financePaymentMethod {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        note\n        registrationFeePaid        \n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT_SUBSCRIPTION = gql`\n  mutation UpdateAccountSubscription($input: UpdateAccountSubscriptionInput!) {\n    updateAccountSubscription(input: $input) {\n      accountSubscription {\n        id\n        account {\n          id\n          firstName\n          lastName\n          email\n        }\n        organizationSubscription {\n          id\n          name\n        }\n        financePaymentMethod {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        note\n        registrationFeePaid        \n      }\n    }\n  }\n`\n\nexport const DELETE_ACCOUNT_SUBSCRIPTION = gql`\n  mutation DeleteAccountSubscription($input: DeleteAccountSubscriptionInput!) {\n    deleteAccountSubscription(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Icon,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase'\n\nimport { GET_ACCOUNT_SUBSCRIPTIONS_QUERY, DELETE_ACCOUNT_SUBSCRIPTION } from \"./queries\"\n\n\nfunction AccountSubscriptions({t, match}) {\n  const accountId = match.params.account_id\n  const cardTitle = t('relations.account.subscriptions.title')\n  const activeLink = \"subscriptions\"\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SUBSCRIPTIONS_QUERY, {\n    variables: {accountId: accountId}\n  })\n  const [deleteAccountSubscription] = useMutation(DELETE_ACCOUNT_SUBSCRIPTION)\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return(\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const account = data.account\n  const accountSubscriptions = data.accountSubscriptions\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"add\"\n    resource=\"accountsubscription\">\n      <Link to={\"/relations/accounts/\" + match.params.account_id + \"/subscriptions/add\"}>\n      <Button color=\"primary btn-block mb-6\">\n      {/* //  onClick={() => history.push(\"/organization/subscriptions/add\")}> */}\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.subscriptions.add')}\n      </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  return (\n    <RelationsAccountProfileBase\n      activeLink={activeLink}\n      user={account}\n      sidebarButton={sidebarButton}\n    >\n      <ContentCard \n        cardTitle={t('relations.account.subscriptions.title')}\n        pageInfo={accountSubscriptions.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: accountSubscriptions.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountSubscriptions.edges\n              const pageInfo = fetchMoreResult.accountSubscriptions.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountSubscriptions at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    accountSubscriptions: {\n                      __typename: previousResult.accountSubscriptions.__typename,\n                      edges: [ ...previousResult.accountSubscriptions.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.payment_method')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.credits')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader> \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {accountSubscriptions.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.organizationSubscription.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dateStart}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dateEnd}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.financePaymentMethod) ? node.financePaymentMethod.name : \"\"}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.creditTotal}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={\"/relations/accounts/\" + match.params.account_id + \"/subscriptions/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"relations.account.subscriptions.delete_confirm_msg\"),\n                          msgDescription: <p>{node.organizationSubscription.name} {node.dateStart}</p>,\n                          msgSuccess: t('relations.account.subscriptions.deleted'),\n                          deleteFunction: deleteAccountSubscription,\n                          functionVariables: { variables: {\n                            input: {\n                              id: node.id\n                            }\n                          }, refetchQueries: [\n                            {query: GET_ACCOUNT_SUBSCRIPTIONS_QUERY, variables: { accountId: accountId }} \n                          ]}\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </RelationsAccountProfileBase>\n  )\n}\n\n        \nexport default withTranslation()(withRouter(AccountSubscriptions))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const SUBSCRIPTION_SCHEMA = Yup.object().shape({\n  organizationSubscription: Yup.string()\n    .required(t('yup.field_required')),\n  financePaymentMethod: Yup.string(),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .nullable(),\n  registrationFeePaid: Yup.boolean(),\n  note: Yup.string(),\n})\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountSubscriptionForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, return_url }) => (\n  <FoForm>\n    <Card.Body> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.subscription')}>\n            <Field component=\"select\" \n                  name=\"organizationSubscription\" \n                  className={(errors.organizationSubscription) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n              {inputData.organizationSubscriptions.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"organizationSubscription\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.payment_method')}>\n            <Field component=\"select\" \n                  name=\"financePaymentMethod\" \n                  className={(errors.financePaymentMethod) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}></option>\n              {inputData.financePaymentMethods.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"financePaymentMethod\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row> \n      <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={(values.frequencyType == \"SPECIFIC\") ? t('general.date') : t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateEnd\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n            <Grid.Col>\n              <Form.Group label={t('general.date_end')}>\n                <CSDatePicker \n                  selected={values.dateEnd}\n                  onChange={(date) => {\n                    setFieldValue(\"dateEnd\", date)\n                    setFieldTouched(\"dateEnd\", true)\n                  }}\n                  onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                  placeholderText={t('schedule.classes.placeholder_enddate')}\n                />\n                <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          }\n        </Grid.Row>\n      <Form.Group label={t('general.note')}>\n        <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"note\"\n            initialValue={values.note}\n            init={tinymceBasicConf}\n            onBlur={(e) => {\n              setFieldValue(\"note\", e.target.getContent())\n              setFieldTouched(\"note\", true, true)\n            }}\n          />\n        <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label className=\"custom-switch\">\n            <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"registrationFeePaid\" \n              checked={values.registrationFeePaid} />\n            <span className=\"custom-switch-indicator\" ></span>\n            <span className=\"custom-switch-description\">{t('relations.account.subscriptions.registration_fee_paid')}</span>\n          </Form.Label>\n        <ErrorMessage name=\"registrationFeePaid\" component=\"div\" />   \n      </Form.Group> \n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Button\n          type=\"button\" \n          color=\"link\" \n          onClick={() => history.push(return_url)}\n        >\n            {t('general.cancel')}\n        </Button>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionForm))","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTIONS_QUERY, GET_INPUT_VALUES_QUERY, CREATE_ACCOUNT_SUBSCRIPTION } from './queries'\nimport { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport AccountSubscriptionForm from './AccountSubscriptionForm'\n\nimport {\n  Icon,\n  Button,\n  Card,\n} from \"tabler-react\";\nimport { dateToLocalISO } from '../../../../tools/date_tools'\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase'\n\n\nfunction AccountSubscriptionAdd({t, history, match}) {\n  const accountId = match.params.account_id\n  const activeLink = \"subscriptions\"\n  const cardTitle = t('relations.account.subscriptions.title_add')\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const {loading, error, data} = useQuery(GET_INPUT_VALUES_QUERY, {\n    variables: { archived: false, accountId: accountId }\n  })\n  const [createAccountSubscription] = useMutation(CREATE_ACCOUNT_SUBSCRIPTION)\n  const sidebarButton = <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const inputData = data\n  const account = data.account\n\n  return (\n    <RelationsAccountProfileBase\n      activeLink={activeLink}\n      user={account}\n      sidebarButton={sidebarButton} \n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n          <Formik\n            initialValues={{ \n              organizationSubscription: \"\",\n              financePaymentMethod: \"\",\n              dateStart: new Date(),\n              note: \"\",\n              registrationFeePaid: false\n            }}\n            validationSchema={SUBSCRIPTION_SCHEMA}\n            onSubmit={(values, { setSubmitting }, errors) => {\n                console.log('submit values:')\n                console.log(values)\n                console.log(errors)\n\n                \n                let dateEnd\n                if (values.dateEnd) {\n                  dateEnd = dateToLocalISO(values.dateEnd)\n                } else {\n                  dateEnd = values.dateEnd\n                }\n\n                createAccountSubscription({ variables: {\n                  input: {\n                    account: accountId, \n                    organizationSubscription: values.organizationSubscription,\n                    financePaymentMethod: values.financePaymentMethod,\n                    dateStart: dateToLocalISO(values.dateStart),\n                    dateEnd: dateEnd,\n                    note: values.note,\n                    registrationFeePaid: values.registrationFeePaid\n                  }\n                }, refetchQueries: [\n                    {query: GET_ACCOUNT_SUBSCRIPTIONS_QUERY, variables: {accountId: accountId}}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    const subscriptionId = data.createAccountSubscription.accountSubscription.id\n                    history.push(`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}`)\n                    toast.success((t('relations.account.subscriptions.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n              <AccountSubscriptionForm\n                inputData={inputData}\n                isSubmitting={isSubmitting}\n                setFieldValue={setFieldValue}\n                setFieldTouched={setFieldTouched}\n                errors={errors}\n                values={values}\n                returnUrl={returnUrl}\n              >\n                {console.log(errors)}\n              </AccountSubscriptionForm>\n            )}\n          </Formik>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n}\n\n\n// class AccountSubscriptionAdd extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Account subscription add props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const history = this.props.history\n//     const match = this.props.match\n//     const accountId = match.params.accountId\n//     const returnUrl = \"/relations/accounts/\" + accountId + \"/subscriptions\"\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//         <Query query={GET_INPUT_VALUES_QUERY} variables = {{archived: false, accountId: accountId}} >\n//           {({ loading, error, data, refetch }) => {\n//             // Loading\n//             if (loading) return <p>{t('general.loading_with_dots')}</p>\n//             // Error\n//             if (error) {\n//               console.log(error)\n//               return <p>{t('general.error_sad_smiley')}</p>\n//             }\n            \n//             console.log('query data')\n//             console.log(data)\n//             const inputData = data\n//             const account = data.account\n\n//             return (\n//               <Container>\n//                <Page.Header title={account.firstName + \" \" + account.lastName} />\n//                <Grid.Row>\n//                   <Grid.Col md={9}>\n//                   <Card>\n//                     <Card.Header>\n//                       <Card.Title>{t('relations.account.subscriptions.title_add')}</Card.Title>\n//                     </Card.Header>\n//                       <Mutation mutation={CREATE_ACCOUNT_SUBSCRIPTION} onCompleted={() => history.push(returnUrl)}> \n//                       {(createSubscription, { data }) => (\n//                           <Formik\n//                               initialValues={{ \n//                                 organizationSubscription: \"\",\n//                                 financePaymentMethod: \"\",\n//                                 dateStart: new Date(),\n//                                 note: \"\",\n//                                 registrationFeePaid: false\n//                               }}\n//                               validationSchema={SUBSCRIPTION_SCHEMA}\n//                               onSubmit={(values, { setSubmitting }, errors) => {\n//                                   console.log('submit values:')\n//                                   console.log(values)\n//                                   console.log(errors)\n\n                                  \n//                                   let dateEnd\n//                                   if (values.dateEnd) {\n//                                     dateEnd = dateToLocalISO(values.dateEnd)\n//                                   } else {\n//                                     dateEnd = values.dateEnd\n//                                   }\n\n//                                   createSubscription({ variables: {\n//                                     input: {\n//                                       account: accountId, \n//                                       organizationSubscription: values.organizationSubscription,\n//                                       financePaymentMethod: values.financePaymentMethod,\n//                                       dateStart: dateToLocalISO(values.dateStart),\n//                                       dateEnd: dateEnd,\n//                                       note: values.note,\n//                                       registrationFeePaid: values.registrationFeePaid\n//                                     }\n//                                   }, refetchQueries: [\n//                                       {query: GET_ACCOUNT_SUBSCRIPTIONS_QUERY, variables: {accountId: accountId}}\n//                                   ]})\n//                                   .then(({ data }) => {\n//                                       console.log('got data', data)\n//                                       toast.success((t('relations.account.subscriptions.toast_add_success')), {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                     }).catch((error) => {\n//                                       toast.error((t('general.toast_server_error')) +  error, {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                       console.log('there was an error sending the query', error)\n//                                       setSubmitting(false)\n//                                     })\n//                               }}\n//                               >\n//                               {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n//                                 <AccountSubscriptionForm\n//                                   inputData={inputData}\n//                                   isSubmitting={isSubmitting}\n//                                   setFieldValue={setFieldValue}\n//                                   setFieldTouched={setFieldTouched}\n//                                   errors={errors}\n//                                   values={values}\n//                                   returnUrl={returnUrl}\n//                                 >\n//                                   {console.log(errors)}\n//                                 </AccountSubscriptionForm>\n//                               )}\n//                           </Formik>\n//                       )}\n//                       </Mutation>\n//                     </Card>\n//                   </Grid.Col>\n//                   <Grid.Col md={3}>\n//                     <HasPermissionWrapper permission=\"add\"\n//                                           resource=\"accountsubscription\">\n//                       <Link to={returnUrl}>\n//                         <Button color=\"primary btn-block mb-6\">\n//                           <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n//                         </Button>\n//                       </Link>\n//                     </HasPermissionWrapper>\n//                     <ProfileMenu \n//                       activeLink='subscriptions'\n//                       accountId={match.params.accountId}\n//                     />\n//                   </Grid.Col>\n//                 </Grid.Row>\n//               </Container>\n//             )}}\n//           </Query>\n//         </div>\n//     </SiteWrapper>\n//     )}\n//   }\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionAdd))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\n// position: top or bottom\n// tabs: [[name, title, link], ...]\n// active: active tab name\n\nfunction CardTabs({ t, position=\"top\", tabs, active}) {\n  let class_tabs_position = \"card-tabs-top\"\n  switch(position) {\n    case \"top\":\n      break\n    case \"bottom\":\n      class_tabs_position = \"card-tabs-top\"\n      break\n    default:\n      break\n  }   \n\n  return (\n    <div className={`card-tabs ${class_tabs_position}`}>\n      {\n        tabs.map(({name, title, link}) => (\n          <Link key={v4()} to={link} className={`card-tabs-item ${(name === active) ? \"active\": \"\"}`}>\n            <h3 className=\"card-title\"> {title} </h3>\n          </Link>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default withTranslation()(CardTabs)\n\n\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport CardTabs from \"../../../../ui/CardTabs\"\n\nfunction AccountSubscriptionEditTabs({ t, active, account_id, subscription_id}) {\n\n  return (\n    <CardTabs \n      position=\"top\"\n      tabs={[\n          {\n            name: \"general\", \n            title: t(\"relations.account.subscriptions.menu.general\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}`\n          },\n          {\n            name: \"pauses\", \n            title: t(\"relations.account.subscriptions.menu.pauses\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}/pauses`\n          },\n          {\n            name: \"blocks\", \n            title: t(\"relations.account.subscriptions.menu.blocks\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}/blocks`\n          },\n          {\n            name: \"alt_prices\", \n            title: t(\"relations.account.subscriptions.menu.alt_prices\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}/alt_prices`\n          },\n          {\n            name: \"invoices\", \n            title: t(\"relations.account.subscriptions.menu.invoices\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}/invoices`\n          },\n          {\n            name: \"credits\", \n            title: t(\"relations.account.subscriptions.menu.credits\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}/credits`\n          },\n      ]}\n      active={active}\n    />\n  )\n}\n\nexport default withTranslation()(AccountSubscriptionEditTabs)\n\n\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditTabs from \"./AccountSubscriptionEditTabs\"\n\nimport ProfileCardSmall from \"../../../../ui/ProfileCardSmall\"\nimport ProfileMenu from \"../../ProfileMenu\"\nimport moment from 'moment'\n\n\nfunction AccountSubscriptionEditBaseBase({t, history, match, children, account=null, subscription=null, active_tab}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  \n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = \"/relations/accounts/\" + accountId + \"/subscriptions\"\n  const cardTitle = (subscription) ? \n    <span className=\"text-muted\">\n      - {subscription.organizationSubscription.name + \" \" + moment(subscription.dateStart).format(dateFormat)} - {subscription.creditTotal} {t(\"general.credits\")}\n    </span> : \"\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={(account) ? account.firstName + \" \" + account.lastName : \"\"} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('relations.account.subscriptions.title_edit')} {cardTitle}</Card.Title>\n                </Card.Header>\n                <AccountSubscriptionEditTabs \n                  account_id={accountId}\n                  subscription_id={subscriptionId}\n                  active={active_tab}\n                />\n                {children}\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              <HasPermissionWrapper permission=\"change\"\n                                    resource=\"accountsubscription\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              <ProfileMenu \n                activeLink='subscriptions'\n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBaseBase))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_QUERY } from '../queries'\nimport AccountSubscriptionForm from '../AccountSubscriptionForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\nimport AccountSubscriptionEditTabs from \"./AccountSubscriptionEditTabs\"\nimport AccountSubscriptionEditBaseBase from \"./AccountSubscriptionEditBaseBase\"\n\nimport ProfileMenu from \"../../ProfileMenu\"\n\n\nfunction AccountSubscriptionEditBase({t, history, match, children, active_tab}) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const { loading, error, data } = useQuery(GET_ACCOUNT_SUBSCRIPTION_QUERY, {\n    variables: {\n      accountId: accountId,\n      id: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditBaseBase active_tab={active_tab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditBaseBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditBaseBase active_tab={active_tab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditBaseBase>\n  )\n\n  console.log(data)\n  const account = data.account\n  const subscription = data.accountSubscription\n\n  return (\n    <AccountSubscriptionEditBaseBase active_tab={active_tab} account={account} subscription={subscription}>\n      {children}\n    </AccountSubscriptionEditBaseBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBase))\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTIONS_QUERY, GET_ACCOUNT_SUBSCRIPTION_QUERY, UPDATE_ACCOUNT_SUBSCRIPTION } from '../queries'\nimport { SUBSCRIPTION_SCHEMA } from '../yupSchema'\nimport AccountSubscriptionForm from '../AccountSubscriptionForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\nimport AccountSubscriptionEditBase from \"./AccountSubscriptionEditBase\"\n\nimport ProfileMenu from \"../../ProfileMenu\"\n\n\nfunction AccountSubscriptionEdit({t, match, history}) {\n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"general\"\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_SUBSCRIPTION_QUERY, {\n    variables: {\n      archived: false,\n      accountId: accountId,\n      id: id\n    }\n  })\n\n  const [ updateSubscription ] = useMutation(UPDATE_ACCOUNT_SUBSCRIPTION)\n  \n  if (loading) return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const account = data.account\n  const initialdata = data.accountSubscription\n\n  let initialPaymentMethod = \"\"\n  if (initialdata.financePaymentMethod) {\n    initialPaymentMethod = initialdata.financePaymentMethod.id\n  }\n  \n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  let dateEnd = null\n  if (initialdata.dateStart) {\n    dateStart = new Date(initialdata.dateStart)\n  }\n  if (initialdata.dateEnd) {\n    dateEnd = new Date(initialdata.dateEnd)\n  }\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      <Formik\n        initialValues={{ \n          organizationSubscription: initialdata.organizationSubscription.id,\n          financePaymentMethod: initialPaymentMethod,\n          dateStart: dateStart,\n          dateEnd: dateEnd,\n          note: initialdata.note,\n          registrationFeePaid: initialdata.registrationFeePaid\n        }}\n        validationSchema={SUBSCRIPTION_SCHEMA}\n        onSubmit={(values, { setSubmitting }, errors) => {\n            console.log('submit values:')\n            console.log(values)\n            console.log(errors)\n\n            \n            let dateEnd\n            if (values.dateEnd) {\n              dateEnd = dateToLocalISO(values.dateEnd)\n            } else {\n              dateEnd = values.dateEnd\n            }\n\n            updateSubscription({ variables: {\n              input: {\n                id: id,\n                organizationSubscription: values.organizationSubscription,\n                financePaymentMethod: values.financePaymentMethod,\n                dateStart: dateToLocalISO(values.dateStart),\n                dateEnd: dateEnd,\n                note: values.note,\n                registrationFeePaid: values.registrationFeePaid\n              }\n            }, refetchQueries: [\n                {query: GET_ACCOUNT_SUBSCRIPTIONS_QUERY, variables: {accountId: accountId}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('relations.account.subscriptions.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n          <AccountSubscriptionForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldValue={setFieldValue}\n            setFieldTouched={setFieldTouched}\n            errors={errors}\n            values={values}\n            return_url={returnUrl}\n          >\n            {console.log(errors)}\n          </AccountSubscriptionForm>\n        )}\n      </Formik>\n    </AccountSubscriptionEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEdit))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n} from \"tabler-react\";\n\n\nfunction ButtonAddSecondaryMenu({t, match, history, linkTo}) {\n  return (\n    <Link to={linkTo}>\n      <Button\n        color=\"primary\"\n        size=\"sm\"\n        icon=\"plus-circle\"\n        className=\"float-right\"\n      >\n        {t(\"general.add\")}\n      </Button>\n    </Link>\n  )\n}\n\nexport default withTranslation()(withRouter(ButtonAddSecondaryMenu))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY = gql`\nquery AccountSubscriptionAltPrices($before:String, $after:String, $accountSubscription: ID!) {\n  accountSubscriptionAltPrices(before: $before, after: $after, accountSubscription:$accountSubscription) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        accountSubscription {\n          id\n        }\n        subscriptionYear\n        subscriptionMonth\n        amount\n        amountDisplay\n        description\n        note\n        createdAt\n        updatedAt\n      }\n    }\n  }\n}\n`\n\nexport const GET_ACCOUNT_SUBSCRIPTION_ALT_PRICE_QUERY = gql`\nquery AccountSubscriptionAltPrice($id: ID!) {\n  accountSubscriptionAltPrice(id:$id) {\n    id\n    accountSubscription {\n      id\n    }\n    subscriptionYear\n    subscriptionMonth\n    amount\n    description\n    note\n  }\n}\n`\n\n\nexport const DELETE_ACCOUNT_SUBSCRIPTION_ALT_PRICE = gql`\n  mutation DeleteAccountSubscriptionAltPrice($input: DeleteAccountSubscriptionAltPriceInput!) {\n    deleteAccountSubscriptionAltPrice(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditTabs from \"./AccountSubscriptionEditTabs\"\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport ProfileCardSmall from \"../../../../ui/ProfileCardSmall\"\nimport ProfileMenu from \"../../ProfileMenu\"\nimport moment from 'moment'\n\n\nfunction AccountSubscriptionEditBaseBase({\n  t, \n  history, \n  match, \n  children, \n  account=null, \n  subscription=null, \n  pageInfo, \n  onLoadMore, \n  active_tab}\n  ){\n\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  \n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = \"/relations/accounts/\" + accountId + \"/subscriptions\"\n  const cardTitle = (subscription) ? \n    <span className=\"text-muted\">\n      - {subscription.organizationSubscription.name + \" \" + moment(subscription.dateStart).format(dateFormat)} - {subscription.creditTotal} {t(\"general.credits\")}\n    </span> : \"\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={(account) ? account.firstName + \" \" + account.lastName : \"\"} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <ContentCard \n                cardTitle={<span>{t('relations.account.subscriptions.title_edit')} {cardTitle}</span>}\n                pageInfo={pageInfo}\n                onLoadMore={onLoadMore}\n                cardTabs={<AccountSubscriptionEditTabs \n                  account_id={accountId}\n                  subscription_id={subscriptionId}\n                  active={active_tab} /> }\n              >\n                {children}\n              </ContentCard>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              <HasPermissionWrapper permission=\"change\"\n                                    resource=\"accountsubscription\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              <ProfileMenu \n                activeLink='subscriptions'\n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBaseBase))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_QUERY } from '../queries'\nimport AccountSubscriptionForm from '../AccountSubscriptionForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\nimport AccountSubscriptionEditTabs from \"./AccountSubscriptionEditTabs\"\nimport AccountSubscriptionEditListBaseBase from \"./AccountSubscriptionEditListBaseBase\"\n\nimport ProfileMenu from \"../../ProfileMenu\"\n\n\nfunction AccountSubscriptionEditListBase({t, history, match, children, pageInfo, onLoadMore, active_tab}) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const { loading, error, data } = useQuery(GET_ACCOUNT_SUBSCRIPTION_QUERY, {\n    variables: {\n      accountId: accountId,\n      id: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBaseBase active_tab={active_tab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBaseBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBaseBase active_tab={active_tab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBaseBase>\n  )\n\n  console.log(data)\n  const account = data.account\n  const subscription = data.accountSubscription\n\n  return (\n    <AccountSubscriptionEditListBaseBase \n      active_tab={active_tab} \n      account={account} \n      subscription={subscription}\n      pageInfo={pageInfo}\n      onLoaMore={onLoadMore}\n    >\n      {children}\n    </AccountSubscriptionEditListBaseBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditListBase))\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_ACCOUNT_SUBSCRIPTION_ALT_PRICE, GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction AccountSubscriptionEditAltPriceDelete({t, match, history, id}) {\n  const subscriptionId = match.params.subscription_id\n  const [deleteAccountSubscriptionAltPrice, { data }] = useMutation(DELETE_ACCOUNT_SUBSCRIPTION_ALT_PRICE)\n  const query_vars = {\n    accountSubscription: subscriptionId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"relations.account.subscriptions.alt_prices.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('relations.account.subscriptions.alt_prices.delete_success'),\n          deleteFunction: deleteAccountSubscriptionAltPrice,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPriceDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../../../ui/ButtonAddSecondaryMenu'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditListBase from \"../AccountSubscriptionEditListBase\"\nimport AccountSubscriptionEditAltPriceDelete from \"./AccountSubscriptionEditAltPriceDelete\"\nimport moment from 'moment';\n\n\nfunction AccountSubscriptionEditAltPrices({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  console.log(appSettings)\n  \n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"alt_prices\"\n\n  const buttonAdd = <ButtonAddSecondaryMenu \n                      linkTo={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/alt_prices/add`} />\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY, {\n    variables: {\n      accountSubscription: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const accountSubscriptionAltPrices = data.accountSubscriptionAltPrices\n  const pageInfo = data.accountSubscriptionAltPrices.pageInfo\n\n    // Empty list\n    if (!accountSubscriptionAltPrices.edges.length) { return (\n      <AccountSubscriptionEditListBase active_tab={activeTab}>\n        <div className=\"pull-right\">{buttonAdd}</div>\n        <h5>{t('relations.account.subscriptions.alt_prices.title_list')}</h5>\n        <p>{t('relations.account.subscriptions.alt_prices.empty_list')}</p>\n      </AccountSubscriptionEditListBase>\n    )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: accountSubscriptionAltPrices.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.accountSubscriptionAltPrices.edges\n        const pageInfo = fetchMoreResult.accountSubscriptionAltPrices.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              accountSubscriptionAltPrices: {\n                __typename: previousResult.accountSubscriptionAltPrices.__typename,\n                edges: [ ...previousResult.accountSubscriptionAltPrices.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <AccountSubscriptionEditListBase active_tab={activeTab} pageInfo={pageInfo} onLoadMore={onLoadMore}>\n      <div className=\"pull-right\">{buttonAdd}</div>\n      <h5>{t('relations.account.subscriptions.alt_prices.title_list')}</h5>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.subscription_year')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.subscription_month')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.amount')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {accountSubscriptionAltPrices.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {node.subscriptionYear}\n                </Table.Col>\n                <Table.Col>\n                  {node.subscriptionMonth}\n                </Table.Col>\n                <Table.Col>\n                  {node.amountDisplay}\n                </Table.Col>\n                <Table.Col>\n                <div dangerouslySetInnerHTML={{__html: node.description}} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/alt_prices/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <AccountSubscriptionEditAltPriceDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </AccountSubscriptionEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPrices))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA = Yup.object().shape({\n  subscriptionYear: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  subscriptionMonth: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  amount: Yup.number()\n    .required()\n  })","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport AccountSubscriptionEditBase from \"../AccountSubscriptionEditBase\"\n\n\nfunction AccountSubscriptionEditAltPriceBase({ t, history, match, children}) {\n  const activeTab = \"alt_prices\"\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/alt_prices/`\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {children}\n    </AccountSubscriptionEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPriceBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction AccountSubscriptionEditAltPriceForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  let title\n  if ( formTitle == \"create\" ) {\n    title = t('relations.account.subscriptions.alt_prices.add')\n  } else {\n    title = t('relations.account.subscriptions.alt_prices.edit')\n  }\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <h5>{title}</h5>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_year')}>\n              <Field type=\"number\" \n                      name=\"subscriptionYear\" \n                      className={(errors.subscriptionYear) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionYear\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_month')}>\n              <Field type=\"number\" \n                      name=\"subscriptionMonth\" \n                      className={(errors.subscriptionMonth) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionMonth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.amount')}>\n                <Field type=\"text\" \n                    name=\"amount\" \n                    className={(errors.amount) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n                <ErrorMessage name=\"amount\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Field type=\"text\" \n                    name=\"description\" \n                    className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.note')}>\n            <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"note\"\n                initialValue={values.note}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldValue(\"note\", e.target.getContent())\n                  setFieldTouched(\"note\", true, true)\n                }}\n              />\n            <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPriceForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditAltPriceBase from \"./AccountSubscriptionEditAltPriceBase\"\nimport AccountSubscriptionEditAltPriceForm from \"./AccountSubscriptionEditAltPriceForm\"\n\n\nconst ADD_ACCOUNT_SUBSCRIPTION_ALT_PRICE = gql`\n  mutation CreateAccountSubscriptionAltPrice($input:CreateAccountSubscriptionAltPriceInput!) {\n    createAccountSubscriptionAltPrice(input: $input) {\n      accountSubscriptionAltPrice {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditAltPriceAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/alt_prices/`\n\n\n  const [addSubscriptionAltPrice] = useMutation(ADD_ACCOUNT_SUBSCRIPTION_ALT_PRICE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  return (\n    <AccountSubscriptionEditAltPriceBase>\n      <Formik\n        initialValues={{ \n          subscriptionYear: new Date().getFullYear(),\n          subscriptionMonth: new Date().getMonth() + 1,\n          amount: 0,\n          description: \"\",\n          note: \"\"\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addSubscriptionAltPrice({ variables: {\n            input: {\n              accountSubscription: subscriptionId,\n              subscriptionYear: values.subscriptionYear,\n              subscriptionMonth: values.subscriptionMonth,\n              amount: values.amount,\n              description: values.description,\n              note: values.note,\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.alt_prices.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditAltPriceForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditAltPriceBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPriceAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY, GET_ACCOUNT_SUBSCRIPTION_ALT_PRICE_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA } from './yupSchema'\n\nimport AccountSubscriptionEditAltPriceBase from \"./AccountSubscriptionEditAltPriceBase\"\nimport AccountSubscriptionEditAltPriceForm from \"./AccountSubscriptionEditAltPriceForm\"\n\n\nconst UPDATE_ACCOUNT_SUBSCRIPTION_ALT_PRICE = gql`\n  mutation UpdateAccountSubscriptionAltPrice($input:UpdateAccountSubscriptionAltPriceInput!) {\n    updateAccountSubscriptionAltPrice(input: $input) {\n      accountSubscriptionAltPrice {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditAltPriceEdit({ t, history, match }) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/alt_prices/`\n\n  const { loading, error, data, } = useQuery(GET_ACCOUNT_SUBSCRIPTION_ALT_PRICE_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [updateSubscriptionAltPrice] = useMutation(UPDATE_ACCOUNT_SUBSCRIPTION_ALT_PRICE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  if (loading) return (\n    <AccountSubscriptionEditAltPriceBase>\n        <p>{t('general.loading_with_dots')}</p>\n    </AccountSubscriptionEditAltPriceBase>\n  )\n  // Error\n  if (error) {\n    return (\n      <AccountSubscriptionEditAltPriceBase>\n          { console.log(error) }\n          <p>{t('general.error_sad_smiley')}</p>\n      </AccountSubscriptionEditAltPriceBase>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const accountSubscriptionAltPrice = data.accountSubscriptionAltPrice\n\n\n\n  return (\n    <AccountSubscriptionEditAltPriceBase>\n      <Formik\n        initialValues={{ \n          subscriptionYear: accountSubscriptionAltPrice.subscriptionYear,\n          subscriptionMonth: accountSubscriptionAltPrice.subscriptionMonth,\n          amount: accountSubscriptionAltPrice.amount,\n          description: accountSubscriptionAltPrice.description,\n          note: accountSubscriptionAltPrice.note\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateSubscriptionAltPrice({ variables: {\n            input: {\n              id: id,\n              subscriptionYear: values.subscriptionYear,\n              subscriptionMonth: values.subscriptionMonth,\n              amount: values.amount,\n              description: values.description,\n              note: values.note,\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.alt_prices.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditAltPriceForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"update\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditAltPriceBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPriceEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY = gql`\nquery AccountSubscriptionBlocks($before: String, $after: String, $accountSubscription: ID!) {\n  accountSubscriptionBlocks(first: 20, before: $before, after: $after, accountSubscription: $accountSubscription) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        accountSubscription {\n          id\n        }\n        dateStart\n        dateEnd\n        description\n        createdAt\n      }\n    } \n  }\n}\n`\n\nexport const GET_ACCOUNT_SUBSCRIPTION_BLOCK_QUERY = gql`\nquery AccountSubscriptionBlock($id: ID!) {\n  accountSubscriptionBlock(id:$id) {\n    id\n    accountSubscription {\n      id\n    }\n    dateStart\n    dateEnd\n    description\n  }\n}\n`\n\n\nexport const DELETE_ACCOUNT_SUBSCRIPTION_BLOCK = gql`\n  mutation DeleteAccountSubscriptionBlock($input: DeleteAccountSubscriptionBlockInput!) {\n    deleteAccountSubscriptionBlock(input: $input) {\n      ok\n    }\n  }\n`\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_ACCOUNT_SUBSCRIPTION_BLOCK, GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction AccountSubscriptionEditBlockDelete({t, match, history, id}) {\n  const subscriptionId = match.params.subscription_id\n  const [deleteAccountSubscriptionBlock, { data }] = useMutation(DELETE_ACCOUNT_SUBSCRIPTION_BLOCK)\n  const query_vars = {\n    accountSubscription: subscriptionId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"relations.account.subscriptions.blocks.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('relations.account.subscriptions.blocks.delete_success'),\n          deleteFunction: deleteAccountSubscriptionBlock,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlockDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../../../ui/ButtonAddSecondaryMenu'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditListBase from \"../AccountSubscriptionEditListBase\"\nimport AccountSubscriptionEditBlockDelete from \"./AccountSubscriptionEditBlockDelete\"\nimport moment from 'moment';\n\n\nfunction AccountSubscriptionEditBlocks({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  console.log(appSettings)\n  \n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"blocks\"\n\n  const buttonAdd = <ButtonAddSecondaryMenu \n                      linkTo={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/blocks/add`} />\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY, {\n    variables: {\n      accountSubscription: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const accountSubscriptionBlocks = data.accountSubscriptionBlocks\n  const pageInfo = data.accountSubscriptionBlocks.pageInfo\n\n    // Empty list\n    if (!accountSubscriptionBlocks.edges.length) { return (\n      <AccountSubscriptionEditListBase active_tab={activeTab}>\n        <div className=\"pull-right\">{buttonAdd}</div>\n        <h5>{t('relations.account.subscriptions.blocks.title_list')}</h5>\n        <p>{t('relations.account.subscriptions.blocks.empty_list')}</p>\n      </AccountSubscriptionEditListBase>\n    )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: accountSubscriptionBlocks.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.accountSubscriptionBlocks.edges\n        const pageInfo = fetchMoreResult.accountSubscriptionBlocks.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              accountSubscriptionBlocks: {\n                __typename: previousResult.accountSubscriptionBlocks.__typename,\n                edges: [ ...previousResult.accountSubscriptionBlocks.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <AccountSubscriptionEditListBase active_tab={activeTab} pageInfo={pageInfo} onLoadMore={onLoadMore}>\n      <div className=\"pull-right\">{buttonAdd}</div>\n      <h5>{t('relations.account.subscriptions.blocks.title_list')}</h5>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {accountSubscriptionBlocks.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {moment(node.dateStart).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  {moment(node.dateEnd).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  <div dangerouslySetInnerHTML={{__html: node.description}} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/blocks/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <AccountSubscriptionEditBlockDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </AccountSubscriptionEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlocks))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA = Yup.object().shape({\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .required(t('yup.field_required')),\n  })","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport AccountSubscriptionEditBase from \"../AccountSubscriptionEditBase\"\n\n\nfunction AccountSubscriptionEditBlockBase({ t, history, match, children}) {\n  const activeTab = \"blocks\"\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/blocks/`\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {children}\n    </AccountSubscriptionEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlockBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction AccountSubscriptionEditBlockForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  let title\n  if ( formTitle == \"create\" ) {\n    title = t('relations.account.subscriptions.blocks.add')\n  } else {\n    title = t('relations.account.subscriptions.blocks.edit')\n  }\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <h5>{title}</h5>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => setFieldValue(\"dateStart\", date)}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                className={(errors.dateEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateEnd}\n                onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"description\"\n                initialValue={values.description}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldValue(\"description\", e.target.getContent())\n                  setFieldTouched(\"description\", true, true)\n                }}\n              />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlockForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditBlockBase from \"./AccountSubscriptionEditBlockBase\"\nimport AccountSubscriptionEditBlockForm from \"./AccountSubscriptionEditBlockForm\"\n\n\nconst ADD_ACCOUNT_SUBSCRIPTION_BLOCK = gql`\n  mutation CreateAccountSubscriptionBlock($input:CreateAccountSubscriptionBlockInput!) {\n    createAccountSubscriptionBlock(input: $input) {\n      accountSubscriptionBlock {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditBlockAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/blocks/`\n\n\n  const [addSubscriptionBlock] = useMutation(ADD_ACCOUNT_SUBSCRIPTION_BLOCK, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  return (\n    <AccountSubscriptionEditBlockBase>\n      <Formik\n        initialValues={{ \n          dateStart: new Date() ,\n          description: \"\"\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addSubscriptionBlock({ variables: {\n            input: {\n              accountSubscription: subscriptionId,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.blocks.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditBlockForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditBlockBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlockAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY, GET_ACCOUNT_SUBSCRIPTION_BLOCK_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditBlockBase from \"./AccountSubscriptionEditBlockBase\"\nimport AccountSubscriptionEditBlockForm from \"./AccountSubscriptionEditBlockForm\"\n\n\nconst UPDATE_ACCOUNT_SUBSCRIPTION_BLOCK = gql`\n  mutation UpdateAccountSubscriptionBlock($input:UpdateAccountSubscriptionBlockInput!) {\n    updateAccountSubscriptionBlock(input: $input) {\n      accountSubscriptionBlock {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditBlockEdit({ t, history, match }) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/blocks/`\n\n  const { loading, error, data, } = useQuery(GET_ACCOUNT_SUBSCRIPTION_BLOCK_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [updateSubscriptionBlock] = useMutation(UPDATE_ACCOUNT_SUBSCRIPTION_BLOCK, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  if (loading) return (\n    <AccountSubscriptionEditBlockBase>\n        <p>{t('general.loading_with_dots')}</p>\n    </AccountSubscriptionEditBlockBase>\n  )\n  // Error\n  if (error) {\n    return (\n      <AccountSubscriptionEditBlockBase>\n          { console.log(error) }\n          <p>{t('general.error_sad_smiley')}</p>\n      </AccountSubscriptionEditBlockBase>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const accountSubscriptionBlock = data.accountSubscriptionBlock\n\n\n\n  return (\n    <AccountSubscriptionEditBlockBase>\n      <Formik\n        initialValues={{ \n          dateStart: new Date(accountSubscriptionBlock.dateStart),\n          dateEnd: new Date(accountSubscriptionBlock.dateEnd),\n          description: accountSubscriptionBlock.description\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateSubscriptionBlock({ variables: {\n            input: {\n              id: id,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.blocks.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditBlockForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"update\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditBlockBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlockEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Badge\n} from \"tabler-react\";\n\nfunction SubscriptionCreditsMutationType({ t, mutationType }) {\n  switch (mutationType) {\n    case \"ADD\":  \n      return <Badge color=\"success\">+</Badge>\n      break\n    case \"SUB\":\n      return <Badge color=\"secondary\">-</Badge>\n      break\n    default:\n      return \"\"\n  }\n}\n\nexport default withTranslation()(SubscriptionCreditsMutationType)\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY = gql`\nquery AccountSubscriptionCredits($before: String, $after: String, $accountSubscription: ID!) {\n  accountSubscriptionCredits(first: 20, before: $before, after: $after, accountSubscription: $accountSubscription) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        accountSubscription {\n          id\n        }\n        mutationType\n        mutationAmount\n        description\n        createdAt\n      }\n    } \n  }\n}\n`\n\nexport const GET_ACCOUNT_SUBSCRIPTION_CREDIT_QUERY = gql`\nquery AccountSubscriptionCredit($id: ID!) {\n  accountSubscriptionCredit(id:$id) {\n    id\n    accountSubscription {\n      id\n    }\n    mutationType\n    mutationAmount\n    description\n    createdAt\n  }\n}\n`\n\n\nexport const DELETE_ACCOUNT_SUBSCRIPTION_CREDIT = gql`\n  mutation DeleteAccountSubscriptionCredit($input: DeleteAccountSubscriptionCreditInput!) {\n    deleteAccountSubscriptionCredit(input: $input) {\n      ok\n    }\n  }\n`\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_ACCOUNT_SUBSCRIPTION_QUERY } from \"../../queries\"\nimport { DELETE_ACCOUNT_SUBSCRIPTION_CREDIT, GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction AccountSubscriptionEditCreditDelete({t, match, history, id}) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const [deleteAccountSubscriptionCredit] = useMutation(DELETE_ACCOUNT_SUBSCRIPTION_CREDIT)\n  const query_vars = {\n    accountSubscription: subscriptionId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"relations.account.subscriptions.credits.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('relations.account.subscriptions.credits.delete_success'),\n          deleteFunction: deleteAccountSubscriptionCredit,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY, variables: query_vars },\n              { query: GET_ACCOUNT_SUBSCRIPTION_QUERY, variables: {\n                accountId: accountId,\n                id: subscriptionId\n              }}\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCreditDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport SubscriptionCreditsMutationType from \"../../../../../ui/SubscriptionCreditsMutationType\"\nimport ButtonAddSecondaryMenu from '../../../../../ui/ButtonAddSecondaryMenu'\n\nimport AppSettingsContext from '../../../../../context/AppSettingsContext'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditListBase from \"../AccountSubscriptionEditListBase\"\nimport AccountSubscriptionEditCreditDelete from \"./AccountSubscriptionEditCreditDelete\"\nimport moment from 'moment';\n\n\nfunction AccountSubscriptionEditCredits({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n  console.log(appSettings)\n  \n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"credits\"\n\n  const buttonAdd = <ButtonAddSecondaryMenu \n                     linkTo={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/add`} />\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY, {\n    variables: {\n      accountSubscription: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const accountSubscriptionCredits = data.accountSubscriptionCredits\n  const pageInfo = data.accountSubscriptionCredits.pageInfo\n  // const inputData = data\n  // const account = data.account\n  // const initialdata = data.accountSubscription\n\n  // let initialPaymentMethod = \"\"\n  // if (initialdata.financePaymentMethod) {\n  //   initialPaymentMethod = initialdata.financePaymentMethod.id\n  // }\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: accountSubscriptionCredits.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.accountSubscriptionCredits.edges\n        const pageInfo = fetchMoreResult.accountSubscriptionCredits.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              accountSubscriptionCredits: {\n                __typename: previousResult.accountSubscriptionCredits.__typename,\n                edges: [ ...previousResult.accountSubscriptionCredits.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <AccountSubscriptionEditListBase active_tab={activeTab} pageInfo={pageInfo} onLoadMore={onLoadMore}>\n      <div className=\"pull-right\">{buttonAdd}</div>\n      <h5>{t('relations.account.subscriptions.credits.title_list')}</h5>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.credits')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.mutation')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {accountSubscriptionCredits.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {moment(node.createdAt).format(dateTimeFormatMoment)}\n                </Table.Col>\n                <Table.Col>\n                  <div dangerouslySetInnerHTML={{__html: node.description}} />\n                </Table.Col>\n                <Table.Col>\n                  {node.mutationAmount}\n                </Table.Col>\n                <Table.Col>\n                  <SubscriptionCreditsMutationType mutationType={node.mutationType} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <AccountSubscriptionEditCreditDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </AccountSubscriptionEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCredits))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA = Yup.object().shape({\n  mutationAmount: Yup.number()\n    .required(t('yup.field_required')),\n  })","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport AccountSubscriptionEditBase from \"../AccountSubscriptionEditBase\"\n\n\nfunction AccountSubscriptionEditCreditBase({ t, history, match, children}) {\n  const activeTab = \"credits\"\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/`\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {children}\n    </AccountSubscriptionEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCreditBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction AccountSubscriptionEditCreditForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  let title\n  if ( formTitle == \"create\" ) {\n    title = t('relations.account.subscriptions.credits.add')\n  } else {\n    title = t('relations.account.subscriptions.credits.edit')\n  }\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <h5>{title}</h5>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.credits')}>\n              <Field type=\"number\" \n                      name=\"mutationAmount\" \n                      className={(errors.mutationAmount) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"mutationAmount\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.subscriptions.credits.mutationType')}>\n              <Field component=\"select\" \n                     name=\"mutationType\" \n                     className={(errors.mutationType) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\">\n                <option value=\"ADD\">{t(\"general.add\")}</option>\n                <option value=\"SUB\">{t(\"general.subtract\")}</option>\n              </Field>\n              <ErrorMessage name=\"mutationType\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"description\"\n                initialValue={values.description}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldValue(\"description\", e.target.getContent())\n                  setFieldTouched(\"description\", true, true)\n                }}\n              />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCreditForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_QUERY } from \"../../queries\"\nimport { GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditCreditBase from \"./AccountSubscriptionEditCreditBase\"\nimport AccountSubscriptionEditCreditForm from \"./AccountSubscriptionEditCreditForm\"\n\n\nconst ADD_ACCOUNT_SUBSCRIPTION_CREDIT = gql`\n  mutation CreateAccountSubscriptionCredit($input:CreateAccountSubscriptionCreditInput!) {\n    createAccountSubscriptionCredit(input: $input) {\n      accountSubscriptionCredit {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditCreditAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/`\n\n  const [addSubscriptionCredit] = useMutation(ADD_ACCOUNT_SUBSCRIPTION_CREDIT, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  return (\n    <AccountSubscriptionEditCreditBase>\n      <Formik\n        initialValues={{ \n          mutationType: \"ADD\",\n          mutationAmount: 0,\n          description: \"\"\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addSubscriptionCredit({ variables: {\n            input: {\n              accountSubscription: subscriptionId,\n              mutationType: values.mutationType,\n              mutationAmount: values.mutationAmount,\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n              {query: GET_ACCOUNT_SUBSCRIPTION_QUERY, variables: {\n                accountId: accountId,\n                id: subscriptionId\n              }}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.credits.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditCreditForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditCreditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCreditAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_QUERY } from \"../../queries\"\nimport { GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY, GET_ACCOUNT_SUBSCRIPTION_CREDIT_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditCreditBase from \"./AccountSubscriptionEditCreditBase\"\nimport AccountSubscriptionEditCreditForm from \"./AccountSubscriptionEditCreditForm\"\n\n\nconst UPDATE_ACCOUNT_SUBSCRIPTION_CREDIT = gql`\n  mutation UpdateAccountSubscriptionCredit($input:UpdateAccountSubscriptionCreditInput!) {\n    updateAccountSubscriptionCredit(input: $input) {\n      accountSubscriptionCredit {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditCreditEdit({ t, history, match }) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/`\n\n  const { loading, error, data, } = useQuery(GET_ACCOUNT_SUBSCRIPTION_CREDIT_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [updateSubscriptionCredit] = useMutation(UPDATE_ACCOUNT_SUBSCRIPTION_CREDIT, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  if (loading) return (\n    <AccountSubscriptionEditCreditBase>\n        <p>{t('general.loading_with_dots')}</p>\n    </AccountSubscriptionEditCreditBase>\n  )\n  // Error\n  if (error) {\n    return (\n      <AccountSubscriptionEditCreditBase>\n          { console.log(error) }\n          <p>{t('general.error_sad_smiley')}</p>\n      </AccountSubscriptionEditCreditBase>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const accountSubscriptionCredit = data.accountSubscriptionCredit\n\n\n  return (\n    <AccountSubscriptionEditCreditBase>\n      <Formik\n        initialValues={{ \n          mutationType: accountSubscriptionCredit.mutationType,\n          mutationAmount: accountSubscriptionCredit.mutationAmount,\n          description: accountSubscriptionCredit.description\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateSubscriptionCredit({ variables: {\n            input: {\n              id: id,\n              mutationType: values.mutationType,\n              mutationAmount: values.mutationAmount,\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n              {query: GET_ACCOUNT_SUBSCRIPTION_QUERY, variables: {\n                accountId: accountId,\n                id: subscriptionId\n              }}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.credits.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditCreditForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"update\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditCreditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCreditEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_FINANCE_INVOICE_ITEM_QUERY = gql`\nquery financeInvoiceItem($before: String, $after: String, $accountSubscription: ID!) {\n  financeInvoiceItems(before: $before, after: $after, accountSubscription:$accountSubscription, orderBy: [\"-finance_invoice__date_sent\"]) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        financeInvoice {\n          id\n          invoiceNumber\n          status\n          summary\n          dateSent\n          dateDue\n          total\n          balance\n        }\n        subscriptionYear\n        subscriptionMonth\n      }\n    }\n  }\n}\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InvoiceInputValues($after: String, $before: String) {\n    financeInvoiceGroups(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n// export const GET_ACCOUNT_SUBSCRIPTION_CREDIT_QUERY = gql`\n// query AccountSubscriptionCredit($id: ID!) {\n//   accountSubscriptionCredit(id:$id) {\n//     id\n//     accountSubscription {\n//       id\n//     }\n//     mutationType\n//     mutationAmount\n//     description\n//     createdAt\n//   }\n// }\n// `\n\n\n// export const DELETE_ACCOUNT_SUBSCRIPTION_CREDIT = gql`\n//   mutation DeleteAccountSubscriptionCredit($input: DeleteAccountSubscriptionCreditInput!) {\n//     deleteAccountSubscriptionCredit(input: $input) {\n//       ok\n//     }\n//   }\n// `\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_FINANCE_INVOICE_ITEM_QUERY } from \"./queries\"\nimport { DELETE_FINANCE_INVOICE } from \"../../../../../finance/invoices/queries\"\nimport confirm_delete from \"../../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction AccountSubscriptionEditInvoiceDelete({t, match, history, id}) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const [deleteAccountSubscriptionInvoice] = useMutation(DELETE_FINANCE_INVOICE)\n  const query_vars = {\n    accountSubscription: subscriptionId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"finance.invoices.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('finance.invoices.deleted'),\n          deleteFunction: deleteAccountSubscriptionInvoice,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_FINANCE_INVOICE_ITEM_QUERY, variables: query_vars },\n              // { query: GET_FINANCE_INVOICE_ITEM_QUERY, variables: {\n              //   accountId: accountId,\n              //   id: subscriptionId\n              // }}\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditInvoiceDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport FinanceInvoicesStatus from \"../../../../../ui/FinanceInvoiceStatus\"\nimport ButtonAddSecondaryMenu from '../../../../../ui/ButtonAddSecondaryMenu'\n\nimport AppSettingsContext from '../../../../../context/AppSettingsContext'\n\nimport { GET_FINANCE_INVOICE_ITEM_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n  Text\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport CSLS from \"../../../../../../tools/cs_local_storage\"\nimport AccountSubscriptionEditInvoiceDelete from \"./AccountSubscriptionEditInvoiceDelete\"\nimport AccountSubscriptionEditListBase from \"../AccountSubscriptionEditListBase\"\n// import AccountSubscriptionEditCreditDelete from \"./AccountSubscriptionEditCreditDelete\"\nimport moment from 'moment';\n\n\nfunction AccountSubscriptionEditInvoices({t, location, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n  console.log(appSettings)\n  \n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"invoices\"\n\n  const buttonAdd = <ButtonAddSecondaryMenu \n                     linkTo={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/invoices/add`} />\n\n  const { loading, error, data, fetchMore } = useQuery(GET_FINANCE_INVOICE_ITEM_QUERY, {\n    variables: {\n      accountSubscription: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  // Set back location for edit invoice\n  localStorage.setItem(CSLS.FINANCE_INVOICES_EDIT_RETURN, location.pathname)\n\n  const financeInvoiceItems = data.financeInvoiceItems\n  const pageInfo = data.financeInvoiceItems.pageInfo\n  // const inputData = data\n  // const account = data.account\n  // const initialdata = data.accountSubscription\n\n  // let initialPaymentMethod = \"\"\n  // if (initialdata.financePaymentMethod) {\n  //   initialPaymentMethod = initialdata.financePaymentMethod.id\n  // }\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: financeInvoiceItems.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.financeInvoiceItems.edges\n        const pageInfo = fetchMoreResult.financeInvoiceItems.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              financeInvoiceItems: {\n                __typename: previousResult.financeInvoiceItems.__typename,\n                edges: [ ...previousResult.financeInvoiceItems.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <AccountSubscriptionEditListBase active_tab={activeTab} pageInfo={pageInfo} onLoadMore={onLoadMore}>\n      <div className=\"pull-right\">{buttonAdd}</div>\n      <h5>{t('relations.account.subscriptions.invoices.title_list')}</h5>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n            <Table.ColHeader>{t('finance.invoices.invoice_number')} & {t('finance.invoices.summary')}</Table.ColHeader>\n            <Table.ColHeader>{t('finance.invoices.date')} & {t('finance.invoices.due')}</Table.ColHeader>\n            {/* <Table.ColHeader>{t('finance.invoices.due')}</Table.ColHeader> */}\n            <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.balance')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {financeInvoiceItems.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  <FinanceInvoicesStatus status={node.financeInvoice.status} />\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.financeInvoice.invoiceNumber} <br />\n                  <Text.Small color=\"gray\">{node.financeInvoice.summary.trunc(30)}</Text.Small>\n                </Table.Col>\n\n                <Table.Col key={v4()}>\n                  {moment(node.financeInvoice.dateSent).format('LL')} <br />\n                  {moment(node.financeInvoice.dateDue).format('LL')}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.financeInvoice.totalDisplay}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.financeInvoice.balanceDisplay}\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <Button className='btn-sm' \n                          onClick={() => history.push(\"/finance/invoices/edit/\" + node.financeInvoice.id)}\n                          color=\"secondary\">\n                    {t('general.edit')}\n                  </Button>\n                </Table.Col>\n                <Table.Col>\n                  <AccountSubscriptionEditInvoiceDelete id={node.financeInvoice.id} />\n                </Table.Col>\n                {/* <Table.Col>\n                  {moment(node.createdAt).format(dateTimeFormatMoment)}\n                </Table.Col>\n                <Table.Col>\n                  <div dangerouslySetInnerHTML={{__html: node.description}} />\n                </Table.Col>\n                <Table.Col>\n                  {node.mutationAmount}\n                </Table.Col>\n                <Table.Col>\n                  <SubscriptionCreditsMutationType mutationType={node.mutationType} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <AccountSubscriptionEditCreditDelete id={node.id} />\n                </Table.Col> */}\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </AccountSubscriptionEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditInvoices))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SUBSCRIPTION_INVOICE_SCHEMA = Yup.object().shape({\n  financeInvoiceGroup: Yup.string()\n    .required(t('yup.field_required')),\n  subscriptionYear: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  subscriptionMonth: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  })","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport AccountSubscriptionEditBase from \"../AccountSubscriptionEditBase\"\n\n\nfunction AccountSubscriptionEditInvoiceAddBase({ t, history, match, children}) {\n  const activeTab = \"invoices\"\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/invoices/`\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {children}\n    </AccountSubscriptionEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditInvoiceAddBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction AccountSubscriptionEditInvoiceAddForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  const title = t('relations.account.subscriptions.invoices.add')\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <h5>{title}</h5>\n        <Form.Group label={t('general.finance_invoice_group')}>\n          <Field component=\"select\" \n                name=\"financeInvoiceGroup\" \n                className={(errors.financeInvoiceGroup) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n            {inputData.financeInvoiceGroups.edges.map(({ node }) =>\n              <option value={node.id} key={v4()}>{node.name}</option>\n            )}\n          </Field>\n          <ErrorMessage name=\"financeInvoiceGroup\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Form.Group label={t('general.summary')}>\n          <Field type=\"text\" \n                  name=\"summary\" \n                  className={(errors.summary) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n          <ErrorMessage name=\"summary\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_year')}>\n              <Field type=\"number\" \n                      name=\"subscriptionYear\" \n                      className={(errors.subscriptionYear) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionYear\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_month')}>\n              <Field type=\"number\" \n                      name=\"subscriptionMonth\" \n                      className={(errors.subscriptionMonth) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionMonth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            className=\"pull-right\"\n            color=\"primary\"\n            disabled={isSubmitting}\n            type=\"submit\"\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button\n              type=\"button\" \n              color=\"link\" \n            >\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditInvoiceAddForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n// import { GET_ACCOUNT_SUBSCRIPTION_QUERY } from \"../../queries\"\nimport { GET_FINANCE_INVOICE_ITEM_QUERY, GET_INPUT_VALUES_QUERY } from \"./queries\"\nimport { CREATE_ACCOUNT_INVOICE } from \"../../../invoices/queries\"\nimport { ACCOUNT_SUBSCRIPTION_INVOICE_SCHEMA } from './yupSchema'\n\nimport AccountSubscriptionEditInvoiceAddBase from \"./AccountSubscriptionEditInvoiceAddBase\"\nimport AccountSubscriptionEditInvoiceAddForm from \"./AccountSubscriptionEditInvoiceAddForm\"\n\n\nfunction AccountSubscriptionEditInvoiceAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/invoices/`\n\n  const { loading: queryLoading, error: queryError, data: queryData } = useQuery(GET_INPUT_VALUES_QUERY)\n\n  const [ addFinanceInvoice ] = useMutation(CREATE_ACCOUNT_INVOICE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n    // Loading\n    if (queryLoading) return (\n      <AccountSubscriptionEditInvoiceAddBase>\n        <p>{t('general.loading_with_dots')}</p>\n      </AccountSubscriptionEditInvoiceAddBase>\n    )\n    // Error\n    if (queryError) {\n      console.log(queryError)\n      return (\n        <AccountSubscriptionEditInvoiceAddBase>\n          <p>{t('general.error_sad_smiley')}</p>\n        </AccountSubscriptionEditInvoiceAddBase>\n      )\n    }\n    \n    console.log(queryData)\n\n  return (\n    <AccountSubscriptionEditInvoiceAddBase>\n      <Formik\n        initialValues={{ \n          financeInvoiceGroup: \"\",\n          summary: \"\",\n          subscriptionYear: new Date().getFullYear(), \n          subscriptionMonth: new Date().getMonth() + 1,\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_INVOICE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addFinanceInvoice({ variables: {\n            input: {\n              account: accountId,\n              accountSubscription: subscriptionId,\n              financeInvoiceGroup: values.financeInvoiceGroup,\n              subscriptionYear: values.subscriptionYear,\n              subscriptionMonth: values.subscriptionMonth,\n              summary: values.summary,\n            }\n          }, refetchQueries: [\n              {query: GET_FINANCE_INVOICE_ITEM_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n              // {query: GET_ACCOUNT_SUBSCRIPTION_QUERY, variables: {\n              //   accountId: accountId,\n              //   id: subscriptionId\n              // }}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              const financeInvoiceId = data.createFinanceInvoice.financeInvoice.id\n              history.push(`/finance/invoices/edit/${financeInvoiceId}`)\n              toast.success((t('relations.account.subscriptions.invoices.toast_add_success')), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n              toast.success((t('relations.account.subscriptions.invoices.toast_you_are_now_editing')), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditInvoiceAddForm\n            inputData={queryData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditInvoiceAddBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditInvoiceAdd))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY = gql`\nquery AccountSubscriptionPauses($before: String, $after: String, $accountSubscription: ID!) {\n  accountSubscriptionPauses(first: 20, before: $before, after: $after, accountSubscription: $accountSubscription) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        accountSubscription {\n          id\n        }\n        dateStart\n        dateEnd\n        description\n        createdAt\n      }\n    } \n  }\n}\n`\n\nexport const GET_ACCOUNT_SUBSCRIPTION_PAUSE_QUERY = gql`\nquery AccountSubscriptionPause($id: ID!) {\n  accountSubscriptionPause(id:$id) {\n    id\n    accountSubscription {\n      id\n    }\n    dateStart\n    dateEnd\n    description\n  }\n}\n`\n\n\nexport const DELETE_ACCOUNT_SUBSCRIPTION_PAUSE = gql`\n  mutation DeleteAccountSubscriptionPause($input: DeleteAccountSubscriptionPauseInput!) {\n    deleteAccountSubscriptionPause(input: $input) {\n      ok\n    }\n  }\n`\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_ACCOUNT_SUBSCRIPTION_PAUSE, GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction AccountSubscriptionEditPauseDelete({t, match, history, id}) {\n  const subscriptionId = match.params.subscription_id\n  const [deleteAccountSubscriptionPause, { data }] = useMutation(DELETE_ACCOUNT_SUBSCRIPTION_PAUSE)\n  const query_vars = {\n    accountSubscription: subscriptionId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"relations.account.subscriptions.pauses.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('relations.account.subscriptions.pauses.delete_success'),\n          deleteFunction: deleteAccountSubscriptionPause,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauseDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport ButtonAddSecondaryMenu from '../../../../../ui/ButtonAddSecondaryMenu'\n\nimport AppSettingsContext from '../../../../../context/AppSettingsContext'\n\n\nimport { GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditListBase from \"../AccountSubscriptionEditListBase\"\nimport AccountSubscriptionEditPauseDelete from \"./AccountSubscriptionEditPauseDelete\"\nimport moment from 'moment';\n\n\nfunction AccountSubscriptionEditPauses({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n  console.log(appSettings)\n  \n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"pauses\"\n\n  const buttonAdd = <ButtonAddSecondaryMenu \n                      linkTo={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/pauses/add`} />\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY, {\n    variables: {\n      accountSubscription: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const accountSubscriptionPauses = data.accountSubscriptionPauses\n  const pageInfo = data.accountSubscriptionPauses.pageInfo\n\n    // Empty list\n    if (!accountSubscriptionPauses.edges.length) { return (\n      <AccountSubscriptionEditListBase active_tab={activeTab}>\n        <div className=\"pull-right\">{buttonAdd}</div>\n        <h5>{t('relations.account.subscriptions.pauses.title_list')}</h5>\n        <p>{t('relations.account.subscriptions.pauses.empty_list')}</p>\n      </AccountSubscriptionEditListBase>\n    )}\n  // const inputData = data\n  // const account = data.account\n  // const initialdata = data.accountSubscription\n\n  // let initialPaymentMethod = \"\"\n  // if (initialdata.financePaymentMethod) {\n  //   initialPaymentMethod = initialdata.financePaymentMethod.id\n  // }\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: accountSubscriptionPauses.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.accountSubscriptionPauses.edges\n        const pageInfo = fetchMoreResult.accountSubscriptionPauses.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              accountSubscriptionPauses: {\n                __typename: previousResult.accountSubscriptionPauses.__typename,\n                edges: [ ...previousResult.accountSubscriptionPauses.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <AccountSubscriptionEditListBase active_tab={activeTab} pageInfo={pageInfo} onLoadMore={onLoadMore}>\n      <div className=\"pull-right\">{buttonAdd}</div>\n      <h5>{t('relations.account.subscriptions.pauses.title_list')}</h5>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {accountSubscriptionPauses.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {moment(node.dateStart).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  {moment(node.dateEnd).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                <div dangerouslySetInnerHTML={{__html: node.description}} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/pauses/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <AccountSubscriptionEditPauseDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </AccountSubscriptionEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauses))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA = Yup.object().shape({\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .required(t('yup.field_required')),\n  })","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\n// import { GET_INVOICE_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\n// import { GET_INVOICE_QUERY } from \"../queries\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\n// import ScheduleClassPriceBack from \"./ScheduleClassPriceBack\"\nimport AccountSubscriptionEditBase from \"../AccountSubscriptionEditBase\"\n\n\nfunction AccountSubscriptionEditPauseBase({ t, history, match, children}) {\n  const activeTab = \"pauses\"\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/pauses/`\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {children}\n    </AccountSubscriptionEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauseBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction AccountSubscriptionEditPauseForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  let title\n  if ( formTitle == \"create\" ) {\n    title = t('relations.account.subscriptions.pauses.add')\n  } else {\n    title = t('relations.account.subscriptions.pauses.edit')\n  }\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <h5>{title}</h5>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => setFieldValue(\"dateStart\", date)}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                className={(errors.dateEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateEnd}\n                onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"description\"\n                initialValue={values.description}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldValue(\"description\", e.target.getContent())\n                  setFieldTouched(\"description\", true, true)\n                }}\n              />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauseForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditPauseBase from \"./AccountSubscriptionEditPauseBase\"\nimport AccountSubscriptionEditPauseForm from \"./AccountSubscriptionEditPauseForm\"\n\n\nconst ADD_ACCOUNT_SUBSCRIPTION_PAUSE = gql`\n  mutation CreateAccountSubscriptionPause($input:CreateAccountSubscriptionPauseInput!) {\n    createAccountSubscriptionPause(input: $input) {\n      accountSubscriptionPause {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditPauseAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/pauses/`\n\n  const [addSubscriptionPause] = useMutation(ADD_ACCOUNT_SUBSCRIPTION_PAUSE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  return (\n    <AccountSubscriptionEditPauseBase>\n      <Formik\n        initialValues={{ \n          dateStart: new Date() ,\n          description: \"\"\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addSubscriptionPause({ variables: {\n            input: {\n              accountSubscription: subscriptionId,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.pauses.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditPauseForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditPauseBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauseAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY, GET_ACCOUNT_SUBSCRIPTION_PAUSE_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditPauseBase from \"./AccountSubscriptionEditPauseBase\"\nimport AccountSubscriptionEditPauseForm from \"./AccountSubscriptionEditPauseForm\"\n\n\nconst UPDATE_ACCOUNT_SUBSCRIPTION_PAUSE = gql`\n  mutation UpdateAccountSubscriptionPause($input:UpdateAccountSubscriptionPauseInput!) {\n    updateAccountSubscriptionPause(input: $input) {\n      accountSubscriptionPause {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditPauseEdit({ t, history, match }) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/pauses/`\n\n  const { loading, error, data, } = useQuery(GET_ACCOUNT_SUBSCRIPTION_PAUSE_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [updateSubscriptionPause] = useMutation(UPDATE_ACCOUNT_SUBSCRIPTION_PAUSE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  if (loading) return (\n    <AccountSubscriptionEditPauseBase>\n        <p>{t('general.loading_with_dots')}</p>\n    </AccountSubscriptionEditPauseBase>\n  )\n  // Error\n  if (error) {\n    return (\n      <AccountSubscriptionEditPauseBase>\n          { console.log(error) }\n          <p>{t('general.error_sad_smiley')}</p>\n      </AccountSubscriptionEditPauseBase>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const accountSubscriptionPause = data.accountSubscriptionPause\n\n\n\n  return (\n    <AccountSubscriptionEditPauseBase>\n      <Formik\n        initialValues={{ \n          dateStart: new Date(accountSubscriptionPause.dateStart),\n          dateEnd: new Date(accountSubscriptionPause.dateEnd),\n          description: accountSubscriptionPause.description\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateSubscriptionPause({ variables: {\n            input: {\n              id: id,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.pauses.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditPauseForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"update\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditPauseBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauseEdit))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ACCOUNT_TEACHER_PROFILE_QUERY = gql`\n  query AccountTeacherProfileQuery($id: ID!) {\n    accountTeacherProfiles(account:$id) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          account {\n            id\n          }\n          classes\n          appointments\n          events\n          role\n          education\n          bio\n          urlBio\n          urlWebsite   \n        }\n      }\n    }\n    account(id:$id) {\n      id\n      teacher\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\n\nexport const UPDATE_ACCOUNT_TEACHER_PROFILE = gql`\n  mutation UpdateAccountTeacherProfile($input:UpdateAccountTeacherProfileInput!) {\n    updateAccountTeacherProfile(input: $input) {\n      accountTeacherProfile {\n        id\n      }\n    }\n  }\n`\n\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_TEACHER_PROFILE_SCHEMA = Yup.object().shape({\n  classes: Yup.boolean(),  \n  appointments: Yup.boolean(),  \n  events: Yup.boolean(),  \n  role: Yup.string(),\n  education: Yup.string(),\n  bio: Yup.string(),\n  urlBio: Yup.string()\n    .url(t('yup.url')),\n  urlWebsite: Yup.string()\n    .url(t('yup.url')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n\nconst RelationsAccountTeacherProfileForm = ({ t, history, isSubmitting, errors, values, return_url, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"classes\" \n                  checked={values.classes} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('relations.account.teacher_profile.classes')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"classes\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"events\" \n                  checked={values.events} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('relations.account.teacher_profile.events')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"events\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"appointments\" \n                  checked={values.appointments} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('relations.account.teacher_profile.appointments')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"appointments\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.role')}>\n              <Field type=\"text\" \n                      name=\"role\" \n                      className={(errors.role) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"role\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.education')}>\n          <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"education\"\n              initialValue={values.education}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldTouched(\"education\", true)\n                setFieldValue(\"education\", e.target.getContent())\n              }}\n            />\n          <ErrorMessage name=\"education\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Form.Group label={t('general.bio')}>\n          <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"bio\"\n              initialValue={values.bio}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldTouched(\"bio\", true)\n                setFieldValue(\"bio\", e.target.getContent())\n              }}\n            />\n          <ErrorMessage name=\"bio\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.teacher_profile.url_bio')}>\n              <Field type=\"text\" \n                      name=\"urlBio\" \n                      className={(errors.urlBio) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"urlBio\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.teacher_profile.url_website')}>\n              <Field type=\"text\" \n                      name=\"urlWebsite\" \n                      className={(errors.urlWebsite) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"urlWebsite\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          \n          {/* <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsAccountTeacherProfileForm))\n\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_TEACHER_PROFILE_QUERY, UPDATE_ACCOUNT_TEACHER_PROFILE } from './queries'\nimport { ACCOUNT_TEACHER_PROFILE_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport RelationsAccountProfileForm from \"./RelationsAccountTeacherProfileForm\"\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase'\n\n\nfunction RelationsAccountTeacherProfile({ t, match}) {\n  const accountId = match.params.account_id\n  const activeLink = \"teacher_profile\"\n  const { loading, error, data } = useQuery(GET_ACCOUNT_TEACHER_PROFILE_QUERY, {\n    variables: { id: accountId }\n  })\n  const [updateAccountTeacherProfile] = useMutation(UPDATE_ACCOUNT_TEACHER_PROFILE)\n\n  if (loading) return (\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>  \n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      {console.log(error)}\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <p>{t('general.error_sad_smiley')}</p>\n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const account = data.account\n  const initialData = data.accountTeacherProfiles.edges[0].node\n\n  return (\n    <RelationsAccountProfileBase\n      user={account}\n      activeLink={activeLink}\n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            classes: initialData.classes, \n            appointments: initialData.appointments, \n            events: initialData.events, \n            role: initialData.role, \n            education: initialData.education, \n            bio: initialData.bio,\n            urlBio: initialData.urlBio,\n            urlWebsite: initialData.urlWebsite,\n          }}\n          validationSchema={ACCOUNT_TEACHER_PROFILE_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateAccountTeacherProfile({ variables: {\n                input: {\n                  account: initialData.account.id,\n                  classes: values.classes, \n                  appointments: values.appointments, \n                  events: values.events, \n                  role: values.role, \n                  education: values.education, \n                  bio: values.bio,\n                  urlBio: values.urlBio,\n                  urlWebsite: values.urlWebsite,\n                }\n              }, refetchQueries: [\n                  // Refresh local cached results for this account teacher profile\n                  {query: GET_ACCOUNT_TEACHER_PROFILE_QUERY, variables: {id: accountId}}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('relations.account.teacher_profile.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <RelationsAccountProfileForm\n              isSubmitting={isSubmitting}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              errors={errors}\n              values={values}\n            />\n          )}\n        </Formik>    \n      </Card>\n    </RelationsAccountProfileBase>\n  )\n}\n\n\n// class RelationsAccountTeacherProfile extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Organization profile props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const match = this.props.match\n//     const account_id = match.params.account_id\n//     console.log(account_id)\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//           <Container>\n//             <Query query={GET_ACCOUNT_TEACHER_PROFILE_QUERY} variables={{ id: account_id }} >\n//               {({ loading, error, data, refetch }) => {\n//                   // Loading\n//                   if (loading) return <p>{t('general.loading_with_dots')}</p>\n//                   // Error\n//                   if (error) {\n//                     console.log(error)\n//                     return <p>{t('general.error_sad_smiley')}</p>\n//                   }\n\n//                   console.log('query data')\n//                   console.log(data)\n                  \n//                   const account = data.account\n//                   const initialData = data.accountTeacherProfiles.edges[0].node\n//                   console.log(initialData)\n\n\n//                   return (\n//                     <div>\n//                       <Page.Header title={account.firstName + \" \" + account.lastName}>\n//                         <RelationsAccountsBack />\n//                       </Page.Header>\n//                       <Grid.Row>\n//                         <Grid.Col md={9}>\n//                         <Card>\n//                           <Card.Header>\n//                             <Card.Title>{t('relations.account.teacher_profile.title')}</Card.Title>\n//                             {console.log(match.params.account_id)}\n//                           </Card.Header>\n//                         <Mutation mutation={UPDATE_ACCOUNT_TEACHER_PROFILE}> \n//                          {(updateAccountTeacherProfile, { data }) => (\n//                           <Formik\n//                             initialValues={{ \n//                               classes: initialData.classes, \n//                               appointments: initialData.appointments, \n//                               events: initialData.events, \n//                               role: initialData.role, \n//                               education: initialData.education, \n//                               bio: initialData.bio,\n//                               urlBio: initialData.urlBio,\n//                               urlWebsite: initialData.urlWebsite,\n//                             }}\n//                             validationSchema={ACCOUNT_TEACHER_PROFILE_SCHEMA}\n//                             onSubmit={(values, { setSubmitting }) => {\n//                                 console.log('submit values:')\n//                                 console.log(values)\n\n//                                 updateAccountTeacherProfile({ variables: {\n//                                   input: {\n//                                     account: initialData.account.id,\n//                                     classes: values.classes, \n//                                     appointments: values.appointments, \n//                                     events: values.events, \n//                                     role: values.role, \n//                                     education: values.education, \n//                                     bio: values.bio,\n//                                     urlBio: values.urlBio,\n//                                     urlWebsite: values.urlWebsite,\n//                                   }\n//                                 }, refetchQueries: [\n//                                     // Refresh local cached results for this account teacher profile\n//                                     {query: GET_ACCOUNT_TEACHER_PROFILE_QUERY, variables: {id: account_id}}\n//                                 ]})\n//                                 .then(({ data }) => {\n//                                     console.log('got data', data)\n//                                     toast.success((t('relations.account.teacher_profile.toast_edit_success')), {\n//                                         position: toast.POSITION.BOTTOM_RIGHT\n//                                       })\n//                                     setSubmitting(false)\n//                                   }).catch((error) => {\n//                                     toast.error((t('general.toast_server_error')) +  error, {\n//                                         position: toast.POSITION.BOTTOM_RIGHT\n//                                       })\n//                                     console.log('there was an error sending the query', error)\n//                                     setSubmitting(false)\n//                                   })\n//                             }}\n//                             >\n//                             {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n//                               <RelationsAccountProfileForm\n//                                 isSubmitting={isSubmitting}\n//                                 setFieldTouched={setFieldTouched}\n//                                 setFieldValue={setFieldValue}\n//                                 errors={errors}\n//                                 values={values}\n//                               />\n//                             )}\n//                           </Formik>\n//                         )}\n//                       </Mutation>\n//                     </Card>\n//                     </Grid.Col>                                    \n//                     <Grid.Col md={3}>\n//                       <ProfileCardSmall user={account}/>\n//                       <ProfileMenu \n//                         activeLink='teacher_profile'\n//                         account_id={account_id}\n//                       /> \n//                     </Grid.Col>\n//                   </Grid.Row>\n//                 </div>\n//               )}}\n//             </Query>\n//           </Container>\n//         </div>\n//     </SiteWrapper>\n//     )}\n//   }\n\n\nexport default withTranslation()(withRouter(RelationsAccountTeacherProfile))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let queryVars = {}\n\n  let search = localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SEARCH)\n  let showArchived = localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE)\n  \n  if (search) {\n    queryVars.name = search\n  }\n  if (showArchived === \"true\") {\n    queryVars.archived = true\n  } else {\n    queryVars.archived = false\n  }\n  \n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n","\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n    Page,\n    Grid,\n    Icon,\n    Button,\n    Container,\n  } from \"tabler-react\";\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport InputSearch from \"../../general/InputSearch\"\nimport RelationsMenu from \"../RelationsMenu\"\nimport { get_list_query_variables } from \"./tools\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n\nconst RelationsB2BBase = ({t, history, refetch, children }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"relations.title\")}>\n          <div className=\"page-options d-flex\">\n            <InputSearch \n              initialValueKey={CSLS.RELATIONS_BUSINESSES_SEARCH}\n              placeholder=\"Search...\"\n              onChange={(value) => {\n                console.log(value)\n                localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SEARCH, value)\n                refetch(get_list_query_variables())\n              }}\n            />\n          </div>\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            {children}\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"business\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/relations/b2b/add\")}>\n                <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.b2b.add')}\n              </Button>\n            </HasPermissionWrapper>\n            <RelationsMenu activeLink='b2b'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n)\n\n\n  export default withTranslation()(withRouter(RelationsB2BBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_BUSINESSES_QUERY = gql`\n  query Businesses($before:String, $after:String, $name:String, $archived: Boolean!) {\n    businesses(first:15, before:$before, after:$after, b2b:true, name_Icontains:$name, archived:$archived) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          archived\n          b2b\n          supplier\n          vip\n          name\n          address\n          postcode\n          city\n          country\n          phone\n          phone2\n          emailContact\n          emailBilling\n          registration\n          taxRegistration\n          mollieCustomerId\n        }\n      }\n    }\n  }\n`\n\nexport const GET_BUSINESS_QUERY = gql`\n  query Business($id: ID!) {\n    business(id:$id) {\n      id\n      archived\n      vip\n      name\n      address\n      postcode\n      city\n      country\n      phone\n      phone2\n      emailContact\n      emailBilling\n      registration\n      taxRegistration\n      mollieCustomerId\n    }\n  }\n`\n\nexport const UPDATE_BUSINESS = gql`\n  mutation UpdateBusiness($input: UpdateBusinessInput!) {\n    updateBusiness(input: $input) {\n      business {\n        id\n        archived\n      }\n    }\n  }\n`\n\n","import React from 'react'\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\nimport {\n  Icon,\n} from \"tabler-react\";\n\n\nconst confirm_archive = ({t, msgConfirm, msgDescription, msgSuccess, archiveFunction, functionVariables}) => {\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className='custom-ui'>\n            <h1>{t('general.confirm_archive')}</h1>\n            {msgConfirm}\n            {msgDescription}\n            <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_archive_no')}</button>\n            <button\n              className=\"btn btn-warning\"\n              onClick={() => {\n                archiveFunction(functionVariables)\n                  .then(({ data }) => {\n                    console.log('got data', data);\n                    toast.success(\n                      msgSuccess, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                  })\n                onClose()\n              }}\n            >\n              <Icon name=\"inbox\" /> {t('general.confirm_archive_yes')}\n            </button>\n          </div>\n        )\n      }\n    })\n  }\n\nexport default confirm_archive\n","import React from 'react'\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\nimport {\n  Icon,\n} from \"tabler-react\";\n\n\nconst confirm_unarchive = ({t, msgConfirm, msgDescription, msgSuccess, archiveFunction, functionVariables}) => {\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className='custom-ui'>\n            <h1>{t('general.confirm_unarchive')}</h1>\n            {msgConfirm}\n            {msgDescription}\n            <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_unarchive_no')}</button>\n            <button\n              className=\"btn btn-warning\"\n              onClick={() => {\n                archiveFunction(functionVariables)\n                  .then(({ data }) => {\n                    console.log('got data', data);\n                    toast.success(\n                      msgSuccess, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                  })\n                onClose()\n              }}\n            >\n              <Icon name=\"corner-up-left\" /> {t('general.confirm_unarchive_yes')}\n            </button>\n          </div>\n        )\n      }\n    })\n  }\n\nexport default confirm_unarchive\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Badge,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport ContentCard from \"../../general/ContentCard\"\nimport RelationsB2BBase from \"./RelationsB2BBase\"\nimport { GET_BUSINESSES_QUERY, UPDATE_BUSINESS } from \"./queries\"\nimport { get_list_query_variables } from \"./tools\"\nimport confirm_archive from \"../../../tools/confirm_archive\"\nimport confirm_unarchive from \"../../../tools/confirm_unarchive\"\nimport confirm_delete from \"../../../tools/confirm_delete\"\n\n\n\n\nconst DELETE_BUSINESS = gql`\n  mutation DeleteBusiness($input: DeleteBusinessInput!) {\n    deleteBusiness(input: $input) {\n      ok\n    }\n  }\n`\n\n\nfunction RelationsB2B({ t, history }) {\n  // Set some initial value for archived, if not found\n  if (!localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE)) {\n    localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE, false) \n  }\n\n  const { loading, error, data, fetchMore, refetch } = useQuery(GET_BUSINESSES_QUERY, { \n    variables: get_list_query_variables()\n  })\n  const [updateBusiness] = useMutation(UPDATE_BUSINESS)\n  const [deleteBusiness] = useMutation(DELETE_BUSINESS)\n\n  const headerOptions = <Card.Options>\n    <Button color={(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"false\") ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {\n              localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE, false)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.current')}\n    </Button>\n    <Button color={(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"true\") ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {\n              localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE, true)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <RelationsB2BBase refetch={refetch}>\n      <ContentCard>\n        {t(\"general.loading_with_dots\")}\n      </ContentCard>\n    </RelationsB2BBase>\n  )\n  if (error) return (\n    <RelationsB2BBase refetch={refetch}>\n      <ContentCard cardTitle={t('relations.b2b.title')}>\n        <p>{t('relations.b2b.error_loading')}</p>\n      </ContentCard>\n    </RelationsB2BBase>\n  )\n\n  let businesses = data.businesses\n\n  // Empty list\n  if (!businesses.edges.length) { return (\n    <RelationsB2BBase refetch={refetch}>\n      <ContentCard cardTitle={t('relations.b2b.title')}\n                   headerContent={headerOptions}>\n        <p>\n          {(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"true\") ? \n            t('relations.b2b.empty_archive') : \n            t(\"relations.b2b.empty_list\")}\n        </p>\n      </ContentCard>\n    </RelationsB2BBase>\n  )}\n\n  console.log(data)\n\n  \n\n  return (\n    <RelationsB2BBase refetch={refetch}>\n      <ContentCard cardTitle={t('relations.b2b.title')}\n                    headerContent={headerOptions}\n                    pageInfo={businesses.pageInfo}\n                    onLoadMore={() => {\n                      fetchMore({\n                        variables: {\n                          after: businesses.pageInfo.endCursor\n                        },\n                        updateQuery: (previousResult, { fetchMoreResult }) => {\n                          const newEdges = fetchMoreResult.businesses.edges\n                          const pageInfo = fetchMoreResult.businesses.pageInfo \n\n                          return newEdges.length\n                            ? {\n                                // Put the new businesses at the end of the list and update `pageInfo`\n                                // so we have the new `endCursor` and `hasNextPage` values\n                                businesses: {\n                                  __typename: previousResult.businesses.__typename,\n                                  edges: [ ...previousResult.businesses.edges, ...newEdges ],\n                                  pageInfo\n                                }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {data.businesses.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Link to={`/relations/b2b/${node.id}/edit`}>\n                        <Button className='btn-sm' \n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                      </Link>\n                    }\n                  </Table.Col>\n                  {/* Archive / restore buttons */}\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.archive')} \n                      href=\"\"\n                      onClick={() => {\n                        console.log(\"clicked isActive\")\n                        let id = node.id\n                        let show_archive\n                        if (localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) == \"true\") {\n                          show_archive = true\n                        } else {\n                          show_archive = false\n                        }\n\n                        updateBusiness({ variables: {\n                          input: {\n                            id,\n                            archived: !node.archived // invert, as we need the opposite from the list currently displayed\n                          }}, \n                          refetchQueries: [\n                        {query: GET_BUSINESSES_QUERY, variables: get_list_query_variables()}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(\n                            (!show_archive) ? t('relations.b2b.archived'): t('relations.b2b.restored'), {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                      {\n                        (!node.archived) ?\n                          <Icon prefix=\"fa\" name=\"inbox\" /> :\n                          t(\"general.restore\")\n                      }\n                    </button>\n                  </Table.Col>\n\n                  {/* Delete button shown when archived */}\n                    {\n                      (!node.archived) ? '' :\n                        <Table.Col className=\"text-right\" key={v4()}>\n                        <button className=\"icon btn btn-link btn-sm\" \n                          title={t('general.delete')} \n                          href=\"\"\n                          onClick={() => {\n                            confirm_delete({\n                              t: t,\n                              msgConfirm: t(\"relations.b2b.delete_confirm_msg\"),\n                              msgDescription: <span><br /><br /><ul><li>{node.name}</li></ul></span>,\n                              msgSuccess: t('relations.b2b.deleted'),\n                              deleteFunction: deleteBusiness,\n                              functionVariables: { variables: {\n                                input: {\n                                  id: node.id\n                                }\n                              }, refetchQueries: [\n                                {query: GET_BUSINESSES_QUERY, variables: get_list_query_variables()}\n                              ]}\n                            })\n                          }}\n                        >\n                          <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                        </button>\n                      </Table.Col>\n                    }\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>  \n    </RelationsB2BBase>  \n  )\n}\n\n\n// const RelationsB2B = ({ t, history }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Query query={GET_ACCOUNTS_QUERY} variables={get_list_query_variables()} notifyOnNetworkStatusChange>\n//         {({ loading, error, data, refetch, fetchMore, variables}) => {\n//           // Loading\n//           if (loading) return (\n//             <RelationsAccountsBase refetch={refetch}>\n//               <ContentCard cardTitle={t('relations.b2b.title')}>\n//                 <Dimmer active={true}\n//                         loader={true}>\n//                 </Dimmer>\n//               </ContentCard>\n//             </RelationsAccountsBase>\n//           )\n//           // Error\n//           if (error) return (\n//             <RelationsAccountsBase>\n//               <Container>\n//                 <ContentCard cardTitle={t('relations.b2b.title')}>\n//                   <p>{t('relations.b2b.error_loading')}</p>\n//                 </ContentCard>\n//               </Container>\n//             </RelationsAccountsBase>\n//           )\n//           const headerOptions = <Card.Options>\n//             <Button color={(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"true\") ? 'primary': 'secondary'}  \n//                     size=\"sm\"\n//                     onClick={() => {\n//                       localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE, true)\n//                       refetch(get_list_query_variables())\n//                     }\n//             }>\n//               {t('general.active')}\n//             </Button>\n//             <Button color={(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"false\") ? 'primary': 'secondary'} \n//                     size=\"sm\" \n//                     className=\"ml-2\" \n//                     onClick={() => {\n//                       localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE, false)\n//                       refetch(get_list_query_variables())\n//                     }\n//             }>\n//               {t('general.deleted')}\n//             </Button>\n//           </Card.Options>\n          \n//           // Empty list\n//           if (!data.businesses.edges.length) { return (\n//             <RelationsAccountsBase refetch={refetch}>\n//               <ContentCard cardTitle={t('relations.b2b.title')}\n//                             headerContent={headerOptions}>\n//                 <p>\n//                   {(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"true\") ? \n//                     t('relations.b2b.empty_list') : \n//                     t(\"relations.b2b.empty_archive\")}\n//                 </p>\n//               </ContentCard>\n//             </RelationsAccountsBase>\n//           )} else {   \n//           // Life's good! :)\n//           return (\n//             <RelationsAccountsBase refetch={refetch}>\n//               {console.log('query vars:')}\n//               {console.log(variables)}\n//               <ContentCard cardTitle={t('relations.b2b.title')}\n//                            headerContent={headerOptions}\n//                            pageInfo={data.businesses.pageInfo}\n//                            onLoadMore={() => {\n//                              fetchMore({\n//                                variables: {\n//                                  after: data.businesses.pageInfo.endCursor\n//                                },\n//                                updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                  const newEdges = fetchMoreResult.businesses.edges\n//                                  const pageInfo = fetchMoreResult.businesses.pageInfo \n\n//                                  return newEdges.length\n//                                    ? {\n//                                        // Put the new businesses at the end of the list and update `pageInfo`\n//                                        // so we have the new `endCursor` and `hasNextPage` values\n//                                       data: {\n//                                         businesses: {\n//                                           __typename: previousResult.businesses.__typename,\n//                                           edges: [ ...previousResult.businesses.edges, ...newEdges ],\n//                                           pageInfo\n//                                         }\n//                                       }\n//                                     }\n//                                   : previousResult\n//                               }\n//                             })\n//                           }} >\n//                 <Table>\n//                   <Table.Header>\n//                     <Table.Row key={v4()}>\n//                       <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                     </Table.Row>\n//                   </Table.Header>\n//                   <Table.Body>\n//                       {data.businesses.edges.map(({ node }) => (\n//                         <Table.Row key={v4()}>\n//                           <Table.Col key={v4()}>\n//                             {node.name}\n//                           </Table.Col>\n//                           {/* <Table.Col key={v4()}>\n//                             {node.email}\n//                           </Table.Col> */}\n//                           <Table.Col className=\"text-right\" key={v4()}>\n//                             {(!node.archived) ? \n//                               <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n//                               <Button className='btn-sm' \n//                                       onClick={() => history.push(\"/relations/businesses/\" + node.id + \"/edit\")}\n//                                       color=\"secondary\">\n//                                 {t('general.edit')}\n//                               </Button>\n//                             }\n//                           </Table.Col>\n//                           {/* <Mutation mutation={UPDATE_ACCOUNT_ACTIVE} key={v4()}>\n//                             {(updateAccountActive, { data }) => (\n//                               <Table.Col className=\"text-right\" key={v4()}>\n//                                 <button className=\"icon btn btn-link btn-sm\" \n//                                   title={t('general.deactivate')} \n//                                   href=\"\"\n//                                   onClick={() => {\n//                                     console.log(\"clicked archived\")\n//                                     let id = node.id\n//                                     let archived \n//                                     if (localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) == \"true\") {\n//                                       archived = true\n//                                     } else {\n//                                       archived = false\n//                                     }\n\n//                                     updateAccountActive({ variables: {\n//                                       input: {\n//                                         id,\n//                                         archived: !archived // invert, as we need the opposite from the list currently displayed\n//                                       }\n//                                 }, refetchQueries: [\n//                                     {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()}\n//                                 ]}).then(({ data }) => {\n//                                   console.log('got data', data);\n//                                   toast.success(\n//                                     (archived) ? t('relations.b2b.deactivated'): t('relations.b2b.restored')``, {\n//                                       position: toast.POSITION.BOTTOM_RIGHT\n//                                     })\n//                                 }).catch((error) => {\n//                                   toast.error((t('general.toast_server_error')) +  error, {\n//                                       position: toast.POSITION.BOTTOM_RIGHT\n//                                     })\n//                                   console.log('there was an error sending the query', error);\n//                                 })\n//                                 }}>\n//                                   {\n//                                     (node.archived) ?\n//                                       <Icon prefix=\"fe\" name=\"trash-2\" /> :\n//                                       t(\"general.restore\")\n//                                   }\n//                                 </button>\n//                               </Table.Col>\n//                             )}\n//                           </Mutation> */}\n//                           {/* {\n//                             (node.archived) ? '' :\n//                               <Mutation mutation={DELETE_ACCOUNT} key={v4()}>\n//                                 {(deleteAccount, { data }) => (\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     <button className=\"icon btn btn-link btn-sm\" \n//                                       title={t('general.delete')} \n//                                       href=\"\"\n//                                       onClick={() => {\n//                                         confirm_delete({\n//                                           t: t,\n//                                           msgConfirm: t(\"relations.b2b.delete_confirm_msg\"),\n//                                           msgDescription: <p>{node.first_name} {node.last_name}</p>,\n//                                           msgSuccess: t('relations.b2b.deleted'),\n//                                           deleteFunction: deleteAccount,\n//                                           functionVariables: { variables: {\n//                                             input: {\n//                                               id: node.id\n//                                             }\n//                                           }, refetchQueries: [\n//                                             {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()}\n//                                           ]}\n//                                         })\n//                                     }}>\n//                                       <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n//                                     </button>\n//                                   </Table.Col>\n//                                 )}\n//                               </Mutation>\n//                           } */}\n//                         </Table.Row>\n//                       ))}\n//                   </Table.Body>\n//                 </Table>\n//               </ContentCard>\n//             </RelationsAccountsBase>\n//           )}}\n//         }\n//       </Query>\n//     </div>\n//   </SiteWrapper>\n// )\n\nexport default withTranslation()(withRouter(RelationsB2B))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nconst RelationsB2BAddFrom = ({ t, history, isSubmitting, errors, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group label={t('general.name')}>\n                <Field type=\"text\" \n                        name=\"name\" \n                        className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\" />\n                <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsB2BAddFrom))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_BUSINESSES_QUERY } from './queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { get_list_query_variables } from \"./tools\"\nimport RelationsB2BAddForm from \"./RelationB2BAddForm\"\nimport RelationsMenu from '../RelationsMenu'\n\n\nconst ADD_BUSINESS = gql`\n  mutation CreateBusiness($input:CreateBusinessInput!) {\n    createBusiness(input: $input) {\n      business {\n        id\n      }\n    }\n  }\n`\n\nconst return_url = \"/relations/b2b\"\n\nfunction RelationsB2BAdd({ t, history }) {\n  const [addBusiness] = useMutation(ADD_BUSINESS)\n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('relations.title')} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n            <Card>\n              <Card.Header>\n                <Card.Title>{t('relations.b2b.title_add')}</Card.Title>\n              </Card.Header>\n                <Formik\n                    initialValues={{ name: '' }}\n                    // validationSchema={B2BADD_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n                        addBusiness({ variables: {\n                          input: {\n                            name: values.name,\n                            b2b: true\n                          }\n                        }, refetchQueries: [\n                            {query: GET_BUSINESSES_QUERY, variables: get_list_query_variables()}\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data)\n                            const businessId = data.createBusiness.business.id\n                            history.push(`/relations/b2b/${businessId}/edit`)\n                            toast.success((t('relations.b2b.toast_add_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setSubmitting(false)\n                          })\n                    }}\n                    >\n                    {({ isSubmitting, errors }) => (\n                        <RelationsB2BAddForm\n                          isSubmitting={isSubmitting}\n                          errors={errors}\n                          return_url={return_url}\n                        />\n                    )}\n                </Formik>\n            </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"business\">\n                <Button color=\"primary btn-block mb-6\"\n                        onClick={() => history.push(return_url)}>\n                  <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                </Button>\n              </HasPermissionWrapper>\n              <RelationsMenu activeLink='accounts'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsB2BAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Button,\n  Icon,\n  Page,\n  Grid,\n  Card,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n// import OrganizationMenu from \"../OrganizationMenu\"\n// import ProfileMenu from \"./ProfileMenu\"\n\n\nfunction RelationsB2BEditBase({ t, match, history, children, cardTitle=\"\" }) {\n  const returnUrl = \"/relations/b2b\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"relations.title\")}>\n            {/* <RelationsAccountsBack /> */}\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n            <Card>\n              <Card.Header>\n                <Card.Title>{cardTitle}</Card.Title>\n              </Card.Header>\n              {children}\n            </Card>\n            </Grid.Col>                                    \n            <Grid.Col md={3}>\n              {/* B2B relation menu goes here */}\n              <HasPermissionWrapper permission=\"change\"\n                                    resource=\"business\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              {/* <RelationsMenu activeLink='b2b'/> */}\n              {/* <ProfileMenu \n                activeLink='profile'\n                account_id={account_id}\n              />  */}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsB2BEditBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport ISO_COUNTRY_CODES from \"../../../tools/iso_country_codes\"\n\n\nfunction RelationsB2BEditForm({ t, history, isSubmitting, errors, values, return_url, setFieldTouched, setFieldValue }) {\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.name')}>\n              <Field type=\"text\" \n                      name=\"name\" \n                      className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.email_contact')}>\n              <Field type=\"text\" \n                      name=\"emailContact\" \n                      className={(errors.emailContact) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"emailContact\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.email_billing')}>\n              <Field type=\"text\" \n                      name=\"emailBilling\" \n                      className={(errors.emailBilling) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"emailBilling\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.phone')}>\n              <Field type=\"text\" \n                      name=\"phone\" \n                      className={(errors.phone) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"phone\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n          <Form.Group label={t('general.phone2')}>\n              <Field type=\"text\" \n                      name=\"phone2\" \n                      className={(errors.phone2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"phone2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.address')}>\n              <Field type=\"text\" \n                      name=\"address\" \n                      className={(errors.address) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"address\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.postcode')}>\n              <Field type=\"text\" \n                      name=\"postcode\" \n                      className={(errors.postcode) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"postcode\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.city')}>\n              <Field type=\"text\" \n                      name=\"city\" \n                      className={(errors.city) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"city\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.country')}>\n              <Field component=\"select\" \n                    name=\"country\" \n                    className={(errors.country) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\"></option>\n                { ISO_COUNTRY_CODES.map(\n                    country => <option value={country.Code} key={v4()}>{country.Name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"country\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('finance.invoices.relation_company_registration')}>\n              <Field type=\"text\" \n                      name=\"registration\" \n                      className={(errors.registration) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"registration\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n          <Form.Group label={t('finance.invoices.relation_company_tax_registration')}>\n              <Field type=\"text\" \n                      name=\"taxRegistration\" \n                      className={(errors.taxRegistration) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"taxRegistration\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          \n          {/* <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button> */}\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsB2BEditForm))\n\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_BUSINESSES_QUERY, GET_BUSINESS_QUERY, UPDATE_BUSINESS } from './queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\n\nimport { get_list_query_variables } from \"./tools\"\nimport RelationsB2BEditBase from './RelationsB2BEditBase'\n// import RelationsAccountsBack from \"./RelationsAccountsBack\"\nimport RelationsB2BEditForm from \"./RelationsB2BEditForm\"\n\n// import OrganizationMenu from \"../OrganizationMenu\"\n// import ProfileMenu from \"./ProfileMenu\"\n\nfunction RelationsB2BEdit({ t, match, history}) {\n  const businessId = match.params.business_id\n  const [updateBusiness] = useMutation(UPDATE_BUSINESS)\n  const { loading, error, data, refetch } = useQuery(GET_BUSINESS_QUERY, {\n    variables: {\n      id: businessId\n    }\n  })\n\n  // Loading\n  if (loading) return <RelationsB2BEditBase>\n      <Card.Body>{t('general.loading_with_dots')}</Card.Body>\n    </RelationsB2BEditBase>\n  // Error\n  if (error) {\n    console.log(error)\n    return <RelationsB2BEditBase>\n      <Card.Body>{t('general.error_sad_smiley')}</Card.Body>\n    </RelationsB2BEditBase>\n  }\n\n  const initialData = data.business\n  console.log(initialData)\n\n  return (\n    <RelationsB2BEditBase cardTitle={t('relations.b2b.title_edit')}>\n      <Formik\n        initialValues={{ \n          name: initialData.name,\n          phone: initialData.phone,\n          phone2: initialData.phone2,\n          address: initialData.address,\n          postcode: initialData.postcode,\n          city: initialData.city,\n          country: initialData.country,\n          emailBilling: initialData.emailBilling,\n          emailContact: initialData.emailContact,\n          registration: initialData.registration,\n          taxRegistration: initialData.taxRegistration\n        }}\n        // validationSchema={ACCOUNT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            let input_vars = {\n              id: businessId,\n              name: values.name,\n              phone: values.phone,\n              phone2: values.phone2,\n              address: values.address,\n              postcode: values.postcode,\n              city: values.city,\n              country: values.country,\n              emailBilling: values.emailBilling,\n              emailContact: values.emailContact,\n              registration: values.registration,\n              taxRegistration: values.taxRegistration\n            }\n\n            updateBusiness({ variables: {\n              input: input_vars\n            }, refetchQueries: [\n                // Refetch list\n                {query: GET_BUSINESSES_QUERY, variables: get_list_query_variables()},\n                // Refresh local cached results for this account\n                {query: GET_BUSINESS_QUERY, variables: {\"id\": businessId}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('relations.b2b.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <RelationsB2BEditForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n          />\n        )}\n      </Formik>\n    </RelationsB2BEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsB2BEdit))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\n\nlet appointments_active\nlet events_active\nlet classes_active\n\nconst ScheduleMenu = ({ t, activeLink }) => (\n  <List.Group transparent={true}>\n    {(activeLink === 'appointments') ? appointments_active = true: appointments_active = false}\n    {(activeLink === 'events') ? events_active = true: events_active = false}\n    {(activeLink === 'classes') ? classes_active = true: classes_active = false}\n    \n\n    <HasPermissionWrapper \n        resource=\"scheduleclass\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to=\"#/schedule/classes\"\n          icon=\"book\"\n          active={classes_active}\n          >\n          {t('schedule.classes.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    <HasPermissionWrapper \n        resource=\"scheduleevent\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to=\"#/schedule/events\"\n          icon=\"clipboard\"\n          active={events_active}\n          >\n          {t('schedule.events.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    {/* <HasPermissionWrapper \n        resource=\"scheduleappointment\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to=\"#/schedule/appointments\"\n          icon=\"calendar\"\n          active={appointments_active}\n          >\n          {t('schedule.appointments.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper> */}\n  </List.Group>\n);\n\nexport default withTranslation()(ScheduleMenu)","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport ScheduleMenu from \"../ScheduleMenu\"\n\n\nclass ScheduleHome extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Schedule home props:\")\n    console.log(props)\n  }\n\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"schedule.title\")} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n                <Grid.Row>\n                  <HasPermissionWrapper\n                    resource=\"scheduleclass\"\n                    permission=\"view\"\n                  >\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/schedule/classes'>\n                        <StampCard header={<small>{t('schedule.classes.title')}</small>} footer={t('')} color=\"blue\" icon=\"book\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                  <HasPermissionWrapper\n                    resource=\"scheduleevent\"\n                    permission=\"view\"\n                  >\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/schedule/events'>\n                        <StampCard header={<small>{t('schedule.events.title')}</small>} footer={t('')} color=\"blue\" icon=\"clipboard\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                  {/* <HasPermissionWrapper\n                    resource=\"scheduleappointment\"\n                    permission=\"view\"\n                  >\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/schedule/appointments')}>\n                        <StampCard header={<small>{t('schedule.appointments.title')}</small>} footer={t('')} color=\"blue\" icon=\"calendar\" />\n                      </div>\n                    </Grid.Col>\n                  </HasPermissionWrapper> */}\n                </Grid.Row>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <ScheduleMenu />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(ScheduleHome))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let orderBy\n  let organizationAppointment\n  let organizationLocation\n\n  let queryVars = {\n    dateFrom: localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM), \n    dateUntil: localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL)\n  }\n\n  orderBy = localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY)\n  if (orderBy) {\n    queryVars.orderBy = orderBy\n  }\n\n  organizationAppointment = localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE)\n  if (organizationAppointment) {\n    queryVars.organizationAppointment = organizationAppointment\n  } else {\n    queryVars.organizationAppointment = \"\"\n  }\n\n  organizationLocation = localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_FILTER_LOCATION)\n  if (organizationLocation) {\n    queryVars.organizationLocation = organizationLocation\n  } else {\n    queryVars.organizationLocation = \"\"\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from './tools'\n\n\nfunction getDefaultValue(value) {\n  let defaultValue = localStorage.getItem(value)\n  if (defaultValue) {\n    return defaultValue\n  } else {\n    return \"\"\n  }\n}\n\n\nfunction updateLocalStorageAndRefetch(key, value, refetch) {\n  localStorage.setItem(key, value)\n  refetch(get_list_query_variables())\n}\n\nconst selectClass = \"form-control mb-2\"\n\n\nconst ScheduleAppointmentsFilter = ({ t, history, data, refetch }) => (\n  <div>\n    {/* Locations */}\n    <select \n      className={selectClass}\n      defaultValue={getDefaultValue(CSLS.SCHEDULE_APPOINTMENTS_FILTER_LOCATION)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.SCHEDULE_APPOINTMENTS_FILTER_LOCATION,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"schedule.appointments.filter_all_locations\")}</option>\n      {data.organizationLocations.edges.map(({ node }) =>\n        <option value={node.id} key={v4()}>{node.name}</option>\n      )}\n    </select>\n    {/* Appointments */}\n    {/* <select \n      className={selectClass}\n      defaultValue={getDefaultValue(CSLS.SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"schedule.appointments.filter_all_appointments\")}</option>\n      {data.organizationAppointments.edges.map(({ node }) =>\n        <option value={node.id} key={v4()}>{node.name}</option>\n      )}\n    </select> */}\n  </div>\n);\n\nexport default withTranslation()(withRouter(ScheduleAppointmentsFilter))","import { gql } from \"@apollo/client\"\n\nexport const GET_APPOINTMENTS_QUERY = gql`\n  query ScheduleAppointments(\n      $dateFrom: Date!, \n      $dateUntil:Date!, \n      $orderBy: String, \n      $organizationLocation: String\n    ){\n    scheduleAppointments(\n        dateFrom:$dateFrom, \n        dateUntil: $dateUntil, \n        orderBy: $orderBy, \n        organizationLocation: $organizationLocation\n    ){\n      date\n      appointments {\n        scheduleItemId\n        frequencyType\n        date\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationAppointment {\n          id\n          name\n        }\n        timeStart\n        timeEnd\n        displayPublic\n      }\n    }\n    user {\n      id\n      isActive\n      email\n      firstName\n      lastName\n      groups {\n        edges {\n          node {\n            id\n            name\n            permissions {\n              edges {\n                node {\n                  id\n                  name\n                  codename\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    organizationLocations(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationAppointments(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_APPOINTMENT_QUERY = gql`\n  query ScheduleItem($id: ID!, $before: String, $after: String, $archived: Boolean!) {\n    scheduleItem(id:$id) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleClassInputValues($after: String, $before: String, $archived: Boolean) {\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n    organizationAppointments(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Badge,\n  Dropdown,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table,\n  Text,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\n\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport ContentCard from \"../../general/ContentCard\"\nimport ScheduleMenu from \"../ScheduleMenu\"\nimport ScheduleAppointmentsFilter from \"./ScheduleAppointmentsFilter\"\n\nimport { GET_APPOINTMENTS_QUERY } from \"./queries\"\nimport { get_list_query_variables } from './tools'\n\nimport moment from 'moment'\n\n\nconst DELETE_SCHEDULE_APPOINTMENT = gql`\n  mutation DeleteScheduleAppointment($input: DeleteScheduleAppointmentInput!) {\n    deleteScheduleAppointment(input: $input) {\n      ok\n    }\n  }\n`\n\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM)) {\n  console.log('date from not found... defaulting to today...')\n  localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM, moment().format('YYYY-MM-DD')) \n  localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL, moment().add(6, 'days').format('YYYY-MM-DD')) \n} \n\n\nconst ScheduleAppointments = ({ t, history }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Query query={GET_APPOINTMENTS_QUERY} variables={get_list_query_variables()}>\n        {({ loading, error, data, refetch }) => {\n          // Loading\n          if (loading) return (\n            <Container>\n              <p>{t('general.loading_with_dots')}</p>\n            </Container>\n          )\n          // Error\n          if (error) {\n            console.log(error)\n            return (\n              <Container>\n                <p>{t('general.error_sad_smiley')}</p>\n              </Container>\n            )\n          }\n          \n          // Empty list\n          if (!data.scheduleAppointments.length) { return (\n            <ContentCard cardTitle={t('schedule.appointments.title')}>\n              <p>\n                {t('schedule.appointments.empty_list')}\n              </p>\n            </ContentCard>\n          )} else {   \n          // Life's good! :)\n          return (\n            <Container>\n              <Page.Header title={t(\"schedule.title\")}>\n                <div className=\"page-options d-flex\">\n                  <span title={t(\"schedule.appointments.tooltip_sort_by_location\")}>\n                    <Button \n                      icon=\"home\"\n                      tooltip=\"text\"\n                      className=\"mr-2\"\n                      color={\n                        ((localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY) === \"location\") || (!localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY))) ?\n                        \"azure\" : \"secondary\"\n                      }\n                      onClick={() => {\n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY, \"location\")\n                        refetch(get_list_query_variables())\n                      }}\n                    />\n                  </span>\n                  <span title={t(\"schedule.appointments.tooltip_sort_by_starttime\")}>\n                    <Button \n                      icon=\"clock\"\n                      className=\"mr-2\"\n                      color={\n                        (localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY) === \"starttime\") ?\n                        \"azure\" : \"secondary\"\n                      }\n                      onClick={() => {\n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY, \"starttime\")\n                        refetch(get_list_query_variables())\n                      }}\n                    />\n                  </span>\n                  <CSDatePicker \n                    className=\"form-control schedule-list-csdatepicker mr-2\"\n                    selected={new Date(localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM))}\n                    isClearable={false}\n                    onChange={(date) => {\n                      let nextWeekFrom = moment(date)\n                      let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n\n                      localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                      localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                      console.log(get_list_query_variables())\n\n                      refetch(get_list_query_variables())\n                    }}\n                    placeholderText={t('schedule.appointments.go_to_date')}\n                  />\n                  <Button.List className=\"schedule-list-page-options-btn-list\">\n                    <Button \n                      icon=\"chevron-left\"\n                      color=\"secondary\"\n                      onClick={ () => {\n                        let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM)).subtract(7, 'days')\n                        let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                        \n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                        refetch(get_list_query_variables())\n                    }} />\n                    <Button \n                      icon=\"sun\"\n                      color=\"secondary\"\n                      onClick={ () => {\n                        let currentWeekFrom = moment()\n                        let currentWeekUntil = moment(currentWeekFrom).add(6, 'days')\n\n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM, currentWeekFrom.format('YYYY-MM-DD')) \n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL, currentWeekUntil.format('YYYY-MM-DD')) \n                        \n                        refetch(get_list_query_variables())\n                    }} />\n                    <Button \n                      icon=\"chevron-right\"\n                      color=\"secondary\"\n                      onClick={ () => {\n                        let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM)).add(7, 'days')\n                        let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                        \n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                        refetch(get_list_query_variables())\n                    }} />\n                  </Button.List> \n                </div>\n              </Page.Header>\n              <Grid.Row>\n                <Grid.Col md={9}>\n                  { data.scheduleAppointments.map(({ date, appointments }) => (\n                    <div key={v4()}>\n                      <Card>\n                        <Card.Header>\n                          <Card.Title>\n                            <b>{moment(date).format(\"dddd\")}</b> {' '}\n                            <span className=\"text-muted\">\n                              {moment(date).format(\"LL\")} \n                            </span>\n                          </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                          {!(appointments.length) ? t('schedule.appointments.empty_list') :\n                            <Table>\n                              <Table.Header>\n                                <Table.Row key={v4()}>\n                                  <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n                                  <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n                                  <Table.ColHeader>{t('general.appointment')}</Table.ColHeader>\n                                  <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                                  <Table.ColHeader></Table.ColHeader>\n                                </Table.Row>\n                              </Table.Header>\n                              <Table.Body>\n                                {appointments.map((\n                                  { scheduleItemId, \n                                    frequencyType,\n                                    date, \n                                    organizationLocationRoom, \n                                    organizationAppointment, \n                                    timeStart, \n                                    timeEnd,\n                                    displayPublic }) => (\n                                  <Table.Row key={v4()}>\n                                    <Table.Col>\n                                      {/* Start & end time */}\n                                      {moment(date + ' ' + timeStart).format('LT')} {' - '}\n                                      {moment(date + ' ' + timeEnd).format('LT')} { ' ' }\n                                      {(frequencyType === 'SPECIFIC') ? <Badge color=\"primary\">{t('general.once')}</Badge> : null }\n                                    </Table.Col>\n                                    <Table.Col>\n                                      {/* Location */}\n                                      {organizationLocationRoom.organizationLocation.name} {' '}\n                                      <span className=\"text-muted\"> &bull; {organizationLocationRoom.name}</span>\n                                    </Table.Col>\n                                    <Table.Col>\n                                      {/* Type */}\n                                      {/* {organizationAppointment.name} <br /> */}\n                                    </Table.Col>\n                                    <Table.Col>\n                                      {/* Public */}\n                                      <BadgeBoolean value={displayPublic} />\n                                    </Table.Col>\n                                    <Table.Col>\n                                      <Dropdown\n                                        key={v4()}\n                                        className=\"pull-right\"\n                                        type=\"button\"\n                                        toggle\n                                        color=\"secondary btn-sm\"\n                                        triggerContent={t(\"general.actions\")}\n                                        items={[\n                                          <Dropdown.Item key={v4()}>Dropdown Link</Dropdown.Item>,\n                                          <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleclass\">\n                                            <Dropdown.ItemDivider key={v4()} />\n                                            <Dropdown.Item\n                                              key={v4()}\n                                              badge={t('schedule.appointments.all_appointments_in_series')}\n                                              badgeType=\"secondary\"\n                                              icon=\"edit-2\"\n                                              onClick={() => history.push('/schedule/appointments/all/edit/' + scheduleItemId)}>\n                                                {t(\"general.edit\")}\n                                            </Dropdown.Item>\n                                          </HasPermissionWrapper>,\n                                          <HasPermissionWrapper key={v4()} permission=\"delete\" resource=\"scheduleclass\">\n                                            <Dropdown.ItemDivider key={v4()} />\n                                            <Mutation mutation={DELETE_SCHEDULE_APPOINTMENT} key={v4()}>\n                                              {(deleteScheduleAppointment, { data }) => (\n                                                  <Dropdown.Item\n                                                    key={v4()}\n                                                    badge={t('schedule.appointments.all_appointments_in_series')}\n                                                    badgeType=\"danger\"\n                                                    icon=\"trash-2\"\n                                                    onClick={() => {\n                                                      confirm_delete({\n                                                        t: t,\n                                                        msgConfirm: t(\"schedule.appointments.delete_confirm_msg\"),\n                                                        msgDescription: <p key={v4()}>\n                                                          {moment(date + ' ' + timeStart).format('LT')} {' - '}\n                                                          {moment(date + ' ' + timeEnd).format('LT')} {' '} @ {' '}\n                                                          {organizationLocationRoom.organizationLocation.name} {' '}\n                                                          {organizationLocationRoom.name}\n                                                          </p>,\n                                                        msgSuccess: t('schedule.appointments.deleted'),\n                                                        deleteFunction: deleteScheduleAppointment,\n                                                        functionVariables: { variables: {\n                                                          input: {\n                                                            id: scheduleItemId\n                                                          }\n                                                        }, refetchQueries: [\n                                                          { query: GET_APPOINTMENTS_QUERY, variables: get_list_query_variables() }\n                                                        ]}\n                                                      })\n                                                  }}>\n                                                  {t(\"general.delete\")}\n                                                  </Dropdown.Item>\n                                              )}\n                                            </Mutation>\n                                          </HasPermissionWrapper>\n                                        ]}\n                                      />\n                                    </Table.Col>\n                                  </Table.Row>\n                                ))}\n                              </Table.Body>\n                            </Table>\n                          }\n                        </Card.Body>\n                      </Card>\n                    </div>\n                    ))}\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"scheduleclass\">\n                  <Button color=\"primary btn-block mb-1\"\n                          onClick={() => history.push(\"/schedule/appointments/add\")}>\n                    <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.appointments.add')}\n                  </Button>\n                </HasPermissionWrapper>\n                <div>\n                  <Button\n                    className=\"pull-right\"\n                    color=\"link\"\n                    size=\"sm\"\n                    onClick={() => {\n                      localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE, \"\")\n                      localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_FILTER_LEVEL, \"\")\n                      localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_FILTER_LOCATION, \"\")\n                      refetch(get_list_query_variables())\n                    }}\n                  >\n                    {t(\"general.clear\")}\n                  </Button>\n                </div>\n                <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n                <ScheduleAppointmentsFilter data={data} refetch={refetch} />\n                <h5>{t(\"general.menu\")}</h5>\n                <ScheduleMenu activeLink='appointments'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      )}}}\n      </Query>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(ScheduleAppointments))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nlet edit_active\nlet teachers_available_active\n\nconst AppointmentEditMenu = ({ t, activeLink, appointmentId }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'edit') ? edit_active = true: edit_active = false}\n        {(activeLink === 'teachers_available') ? teachers_available_active = true: teachers_available_active = false}\n        \n        <HasPermissionWrapper\n          resource=\"scheduleappointment\"\n          permission=\"change\"\n        >        \n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to={\"#/schedule/appointments/all/edit/\" + appointmentId}\n              icon=\"edit-3\"\n              active={edit_active}\n              >\n              {t('general.edit')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper\n          resource=\"scheduleappointment\"\n          permission=\"change\"\n        >     \n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to={\"#/schedule/appointments/all/teachers_available/\" + appointmentId}\n              icon=\"users\"\n              active={teachers_available_active}\n              >\n              {t('general.teachers_available')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n    </List.Group>\n);\n\nexport default withTranslation()(AppointmentEditMenu)","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const APPOINTMENT_SCHEMA = Yup.object().shape({\n    frequencyType: Yup.string()\n      .required(t('yup.field_required')),\n    organizationLocationRoom: Yup.string()\n      .required(t('yup.field_required')),\n    dateStart: Yup.date()\n      .required(t('yup.field_required')),\n    timeStart: Yup.date()\n      .typeError(t('yup.time_required'))\n      .required(t('yup.field_required')),\n    timeEnd: Yup.date()\n      .typeError(t('yup.time_required'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport DatePicker from \"react-datepicker\"\nimport { withTranslation } from 'react-i18next'\n\nconst CSTimePicker = ({t, selected, onChange=f=>f, onBlur=f=>f, className=\"form-control\", clearable=true, placeholderText=\"\"}) =>\n    <DatePicker \n        todayButton={t('general.today')}\n        dateFormat={t('system.datepicker_timeformat')}\n        selected={selected}\n        placeholderText={(placeholderText) ? placeholderText : t('datepicker.placeholder_time')}\n        isClearable={clearable}\n        showTimeSelect\n        showTimeSelectOnly\n        timeIntervals={15}\n        className={className}\n        dropdownMode=\"select\"\n        onChange={(date) => onChange(date)}\n        onBlur={() => onBlur()}\n    />\n\nexport default withTranslation()(CSTimePicker)","import React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport CSTimePicker from \"../../ui/CSTimePicker\"\n\nconst ScheduleAppointmentForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, touched, return_url }) => (\n    <FoForm>\n      <Card.Body>\n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"displayPublic\" \n              checked={values.displayPublic} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('schedule.appointments.public')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n        </Form.Group>  \n        <Form.Group label={t('schedule.appointments.frequencyType')}>\n          <Field component=\"select\" \n                name=\"frequencyType\" \n                className={(errors.frequencyType) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"SPECIFIC\" key={v4()}>{t('schedule.appointments.select_specific')}</option>\n            <option value=\"WEEKLY\" key={v4()}>{t('schedule.appointments.select_weekly')}</option>\n          </Field>\n          <ErrorMessage name=\"frequencyType\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n          <Form.Group label={t('schedule.appointments.frequencyInterval')}>\n            <Field component=\"select\" \n                  name=\"frequencyInterval\" \n                  className={(errors.frequencyInterval) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"1\" key={v4()}>{t('general.monday')}</option>\n              <option value=\"2\" key={v4()}>{t('general.tuesday')}</option>\n              <option value=\"3\" key={v4()}>{t('general.wednesday')}</option>\n              <option value=\"4\" key={v4()}>{t('general.thursday')}</option>\n              <option value=\"5\" key={v4()}>{t('general.friday')}</option>\n              <option value=\"6\" key={v4()}>{t('general.saturday')}</option>\n              <option value=\"7\" key={v4()}>{t('general.sunday')}</option>\n            </Field>\n            <ErrorMessage name=\"frequencyInterval\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        }\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.location')}>\n              <Field component=\"select\" \n                    name=\"organizationLocationRoom\" \n                    className={(errors.organizationLocationRoom) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.please_select\")}</option>\n                {inputData.organizationLocationRooms.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.organizationLocation.name} - {node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLocationRoom\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        {/* <Form.Group label={t('general.appointment')}>\n          <Field component=\"select\" \n                name=\"organizationAppointment\" \n                className={(errors.organizationAppointment) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"\" key={v4()}>{t(\"general.please_select\")}</option>\n            {inputData.organizationAppointments.edges.map(({ node }) =>\n              <option value={node.id} key={v4()}>{node.name}</option>\n            )}\n          </Field>\n          <ErrorMessage name=\"organizationAppointment\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>  */}\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={(values.frequencyType == \"SPECIFIC\") ? t('general.date') : t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateEnd\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n            <Grid.Col>\n              <Form.Group label={t('general.date_end')}>\n                <CSDatePicker \n                  selected={values.dateEnd}\n                  onChange={(date) => {\n                    setFieldValue(\"dateEnd\", date)\n                    setFieldTouched(\"dateEnd\", true)\n                  }}\n                  onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                  placeholderText={t('schedule.appointments.placeholder_enddate')}\n                />\n                <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          }\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n           <Form.Group label={t('general.time_start')}>\n              <CSTimePicker \n                className={(errors.timeStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeStart}\n                onChange={(date) => setFieldValue(\"timeStart\", date)}\n                onBlur={() => setFieldTouched(\"timeStart\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n           <Form.Group label={t('general.time_end')}>\n              <CSTimePicker \n                className={(errors.timeEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeEnd}\n                onChange={(date) => setFieldValue(\"timeEnd\", date)}\n                onBlur={() => setFieldTouched(\"timeEnd\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.note')}>\n          <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"note\"\n              initialValue={values.note}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"note\", e.target.getContent())\n                setFieldTouched(\"note\", true, true)\n              }}\n            />\n          <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n        >\n          {t('general.submit')}\n        </Button>\n        <Button color=\"link\" onClick={() => history.push(return_url)}>\n            {t('general.cancel')}\n        </Button>\n      </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(ScheduleAppointmentForm))","// @flow\n\nimport React, { Component } from 'react'\nimport { Query, Mutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APPOINTMENTS_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { get_list_query_variables } from './tools'\nimport { APPOINTMENT_SCHEMA } from './yupSchema'\nimport ScheduleAppointmentForm from './ScheduleAppointmentForm'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO, dateToLocalISOTime } from '../../../tools/date_tools'\n\nimport ScheduleMenu from '../ScheduleMenu'\n\n\nconst CREATE_APPOINTMENT = gql`\n  mutation CreateScheduleAppointment($input:CreateScheduleAppointmentInput!) {\n    createScheduleAppointment(input: $input) {\n      scheduleItem {\n        id\n        scheduleItemType\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n        displayPublic\n      }\n    }\n  }\n`\n\n\nclass ScheduleAppointmentAdd extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Schedule appointment add add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const history = this.props.history\n    const return_url = \"/schedule/appointments\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n\n          <Query query={GET_INPUT_VALUES_QUERY} variables = {{archived: false}} >\n            {({ loading, error, data, refetch }) => {\n              // Loading\n              if (loading) return (\n                <Container>\n                  <p>{t('general.loading_with_dots')}</p>\n                </Container>\n              )\n              // Error\n              if (error) {\n                console.log(error)\n                return (\n                  <Container>\n                    <p>{t('general.error_sad_smiley')}</p>\n                  </Container>\n                )\n              }\n              \n              console.log('query data')\n              console.log(data)\n              const inputData = data\n\n              return (\n                <Container>\n                  <Page.Header title={t(\"schedule.title\")} />\n                  <Grid.Row>\n                    <Grid.Col md={9}>\n                      <Card>\n                        <Card.Header>\n                          <Card.Title>{t('schedule.appointments.title_add')}</Card.Title>\n                        </Card.Header>\n                        <Mutation mutation={CREATE_APPOINTMENT} onCompleted={() => history.push(return_url)}> \n                  {(createSubscription, { data }) => (\n                    <Formik\n                      initialValues={{ \n                        displayPublic: true,\n                        frequencyType: \"WEEKLY\",\n                        frequencyInterval: 1,\n                        organizationLocationRoom: \"\",\n                        dateStart: new Date(),\n                        timeStart: new Date(),\n                        timeEnd: new Date(),\n                      }}\n                      validationSchema={APPOINTMENT_SCHEMA}\n                      onSubmit={(values, { setSubmitting }) => {\n                          console.log('submit values:')\n                          console.log(values)\n\n                          let frequencyInterval = values.frequencyInterval\n                          if (values.frequencyType == 'SPECIFIC')\n                            frequencyInterval = 0\n\n                          let dateEnd\n                            if (values.dateEnd) {\n                              dateEnd = dateToLocalISO(values.dateEnd)\n                            } else {\n                              dateEnd = values.dateEnd\n                            }\n                          \n                          createSubscription({ variables: {\n                            input: {\n                              displayPublic: values.displayPublic,\n                              frequencyType: values.frequencyType,\n                              frequencyInterval: frequencyInterval,\n                              organizationLocationRoom: values.organizationLocationRoom,\n                              dateStart: dateToLocalISO(values.dateStart),\n                              dateEnd: dateEnd,\n                              timeStart: dateToLocalISOTime(values.timeStart),\n                              timeEnd: dateToLocalISOTime(values.timeEnd)\n                            }\n                          }, refetchQueries: [\n                              {query: GET_APPOINTMENTS_QUERY, variables: get_list_query_variables()}\n                          ]})\n                          .then(({ data }) => {\n                              console.log('got data', data)\n                              toast.success((t('schedule.appointments.toast_add_success')), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error)\n                              setSubmitting(false)\n                            })\n                      }}\n                      >\n                      {({ isSubmitting, setFieldValue, setFieldTouched, errors, values, touched }) => (\n                            <ScheduleAppointmentForm\n                              inputData={inputData}\n                              isSubmitting={isSubmitting}\n                              setFieldValue={setFieldValue}\n                              setFieldTouched={setFieldTouched}\n                              errors={errors}\n                              values={values}\n                              touched={touched}\n                              return_url={return_url}\n                            >\n                              {console.log('########## v & e')}\n                              {console.log(values)}\n                              {console.log(errors)}\n                              {console.log(touched)}\n                            </ScheduleAppointmentForm>\n                          )\n                        }\n                    </Formik>\n                    )}\n                  </Mutation>\n                </Card>\n                    </Grid.Col>\n                      <Grid.Col md={3}>\n                        <HasPermissionWrapper permission=\"add\"\n                                              resource=\"scheduleappointment\">\n                          <Button color=\"primary btn-block mb-6\"\n                                  onClick={() => history.push(return_url)}>\n                            <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                          </Button>\n                        </HasPermissionWrapper>\n                        <ScheduleMenu activeLink='appointments'/>\n                      </Grid.Col>\n                    </Grid.Row>\n                  </Container>\n            )}}\n          </Query>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(ScheduleAppointmentAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nconst AppointmentEditBack = ({ t }) => (\n  <div className=\"page-options d-flex\">\n    <Link to=\"/schedule/appointments\" \n          className='btn btn-outline-secondary btn-sm'>\n        <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('schedule.title')}\n    </Link>\n  </div>\n)\n\nexport default withTranslation()(AppointmentEditBack)","// @flow\n\nimport React, { Component } from 'react'\nimport { t } from 'i18next'\nimport { Query } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container,\n} from \"tabler-react\"\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport { GET_APPOINTMENT_QUERY } from \"../queries\"\n\nimport AppointmentEditMenu from './AppointmentEditMenu'\nimport AppointmentEditBack from './AppointmentEditBack';\nimport { appointment_edit_all_subtitle } from \"./tools\"\n\n\nclass AppointmentEditBase extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Schedule appointment edit add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const appointmentId = match.params.appointment_id\n    const menu_activeLink = this.props.menu_activeLink\n    const default_card = this.props.default_card\n    const sidebar_button = this.props.sidebar_button\n\n    return (\n      <Query query={GET_APPOINTMENT_QUERY} variables = {{id: appointmentId, archived: false}} >\n        {({ loading, error, data, refetch }) => {\n          // Loading\n          if (loading) return (\n            <p>{t('general.loading_with_dots')}</p>\n          )\n          // Error\n          if (error) {\n            console.log(error)\n            return (\n              <p>{t('general.error_sad_smiley')}</p>\n            )\n          }\n          \n          console.log('query data')\n          console.log(data)\n          const initialValues = data.scheduleItem\n\n          const initialTimeStart = TimeStringToJSDateOBJ(initialValues.timeStart)\n          const subtitle = appointment_edit_all_subtitle({\n            t: t,\n            location: initialValues.organizationLocationRoom.organizationLocation.name,\n            locationRoom: initialValues.organizationLocationRoom.name,\n            starttime: initialTimeStart\n          })\n          \n          return (\n            <Container>\n              <Page.Header \n                title={t(\"schedule.title\")} \n                subTitle={subtitle}\n              >\n                <AppointmentEditBack />\n              </Page.Header>\n              <Grid.Row>\n                <Grid.Col md={9}>\n                  {!default_card ? this.props.children :\n                    <Card>\n                      <Card.Header>\n                        <Card.Title>{this.props.card_title}</Card.Title>\n                      </Card.Header>\n                      <Card.Body>\n                        {this.props.children}\n                      </Card.Body>\n                    </Card>\n                  }\n                </Grid.Col>\n                <Grid.Col md={3}>\n                  {sidebar_button}\n                  <h5>{t('general.menu')}</h5>\n                  <AppointmentEditMenu activeLink={menu_activeLink} appointmentId={appointmentId}/>\n                </Grid.Col>\n              </Grid.Row>\n            </Container>\n          )\n        }}\n      </Query>\n)}}\n\nAppointmentEditBase.defaultProps = {\n  default_card: true,\n  sidebar_button: \"\",\n  card_title: t('schedule.appointments.title_edit')\n}\n\nexport default withTranslation()(withRouter(AppointmentEditBase))","import moment from 'moment'\n\nexport function appointment_edit_all_subtitle({t, location, locationRoom, starttime}) {\n  return t('general.appointment') + ': ' + location + ' (' + locationRoom + ') @ ' + moment(starttime).format('LT')\n}\n\n\nexport function represent_teacher_role(t, role) {\n  console.log(role)\n  switch (role) {\n    case \"SUB\":\n      return t('schedule.classes.teacher_roles.sub')\n      break\n    case \"ASSISTANT\":\n      return t('schedule.classes.teacher_roles.assistant')\n      break\n    case \"KARMA\":\n      return t('schedule.classes.teacher_roles.karma')\n      break\n    default:\n      return \"\"\n      break\n  }\n}\n","// @flow\n\nimport React, { Component } from 'react'\nimport { Query, Mutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APPOINTMENTS_QUERY, GET_APPOINTMENT_QUERY } from '../../queries'\nimport { get_list_query_variables } from '../../tools'\nimport { APPOINTMENT_SCHEMA } from '../../yupSchema'\nimport ScheduleAppointmentForm from '../../ScheduleAppointmentForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO, dateToLocalISOTime, TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n\nimport AppointmentEditBase from '../AppointmentEditBase'\n\n\nconst UPDATE_APPOINTMENT = gql`\n  mutation UpdateScheduleAppointment($input:UpdateScheduleAppointmentInput!) {\n    updateScheduleAppointment(input: $input) {\n      scheduleItem {\n        id\n        scheduleItemType\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n        displayPublic\n      }\n    }\n  }\n`\n\n\nclass ScheduleAppointmentEditAll extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Schedule appointment edit add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.appointment_id\n    const return_url = \"/schedule/appointments\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Query query={GET_APPOINTMENT_QUERY} variables = {{id: id, archived: false}} >\n            {({ loading, error, data, refetch }) => {\n              // Loading\n              if (loading) return (\n                <AppointmentEditBase menu_activeLink=\"edit\">\n                  <p>{t('general.loading_with_dots')}</p>\n                </AppointmentEditBase>\n              )\n              // Error\n              if (error) {\n                console.log(error)\n                return (\n                  <AppointmentEditBase menu_activeLink=\"edit\">\n                    <p>{t('general.error_sad_smiley')}</p>\n                  </AppointmentEditBase>\n                )\n              }\n              \n              console.log('query data')\n              console.log(data)\n              const inputData = data\n              const initialValues = data.scheduleItem\n\n              const initialTimeStart = TimeStringToJSDateOBJ(initialValues.timeStart)\n              const initialTimeEnd = TimeStringToJSDateOBJ(initialValues.timeEnd)\n              \n              return (\n                <AppointmentEditBase \n                  menu_activeLink=\"edit\"\n                >\n                  <Mutation mutation={UPDATE_APPOINTMENT} onCompleted={() => history.push(return_url)}> \n                  {(updateScheduleAppointment, { data }) => (\n                    <Formik\n                      initialValues={{ \n                        displayPublic: initialValues.displayPublic,\n                        frequencyType: initialValues.frequencyType,\n                        frequencyInterval: initialValues.frequencyInterval,\n                        organizationLocationRoom: initialValues.organizationLocationRoom.id,\n                        dateStart: initialValues.dateStart,\n                        dateEnd: initialValues.dateEnd,\n                        timeStart: initialTimeStart,\n                        timeEnd: initialTimeEnd,\n                      }}\n                      validationSchema={APPOINTMENT_SCHEMA}\n                      onSubmit={(values, { setSubmitting }) => {\n                          console.log('submit values:')\n                          console.log(values)\n\n                          let frequencyInterval = values.frequencyInterval\n                          if (values.frequencyType == 'SPECIFIC')\n                            frequencyInterval = 0\n\n                          let dateEnd\n                            if (values.dateEnd) {\n                              dateEnd = dateToLocalISO(values.dateEnd)\n                            } else {\n                              dateEnd = values.dateEnd\n                            }  \n\n                          updateScheduleAppointment({ variables: {\n                            input: {\n                              id: id,\n                              displayPublic: values.displayPublic,\n                              frequencyType: values.frequencyType,\n                              frequencyInterval: frequencyInterval,\n                              organizationLocationRoom: values.organizationLocationRoom,\n                              dateStart: dateToLocalISO(values.dateStart),\n                              dateEnd: dateEnd,\n                              timeStart: dateToLocalISOTime(values.timeStart),\n                              timeEnd: dateToLocalISOTime(values.timeEnd)\n                            }\n                          }, refetchQueries: [\n                              {query: GET_APPOINTMENTS_QUERY, variables: get_list_query_variables()}\n                          ]})\n                          .then(({ data }) => {\n                              console.log('got data', data)\n                              toast.success((t('schedule.appointments.toast_edit_success')), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error)\n                              setSubmitting(false)\n                            })\n                      }}\n                      >\n                      {({ isSubmitting, setFieldValue, setFieldTouched, errors, values, touched }) => (\n                        <ScheduleAppointmentForm\n                          inputData={inputData}\n                          isSubmitting={isSubmitting}\n                          setFieldValue={setFieldValue}\n                          setFieldTouched={setFieldTouched}\n                          errors={errors}\n                          values={values}\n                          touched={touched}\n                          return_url={return_url}\n                        >\n                          {console.log('########## v & e')}\n                          {console.log(values)}\n                          {console.log(errors)}\n                          {console.log(touched)}\n                        </ScheduleAppointmentForm>\n                      )}\n                    </Formik>\n                    )}\n                  </Mutation>\n                </AppointmentEditBase>\n            )}}\n           </Query>\n         </div>\n      </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(ScheduleAppointmentEditAll))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\n\nfunction StatusIcon({color=\"\"}) {\n  let className\n\n  switch (color) {\n    case \"success\":\n      className=\"bg-success\"\n      break\n    case \"warning\":\n      className=\"bg-warning\"\n      break\n    case \"danger\":\n      className=\"bg-danger\"\n      break\n    case \"primary\":\n      className=\"bg-primary\"\n      break\n    default:\n      className=\"bg-secondary\"\n  }\n\n  return <span className={\"status-icon \" + className} />\n}\n\n\nexport default withTranslation()(StatusIcon)\n\n\n\n","import React from \"react\"\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport StatusIcon from \"../../ui/StatusIcon\"\n\n\nexport function get_list_query_variables() {\n  let orderBy\n  let organizationClasstype\n  let organizationLevel\n  let organizationLocation\n\n  let queryVars = {\n    attendanceCountType: \"ATTENDING_AND_BOOKED\",\n    dateFrom: localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM), \n    dateUntil: localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL)\n  }\n\n  orderBy = localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY)\n  if (orderBy) {\n    queryVars.orderBy = orderBy\n  }\n\n  organizationClasstype = localStorage.getItem(CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE)\n  if (organizationClasstype) {\n    queryVars.organizationClasstype = organizationClasstype\n  } else {\n    queryVars.organizationClasstype = \"\"\n  }\n\n  organizationLevel = localStorage.getItem(CSLS.SCHEDULE_CLASSES_FILTER_LEVEL)\n  if (organizationLevel) {\n    queryVars.organizationLevel = organizationLevel\n  } else {\n    queryVars.organizationLevel = \"\"\n  }\n\n  organizationLocation = localStorage.getItem(CSLS.SCHEDULE_CLASSES_FILTER_LOCATION)\n  if (organizationLocation) {\n    queryVars.organizationLocation = organizationLocation\n  } else {\n    queryVars.organizationLocation = \"\"\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n\nexport function represent_teacher(name, role) {\n  let textColor = false\n\n  switch (role) {\n    case \"SUB\":\n      textColor = \"text-blue\"\n      break\n    case \"ASSISTANT\":\n      textColor = \"text-green\"\n      break\n    case \"KARMA\":\n      textColor = \"text-orange\"\n      break\n  }\n\n  if (textColor) {\n    return <span className={textColor}>{name}</span>\n  } else {\n    return name\n  }\n}\n\n\nexport function represent_class_status(status) {\n  let color\n\n  switch (status) {\n    case \"SUB\":\n      color = \"primary\"\n      break\n    case \"CANCELLED\":\n      color = \"warning\"\n      break\n    case \"OPEN\":\n      color = \"danger\"\n      break\n    default:\n      color = \"success\"\n  }\n\n  return <StatusIcon color={color} />\n}\n\n\nexport function get_class_messages(t, status, description, holiday, holidayName) {\n  let messages\n  if (holiday) {\n    return <span>{t(\"general.holiday\")} ({holidayName})</span>\n  }\n\n  if (status == 'CANCELED') {\n    return description\n  }\n}","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from './tools'\n\n\nfunction getDefaultValue(value) {\n  let defaultValue = localStorage.getItem(value)\n  if (defaultValue) {\n    return defaultValue\n  } else {\n    return \"\"\n  }\n}\n\n\nfunction updateLocalStorageAndRefetch(key, value, refetch) {\n  localStorage.setItem(key, value)\n  refetch(get_list_query_variables())\n\n}\n\nconst selectClass = \"form-control custom-select mb-2\"\n\n\nconst ScheduleClassesFilter = ({ t, history, data, refetch }) => (\n  <div>\n    {/* Locations */}\n    <select \n      className={selectClass}\n      defaultValue={getDefaultValue(CSLS.SCHEDULE_CLASSES_FILTER_LOCATION)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.SCHEDULE_CLASSES_FILTER_LOCATION,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"schedule.classes.filter_all_locations\")}</option>\n      {data.organizationLocations.edges.map(({ node }) =>\n        <option value={node.id} key={v4()}>{node.name}</option>\n      )}\n    </select>\n    {/* Classtypes */}\n    <select \n      className={selectClass}\n      defaultValue={getDefaultValue(CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"schedule.classes.filter_all_classtypes\")}</option>\n      {data.organizationClasstypes.edges.map(({ node }) =>\n        <option value={node.id} key={v4()}>{node.name}</option>\n      )}\n    </select>\n    {/* Levels */}\n    <select \n      className={selectClass}\n      defaultValue={getDefaultValue(CSLS.SCHEDULE_CLASSES_FILTER_LEVEL)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.SCHEDULE_CLASSES_FILTER_LEVEL,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"schedule.classes.filter_all_levels\")}</option>\n      {data.organizationLevels.edges.map(({ node }) =>\n        <option value={node.id} key={v4()}>{node.name}</option>\n      )}\n    </select>\n  </div>\n);\n\nexport default withTranslation()(withRouter(ScheduleClassesFilter))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport CSDatePicker from \"../../ui/CSDatePicker\"\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport ScheduleMenu from \"../ScheduleMenu\"\nimport ScheduleClassesFilter from \"./ScheduleClassesFilter\"\n\nimport { \n  get_list_query_variables, \n} from './tools'\n\nimport moment from 'moment'\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)) {\n  console.log('date from not found... defaulting to today...')\n  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, moment().format('YYYY-MM-DD')) \n  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, moment().add(6, 'days').format('YYYY-MM-DD')) \n} \n\n\nfunction ScheduleClassesBase ({ t, history, children, data, refetch }) {\n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"schedule.title\")}>\n            <div className=\"page-options d-flex\">\n              <span title={t(\"schedule.classes.tooltip_sort_by_location\")}>\n                <Button \n                  icon=\"home\"\n                  tooltip=\"text\"\n                  className=\"mr-2\"\n                  color={\n                    ((localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY) === \"location\") || (!localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY))) ?\n                    \"azure\" : \"secondary\"\n                  }\n                  onClick={() => {\n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_ORDER_BY, \"location\")\n                    refetch(get_list_query_variables())\n                  }}\n                />\n              </span>\n              <span title={t(\"schedule.classes.tooltip_sort_by_starttime\")}>\n                <Button \n                  icon=\"clock\"\n                  className=\"mr-2\"\n                  color={\n                    (localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY) === \"starttime\") ?\n                    \"azure\" : \"secondary\"\n                  }\n                  onClick={() => {\n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_ORDER_BY, \"starttime\")\n                    refetch(get_list_query_variables())\n                  }}\n                />\n              </span>\n              <CSDatePicker \n                className=\"form-control schedule-list-csdatepicker mr-2\"\n                selected={new Date(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM))}\n                isClearable={false}\n                onChange={(date) => {\n                  let nextWeekFrom = moment(date)\n                  let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n\n                  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                  console.log(get_list_query_variables())\n\n                  refetch(get_list_query_variables())\n                }}\n                placeholderText={t('schedule.classes.go_to_date')}\n              />\n              <Button.List className=\"schedule-list-page-options-btn-list\">\n                <Button \n                  icon=\"chevron-left\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)).subtract(7, 'days')\n                    let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                    \n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                    refetch(get_list_query_variables())\n                }} />\n                <Button \n                  icon=\"sunset\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let currentWeekFrom = moment()\n                    let currentWeekUntil = moment(currentWeekFrom).add(6, 'days')\n\n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, currentWeekFrom.format('YYYY-MM-DD')) \n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, currentWeekUntil.format('YYYY-MM-DD')) \n                    \n                    refetch(get_list_query_variables())\n                }} />\n                <Button \n                  icon=\"chevron-right\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)).add(7, 'days')\n                    let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                    \n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                    refetch(get_list_query_variables())\n                }} />\n              </Button.List> \n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"scheduleclass\">\n                <Button color=\"primary btn-block mb-1\"\n                        onClick={() => history.push(\"/schedule/classes/add\")}>\n                  <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.add')}\n                </Button>\n              </HasPermissionWrapper>\n              {(data) ? \n                <div>\n                  <div>\n                    <Button\n                      className=\"float-right\"\n                      color=\"link\"\n                      size=\"sm\"\n                      onClick={() => {\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE, \"\")\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LEVEL, \"\")\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LOCATION, \"\")\n                        refetch(get_list_query_variables())\n                      }}\n                    >\n                      {t(\"general.clear\")}\n                    </Button>\n                  </div>\n                  <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n                  <ScheduleClassesFilter data={data} refetch={refetch} />\n                </div>\n              : \"\"}\n              <h5>{t(\"general.menu\")}</h5>\n              <ScheduleMenu activeLink='classes'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_CLASSES_QUERY = gql`\n  query ScheduleClasses(\n      $dateFrom: Date!, \n      $dateUntil:Date!, \n      $orderBy: String, \n      $organizationClasstype: String,\n      $organizationLevel: String,\n      $organizationLocation: String,\n      $attendanceCountType: String!\n    ){\n    scheduleClasses(\n        dateFrom:$dateFrom, \n        dateUntil: $dateUntil, \n        orderBy: $orderBy, \n        organizationClasstype: $organizationClasstype,\n        organizationLevel: $organizationLevel,\n        organizationLocation: $organizationLocation,\n        attendanceCountType: $attendanceCountType,\n        publicOnly: false\n    ){\n      date\n      bookingOpenOn\n      classes {\n        scheduleItemId\n        frequencyType\n        date\n        status\n        holiday\n        holidayName\n        description\n        account {\n          id\n          fullName\n        }\n        role\n        account2 {\n          id\n          fullName\n        }\n        role2\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        timeStart\n        timeEnd\n        availableSpacesOnline\n        availableSpacesTotal\n        displayPublic\n        bookingStatus\n      }\n    }\n    organizationLocations(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationClasstypes(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_CLASS_QUERY = gql`\n  query ScheduleItem($id: ID!, $before: String, $after: String) {\n    scheduleItem(id:$id) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      spaces\n      walkInSpaces\n      displayPublic\n      infoMailContent\n    }\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n    organizationClasstypes(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleClassInputValues($after: String, $before: String) {\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n    organizationClasstypes(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const CREATE_CLASS = gql`\n  mutation CreateScheduleClass($input:CreateScheduleClassInput!) {\n    createScheduleClass(input: $input) {\n      scheduleItem {\n        id\n        scheduleItemType\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n        displayPublic\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport {\n  Badge,\n  Dropdown,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table,\n  Text,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\n\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport ContentCard from \"../../general/ContentCard\"\nimport ScheduleMenu from \"../ScheduleMenu\"\nimport ScheduleClassesFilter from \"./ScheduleClassesFilter\"\nimport ScheduleClassesBase from './ScheduleClassesBase'\n\nimport { GET_CLASSES_QUERY } from \"./queries\"\nimport { \n  get_class_messages,\n  get_list_query_variables, \n  represent_class_status,\n  represent_teacher \n} from './tools'\n\nimport moment from 'moment'\n\n\nconst DELETE_SCHEDULE_CLASS = gql`\n  mutation DeleteScheduleClass($input: DeleteScheduleClassInput!) {\n    deleteScheduleClass(input: $input) {\n      ok\n    }\n  }\n`\n\n\nconst confirm_delete = ({t, msgConfirm, msgDescription, msgSuccess, deleteFunction, functionVariables}) => {\n  confirmAlert({\n    customUI: ({ onClose }) => {\n      return (\n        <div key={v4()} className='custom-ui'>\n          <h1>{t('general.confirm_delete')}</h1>\n          {msgConfirm}\n          {msgDescription}\n          <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_delete_no')}</button>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              deleteFunction(functionVariables)\n                .then(({ data }) => {\n                  console.log('got data', data);\n                  toast.success(\n                    msgSuccess, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error);\n                })\n              onClose()\n            }}\n          >\n            <Icon name=\"trash-2\" /> {t('general.confirm_delete_yes')}\n          </button>\n        </div>\n      )\n    }\n  })\n}\n\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)) {\n  console.log('date from not found... defaulting to today...')\n  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, moment().format('YYYY-MM-DD')) \n  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, moment().add(6, 'days').format('YYYY-MM-DD')) \n} \n\n\nfunction ScheduleClasses ({ t, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const {loading, error, data, refetch} = useQuery(GET_CLASSES_QUERY, {\n    variables: get_list_query_variables()\n  })\n  const [deleteScheduleClass] = useMutation(DELETE_SCHEDULE_CLASS)\n\n  if (loading) {\n    return (\n      <ScheduleClassesBase>\n        <p>{t('general.loading_with_dots')}</p>\n      </ScheduleClassesBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <ScheduleClassesBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ScheduleClassesBase>\n    )\n  }\n\n  const classes = data.scheduleClasses\n       \n  // Empty list\n  if (!classes.length) { return (\n    <ScheduleClassesBase>\n      <p>\n        {t('schedule.classes.empty_list')}\n      </p>\n    </ScheduleClassesBase>\n  )} \n\n  return (\n    <ScheduleClassesBase data={data} refetch={refetch}>\n      { data.scheduleClasses.map(({ date, classes }) => (\n        <div key={v4()}>\n          <Card>\n            <Card.Header>\n              <Card.Title>\n                <b>{moment(date).format(\"dddd\")}</b> {' '}\n                <span className=\"text-muted\">\n                  {moment(date).format(\"LL\")} \n                </span>\n              </Card.Title>\n            </Card.Header>\n            {!(classes.length) ? <Card.Body>{t('schedule.classes.empty_list')}</Card.Body> :\n              <Table cards>\n                <Table.Header>\n                  <Table.Row key={v4()}>\n                    <Table.ColHeader /> \n                    <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n                    <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n                    <Table.ColHeader>{t('general.class')}</Table.ColHeader>\n                    <Table.ColHeader>{t('general.teacher')}</Table.ColHeader>\n                    <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                    <Table.ColHeader></Table.ColHeader>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {classes.map((\n                    { scheduleItemId, \n                      frequencyType,\n                      date, \n                      status,\n                      holiday,\n                      holidayName,\n                      description,\n                      account, \n                      role,\n                      account2,\n                      role2,\n                      organizationLocationRoom, \n                      organizationClasstype, \n                      organizationLevel,\n                      timeStart, \n                      timeEnd,\n                      displayPublic }) => (\n                    <Table.Row key={v4()}>\n                      <Table.Col>\n                        {represent_class_status(status)}\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Start & end time */}\n                        {moment(date + ' ' + timeStart).format(timeFormat)} {' - '}\n                        {moment(date + ' ' + timeEnd).format(timeFormat)} { ' ' }\n                        {(frequencyType === 'SPECIFIC') ? <Badge color=\"primary\">{t('general.once')}</Badge> : null } <br />\n                        <small className=\"text-muted\">{get_class_messages(t, status, description, holiday, holidayName)}</small>\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Location */}\n                        {organizationLocationRoom.organizationLocation.name} <br />\n                        <small className=\"text-muted\">{organizationLocationRoom.name}</small>\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Type and level */}\n                        {organizationClasstype.name} <br />\n                        <small className=\"text-muted\">\n                          {(organizationLevel) ? organizationLevel.name: \"\"}\n                        </small>\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Teacher(s) */}\n                        { (account) ? \n                            represent_teacher(account.fullName, role) : \n                            <span className=\"text-red\">{t(\"schedule.classes.no_teacher\")}</span>\n                        } <br />\n                        <small className=\"text-muted\">\n                          {(account2) ? represent_teacher(account2.fullName, role2) : \"\"}\n                        </small>\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Public */}\n                        <BadgeBoolean value={displayPublic} />\n                      </Table.Col>\n                      <Table.Col>\n                        <Dropdown\n                          key={v4()}\n                          className=\"pull-right\"\n                          type=\"button\"\n                          toggle\n                          color=\"secondary btn-sm\"\n                          triggerContent={t(\"general.actions\")}\n                          items={[\n                            <HasPermissionWrapper key={v4()} permission=\"view\" resource=\"scheduleitemattendance\">\n                              <Link to={'/schedule/classes/class/attendance/' + scheduleItemId + '/' + date}>\n                                <Dropdown.Item\n                                  key={v4()}\n                                  icon=\"check-circle\"\n                                >\n                                    {t(\"general.attendance\")}\n                                </Dropdown.Item>\n                              </Link>\n                            </HasPermissionWrapper>,\n                            <HasPermissionWrapper key={v4()} permission=\"view\" resource=\"scheduleitemattendance\">\n                              <Link to={'/schedule/classes/class/attendance_chart/' + scheduleItemId + '/' + date}>\n                                <Dropdown.Item\n                                  key={v4()}\n                                  icon=\"bar-chart-2\">\n                                    {t(\"schedule.classes.class.attendance_chart.title\")}\n                                </Dropdown.Item>\n                              </Link>\n                            </HasPermissionWrapper>,\n                            <HasPermissionWrapper key={v4()} permission=\"view\" resource=\"scheduleclassweeklyotc\">\n                              <Link to={'/schedule/classes/class/edit/' + scheduleItemId + '/' + date}>\n                                <Dropdown.Item\n                                  key={v4()}\n                                  icon=\"edit-3\"\n                                >\n                                  {t(\"general.edit\")}\n                                </Dropdown.Item>\n                              </Link>\n                            </HasPermissionWrapper>,\n                            <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleclass\">\n                              <Dropdown.ItemDivider key={v4()} />\n                              <Link to={'/schedule/classes/all/edit/' + scheduleItemId}>\n                                <Dropdown.Item\n                                  key={v4()}\n                                  badge={t('schedule.classes.all_classes_in_series')}\n                                  badgeType=\"secondary\"\n                                  icon=\"edit-3\"\n                                >\n                                    {t(\"general.edit\")}\n                                </Dropdown.Item>\n                              </Link>\n                            </HasPermissionWrapper>,\n                            <HasPermissionWrapper key={v4()} permission=\"delete\" resource=\"scheduleclass\">\n                              <Dropdown.ItemDivider key={v4()} />\n                              <span className=\"text-red\">\n                              <Dropdown.Item\n                                key={v4()}\n                                badge={t('schedule.classes.all_classes_in_series')}\n                                badgeType=\"danger\"\n                                icon=\"trash-2\"\n                                onClick={() => {\n                                  confirm_delete({\n                                    t: t,\n                                    msgConfirm: t(\"schedule.classes.delete_confirm_msg\"),\n                                    msgDescription: <p key={v4()}>\n                                      {moment(date + ' ' + timeStart).format('LT')} {' - '}\n                                      {moment(date + ' ' + timeEnd).format('LT')} {' '} @ {' '}\n                                      {organizationLocationRoom.organizationLocation.name} {' '}\n                                      {organizationLocationRoom.name}\n                                      {organizationClasstype.Name}\n                                      </p>,\n                                    msgSuccess: t('schedule.classes.deleted'),\n                                    deleteFunction: deleteScheduleClass,\n                                    functionVariables: { variables: {\n                                      input: {\n                                        id: scheduleItemId\n                                      }\n                                    }, refetchQueries: [\n                                      { query: GET_CLASSES_QUERY, variables: get_list_query_variables() }\n                                    ]}\n                                  })\n                                }}>\n                              {t(\"general.delete\")}\n                              </Dropdown.Item>\n                              </span>\n                            </HasPermissionWrapper>\n                          ]}\n                        />\n                      </Table.Col>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            }\n          </Card>\n        </div>\n      ))}\n    </ScheduleClassesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClasses))\n\n//     <SiteWrapper>\n//       <div className=\"my-3 my-md-5\">\n//         <Query query={GET_CLASSES_QUERY} variables={get_list_query_variables()}>\n//           {({ loading, error, data, refetch }) => {\n//             // Loading\n//             if (loading) return (\n//               <Container>\n//                 <p>{t('general.loading_with_dots')}</p>\n//               </Container>\n//             )\n//             // Error\n//             if (error) {\n//               console.log(error)\n//               return (\n//                 <Container>\n//                   <p>{t('general.error_sad_smiley')}</p>\n//                 </Container>\n//               )\n//             }\n//             const headerOptions = <Card.Options>\n//               {/* <Button color={(!archived) ? 'primary': 'secondary'}  \n//                       size=\"sm\"\n//                       onClick={() => {archived=false; refetch({archived});}}>\n//                 {t('general.current')}\n//               </Button>\n//               <Button color={(archived) ? 'primary': 'secondary'} \n//                       size=\"sm\" \n//                       className=\"ml-2\" \n//                       onClick={() => {archived=true; refetch({archived});}}>\n//                 {t('general.archive')}\n//               </Button> */}\n//             </Card.Options>\n            \n//             // Empty list\n//             if (!data.scheduleClasses.length) { return (\n//               <ContentCard cardTitle={t('schedule.classes.title')}\n//                             headerContent={headerOptions}\n//                             hasCardBody={true}>\n//                 <p>\n//                   {t('schedule.classes.empty_list')}\n//                 </p>\n//               </ContentCard>\n//             )} else {   \n\n//             console.log(data)\n//             // Life's good! :)\n//             return (\n//               <Container>\n//                 <Page.Header title={t(\"schedule.title\")}>\n//                   <div className=\"page-options d-flex\">\n//                     <span title={t(\"schedule.classes.tooltip_sort_by_location\")}>\n//                       <Button \n//                         icon=\"home\"\n//                         tooltip=\"text\"\n//                         className=\"mr-2\"\n//                         color={\n//                           ((localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY) === \"location\") || (!localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY))) ?\n//                           \"azure\" : \"secondary\"\n//                         }\n//                         onClick={() => {\n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_ORDER_BY, \"location\")\n//                           refetch(get_list_query_variables())\n//                         }}\n//                       />\n//                     </span>\n//                     <span title={t(\"schedule.classes.tooltip_sort_by_starttime\")}>\n//                       <Button \n//                         icon=\"clock\"\n//                         className=\"mr-2\"\n//                         color={\n//                           (localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY) === \"starttime\") ?\n//                           \"azure\" : \"secondary\"\n//                         }\n//                         onClick={() => {\n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_ORDER_BY, \"starttime\")\n//                           refetch(get_list_query_variables())\n//                         }}\n//                       />\n//                     </span>\n//                     <CSDatePicker \n//                       className=\"form-control schedule-list-csdatepicker mr-2\"\n//                       selected={new Date(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM))}\n//                       isClearable={false}\n//                       onChange={(date) => {\n//                         let nextWeekFrom = moment(date)\n//                         let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n\n//                         localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n//                         localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n//                         console.log(get_list_query_variables())\n\n//                         refetch(get_list_query_variables())\n//                       }}\n//                       placeholderText={t('schedule.classes.go_to_date')}\n//                     />\n//                     <Button.List className=\"schedule-list-page-options-btn-list\">\n//                       <Button \n//                         icon=\"chevron-left\"\n//                         color=\"secondary\"\n//                         onClick={ () => {\n//                           let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)).subtract(7, 'days')\n//                           let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                          \n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n//                           refetch(get_list_query_variables())\n//                       }} />\n//                       <Button \n//                         icon=\"sunset\"\n//                         color=\"secondary\"\n//                         onClick={ () => {\n//                           let currentWeekFrom = moment()\n//                           let currentWeekUntil = moment(currentWeekFrom).add(6, 'days')\n\n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, currentWeekFrom.format('YYYY-MM-DD')) \n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, currentWeekUntil.format('YYYY-MM-DD')) \n                          \n//                           refetch(get_list_query_variables())\n//                       }} />\n//                       <Button \n//                         icon=\"chevron-right\"\n//                         color=\"secondary\"\n//                         onClick={ () => {\n//                           let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)).add(7, 'days')\n//                           let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                          \n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n//                           refetch(get_list_query_variables())\n//                       }} />\n//                     </Button.List> \n//                   </div>\n//                 </Page.Header>\n//                 <Grid.Row>\n//                   <Grid.Col md={9}>\n//                     {\n                      \n//                       ))}\n//                 </Grid.Col>\n//                 <Grid.Col md={3}>\n//                   <HasPermissionWrapper permission=\"add\"\n//                                         resource=\"scheduleclass\">\n//                     <Button color=\"primary btn-block mb-1\"\n//                             onClick={() => history.push(\"/schedule/classes/add\")}>\n//                       <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.add')}\n//                     </Button>\n//                   </HasPermissionWrapper>\n//                   <div>\n//                     <Button\n//                       className=\"pull-right\"\n//                       color=\"link\"\n//                       size=\"sm\"\n//                       onClick={() => {\n//                         localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE, \"\")\n//                         localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LEVEL, \"\")\n//                         localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LOCATION, \"\")\n//                         refetch(get_list_query_variables())\n//                       }}\n//                     >\n//                       {t(\"general.clear\")}\n//                     </Button>\n//                   </div>\n//                   <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n//                   <ScheduleClassesFilter data={data} refetch={refetch} />\n//                   <h5>{t(\"general.menu\")}</h5>\n//                   <ScheduleMenu activeLink='classes'/>\n//               </Grid.Col>\n//             </Grid.Row>\n//           </Container>\n//         )}}}\n//         </Query>\n//       </div>\n//     </SiteWrapper>\n//   )\n// }\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const CLASS_SCHEMA = Yup.object().shape({\n    frequencyType: Yup.string()\n      .required(t('yup.field_required')),\n    organizationLocationRoom: Yup.string()\n      .required(t('yup.field_required')),\n    organizationClasstype: Yup.string()\n      .required(t('yup.field_required')),\n    dateStart: Yup.date()\n      .required(t('yup.field_required')),\n    timeStart: Yup.date()\n      .typeError(t('yup.time_required'))\n      .required(t('yup.field_required')),\n    timeEnd: Yup.date()\n      .typeError(t('yup.time_required'))\n      .required(t('yup.field_required')),\n    spaces: Yup.number(),\n    walkInSpaces: Yup.number(),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport CSTimePicker from \"../../ui/CSTimePicker\"\n\nconst ScheduleClassForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, touched, returnUrl }) => (\n    <FoForm>\n      <Card.Body>\n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"displayPublic\" \n              checked={values.displayPublic} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('schedule.classes.public')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n        </Form.Group>  \n        <Form.Group label={t('schedule.classes.frequencyType')}>\n          <Field component=\"select\" \n                name=\"frequencyType\" \n                className={(errors.frequencyType) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"SPECIFIC\" key={v4()}>{t('schedule.classes.select_specific')}</option>\n            <option value=\"WEEKLY\" key={v4()}>{t('schedule.classes.select_weekly')}</option>\n          </Field>\n          <ErrorMessage name=\"frequencyType\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n          <Form.Group label={t('schedule.classes.frequencyInterval')}>\n            <Field component=\"select\" \n                  name=\"frequencyInterval\" \n                  className={(errors.frequencyInterval) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"1\" key={v4()}>{t('general.monday')}</option>\n              <option value=\"2\" key={v4()}>{t('general.tuesday')}</option>\n              <option value=\"3\" key={v4()}>{t('general.wednesday')}</option>\n              <option value=\"4\" key={v4()}>{t('general.thursday')}</option>\n              <option value=\"5\" key={v4()}>{t('general.friday')}</option>\n              <option value=\"6\" key={v4()}>{t('general.saturday')}</option>\n              <option value=\"7\" key={v4()}>{t('general.sunday')}</option>\n            </Field>\n            <ErrorMessage name=\"frequencyInterval\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        }\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.location')}>\n              <Field component=\"select\" \n                    name=\"organizationLocationRoom\" \n                    className={(errors.organizationLocationRoom) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.please_select\")}</option>\n                {inputData.organizationLocationRooms.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.organizationLocation.name} - {node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLocationRoom\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.level')}>\n              <Field component=\"select\" \n                    name=\"organizationLevel\" \n                    className={(errors.organizationLevels) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"\")}</option>\n                {inputData.organizationLevels.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLevels\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.class')}>\n          <Field component=\"select\" \n                name=\"organizationClasstype\" \n                className={(errors.organizationClasstype) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"\" key={v4()}>{t(\"general.please_select\")}</option>\n            {inputData.organizationClasstypes.edges.map(({ node }) =>\n              <option value={node.id} key={v4()}>{node.name}</option>\n            )}\n          </Field>\n          <ErrorMessage name=\"organizationClasstype\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group> \n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={(values.frequencyType == \"SPECIFIC\") ? t('general.date') : t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateStart\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n            <Grid.Col>\n              <Form.Group label={t('general.date_end')}>\n                <CSDatePicker \n                  selected={values.dateEnd}\n                  onChange={(date) => {\n                    setFieldValue(\"dateEnd\", date)\n                    setFieldTouched(\"dateEnd\", true)\n                  }}\n                  onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                  placeholderText={t('schedule.classes.placeholder_enddate')}\n                />\n                <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          }\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n           <Form.Group label={t('general.time_start')}>\n              <CSTimePicker \n                className={(errors.timeStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeStart}\n                onChange={(date) => setFieldValue(\"timeStart\", date)}\n                onBlur={() => setFieldTouched(\"timeStart\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n           <Form.Group label={t('general.time_end')}>\n              <CSTimePicker \n                className={(errors.timeEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeEnd}\n                onChange={(date) => setFieldValue(\"timeEnd\", date)}\n                onBlur={() => setFieldTouched(\"timeEnd\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.spaces')}>\n              <Field type=\"text\" \n                    name=\"spaces\" \n                    className={(errors.spaces) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"spaces\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.spaces_walk_in')}>\n              <Field type=\"text\" \n                    name=\"walkInSpaces\" \n                    className={(errors.walkInSpaces) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"walkInSpaces\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.note')}>\n          <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"note\"\n              initialValue={values.note}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"note\", e.target.getContent())\n                setFieldTouched(\"note\", true, true)\n              }}\n            />\n          <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Form.Group label={t('general.info_mail')}>\n          <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"infoMailContent\"\n              initialValue={values.infoMailContent}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"infoMailContent\", e.target.getContent())\n                setFieldTouched(\"infoMailContent\", true, true)\n              }}\n            />\n          <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n        >\n        {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button color=\"link\">\n              {t('general.cancel')}\n          </Button>\n        </Link>\n      </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(ScheduleClassForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport ScheduleMenu from '../ScheduleMenu'\n\n\nfunction ScheduleClassAddBase({t, children}) {\n  const returnUrl = \"/schedule/classes\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"schedule.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"scheduleclass\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              <ScheduleMenu activeLink='classes'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassAddBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_CLASSES_QUERY, GET_INPUT_VALUES_QUERY, CREATE_CLASS } from './queries'\nimport { get_list_query_variables } from './tools'\nimport { CLASS_SCHEMA } from './yupSchema'\nimport ScheduleClassForm from './ScheduleClassForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\nimport { dateToLocalISO, dateToLocalISOTime } from '../../../tools/date_tools'\n\nimport ScheduleClassAddBase from './ScheduleClassAddBase'\n\n\nfunction ScheduleClassAdd({t, history}) {\n  const cardTitle = t('schedule.classes.title_add')\n  const returnUrl = \"/schedule/classes\"\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES_QUERY)\n  const [ createScheduleClass ] = useMutation(CREATE_CLASS)\n  \n\n  if (loading) return (\n    <ScheduleClassAddBase>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>\n        </Card.Body>\n      </Card>\n    </ScheduleClassAddBase>\n  )\n\n  if (error) return (\n    <ScheduleClassAddBase>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <p>{t('general.error_sad_smiley')}</p>\n        </Card.Body>\n      </Card>\n    </ScheduleClassAddBase>\n  )\n\n  const inputData = data\n\n  return (\n    <ScheduleClassAddBase>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            displayPublic: true,\n            frequencyType: \"WEEKLY\",\n            frequencyInterval: 1,\n            organizationLocationRoom: \"\",\n            organizationClasstype: \"\",\n            organizationLevel: \"\",\n            dateStart: new Date(),\n            timeStart: new Date(),\n            timeEnd: new Date(),\n            spaces: \"\",\n            walkInSpaces: \"\"\n          }}\n          validationSchema={CLASS_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              let frequencyInterval = values.frequencyInterval\n              if (values.frequencyType == 'SPECIFIC')\n                frequencyInterval = 0\n\n              let dateEnd\n                if (values.dateEnd) {\n                  dateEnd = dateToLocalISO(values.dateEnd)\n                } else {\n                  dateEnd = values.dateEnd\n                }\n              \n              createScheduleClass({ variables: {\n                input: {\n                  displayPublic: values.displayPublic,\n                  frequencyType: values.frequencyType,\n                  frequencyInterval: frequencyInterval,\n                  organizationLocationRoom: values.organizationLocationRoom,\n                  organizationClasstype: values.organizationClasstype,\n                  organizationLevel: values.organizationLevel,\n                  dateStart: dateToLocalISO(values.dateStart),\n                  dateEnd: dateEnd,\n                  timeStart: dateToLocalISOTime(values.timeStart),\n                  timeEnd: dateToLocalISOTime(values.timeEnd),\n                  spaces: values.spaces,\n                  walkInSpaces: values.walkInSpaces\n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSES_QUERY, variables: get_list_query_variables()}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('schedule.classes.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values, touched }) => (\n                <ScheduleClassForm\n                  inputData={inputData}\n                  isSubmitting={isSubmitting}\n                  setFieldValue={setFieldValue}\n                  setFieldTouched={setFieldTouched}\n                  errors={errors}\n                  values={values}\n                  touched={touched}\n                  returnUrl={returnUrl}\n                >\n                </ScheduleClassForm>\n              )\n           }\n        </Formik>\n      </Card>      \n    </ScheduleClassAddBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassAdd))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../HasPermissionWrapper\"\n\nlet edit_active\nlet classpasses_active\nlet subscriptions_active\nlet teachers_active\nlet prices_active\n\nconst ClassEditMenu = ({ t, activeLink, classId }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'edit') ? edit_active = true: edit_active = false}\n        {(activeLink === 'classpasses') ? classpasses_active = true: classpasses_active = false}\n        {(activeLink === 'subscriptions') ? subscriptions_active = true: subscriptions_active = false}\n        {(activeLink === 'teachers') ? teachers_active = true: teachers_active = false}\n        {(activeLink === 'prices') ? prices_active = true: prices_active = false}        \n\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/schedule/classes/all/edit/\" + classId}\n            icon=\"edit-3\"\n            active={edit_active}\n            >\n            {t('general.edit')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/schedule/classes/all/teachers/\" + classId}\n            icon=\"users\"\n            active={teachers_active}\n            >\n            {t('general.teachers')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/schedule/classes/all/prices/\" + classId}\n            icon=\"dollar-sign\"\n            active={prices_active}\n            >\n            {t('general.prices')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/schedule/classes/all/subscriptions/\" + classId}\n            icon=\"edit\"\n            active={subscriptions_active}\n            >\n            {t('general.subscriptions')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/schedule/classes/all/classpasses/\" + classId}\n            icon=\"edit\"\n            active={classpasses_active}\n            >\n            {t('general.classpasses')}\n        </List.GroupItem>\n    </List.Group>\n);\n\nexport default withTranslation()(ClassEditMenu)","import { gql } from \"@apollo/client\"\n\nexport const UPDATE_CLASS = gql`\nmutation UpdateScheduleClass($input:UpdateScheduleClassInput!) {\n  updateScheduleClass(input: $input) {\n    scheduleItem {\n      id\n      scheduleItemType\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n}\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nconst ClassEditBack = ({ t }) => (\n  <div className=\"page-options d-flex\">\n    <Link to=\"/schedule/classes\" \n          className='btn btn-outline-secondary btn-sm'>\n        <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('schedule.title')}\n    </Link>\n  </div>\n)\n\nexport default withTranslation()(ClassEditBack)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../SiteWrapper\"\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\n\nimport ClassEditMenu from './ClassEditMenu'\nimport ClassEditBack from './ClassEditBack';\n\n\nfunction ClassEditBaseBase({t, match, children, subTitle=\"\", cardTitle=\"\", defaultCard=true, menuActiveLink=\"\", sidebarButton=\"\"}) {\n  const classId = match.params.class_id\n  \n  return (\n    <SiteWrapper>\n      <Container>\n        <Page.Header \n          title={t(\"schedule.title\")} \n          subTitle={subTitle}\n        >\n          <ClassEditBack />\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            {(!defaultCard) ? children :\n              <Card title={cardTitle}>\n                <Card.Body>\n                  {children}\n                </Card.Body>\n              </Card>\n            }\n          </Grid.Col>\n          <Grid.Col md={3}>\n            {sidebarButton}\n            <h5>{t('general.menu')}</h5>\n            <ClassEditMenu activeLink={menuActiveLink} classId={classId}/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ClassEditBaseBase))","import moment from 'moment'\n\nexport function class_edit_all_subtitle({t, location, locationRoom, classtype, starttime}) {\n  return t('general.class') + ': ' + location + ' (' + locationRoom + ') - ' + classtype + ' @ ' + moment(starttime).format('LT')\n}\n\n\nexport function represent_teacher_role(t, role) {\n  console.log(role)\n  switch (role) {\n    case \"SUB\":\n      return t('schedule.classes.teacher_roles.sub')\n      break\n    case \"ASSISTANT\":\n      return t('schedule.classes.teacher_roles.assistant')\n      break\n    case \"KARMA\":\n      return t('schedule.classes.teacher_roles.karma')\n      break\n    default:\n      return \"\"\n      break\n  }\n}\n","// @flow\n\nimport React, { Component } from 'react'\nimport { t } from 'i18next'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container,\n} from \"tabler-react\"\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport { GET_CLASS_QUERY } from \"../queries\"\n\nimport ClassEditMenu from './ClassEditMenu'\nimport ClassEditBack from './ClassEditBack'\nimport ClassEditBaseBase from './ClassEditBaseBase'\nimport { class_edit_all_subtitle } from \"./tools\"\n\n\nfunction ClassEditBase({t, match, children, menuActiveLink=\"\", defaultCard=true, sidebarButton=\"\", cardTitle=\"\"}) {\n  const classId = match.params.class_id\n  const { loading, error, data } = useQuery(GET_CLASS_QUERY, { variables: {\n    id: classId\n  }})\n\n  if (!cardTitle) {\n    cardTitle = t('schedule.classes.title_edit')\n  }\n\n  if (loading) return (\n    <ClassEditBaseBase \n      cardTitle={cardTitle}\n      defaultCard={true}\n      sidebarButton={sidebarButton}\n      menuActiveLink={menuActiveLink}\n    >\n      <p>{t('general.loading_with_dots')}</p>\n    </ClassEditBaseBase>\n  )\n\n  if (error) return (\n    <ClassEditBaseBase \n      cardTitle={cardTitle}\n      defaultCard={true}\n      sidebarButton={sidebarButton}\n      menuActiveLink={menuActiveLink}\n    >\n      {console.log(error)}\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBaseBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const initialValues = data.scheduleItem\n\n  const initialTimeStart = TimeStringToJSDateOBJ(initialValues.timeStart)\n  const subTitle = class_edit_all_subtitle({\n    t: t,\n    location: initialValues.organizationLocationRoom.organizationLocation.name,\n    locationRoom: initialValues.organizationLocationRoom.name,\n    classtype: initialValues.organizationClasstype.name,\n    starttime: initialTimeStart\n  })\n\n  return (\n    <ClassEditBaseBase \n      subTitle={subTitle}\n      cardTitle={cardTitle}\n      sidebarButton={sidebarButton}\n      defaultCard={defaultCard}\n      menuActiveLink={menuActiveLink}\n    >\n      {children}\n    </ClassEditBaseBase>\n  )\n\n}\n\nexport default withTranslation()(withRouter(ClassEditBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\n\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_CLASSES_QUERY, GET_CLASS_QUERY } from '../../queries'\nimport { UPDATE_CLASS } from './queries'\n\nimport { get_list_query_variables } from '../../tools'\nimport { CLASS_SCHEMA } from '../../yupSchema'\nimport ScheduleClassForm from '../../ScheduleClassForm'\n\nimport { dateToLocalISO, dateToLocalISOTime, TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\nimport ClassEditBase from '../ClassEditBase'\nimport { Card } from 'tabler-react';\n\n\nfunction ScheduleClassEditAll({t, match}) {\n  const id = match.params.class_id\n  const menuActiveLink = \"edit\"\n  const returnUrl = \"/schedule/classes\"\n  const cardTitle = t('schedule.classes.title_edit')\n  const { loading, error, data } = useQuery(GET_CLASS_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateScheduleClass ] = useMutation(UPDATE_CLASS)\n\n  if (loading) return (\n    <ClassEditBase menu_activeLink={menuActiveLink}>\n      <p>{t('general.loading_with_dots')}</p>\n    </ClassEditBase>\n  )\n\n  if (error) return (\n    <ClassEditBase menu_activeLink={menuActiveLink}>\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const initialValues = data.scheduleItem\n\n  let initialLevelID = \"\"\n  if (initialValues.organizationLevel) {\n    initialLevelID = initialValues.organizationLevel.id\n  }\n\n  const initialTimeStart = TimeStringToJSDateOBJ(initialValues.timeStart)\n  const initialTimeEnd = TimeStringToJSDateOBJ(initialValues.timeEnd)\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  let dateEnd = null\n  if (initialValues.dateStart) {\n    dateStart = new Date(initialValues.dateStart)\n  }\n  if (initialValues.dateEnd) {\n    dateEnd = new Date(initialValues.dateEnd)\n  }\n\n\n  return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink}\n      defaultCard={false}\n    >\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            displayPublic: initialValues.displayPublic,\n            frequencyType: initialValues.frequencyType,\n            frequencyInterval: initialValues.frequencyInterval,\n            organizationLocationRoom: initialValues.organizationLocationRoom.id,\n            organizationClasstype: initialValues.organizationClasstype.id,\n            organizationLevel: initialLevelID,\n            dateStart: dateStart,\n            dateEnd: dateEnd,\n            timeStart: initialTimeStart,\n            timeEnd: initialTimeEnd,\n            spaces: initialValues.spaces,\n            walkInSpaces: initialValues.walkInSpaces,\n            infoMailContent: initialValues.infoMailContent\n          }}\n          validationSchema={CLASS_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              let frequencyInterval = values.frequencyInterval\n              if (values.frequencyType == 'SPECIFIC')\n                frequencyInterval = 0\n\n              let dateEnd\n                if (values.dateEnd) {\n                  dateEnd = dateToLocalISO(values.dateEnd)\n                } else {\n                  dateEnd = values.dateEnd\n                }  \n\n              updateScheduleClass({ variables: {\n                input: {\n                  id: id,\n                  displayPublic: values.displayPublic,\n                  frequencyType: values.frequencyType,\n                  frequencyInterval: frequencyInterval,\n                  organizationLocationRoom: values.organizationLocationRoom,\n                  organizationClasstype: values.organizationClasstype,\n                  organizationLevel: values.organizationLevel,\n                  dateStart: dateToLocalISO(values.dateStart),\n                  dateEnd: dateEnd,\n                  timeStart: dateToLocalISOTime(values.timeStart),\n                  timeEnd: dateToLocalISOTime(values.timeEnd),\n                  spaces: values.spaces,\n                  walkInSpaces: values.walkInSpaces,\n                  infoMailContent: values.infoMailContent\n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSES_QUERY, variables: get_list_query_variables()}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('schedule.classes.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values, touched }) => (\n            <ScheduleClassForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              setFieldValue={setFieldValue}\n              setFieldTouched={setFieldTouched}\n              errors={errors}\n              values={values}\n              touched={touched}\n              returnUrl={returnUrl}\n            />\n          )}\n        </Formik>      \n      </Card>\n    </ClassEditBase>   \n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassEditAll))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\n\n// import {\n//   Badge\n// } from \"tabler-react\"\n\nconst FormHelp = ({ t, message }) => (\n    <span className=\"form-help\" \n          data-toggle=\"popover\" \n          data-placement=\"top\" \n          data-content={message} \n          data-original-title=\"\" \n          title={message} \n          aria-describedby={'popover23432'}>\n        ?\n    </span>\n)\n\nexport default withTranslation()(FormHelp)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Grid,\n  Form,\n  Table,\n  Text\n} from \"tabler-react\"\n\n\nimport FormHelp from \"../../../../ui/FormHelp\"\n\n\nconst ScheduleClassClasspassForm = ({ t, history, match, isSubmitting, submitForm, errors, values, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n    <Dimmer active={isSubmitting} loader={isSubmitting} >\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group className='mb-0'>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"shopBook\" \n                onChange={() => {\n                  setFieldValue('shopBook', !values.shopBook)\n                  setFieldTouched('shopBook', true)\n                  if (!values.shopBook) {\n                    setFieldValue('attend', true)\n                    setFieldTouched('attend', true)\n                  }\n                  setTimeout(() => {submitForm()}, 200)\n                }}\n                checked={values.shopBook} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('schedule.classes.classpasses.shop_book')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"shopBook\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group className='mb-0'>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"attend\" \n                disabled={(values.shopBook)}\n                onChange={() => {\n                  setFieldValue('attend', !values.attend)\n                  setFieldTouched('attend', true)\n                  setTimeout(() => {submitForm()}, 200)\n                }}\n                checked={values.attend} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.attend')}</span>\n            </Form.Label>\n            {/* Show message to inform user they can't disable attend while enroll or shopBook is enabled*/}\n            { (values.shopBook) ? <div>\n                <Text.Small>{t('schedule.classes.classpasses.attend_disabled')}</Text.Small> { ' ' }\n                <FormHelp message={t('schedule.classes.classpasses.attend_disabled_help')} />\n              </div> : \"\" }\n            <ErrorMessage name=\"attend\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n      </Grid.Row>\n    </Dimmer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(ScheduleClassClasspassForm))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_CLASS_CLASSPASS_SCHEMA = Yup.object().shape({\n  shopBook: Yup.boolean(),\n  attend: Yup.boolean(),\n})\n","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_CLASS_CLASSPASSES_QUERY = gql`\n  query ScheduleItemOrganizationClasspassGroups($after: String, $before: String, $scheduleItem: ID!) {\n    scheduleItemOrganizationClasspassGroups(before: $before, after: $after, scheduleItem: $scheduleItem) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          scheduleItem {\n            id\n          }\n          organizationClasspassGroup {\n            id\n            name\n          }\n          shopBook\n          attend\n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const UPDATE_SCHEDULE_CLASS_CLASSPASS = gql`\n  mutation UpdateScheduleItemOrganizationClasspassGroup($input: UpdateScheduleItemOrganizationClasspassGroupInput!) {\n    updateScheduleItemOrganizationClasspassGroup(input:$input) {\n      scheduleItemOrganizationClasspassGroup {\n        id\n      } \n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassClasspassForm from \"./ScheduleClassClasspassForm\"\n\nimport { SCHEDULE_CLASS_CLASSPASS_SCHEMA } from './yupSchema'\nimport { GET_SCHEDULE_CLASS_CLASSPASSES_QUERY, UPDATE_SCHEDULE_CLASS_CLASSPASS } from \"./queries\"\n\n\nfunction ScheduleClassClasspasses({ t, match }) {\n  const classId = match.params.class_id\n  const menuActiveLink = \"classpasses\"\n  const cardTitle = t('schedule.classes.classpasses.title')\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_CLASS_CLASSPASSES_QUERY, { \n    variables: { scheduleItem: classId }\n  })\n  const [ updateScheduleClassClasspass ] = useMutation(UPDATE_SCHEDULE_CLASS_CLASSPASS)\n\n  const sidebarButton = <HasPermissionWrapper permission=\"add\" resource=\"scheduleitemclasspass\">\n    <Link to={\"/schedule/classes/all/classpasses/\" + classId + \"/add\" } >\n      <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.classpasses.add')}\n      </Button>\n    </Link>\n  </HasPermissionWrapper>\n\n  // Loading\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.classpasses.error_loading')}</p>\n    </ClassEditBase>\n  )\n\n  // Empty list\n  if (!data.scheduleItemOrganizationClasspassGroups.edges.length) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.classpasses.empty_list')}</p>\n    </ClassEditBase>\n  )\n\n  return (\n    <ClassEditBase \n      defaultCard={false} \n      menuActiveLink={menuActiveLink} \n      sidebarButton={sidebarButton}\n    >\n    <ContentCard \n      cardTitle={cardTitle}\n      // headerContent={headerOptions}\n      pageInfo={data.scheduleItemOrganizationClasspassGroups.pageInfo}\n      onLoadMore={() => {\n      fetchMore({\n        variables: {\n          after: data.scheduleItemOrganizationClasspassGroups.pageInfo.endCursor\n        },\n        updateQuery: (previousResult, { fetchMoreResult }) => {\n          const newEdges = fetchMoreResult.scheduleItemOrganizationClasspassGroups.edges\n          const pageInfo = fetchMoreResult.scheduleItemOrganizationClasspassGroups.pageInfo\n\n          return newEdges.length\n            ? {\n                // Put the new locations at the end of the list and update `pageInfo`\n                // so we have the new `endCursor` and `hasNextPage` values\n                data: { \n                  scheduleItemOrganizationClasspassGroups: {\n                    __typename: previousResult.scheduleItemOrganizationClasspassGroups.__typename,\n                    edges: [ ...previousResult.scheduleItemOrganizationClasspassGroups.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              }\n            : previousResult\n          }\n        })\n      }} >\n      <div>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t('general.classpass')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {data.scheduleItemOrganizationClasspassGroups.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                {console.log(node)}\n                <Table.Col key={v4()}> \n                  {node.organizationClasspassGroup.name}\n                </Table.Col>\n                <Table.Col>\n                <Formik\n                    initialValues={{  \n                      shopBook: node.shopBook,\n                      attend: node.attend\n                    }}\n                    validationSchema={SCHEDULE_CLASS_CLASSPASS_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n                        console.log(values)\n\n                        updateScheduleClassClasspass({ variables: {\n                            input: {\n                              id: node.id,\n                              shopBook: values.shopBook,\n                              attend: values.attend\n                            }\n                          }, refetchQueries: [\n                            { query: GET_SCHEDULE_CLASS_CLASSPASSES_QUERY,\n                              variables: { scheduleItem: classId }\n                            }\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.classes.classpasses.toast_edit_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setSubmitting(false)\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setSubmitting(false)\n                          })\n                    }}\n                    >\n                    {({ isSubmitting, errors, values, setFieldTouched, setFieldValue, submitForm }) => (\n                      <ScheduleClassClasspassForm\n                        isSubmitting={isSubmitting}\n                        setFieldTouched={setFieldTouched}\n                        setFieldValue={setFieldValue}\n                        errors={errors}\n                        values={values}\n                        submitForm={submitForm}\n                      >\n                        {console.log(errors)}\n                        {console.log(values)}\n                        test\n                      </ScheduleClassClasspassForm>\n                    )}\n                </Formik>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n        </div>\n      </ContentCard>\n    </ClassEditBase>\n  )\n}\n\n\n// class ScheduleClassClasspasses extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Schedule classs classpasses props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const match = this.props.match\n//     const history = this.props.history\n//     const classId = match.params.class_id\n\n//     const ButtonAdd = <HasPermissionWrapper permission=\"add\" resource=\"scheduleitemclasspass\">\n//       <Link to={\"/schedule/classes/all/classpasses/\" + classId + \"/add\" } >\n//         <Button color=\"primary btn-block mb-6\">\n//         <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.classpasses.add')}\n//         </Button>\n//       </Link>\n//     </HasPermissionWrapper>\n\n//     return (\n//       <SiteWrapper>\n//       <div className=\"my-3 my-md-5\">\n//         {console.log('ID here:')}\n//         {console.log(classId)}\n//         <Query query={GET_SCHEDULE_CLASS_CLASSPASSES_QUERY} variables={{ scheduleItem: classId }}>\n//           {({ loading, error, data, refetch, fetchMore }) => {\n  \n//             // Loading\n//             if (loading) return (\n//               <ClassEditBase menu_activeLink=\"classpasses\" card_title={t('schedule.classes.classpasses.title')} sidebar_button={ButtonAdd}>\n//                 <Dimmer active={true} loader={true} />\n//               </ClassEditBase>\n//             )\n//             // Error\n//             if (error) return (\n//               <ClassEditBase menu_activeLink=\"classpasses\" card_title={t('schedule.classes.classpasses.title')} sidebar_button={ButtonAdd}>\n//                 <p>{t('schedule.classes.classpasses.error_loading')}</p>\n//               </ClassEditBase>\n//             )\n  \n//             const initialTimeStart = TimeStringToJSDateOBJ(data.scheduleItem.timeStart)\n//             const subtitle = class_edit_all_subtitle({\n//               t: t,\n//               location: data.scheduleItem.organizationLocationRoom.organizationLocation.name,\n//               locationRoom: data.scheduleItem.organizationLocationRoom.name,\n//               classtype: data.scheduleItem.organizationClasstype.name,\n//               starttime: initialTimeStart\n//             })\n  \n//             // Empty list\n//             if (!data.scheduleItemOrganizationClasspassGroups.edges.length) { return (\n//               <ClassEditBase menu_activeLink=\"classpasses\" card_title={t('schedule.classes.classpasses.title')} sidebar_button={ButtonAdd}>\n//                 <p>{t('schedule.classes.classpasses.empty_list')}</p>\n//               </ClassEditBase>\n//             )} else {   \n//             // Life's good! :)\n//               return (\n//                 <ClassEditBase \n//                   menu_activeLink=\"classpasses\" \n//                   default_card={false} \n//                   subtitle={subtitle}\n//                   sidebar_button={ButtonAdd}\n//                 >\n//                 <ContentCard \n//                   cardTitle={t('schedule.classes.title_edit')}\n//                   // headerContent={headerOptions}\n//                   pageInfo={data.scheduleItemOrganizationClasspassGroups.pageInfo}\n//                   onLoadMore={() => {\n//                   fetchMore({\n//                     variables: {\n//                       after: data.scheduleItemOrganizationClasspassGroups.pageInfo.endCursor\n//                     },\n//                     updateQuery: (previousResult, { fetchMoreResult }) => {\n//                       const newEdges = fetchMoreResult.scheduleItemOrganizationClasspassGroups.edges\n//                       const pageInfo = fetchMoreResult.scheduleItemOrganizationClasspassGroups.pageInfo\n  \n//                       return newEdges.length\n//                         ? {\n//                             // Put the new locations at the end of the list and update `pageInfo`\n//                             // so we have the new `endCursor` and `hasNextPage` values\n//                             data: { \n//                               scheduleItemOrganizationClasspassGroups: {\n//                                 __typename: previousResult.scheduleItemOrganizationClasspassGroups.__typename,\n//                                 edges: [ ...previousResult.scheduleItemOrganizationClasspassGroups.edges, ...newEdges ],\n//                                 pageInfo\n//                               }\n//                             }\n//                           }\n//                         : previousResult\n//                       }\n//                     })\n//                   }} >\n//                   <div>\n//                     <Table>\n//                       <Table.Header>\n//                         <Table.Row>\n//                           <Table.ColHeader>{t('general.classpass')}</Table.ColHeader>\n//                           <Table.ColHeader></Table.ColHeader>\n//                         </Table.Row>\n//                       </Table.Header>\n//                       <Table.Body>\n//                         {data.scheduleItemOrganizationClasspassGroups.edges.map(({ node }) => (\n//                           <Table.Row key={v4()}>\n//                             {console.log(node)}\n//                             <Table.Col key={v4()}> \n//                               {node.organizationClasspassGroup.name}\n//                             </Table.Col>\n//                             <Table.Col>\n//                             <Mutation mutation={UPDATE_SCHEDULE_CLASS_CLASSPASS}> \n//                               {(updateScheduleClassClasspass, { data }) => (\n//                                 <Formik\n//                                     initialValues={{  \n//                                       shopBook: node.shopBook,\n//                                       attend: node.attend\n//                                     }}\n//                                     validationSchema={SCHEDULE_CLASS_CLASSPASS_SCHEMA}\n//                                     onSubmit={(values, { setSubmitting }) => {\n//                                         console.log(values)\n\n//                                         updateScheduleClassClasspass({ variables: {\n//                                           input: {\n//                                             id: node.id,\n//                                             shopBook: values.shopBook,\n//                                             attend: values.attend\n//                                           }\n//                                         }, refetchQueries: [\n//                                             // {query: GET_SCHEDULE_CLASS_TEACHERS_QUERY, variables: { scheduleItem: match.params.class_id }},\n//                                             // {query: GET_CLASSPASSES_QUERY, variables: {\"archived\": false }},\n//                                         ]})\n//                                         .then(({ data }) => {\n//                                             console.log('got data', data);\n//                                             toast.success((t('schedule.classes.classpasses.toast_edit_success')), {\n//                                                 position: toast.POSITION.BOTTOM_RIGHT\n//                                               })\n//                                             setSubmitting(false)\n//                                           }).catch((error) => {\n//                                             toast.error((t('general.toast_server_error')) +  error, {\n//                                                 position: toast.POSITION.BOTTOM_RIGHT\n//                                               })\n//                                             console.log('there was an error sending the query', error)\n//                                             setSubmitting(false)\n//                                           })\n//                                     }}\n//                                     >\n//                                     {({ isSubmitting, errors, values, setFieldTouched, setFieldValue, submitForm }) => (\n//                                       <ScheduleClassClasspassForm\n//                                         isSubmitting={isSubmitting}\n//                                         setFieldTouched={setFieldTouched}\n//                                         setFieldValue={setFieldValue}\n//                                         errors={errors}\n//                                         values={values}\n//                                         submitForm={submitForm}\n//                                       >\n//                                         {console.log(errors)}\n//                                         {console.log(values)}\n//                                         test\n//                                       </ScheduleClassClasspassForm>\n//                                     )}\n//                                 </Formik>\n//                               )}\n//                             </Mutation>\n//                             </Table.Col>\n//                           </Table.Row>\n//                         ))}\n//                       </Table.Body>\n//                     </Table>\n//                     </div>\n//                   </ContentCard>\n//                 </ClassEditBase>\n//             )}}\n//           }\n//         </Query>\n//       </div>\n//     </SiteWrapper>\n//     )\n//   }\n\n// };\n\nexport default withTranslation()(withRouter(ScheduleClassClasspasses))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Grid,\n  Form,\n  Table,\n  Text\n} from \"tabler-react\"\n\n\nimport FormHelp from \"../../../../ui/FormHelp\"\n\n\nconst ScheduleClassSubscriptionForm = ({ t, history, match, isSubmitting, submitForm, errors, values, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n    <Dimmer active={isSubmitting} loader={isSubmitting} >\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group className='mb-0'>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"enroll\" \n                onChange={() => {\n                  setFieldValue('enroll', !values.enroll)\n                  setFieldTouched('enroll', true)\n                  if (!values.enroll) {\n                    setFieldValue('attend', true)\n                    setFieldTouched('attend', true)\n                  }\n                  setTimeout(() => {submitForm()}, 200)\n                }}\n                checked={values.enroll} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.enroll')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"enroll\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group className='mb-0'>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"shopBook\" \n                onChange={() => {\n                  setFieldValue('shopBook', !values.shopBook)\n                  setFieldTouched('shopBook', true)\n                  if (!values.shopBook) {\n                    setFieldValue('attend', true)\n                    setFieldTouched('attend', true)\n                  }\n                  setTimeout(() => {submitForm()}, 200)\n                }}\n                checked={values.shopBook} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('schedule.classes.subscriptions.shop_book')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"shopBook\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group className='mb-0'>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"attend\" \n                disabled={((values.shopBook) || (values.enroll))}\n                onChange={() => {\n                  setFieldValue('attend', !values.attend)\n                  setFieldTouched('attend', true)\n                  setTimeout(() => {submitForm()}, 200)\n                }}\n                checked={values.attend} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.attend')}</span>\n            </Form.Label>\n            {/* Show message to inform user they can't disable attend while enroll or shopBook is enabled*/}\n            { ((values.shopBook) || (values.enroll)) ? <div>\n                <Text.Small>{t('schedule.classes.subscriptions.attend_disabled')}</Text.Small> { ' ' }\n                <FormHelp message={t('schedule.classes.subscriptions.attend_disabled_help')} />\n              </div> : \"\" }\n            <ErrorMessage name=\"attend\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n      </Grid.Row>\n    </Dimmer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(ScheduleClassSubscriptionForm))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_CLASS_SUBSCRIPTION_SCHEMA = Yup.object().shape({\n  enroll: Yup.boolean(),\n  shopBook: Yup.boolean(),\n  attend: Yup.boolean(),\n})\n","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_CLASS_SUBSCRIPTIONS_QUERY = gql`\n  query ScheduleItemOrganizationSubscriptionGroups($after: String, $before: String, $scheduleItem: ID!) {\n    scheduleItemOrganizationSubscriptionGroups(first: 100, before: $before, after: $after, scheduleItem:$scheduleItem) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          scheduleItem {\n            id\n          }\n          organizationSubscriptionGroup {\n            id\n            name\n          }\n          enroll\n          shopBook\n          attend\n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const UPDATE_SCHEDULE_CLASS_SUBSCRIPTION = gql`\nmutation UpdateScheduleItemOrganizationSubscriptionGroup($input: UpdateScheduleItemOrganizationSubscriptionGroupInput!) {\n  updateScheduleItemOrganizationSubscriptionGroup(input:$input) {\n    scheduleItemOrganizationSubscriptionGroup {\n      id\n    } \n  }\n}\n`\n","// @flow\n\nimport React, { Component } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassSubscriptionForm from \"./ScheduleClassSubscriptionForm\"\n\nimport { SCHEDULE_CLASS_SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport { GET_SCHEDULE_CLASS_SUBSCRIPTIONS_QUERY, UPDATE_SCHEDULE_CLASS_SUBSCRIPTION } from \"./queries\"\n\n\nfunction ScheduleClassSubscriptions({t, match, history}) {\n  const classId = match.params.class_id\n  const menuActiveLink = \"subscriptions\"\n  const cardTitle = t('schedule.classes.subscriptions.title')\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_CLASS_SUBSCRIPTIONS_QUERY, { \n    variables: { scheduleItem: classId }\n  })\n  const [ updateScheduleClassSubscription ] = useMutation(UPDATE_SCHEDULE_CLASS_SUBSCRIPTION)\n\n  const sidebarButton = <HasPermissionWrapper permission=\"add\" resource=\"scheduleitemsubscription\">\n    <Link to={\"/schedule/classes/all/subscriptions/\" + classId + \"/add\" } >\n      <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.subscriptions.add')}\n      </Button>\n    </Link>\n  </HasPermissionWrapper>\n\n  // Loading\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.subscriptions.error_loading')}</p>\n    </ClassEditBase>\n  )\n\n  // Empty list\n  if (!data.scheduleItemOrganizationSubscriptionGroups.edges.length) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.subscriptions.empty_list')}</p>\n    </ClassEditBase>\n  )\n\n  return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      defaultCard={false} \n      sidebarButton={sidebarButton}\n    >\n      <ContentCard \n        cardTitle={cardTitle}\n        // headerContent={headerOptions}\n        pageInfo={data.scheduleItemOrganizationSubscriptionGroups.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: data.scheduleItemOrganizationSubscriptionGroups.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.scheduleItemOrganizationSubscriptionGroups.edges\n            const pageInfo = fetchMoreResult.scheduleItemOrganizationSubscriptionGroups.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new locations at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  data: { \n                    scheduleItemOrganizationSubscriptionGroups: {\n                      __typename: previousResult.scheduleItemOrganizationSubscriptionGroups.__typename,\n                      edges: [ ...previousResult.scheduleItemOrganizationSubscriptionGroups.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                }\n              : previousResult\n            }\n          })\n        }} >\n        <div>\n          <Table>\n            <Table.Header>\n              <Table.Row>\n                <Table.ColHeader>{t('general.subscription')}</Table.ColHeader>\n                <Table.ColHeader></Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {data.scheduleItemOrganizationSubscriptionGroups.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  {console.log(node)}\n                  <Table.Col key={v4()}> \n                    {node.organizationSubscriptionGroup.name}\n                  </Table.Col>\n                  <Table.Col>\n                    <Formik\n                      initialValues={{  \n                        enroll: node.enroll,\n                        shopBook: node.shopBook,\n                        attend: node.attend\n                      }}\n                      validationSchema={SCHEDULE_CLASS_SUBSCRIPTION_SCHEMA}\n                      onSubmit={(values, { setSubmitting }) => {\n                          console.log(values)\n                          updateScheduleClassSubscription({ \n                            variables: {\n                              input: {\n                                id: node.id,\n                                enroll: values.enroll,\n                                shopBook: values.shopBook,\n                                attend: values.attend\n                              }\n                            }, \n                            refetchQueries: [\n                              { query: GET_SCHEDULE_CLASS_SUBSCRIPTIONS_QUERY, \n                                variables: { scheduleItem: classId }\n                            }\n                          ]})\n                          .then(({ data }) => {\n                              console.log('got data', data);\n                              toast.success((t('schedule.classes.subscriptions.toast_edit_success')), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              setSubmitting(false)\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error)\n                              setSubmitting(false)\n                            })\n                      }}\n                      >\n                      {({ isSubmitting, errors, values, setFieldTouched, setFieldValue, submitForm }) => (\n                        <ScheduleClassSubscriptionForm\n                          isSubmitting={isSubmitting}\n                          setFieldTouched={setFieldTouched}\n                          setFieldValue={setFieldValue}\n                          errors={errors}\n                          values={values}\n                          submitForm={submitForm}\n                        >\n                          {console.log(errors)}\n                          {console.log(values)}\n                        </ScheduleClassSubscriptionForm>\n                      )}\n                    </Formik>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n          </div>\n        </ContentCard>\n      </ClassEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassSubscriptions))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_CLASS_TEACHERS_QUERY = gql`\n  query ScheduleItemTeachers($after: String, $before: String, $scheduleItem: ID!) {\n    scheduleItemTeachers(first: 15, before: $before, after: $after, scheduleItem: $scheduleItem) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          role\n          account2 {\n            id\n            fullName\n          }\n          role2\n          dateStart\n          dateEnd       \n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY = gql`\n  query ScheduleItemTeacher($before: String, $after: String, $id: ID!) {\n    scheduleItemTeacher(id: $id) {\n      id\n      account {\n        id\n        fullName\n      }\n      role\n      account2 {\n        id\n        fullName\n      }\n      role2\n      dateStart\n      dateEnd       \n    }\n    accounts(first: 100, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InputValues($after: String, $before: String) {\n    accounts(first: 15, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n  }\n`\n\n\nexport const ADD_SCHEDULE_CLASS_TEACHER = gql`\nmutation CreateScheduleItemTeacher($input:CreateScheduleItemTeacherInput!) {\n  createScheduleItemTeacher(input:$input) {\n    scheduleItemTeacher {\n      id\n    } \n  }\n}\n`\n\n\nexport const UPDATE_SCHEDULE_CLASS_TEACHER = gql`\nmutation UpdateScheduleItemTeacher($input: UpdateScheduleItemTeacherInput!) {\n  updateScheduleItemTeacher(input:$input) {\n    scheduleItemTeacher {\n      id\n    } \n  }\n}\n`\n\n\nexport const DELETE_SCHEDULE_CLASS_TEACHER = gql`\nmutation DeleteScheduleClassTeacher($input: DeleteScheduleItemTeacherInput!) {\n  deleteScheduleItemTeacher(input: $input) {\n    ok\n  }\n}\n`","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { represent_teacher_role } from \"../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_SCHEDULE_CLASS_TEACHERS_QUERY, DELETE_SCHEDULE_CLASS_TEACHER } from \"./queries\"\n\n\nfunction ScheduleClassTeachers({ t, match, history}) {\n  const classId = match.params.class_id\n  const menuActiveLink = \"teachers\"\n  const cardTitle = t('schedule.classes.teachers.title')\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_CLASS_TEACHERS_QUERY, {\n    variables: {scheduleItem: classId}\n  })\n  const [ deleteScheduleItemTeacher ] = useMutation(DELETE_SCHEDULE_CLASS_TEACHER)\n\n  const ButtonAdd = <HasPermissionWrapper permission=\"add\" resource=\"scheduleitemteacher\">\n    <Link to={`/schedule/classes/all/teachers/${classId}/add` } >\n      <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.teachers.add')}\n      </Button>\n    </Link>\n  </HasPermissionWrapper>\n\n  // Loading\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={ButtonAdd}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={ButtonAdd}\n    >\n      <p>{t('schedule.classes.teachers.error_loading')}</p>\n    </ClassEditBase>\n  )\n\n  // Empty list\n  if (!data.scheduleItemTeachers.edges.length) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={ButtonAdd}\n    >\n      <p>{t('schedule.classes.teachers.empty_list')}</p>\n    </ClassEditBase>\n  )\n\n  return (\n    <ClassEditBase \n    menuActiveLink={menuActiveLink} \n    defaultCard={false}\n    sidebarButton={ButtonAdd}\n    >\n      <ContentCard \n        cardTitle={cardTitle}\n        pageInfo={data.scheduleItemTeachers.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: data.scheduleItemTeachers.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.scheduleItemTeachers.edges\n            const pageInfo = fetchMoreResult.scheduleItemTeachers.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new locations at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  data: { \n                    scheduleItemTeachers: {\n                      __typename: previousResult.scheduleItemTeachers.__typename,\n                      edges: [ ...previousResult.scheduleItemTeachers.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                }\n              : previousResult\n            }\n          })\n        }} >\n        <div>\n          <Table>\n            <Table.Header>\n              <Table.Row>\n                <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.teacher')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.teacher_2')}</Table.ColHeader>\n                <Table.ColHeader></Table.ColHeader>\n                <Table.ColHeader></Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {data.scheduleItemTeachers.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  {console.log(node)}\n                  <Table.Col key={v4()}> \n                    {moment(node.dateStart).format('LL')}\n                  </Table.Col>\n                  <Table.Col key={v4()}> \n                    {(node.dateEnd) ? moment(node.dateEnd).format('LL') : \"\"}\n                  </Table.Col>\n                  <Table.Col>\n                    {node.account.fullName} <br />\n                    <span className=\"text-muted\">\n                      {represent_teacher_role(t, node.role)}\n                    </span>\n                  </Table.Col>\n                  <Table.Col>\n                    {node.account2 ?\n                      <span>\n                        {node.account2.fullName} <br />\n                        <span className=\"text-muted\">\n                          {represent_teacher_role(t, node.role2)}\n                        </span>\n                      </span> : \"\"\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={`/schedule/classes/all/teachers/${classId}/edit/${node.id}`}>\n                      <Button className='btn-sm' \n                              color=\"secondary\"\n                      >\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.delete')} \n                        href=\"\"\n                        onClick={() => {\n                          confirm_delete({\n                            t: t,\n                            msgConfirm: t('schedule.classes.teachers.delete_confirm_msg'),\n                            msgDescription: <p>{t('schedule.classes.teachers.delete_confirm_description')}</p>,\n                            msgSuccess: t('schedule.classes.teachers.deleted'),\n                            deleteFunction: deleteScheduleItemTeacher,\n                            functionVariables: { variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, refetchQueries: [\n                              {query: GET_SCHEDULE_CLASS_TEACHERS_QUERY, variables: { scheduleItem: match.params.class_id }}\n                            ]}\n                        })}}\n                    >\n                      <span className=\"text-red\">\n                        <Icon prefix=\"fe\" name=\"trash-2\" />\n                      </span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n          </div>\n        </ContentCard>      \n    </ClassEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassTeachers))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_CLASS_TEACHER_SCHEMA = Yup.object().shape({\n  account: Yup.string()\n    .required(t('yup.field_required')),\n  role: Yup.string(),\n  account2: Yup.string(),\n  role2: Yup.string(),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  // dateEnd: Yup.date()\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\n\nimport CSDatePicker from \"../../../../ui/CSDatePicker\"\n\nconst ScheduleClassTeacherForm = ({ t, history, match, isSubmitting, errors, values, inputData, returnUrl, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                selected={values.dateStart}\n                onChange={(date) => setFieldValue(\"dateStart\", date)}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                selected={values.dateEnd}\n                onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher')}>\n              <Field component=\"select\" \n                      name=\"account\" \n                      className={(errors.account) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in schedule class teacher add:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher_role')}>\n              <Field component=\"select\" \n                      name=\"role\" \n                      className={(errors.role) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                <option value=\"SUB\" key={v4()}>{t('schedule.classes.teacher_roles.sub')}</option>\n                <option value=\"ASSISTANT\" key={v4()}>{t('schedule.classes.teacher_roles.assistant')}</option>\n                <option value=\"KARMA\" key={v4()}>{t('schedule.classes.teacher_roles.karma')}</option>\n              </Field>\n              <ErrorMessage name=\"role\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher2')}>\n              <Field component=\"select\" \n                      name=\"account2\" \n                      className={(errors.account2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher_role2')}>\n              <Field component=\"select\" \n                      name=\"role2\" \n                      className={(errors.role2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                <option value=\"SUB\" key={v4()}>{t('schedule.classes.teacher_roles.sub')}</option>\n                <option value=\"ASSISTANT\" key={v4()}>{t('schedule.classes.teacher_roles.assistant')}</option>\n                <option value=\"KARMA\" key={v4()}>{t('schedule.classes.teacher_roles.karma')}</option>\n              </Field>\n              <ErrorMessage name=\"role2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(ScheduleClassTeacherForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nconst ScheduleClassTeacherBack = ({ t, classId }) => (\n  <Link to={\"/schedule/classes/all/teachers/\" + classId } >\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(withRouter(ScheduleClassTeacherBack))","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_SCHEDULE_CLASS_TEACHERS_QUERY, GET_INPUT_VALUES_QUERY, ADD_SCHEDULE_CLASS_TEACHER } from './queries'\nimport { SCHEDULE_CLASS_TEACHER_SCHEMA } from './yupSchema'\nimport ScheduleClassTeacherForm from './ScheduleClassTeacherForm'\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassTeacherBack from \"./ScheduleClassTeacherBack\"\n\n\nfunction ScheduleClassTeacherAdd({ t, history, match }) {\n  const classId = match.params.class_id\n  const returnUrl = `/schedule/classes/all/teachers/${classId}`\n  const cardTitle = t('schedule.classes.teachers.title_add')\n  const menuActiveLink = \"teachers\" \n  const sidebarButton = <ScheduleClassTeacherBack classId={classId} />\n\n  const {loading, error, data} = useQuery(GET_INPUT_VALUES_QUERY)\n  const [addScheduleClassTeacher] = useMutation(ADD_SCHEDULE_CLASS_TEACHER)\n\n  if (loading) return (\n    <ClassEditBase\n      cardTitle={cardTitle}\n      menuActiveLink={menuActiveLink}\n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.loading_with_dots')}</p>\n    </ClassEditBase>\n  )\n\n  if (error) return (\n    <ClassEditBase\n      cardTitle={cardTitle}\n      menuActiveLink={menuActiveLink}\n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n\n  return (\n    <ClassEditBase\n      cardTitle={cardTitle}\n      menuActiveLink={menuActiveLink}\n      sidebarButton={sidebarButton}\n    >\n      <Formik\n        initialValues={{ \n          price: \"\", \n          dateStart: new Date() ,\n          account: \"\",\n          role: \"\",\n          account2: \"\",\n          role2: \"\",\n        }}\n        validationSchema={SCHEDULE_CLASS_TEACHER_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n\n            let dateEnd\n            if (values.dateEnd) {\n              dateEnd = dateToLocalISO(values.dateEnd)\n            } else {\n              dateEnd = values.dateEnd\n            }\n\n            addScheduleClassTeacher({ variables: {\n              input: {\n                scheduleItem: match.params.class_id,\n                account: values.account,\n                role: values.role,\n                account2: values.account2,\n                role2: values.role2,\n                dateStart: dateToLocalISO(values.dateStart),\n                dateEnd: dateEnd\n              }\n            }, refetchQueries: [\n                {query: GET_SCHEDULE_CLASS_TEACHERS_QUERY, variables: { scheduleItem: match.params.class_id }},\n                // {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                history.push(returnUrl)\n                toast.success((t('schedule.classes.teachers.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleClassTeacherForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ClassEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassTeacherAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SCHEDULE_CLASS_TEACHERS_QUERY, GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY, UPDATE_SCHEDULE_CLASS_TEACHER } from './queries'\nimport { SCHEDULE_CLASS_TEACHER_SCHEMA } from './yupSchema'\nimport ScheduleClassTeacherForm from './ScheduleClassTeacherForm'\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassTeacherBack from \"./ScheduleClassTeacherBack\"\n\n\nfunction ScheduleClassTeacherEdit({ t, match, history }) {\n  const id = match.params.id\n  const classId = match.params.class_id\n  const returnUrl = `/schedule/classes/all/teachers/${classId}`\n  const cardTitle = t('schedule.classes.teachers.title_edit')\n  const menuActiveLink = \"teachers\"\n  const sidebarButton = <ScheduleClassTeacherBack classId={classId} />\n\n  const {loading, error, data} = useQuery(GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY, {\n    variables: { id: id }\n  })\n  const [updateScheduleClassTeacher] = useMutation(UPDATE_SCHEDULE_CLASS_TEACHER)\n\n  if (loading) return (\n    <ClassEditBase\n      cardTitle={cardTitle}\n      menuActiveLink={menuActiveLink}\n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.loading_with_dots')}</p>\n    </ClassEditBase>\n  )\n\n  if (error) return (\n    <ClassEditBase\n      cardTitle={cardTitle}\n      menuActiveLink={menuActiveLink}\n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const initialData = data.scheduleItemTeacher\n\n  let initialAccount2 = \"\"\n  if (initialData.account2) {\n    initialAccount2 =  initialData.account2.id\n  } \n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  if (initialData.dateStart) {\n    dateStart = new Date(initialData.dateStart)\n  }\n  \n  let dateEnd = null\n  if (initialData.dateEnd) {\n    dateEnd = new Date(initialData.dateEnd)\n  }\n\n  return (\n    <ClassEditBase \n      cardTitle={cardTitle}\n      menuActiveLink=\"teachers\"\n      sidebarButton={sidebarButton}\n    >\n      <Formik\n        initialValues={{  \n          dateStart: dateStart,\n          dateEnd: dateEnd,\n          account: initialData.account.id,\n          role: initialData.role,\n          account2: initialAccount2,\n          role2: initialData.role2,\n        }}\n        validationSchema={SCHEDULE_CLASS_TEACHER_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n\n            let dateEnd\n            if (values.dateEnd) {\n              dateEnd = dateToLocalISO(values.dateEnd)\n            } else {\n              dateEnd = values.dateEnd\n            }\n\n            updateScheduleClassTeacher({ variables: {\n              input: {\n                id: match.params.id,\n                account: values.account,\n                role: values.role,\n                account2: values.account2,\n                role2: values.role2,\n                dateStart: dateToLocalISO(values.dateStart),\n                dateEnd: dateEnd\n              }\n            }, refetchQueries: [\n                {query: GET_SCHEDULE_CLASS_TEACHERS_QUERY, variables: { scheduleItem: match.params.class_id }},\n                // {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('schedule.classes.teachers.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleClassTeacherForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n          >\n            {console.log(errors)}\n          </ScheduleClassTeacherForm>\n        )}\n      </Formik>\n    </ClassEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassTeacherEdit))","import CSLS from \"../../../../../tools/cs_local_storage\"\nimport { withRouter } from \"react-router\"\n\nexport function get_accounts_query_variables() {\n  let queryVars = {\n    teacher: undefined,\n    employee: undefined,\n    searchName: undefined\n  }\n\n  let search = localStorage.getItem(CSLS.SCHEDULE_CLASSES_CLASS_ATTENDANCE_SEARCH)\n  queryVars.searchName = search\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\nexport function get_attendance_list_query_variables(schedule_item_id, date) {\n  return {\n    scheduleItem: schedule_item_id,\n    date: date\n  }\n}\n","import moment from 'moment'\n\nexport function class_subtitle({t, location, locationRoom, classtype, timeStart, date}) {\n  return t('general.class') + ': ' + \n         location + ' (' + locationRoom + ') - ' + \n         classtype + ' @ ' + \n         moment(date).format('LL') + ' ' + moment(timeStart).format('LT')\n}\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nconst ScheduleClassBack = ({ t, classId }) => (\n  <Link to={\"/schedule/classes/\"} >\n    <Button color=\"link mr-2\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(withRouter(ScheduleClassBack))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n\nfunction ClassMenu ({ t, scheduleItemId, class_date, activeLink }) {\n  let attendance_active = false\n  let attendancechart_active = false\n  let edit_active = false\n\n  switch (activeLink) {\n    case \"attendance\":\n      attendance_active = true\n      break\n    case \"attendancechart\":\n      attendancechart_active = true\n      break\n    case \"edit\":\n      edit_active = true\n      break\n  }\n\n  return (\n    <div>\n      <h5>{t(\"general.menu\")}</h5>\n      <List.Group transparent={true}>   \n        <HasPermissionWrapper \n            resource=\"scheduleitemattendance\"\n            permission=\"view\" \n        >\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to={\"#/schedule/classes/class/attendance/\" + scheduleItemId + \"/\" + class_date}\n              icon=\"check-circle\"\n              active={attendance_active}\n              >\n              {t(\"general.attendance\")}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            resource=\"scheduleitemattendance\"\n            permission=\"view\" \n        >\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to={\"#/schedule/classes/class/attendance_chart/\" + scheduleItemId + \"/\" + class_date}\n              icon=\"bar-chart-2\"\n              active={attendancechart_active}\n              >\n              {t(\"schedule.classes.class.attendance_chart.title\")}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            resource=\"scheduleclassweeklyotc\"\n            permission=\"change\" \n        >\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to={\"#/schedule/classes/class/edit/\" + scheduleItemId + \"/\" + class_date}\n              icon=\"edit-3\"\n              active={edit_active}\n              >\n              {t(\"general.edit\")}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n\n      </List.Group>\n    </div>\n  )\n}\n\nexport default withTranslation()(ClassMenu)","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { get_attendance_list_query_variables } from \"./tools\"\nimport { DELETE_SCHEDULE_CLASS_ATTENDANCE, GET_SCHEDULE_CLASS_ATTENDANCE_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\n\nfunction ScheduleClassAttendanceDelete({t, match, node}) {\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const [deleteScheduleItemAttendance, { data }] = useMutation(DELETE_SCHEDULE_CLASS_ATTENDANCE)\n\n    return (\n      <button className=\"icon btn btn-link btn-sm pull-right\" \n        title={t('general.delete')} \n        href=\"\"\n        onClick={() => {\n          confirm_delete({\n            t: t,\n            msgConfirm: t(\"schedule.classes.class.attendance.delete_confirm_msg\"),\n            msgDescription: <p>{node.account.fullName}</p>,\n            msgSuccess: t('schedule.classes.class.attendance.delete_success'),\n            deleteFunction: deleteScheduleItemAttendance,\n            functionVariables: { \n              variables: {\n                input: {\n                  id: node.id\n                }\n              }, \n              refetchQueries: [\n                { query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, \n                  variables: get_attendance_list_query_variables(schedule_item_id, class_date) },\n              ]\n            }\n          })\n      }}>\n        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n      </button>\n    )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassAttendanceDelete))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNTS_QUERY = gql`\n  query Accounts(\n    $after: String, \n    $before: String, \n    $searchName: String,\n    $teacher: Boolean,\n    $employee: Boolean\n  ) {\n    accounts(\n      first: 25, \n      before: $before, \n      after: $after, \n      isActive: true, \n      fullName_Icontains: $searchName,\n      customer: true,\n      teacher: $teacher,\n      employee: $employee\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          fullName\n          email\n          isActive\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Dropdown,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { get_attendance_list_query_variables } from \"./tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { get_accounts_query_variables } from \"./tools\"\nimport { class_subtitle } from \"../tools\"\n\nimport ScheduleClassBack from \"../ScheduleClassBack\"\nimport ClassMenu from \"../ClassMenu\"\nimport ContentCard from \"../../../../general/ContentCard\"\nimport InputSearch from \"../../../../general/InputSearch\"\nimport BadgeBookingStatus from \"../../../../ui/BadgeBookingStatus\"\nimport ScheduleClassAttendanceDelete from \"./ScheduleClassAttendanceDelete\"\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_ACCOUNTS_QUERY } from \"../../../../../queries/accounts/account_search_queries\"\nimport { GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, UPDATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction setAttendanceStatus({t, match, updateAttendance, node, status}) {\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  updateAttendance({\n    variables: { \n      input: {\n        id: node.id, \n        bookingStatus: status\n      }\n    },\n    refetchQueries: [\n      {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, \n        variables: get_attendance_list_query_variables(schedule_item_id, class_date)}\n    ]\n  }).then(({ data }) => {\n    console.log('got data', data);\n    toast.success(\n      t('schedule.classes.class.attendance.status_saved'), {\n        position: toast.POSITION.BOTTOM_RIGHT\n      })\n  }).catch((error) => {\n    toast.error((t('general.toast_server_error')) +  error, {\n        position: toast.POSITION.BOTTOM_RIGHT\n      })\n    console.log('there was an error sending the query', error);\n  })\n}\n\n\nfunction ScheduleClassAttendance({ t, match, history }) {\n  const [showSearch, setShowSearch] = useState(false)\n  const return_url = \"/schedule/classes/\"\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const { refetch: refetchAttendance, loading: queryAttendanceLoading, error: queryAttendanceError, data: queryAttendanceData } = useQuery(\n    GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, {\n      variables: get_attendance_list_query_variables(schedule_item_id, class_date)\n    }\n  )\n  const [ updateAttendance, \n    { loading: mutationAttendanceLoading, error: mutationAttendanceError },\n  ] = useMutation(UPDATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  const [ getAccounts, \n         { refetch: refetchAccounts, \n           fetchMore: fetchMoreAccounts,\n           loading: queryAccountsLoading, \n           error: queryAccountsError, \n           data: queryAccountsData \n         }] = useLazyQuery( GET_ACCOUNTS_QUERY )\n\n  console.log('queryAccountsData')\n  console.log(queryAccountsData)\n\n  // const [createInvoice, { data }] = useMutation(CREATE_ACCOUNT_INVOICE, {\n  //   // onCompleted = () => history.push('/finance/invoices/edit/')\n  // }) \n\n  // Query\n  // Loading\n  if (queryAttendanceLoading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (queryAttendanceError) {\n    console.log(queryAttendanceError)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n  \n  console.log(queryAttendanceData)\n  let checkedInIds = []\n  queryAttendanceData.scheduleItemAttendances.edges.map(({ node }) => (\n    checkedInIds.push(node.account.id)\n  ))\n  console.log(checkedInIds)\n\n  const scheduleItem = queryAttendanceData.scheduleItem\n  const subtitle = class_subtitle({\n    t: t,\n    location: scheduleItem.organizationLocationRoom.organizationLocation.name, \n    locationRoom: scheduleItem.organizationLocationRoom.name,\n    classtype: scheduleItem.organizationClasstype.name, \n    timeStart: TimeStringToJSDateOBJ(scheduleItem.timeStart), \n    date: class_date\n  })\n  \n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('schedule.title')} subTitle={subtitle}>\n            <div className=\"page-options d-flex\">       \n              <ScheduleClassBack />\n              <InputSearch \n                initialValueKey={CSLS.SCHEDULE_CLASSES_CLASS_ATTENDANCE_SEARCH}\n                placeholder=\"Search...\"\n                onChange={(value) => {\n                  console.log(value)\n                  localStorage.setItem(CSLS.SCHEDULE_CLASSES_CLASS_ATTENDANCE_SEARCH, value)\n                  if (value) {\n                    // {console.log('showSearch')}\n                    // {console.log(showSearch)}\n                    setShowSearch(true)\n                    getAccounts({ variables: get_accounts_query_variables()})\n                  } else {\n                    setShowSearch(false)\n                  }\n                }}\n              />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n              <Grid.Col md={9}>\n                {/* Search results */}\n                {(showSearch && (queryAccountsData) && (!queryAccountsLoading) && (!queryAccountsError)) ?\n                  <ContentCard cardTitle={t('general.search_results')}\n                              pageInfo={queryAccountsData.accounts.pageInfo}\n                              onLoadMore={() => {\n                                fetchMoreAccounts({\n                                  variables: {\n                                  after: queryAccountsData.accounts.pageInfo.endCursor\n                                },\n                                updateQuery: (previousResult, { fetchMoreResult }) => {\n                                  const newEdges = fetchMoreResult.accounts.edges\n                                  const pageInfo = fetchMoreResult.accounts.pageInfo \n\n                                  return newEdges.length\n                                    ? {\n                                        // Put the new accounts at the end of the list and update `pageInfo`\n                                        // so we have the new `endCursor` and `hasNextPage` values\n                                        queryAccountsData: {\n                                          accounts: {\n                                            __typename: previousResult.accounts.__typename,\n                                            edges: [ ...previousResult.accounts.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      }\n                                    : previousResult\n                                }\n                              })\n                            }} >\n                    { (!queryAccountsData.accounts.edges.length) ? \n                      t('schedule.classes.class.attendance.search_result_empty') : \n                      <Table>\n                        <Table.Header>\n                          <Table.Row key={v4()}>\n                            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                            <Table.ColHeader>{t('general.email')}</Table.ColHeader>\n                            <Table.ColHeader></Table.ColHeader>\n                          </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                          {queryAccountsData.accounts.edges.map(({ node }) => (\n                            <Table.Row key={v4()}>\n                              <Table.Col key={v4()}>\n                                {node.fullName}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.email}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {(checkedInIds.includes(node.id)) ? \n                                 <span className=\"pull-right\">{t(\"schedule.classes.class.attendance.search_results_already_checked_in\")}</span> :\n                                  <Link to={\"/schedule/classes/class/book/\" + schedule_item_id + \"/\" + class_date + \"/\" + node.id}>\n                                    <Button color=\"secondary pull-right\">\n                                      {t('general.checkin')} <Icon name=\"chevron-right\" />\n                                    </Button>\n                                  </Link>       \n                                }   \n                              </Table.Col>\n                            </Table.Row>\n                          ))}\n                        </Table.Body>\n                      </Table>\n                    }\n                  </ContentCard>\n                  : \"\"\n                }\n                {/* Attendance */}\n                <ContentCard cardTitle={t('general.attendance')}\n                             pageInfo={queryAttendanceData.scheduleItemAttendances.pageInfo}\n                             onLoadMore={() => {\n                                fetchMoreAccounts({\n                                variables: {\n                                  after: queryAttendanceData.scheduleItemAttendances.pageInfo.endCursor\n                                },\n                                updateQuery: (previousResult, { fetchMoreResult }) => {\n                                  const newEdges = fetchMoreResult.scheduleItemAttendances.edges\n                                  const pageInfo = fetchMoreResult.scheduleItemAttendances.pageInfo \n\n                                  return newEdges.length\n                                    ? {\n                                        // Put the new scheduleItemAttendances at the end of the list and update `pageInfo`\n                                        // so we have the new `endCursor` and `hasNextPage` values\n                                        queryAttendanceData: {\n                                          scheduleItemAttendances: {\n                                            __typename: previousResult.scheduleItemAttendances.__typename,\n                                            edges: [ ...previousResult.scheduleItemAttendances.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      }\n                                    : previousResult\n                                }\n                              })\n                            }} >\n                  <Table>\n                    <Table.Header>\n                      <Table.Row key={v4()}>\n                        <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                        <Table.ColHeader>{t('general.booking_status')}</Table.ColHeader>\n                        <Table.ColHeader></Table.ColHeader>\n                      </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                      {queryAttendanceData.scheduleItemAttendances.edges.map(({ node }) => (\n                          <Table.Row key={v4()}>\n                            <Table.Col>\n                              {node.account.fullName}\n                            </Table.Col>\n                            <Table.Col>\n                              <BadgeBookingStatus status={node.bookingStatus} />\n                            </Table.Col>\n                            <Table.Col>\n                              {/* Delete */}\n                              <ScheduleClassAttendanceDelete node={node} />\n                              {/* Status dropdown */}\n                              <Dropdown\n                                key={v4()}\n                                className=\"pull-right\"\n                                type=\"button\"\n                                toggle\n                                color=\"secondary btn-sm\"\n                                triggerContent={t(\"general.status\")}\n                                items={[\n                                  // <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                                  //   <Dropdown.Item\n                                  //     key={v4()}\n                                  //     icon=\"check\"\n                                  //     onClick={() => {\n                                  //       setAttendanceStatus({\n                                  //         t: t, \n                                  //         updateAttendance: updateAttendance,\n                                  //         node: node,\n                                  //         status: 'ATTENDING'\n                                  //       })\n                                  //       refetchAttendance()\n                                  //     }}>\n                                  //       {t('schedule.classes.class.attendance.booking_status.ATTENDING')}\n                                  //   </Dropdown.Item>\n                                  // </HasPermissionWrapper>,\n                                  <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                                    <Dropdown.Item\n                                      key={v4()}\n                                      icon=\"calendar\"\n                                      onClick={() => {\n                                        setAttendanceStatus({\n                                          t: t, \n                                          match: match,\n                                          updateAttendance: updateAttendance,\n                                          node: node,\n                                          status: 'BOOKED'\n                                        })\n                                      }}>\n                                        {t('schedule.classes.class.attendance.booking_status.BOOKED')}\n                                    </Dropdown.Item>\n                                  </HasPermissionWrapper>,\n                                  <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                                    <Dropdown.Item\n                                      key={v4()}\n                                      icon=\"x\"\n                                      onClick={() => {\n                                        setAttendanceStatus({\n                                          t: t, \n                                          match: match,\n                                          updateAttendance: updateAttendance,\n                                          node: node,\n                                          status: 'CANCELLED'\n                                        })\n                                      }}>\n                                        {t('schedule.classes.class.attendance.booking_status.CANCELLED')}\n                                    </Dropdown.Item>\n                                  </HasPermissionWrapper>,\n                                ]}\n                              />\n                              {(node.bookingStatus == \"BOOKED\") ?\n                                <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                                  <Button\n                                    key={v4()}\n                                    className=\"pull-right\"\n                                    color=\"success\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                      setAttendanceStatus({\n                                        t: t, \n                                        match: match,\n                                        updateAttendance: updateAttendance,\n                                        node: node,\n                                        status: 'ATTENDING'\n                                      })\n                                    }}>\n                                      {t('general.checkin')}\n                                  </Button>\n                                </HasPermissionWrapper>  : \"\" }\n                            </Table.Col>\n                          </Table.Row>\n                        ))}\n                    </Table.Body>\n                  </Table>\n                </ContentCard>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <ClassMenu \n                  scheduleItemId={schedule_item_id}\n                  class_date={class_date}\n                  activeLink=\"attendance\"\n                />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassAttendance))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport ScheduleClassBack from \"./ScheduleClassBack\"\nimport ClassMenu from \"./ClassMenu\"\n\n\nfunction ScheduleClassEditBase({ t, match, history, children, subTitle=\"\", menuActiveLink=\"\" }) {\n  const scheduleItemId = match.params.class_id\n  const classDate = match.params.date\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('schedule.title')} subTitle={subTitle}>\n            <div className=\"page-options d-flex\">       \n              <ScheduleClassBack />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ClassMenu \n                scheduleItemId={scheduleItemId}\n                class_date={classDate}\n                activeLink={menuActiveLink}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassEditBase))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_CLASS_ATTENDANCE_COUNT_YEAR = gql`\n  query InsightClassAttendanceQuery($year: Int!, $scheduleItem: ID!) {\n    insightClassAttendanceCountYear(year: $year, scheduleItem: $scheduleItem) {\n      description\n      dataCurrent\n      dataPrevious\n      year\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n","import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport C3Chart from \"react-c3js\"\n\nimport {\n    colors,\n    Card,\n  } from \"tabler-react\";\n\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\nimport { class_subtitle } from \"../tools\"\nimport ScheduleClassEditBase from '../ScheduleClassEditBase'\n\n\nimport { GET_CLASS_ATTENDANCE_COUNT_YEAR } from \"./queries\"\n\n\nfunction ScheduleClassAttendanceChart({t, history, match}) {\n  const classDate = match.params.date\n  const scheduleItemId = match.params.class_id\n  const menuActiveLink = \"attendancechart\"\n\n  const year = parseInt(classDate.substring(0, 4))\n  console.log(year)\n\n  const { loading, error, data } = useQuery(GET_CLASS_ATTENDANCE_COUNT_YEAR, {\n    variables: {\n      year: year,\n      scheduleItem: scheduleItemId\n    }\n  })\n\n  if (loading) {\n    return (\n      <ScheduleClassEditBase menuActiveLink={menuActiveLink}>\n          {t('general.loading_with_dots')}\n      </ScheduleClassEditBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <ScheduleClassEditBase menuActiveLink={menuActiveLink}>\n          {t('general.error_sad_smiley')}\n      </ScheduleClassEditBase>\n    )\n  }\n\n  const dataLabelCurrentYear = year\n  const chartDataCurrentYear = data.insightClassAttendanceCountYear.dataCurrent\n  const dataLabelPreviousYear = year - 1\n  const chartDataPreviousYear = data.insightClassAttendanceCountYear.dataPrevious\n  const scheduleItem = data.scheduleItem\n  \n  const subTitle = class_subtitle({\n    t: t,\n    location: scheduleItem.organizationLocationRoom.organizationLocation.name, \n    locationRoom: scheduleItem.organizationLocationRoom.name,\n    classtype: scheduleItem.organizationClasstype.name, \n    timeStart: TimeStringToJSDateOBJ(scheduleItem.timeStart), \n    date: classDate\n  })\n\n  function range(size, startAt = 0) {\n    return [...Array(size).keys()].map(i => i + startAt);\n  }\n\n  return (\n    <ScheduleClassEditBase menuActiveLink={menuActiveLink} subTitle={subTitle}>\n      <Card title={t('schedule.classes.class.attendance_chart.title')}>\n        <Card.Body>\n          <C3Chart\n            style={{ height: \"16rem\" }}\n            data={{\n              x: 'x',\n              columns: [\n                // each columns data as array, starting with \"name\" and then containing data\n                [ 'x',\n                  ...range(54, 1) // This adds 1 .. 53\n                ],\n                [ 'current', ...chartDataCurrentYear],\n                [ 'previous', ...chartDataPreviousYear],\n              ],\n              type: \"bar\", // default type of chart\n              groups: [['current'], ['previous']],\n              colors: {\n                current: colors[\"azure\"],\n                previous: colors[\"azure-lighter\"],\n              },\n              names: {\n                // name of each serie\n                current: dataLabelCurrentYear,\n                previous: dataLabelPreviousYear\n              },\n              \n            }}\n            axis={{\n              y: {\n                padding: {\n                  bottom: 0,\n                },\n                show: true,\n                // Don't show decimals on ticks, only whole numbers\n                tick: {\n                  format: function (d) {\n                      return (parseInt(d) == d) ? d : null;\n                  }\n                }\n              },\n              x: {\n                padding: {\n                  left: 0,\n                  right: 0,\n                },\n                type: 'category',\n                show: true,\n              },\n            }}\n            tooltip={{\n              format: {\n                title: function(x) {\n                  return \"\";\n                },\n              },\n            }}\n            padding={{\n              bottom: 0,\n              // left: -1,\n              right: -1,\n            }}\n            point={{\n              show: false,\n            }}\n          />\n        </Card.Body>\n        <Card.Footer>\n          {/* {t(\"insight.revenue.total.explanation\")} */}\n        </Card.Footer>\n      </Card>\n    </ScheduleClassEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassAttendanceChart))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nconst ScheduleClassBookBack = ({ t, classId, date }) => (\n  <Link to={\"/schedule/classes/class/attendance/\" + classId + \"/\" + date} >\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(withRouter(ScheduleClassBookBack))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_BOOKING_OPTIONS_QUERY = gql`\n  query ScheduleClassBookingOptions($account: ID!, $scheduleItem:ID!, $date:Date!, $listType:String!) {\n    scheduleClassBookingOptions(account: $account, scheduleItem: $scheduleItem, date:$date, listType:$listType) {\n      date\n      account {\n        id\n        fullName\n        hasReachedTrialLimit\n      }\n      alreadyBooked\n      scheduleItem {\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n      }\n    \tscheduleItemPrices {\n        organizationClasspassDropin {\n          id\n          name\n          priceDisplay\n        }\n        organizationClasspassTrial {\n          id\n          name\n          priceDisplay\n        }\n      }\n      classpasses {\n        bookingType \n        allowed\n        accountClasspass {\n          id\n          dateStart\n          dateEnd\n          classesRemainingDisplay\n          organizationClasspass {\n            id\n            name\n          }\n        }\n      }\n      subscriptions {\n        bookingType\n        allowed\n        blocked\n        paused\n        accountSubscription {\n          id\n          dateStart\n          dateEnd\n          organizationSubscription {\n            id\n            name\n          }\n          creditTotal\n        }\n      }\n    }\n  }\n`\n\n\nexport const CREATE_SCHEDULE_ITEM_ATTENDANCE = gql`\n  mutation CreateScheduleItemAttendance($input: CreateScheduleItemAttendanceInput!) {\n    createScheduleItemAttendance(input:$input) {\n      scheduleItemAttendance {\n        id\n      }\n    }\n  }\n`","export function getUrlFromReturnTo({returnTo, schedule_item_id, class_date, locationId}) {\n  let return_url\n\n  if (returnTo == \"schedule_classes\") {\n    return_url = '/schedule/classes/class/attendance/' + schedule_item_id + \"/\" + class_date\n  } else if (returnTo == \"selfcheckin\") {\n    return_url = '/selfcheckin/checkin/' + locationId + \"/\" + schedule_item_id + \"/\" + class_date\n  }\n  \n  return return_url\n}","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button,\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport { get_attendance_list_query_variables } from \"../attendance/tools\"\nimport { GET_SCHEDULE_CLASS_ATTENDANCE_QUERY } from \"../attendance/queries\"\nimport { CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\nimport { getUrlFromReturnTo } from \"./tools\"\n\n\nfunction ClasspassCheckinButton({t, match, history, classpass, returnTo, locationId=null}) {\n  console.log(classpass)\n  const account_id = match.params.account_id\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  const createInput = {\n    \"account\": account_id,\n    \"scheduleItem\": schedule_item_id,\n    \"accountClasspass\": classpass.accountClasspass.id,\n    \"date\": class_date,\n    \"attendanceType\": \"CLASSPASS\",\n    \"bookingStatus\": \"ATTENDING\"\n  }\n\n  const [classCheckin, { data, loading, error, onCompleted }] = useMutation(CREATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loading) {\n    return \"Please wait...\"\n  }\n\n  if (error) {\n    return \"uh oh... error found\"\n  }\n\n  const return_url = getUrlFromReturnTo({\n    returnTo: returnTo,\n    schedule_item_id: schedule_item_id,\n    class_date: class_date,\n    locationId: locationId\n  })\n\n  return (\n    <Button \n      block \n      outline \n      color=\"success\" \n      icon=\"check\"\n      onClick={() => classCheckin({\n        variables: { \"input\": createInput }, \n        refetchQueries: [\n          {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, variables: get_attendance_list_query_variables(schedule_item_id, class_date)},\n        ]})\n        .then(({ data }) => {\n            console.log('got data', data);\n            // redirect back to attendance list\n            history.push(return_url)\n            // show message to user\n            toast.success((t('schedule.classes.class.book.toast_success')), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n          }).catch((error) => {\n            toast.error((t('general.toast_server_error')) +  error, {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            console.log('there was an error sending the query', error)\n          })}\n    >\n      {t(\"general.checkin\")}\n    </Button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ClasspassCheckinButton))\n\n","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  List,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle, represent_teacher_role } from \"../../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ScheduleClassBookBack from \"./ScheduleClassBookBack\"\nimport ClasspassCheckinButton from \"./ScheduleClassBookClasspassBtn\"\n\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_BOOKING_OPTIONS_QUERY, CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ScheduleClassBookClasspasses({ \n  t, \n  match, \n  history, \n  classpasses,  \n  locationId,\n  onClickCheckin=f=>f ,\n  returnTo=\"schedule_classes\"\n}) {\n\n  return (\n    classpasses.map((classpass) =>(\n      <Grid.Col md={3}>\n        <Card \n          statusColor=\"blue\"\n          title={t(\"general.classpass\")} >\n        <Card.Body>\n          <b>{classpass.accountClasspass.organizationClasspass.name}</b><br />\n          <span className=\"text-muted\">\n            {t('general.classes_remaining')}: {classpass.accountClasspass.classesRemainingDisplay} <br />\n            {t('general.valid_until')}: {moment(classpass.accountClasspass.dateEnd).format('LL')} <br />\n          </span>\n        </Card.Body>\n        <Card.Footer>\n          {(!classpass.allowed) ? t('schedule.classes.class.book.classpass_not_allowed') :\n            <ClasspassCheckinButton classpass={classpass} returnTo={returnTo} locationId={locationId} />\n          }\n        </Card.Footer>\n        </Card>\n      </Grid.Col>\n    ))\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBookClasspasses))\n\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport { get_attendance_list_query_variables } from \"../attendance/tools\"\nimport { GET_SCHEDULE_CLASS_ATTENDANCE_QUERY } from \"../attendance/queries\"\nimport { CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\nimport { getUrlFromReturnTo } from \"./tools\"\n\n\nfunction SubscriptionCheckinButton({t, match, history, subscription, returnTo, locationId=null}) {\n  console.log(subscription)\n  const account_id = match.params.account_id\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  const createInput = {\n    \"account\": account_id,\n    \"scheduleItem\": schedule_item_id,\n    \"accountSubscription\": subscription.accountSubscription.id,\n    \"date\": class_date,\n    \"attendanceType\": \"SUBSCRIPTION\",\n    \"bookingStatus\": \"ATTENDING\"\n  }\n\n  const [classCheckin, { data, loading, error, onCompleted }] = useMutation(CREATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loading) {\n    return \"Please wait...\"\n  }\n\n  if (error) {\n    return \"uh oh... error found\"\n  }\n\n  const return_url = getUrlFromReturnTo({\n    returnTo: returnTo,\n    schedule_item_id: schedule_item_id,\n    class_date: class_date,\n    locationId: locationId\n  })\n\n  if (subscription.blocked) {\n    return (\n      <p className=\"text-muted\">\n        <Icon name=\"alert-triangle\" />\n        {t(\"schedule.classes.class.book.subscription_blocked\")}\n      </p>\n    )\n  }\n\n  if (subscription.paused) {\n    return (\n      <p className=\"text-muted\">\n        <Icon name=\"pause\" />\n        {t(\"schedule.classes.class.book.subscription_paused\")}\n      </p>\n    )\n  }\n\n  return (\n    <Button \n      block \n      outline \n      color=\"success\" \n      icon=\"check\"\n      onClick={() => classCheckin({\n        variables: { \"input\": createInput }, \n        refetchQueries: [\n          {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, variables: get_attendance_list_query_variables(schedule_item_id, class_date)},\n        ]})\n        .then(({ data }) => {\n            console.log('got data', data);\n            // redirect back to attendance list\n            history.push(return_url)\n            // show message to user\n            toast.success((t('schedule.classes.class.book.toast_success')), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n          }).catch((error) => {\n            toast.error((t('general.toast_server_error')) +  error, {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            console.log('there was an error sending the query', error)\n          })}\n    >\n      {t(\"general.checkin\")}\n    </Button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SubscriptionCheckinButton))\n\n","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle, represent_teacher_role } from \"../../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ScheduleClassBookBack from \"./ScheduleClassBookBack\"\n// import ClassEditBase from \"../ClassEditBase\"\nimport SubscriptionCheckinButton from \"./ScheduleClassBookSubscriptionBtn\"\n\nimport { GET_BOOKING_OPTIONS_QUERY } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\n\nfunction ScheduleClassBookSubscriptions({ \n  t, \n  match, \n  history, \n  subscriptions, \n  locationId,\n  returnTo=\"schedule_classes\"\n}) {\n\n  return (\n    subscriptions.map((subscription) =>(\n      <Grid.Col md={3}>\n        <Card \n          statusColor=\"blue\"\n          title={t(\"general.subscription\")} >\n        <Card.Body>\n          <b>{subscription.accountSubscription.organizationSubscription.name}</b><br />\n          <span className=\"text-muted\">\n            {t(\"general.credits_remaining\")}: {subscription.accountSubscription.creditTotal}\n          </span>\n        </Card.Body>\n        <Card.Footer>\n          {(!subscription.allowed) ? t('schedule.classes.class.book.subscription_not_allowed') :\n            <SubscriptionCheckinButton subscription={subscription} returnTo={returnTo} locationId={locationId} />\n          }\n        </Card.Footer>\n        </Card>\n      </Grid.Col>\n    ))\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBookSubscriptions))\n\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button,\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport { get_attendance_list_query_variables } from \"../attendance/tools\"\nimport { GET_SCHEDULE_CLASS_ATTENDANCE_QUERY } from \"../attendance/queries\"\nimport { CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport { getUrlFromReturnTo } from \"./tools\"\n\n\nfunction ScheduleClassBookPriceBtn({t, match, history, price, returnTo, locationId=null}) {\n  console.log(price)\n  const account_id = match.params.account_id\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  const createInput = {\n    \"account\": account_id,\n    \"scheduleItem\": schedule_item_id,\n    \"organizationClasspass\": price.id,\n    \"date\": class_date,\n    \"attendanceType\": \"CLASSPASS_BUY_AND_BOOK\",\n    \"bookingStatus\": \"ATTENDING\"\n  }\n\n  const [classCheckin, { data, loading, error, onCompleted }] = useMutation(CREATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loading) {\n    return \"Please wait...\"\n  }\n\n  if (error) {\n    return \"uh oh... error found\"\n  }\n\n  const return_url = getUrlFromReturnTo({\n    returnTo: returnTo,\n    schedule_item_id: schedule_item_id,\n    class_date: class_date,\n    locationId: locationId\n  })\n\n  return (\n    <Button \n      block \n      outline \n      color=\"success\" \n      icon=\"check\"\n      onClick={() => classCheckin({\n        variables: { \"input\": createInput }, \n        refetchQueries: [\n          {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, variables: get_attendance_list_query_variables(schedule_item_id, class_date)},\n        ]})\n        .then(({ data }) => {\n            console.log('got data', data);\n            // redirect back to attendance list\n            history.push(return_url)\n            // show message to user\n            toast.success((t('schedule.classes.class.book.toast_success')), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n          }).catch((error) => {\n            toast.error((t('general.toast_server_error')) +  error, {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            console.log('there was an error sending the query', error)\n          })}\n    >\n      {t(\"general.checkin\")}\n    </Button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBookPriceBtn))\n\n","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  List,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle, represent_teacher_role } from \"../../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ScheduleClassBookBack from \"./ScheduleClassBookBack\"\nimport ScheduleClassBookPriceBtn from \"./ScheduleClassBookPriceBtn\"\n\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_BOOKING_OPTIONS_QUERY, CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ScheduleClassBookPriceDropin({ \n  t, \n  match, \n  history, \n  priceDropin, \n  locationId,\n  onClickCheckin=f=>f,\n  returnTo=\"schedule_classes\"\n}) {\n  console.log('priceDropin')\n  console.log(priceDropin)\n\n  return (\n    <Grid.Col md={3}>\n      <Card \n        statusColor=\"blue\"\n        title={t(\"general.dropin\")} >\n      <Card.Body>\n        <b>{priceDropin.priceDisplay}</b><br />\n        {t(\"schedule.classes.class.book.dropin_pay_and_book\")} <br />\n      </Card.Body>\n      <Card.Footer>\n        <ScheduleClassBookPriceBtn price={priceDropin} returnTo={returnTo} locationID={locationId} />\n      </Card.Footer>\n      </Card>\n    </Grid.Col>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBookPriceDropin))\n\n","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  List,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle, represent_teacher_role } from \"../../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ScheduleClassBookBack from \"./ScheduleClassBookBack\"\nimport ScheduleClassBookPriceBtn from \"./ScheduleClassBookPriceBtn\"\n\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_BOOKING_OPTIONS_QUERY, CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ScheduleClassBookPriceTrial({ \n  t, \n  match, \n  history, \n  priceTrial, \n  locationId,\n  onClickCheckin=f=>f,\n  returnTo=\"schedule_classes\"\n}) {\n  console.log('priceTrial')\n  console.log(priceTrial)\n\n  return (\n    <Grid.Col md={3}>\n      <Card \n        statusColor=\"blue\"\n        title={t(\"general.trial\")} >\n      <Card.Body>\n        <b>{priceTrial.priceDisplay}</b><br />\n        {t(\"schedule.classes.class.book.trial_pay_and_book\")} <br />\n      </Card.Body>\n      <Card.Footer>\n        <ScheduleClassBookPriceBtn price={priceTrial} returnTo={returnTo} locationId={locationId} />\n      </Card.Footer>\n      </Card>\n    </Grid.Col>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBookPriceTrial))\n\n","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle, represent_teacher_role } from \"../../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ScheduleClassBookBack from \"./ScheduleClassBookBack\"\nimport ScheduleClassBookClasspasses from \"./ScheduleClassBookClasspasses\"\nimport ScheduleClassBookSubscriptions from \"./ScheduleClassBookSubscriptions\"\nimport ScheduleClassBookPriceDropin from \"./ScheduleClassBookPriceDropin\"\nimport ScheduleClassBookPriceTrial from \"./ScheduleClassBookPriceTrial\"\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_BOOKING_OPTIONS_QUERY } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ScheduleClassBook({ t, match, history }) {\n  const [showSearch, setShowSearch] = useState(false)\n  const return_url = \"/schedule/classes/\"\n  const account_id = match.params.account_id\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const { loading: queryLoading, error: queryError, data: queryData } = useQuery(\n    GET_BOOKING_OPTIONS_QUERY, {\n      variables: {\n        account: account_id,\n        scheduleItem: schedule_item_id,\n        date: class_date,\n        listType: \"ATTEND\"\n      }\n    }\n  )\n\n  // Query\n  // Loading\n  if (queryLoading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (queryError) {\n    console.log(queryError)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n  \n  console.log(queryData)\n  const account = queryData.scheduleClassBookingOptions.account\n  const classpasses = queryData.scheduleClassBookingOptions.classpasses\n  const subscriptions = queryData.scheduleClassBookingOptions.subscriptions\n  const prices = queryData.scheduleClassBookingOptions.scheduleItemPrices\n  const scheduleItem = queryData.scheduleClassBookingOptions.scheduleItem\n  const subtitle = class_subtitle({\n    t: t,\n    location: scheduleItem.organizationLocationRoom.organizationLocation.name, \n    locationRoom: scheduleItem.organizationLocationRoom.name,\n    classtype: scheduleItem.organizationClasstype.name, \n    timeStart: TimeStringToJSDateOBJ(scheduleItem.timeStart), \n    date: class_date\n  })\n\n  console.log(prices)\n  \n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('schedule.title')} subTitle={subtitle}>\n            <div className=\"page-options d-flex\">   \n              <ScheduleClassBookBack classId={schedule_item_id} date={class_date} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n              <Grid.Col md={12}>\n                <h4>{t('general.booking_options')} {account.fullName}</h4>\n                <div className=\"mt-6\">\n                <Grid.Row cards deck>\n                  <ScheduleClassBookSubscriptions subscriptions={subscriptions} />\n                  <ScheduleClassBookClasspasses classpasses={classpasses} />\n                  {(prices) ?\n                    (prices.organizationClasspassDropin) ? \n                      <ScheduleClassBookPriceDropin priceDropin={prices.organizationClasspassDropin}/> : \"\" \n                    : \"\" }\n                  {(prices) ?\n                    ((prices.organizationClasspassTrial) && (!account.hasReachedTrialLimit)) ? \n                      <ScheduleClassBookPriceTrial priceTrial={prices.organizationClasspassTrial}/> : \"\" \n                    : \"\" }\n                </Grid.Row>\n                </div>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBook))\n\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY = gql`\n  query ScheduleClassWeeklyOTCs($scheduleItem: ID!, $date: Date!) {\n    scheduleClassWeeklyOtcs(first:1, scheduleItem: $scheduleItem, date:$date) {\n      edges {\n        node {\n          id \n          date\n          status\n          description\n          account {\n            id\n            fullName\n          }\n          role\n          account2 {\n            id\n            fullName\n          }\n          role2\n          organizationLocationRoom {\n            id\n            name\n          }\n          organizationClasstype {\n            id\n            name\n          }\n          organizationLevel {\n            id\n            name\n          }\n          timeStart\n          timeEnd\n          spaces\n          walkInSpaces\n          infoMailContent\n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n    accounts(first: 100, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n    organizationLocationRooms(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n    organizationClasstypes(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const DELETE_SCHEDULE_CLASS_WEEKLY_OTC = gql`\n  mutation DeleteScheduleClassWeeklyOTC($input: DeleteScheduleClassWeeklyOTCInput!) {\n    deleteScheduleClassWeeklyOtc(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const UPDATE_SCHEDULE_CLASS_WEEKLY_OTC = gql`\n  mutation UpdateScheduleClassWeeklyOTC($input: UpdateScheduleClassWeeklyOTCInput!) {\n    updateScheduleClassWeeklyOtc(input:$input) {\n      scheduleClassWeeklyOtc {\n        id\n      }\n    }\n  }\n`\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_CLASS_EDIT_OTC_SCHEMA = Yup.object().shape({\n  spaces: Yup.number().nullable().notRequired(),\n  walkInSpaces: Yup.number().nullable().notRequired(),\n})\n","import React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../ui/CSDatePicker\"\nimport CSTimePicker from \"../../../../ui/CSTimePicker\"\n\nconst ScheduleClassEditForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, touched, return_url }) => (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.status')}>\n              <Field component=\"select\" \n                      name=\"status\" \n                      className={(errors.status) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t('')}</option>\n                <option value=\"CANCELLED\" key={v4()}>{t('general.cancelled')}</option>\n                <option value=\"OPEN\" key={v4()}>{t('schedule.classes.no_teacher')}</option>\n              </Field>\n              <ErrorMessage name=\"status\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.description')}>\n              <Field type=\"text\" \n                      name=\"description\" \n                      className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher')}>\n              <Field component=\"select\" \n                      name=\"account\" \n                      className={(errors.account) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in schedule class teacher add:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher_role')}>\n              <Field component=\"select\" \n                      name=\"role\" \n                      className={(errors.role) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                <option value=\"SUB\" key={v4()}>{t('schedule.classes.teacher_roles.sub')}</option>\n                <option value=\"ASSISTANT\" key={v4()}>{t('schedule.classes.teacher_roles.assistant')}</option>\n                <option value=\"KARMA\" key={v4()}>{t('schedule.classes.teacher_roles.karma')}</option>\n              </Field>\n              <ErrorMessage name=\"role\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher2')}>\n              <Field component=\"select\" \n                      name=\"account2\" \n                      className={(errors.account2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher_role2')}>\n              <Field component=\"select\" \n                      name=\"role2\" \n                      className={(errors.role2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                <option value=\"SUB\" key={v4()}>{t('schedule.classes.teacher_roles.sub')}</option>\n                <option value=\"ASSISTANT\" key={v4()}>{t('schedule.classes.teacher_roles.assistant')}</option>\n                <option value=\"KARMA\" key={v4()}>{t('schedule.classes.teacher_roles.karma')}</option>\n              </Field>\n              <ErrorMessage name=\"role2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.location')}>\n              <Field component=\"select\" \n                    name=\"organizationLocationRoom\" \n                    className={(errors.organizationLocationRoom) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.no_change\")}</option>\n                {inputData.organizationLocationRooms.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.organizationLocation.name} - {node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLocationRoom\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.level')}>\n              <Field component=\"select\" \n                    name=\"organizationLevel\" \n                    className={(errors.organizationLevels) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.no_change\")}</option>\n                {inputData.organizationLevels.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLevels\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.class')}>\n          <Field component=\"select\" \n                name=\"organizationClasstype\" \n                className={(errors.organizationClasstype) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"\" key={v4()}>{t(\"general.no_change\")}</option>\n            {inputData.organizationClasstypes.edges.map(({ node }) =>\n              <option value={node.id} key={v4()}>{node.name}</option>\n            )}\n          </Field>\n          <ErrorMessage name=\"organizationClasstype\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group> \n        <Grid.Row>\n          <Grid.Col>\n           <Form.Group label={t('general.time_start')}>\n              <CSTimePicker \n                className={(errors.timeStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeStart}\n                onChange={(date) => setFieldValue(\"timeStart\", date)}\n                onBlur={() => setFieldTouched(\"timeStart\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n           <Form.Group label={t('general.time_end')}>\n              <CSTimePicker \n                className={(errors.timeEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeEnd}\n                onChange={(date) => setFieldValue(\"timeEnd\", date)}\n                onBlur={() => setFieldTouched(\"timeEnd\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.spaces')}>\n              <Field type=\"text\" \n                    name=\"spaces\" \n                    className={(errors.spaces) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"spaces\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.spaces_walk_in')}>\n              <Field type=\"text\" \n                    name=\"walkInSpaces\" \n                    className={(errors.walkInSpaces) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"walkInSpaces\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.info_mail')}>\n          <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"infoMailContent\"\n            initialValue={values.infoMailContent}\n            init={tinymceBasicConf}\n            onBlur={(e) => {\n              setFieldValue(\"infoMailContent\", e.target.getContent())\n              setFieldTouched(\"infoMailContent\", true, true)\n            }}\n          />\n          <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n        >\n        {t('general.submit')}\n        </Button>\n        <Button color=\"link\" onClick={() => history.push(return_url)}>\n            {t('general.cancel')}\n        </Button>\n      </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(ScheduleClassEditForm))","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_CLASSES_QUERY } from '../../queries'\nimport { get_list_query_variables } from '../../tools'\nimport { DELETE_SCHEDULE_CLASS_WEEKLY_OTC, GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleClassWeeklyOTCDelete({t, match, history}) {\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const [deleteClassOTC, { data }] = useMutation(DELETE_SCHEDULE_CLASS_WEEKLY_OTC, {\n    onCompleted: () => { history.push(\"/schedule/classes/\") }\n  })\n  const query_vars = {\n    scheduleItem: schedule_item_id,\n    date: class_date\n  }\n\n  return (\n    <button className=\"icon btn-block btn btn-danger mb-3\" \n      title={t('general.delete')} \n      href=\"\"\n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.classes.class.edit.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.classes.class.edit.delete_success'),\n          deleteFunction: deleteClassOTC,\n          functionVariables: { \n            variables: {\n              input: {\n                scheduleItem: schedule_item_id,\n                date: class_date\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY, variables: query_vars },\n              { query: GET_CLASSES_QUERY, variables: get_list_query_variables() },\n            ]\n          }\n        })\n    }}>\n      <span className=\"text-white\"><Icon prefix=\"fe\" name=\"trash-2\" /> {\" \"} {t(\"schedule.classes.class.edit.delete_all_changes\")}</span>\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassWeeklyOTCDelete))\n","// @flow\n\nimport React, { useState } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY, UPDATE_SCHEDULE_CLASS_WEEKLY_OTC } from './queries'\nimport { GET_CLASSES_QUERY } from '../../queries'\nimport { get_list_query_variables } from '../../tools'\nimport { SCHEDULE_CLASS_EDIT_OTC_SCHEMA } from './yupSchema'\nimport ScheduleClassEditForm from './ScheduleClassEditForm'\nimport { TimeStringToJSDateOBJ, dateToLocalISOTime } from '../../../../../tools/date_tools'\n\nimport { class_subtitle } from \"../tools\"\n\n\nimport {\n  Alert,\n  Dropdown,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassWeeklyOTCDelete from './ScheduleClassWeeklyOTCDelete'\nimport ScheduleClassBack from \"../ScheduleClassBack\"\nimport ClassMenu from \"../ClassMenu\"\n\n\nfunction ScheduleClassEdit({ t, match, history }) {\n  let showDelete = false\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  console.log(schedule_item_id)\n  console.log(class_date)\n\n  const query_vars = {\n    scheduleItem: schedule_item_id,\n    date: class_date\n  }\n\n  const { loading: queryLoading, error: queryError, data: queryData } = useQuery(GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY, {\n    variables: query_vars,\n  })\n  const [ updateScheduleClassWeeklyOTC, { data } ] = useMutation(UPDATE_SCHEDULE_CLASS_WEEKLY_OTC)\n\n  if (queryLoading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (queryError) {\n    console.log(queryError)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n\n  console.log('queryData')\n  console.log(queryData)\n\n  const scheduleItem = queryData.scheduleItem\n  const subtitle = class_subtitle({\n    t: t,\n    location: scheduleItem.organizationLocationRoom.organizationLocation.name, \n    locationRoom: scheduleItem.organizationLocationRoom.name,\n    classtype: scheduleItem.organizationClasstype.name, \n    timeStart: TimeStringToJSDateOBJ(scheduleItem.timeStart), \n    date: class_date\n  })\n  \n  let initialData\n  var initialValues = {}\n  if (queryData.scheduleClassWeeklyOtcs.edges.length) {\n    showDelete = true\n\n    initialData = queryData.scheduleClassWeeklyOtcs.edges[0].node\n\n    initialValues.status = initialData.status\n    initialValues.description = initialData.description\n    if (initialData.account) {\n      initialValues.account = initialData.account.id\n    }\n    if (initialData.account2) {\n      initialValues.account2 = initialData.account2.id\n    }\n    initialValues.role = initialData.role || \"\"\n    initialValues.role2 = initialData.role2 || \"\"\n    if (initialData.organizationLocationRoom) {\n      initialValues.organizationLocationRoom = initialData.organizationLocationRoom.id\n    }\n    if (initialData.organizationClasstype) {\n      initialValues.organizationClasstype = initialData.organizationClasstype.id\n    }\n    if (initialData.organizationLevel) {\n      initialValues.organizationLevel = initialData.organizationLevel.id\n    }\n    if (initialData.timeStart) {\n      initialValues.timeStart = TimeStringToJSDateOBJ(initialData.timeStart)\n    }\n    if (initialData.timeEnd) {\n      initialValues.timeEnd = TimeStringToJSDateOBJ(initialData.timeEnd)\n    }\n    if (initialData.spaces) {\n      initialValues.spaces = initialData.spaces\n    }\n    if (initialData.walkInSpaces) {\n      initialValues.walkInSpaces = initialData.walkInSpaces\n    }\n    if (initialData.infoMailContent) {\n      initialValues.infoMailContent = initialData.infoMailContent\n    }\n    \n  } else {\n    console.log('setting initial values')\n    initialValues.status = \"\"\n    initialValues.description = \"\"\n    initialValues.account = \"\"\n    initialValues.role = \"\"\n    initialValues.account2 = \"\"\n    initialValues.role2 = \"\"\n    initialValues.organizationLocationRoom = \"\"\n    initialValues.organizationClasstype = \"\"\n    initialValues.organizationLevel = \"\"\n    initialValues.timeStart = \"\"\n    initialValues.timeEnd = \"\"\n    initialValues.infoMailContent = \"\"\n  }\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('schedule.title')} subTitle={subtitle}>\n            <div className=\"page-options d-flex\">       \n              <ScheduleClassBack />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('general.edit')}</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  <Formik\n                    initialValues={initialValues}\n                    validationSchema={SCHEDULE_CLASS_EDIT_OTC_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n\n                        console.log(\"SUBMIT VALUES\")\n                        console.log(values)\n\n                        let timeStart = undefined\n                        let timeEnd = undefined\n                        if (values.timeStart) {\n                          timeStart = dateToLocalISOTime(values.timeStart)\n                        }\n                        \n                        if (values.timeEnd) {\n                          timeEnd = dateToLocalISOTime(values.timeEnd)  \n                        }\n                        \n\n                        updateScheduleClassWeeklyOTC({ variables: {\n                          input: {\n                            scheduleItem: schedule_item_id,\n                            date: class_date,\n                            status: values.status,\n                            description: values.description,\n                            account: values.account,\n                            role: values.role,\n                            account2: values.account2,\n                            role2: values.role2,\n                            organizationLocationRoom: values.organizationLocationRoom,\n                            organizationClasstype: values.organizationClasstype,\n                            organizationLevel: values.organizationLevel,\n                            timeStart: timeStart,\n                            timeEnd: timeEnd,\n                            spaces: values.spaces,\n                            walkInSpaces: values.walkInSpaces,\n                            infoMailContent: values.infoMailContent\n                          }\n                        }, refetchQueries: [\n                            {query: GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY, variables: query_vars},\n                            {query: GET_CLASSES_QUERY, variables: get_list_query_variables()},\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.classes.class.edit.toast_edit_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setSubmitting(false)\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error)\n                          console.log('there was an error sending the query', error.graphQLErrors)\n                          setSubmitting(false)\n                        })\n                      }\n                    }\n                    >\n                    {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n                      <ScheduleClassEditForm\n                        inputData={queryData}\n                        isSubmitting={isSubmitting}\n                        setFieldTouched={setFieldTouched}\n                        setFieldValue={setFieldValue}\n                        errors={errors}\n                        values={values}\n                      >\n                        {console.log(errors)}\n                      </ScheduleClassEditForm>\n                    )}\n                  </Formik>\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showDelete) ? \n                <ScheduleClassWeeklyOTCDelete /> : \"\"\n              }\n              <ClassMenu \n                scheduleItemId={schedule_item_id}\n                class_date={class_date}\n                activeLink=\"edit\"\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassEdit))","import React from \"react\"\nimport { Link } from 'react-router-dom'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Button,\n  Icon, \n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nfunction ButtonAdd({t, classId}) {\n  return (\n    <HasPermissionWrapper permission=\"add\" resource=\"scheduleitemprice\">\n      <Link to={\"/schedule/classes/all/prices/\" + classId + \"/add\" } >\n        <Button color=\"primary btn-block mb-6\">\n          <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.prices.add')}\n        </Button>\n      </Link>\n    </HasPermissionWrapper>\n  )\n} \n\nexport default withTranslation()(ButtonAdd)","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_ITEM_PRICES_QUERY = gql`\n  query ScheduleItemPrices($after: String, $before: String, $scheduleItem: ID!) {\n    scheduleItemPrices(first: 15, before: $before, after: $after, scheduleItem: $scheduleItem) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationClasspassDropin {\n            id\n            name\n          }\n          organizationClasspassTrial {\n            id\n            name\n          }\n          dateStart\n          dateEnd       \n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const GET_SINGLE_SCHEDULE_ITEM_PRICE_QUERY = gql`\nquery ScheduleItemPrice($before: String, $after: String, $id: ID!) {\n  scheduleItemPrice(id: $id) {\n    id\n    organizationClasspassDropin {\n      id\n      name\n    }\n    organizationClasspassTrial {\n      id\n      name\n    }\n    dateStart\n    dateEnd       \n  }\n  organizationClasspasses(first: 100, before: $before, after: $after, archived: false) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n}\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InputValues($after: String, $before: String) {\n    organizationClasspasses(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const ADD_SCHEDULE_ITEM_PRICE = gql`\n  mutation CreateScheduleItemPrice($input:CreateScheduleItemPriceInput!) {\n    createScheduleItemPrice(input:$input) {\n      scheduleItemPrice {\n        id\n      } \n    }\n  }\n`\n\nexport const UPDATE_SCHEDULE_ITEM_PRICE = gql`\nmutation UpdateScheduleItemPrice($input: UpdateScheduleItemPriceInput!) {\n  updateScheduleItemPrice(input:$input) {\n    scheduleItemPrice {\n      id\n    } \n  }\n}\n`\n\nexport const DELETE_SCHEDULE_ITEM_PRICE = gql`\n  mutation DeleteScheduleItemPrice($input: DeleteScheduleItemPriceInput!) {\n    deleteScheduleItemPrice(input: $input) {\n      ok\n    }\n  }\n`\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_SCHEDULE_ITEM_PRICE, GET_SCHEDULE_ITEM_PRICES_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleClassPriceDelete({t, match, history, id}) {\n  const classId = match.params.class_id\n  const [deleteClassPrice, { data }] = useMutation(DELETE_SCHEDULE_ITEM_PRICE)\n  const query_vars = {\n    scheduleItem: classId\n  }\n\n  return (\n    <button className=\"icon btn btn-danger btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.classes.prices.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.classes.prices.delete_success'),\n          deleteFunction: deleteClassPrice,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_ITEM_PRICES_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <span className=\"text-white\"><Icon prefix=\"fe\" name=\"trash-2\" /> {\" \"} {t(\"\")}</span>\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassPriceDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport moment from 'moment'\n\nimport {\n  Dimmer,\n  Button,\n  Table\n} from \"tabler-react\";\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\nimport ButtonAdd from \"./ButtonAdd\"\nimport { class_edit_all_subtitle } from \"../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassPriceDelete from './ScheduleClassPriceDelete'\n\nimport { GET_SCHEDULE_ITEM_PRICES_QUERY } from \"./queries\"\n\n\nfunction ScheduleClassPrices({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const classId = match.params.class_id\n  const menuActiveLink = \"prices\" \n  const cardTitle = t('schedule.classes.prices.title')\n  const sidebarButton = <ButtonAdd classId={classId}/>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_ITEM_PRICES_QUERY, {\n    variables: { scheduleItem: classId }\n  })\n\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.prices.error_loading')}</p>\n    </ClassEditBase>\n  )\n\n\n  const initialTimeStart = TimeStringToJSDateOBJ(data.scheduleItem.timeStart)\n  const subtitle = class_edit_all_subtitle({\n    t: t,\n    location: data.scheduleItem.organizationLocationRoom.organizationLocation.name,\n    locationRoom: data.scheduleItem.organizationLocationRoom.name,\n    classtype: data.scheduleItem.organizationClasstype.name,\n    starttime: initialTimeStart\n  })\n\n  // Empty list\n  if (!data.scheduleItemPrices.edges.length) { return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.prices.empty_list')}</p>\n    </ClassEditBase>\n  )}\n\n  return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n      defaultCard={false}\n    >\n    <ContentCard \n      cardTitle={t('schedule.classes.title_edit')}\n      // headerContent={headerOptions}\n      pageInfo={data.scheduleItemPrices.pageInfo}\n      onLoadMore={() => {\n      fetchMore({\n        variables: {\n          after: data.scheduleItemPrices.pageInfo.endCursor\n        },\n        updateQuery: (previousResult, { fetchMoreResult }) => {\n          const newEdges = fetchMoreResult.scheduleItemPrices.edges\n          const pageInfo = fetchMoreResult.scheduleItemPrices.pageInfo\n\n          return newEdges.length\n            ? {\n                // Put the new locations at the end of the list and update `pageInfo`\n                // so we have the new `endCursor` and `hasNextPage` values\n                data: { \n                  scheduleItemPrices: {\n                    __typename: previousResult.scheduleItemPrices.__typename,\n                    edges: [ ...previousResult.scheduleItemPrices.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              }\n            : previousResult\n          }\n        })\n      }} >\n      <div>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.dropin')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.trial')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {data.scheduleItemPrices.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                {console.log(node)}\n                <Table.Col key={v4()}> \n                  {moment(node.dateStart).format('LL')}\n                </Table.Col>\n                <Table.Col key={v4()}> \n                  {(node.dateEnd) ? moment(node.dateEnd).format('LL') : \"\"}\n                </Table.Col>\n                <Table.Col>\n                  {node.organizationClasspassDropin.name}\n                </Table.Col>\n                <Table.Col>\n                  {(node.organizationClasspassTrial) ? node.organizationClasspassTrial.name : \"\"}\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <Button className='btn-sm' \n                          onClick={() => history.push(\"/schedule/classes/all/prices/\" + match.params.class_id + '/edit/' + node.id)}\n                          color=\"secondary\">\n                    {t('general.edit')}\n                  </Button>\n                </Table.Col>\n                <Table.Col>\n                  <ScheduleClassPriceDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n        </div>\n      </ContentCard>\n    </ClassEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassPrices))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\n\nimport CSDatePicker from \"../../../../ui/CSDatePicker\"\n\nconst ScheduleClassPriceForm = ({ t, history, match, isSubmitting, errors, values, inputData, returnUrl, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                selected={values.dateStart}\n                onChange={(date) => setFieldValue(\"dateStart\", date)}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                selected={values.dateEnd}\n                onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.classpass_dropin')}>\n              <Field component=\"select\" \n                      name=\"organizationClasspassDropin\" \n                      className={(errors.organizationClasspassDropin) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in schedule class price form:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.organizationClasspasses.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationClasspassDropin\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.classpass_trial')}>\n              <Field component=\"select\" \n                      name=\"organizationClasspassTrial\" \n                      className={(errors.organizationClasspassTrial) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t('')}</option>\n                {inputData.organizationClasspasses.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationClasspassTrial\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(ScheduleClassPriceForm))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_CLASS_TEACHER_SCHEMA = Yup.object().shape({\n  account: Yup.string()\n    .required(t('yup.field_required')),\n  role: Yup.string(),\n  account2: Yup.string(),\n  role2: Yup.string(),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  // dateEnd: Yup.date()\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nconst ScheduleClassPriceBack = ({ t, classId }) => (\n  <Link to={\"/schedule/classes/all/prices/\" + classId } >\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(withRouter(ScheduleClassPriceBack))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Dimmer,\n} from \"tabler-react\";\n\nimport { GET_SCHEDULE_ITEM_PRICES_QUERY, GET_INPUT_VALUES_QUERY, ADD_SCHEDULE_ITEM_PRICE } from './queries'\nimport { SCHEDULE_CLASS_TEACHER_SCHEMA } from './yupSchema'\nimport ScheduleClassPriceForm from './ScheduleClassPriceForm'\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassPriceBack from \"./ScheduleClassPriceBack\"\n\n\nfunction ScheduleClassPriceAdd({ t, history, match }) {\n  const classId = match.params.class_id\n  const returnUrl = `/schedule/classes/all/prices/${classId}`\n  const cardTitle = t('schedule.classes.prices.title_add')\n  const menuActiveLink = \"prices\"\n  const sidebarButton = <ScheduleClassPriceBack classId={classId} />\n  const { loading, error, data, } = useQuery(GET_INPUT_VALUES_QUERY)\n  const [addScheduleClassPrice] = useMutation(ADD_SCHEDULE_ITEM_PRICE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n\n\n  return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Formik\n        initialValues={{ \n          dateStart: new Date() ,\n          organizationClasspassDropin: \"\",\n          organizationClasspassTrial: \"\",\n        }}\n        // validationSchema={SCHEDULE_CLASS_TEACHER_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n\n            let dateEnd\n            if (values.dateEnd) {\n              dateEnd = dateToLocalISO(values.dateEnd)\n            } else {\n              dateEnd = values.dateEnd\n            }\n\n            addScheduleClassPrice({ variables: {\n              input: {\n                scheduleItem: match.params.class_id,\n                dateStart: dateToLocalISO(values.dateStart),\n                dateEnd: dateEnd,\n                organizationClasspassDropin: values.organizationClasspassDropin,\n                organizationClasspassTrial: values.organizationClasspassTrial\n              }\n            }, refetchQueries: [\n                {query: GET_SCHEDULE_ITEM_PRICES_QUERY, variables: { scheduleItem: match.params.class_id }},\n                // {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('schedule.classes.prices.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleClassPriceForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n          />\n        )}\n    </Formik>\n  </ClassEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassPriceAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Dimmer,\n} from \"tabler-react\";\n\nimport { GET_SCHEDULE_ITEM_PRICES_QUERY, GET_SINGLE_SCHEDULE_ITEM_PRICE_QUERY, UPDATE_SCHEDULE_ITEM_PRICE } from './queries'\nimport { SCHEDULE_CLASS_TEACHER_SCHEMA } from './yupSchema'\nimport ScheduleClassPriceForm from './ScheduleClassPriceForm'\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassPriceBack from \"./ScheduleClassPriceBack\"\n\nfunction ScheduleClassPriceEdit({ t, history, match }) {\n  const id = match.params.id\n  const classId = match.params.class_id\n  const returnUrl = `/schedule/classes/all/prices/${classId}`\n  const menuActiveLink = \"prices\"\n  const cardTitle = t('schedule.classes.prices.title_edit')\n  const sidebarButton = <ScheduleClassPriceBack classId={match.params.class_id} />\n  const { loading, error, data, } = useQuery(GET_SINGLE_SCHEDULE_ITEM_PRICE_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n  const [editScheduleClassPrice] = useMutation(UPDATE_SCHEDULE_ITEM_PRICE, {\n    onCompleted: () => history.push(returnUrl)\n  })\n\n\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBase>\n  )\n\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n\n  let initialOrganizationClasspassDropin\n  let initialOrganizationClasspassTrial\n\n  if (inputData.scheduleItemPrice.organizationClasspassDropin) {\n    initialOrganizationClasspassDropin = inputData.scheduleItemPrice.organizationClasspassDropin.id\n  }\n\n  if (inputData.scheduleItemPrice.organizationClasspassTrial) {\n    initialOrganizationClasspassTrial = inputData.scheduleItemPrice.organizationClasspassTrial.id\n  }\n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  let dateEnd = null\n  if (inputData.scheduleItemPrice.dateStart) {\n    dateStart = new Date(inputData.scheduleItemPrice.dateStart)\n  }\n  if (inputData.scheduleItemPrice.dateEnd) {\n    dateEnd = new Date(inputData.scheduleItemPrice.dateEnd)\n  }\n\n\n  return (\n  <ClassEditBase \n    cardTitle={cardTitle}\n    menu_activeLink={menuActiveLink}\n    sidebarButton={sidebarButton}\n  >\n    <Formik\n      initialValues={{ \n        dateStart: dateStart,\n        dateEnd: dateEnd,\n        organizationClasspassDropin: initialOrganizationClasspassDropin,\n        organizationClasspassTrial: initialOrganizationClasspassTrial,\n      }}\n      // validationSchema={SCHEDULE_CLASS_TEACHER_SCHEMA}\n      onSubmit={(values, { setSubmitting }) => {\n\n          let dateEnd\n          if (values.dateEnd) {\n            dateEnd = dateToLocalISO(values.dateEnd)\n          } else {\n            dateEnd = values.dateEnd\n          }\n\n          editScheduleClassPrice({ variables: {\n            input: {\n              id: id,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateEnd,\n              organizationClasspassDropin: values.organizationClasspassDropin,\n              organizationClasspassTrial: values.organizationClasspassTrial\n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_ITEM_PRICES_QUERY, variables: { scheduleItem: match.params.class_id }},\n              // {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('schedule.classes.prices.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n      >\n      {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n        <ScheduleClassPriceForm\n          inputData={inputData}\n          isSubmitting={isSubmitting}\n          setFieldTouched={setFieldTouched}\n          setFieldValue={setFieldValue}\n          errors={errors}\n          values={values}\n          returnUrl={returnUrl + match.params.class_id}\n        />\n      )}\n  </Formik>\n</ClassEditBase>\n  )\n}\n\n\n// class ScheduleClassTeacherEdit extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Schedule class teacher edit props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const match = this.props.match\n//     const history = this.props.history\n//     const id = match.params.id\n//     const class_id = match.params.class_id\n//     const returnUrl = \"/schedule/classes/all/teachers/\" + class_id\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//           <Query query={GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY} variables={{id: id}}>\n//             {({ loading, error, data, refetch }) => {\n//               // Loading\n//               if (loading) return <p>{t('general.loading_with_dots')}</p>\n//               // Error\n//               if (error) {\n//                 console.log(error)\n//                 return <p>{t('general.error_sad_smiley')}</p>\n//               }\n    \n//               console.log('query data')\n//               console.log(data)\n//               const inputData = data\n//               const initialData = data.scheduleItemTeacher\n\n//               let initialAccount2 = \"\"\n//               if (initialData.account2) {\n//                 initialAccount2 =  initialData.account2.id\n//               } \n    \n//               return (\n//                 <ClassEditBase \n//                   card_title={t('schedule.classes.teachers.title_edit')}\n//                   menu_activeLink=\"teachers\"\n//                   sidebar_button={<ScheduleClassTeacherBack classId={class_id} />}\n//                 >\n//                   <Mutation mutation={UPDATE_SCHEDULE_CLASS_TEACHER} onCompleted={() => history.push(returnUrl)}> \n//                     {(addScheduleClassTeacher, { data }) => (\n//                         <Formik\n//                             initialValues={{  \n//                               dateStart: initialData.dateStart,\n//                               dateEnd: initialData.dateEnd,\n//                               account: initialData.account.id,\n//                               role: initialData.role,\n//                               account2: initialAccount2,\n//                               role2: initialData.role2,\n//                             }}\n//                             validationSchema={SCHEDULE_CLASS_TEACHER_SCHEMA}\n//                             onSubmit={(values, { setSubmitting }) => {\n    \n//                                 let dateEnd\n//                                 if (values.dateEnd) {\n//                                   dateEnd = dateToLocalISO(values.dateEnd)\n//                                 } else {\n//                                   dateEnd = values.dateEnd\n//                                 }\n    \n//                                 addScheduleClassTeacher({ variables: {\n//                                   input: {\n//                                     id: match.params.id,\n//                                     account: values.account,\n//                                     role: values.role,\n//                                     account2: values.account2,\n//                                     role2: values.role2,\n//                                     dateStart: dateToLocalISO(values.dateStart),\n//                                     dateEnd: dateEnd\n//                                   }\n//                                 }, refetchQueries: [\n//                                     {query: GET_SCHEDULE_CLASS_TEACHERS_QUERY, variables: { scheduleItem: match.params.class_id }},\n//                                     // {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n//                                 ]})\n//                                 .then(({ data }) => {\n//                                     console.log('got data', data);\n//                                     toast.success((t('schedule.classes.teachers.toast_edit_success')), {\n//                                         position: toast.POSITION.BOTTOM_RIGHT\n//                                       })\n//                                   }).catch((error) => {\n//                                     toast.error((t('general.toast_server_error')) +  error, {\n//                                         position: toast.POSITION.BOTTOM_RIGHT\n//                                       })\n//                                     console.log('there was an error sending the query', error)\n//                                     setSubmitting(false)\n//                                   })\n//                             }}\n//                             >\n//                             {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n//                               <ScheduleClassTeacherForm\n//                                 inputData={inputData}\n//                                 isSubmitting={isSubmitting}\n//                                 setFieldTouched={setFieldTouched}\n//                                 setFieldValue={setFieldValue}\n//                                 errors={errors}\n//                                 values={values}\n//                                 returnUrl={returnUrl}\n//                               >\n//                                 {console.log(errors)}\n//                               </ScheduleClassTeacherForm>\n//                             )}\n//                         </Formik>\n//                     )}\n//                   </Mutation>\n//                 </ClassEditBase>\n//               )\n//             }}\n//           </Query>\n//         </div>\n//       </SiteWrapper>\n//     )\n//   }\n// }\n\n\nexport default withTranslation()(withRouter(ScheduleClassPriceEdit))","// @flow\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container,\n  Grid\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport SiteWrapper from \"../../SiteWrapper\"\n// import ShopAccountBack from \"../ShopAccountBack\"\nimport ScheduleMenu from \"../ScheduleMenu\"\n\n\nfunction ScheduleEventsBase({ t, match, history, children, sidebarContent=\"\", displayMenu=true }) {\n  return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"schedule.events.title\")} >\n              <div className=\"page-options d-flex\">\n                {/* Page options can go here... */}\n              </div>\n            </Page.Header>\n            <Grid.Row>\n            <Grid.Col md={9}>\n              { children }\n            </Grid.Col>\n            <Grid.Col md={3}>\n              { sidebarContent }\n                  {/* <div>\n                    <Button\n                      className=\"pull-right\"\n                      color=\"link\"\n                      size=\"sm\"\n                      onClick={() => {\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE, \"\")\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LEVEL, \"\")\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LOCATION, \"\")\n                        refetch(get_list_query_variables())\n                      }}\n                    >\n                      {t(\"general.clear\")}\n                    </Button>\n                  </div> */}\n                  {/* <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n                  <ScheduleClassesFilter data={data} refetch={refetch} /> */}\n              {(displayMenu) ?\n                <span>\n                  <h5>{t(\"general.menu\")}</h5>\n                  <ScheduleMenu activeLink='events'/>\n                </span>\n                : \"\" }\n            </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n      </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventsBase))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_EVENTS_QUERY = gql`\n  query ScheduleEvents($before:String, $after:String, $archived:Boolean!) {\n    scheduleEvents(first: 100, before: $before, after:$after, archived:$archived) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          displayShop\n          autoSendInfoMail\n          organizationLocation {\n            id\n            name\n          }\n          name\n          tagline\n          preview\n          description\n          organizationLevel {\n            id\n            name\n          }\n          teacher {\n            id \n            fullName\n          }\n          teacher2 {\n            id\n            fullName\n          }\n          dateStart\n          dateEnd\n          timeStart\n          timeEnd\n          infoMailContent\n          scheduleItems {\n            edges {\n              node {\n                id\n              }\n            }\n          }\n          createdAt\n          updatedAt\n        }\n      }\n    }\n  }\n`\n\nexport const GET_SCHEDULE_EVENT_QUERY = gql`\n  query ScheduleEvent($id: ID!, $before: String, $after: String) {\n    scheduleEvent(id: $id) {\n      id\n      archived\n      displayPublic\n      displayShop\n      autoSendInfoMail\n      organizationLocation {\n        id\n        name\n      }\n      name\n      tagline\n      preview\n      description\n      organizationLevel {\n        id\n        name\n      }\n      teacher {\n        id \n        fullName\n      }\n      teacher2 {\n        id\n        fullName\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      infoMailContent\n      scheduleItems {\n        edges {\n          node {\n            id\n          }\n        }\n      }\n      createdAt\n      updatedAt\n    }\n    organizationLocations(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    accounts(first: 100, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleEventInputValues($after: String, $before: String) {\n    organizationLocations(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    accounts(first: 100, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n  }\n`\n\nexport const ARCHIVE_SCHEDULE_EVENT = gql`\n  mutation ArchiveScheduleEvent($input: ArchiveScheduleEventInput!) {\n    archiveScheduleEvent(input: $input) {\n      scheduleEvent {\n        id\n      }\n    }\n  }\n`\n","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let archived = localStorage.getItem(CSLS.SCHEDULE_EVENTS_ARCHIVED)\n  if (archived === null) {\n    archived = false\n  }\n\n  let queryVars = {\n    archived: (archived === \"true\") ? true : false,\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { ARCHIVE_SCHEDULE_EVENT, GET_SCHEDULE_EVENTS_QUERY } from \"./queries\"\nimport confirm_archive from \"../../../tools/confirm_archive\"\nimport confirm_unarchive from \"../../../tools/confirm_unarchive\"\n\nimport {\n  Icon\n} from \"tabler-react\"\nimport { get_list_query_variables } from './tools'\n\n\nfunction ScheduleEventArchive({t, match, history, node}) {\n  const [archiveScheduleEvent] = useMutation(ARCHIVE_SCHEDULE_EVENT)\n  const refetchQueries = [\n    { query: GET_SCHEDULE_EVENTS_QUERY, variables: get_list_query_variables() },\n  ]\n\n  if (!node.archived) {\n    return (\n      <button className=\"icon btn btn-warning btn-sm mb-3 pull-right\" \n          title={t('general.unarchive')} \n          onClick={() => {\n            confirm_archive({\n              t: t,\n              msgConfirm: t(\"schedule.events.archive_confirm_msg\"),\n              msgDescription: <p></p>,\n              msgSuccess: t('general.archived'),\n              archiveFunction: archiveScheduleEvent,\n              functionVariables: { \n                variables: {\n                  input: {\n                    id: node.id,\n                    archived: true\n                  },\n                }, \n                refetchQueries: refetchQueries,\n              }\n            })\n        }}>\n        <span className=\"text-white\"><Icon prefix=\"fe\" name=\"inbox\" /> {\" \"} {t(\"\")}</span>\n      </button>\n    )\n\n  } else {\n    return (\n      <button className=\"icon btn btn-warning btn-sm mb-3 pull-right\" \n        title={t('general.archive')} \n        onClick={() => {\n          confirm_unarchive({\n            t: t,\n            msgConfirm: t(\"schedule.events.unarchive_confirm_msg\"),\n            msgDescription: <p></p>,\n            msgSuccess: t('general.unarchived'),\n            archiveFunction: archiveScheduleEvent,\n            functionVariables: { \n              variables: {\n                input: {\n                  id: node.id,\n                  archived: false\n                },\n              }, \n              refetchQueries: refetchQueries,\n            }\n          })\n      }}>\n        <span className=\"text-white\"><Icon prefix=\"fe\" name=\"inbox\" /> {\" \"} {t(\"\")}</span>\n      </button>\n    )\n  }\n}\n\nexport default withTranslation()(withRouter(ScheduleEventArchive))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport moment from 'moment'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\n\nimport ContentCard from \"../../general/ContentCard\"\nimport ScheduleEventsBase from \"./ScheduleEventsBase\"\nimport ScheduleEventArchive from \"./ScheduleEventArchive\"\n\nimport { GET_SCHEDULE_EVENTS_QUERY } from \"./queries\"\nimport { get_list_query_variables } from \"./tools\"\n\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.SCHEDULE_EVENTS_ARCHIVED)) {\n  localStorage.setItem(CSLS.SCHEDULE_EVENTS_ARCHIVED, false) \n} \n\n\nfunction ScheduleEvents({t, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_SCHEDULE_EVENTS_QUERY, {\n    variables: get_list_query_variables()\n  })\n\n  const sidebarContent = <HasPermissionWrapper permission=\"add\" resource=\"scheduleevent\">\n    <Button color=\"primary btn-block mb-1\"\n            onClick={() => history.push(\"/schedule/events/add\")}>\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.events.add')}\n    </Button>\n  </HasPermissionWrapper>\n\n  const cardHeaderContent = <Card.Options>\n    <Button color={(localStorage.getItem(CSLS.SCHEDULE_EVENTS_ARCHIVED) === \"false\") ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {\n              localStorage.setItem(CSLS.SCHEDULE_EVENTS_ARCHIVED, false)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.active')}\n    </Button>\n    <Button color={(localStorage.getItem(CSLS.SCHEDULE_EVENTS_ARCHIVED) === \"true\") ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {\n              localStorage.setItem(CSLS.SCHEDULE_EVENTS_ARCHIVED, true)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) {\n    return (\n      <ScheduleEventsBase sidebarContent={sidebarContent}>\n        <ContentCard \n          cardTitle={t('schedule.events.title')}\n          headerContent={cardHeaderContent}\n        >\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </ContentCard>\n      </ScheduleEventsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <ScheduleEventsBase sidebarContent={sidebarContent}>\n        <ContentCard \n          cardTitle={t('schedule.events.title')}\n          headerContent={cardHeaderContent}\n        >\n          {t(\"schedule.events.error_loading_data\")}\n        </ContentCard>\n      </ScheduleEventsBase>\n    )\n  }\n\n  console.log(data)\n\n  const scheduleEvents = data.scheduleEvents\n\n  return (\n    <ScheduleEventsBase sidebarContent={sidebarContent}>\n      <ContentCard \n        cardTitle={t('schedule.events.title')}\n        headerContent={cardHeaderContent}\n        pageInfo={scheduleEvents.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: scheduleEvents.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.scheduleEvents.edges\n                  const pageInfo = fetchMoreResult.scheduleEvents.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        scheduleEvents: {\n                          __typename: previousResult.scheduleEvents.__typename,\n                          edges: [ ...previousResult.scheduleEvents.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.event')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.teacher')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>  \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            { scheduleEvents.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  { moment(node.date).format(dateFormat) } <br /> \n                </Table.Col>\n                <Table.Col>\n                  <span title={ node.name }>{ node.name.trunc(36) }</span> <br />\n                  <small className=\"text-muted\">\n                    { node.organizationLocation.name }\n                  </small>\n                </Table.Col>\n                <Table.Col>\n                  {\n                    (node.teacher) ? node.teacher.fullName.trunc(30) : \"\"\n                  }\n                </Table.Col>\n                <Table.Col>\n                  <BadgeBoolean value={node.displayShop} />\n                </Table.Col>\n                {/* <Table.Col>\n                  { node.scheduleItem.organizationLocationRoom.organizationLocation.name } <br />\n                  <span className=\"text-muted\">\n                    { node.scheduleItem.organizationLocationRoom.name }\n                  </span> \n                </Table.Col> */}\n                <Table.Col className=\"text-right\" key={v4()}>\n                  {(node.archived) ? \n                    <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                    <Button className='btn-sm' \n                            onClick={() => history.push(\"/schedule/events/edit/\" + node.id)}\n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  }\n                </Table.Col>\n                <Table.Col>\n                  <ScheduleEventArchive node={node} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </ScheduleEventsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEvents))\n\n\n// const ScheduleEvents = ({ t, history, archived=false }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t(\"organization.title\")} />\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//             <Query query={GET_LEVELS_QUERY} variables={{ archived }}>\n//              {({ loading, error, data: {organizationLevels: levels}, refetch, fetchMore }) => {\n//                 // Loading\n//                 if (loading) return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}>\n//                     <Dimmer active={true}\n//                             loader={true}>\n//                     </Dimmer>\n//                   </ContentCard>\n//                 )\n//                 // Error\n//                 if (error) return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}>\n//                     <p>{t('organization.levels.error_loading')}</p>\n//                   </ContentCard>\n//                 )\n//                 const headerOptions = <Card.Options>\n//                   <Button color={(!archived) ? 'primary': 'secondary'}  \n//                           size=\"sm\"\n//                           onClick={() => {archived=false; refetch({archived});}}>\n//                     {t('general.current')}\n//                   </Button>\n//                   <Button color={(archived) ? 'primary': 'secondary'} \n//                           size=\"sm\" \n//                           className=\"ml-2\" \n//                           onClick={() => {archived=true; refetch({archived});}}>\n//                     {t('general.archive')}\n//                   </Button>\n//                 </Card.Options>\n                \n//                 // Empty list\n//                 if (!levels.edges.length) { return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}\n//                                headerContent={headerOptions}>\n//                     <p>\n//                     {(!archived) ? t('organization.levels.empty_list') : t(\"organization.levels.empty_archive\")}\n//                     </p>\n                   \n//                   </ContentCard>\n//                 )} else {   \n//                 // Life's good! :)\n//                 return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}\n//                                headerContent={headerOptions}\n//                                pageInfo={levels.pageInfo}\n//                                onLoadMore={() => {\n//                                 fetchMore({\n//                                   variables: {\n//                                     after: levels.pageInfo.endCursor\n//                                   },\n//                                   updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                     const newEdges = fetchMoreResult.organizationLevels.edges\n//                                     const pageInfo = fetchMoreResult.organizationLevels.pageInfo\n\n//                                     return newEdges.length\n//                                       ? {\n//                                           // Put the new levels at the end of the list and update `pageInfo`\n//                                           // so we have the new `endCursor` and `hasNextPage` values\n//                                           organizationLevels: {\n//                                             __typename: previousResult.organizationLevels.__typename,\n//                                             edges: [ ...previousResult.organizationLevels.edges, ...newEdges ],\n//                                             pageInfo\n//                                           }\n//                                         }\n//                                       : previousResult\n//                                   }\n//                                 })\n//                               }} >\n//                     <Table>\n//                           <Table.Header>\n//                             <Table.Row key={v4()}>\n//                               <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                             </Table.Row>\n//                           </Table.Header>\n//                           <Table.Body>\n//                               {levels.edges.map(({ node }) => (\n//                                 <Table.Row key={v4()}>\n//                                   <Table.Col key={v4()}>\n//                                     {node.name}\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     {(node.archived) ? \n//                                       <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/organization/levels/edit/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('general.edit')}\n//                                       </Button>\n//                                     }\n//                                   </Table.Col>\n//                                   <Mutation mutation={ARCHIVE_LEVEL} key={v4()}>\n//                                     {(archiveCostcenter, { data }) => (\n//                                       <Table.Col className=\"text-right\" key={v4()}>\n//                                         <button className=\"icon btn btn-link btn-sm\" \n//                                            title={t('general.archive')} \n//                                            href=\"\"\n//                                            onClick={() => {\n//                                              console.log(\"clicked archived\")\n//                                              let id = node.id\n//                                              archiveCostcenter({ variables: {\n//                                                input: {\n//                                                 id,\n//                                                 archived: !archived\n//                                                }\n//                                         }, refetchQueries: [\n//                                             {query: GET_LEVELS_QUERY, variables: {\"archived\": archived }}\n//                                         ]}).then(({ data }) => {\n//                                           console.log('got data', data);\n//                                           toast.success(\n//                                             (archived) ? t('general.unarchived'): t('general.archived'), {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                         }).catch((error) => {\n//                                           toast.error((t('general.toast_server_error')) +  error, {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                           console.log('there was an error sending the query', error);\n//                                         })\n//                                         }}>\n//                                           <Icon prefix=\"fa\" name=\"inbox\" />\n//                                         </button>\n//                                       </Table.Col>\n//                                     )}\n//                                   </Mutation>\n//                                 </Table.Row>\n//                               ))}\n//                           </Table.Body>\n//                         </Table>\n//                   </ContentCard>\n//                 )}}\n//              }\n//             </Query>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"organizationlevel\">\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(\"/organization/levels/add\")}>\n//                 <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.levels.add')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <OrganizationMenu activeLink='levels'/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// );\n\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_EDIT_SCHEMA = Yup.object().shape({\n  displayPublic: Yup.boolean(),\n  displayShop: Yup.boolean(),\n  autoSendInfoMail: Yup.boolean(),\n  organizationLocation: Yup.string()\n    .required(t('yup.field_required')),\n  organizationLevel: Yup.string(),\n  teacher: Yup.string(),\n  teacher2: Yup.string(),\n  name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  tagline: Yup.string(),\n  preview: Yup.string(),\n  description: Yup.string(),\n  infoMailContent: Yup.string()\n})\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from 'uuid'\nimport { Link } from 'react-router-dom'\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nconst ScheduleEventForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, values, errors, returnUrl }) => (\n  <FoForm>\n    <Card.Body>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n                <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"displayPublic\" \n                  checked={values.displayPublic} />\n                <span className=\"custom-switch-indicator\" ></span>\n                <span className=\"custom-switch-description\">{t('schedule.events.public')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n                <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"displayShop\" \n                checked={values.displayShop} />\n                <span className=\"custom-switch-indicator\" ></span>\n                <span className=\"custom-switch-description\">{t('schedule.events.shop')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"displayShop\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n                <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"autoSendInfoMail\" \n                checked={values.autoSendInfoMail} />\n                <span className=\"custom-switch-indicator\" ></span>\n                <span className=\"custom-switch-description\">{t('schedule.events.auto_send_info_mail')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"autoSendInfoMail\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.location')}>\n            <Field component=\"select\" \n                  name=\"organizationLocation\" \n                  className={(errors.organizationLocation) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t(\"schedule.event.location_please_select\")}</option>\n              {inputData.organizationLocations.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"organizationLocation\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group> \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.level')}>\n            <Field component=\"select\" \n                  name=\"organizationLevel\" \n                  className={(errors.organizationLevel) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}></option>\n              {inputData.organizationLevels.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"organizationLevel\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group> \n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.teacher')}>\n            <Field component=\"select\" \n                  name=\"teacher\" \n                  className={(errors.teacher) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t(\"schedule.event.teacher_please_select\")}</option>\n              {inputData.accounts.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.fullName}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"teacher\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group> \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.teacher2')}>\n            <Field component=\"select\" \n                  name=\"teacher2\" \n                  className={(errors.teacher2) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}></option>\n              {inputData.accounts.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.fullName}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"teacher2\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group> \n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.tagline')}>\n            <Field type=\"text\" \n                    name=\"tagline\" \n                    className={(errors.tagline) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"tagline\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.preview')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"preview\"\n              initialValue={values.preview}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"preview\", e.target.getContent())\n                setFieldTouched(\"preview\", true, true)\n              }}\n              />\n            <ErrorMessage name=\"preview\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"description\"\n              initialValue={values.description}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"description\", e.target.getContent())\n                setFieldTouched(\"description\", true, true)\n              }}\n              />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.infoMailContent')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"infoMailContent\"\n              initialValue={values.infoMailContent}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"infoMailContent\", e.target.getContent())\n                setFieldTouched(\"infoMailContent\", true, true)\n              }}\n              />\n            <ErrorMessage name=\"infoMailContent\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n    </Card.Body>\n    <Card.Footer>\n      <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('general.submit')}\n      </Button>\n      <Link to={returnUrl}>\n        <Button color=\"link\">\n          {t('general.cancel')}\n        </Button>\n      </Link>\n    </Card.Footer>\n  </FoForm>\n)\n  \n  \nexport default withTranslation()(withRouter(ScheduleEventForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Dimmer,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { get_list_query_variables } from \"./tools\"\n\n\nimport { GET_SCHEDULE_EVENTS_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { SCHEDULE_EVENT_EDIT_SCHEMA } from './yupSchema'\nimport ScheduleEventForm from './ScheduleEventForm'\nimport ScheduleEventsBase from './ScheduleEventsBase'\nimport FormatISODateStr from '../../ui/ISODateString';\n\n\nconst CREATE_SCHEDULE_EVENT = gql`\n  mutation CreateScheduleEvent($input:CreateScheduleEventInput!) {\n    createScheduleEvent(input: $input) {\n      scheduleEvent{\n        id\n      }\n    }\n  }\n`\n\nconst return_url = \"/organization/events\"\n\nfunction ScheduleEventAdd({ t, history }) {\n  const returnUrl = \"/schedule/events\"\n  const sidebarContent = <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES_QUERY)\n  const [ createScheduleEvent ] = useMutation(CREATE_SCHEDULE_EVENT)\n\n  if (loading) {\n    return (\n      <ScheduleEventsBase sidebarContent={sidebarContent}>\n        <Card title={t(\"schedule.events.add\")}>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <ScheduleEventsBase sidebarContent={sidebarContent}>\n        <Card title={t(\"schedule.events.add\")}>\n          <Card.Body>\n            {t(\"schedule.events.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventsBase>\n    )\n  }\n\n  console.log(\"CREATE SCHEDULE EVENT INPUT DATA\")\n  console.log(data)\n  const inputData = data\n\n  return (\n    <ScheduleEventsBase sidebarContent={sidebarContent}>\n      <Card title={t(\"schedule.events.add\")}>\n        <Formik\n          initialValues={{ \n            displayPublic: true,\n            displayShop: true,\n            name: \"\",\n            description: \"\",\n          }}\n          validationSchema={SCHEDULE_EVENT_EDIT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              createScheduleEvent({ variables: {\n                input: {\n                  displayPublic: values.displayPublic,\n                  displayShop: values.displayShop,\n                  autoSentInfoMail: values.autoSentInfoMail,\n                  organizationLocation: values.organizationLocation,\n                  organizationLevel: values.organizationLevel,\n                  name: values.name,\n                  tagline: values.tagline,\n                  preview: values.preview,\n                  description: values.description,\n                  teacher: values.teacher,\n                  teacher2: values.teacher2,\n                  infoMailContent: values.infoMailContent,\n                }\n              }, refetchQueries: [\n                  { query: GET_SCHEDULE_EVENTS_QUERY, variables: get_list_query_variables() }\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('schedule.events.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <ScheduleEventForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              setFieldValue={setFieldValue}\n              setFieldTouched={setFieldTouched}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n            />\n          )}\n        </Formik>\n      </Card>\n    </ScheduleEventsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventAdd))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nlet general_active\nlet tickets_active\nlet earlybirds_active\nlet activities_active\nlet media_active\n\nconst ScheduleEventMenu = ({ t, eventId, activeLink }) => (\n  <List.Group transparent={true}>\n    {(activeLink === 'general') ? general_active = true: general_active = false}\n    {(activeLink === 'tickets') ? tickets_active = true: tickets_active = false}\n    {(activeLink === 'earlybirds') ? earlybirds_active = true: earlybirds_active = false}\n    {(activeLink === 'activities') ? activities_active = true: activities_active = false}\n    {(activeLink === 'media') ? media_active = true: media_active = false}\n    \n\n    <HasPermissionWrapper \n        resource=\"scheduleevent\"\n        permission=\"change\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to={`#/schedule/events/edit/${eventId}`}\n          icon=\"edit-2\"\n          active={general_active}\n          >\n          {t('schedule.events.edit.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    <HasPermissionWrapper \n        resource=\"scheduleeventticket\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to={`#/schedule/events/edit/${eventId}/tickets`}\n          icon=\"clipboard\"\n          active={tickets_active}\n          >\n          {t('schedule.events.tickets.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    <HasPermissionWrapper \n        resource=\"scheduleeventearlybird\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to={`#/schedule/events/edit/${eventId}/earlybirds`}\n          icon=\"clock\"\n          active={earlybirds_active}\n          >\n          {t('schedule.events.earlybirds.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    <HasPermissionWrapper \n        resource=\"scheduleevent\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to={`#/schedule/events/edit/${eventId}/activities`}\n          icon=\"calendar\"\n          active={activities_active}\n          >\n          {t('schedule.events.activities.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    <HasPermissionWrapper \n        resource=\"scheduleeventmedia\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to={`#/schedule/events/edit/${eventId}/media`}\n          icon=\"image\"\n          active={media_active}\n          >\n          {t('schedule.events.media.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n  </List.Group>\n);\n\nexport default withTranslation()(ScheduleEventMenu)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nconst ScheduleEventEditBack = ({ t }) => (\n  <div className=\"page-options d-flex\">\n    <Link to=\"/schedule/events\" \n          className='btn btn-link btn-sm mr-2'>\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back_to')} {t('schedule.events.title')}\n    </Link>\n  </div>\n)\n\nexport default withTranslation()(ScheduleEventEditBack)","// @flow\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container,\n  Grid\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport ScheduleEventEditMenu from \"./ScheduleEventEditMenu\"\nimport ScheduleEventEditBack from \"./ScheduleEventEditBack\"\n\n\nfunction ScheduleEventEditBaseBase({ t, match, history, children, pageHeaderOptions, sidebarContent=\"\", activeLink }) {\n  const eventId = match.params.event_id\n\n  return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"schedule.events.title\")} >\n              <div className=\"page-options d-flex\">\n                {/* Page options can go here... */}\n                <ScheduleEventEditBack />\n                { pageHeaderOptions }\n              </div>\n            </Page.Header>\n            <Grid.Row>\n            <Grid.Col md={9}>\n              { children }\n            </Grid.Col>\n            <Grid.Col md={3}>\n              { sidebarContent }\n              <h5>{t(\"general.edit_menu\")}</h5>\n              <ScheduleEventEditMenu activeLink={activeLink} eventId={eventId}/>\n            </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n      </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventEditBaseBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\n// import ScheduleEventEditTabs from \"./ScheduleEventEditTabs\"\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventEditBaseBase from \"./ScheduleEventEditBaseBase\"\n\n\nfunction ScheduleEventEditBase({\n    t, \n    match, \n    history, \n    activeTab, \n    children, \n    activeLink, \n    cardTitle, \n    pageHeaderOptions,\n    sidebarContent, \n    returnUrl=\"/schedule/events\"}) \n  {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const eventId = match.params.event_id\n\n  // Set default card title\n  if (!cardTitle) {\n    cardTitle = t(\"schedule.events.edit.title\")\n  }\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  if (loading) {\n    return (\n      <ScheduleEventEditBaseBase pageHeaderOptions={pageHeaderOptions} sidebarContent={sidebarContent} activeLink={activeLink}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <ScheduleEventEditBaseBase pageHeaderOptions={pageHeaderOptions} sidebarContent={sidebarContent} activeLink={activeLink}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            {t(\"schedule.events.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  const event = data.scheduleEvent\n  const dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\n  const cardSubTitle = (event) ? \n  <span className=\"text-muted\">\n    - {event.name + \" \" + dateStart}\n  </span> : \"\"\n\n  return (\n    <ScheduleEventEditBaseBase cardTitle={cardTitle} pageHeaderOptions={pageHeaderOptions} sidebarContent={sidebarContent} activeLink={activeLink}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle} {cardSubTitle}</Card.Title>\n        </Card.Header>\n        {children}\n      </Card>\n    </ScheduleEventEditBaseBase>\n    )\n  }\n\nexport default withTranslation()(withRouter(ScheduleEventEditBase))","// @flow\n\nimport React from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport { GET_SCHEDULE_EVENTS_QUERY, GET_SCHEDULE_EVENT_QUERY } from '../queries'\nimport { SCHEDULE_EVENT_EDIT_SCHEMA } from '../yupSchema'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventEditBase from \"./ScheduleEventEditBase\"\nimport ScheduleEventForm from \"../ScheduleEventForm\"\nimport { get_list_query_variables } from \"../tools\"\n\n\nconst UPDATE_SCHEDULE_EVENT = gql`\n  mutation UpdateScheduleEvent($input: UpdateScheduleEventInput!) {\n    updateScheduleEvent(input: $input) {\n      scheduleEvent {\n        id\n        name\n      }\n    }\n  }\n`\n\nfunction ScheduleEventEdit({t, match, history}) {\n  const id = match.params.event_id\n  const returnUrl = \"/schedule/events\"\n  const activeLink = \"general\"\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateScheduleEvent ] = useMutation(UPDATE_SCHEDULE_EVENT)\n\n\n  if (loading) {\n    return (\n      <ScheduleEventEditBase activeLink={activeLink}>\n        <Card.Body>\n          <Dimmer loading={true} active={true} />\n        </Card.Body>\n      </ScheduleEventEditBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <ScheduleEventEditBase activeLink={activeLink}>\n        <Card.Body>\n          {t(\"schedule.events.error_loading\")}\n        </Card.Body>\n      </ScheduleEventEditBase>\n    )\n  }\n\n  const initialData = data.scheduleEvent\n  const inputData = data\n\n  let initialOrgranizationlevel = \"\"\n  if (initialData.organizationLevel) {\n    initialOrgranizationlevel = initialData.organizationLevel.id\n  }\n\n  let initialTeacher = \"\"\n  if (initialData.teacher) {\n    initialTeacher = initialData.teacher.id\n  }\n\n  let initialTeacher2 = \"\"\n  if (initialData.teacher2) {\n    initialTeacher2 = initialData.teacher2.id\n  }\n\n  return (\n    <ScheduleEventEditBase activeLink={activeLink}>\n        <Formik\n          initialValues={{ \n            displayPublic: initialData.displayPublic,\n            displayShop: initialData.displayShop,\n            autoSendInfoMail: initialData.autoSendInfoMail,\n            organizationLocation: initialData.organizationLocation.id,\n            organizationLevel: initialOrgranizationlevel,\n            name: initialData.name,\n            tagline: initialData.tagline,\n            preview: initialData.preview,\n            description: initialData.description,\n            teacher: initialTeacher,\n            teacher2: initialTeacher2,\n            infoMailContent: initialData.infoMailContent,\n          }}\n          validationSchema={SCHEDULE_EVENT_EDIT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              let inputValues = {\n                id: id,\n                displayPublic: values.displayPublic,\n                displayShop: values.displayShop,\n                autoSendInfoMail: values.autoSendInfoMail,\n                organizationLocation: values.organizationLocation,\n                organizationLevel: values.organizationLevel,\n                name: values.name,\n                tagline: values.tagline,\n                preview: values.preview,\n                description: values.description,\n                infoMailContent: values.infoMailContent,\n              }\n\n              if (values.teacher) {\n                inputValues['teacher'] = values.teacher\n              }\n\n              if (values.teacher2) {\n                inputValues['teacher2'] = values.teacher2\n              }\n\n              updateScheduleEvent({ variables: {\n                input: inputValues\n              }, refetchQueries: [\n                  { query: GET_SCHEDULE_EVENTS_QUERY, variables: get_list_query_variables() }\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('schedule.events.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <ScheduleEventForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              setFieldValue={setFieldValue}\n              setFieldTouched={setFieldTouched}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n            />\n          )}\n        </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_EVENT_ACTIVITIES_QUERY = gql`\nquery ScheduleItem($before:String, $after:String, $scheduleEvent:ID!) {\n  scheduleItems(first:100, before:$before, after:$after, scheduleEvent:$scheduleEvent) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        displayPublic\n        scheduleEvent {\n          id\n          name\n        }\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        name\n        spaces\n        countAttendance\n        dateStart\n        timeStart\n        timeEnd\n        account {\n          id\n          fullName\n        }\n        account2 {\n          id\n          fullName\n        }\n      }\n    }\n  }\n}\n`\n\n\nexport const GET_SCHEDULE_EVENT_ACTIVITY_QUERY = gql`\nquery ScheduleEventActivity($before:String, $after:String, $id:ID!) {\n  scheduleItem(id: $id) {\n    id\n    displayPublic\n    name\n    spaces\n    dateStart\n    timeStart\n    timeEnd\n    organizationLocationRoom {\n      id\n      name\n      organizationLocation {\n        id\n        name\n      }\n    }\n    account {\n      id\n      fullName\n    }\n    account2 {\n      id\n      fullName\n    }\n  }\n  accounts(first: 100, before: $before, after: $after, isActive:true, teacher: true) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        fullName\n      }\n    }\n  }\n  organizationLocationRooms(first: 100, before: $before, after: $after, archived: false) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        name\n        organizationLocation {\n          id \n          name\n        }\n      }\n    }\n  }\n}\n`\n\n\nexport const DELETE_SCHEDULE_EVENT_ACTIVITY = gql`\n  mutation DeleteScheduleItem($input: DeleteScheduleItemInput!) {\n    deleteScheduleItem(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleEventActivityInputValues($after: String, $before: String) {\n    accounts(first: 100, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ContentCard from \"../../../general/ContentCard\"\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventEditBaseBase from \"./ScheduleEventEditBaseBase\"\n\n\nfunction ScheduleEventEditListBase({t, match, history, activeTab, pageInfo, onLoadMore, activeLink, children, sidebarContent=\"\"}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.edit.title\")\n\n  const eventId = match.params.event_id\n  const returnUrl = \"/schedule/events\"\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n\nif (loading) {\n  return (\n    <ScheduleEventEditBaseBase sidebarContent={sidebarContent} activeLink={activeLink}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <Dimmer loading={true} active={true} />\n        </Card.Body>\n      </Card>\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nif (error) {\n  return (\n    <ScheduleEventEditBaseBase sidebarContent={sidebarContent} activeLink={activeLink}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          {t(\"schedule.events.error_loading\")}\n        </Card.Body>\n      </Card>\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nconst event = data.scheduleEvent\nconst dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\nconst cardSubTitle = (event) ? \n<span className=\"text-muted\">\n  - {event.name + \" \" + dateStart}\n</span> : \"\"\n\nreturn (\n  <ScheduleEventEditBaseBase sidebarContent={sidebarContent} activeLink={activeLink}>\n    <ContentCard \n      cardTitle={<span>{cardTitle} {cardSubTitle}</span>}\n      pageInfo={pageInfo}\n      onLoadMore={onLoadMore}\n    >\n      {children}\n    </ContentCard>\n  </ScheduleEventEditBaseBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventEditListBase))","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_SCHEDULE_EVENT_ACTIVITY, GET_SCHEDULE_EVENT_ACTIVITIES_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventActivityDelete({t, match, history, id}) {\n  const eventId = match.params.event_id\n  const [deleteScheduleEventActivity, { data }] = useMutation(DELETE_SCHEDULE_EVENT_ACTIVITY)\n  const query_vars = {\n    scheduleEvent: eventId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.events.activities.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.events.activities.delete_success'),\n          deleteFunction: deleteScheduleEventActivity,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventActivityDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../ui/ButtonAddSecondaryMenu'\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\n\nimport { GET_SCHEDULE_EVENT_ACTIVITIES_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport ScheduleEventEditListBase from \"../edit/ScheduleEventEditListBase\"\n// import ScheduleEventTicketListBase from \"./ScheduleEventTicketListBase\"\nimport ScheduleEventActivityDelete from \"./ScheduleEventActivityDelete\"\nimport moment from 'moment';\n\n\nfunction ScheduleItems({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  console.log(appSettings)\n  \n  const eventId = match.params.event_id\n  const activeLink = \"activities\"\n\n  const sidebarContent = <Link to={`/schedule/events/edit/${eventId}/activities/add`}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.events.activities.add')}\n    </Button>\n  </Link>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, {\n    variables: {\n      scheduleEvent: eventId\n    }\n  })\n  \n  if (loading) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditListBase>\n  )\n  if (error) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const scheduleItems = data.scheduleItems\n  const pageInfo = data.scheduleItems.pageInfo\n\n  // Empty list\n  if (!scheduleItems.edges.length) { return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('schedule.events.tickets.empty_list')}</p>\n    </ScheduleEventEditListBase>\n  )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: scheduleItems.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.scheduleItems.edges\n        const pageInfo = fetchMoreResult.scheduleItems.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              scheduleItems: {\n                __typename: previousResult.scheduleItems.__typename,\n                edges: [ ...previousResult.scheduleItems.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <ScheduleEventEditListBase activeLink={activeLink} pageInfo={pageInfo} onLoadMore={onLoadMore} sidebarContent={sidebarContent}>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.teacher')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.filled')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {scheduleItems.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {moment(node.dateStart).format(dateFormat)} <br />\n                  {/* Start & end time */}\n                  <small className=\"text-muted\">\n                    {moment(node.dateStart + ' ' + node.timeStart).format(timeFormat)} {' - '}\n                    {moment(node.dateStart + ' ' + node.timeEnd).format(timeFormat)} { ' ' }\n                  </small>\n                </Table.Col>\n                <Table.Col>\n                  {node.name} <br />\n                  <div dangerouslySetInnerHTML={{__html: node.description}} className=\"text-muted\"/>\n                </Table.Col>\n                <Table.Col>\n                  {node.organizationLocationRoom.organizationLocation.name} <br />\n                  <small className=\"text-muted\">{node.organizationLocationRoom.name}</small>\n                </Table.Col>\n                <Table.Col>\n                  {node.account && node.account.fullName} \n                  {(node.account2) ? <span className=\"text-muted\"><br />{node.account2.fullName}</span> : \"\"}\n                </Table.Col>\n                <Table.Col>\n                  {node.countAttendance}/{node.spaces}\n                </Table.Col>\n                <Table.Col>\n                  <BadgeBoolean value={node.displayPublic} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/schedule/events/edit/${eventId}/activities/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <ScheduleEventActivityDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </ScheduleEventEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleItems))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_ACTIVITY_SCHEMA = Yup.object().shape({\n  displayPublic: Yup.boolean(),\n  name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  spaces: Yup.number()\n    .required(t('yup.field_required')),\n  organizationLocationRoom: Yup.string()\n    .required(t('yup.field_required')),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  timeStart: Yup.date()\n    .typeError(t('yup.time_required'))\n    .required(t('yup.field_required')),\n  timeEnd: Yup.date()\n    .typeError(t('yup.time_required'))\n    .required(t('yup.field_required')), \n  account: Yup.string(),\n  account2: Yup.string(),\n})","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventActivityBack({ t, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/activities`\n\n  return (\n    <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventActivityBack))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\nimport CSTimePicker from \"../../../ui/CSTimePicker\"\n\nfunction ScheduleEventActivityForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                    className=\"custom-switch-input\"\n                    type=\"checkbox\" \n                    name=\"displayPublic\" \n                    checked={values.displayPublic} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('schedule.events.activities.public')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.name')}>\n              <Field type=\"text\" \n                      name=\"name\" \n                      className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.location')}>\n              <Field component=\"select\" \n                    name=\"organizationLocationRoom\" \n                    className={(errors.organizationLocationRoom) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.please_select\")}</option>\n                {inputData.organizationLocationRooms.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.organizationLocation.name} - {node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLocationRoom\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.spaces')}>\n                <Field type=\"text\" \n                    name=\"spaces\" \n                    className={(errors.spaces) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n                <ErrorMessage name=\"spaces\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateStart\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n           <Form.Group label={t('general.time_start')}>\n              <CSTimePicker \n                className={(errors.timeStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeStart}\n                onChange={(date) => setFieldValue(\"timeStart\", date)}\n                onBlur={() => setFieldTouched(\"timeStart\", true)}\n                clearable={false}\n              />\n              {/* {errors.timeStart}\n              {errors.timeStart && touched.timeStart ? (\n                <span className=\"invalid-feedback\">{errors.timeStart} - hacky thingy</span>\n              ) : null} */}\n              <ErrorMessage name=\"timeStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n           <Form.Group label={t('general.time_end')}>\n              <CSTimePicker \n                className={(errors.timeEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeEnd}\n                onChange={(date) => setFieldValue(\"timeEnd\", date)}\n                onBlur={() => setFieldTouched(\"timeEnd\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher')}>\n              <Field component=\"select\" \n                      name=\"account\" \n                      className={(errors.account) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in schedule class teacher add:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher2')}>\n              <Field component=\"select\" \n                      name=\"account2\" \n                      className={(errors.account2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventActivityForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { dateToLocalISO, dateToLocalISOTime } from '../../../../tools/date_tools'\n\nimport { GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, GET_INPUT_VALUES_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_ACTIVITY_SCHEMA } from './yupSchema'\n\nimport ScheduleEventActivityBack from \"./ScheduleEventActivityBack\"\nimport ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventActivityForm from \"./ScheduleEventActivityForm\"\n\n\nconst ADD_SCHEDULE_EVENT_ACTIVITY = gql`\n  mutation CreateScheduleItem($input:CreateScheduleItemInput!) {\n    createScheduleItem(input: $input) {\n      scheduleItem {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventActivityAdd({ t, history, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/activities/`\n  const activeLink = 'activities'\n  const cardTitle = t(\"schedule.events.activities.add\")\n\n  const [addScheduleEventTicket] = useMutation(ADD_SCHEDULE_EVENT_ACTIVITY, {\n    onCompleted: () => history.push(returnUrl),\n  })\n  const { loading, error, data, fetchMore } = useQuery(GET_INPUT_VALUES_QUERY)\n\n  const sidebarContent = <ScheduleEventActivityBack />\n\n  if (loading) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditBase>\n  )\n  if (error) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditBase>\n  )\n\n  const inputData = data\n  console.log(inputData)\n\n  return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          displayPublic: true,\n          name: '',\n          spaces: '',\n          organizationLocationRoom: '',\n          dateStart: new Date(),\n          timeStart: '',\n          timeEnd: '',\n          account: '',\n          account2: ''\n        }}\n        validationSchema={SCHEDULE_EVENT_ACTIVITY_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addScheduleEventTicket({ variables: {\n            input: {\n              scheduleEvent: eventId,\n              frequencyType: \"SPECIFIC\",\n              frequencyInterval: 0,\n              scheduleItemType: \"EVENT_ACTIVITY\",\n              displayPublic: values.displayPublic,\n              name: values.name,\n              spaces: values.spaces,\n              organizationLocationRoom: values.organizationLocationRoom,\n              account: values.account,\n              account2: values.account2,\n              dateStart: dateToLocalISO(values.dateStart),\n              timeStart: dateToLocalISOTime(values.timeStart),\n              timeEnd: dateToLocalISOTime(values.timeEnd),\n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, variables: {\n                scheduleEvent: eventId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('schedule.events.activities.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventActivityForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            inputData={inputData}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventActivityAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport CardTabs from \"../../../ui/CardTabs\"\n\nfunction ScheduleEventActivityTabs({ t, active, eventId, scheduleItemId}) {\n  return (\n    <CardTabs \n      position=\"top\"\n      tabs={[\n          {\n            name: \"general\", \n            title: t(\"schedule.events.tickets.edit_menu.general\"), \n            link: `/schedule/events/edit/${eventId}/activities/edit/${scheduleItemId}`\n          },\n          {\n            name: \"attendance\", \n            title: t(\"schedule.events.tickets.edit_menu.attendance\"), \n            link: `/schedule/events/edit/${eventId}/activities/edit/${scheduleItemId}/attendance`\n          },\n      ]}\n      active={active}\n    />\n  )\n}\n\nexport default withTranslation()(ScheduleEventActivityTabs)\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport { GET_SCHEDULE_EVENT_ACTIVITY_QUERY } from './queries'\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventActivityBack from \"./ScheduleEventActivityBack\"\nimport ScheduleEventEditBaseBase from \"../edit/ScheduleEventEditBaseBase\"\nimport ScheduleEventActivityTabs from \"./ScheduleEventActivityTabs\"\n\n\nfunction ScheduleEventActivityEditBase({t, match, history, activeTab, children}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.activities.edit\")\n  const activeLink = \"activities\"\n\n  const eventId = match.params.event_id\n  const scheduleItemId = match.params.id\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  const { loading: loadingActivity, error: errorActivity, data: dataActivity } = useQuery(GET_SCHEDULE_EVENT_ACTIVITY_QUERY, {\n    variables: {\n      id: scheduleItemId\n    }\n  })\n\n  const sidebarContent = <ScheduleEventActivityBack />\n\n  if (loading || loadingActivity) {\n    return (\n      <ScheduleEventEditBaseBase sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  if (error || errorActivity) {\n    return (\n      <ScheduleEventEditBaseBase sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n          <Card.Body>\n            {t(\"schedule.events.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  const event = data.scheduleEvent\n  const scheduleItem = dataActivity.scheduleItem\n  const dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\n  const cardSubTitle = (scheduleItem) ? \n  <span className=\"text-muted\">\n    - {event.name + \" \" + dateStart}\n  </span> : \"\"\n\n  const cardActivitySubtitle = (scheduleItem) ?\n  <span className=\"text-muted\">\n    - {scheduleItem.name}\n  </span> : \"\"\n\n  return (\n    <ScheduleEventEditBaseBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle} {cardSubTitle} {cardActivitySubtitle}</Card.Title>\n        </Card.Header>\n        <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n        {children}\n      </Card>\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventActivityEditBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { dateToLocalISO, dateToLocalISOTime, TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n\nimport { GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, GET_SCHEDULE_EVENT_ACTIVITY_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_ACTIVITY_SCHEMA } from './yupSchema'\n\nimport ScheduleEventActivityBack from \"./ScheduleEventActivityBack\"\nimport ScheduleEventActivityEditBase from \"./ScheduleEventActivityEditBase\"\n// import ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventActivityForm from \"./ScheduleEventActivityForm\"\n\n\nconst UPDATE_SCHEDULE_EVENT_ACTIVITY = gql`\n  mutation UpdateScheduleItem($input:UpdateScheduleItemInput!) {\n    updateScheduleItem(input: $input) {\n      scheduleItem {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventActivityEdit({ t, history, match }) {\n  const eventId = match.params.event_id\n  const scheduleItemId = match.params.id\n  const returnUrl = `/schedule/events/edit/${eventId}/activities/`\n  const activeTab = 'general'\n  const cardTitle = t(\"schedule.events.activities.edit\")\n\n  const [updateScheduleEventTicket] = useMutation(UPDATE_SCHEDULE_EVENT_ACTIVITY)\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_ACTIVITY_QUERY, {\n    variables: {\n      id: scheduleItemId\n  }})\n\n  const sidebarContent = <ScheduleEventActivityBack />\n\n  if (loading) return (\n    <ScheduleEventActivityEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventActivityEditBase>\n  )\n  if (error) return (\n    <ScheduleEventActivityEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventActivityEditBase>\n  )\n\n  const inputData = data\n  const scheduleItem = data.scheduleItem\n  console.log(inputData)\n\n  let initialTimeStart = null\n  if (scheduleItem.timeStart) {\n    initialTimeStart = TimeStringToJSDateOBJ(scheduleItem.timeStart)\n  }\n  let initialTimeEnd = null\n  if (scheduleItem.timeEnd) {\n    initialTimeEnd = TimeStringToJSDateOBJ(scheduleItem.timeEnd)\n  }\n\n\n  return (\n    <ScheduleEventActivityEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          displayPublic: scheduleItem.displayPublic,\n          name: scheduleItem.name,\n          spaces: scheduleItem.spaces,\n          organizationLocationRoom: scheduleItem.organizationLocationRoom.id,\n          dateStart: scheduleItem.dateStart,\n          timeStart: initialTimeStart,\n          timeEnd: initialTimeEnd,\n          account: (scheduleItem.account) ? scheduleItem.account.id : '',\n          account2: (scheduleItem.account2) ? scheduleItem.account2.id : ''\n        }}\n        validationSchema={SCHEDULE_EVENT_ACTIVITY_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateScheduleEventTicket({ variables: {\n            input: {\n              id: scheduleItemId,\n              displayPublic: values.displayPublic,\n              name: values.name,\n              spaces: values.spaces,\n              organizationLocationRoom: values.organizationLocationRoom,\n              account: values.account,\n              account2: values.account2,\n              dateStart: dateToLocalISO(values.dateStart),\n              timeStart: dateToLocalISOTime(values.timeStart),\n              timeEnd: dateToLocalISOTime(values.timeEnd),\n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, variables: {\n                scheduleEvent: eventId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('schedule.events.activities.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventActivityForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            inputData={inputData}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventActivityEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventActivityEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_ITEM_ATTENDANCES_QUERY = gql`\nquery ScheduleItemAttendances($before:String, $after:String, $schedule_item:ID!) {\n  scheduleItemAttendances(first: 100, before: $before, after: $after, scheduleItem:$schedule_item) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        bookingStatus\n        account {\n          id\n          fullName\n        }\n        accountScheduleEventTicket {\n          id\n          scheduleEventTicket {\n            name\n          }\n          cancelled\n        }\n      }\n    }\n  }\n}\n`\n\n// export const GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM_QUERY = gql`\n// query ScheduleEventTicket($before:String, $after:String, $id:ID!) {\n//   scheduleEventTicket(id: $id) {\n//     id\n//     displayPublic\n//     name\n//     description\n//     price\n//     financeTaxRate {\n//       id\n//       name\n//     }\n//     financeGlaccount {\n//       id\n//       name\n//     }\n//     financeCostcenter {\n//       id\n//       name\n//     }\n//   }\n//   financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n//   financeGlaccounts(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n//   financeCostcenters(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n// }\n// `\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport { GET_SCHEDULE_EVENT_ACTIVITY_QUERY } from '../queries'\nimport { GET_SCHEDULE_EVENT_QUERY } from '../../queries'\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport ScheduleEventActivityBack from \"../ScheduleEventActivityBack\"\nimport ScheduleEventEditBaseBase from \"../../edit/ScheduleEventEditBaseBase\"\nimport ScheduleEventActivityTabs from \"../ScheduleEventActivityTabs\"\n\n\nfunction ScheduleEventActivityAttendanceBase({t, match, history, activeTab, onLoadMore, pageInfo, children}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.activities.edit\")\n  const activeLink = \"activities\"\n\n  const eventId = match.params.event_id\n  const scheduleItemId = match.params.id\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  const { loading: loadingActivity, error: errorActivity, data: dataActivity } = useQuery(GET_SCHEDULE_EVENT_ACTIVITY_QUERY, {\n    variables: {\n      id: scheduleItemId\n    }\n  })\n\n  const sidebarContent = <ScheduleEventActivityBack />\n\n  if (loading || loadingActivity) {\n    return (\n      <ScheduleEventEditBaseBase  activeLink={activeLink} sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  if (error || errorActivity) {\n    return (\n      <ScheduleEventEditBaseBase activeLink={activeLink} sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n          <Card.Body>\n            {t(\"schedule.event.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  const event = data.scheduleEvent\n  const scheduleItem = dataActivity.scheduleItem\n  const dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\n  const cardSubTitle = (scheduleItem) ? \n  <span className=\"text-muted\">\n    - {event.name + \" \" + dateStart}\n  </span> : \"\"\n\n  const cardActivitySubtitle = (scheduleItem) ?\n  <span className=\"text-muted\">\n    - {scheduleItem.name}\n  </span> : \"\"\n\n  return (\n    <ScheduleEventEditBaseBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <ContentCard \n        cardTitle={<span>{cardTitle} {cardSubTitle} {cardActivitySubtitle}</span>}\n        cardTabs={<ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>}\n        pageInfo={pageInfo}\n        onLoadMore={onLoadMore}\n      >\n        \n        {children}\n      </ContentCard>\n      {/* <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle} {cardSubTitle} {cardActivitySubtitle}</Card.Title>\n        </Card.Header>\n        <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n        {children}\n      </Card> */}\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventActivityAttendanceBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\n\nimport {\n  Table\n} from \"tabler-react\"\n\n// import { dateToLocalISO, dateToLocalISOTime, TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n\nimport { GET_SCHEDULE_ITEM_ATTENDANCES_QUERY } from \"./queries\"\n// import { SCHEDULE_EVENT_ACTIVITY_SCHEMA } from './yupSchema'\n\nimport ScheduleEventActivityBack from \"../ScheduleEventActivityBack\"\nimport ScheduleEventActivityAttendanceBase from \"./ScheduleEventActivityAttendanceBase\"\n// import ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\n// import ScheduleEventActivityForm from \"./ScheduleEventActivityForm\"\nimport BadgeBookingStatus from \"../../../../ui/BadgeBookingStatus\"\n\n\nfunction ScheduleEventActivityAttendance({ t, history, match }) {\n  const eventId = match.params.event_id\n  const scheduleItemId = match.params.id\n  const returnUrl = `/schedule/events/edit/${eventId}/activities/`\n  const activeTab = 'attendance'\n  const cardTitle = t(\"schedule.events.activities.edit\")\n  const activeLink = \"activities\"\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_ITEM_ATTENDANCES_QUERY, {\n    variables: {\n      schedule_item: scheduleItemId\n    },\n    fetchPolicy: \"network-only\"\n  })\n\n  const sidebarContent = <ScheduleEventActivityBack />\n\n  if (loading) return (\n    <ScheduleEventActivityAttendanceBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventActivityAttendanceBase>\n  )\n  if (error) return (\n    <ScheduleEventActivityAttendanceBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventActivityAttendanceBase>\n  )\n\n  const scheduleItemAttendances = data.scheduleItemAttendances\n  console.log(data)\n  const pageInfo = scheduleItemAttendances.pageInfo\n\n  // Empty list\n  if (!scheduleItemAttendances.edges.length) { return (\n    <ScheduleEventActivityAttendanceBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('schedule.events.activities.attendance.empty_list')}</p>\n    </ScheduleEventActivityAttendanceBase>\n  )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: scheduleItemAttendances.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.scheduleItemAttendances.edges\n        const pageInfo = fetchMoreResult.scheduleItemAttendances.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new attendance items at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              scheduleItemAttendances: {\n                __typename: previousResult.scheduleItemAttendances.__typename,\n                edges: [ ...previousResult.scheduleItemAttendances.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <ScheduleEventActivityAttendanceBase \n      // sidebarContent={sidebarContent} \n      // cardTitle={cardTitle} \n      activeTab={activeTab} \n      pageInfo={pageInfo}\n      onLoadMore={onLoadMore}\n    >\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.booking_status')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {scheduleItemAttendances.edges.map(({ node }) => (\n            <Table.Row key={v4()}>\n              <Table.Col>\n                {node.account.fullName}\n              </Table.Col>\n              <Table.Col>\n                <BadgeBookingStatus status={node.bookingStatus} />\n              </Table.Col>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </ScheduleEventActivityAttendanceBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventActivityAttendance))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY = gql`\n  query ScheduleEventEarlybirds($before:String, $after:String, $scheduleEvent:ID!) {\n    scheduleEventEarlybirds(first: 100, before:$before, after:$after, scheduleEvent:$scheduleEvent) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          scheduleEvent {\n            id\n          }\n          discountPercentage\n          dateStart\n          dateEnd\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_SCHEDULE_EVENT_EARLYBIRD_QUERY = gql`\n  query ScheduleEventEarlybird($id:ID!) {\n    scheduleEventEarlybird(id: $id) {\n      id\n      discountPercentage\n      dateStart\n      dateEnd\n    }\n  }\n`\n\n\nexport const ADD_SCHEDULE_EVENT_EARLYBIRD = gql`\n  mutation CreateScheduleEventEarlybird($input:CreateScheduleEventEarlybirdInput!) {\n    createScheduleEventEarlybird(input: $input) {\n      scheduleEventEarlybird {\n        id\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_SCHEDULE_EVENT_EARLYBIRD = gql`\n  mutation UpdateScheduleEventEarlybird($input:UpdateScheduleEventEarlybirdInput!) {\n    updateScheduleEventEarlybird(input: $input) {\n      scheduleEventEarlybird {\n        id\n      }\n    }\n  }\n`\n\n\nexport const DELETE_SCHEDULE_EVENT_EARLYBIRD   = gql`\n  mutation DeleteScheduleEventEarlybird($input: DeleteScheduleEventEarlybirdInput!) {\n    deleteScheduleEventEarlybird(input: $input) {\n      ok\n    }\n  }\n`\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_SCHEDULE_EVENT_EARLYBIRD, GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventEarlybirdDelete({t, match, history, id}) {\n  const eventId = match.params.event_id\n  const [deleteScheduleEventEarlybird, { data }] = useMutation(DELETE_SCHEDULE_EVENT_EARLYBIRD)\n  const query_vars = {\n    scheduleEvent: eventId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.events.earlybirds.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.events.earlybirds.delete_success'),\n          deleteFunction: deleteScheduleEventEarlybird,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventEarlybirdDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../ui/ButtonAddSecondaryMenu'\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\n\nimport { GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY } from './queries'\n\nimport {\n  Avatar,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport ScheduleEventEditListBase from \"../edit/ScheduleEventEditListBase\"\n// import ScheduleEventTicketListBase from \"./ScheduleEventTicketListBase\"\nimport ScheduleEventEarlybirdDelete from \"./ScheduleEventEarlybirdDelete\"\nimport moment from 'moment';\n\n\nfunction ScheduleEventEarlybirds({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  console.log(appSettings)\n  \n  const eventId = match.params.event_id\n  const activeLink = \"earlybirds\"\n\n  const sidebarContent = <Link to={`/schedule/events/edit/${eventId}/earlybirds/add`}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.events.earlybirds.add')}\n    </Button>\n  </Link>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY, {\n    variables: {\n      scheduleEvent: eventId\n    }\n  })\n  \n  if (loading) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditListBase>\n  )\n  if (error) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const scheduleEventEarlybirds = data.scheduleEventEarlybirds\n  const pageInfo = data.scheduleEventEarlybirds.pageInfo\n\n  // Empty list\n  if (!scheduleEventEarlybirds.edges.length) { return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('schedule.events.earlybirds.empty_list')}</p>\n    </ScheduleEventEditListBase>\n  )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: scheduleEventEarlybirds.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.scheduleEventEarlybirds.edges\n        const pageInfo = fetchMoreResult.scheduleEventEarlybirds.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              scheduleEventEarlybirds: {\n                __typename: previousResult.scheduleEventEarlybirds.__typename,\n                edges: [ ...previousResult.scheduleEventEarlybirds.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <ScheduleEventEditListBase activeLink={activeLink} pageInfo={pageInfo} onLoadMore={onLoadMore} sidebarContent={sidebarContent}>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n            <Table.ColHeader>{t('schedule.events.earlybirds.discountPercentage')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {scheduleEventEarlybirds.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {moment(node.dateStart).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  {moment(node.dateEnd).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  {node.discountPercentage} %\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/schedule/events/edit/${eventId}/earlybirds/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <ScheduleEventEarlybirdDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </ScheduleEventEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventEarlybirds))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_EARLYBIRDS_SCHEMA = Yup.object().shape({\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .required(t('yup.field_required')),\n  discountPercentage: Yup.number()\n  .required(t('yup.field_required')),\n})","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventEarlybirdsBack({ t, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/earlybirds`\n\n  return (\n    <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventEarlybirdsBack))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\nfunction ScheduleEventMediaForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  returnUrl,\n  setFieldTouched,\n  setFieldValue,\n})   \n{\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateStart\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                className={(errors.dateEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateEnd}\n                onChange={(date) => {\n                  setFieldValue(\"dateEnd\", date)\n                  setFieldTouched(\"dateEnd\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('schedule.events.earlybirds.discountPercentage')}>\n              <Field type=\"text\" \n                    name=\"discountPercentage\" \n                    className={(errors.discountPercentage) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"discountPercentage\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\" role=\"button\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventMediaForm))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { ADD_SCHEDULE_EVENT_EARLYBIRD, GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_EARLYBIRDS_SCHEMA } from './yupSchema'\n\nimport ScheduleEventEarlybirdBack from \"./ScheduleEventEarlybirdsBack\"\nimport ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventEarlybirdForm from \"./ScheduleEventEarlybirdForm\"\n\n\nfunction ScheduleEventEarlybirdAdd({ t, history, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/earlybirds/`\n  const activeLink = 'earlybirds'\n  const cardTitle = t(\"schedule.events.earlybirds.add\")\n\n  const [addScheduleEventEarlybird] = useMutation(ADD_SCHEDULE_EVENT_EARLYBIRD)\n\n  const sidebarContent = <ScheduleEventEarlybirdBack />\n\n  return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          dateStart: new Date(),\n          dateEnd: \"\",\n          discountPercentage: 0,\n        }}\n        validationSchema={SCHEDULE_EVENT_EARLYBIRDS_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"Submit values\")\n          console.log(values)\n\n          addScheduleEventEarlybird({ variables: {\n            input: {\n              scheduleEvent: eventId,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              discountPercentage: values.discountPercentage   \n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY, variables: {scheduleEvent: eventId}}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              history.push(returnUrl)\n              toast.success((t('schedule.events.earlybirds.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n      >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventEarlybirdForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventEarlybirdAdd))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { \n  GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY, \n  GET_SCHEDULE_EVENT_EARLYBIRD_QUERY,\n  UPDATE_SCHEDULE_EVENT_EARLYBIRD\n } from \"./queries\"\nimport { SCHEDULE_EVENT_EARLYBIRDS_SCHEMA } from './yupSchema'\n\nimport ScheduleEventEarlybirdBack from \"./ScheduleEventEarlybirdsBack\"\nimport ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventEarlybirdForm from \"./ScheduleEventEarlybirdForm\"\n\n\nfunction ScheduleEventEarlybirdEdit({ t, history, match }) {\n  const eventId = match.params.event_id\n  const scheduleEventEarlybirdId = match.params.id\n  const returnUrl = `/schedule/events/edit/${eventId}/earlybirds/`\n  const activeTab = 'general'\n  const cardTitle = t(\"schedule.events.earlybirds.edit\")\n\n  const [updateScheduleEventEarlybird] = useMutation(UPDATE_SCHEDULE_EVENT_EARLYBIRD)\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_EARLYBIRD_QUERY, {\n    variables: {\n      id: scheduleEventEarlybirdId\n  }})\n\n  const sidebarContent = <ScheduleEventEarlybirdBack />\n\n  if (loading) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditBase>\n  )\n  if (error) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditBase>\n  )\n\n  const inputData = data\n  const scheduleEventEarlybird = data.scheduleEventEarlybird\n  console.log(inputData)\n\n  return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          dateStart: scheduleEventEarlybird.dateStart,\n          dateEnd: scheduleEventEarlybird.dateEnd,\n          discountPercentage: scheduleEventEarlybird.discountPercentage\n        }}\n        validationSchema={SCHEDULE_EVENT_EARLYBIRDS_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"Submit values\")\n          console.log(values)\n\n          updateScheduleEventEarlybird({ variables: {\n            input: {\n              id: scheduleEventEarlybirdId,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              discountPercentage: values.discountPercentage   \n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY, variables: {scheduleEvent: eventId}}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              history.push(returnUrl)\n              toast.success((t('schedule.events.earlybirds.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventEarlybirdForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventEarlybirdEdit))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_EVENT_MEDIAS_QUERY = gql`\n  query ScheduleEventMedias($before:String, $after:String, $scheduleEvent:ID!) {\n    scheduleEventMedias(first: 100, before:$before, after:$after, scheduleEvent:$scheduleEvent) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          scheduleEvent {\n            id\n          }\n          sortOrder\n          description\n          urlImage\n          urlImageThumbnailSmall\n          image\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_SCHEDULE_EVENT_MEDIA_QUERY = gql`\n  query ScheduleEventMedia($id:ID!) {\n    scheduleEventMedia(id: $id) {\n      id\n      sortOrder\n      description\n      image\n    }\n  }\n`\n\n\nexport const DELETE_SCHEDULE_EVENT_MEDIA   = gql`\n  mutation DeleteScheduleEventMedia($input: DeleteScheduleEventMediaInput!) {\n    deleteScheduleEventMedia(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleEventActivityInputValues($after: String, $before: String) {\n    accounts(first: 100, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_SCHEDULE_EVENT_MEDIA, GET_SCHEDULE_EVENT_MEDIAS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventMediaDelete({t, match, history, id}) {\n  const eventId = match.params.event_id\n  const [deleteScheduleEventMedia, { data }] = useMutation(DELETE_SCHEDULE_EVENT_MEDIA)\n  const query_vars = {\n    scheduleEvent: eventId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.events.media.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.events.media.delete_success'),\n          deleteFunction: deleteScheduleEventMedia,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_EVENT_MEDIAS_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventMediaDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../ui/ButtonAddSecondaryMenu'\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\n\nimport { GET_SCHEDULE_EVENT_MEDIAS_QUERY } from './queries'\n\nimport {\n  Avatar,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport ScheduleEventEditListBase from \"../edit/ScheduleEventEditListBase\"\n// import ScheduleEventTicketListBase from \"./ScheduleEventTicketListBase\"\nimport ScheduleEventMediaDelete from \"./ScheduleEventMediaDelete\"\nimport moment from 'moment';\n\n\nfunction ScheduleEventMedia({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  console.log(appSettings)\n  \n  const eventId = match.params.event_id\n  const activeLink = \"media\"\n\n  const sidebarContent = <Link to={`/schedule/events/edit/${eventId}/media/add`}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.events.media.add')}\n    </Button>\n  </Link>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_MEDIAS_QUERY, {\n    variables: {\n      scheduleEvent: eventId\n    }\n  })\n  \n  if (loading) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditListBase>\n  )\n  if (error) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const scheduleEventMedias = data.scheduleEventMedias\n  const pageInfo = data.scheduleEventMedias.pageInfo\n\n  // Empty list\n  if (!scheduleEventMedias.edges.length) { return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('schedule.events.media.empty_list')}</p>\n    </ScheduleEventEditListBase>\n  )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: scheduleEventMedias.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.scheduleEventMedias.edges\n        const pageInfo = fetchMoreResult.scheduleEventMedias.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              scheduleEventMedias: {\n                __typename: previousResult.scheduleEventMedias.__typename,\n                edges: [ ...previousResult.scheduleEventMedias.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <ScheduleEventEditListBase activeLink={activeLink} pageInfo={pageInfo} onLoadMore={onLoadMore} sidebarContent={sidebarContent}>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader></Table.ColHeader> \n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.sort_order')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {scheduleEventMedias.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  <Avatar size=\"lg\" imageURL={node.urlImageThumbnailSmall} />\n                </Table.Col>\n                <Table.Col>\n                  {node.description}\n                </Table.Col>\n                <Table.Col>\n                  {node.sortOrder}\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/schedule/events/edit/${eventId}/media/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <ScheduleEventMediaDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </ScheduleEventEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventMedia))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_MEDIA_SCHEMA = Yup.object().shape({\n  description: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  sortOrder: Yup.number(),\n})","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventMediaBack({ t, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/media`\n\n  return (\n    <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventMediaBack))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\n\nimport { customFileInputLabelStyle } from \"../../../../tools/custom_file_input_label_style\"\n\nfunction ScheduleEventMediaForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  returnUrl,\n  inputFileName, \n  fileInputLabel, \n  handleFileInputChange=f=>f\n})   \n{\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.description')}>\n              <Field type=\"text\" \n                      name=\"description\" \n                      className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.sort_order')}>\n              <Field type=\"text\" \n                    name=\"sortOrder\" \n                    className={(errors.sortOrder) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"sortOrder\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.custom_file_input_label')}>\n              <div className=\"custom-file\">\n                <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                  {fileInputLabel}\n                </label>\n              </div>\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\" role=\"button\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventMediaForm))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { GET_SCHEDULE_EVENT_MEDIAS_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_MEDIA_SCHEMA } from './yupSchema'\n\nimport ScheduleEventMediaBack from \"./ScheduleEventMediaBack\"\nimport ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventMediaForm from \"./ScheduleEventMediaForm\"\n\n\nconst ADD_SCHEDULE_EVENT_MEDIA = gql`\n  mutation CreateScheduleEventMedia($input:CreateScheduleEventMediaInput!) {\n    createScheduleEventMedia(input: $input) {\n      scheduleEventMedia {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventMediaAdd({ t, history, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/media/`\n  const activeLink = 'media'\n  const cardTitle = t(\"schedule.events.media.add\")\n\n  const [addScheduleEventMedia] = useMutation(ADD_SCHEDULE_EVENT_MEDIA, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n\n  const sidebarContent = <ScheduleEventMediaBack />\n\n  return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          description: \"\",\n          sortOrder: 0,\n        }}\n        validationSchema={SCHEDULE_EVENT_MEDIA_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"Submit values\")\n          console.log(values)\n          console.log(fileName)\n\n          let inputVars = {\n            scheduleEvent: eventId,\n            description: values.description,\n            sortOrder: values.sortOrder,\n            imageFileName: fileName,\n          }\n\n          let reader = new FileReader()\n          reader.onload = function(reader_event) {\n            console.log(reader_event.target.result)\n            let b64_enc_file = reader_event.target.result\n            console.log(b64_enc_file)\n            // Add uploaded document b64 encoded blob to input vars\n            inputVars.image = b64_enc_file\n\n            addScheduleEventMedia({ variables: {\n              input: inputVars\n            }, refetchQueries: [\n                {query: GET_SCHEDULE_EVENT_MEDIAS_QUERY, variables: {scheduleEvent: eventId}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('schedule.events.media.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                  setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n          \n          let file = inputFileName.current.files[0]\n          if (file && file.size < 5242880) {\n            reader.readAsDataURL(file)\n          } else if (file && file.size > 5242880) { \n            toast.error(t(\"error_messages.selected_file_exceeds_max_filesize\"), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n            setSubmitting(false)\n          } else {\n            toast.error(t(\"general.please_select_a_file\"), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n            setSubmitting(false)\n          }\n        }}\n      >\n        {({ isSubmitting, errors, values }) => (\n          <ScheduleEventMediaForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            inputFileName={inputFileName}\n            fileInputLabel={fileInputLabel}\n            handleFileInputChange={handleFileInputChange}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventMediaAdd))","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport { GET_SCHEDULE_EVENT_MEDIA_QUERY } from './queries'\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventMediaBack from \"./ScheduleEventMediaBack\"\nimport ScheduleEventEditBaseBase from \"../edit/ScheduleEventEditBaseBase\"\n\n\nfunction ScheduleEventMediaEditBase({t, match, history, activeTab, children}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.media.edit\")\n  const activeLink = \"media\"\n\n  const eventId = match.params.event_id\n  const scheduleEventMediaId = match.params.id\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  const { loading: loadingMedia, error: errorMedia, data: dataMedia } = useQuery(GET_SCHEDULE_EVENT_MEDIA_QUERY, {\n    variables: {\n      id: scheduleEventMediaId\n    }\n  })\n\n  const sidebarContent = <ScheduleEventMediaBack />\n\n  if (loading || loadingMedia) {\n    return (\n      <ScheduleEventEditBaseBase sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  if (error || errorMedia) {\n    return (\n      <ScheduleEventEditBaseBase sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            {t(\"schedule.events.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  const event = data.scheduleEvent\n  const scheduleEventMedia = dataMedia.scheduleEventMedia\n  const dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\n  const cardSubTitle = (scheduleEventMedia) ? \n  <span className=\"text-muted\">\n    - {event.name + \" \" + dateStart}\n  </span> : \"\"\n\n  const cardActivitySubtitle = (scheduleEventMedia) ?\n  <span className=\"text-muted\">\n    - {scheduleEventMedia.description}\n  </span> : \"\"\n\n  return (\n    <ScheduleEventEditBaseBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle} {cardSubTitle} {cardActivitySubtitle}</Card.Title>\n        </Card.Header>\n        {children}\n      </Card>\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventMediaEditBase))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { GET_SCHEDULE_EVENT_MEDIAS_QUERY, GET_SCHEDULE_EVENT_MEDIA_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_MEDIA_SCHEMA } from './yupSchema'\n\nimport ScheduleEventMediaBack from \"./ScheduleEventMediaBack\"\nimport ScheduleEventMediaEditBase from \"./ScheduleEventMediaEditBase\"\nimport ScheduleEventMediaForm from \"./ScheduleEventMediaForm\"\n\n\nconst UPDATE_SCHEDULE_EVENT_MEDIA = gql`\n  mutation UpdateScheduleEventMedia($input:UpdateScheduleEventMediaInput!) {\n    updateScheduleEventMedia(input: $input) {\n      scheduleEventMedia {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventMediaEdit({ t, history, match }) {\n  const eventId = match.params.event_id\n  const scheduleEventMediaId = match.params.id\n  const returnUrl = `/schedule/events/edit/${eventId}/media/`\n  const activeTab = 'general'\n  const cardTitle = t(\"schedule.events.media.edit\")\n\n  const [updateScheduleEventMedia] = useMutation(UPDATE_SCHEDULE_EVENT_MEDIA)\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_MEDIA_QUERY, {\n    variables: {\n      id: scheduleEventMediaId\n  }})\n\n  const sidebarContent = <ScheduleEventMediaBack />\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n\n  if (loading) return (\n    <ScheduleEventMediaEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventMediaEditBase>\n  )\n  if (error) return (\n    <ScheduleEventMediaEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventMediaEditBase>\n  )\n\n  const inputData = data\n  const scheduleEventMedia = data.scheduleEventMedia\n  console.log(inputData)\n\n  return (\n    <ScheduleEventMediaEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          description: scheduleEventMedia.description,\n          sortOrder: scheduleEventMedia.sortOrder\n        }}\n        validationSchema={SCHEDULE_EVENT_MEDIA_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"Submit values\")\n          console.log(values)\n          console.log(fileName)\n\n          let inputVars = {\n            id: scheduleEventMediaId,\n            description: values.description,\n            sortOrder: values.sortOrder\n          }\n\n          function updateMedia() {\n            updateScheduleEventMedia({ variables: {\n              input: inputVars\n            }, refetchQueries: [\n                {query: GET_SCHEDULE_EVENT_MEDIAS_QUERY, variables: {scheduleEvent: eventId}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('schedule.events.media.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                  setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n\n          let reader = new FileReader()\n          reader.onload = function(reader_event) {\n            console.log(reader_event.target.result)\n            let b64_enc_file = reader_event.target.result\n            console.log(b64_enc_file)\n            // Add uploaded document b64 encoded blob to input vars\n            inputVars.image = b64_enc_file\n            inputVars.imageFileName = fileName\n\n            updateMedia()\n          }\n          \n          let file = inputFileName.current.files[0]\n          if (file && file.size < 5242880) {\n            reader.readAsDataURL(file)\n          } else if (file && file.size > 5242880) { \n            toast.error(t(\"error_messages.selected_file_exceeds_max_filesize\"), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n            setSubmitting(false)\n          } else {\n            updateMedia()\n          }\n        }}\n        >\n        {({ isSubmitting, errors, values }) => (\n          <ScheduleEventMediaForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            inputFileName={inputFileName}\n            fileInputLabel={fileInputLabel}\n            handleFileInputChange={handleFileInputChange}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventMediaEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventMediaEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_EVENT_TICKETS_QUERY = gql`\n  query ScheduleEventTickets($before:String, $after:String, $scheduleEvent:ID!) {\n    scheduleEventTickets(first: 100, before:$before, after:$after, scheduleEvent:$scheduleEvent) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          scheduleEvent {\n            id\n          }\n          fullEvent\n          deletable\n          displayPublic\n          name\n          description\n          price\n          priceDisplay\n          isSoldOut\n          financeTaxRate {\n            id\n            name\n          }\n          financeGlaccount {\n            id\n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_SCHEDULE_EVENT_TICKET_QUERY = gql`\n  query ScheduleEventTicket($before:String, $after:String, $id:ID!) {\n    scheduleEventTicket(id: $id) {\n      id\n      displayPublic\n      name\n      description\n      price\n      financeTaxRate {\n        id\n        name\n      }\n      financeGlaccount {\n        id\n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    financeGlaccounts(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    financeCostcenters(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const DELETE_SCHEDULE_EVENT_TICKET = gql`\n  mutation DeleteScheduleEventTicket($input: DeleteScheduleEventTicketInput!) {\n    deleteScheduleEventTicket(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleEventTicketInputValues($after: String, $before: String) {\n    financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    financeGlaccounts(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    financeCostcenters(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventEditListBase from \"../edit/ScheduleEventEditListBase\"\n\n\nfunction ScheduleEventTicketListBase({t, match, history, activeTab, pageInfo, onLoadMore, children}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.edit.title\")\n  const activeLink = \"tickets\"\n\n  const eventId = match.params.event_id\n  const returnUrl = \"/schedule/events\"\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  const sidebarContent = <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n\nif (loading) {\n  return (\n    <ScheduleEventEditListBase sidebarContent={sidebarContent} activeLink={activeLink}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <Dimmer loading={true} active={true} />\n        </Card.Body>\n      </Card>\n    </ScheduleEventEditListBase>\n  )\n}\n\nif (error) {\n  return (\n    <ScheduleEventEditListBase sidebarContent={sidebarContent} activeLink={activeLink}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          {t(\"schedule.events.error_loading\")}\n        </Card.Body>\n      </Card>\n    </ScheduleEventEditListBase>\n  )\n}\n\nconst event = data.scheduleEvent\nconst dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\nconst cardSubTitle = (event) ? \n<span className=\"text-muted\">\n  - {event.name + \" \" + dateStart}\n</span> : \"\"\n\nreturn (\n  <ScheduleEventEditListBase sidebarContent={sidebarContent} activeLink={activeLink}>\n    <ContentCard \n      cardTitle={<span>{cardTitle} {cardSubTitle}</span>}\n      pageInfo={pageInfo}\n      onLoadMore={onLoadMore}\n    >\n      {children}\n    </ContentCard>\n  </ScheduleEventEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventTicketListBase))","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_SCHEDULE_EVENT_TICKET, GET_SCHEDULE_EVENT_TICKETS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventTicketDelete({t, match, history, id}) {\n  const eventId = match.params.event_id\n  const [deleteScheduleEventTicket, { data }] = useMutation(DELETE_SCHEDULE_EVENT_TICKET)\n  const query_vars = {\n    scheduleEvent: eventId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.events.tickets.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.events.tickets.delete_success'),\n          deleteFunction: deleteScheduleEventTicket,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_EVENT_TICKETS_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketDelete))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Badge\n} from \"tabler-react\"\n\n\nfunction BadgeSoldOut({ t }) {\n  return <Badge color=\"warning\">{t('general.sold_out')}</Badge> \n}\n\nexport default withTranslation()(BadgeSoldOut)","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../ui/ButtonAddSecondaryMenu'\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\n\nimport { GET_SCHEDULE_EVENT_TICKETS_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport ScheduleEventEditListBase from \"../edit/ScheduleEventEditListBase\"\nimport ScheduleEventTicketListBase from \"./ScheduleEventTicketListBase\"\nimport ScheduleEventTicketDelete from \"./ScheduleEventTicketDelete\"\nimport moment from 'moment';\nimport BadgeSoldOut from '../../../ui/BadgeSoldOut';\n\n\nfunction ScheduleEventTickets({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  console.log(appSettings)\n  \n  const eventId = match.params.event_id\n  const activeLink = \"tickets\"\n\n  const sidebarContent = <Link to={`/schedule/events/edit/${eventId}/tickets/add`}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.events.tickets.add')}\n    </Button>\n  </Link>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_TICKETS_QUERY, {\n    variables: {\n      scheduleEvent: eventId\n    }\n  })\n  \n  if (loading) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditListBase>\n  )\n  if (error) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const scheduleEventTickets = data.scheduleEventTickets\n  const pageInfo = data.scheduleEventTickets.pageInfo\n\n  // Empty list\n  if (!scheduleEventTickets.edges.length) { return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('schedule.events.tickets.empty_list')}</p>\n    </ScheduleEventEditListBase>\n  )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: scheduleEventTickets.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.scheduleEventTickets.edges\n        const pageInfo = fetchMoreResult.scheduleEventTickets.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              scheduleEventTickets: {\n                __typename: previousResult.scheduleEventTickets.__typename,\n                edges: [ ...previousResult.scheduleEventTickets.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <ScheduleEventEditListBase activeLink={activeLink} pageInfo={pageInfo} onLoadMore={onLoadMore} sidebarContent={sidebarContent}>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.glaccount')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.costcenter')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {scheduleEventTickets.edges.map(({ node }) => (\n            <Table.Row key={v4()}>\n              {/* <Table.Col>\n                {moment(node.dateStart).format(dateFormat)}\n              </Table.Col>\n              <Table.Col>\n                {moment(node.dateEnd).format(dateFormat)}\n              </Table.Col> */}\n              <Table.Col>\n                {node.name} <br />\n                <div dangerouslySetInnerHTML={{__html: node.description}} className=\"text-muted\"/>\n              </Table.Col>\n              <Table.Col>\n                {node.priceDisplay} <br />\n                {(node.isSoldOut) ? <BadgeSoldOut /> : \"\"}\n              </Table.Col>\n              <Table.Col>\n                <BadgeBoolean value={node.displayPublic} />\n              </Table.Col>\n              <Table.Col>\n                {(node.financeGlaccount) ? node.financeGlaccount.name : \"\"}\n              </Table.Col>\n              <Table.Col>\n                {(node.financeCostcenter) ? node.financeCostcenter.name : \"\"}\n              </Table.Col>\n              <Table.Col className=\"text-right\">\n                <Link to={`/schedule/events/edit/${eventId}/tickets/edit/${node.id}`}>\n                  <Button className='btn-sm' \n                          color=\"secondary\">\n                    {t('general.edit')}\n                  </Button>\n                </Link>\n              </Table.Col>\n              <Table.Col className=\"text-right\">\n                {/* Check for fullEvent / deletable before showing delete button */}\n                {(node.deletable) ? <ScheduleEventTicketDelete id={node.id} /> : \"\"}\n              </Table.Col>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </ScheduleEventEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventTickets))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_TICKET_SCHEMA = Yup.object().shape({\n  displayPublic: Yup.boolean(),\n  name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  description: Yup.string(),\n  price: Yup.number(),\n  financeTaxRate: Yup.string(),\n  financeGlaccount: Yup.string(),\n  financeCostcenter: Yup.string(),\n})","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventTicketBack({ t, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/tickets`\n\n  return (\n    <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketBack))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n// import CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction ScheduleEventTicketForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                    className=\"custom-switch-input\"\n                    type=\"checkbox\" \n                    name=\"displayPublic\" \n                    checked={values.displayPublic} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('schedule.events.tickets.public')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.name')}>\n              <Field type=\"text\" \n                      name=\"name\" \n                      className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.price')}>\n                <Field type=\"text\" \n                    name=\"price\" \n                    className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n                <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.taxrate')}>\n              <Field component=\"select\" \n                      name=\"financeTaxRate\" \n                      className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in subscription price add:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.financeTaxRates.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"description\"\n              initialValue={values.description}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"description\", e.target.getContent())\n                setFieldTouched(\"description\", true, true)\n              }}\n            />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.glaccount')}>\n              <Field component=\"select\" \n                    name=\"financeGlaccount\" \n                    className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.financeGlaccounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.costcenter')}>\n              <Field component=\"select\" \n                    name=\"financeCostcenter\" \n                    className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.financeCostcenters.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventTicketForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { GET_SCHEDULE_EVENT_TICKETS_QUERY, GET_INPUT_VALUES_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_TICKET_SCHEMA } from './yupSchema'\n\nimport ScheduleEventTicketBack from \"./ScheduleEventTicketBack\"\nimport ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventTicketForm from \"./ScheduleEventTicketForm\"\n\n\nconst ADD_SCHEDULE_EVENT_TICKET = gql`\n  mutation CreateScheduleEventTicket($input:CreateScheduleEventTicketInput!) {\n    createScheduleEventTicket(input: $input) {\n      scheduleEventTicket {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventTicketAdd({ t, history, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/tickets/`\n  const activeLink = 'tickets'\n  const cardTitle = t(\"schedule.events.tickets.add\")\n\n  const [addScheduleEventTicket] = useMutation(ADD_SCHEDULE_EVENT_TICKET, {\n    onCompleted: () => history.push(returnUrl),\n  })\n  const { loading, error, data, fetchMore } = useQuery(GET_INPUT_VALUES_QUERY)\n\n  const sidebarContent = <ScheduleEventTicketBack />\n\n  if (loading) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditBase>\n  )\n  if (error) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditBase>\n  )\n\n  const inputData = data\n\n  return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          displayPublic: true,\n          name: '',\n          description: '',\n        }}\n        validationSchema={SCHEDULE_EVENT_TICKET_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addScheduleEventTicket({ variables: {\n            input: {\n              scheduleEvent: eventId,\n              displayPublic: values.displayPublic,\n              name: values.name,\n              description: values.description,\n              price: values.price,\n              financeTaxRate: values.financeTaxRate,\n              financeGlaccount: values.financeGlaccount,\n              financeCostcenter: values.financeCostcenter\n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n                scheduleEvent: eventId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('schedule.events.tickets.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventTicketForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            inputData={inputData}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport CardTabs from \"../../../ui/CardTabs\"\n\nfunction ScheduleEventTicketTabs({ t, active, eventId, ticketId}) {\n  return (\n    <CardTabs \n      position=\"top\"\n      tabs={[\n          {\n            name: \"general\", \n            title: t(\"schedule.events.tickets.edit_menu.general\"), \n            link: `/schedule/events/edit/${eventId}/tickets/edit/${ticketId}`\n          },\n          {\n            name: \"activities\", \n            title: t(\"schedule.events.tickets.edit_menu.activities\"), \n            link: `/schedule/events/edit/${eventId}/tickets/edit/${ticketId}/activities`\n          },\n          {\n            name: \"customers\", \n            title: t(\"schedule.events.tickets.edit_menu.customers\"), \n            link: `/schedule/events/edit/${eventId}/tickets/edit/${ticketId}/customers`\n          },\n      ]}\n      active={active}\n    />\n  )\n}\n\nexport default withTranslation()(ScheduleEventTicketTabs)\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport { GET_SCHEDULE_EVENT_TICKET_QUERY } from './queries'\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\nimport ScheduleEventTicketTabs from \"./ScheduleEventTicketTabs\"\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventTicketBack from \"./ScheduleEventTicketBack\"\nimport ScheduleEventEditBaseBase from \"../edit/ScheduleEventEditBaseBase\"\n\n\nfunction ScheduleEventTicketEditBase({t, match, history, activeTab, children, pageHeaderOptions=\"\", searchResults=\"\"}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.tickets.edit\")\n  const activeLink = \"tickets\"\n\n  const eventId = match.params.event_id\n  const ticketId = match.params.id\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  const { loading: loadingTicket, error: errorTicket, data: dataTicket } = useQuery(GET_SCHEDULE_EVENT_TICKET_QUERY, {\n    variables: {\n      id: ticketId\n    }\n  })\n\n  const sidebarContent = <ScheduleEventTicketBack />\n\n  if (loading || loadingTicket) {\n    return (\n      <ScheduleEventEditBaseBase pageHeaderOptions={pageHeaderOptions} sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventTicketTabs active={activeTab} eventId={eventId}  ticketId={ticketId}/>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  if (error || errorTicket) {\n    return (\n      <ScheduleEventEditBaseBase pageHeaderOptions={pageHeaderOptions} sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventTicketTabs active={activeTab} eventId={eventId} ticketId={ticketId}/>\n          <Card.Body>\n            {t(\"schedule.events.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  const event = data.scheduleEvent\n  const ticket = dataTicket.scheduleEventTicket\n  const dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\n  const cardSubTitle = (event) ? \n  <span className=\"text-muted\">\n    - {event.name + \" \" + dateStart}\n  </span> : \"\"\n\n  const cardTicketSubtitle = (ticket) ?\n  <span className=\"text-muted\">\n    - {ticket.name}\n  </span> : \"\"\n\n  return (\n    <ScheduleEventEditBaseBase pageHeaderOptions={pageHeaderOptions} activeLink={activeLink} sidebarContent={sidebarContent}>\n      {searchResults}\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle} {cardSubTitle} {cardTicketSubtitle}</Card.Title>\n        </Card.Header>\n        <ScheduleEventTicketTabs active={activeTab} eventId={eventId} ticketId={ticketId}/>\n        {children}\n      </Card>\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventTicketEditBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SCHEDULE_EVENT_TICKETS_QUERY, GET_SCHEDULE_EVENT_TICKET_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_TICKET_SCHEMA } from './yupSchema'\n\nimport ScheduleEventTicketBack from \"./ScheduleEventTicketBack\"\nimport ScheduleEventTicketEditBase from \"./ScheduleEventTicketEditBase\"\nimport ScheduleEventTicketForm from \"./ScheduleEventTicketForm\"\n\n\nconst UPDATE_SCHEDULE_EVENT_TICKET = gql`\n  mutation UpdateScheduleEventTicket($input:UpdateScheduleEventTicketInput!) {\n    updateScheduleEventTicket(input: $input) {\n      scheduleEventTicket {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventTicketEdit({ t, history, match }) {\n  const id = match.params.id\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/tickets/`\n  const activeTab = \"general\"\n  const activeLink = 'tickets'\n  const sidebarContent = <ScheduleEventTicketBack />\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_TICKET_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [updateScheduleEventTicket] = useMutation(UPDATE_SCHEDULE_EVENT_TICKET)\n\n  if (loading) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventTicketEditBase>\n  )\n  if (error) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventTicketEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const scheduleEventTicket = data.scheduleEventTicket\n\n\n  let initialFinanceTaxRate = \"\"\n  if (scheduleEventTicket.financeTaxRate) {\n    initialFinanceTaxRate = scheduleEventTicket.financeTaxRate.id\n  }\n\n  let initialFinanceGlaccount = \"\"\n  if (scheduleEventTicket.financeGlaccount) {\n    initialFinanceGlaccount = scheduleEventTicket.financeGlaccount.id\n  }\n\n  let initialFinanceCostcenter = \"\"\n  if (scheduleEventTicket.financeCostcenter) {\n    initialFinanceCostcenter = scheduleEventTicket.financeCostcenter.id\n  }\n\n\n  return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          displayPublic: scheduleEventTicket.displayPublic,\n          name: scheduleEventTicket.name,\n          description: scheduleEventTicket.description,\n          price: scheduleEventTicket.price,\n          financeTaxRate: initialFinanceTaxRate,\n          financeGlaccount: initialFinanceGlaccount,\n          financeCostcenter: initialFinanceCostcenter\n        }}\n        validationSchema={SCHEDULE_EVENT_TICKET_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateScheduleEventTicket({ variables: {\n            input: {\n              id: id,\n              displayPublic: values.displayPublic,\n              name: values.name,\n              description: values.description,\n              price: values.price,\n              financeTaxRate: values.financeTaxRate,\n              financeGlaccount: values.financeGlaccount,\n              financeCostcenter: values.financeCostcenter\n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n                scheduleEvent: eventId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('schedule.events.tickets.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventTicketForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            inputData={inputData}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"update\"\n          />\n        )}\n      </Formik>\n    </ScheduleEventTicketEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEMS_QUERY = gql`\nquery ScheduleEventTicketScheduleItem($before:String, $after:String, $scheduleEventTicket:ID!) {\n  scheduleEventTicketScheduleItems(first: 100, before: $before, after: $after, scheduleEventTicket:$scheduleEventTicket) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        scheduleEventTicket {\n          id\n          name\n          fullEvent\n        }\n        scheduleItem {\n          id\n          name\n        }\n        included\n      }\n    }\n  }\n}\n`\n\n// export const GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM_QUERY = gql`\n// query ScheduleEventTicket($before:String, $after:String, $id:ID!) {\n//   scheduleEventTicket(id: $id) {\n//     id\n//     displayPublic\n//     name\n//     description\n//     price\n//     financeTaxRate {\n//       id\n//       name\n//     }\n//     financeGlaccount {\n//       id\n//       name\n//     }\n//     financeCostcenter {\n//       id\n//       name\n//     }\n//   }\n//   financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n//   financeGlaccounts(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n//   financeCostcenters(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n// }\n// `\n\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_TICKET_SCHEDLE_ITEM_SCHEMA = Yup.object().shape({\n  included: Yup.boolean(),\n})","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Dimmer,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\n\nconst ScheduleEventTicketEditActivityForm = ({ t, history, match, disabled, isSubmitting, setSubmitting, submitForm, errors, values, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n    <Dimmer active={isSubmitting} loader={isSubmitting} >\n      <Form.Group className='mb-0'>\n        <Form.Label className=\"custom-switch\">\n          <Field \n            className=\"custom-switch-input\"\n            type=\"checkbox\" \n            name=\"included\" \n            onChange={() => {\n              setFieldValue('included', !values.included)\n              setFieldTouched('included', true)\n              setSubmitting(true)\n              setTimeout(() => {submitForm()}, 200)\n            }}\n            checked={values.included} \n            disabled={disabled} \n          />\n          <span className=\"custom-switch-indicator\" ></span>\n          <span className=\"custom-switch-description\">{t('general.included')}</span>\n        </Form.Label>\n        <ErrorMessage name=\"included\" component=\"div\" />   \n      </Form.Group>  \n    </Dimmer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(ScheduleEventTicketEditActivityForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { v4 } from 'uuid'\n\nimport {\n  Card,\n  Table,\n} from \"tabler-react\";\n\nimport { GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEMS_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_TICKET_SCHEDLE_ITEM_SCHEMA } from \"./yupSchema\"\n\nimport ScheduleEventTicketBack from \"../ScheduleEventTicketBack\"\nimport ScheduleEventTicketEditBase from \"../ScheduleEventTicketEditBase\"\nimport ScheduleEventTicketEditActivityForm from \"./ScheduleEventTicketEditActivityForm\"\n\n\nconst UPDATE_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM = gql`\n  mutation UpdateScheduleEventTicketScheduleItem($input:UpdateScheduleEventTicketScheduleItemInput!) {\n    updateScheduleEventTicketScheduleItem(input: $input) {\n      scheduleEventTicketScheduleItem {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventTicketEditActivities({ t, history, match }) {\n  const id = match.params.id\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/tickets/`\n  const activeTab = \"activities\"\n  const activeLink = 'tickets'\n  const sidebarContent = <ScheduleEventTicketBack />\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEMS_QUERY, {\n    variables: {\n      scheduleEventTicket: id\n    }\n  })\n\n  const [updateScheduleEventTicketScheduleItem] = useMutation(UPDATE_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM)\n\n  if (loading) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventTicketEditBase>\n  )\n  if (error) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventTicketEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const scheduleEventTicketActivities = data.scheduleEventTicketScheduleItems\n  console.log(scheduleEventTicketActivities)\n\n\n  return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Card.Body>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.included')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {scheduleEventTicketActivities.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {node.scheduleItem.name}\n                </Table.Col>  \n                <Table.Col>\n                  <Formik\n                    initialValues={{ \n                      included: node.included,\n                    }}\n                    validationSchema={SCHEDULE_EVENT_TICKET_SCHEDLE_ITEM_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n                      console.log(\"submit values\")\n                      console.log(values)\n\n                      updateScheduleEventTicketScheduleItem({ variables: {\n                        input: {\n                            id: node.id,\n                            included: values.included\n                          }\n                        }, \n                        refetchQueries: [\n                            {query: GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEMS_QUERY, variables: {\n                              scheduleEventTicket: id\n                            }},\n                          ]\n                        })\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.events.tickets.activities.toast_edit_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setSubmitting(false)\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setSubmitting(false)\n                          })\n                    }}\n                    >\n                    {({  isSubmitting, errors, values, setFieldTouched, setFieldValue, submitForm, setSubmitting }) => (\n                      <ScheduleEventTicketEditActivityForm\n                        isSubmitting={isSubmitting}\n                        setFieldTouched={setFieldTouched}\n                        setFieldValue={setFieldValue}\n                        errors={errors}\n                        values={values}\n                        disabled={node.scheduleEventTicket.fullEvent}\n                        setSubmitting={setSubmitting}\n                        submitForm={submitForm}\n                      >\n                        {/* {console.log(errors)}\n                        {console.log(values)} */}\n                      </ScheduleEventTicketEditActivityForm>\n                    )}\n                  </Formik>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Card.Body>\n    </ScheduleEventTicketEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketEditActivities))","import CSLS from \"../../../../../tools/cs_local_storage\"\n\nexport function get_accounts_query_variables() {\n  let queryVars = {\n    teacher: undefined,\n    employee: undefined,\n    searchName: undefined\n  }\n\n  let search = localStorage.getItem(CSLS.SCHEDULE_EVENTS_TICKETS_CUSTOMERS_SEARCH)\n  queryVars.searchName = search\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n// export function get_attendance_list_query_variables(schedule_item_id, date) {\n//   return {\n//     scheduleItem: schedule_item_id,\n//     date: date\n//   }\n// }\n","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport {\n  Badge,\n  Button,\n  Card,\n  Table,\n} from \"tabler-react\";\n\nimport { GET_ACCOUNTS_QUERY } from \"../../../../../queries/accounts/account_search_queries\"\nimport { GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET } from \"./queries\"\n// import { SCHEDULE_EVENT_TICKET_SCHEDLE_ITEM_SCHEMA } from \"./yupSchema\"\nimport { get_accounts_query_variables } from \"./tools\"\n\nimport BadgeBoolean from \"../../../../ui/BadgeBoolean\"\nimport ContentCard from \"../../../../general/ContentCard\"\nimport InputSearch from \"../../../../general/InputSearch\"\nimport ScheduleEventTicketBack from \"../ScheduleEventTicketBack\"\nimport ScheduleEventTicketEditBase from \"../ScheduleEventTicketEditBase\"\n// import ScheduleEventTicketEditActivityForm from \"./ScheduleEventTicketEditActivityForm\"\n\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nconst ADD_ACCOUNT_SCHEDULE_EVENT_TICKET = gql`\nmutation CreateAccountScheduleEventTicket($input:CreateAccountScheduleEventTicketInput!) {\n  createAccountScheduleEventTicket(input: $input) {\n    accountScheduleEventTicket {\n      id\n    }\n  }\n}\n`\n\n\nfunction ScheduleEventTicketEditCustomers({ t, history, match }) {\n  const [showSearch, setShowSearch] = useState(false)\n  const id = match.params.id\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/tickets/`\n  const activeTab = \"customers\"\n  const activeLink = 'tickets'\n  const sidebarContent = <ScheduleEventTicketBack />\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, {\n    variables: {\n      scheduleEventTicket: id\n    }\n  })\n\n  const [addAccountScheduleEventTicket] = useMutation(ADD_ACCOUNT_SCHEDULE_EVENT_TICKET)\n  const [updateAccountScheduleEventTicket] = useMutation(UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET)\n  // const [updateScheduleEventTicketScheduleItem] = useMutation(UPDATE_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM)\n\n\n  const [ getAccounts, \n    { refetch: refetchAccounts, \n      fetchMore: fetchMoreAccounts,\n      loading: queryAccountsLoading, \n      error: queryAccountsError, \n      data: queryAccountsData \n    }] = useLazyQuery( GET_ACCOUNTS_QUERY )\n\n  console.log('queryAccountsData')\n  console.log(queryAccountsData)\n\n  if (loading) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventTicketEditBase>\n  )\n  if (error) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventTicketEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const accountScheduleEventTickets = data.accountScheduleEventTickets\n  console.log(accountScheduleEventTickets)\n\n  let accountIdsWithTickets = []\n  accountScheduleEventTickets.edges.map(({ node }) => (\n    accountIdsWithTickets.push(node.account.id)\n  ))\n  console.log(accountIdsWithTickets)\n\n  const pageHeaderOptions = <InputSearch \n    initialValueKey={CSLS.SCHEDULE_EVENTS_TICKETS_CUSTOMERS_SEARCH}\n    placeholder=\"Search...\"\n    onChange={(value) => {\n      console.log(value)\n      localStorage.setItem(CSLS.SCHEDULE_EVENTS_TICKETS_CUSTOMERS_SEARCH, value)\n      if (value) {\n        // {console.log('showSearch')}\n        // {console.log(showSearch)}\n        setShowSearch(true)\n        getAccounts({ variables: get_accounts_query_variables()})\n      } else {\n        setShowSearch(false)\n      }\n    }}\n  />\n\n  // const searchResults = <div>hello world for search results</div>\n\n  // Search results\n  const searchResults = (showSearch && (queryAccountsData) && (!queryAccountsLoading) && (!queryAccountsError)) ?\n    <ContentCard cardTitle={t('general.search_results')}\n                pageInfo={queryAccountsData.accounts.pageInfo}\n                onLoadMore={() => {\n                  fetchMoreAccounts({\n                    variables: {\n                    after: queryAccountsData.accounts.pageInfo.endCursor\n                  },\n                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                    const newEdges = fetchMoreResult.accounts.edges\n                    const pageInfo = fetchMoreResult.accounts.pageInfo \n\n                    return newEdges.length\n                      ? {\n                          // Put the new accounts at the end of the list and update `pageInfo`\n                          // so we have the new `endCursor` and `hasNextPage` values\n                          queryAccountsData: {\n                            accounts: {\n                              __typename: previousResult.accounts.__typename,\n                              edges: [ ...previousResult.accounts.edges, ...newEdges ],\n                              pageInfo\n                            }\n                          }\n                        }\n                      : previousResult\n                  }\n                })\n              }} >\n      { (!queryAccountsData.accounts.edges.length) ? \n        t('schedule.classes.class.attendance.search_result_empty') : \n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.email')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {queryAccountsData.accounts.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  {node.fullName}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.email}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {(accountIdsWithTickets.includes(node.id)) ? \n                    <span className=\"pull-right\">{t(\"schedule.events.tickets.customers.search_results_already_bought\")}</span> :\n                    <Button \n                      onClick={() =>\n                        addAccountScheduleEventTicket({ variables: {\n                          input: {\n                            account: node.id,\n                            scheduleEventTicket: id\n                          }                            \n                        }, refetchQueries: [\n                            {query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n                              scheduleEventTicket: id\n                            }},\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.events.tickets.customers.toast_add_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setShowSearch(false)\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setShowSearch(false)\n                          })\n                      }\n                    >\n                      {t(\"general.add\")}\n                    </Button>\n                    // <Link to={\"/schedule/classes/class/book/\" + schedule_item_id + \"/\" + class_date + \"/\" + node.id}>\n                    //   <Button color=\"secondary pull-right\">\n                    //     {t('general.checkin')} <Icon name=\"chevron-right\" />\n                    //   </Button>\n                    // </Link>       \n                  }   \n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      }\n    </ContentCard>\n    : \"\"\n\n  // Empty list\n  // if (!accountScheduleEventTickets.edges.length) {\n  //   <ScheduleEventTicketEditBase \n  //     sidebarContent={sidebarContent} \n  //     activeTab={activeTab} \n  //     activeLink={activeLink} \n  //     returnUrl={returnUrl}\n  //     pageHeaderOptions={pageHeaderOptions}\n  //     SearchResults={searchResults}\n  //   >\n  //     <Card.Body>\n  //       <Table>\n  //         <Table.Header>\n  //           <Table.Row>\n  //             <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n  //             <Table.ColHeader>{t('general.included')}</Table.ColHeader>\n  //           </Table.Row>\n  //         </Table.Header>\n  //         <Table.Body>\n  //           {accountScheduleEventTickets.edges.map(({ node }) => (\n  //             <Table.Row key={v4()}>\n  //               <Table.Col>\n  //                 {node.scheduleItem.name}\n  //               </Table.Col>  \n  //             </Table.Row>\n  //           ))}\n  //         </Table.Body>\n  //       </Table>\n  //     </Card.Body>\n  //   </ScheduleEventTicketEditBase>\n  // }\n\n  // Data\n  return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n      pageHeaderOptions={pageHeaderOptions}\n      searchResults={searchResults}\n    >\n      <Card.Body>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.invoice')}</Table.ColHeader>\n              <Table.ColHeader>{t('schedule.events.tickets.info_mail_sent')}</Table.ColHeader> \n              <Table.ColHeader></Table.ColHeader> \n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {accountScheduleEventTickets.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {node.account.fullName} <br />\n                  {(node.cancelled) ? <Badge color=\"warning\">{t(\"general.cancelled\")}</Badge> : \"\"}\n                </Table.Col>  \n                <Table.Col>\n\n                </Table.Col>\n                <Table.Col>\n                  <BadgeBoolean value={node.infoMailSent} /> <br />\n                  {/* TODO: resend link here */}\n                </Table.Col>\n                <Table.Col>\n                  {(node.cancelled) ?\n                    <Button \n                      className=\"pull-right\"\n                      color=\"warning\"\n                      onClick={() =>\n                        updateAccountScheduleEventTicket({ variables: {\n                          input: {\n                            id: node.id,\n                            cancelled: false\n                          }\n                        }, refetchQueries: [\n                            {query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n                              scheduleEventTicket: id\n                            }},\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.events.tickets.customers.uncancelled')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setShowSearch(false)\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setShowSearch(false)\n                          }\n                        )\n                      }\n                    >\n                      {t(\"general.uncancel\")}\n                    </Button>\n                  :\n                    <Button \n                      className=\"pull-right\"\n                      color=\"warning\"\n                      onClick={() =>\n                        updateAccountScheduleEventTicket({ variables: {\n                          input: {\n                            id: node.id,\n                            cancelled: true\n                          }\n                        }, refetchQueries: [\n                            {query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n                              scheduleEventTicket: id\n                            }},\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.events.tickets.customers.cancelled')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setShowSearch(false)\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setShowSearch(false)\n                          })\n                        }\n                      >\n                        {t(\"general.cancel\")}\n                      </Button>\n                  }\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Card.Body>\n    </ScheduleEventTicketEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketEditCustomers))","// @flow\n\nimport * as React from \"react\"\nimport { withTranslation } from 'react-i18next'\nimport { NavLink, withRouter } from \"react-router-dom\"\nimport { useQuery } from \"@apollo/client\"\nimport { ToastContainer, Slide } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport { Link } from 'react-router-dom'\n\nimport CSStandalonePageLoader from \"./ui/CSStandalonePageLoader\"\nimport GET_USER from \"../queries/system/get_user\"\nimport { get_all_permissions, has_permission } from \"../tools/user_tools\"\n\nimport {\n  Site,\n  Nav,\n  Grid,\n  Button,\n  // Page,\n  RouterContextProvider,\n} from \"tabler-react\";\n\nimport type { NotificationProps } from \"tabler-react\";\n\ntype Props = {|\n  +children: React.Node,\n|};\n\ntype State = {|\n  notificationsObjects: Array<NotificationProps>,\n|};\n\ntype subNavItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +LinkComponent?: React.ElementType,\n|};\n\ntype navItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +active?: boolean,\n  +LinkComponent?: React.ElementType,\n  +subItems?: Array<subNavItem>,\n  +useExact?: boolean,\n|};\n\n\nconst getNavBarItems = (t, user) => {\n  let items: Array<navItem> = []\n  let permissions = get_all_permissions(user)\n\n  items.push({\n    value: t(\"home.title\"),\n    to: \"/\",\n    icon: \"home\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  })\n\n  // Relations\n  if (\n    (has_permission(permissions, 'view', 'account'))\n  ){\n    items.push({\n      value: t(\"relations.title\"),\n      to: \"/relations\",\n      icon: \"users\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Schedule\n  if (\n    (has_permission(permissions, 'view', 'scheduleclass'))\n  ){\n    items.push({\n      value: t(\"schedule.title\"),\n      to: \"/schedule\",\n      icon: \"calendar\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Finance\n  if (\n    (has_permission(permissions, 'view', 'financecostcenter')) ||\n    (has_permission(permissions, 'view', 'financeglaccount')) ||\n    (has_permission(permissions, 'view', 'financetaxrate')) \n  ){\n    items.push({\n      value: t(\"finance.title\"),\n      to: \"/finance\",\n      icon: \"dollar-sign\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Organization\n  if (\n    (has_permission(permissions, 'view', 'organizationclasspass')) || \n    (has_permission(permissions, 'view', 'organizationclasstype')) ||\n    (has_permission(permissions, 'view', 'organizationdiscovery')) ||\n    (has_permission(permissions, 'view', 'organizationlocation')) ||\n    (has_permission(permissions, 'view', 'organizationmembership')) \n   ){\n  items.push({\n    value: t(\"organization.title\"),\n    to: \"/organization\",\n    icon: \"feather\",\n    LinkComponent: withRouter(NavLink),\n  })\n}\n\n\n  return items\n\n}\n\nconst now = new Date()\n\n\nfunction SiteWrapperSelfCheckin({t, match, history, children}) {\n  const { error, loading, data, fetchMore } = useQuery(GET_USER)\n\n  if (loading) return <CSStandalonePageLoader />\n  if (error) return <p>{t('system.user.error_loading')}</p>; \n\n  console.log(data)\n\n  return (\n    <Site.Wrapper\n      headerProps={{\n        href: \"/\",\n        alt: \"Costasiella\",\n        imageURL: \"/d/static/logos/stock/logo_stock_backend.png\", // Set logo url here\n        // navItems: (\n        //   <Nav.Item type=\"div\" className=\"d-none d-md-flex\">\n        //     <Link to=\"/settings/general\">\n        //       <Button\n        //         icon=\"settings\"\n        //         outline\n        //         size=\"sm\"\n        //         color=\"primary\"\n        //       >\n        //         {this.props.t('general.settings')}\n        //       </Button>\n        //     </Link>\n        //   </Nav.Item>\n        // ),\n        // notificationsTray: {\n        //   notificationsObjects,\n        //   markAllAsRead: () =>\n        //     this.setState(\n        //       () => ({\n        //         notificationsObjects: this.state.notificationsObjects.map(\n        //           v => ({ ...v, unread: false })\n        //         ),\n        //       }),\n        //       () =>\n        //         setTimeout(\n        //           () =>\n        //             this.setState({\n        //               notificationsObjects: this.state.notificationsObjects.map(\n        //                 v => ({ ...v, unread: true })\n        //               ),\n        //             }),\n        //           5000\n        //         )\n        //     ),\n        //   unread: unreadCount,\n        // },\n        accountDropdown: {\n        avatarURL: \"#\",\n        name: data.user.firstName + ' ' + data.user.lastName,\n        description: \"\",\n        options: [\n          // { icon: \"user\", value: \"Profile\" },\n          { icon: \"lock\", value: \"Change password\", to: \"/#/user/password/change/\" },\n          { isDivider: true },\n          { icon: \"log-out\", value: \"Sign out\", to: \"/#/user/logout/\" },\n        ],\n      },\n      }}\n      // navProps={{ itemsObjects: navBarItems }}\n      // navProps={{ itemsObjects: getNavBarItems(this.props.t, data.user) }}\n      routerContextComponentType={withRouter(RouterContextProvider)}\n      footerProps={{\n        // links: [\n        //   <a href=\"#\">First Link</a>,\n        //   <a href=\"#\">Second Link</a>,\n        //   <a href=\"#\">Third Link</a>,\n        //   <a href=\"#\">Fourth Link</a>,\n        //   <a href=\"#\">Five Link</a>,\n        //   <a href=\"#\">Sixth Link</a>,\n        //   <a href=\"#\">Seventh Link</a>,\n        //   <a href=\"#\">Eigth Link</a>,\n        // ],\n        // note:\n        //   \"Premium and Open Source dashboard template with responsive and high quality UI. For Free!\",\n        copyright: (\n          <React.Fragment>\n            <small>\n              Peacefully powered by\n              <a\n                href=\"https://www.costasiella.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {\" \"}\n                Costasiella\n              </a>{\". \"}\n              All rights reserved © {now.getFullYear()}.\n            </small>\n          </React.Fragment>\n        ),\n        nav: (\n          <React.Fragment>\n            <Grid.Col auto={true}>\n              {/* <List className=\"list-inline list-inline-dots mb-0\">\n                <List.Item className=\"list-inline-item\">\n                  <a href=\"./docs/index.html\">Documentation</a>\n                </List.Item>\n                <List.Item className=\"list-inline-item\">\n                  <a href=\"./faq.html\">FAQ</a>\n                </List.Item>\n              </List> */}\n            </Grid.Col>\n            <Grid.Col auto={true}>\n              {/* <Button\n                href=\"https://github.com/tabler/tabler-react\"\n                size=\"sm\"\n                outline\n                color=\"primary\"\n                RootComponent=\"a\"\n              >\n                Source code\n              </Button> */}\n            </Grid.Col>\n          </React.Fragment>\n        ),\n      }}\n    >\n      {children}\n      <ToastContainer \n        autoClose={5000} \n        transition={Slide}\n      />\n    </Site.Wrapper> \n  )\n}\n\n\n// class SiteWrapperSelfCheckin extends React.Component<Props, State> {\n//   state = {}  \n\n//   render(): React.Node {\n//     return (\n//       <Query query={GET_USER} >\n//         {({ loading, error, data }) => {\n//           if (loading) return <p>{this.props.t('general.loading_with_dots')}</p>;\n//           if (error) return <p>{this.props.t('system.user.error_loading')}</p>; \n          \n//           console.log('user data in site wrapper')\n//           console.log(data)\n      \n//           return <Site.Wrapper\n//             headerProps={{\n//                 href: \"/\",\n//                 alt: \"Costasiella\",\n//                 imageURL: \"/d/static/logos/stock/logo_stock_backend.png\", // Set logo url here\n//                 // navItems: (\n//                 //   <Nav.Item type=\"div\" className=\"d-none d-md-flex\">\n//                 //     <Link to=\"/settings/general\">\n//                 //       <Button\n//                 //         icon=\"settings\"\n//                 //         outline\n//                 //         size=\"sm\"\n//                 //         color=\"primary\"\n//                 //       >\n//                 //         {this.props.t('general.settings')}\n//                 //       </Button>\n//                 //     </Link>\n//                 //   </Nav.Item>\n//                 // ),\n//                 // notificationsTray: {\n//                 //   notificationsObjects,\n//                 //   markAllAsRead: () =>\n//                 //     this.setState(\n//                 //       () => ({\n//                 //         notificationsObjects: this.state.notificationsObjects.map(\n//                 //           v => ({ ...v, unread: false })\n//                 //         ),\n//                 //       }),\n//                 //       () =>\n//                 //         setTimeout(\n//                 //           () =>\n//                 //             this.setState({\n//                 //               notificationsObjects: this.state.notificationsObjects.map(\n//                 //                 v => ({ ...v, unread: true })\n//                 //               ),\n//                 //             }),\n//                 //           5000\n//                 //         )\n//                 //     ),\n//                 //   unread: unreadCount,\n//                 // },\n//                 accountDropdown: {\n//                 avatarURL: \"#\",\n//                 name: data.user.firstName + ' ' + data.user.lastName,\n//                 description: \"\",\n//                 options: [\n//                   // { icon: \"user\", value: \"Profile\" },\n//                   { icon: \"lock\", value: \"Change password\", to: \"/#/user/password/change/\" },\n//                   { isDivider: true },\n//                   { icon: \"log-out\", value: \"Sign out\", to: \"/#/user/logout/\" },\n//                 ],\n//               },\n//               }}\n//               // navProps={{ itemsObjects: navBarItems }}\n//               // navProps={{ itemsObjects: getNavBarItems(this.props.t, data.user) }}\n//               routerContextComponentType={withRouter(RouterContextProvider)}\n//               footerProps={{\n//                 // links: [\n//                 //   <a href=\"#\">First Link</a>,\n//                 //   <a href=\"#\">Second Link</a>,\n//                 //   <a href=\"#\">Third Link</a>,\n//                 //   <a href=\"#\">Fourth Link</a>,\n//                 //   <a href=\"#\">Five Link</a>,\n//                 //   <a href=\"#\">Sixth Link</a>,\n//                 //   <a href=\"#\">Seventh Link</a>,\n//                 //   <a href=\"#\">Eigth Link</a>,\n//                 // ],\n//                 // note:\n//                 //   \"Premium and Open Source dashboard template with responsive and high quality UI. For Free!\",\n//                 copyright: (\n//                   <React.Fragment>\n//                     Copyleft © {now.getFullYear()}.\n//                     <a\n//                       href=\"https://www.costasiella.com\"\n//                       target=\"_blank\"\n//                       rel=\"noopener noreferrer\"\n//                     >\n//                       {\" \"}\n//                       Edwin van de Ven\n//                     </a>{\". \"}\n//                     All rights reserved.\n//                   </React.Fragment>\n//                 ),\n//                 nav: (\n//                   <React.Fragment>\n//                     <Grid.Col auto={true}>\n//                       {/* <List className=\"list-inline list-inline-dots mb-0\">\n//                         <List.Item className=\"list-inline-item\">\n//                           <a href=\"./docs/index.html\">Documentation</a>\n//                         </List.Item>\n//                         <List.Item className=\"list-inline-item\">\n//                           <a href=\"./faq.html\">FAQ</a>\n//                         </List.Item>\n//                       </List> */}\n//                     </Grid.Col>\n//                     <Grid.Col auto={true}>\n//                       {/* <Button\n//                         href=\"https://github.com/tabler/tabler-react\"\n//                         size=\"sm\"\n//                         outline\n//                         color=\"primary\"\n//                         RootComponent=\"a\"\n//                       >\n//                         Source code\n//                       </Button> */}\n//                     </Grid.Col>\n//                   </React.Fragment>\n//                 ),\n//               }}\n//             >\n//               {this.props.children}\n//               <ToastContainer \n//                 autoClose={5000} \n//                 transition={Slide}\n//               />\n//             </Site.Wrapper>\n//           }}\n//         </Query>\n//     );\n//   }\n// }\n\nexport default withTranslation()(SiteWrapperSelfCheckin)\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapperSelfCheckin from \"../SiteWrapperSelfCheckin\"\n\n\nfunction SelfCheckinBase({ t, match, history, children, title, subTitle=\"\" }) {\n\n  return (\n    <SiteWrapperSelfCheckin>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={title} subTitle={subTitle} />\n            <Grid.Row>\n              <Grid.Col md={12}>\n                { children }\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapperSelfCheckin>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SelfCheckinBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNTS_QUERY = gql`\n  query Accounts(\n    $after: String, \n    $before: String, \n    $searchName: String,\n    $teacher: Boolean,\n    $employee: Boolean\n  ) {\n    accounts(\n      first: 25, \n      before: $before, \n      after: $after, \n      isActive: true, \n      fullName_Icontains: $searchName,\n      customer: true,\n      teacher: $teacher,\n      employee: $employee\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          fullName\n          email\n          isActive\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_SCHEDULE_CLASS_ATTENDANCE_QUERY = gql`\n  query ScheduleItemAttendances($after: String, $before: String, $scheduleItem: ID!, $date: Date!) {\n    scheduleItemAttendances(first: 100, before: $before, after: $after, scheduleItem: $scheduleItem, date: $date) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }     \n          attendanceType\n          bookingStatus\n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const DELETE_SCHEDULE_CLASS_ATTENDANCE = gql`\n  mutation DeleteScheduleItemAttendance($input: DeleteScheduleItemAttendanceInput!) {\n    deleteScheduleItemAttendance(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const UPDATE_SCHEDULE_ITEM_ATTENDANCE = gql`\n  mutation UpdateScheduleItemAttendance($input: UpdateScheduleItemAttendanceInput!) {\n    updateScheduleItemAttendance(input:$input) {\n      scheduleItemAttendance {\n        id\n      }\n    }\n  }\n`\n","import CSLS from \"../../../tools/cs_local_storage\"\nimport moment from 'moment'\n\nexport function get_accounts_query_variables() {\n  let queryVars = {\n    teacher: undefined,\n    employee: undefined,\n    searchName: undefined\n  }\n\n  let search = localStorage.getItem(CSLS.SELFCHECKIN_CHECKIN_SEARCH)\n  queryVars.searchName = search\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\nexport function get_attendance_list_query_variables(schedule_item_id, date) {\n  return {\n    scheduleItem: schedule_item_id,\n    date: date\n  }\n}\n\nexport function getSubtitle(classDate, scheduleItem, dateTimeFormat) {\n  return <span>\n    {scheduleItem.organizationLocationRoom.organizationLocation.name} { \" - \" }\n    {moment(classDate + \" \" +  scheduleItem.timeStart).format(dateTimeFormat)} { \" \" } \n    {scheduleItem.organizationClasstype.name} { \" \" }\n  </span> \n}\n","// @flow\n\nimport React, { useContext, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\n\nimport moment from 'moment'\n\nimport {\n  Button,\n  Card,\n  Dropdown,\n  Icon,\n  Table\n} from \"tabler-react\";\nimport SelfCheckinBase from \"../SelfCheckinBase\"\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { GET_ACCOUNTS_QUERY, GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, UPDATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport { get_attendance_list_query_variables, get_accounts_query_variables, getSubtitle } from \"./tools\"\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport BadgeBookingStatus from \"../../ui/BadgeBookingStatus\"\nimport ContentCard from \"../../general/ContentCard\"\nimport InputSearch from \"../../general/InputSearch\"\nimport ScheduleClassAttendanceDelete from \"../../schedule/classes/class/attendance/ScheduleClassAttendanceDelete\"\n\n\nfunction setAttendanceStatus({t, updateAttendance, node, status}) {\n  updateAttendance({\n    variables: { \n      input: {\n        id: node.id, \n        bookingStatus: status\n      }\n    }\n  }).then(({ data }) => {\n    console.log('got data', data);\n    toast.success(\n      t('schedule.classes.class.attendance.status_saved'), {\n        position: toast.POSITION.BOTTOM_RIGHT\n      })\n  }).catch((error) => {\n    toast.error((t('general.toast_server_error')) +  error, {\n        position: toast.POSITION.BOTTOM_RIGHT\n      })\n    console.log('there was an error sending the query', error);\n  })\n}\n\n\nfunction SelfCheckinCheckin({ t, match, history }) {\n  const [showSearch, setShowSearch] = useState(false)\n  const locationId = match.params.location_id\n  const scheduleItemId = match.params.class_id\n  const class_date = match.params.date\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + \" \" + timeFormat\n\n  const { \n    refetch: refetchAttendance, \n    loading: queryAttendanceLoading, \n    error: queryAttendanceError, \n    data: queryAttendanceData \n  } = useQuery(\n    GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, {\n      variables: get_attendance_list_query_variables(scheduleItemId, class_date)\n    }\n  )\n\n  const [ updateAttendance, \n    { loading: mutationAttendanceLoading, error: mutationAttendanceError },\n  ] = useMutation(UPDATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  const [ getAccounts, \n    { refetch: refetchAccounts, \n      fetchMore: fetchMoreAccounts,\n      loading: queryAccountsLoading, \n      error: queryAccountsError, \n      data: queryAccountsData \n    }] = useLazyQuery( GET_ACCOUNTS_QUERY )\n\n  console.log('queryAccountsData')\n  console.log(queryAccountsData)\n\n  if (queryAttendanceLoading) return (\n    <SelfCheckinBase>\n      {t(\"general.loading_with_dots\")}\n    </SelfCheckinBase>\n  )\n  if (queryAttendanceError) return (\n    <SelfCheckinBase>\n      {t(\"selfcheckin.checkin.error_loading\")}\n    </SelfCheckinBase>\n  )\n\n  console.log(queryAttendanceData)\n  let checkedInIds = []\n  queryAttendanceData.scheduleItemAttendances.edges.map(({ node }) => (\n    checkedInIds.push(node.account.id)\n  ))\n  console.log(checkedInIds)\n  const scheduleItem = queryAttendanceData.scheduleItem\n\n  const subTitle = getSubtitle(\n    class_date,\n    scheduleItem,\n    dateTimeFormat\n  )\n\n  return (\n    <SelfCheckinBase title={t(\"selfcheckin.classes.title\")} subTitle={subTitle}>\n      <ContentCard cardTitle={t('general.attendance')}\n                    pageInfo={queryAttendanceData.scheduleItemAttendances.pageInfo}\n                    onLoadMore={() => {\n                      fetchMoreAccounts({\n                      variables: {\n                        after: queryAttendanceData.scheduleItemAttendances.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.scheduleItemAttendances.edges\n                        const pageInfo = fetchMoreResult.scheduleItemAttendances.pageInfo \n\n                        return newEdges.length\n                          ? {\n                              // Put the new scheduleItemAttendances at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              queryAttendanceData: {\n                                scheduleItemAttendances: {\n                                  __typename: previousResult.scheduleItemAttendances.__typename,\n                                  edges: [ ...previousResult.scheduleItemAttendances.edges, ...newEdges ],\n                                  pageInfo\n                                }\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n        }} >\n          <Table>\n            <Table.Header>\n              <Table.Row key={v4()}>\n                <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.booking_status')}</Table.ColHeader>\n                <Table.ColHeader></Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {queryAttendanceData.scheduleItemAttendances.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      {node.account.fullName}\n                    </Table.Col>\n                    <Table.Col>\n                      <BadgeBookingStatus status={node.bookingStatus} />\n                    </Table.Col>\n                    <Table.Col>\n                      {/* Delete */}\n                      {/* <ScheduleClassAttendanceDelete node={node} /> */}\n                      {/* Status dropdown */}\n                      <Dropdown\n                        key={v4()}\n                        className=\"pull-right\"\n                        type=\"button\"\n                        toggle\n                        color=\"secondary\"\n                        triggerContent={t(\"general.status\")}\n                        items={[\n                          <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                            <Dropdown.Item\n                              key={v4()}\n                              icon=\"check\"\n                              onClick={() => {\n                                setAttendanceStatus({\n                                  t: t, \n                                  updateAttendance: updateAttendance,\n                                  node: node,\n                                  status: 'ATTENDING'\n                                })\n                                refetchAttendance()\n                              }}>\n                                {t('schedule.classes.class.attendance.booking_status.ATTENDING')}\n                            </Dropdown.Item>\n                          </HasPermissionWrapper>,\n                          <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                            <Dropdown.Item\n                              key={v4()}\n                              icon=\"calendar\"\n                              onClick={() => {\n                                setAttendanceStatus({\n                                  t: t, \n                                  updateAttendance: updateAttendance,\n                                  node: node,\n                                  status: 'BOOKED'\n                                })\n                                refetchAttendance()\n                              }}>\n                                {t('schedule.classes.class.attendance.booking_status.BOOKED')}\n                            </Dropdown.Item>\n                          </HasPermissionWrapper>,\n                          <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                            <Dropdown.Item\n                              key={v4()}\n                              icon=\"x\"\n                              onClick={() => {\n                                setAttendanceStatus({\n                                  t: t, \n                                  updateAttendance: updateAttendance,\n                                  node: node,\n                                  status: 'CANCELLED'\n                                })\n                                refetchAttendance()\n                              }}>\n                                {t('schedule.classes.class.attendance.booking_status.CANCELLED')}\n                            </Dropdown.Item>\n                          </HasPermissionWrapper>,\n                        ]}\n                      />\n                      {(node.bookingStatus == \"BOOKED\") ?\n                        <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                          <Button\n                            key={v4()}\n                            className=\"pull-right\"\n                            color=\"success\"\n                            size=\"\"\n                            onClick={() => {\n                              setAttendanceStatus({\n                                t: t, \n                                updateAttendance: updateAttendance,\n                                node: node,\n                                status: 'ATTENDING'\n                              })\n                              refetchAttendance()\n                            }}>\n                              {t('general.checkin')}\n                          </Button>\n                        </HasPermissionWrapper>  : \"\" }\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n            </Table.Body>\n          </Table>\n      </ContentCard>\n      <h3>{t(\"selfcheckin.checkin.title_not_on_list\")}</h3>\n      <InputSearch \n        initialValueKey={CSLS.SELFCHECKIN_CHECKIN_SEARCH}\n        placeholder={t(\"search\")}\n        onChange={(value) => {\n          console.log(value)\n          localStorage.setItem(CSLS.SELFCHECKIN_CHECKIN_SEARCH, value)\n          if (value) {\n            // {console.log('showSearch')}\n            // {console.log(showSearch)}\n            setShowSearch(true)\n            getAccounts({ variables: get_accounts_query_variables()})\n          } else {\n            setShowSearch(false)\n          }\n        }}\n      /> <br />\n      {/* Search results */}\n      {(showSearch && (queryAccountsData) && (!queryAccountsLoading) && (!queryAccountsError)) ?\n        <ContentCard cardTitle={t('general.search_results')}\n                    pageInfo={queryAccountsData.accounts.pageInfo}\n                    onLoadMore={() => {\n                      fetchMoreAccounts({\n                        variables: {\n                        after: queryAccountsData.accounts.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.accounts.edges\n                        const pageInfo = fetchMoreResult.accounts.pageInfo \n\n                        return newEdges.length\n                          ? {\n                              // Put the new accounts at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              queryAccountsData: {\n                                accounts: {\n                                  __typename: previousResult.accounts.__typename,\n                                  edges: [ ...previousResult.accounts.edges, ...newEdges ],\n                                  pageInfo\n                                }\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n          { (!queryAccountsData.accounts.edges.length) ? \n            t('schedule.classes.class.attendance.search_result_empty') : \n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.email')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {queryAccountsData.accounts.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {node.fullName}\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.email}\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {(checkedInIds.includes(node.id)) ? \n                        <span className=\"pull-right\">{t(\"schedule.classes.class.attendance.search_results_already_checked_in\")}</span> :\n                        <Link to={\"/selfcheckin/book/\" + locationId + \"/\" + scheduleItemId + \"/\" + class_date + \"/\" + node.id}>\n                          <Button color=\"secondary pull-right\">\n                            {t('general.checkin')} <Icon name=\"chevron-right\" />\n                          </Button>\n                        </Link>       \n                      }   \n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          }\n        </ContentCard>\n        : \"\"\n      }\n    </SelfCheckinBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SelfCheckinCheckin))\n\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_BOOKING_OPTIONS_QUERY = gql`\n  query ScheduleClassBookingOptions($account: ID!, $scheduleItem:ID!, $date:Date!, $listType:String!) {\n    scheduleClassBookingOptions(account: $account, scheduleItem: $scheduleItem, date:$date, listType:$listType) {\n      date\n      account {\n        id\n        fullName\n      }\n      scheduleItem {\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n      }\n    \tscheduleItemPrices {\n        organizationClasspassDropin {\n          id\n          name\n          priceDisplay\n        }\n        organizationClasspassTrial {\n          id\n          name\n          priceDisplay\n        }\n      }\n      classpasses {\n        bookingType \n        allowed\n        accountClasspass {\n          id\n          dateStart\n          dateEnd\n          classesRemainingDisplay\n          organizationClasspass {\n            id\n            name\n          }\n        }\n      }\n      subscriptions {\n        bookingType\n        allowed\n        accountSubscription {\n          id\n          dateStart\n          dateEnd\n          organizationSubscription {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport const CREATE_SCHEDULE_ITEM_ATTENDANCE = gql`\n  mutation CreateScheduleItemAttendance($input: CreateScheduleItemAttendanceInput!) {\n    createScheduleItemAttendance(input:$input) {\n      scheduleItemAttendance {\n        id\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext, useState } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Grid,\n} from \"tabler-react\";\nimport SelfCheckinBase from \"../SelfCheckinBase\"\n// import HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../tools/date_tools'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport { get_accounts_query_variables } from \"../../schedule/classes/class/tools\"\nimport { getSubtitle } from \"../Checkin/tools\"\n\nimport ScheduleClassBookClasspasses from \"../../schedule/classes/class/book/ScheduleClassBookClasspasses\"\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport ScheduleClassBookSubscriptions from \"../../schedule/classes/class/book/ScheduleClassBookSubscriptions\"\nimport ScheduleClassBookPriceDropin from \"../../schedule/classes/class/book/ScheduleClassBookPriceDropin\"\nimport ScheduleClassBookPriceTrial from \"../../schedule/classes/class/book/ScheduleClassBookPriceTrial\"\n\nimport { GET_BOOKING_OPTIONS_QUERY } from \"./queries\"\n\n\nfunction SelfCheckinBookingOptions({ t, match, history }) {\n  const [showSearch, setShowSearch] = useState(false)\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + \" \" + timeFormat\n\n  const return_url = \"/schedule/classes/\"\n  const account_id = match.params.account_id\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const locationId = match.params.location_id\n  const { loading: queryLoading, error: queryError, data: queryData } = useQuery(\n    GET_BOOKING_OPTIONS_QUERY, {\n      variables: {\n        account: account_id,\n        scheduleItem: schedule_item_id,\n        date: class_date,\n        listType: \"ATTEND\"\n      }\n    }\n  )\n\n  // Remove search in checkin component\n  localStorage.removeItem(CSLS.SELFCHECKIN_CHECKIN_SEARCH)\n\n  // Query\n  // Loading\n  if (queryLoading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (queryError) {\n    console.log(queryError)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n  \n  console.log(queryData)\n  const account = queryData.scheduleClassBookingOptions.account\n  const classpasses = queryData.scheduleClassBookingOptions.classpasses\n  const subscriptions = queryData.scheduleClassBookingOptions.subscriptions\n  const prices = queryData.scheduleClassBookingOptions.scheduleItemPrices\n  const scheduleItem = queryData.scheduleClassBookingOptions.scheduleItem\n  console.log(prices)\n  \n  const subTitle = getSubtitle(\n    class_date,\n    scheduleItem,\n    dateTimeFormat\n  )\n  \n  return (\n    <SelfCheckinBase title={t(\"selfcheckin.classes.title\")} subTitle={subTitle}>\n      <Grid.Row>\n          <Grid.Col md={12}>\n            <h4>{t('general.booking_options')} {account.fullName}</h4>\n            <div className=\"mt-6\">\n            <Grid.Row cards deck>\n              <ScheduleClassBookSubscriptions \n                subscriptions={subscriptions} \n                returnTo=\"selfcheckin\" \n                locationId={locationId}\n              />\n              <ScheduleClassBookClasspasses \n                classpasses={classpasses} \n                returnTo=\"selfcheckin\" \n                locationId={locationId}\n              />\n              {(prices) ?\n                (prices.organizationClasspassDropin) ? \n                  <ScheduleClassBookPriceDropin \n                    priceDropin={prices.organizationClasspassDropin}\n                    returnTo=\"selfcheckin\" \n                    locationId={locationId}\n                  /> : \"\" \n                : \"\" }\n              {(prices) ?\n                (prices.organizationClasspassTrial) ? \n                  <ScheduleClassBookPriceTrial \n                    priceTrial={prices.organizationClasspassTrial}\n                    returnTo=\"selfcheckin\" \n                    locationId={locationId}\n                  /> : \"\" \n                : \"\" }\n            </Grid.Row>\n            </div>\n          </Grid.Col>\n        </Grid.Row>\n    </SelfCheckinBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SelfCheckinBookingOptions))\n\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ORGANIZATION_LOCATIONS_QUERY = gql`\n  query Organizationlocations($after: String, $before: String) {\n    organizationLocations(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          name\n          organizationlocationroomSet(first: 100, archived: false) {\n            edges {\n              node {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\";\nimport SelfCheckinBase from \"../SelfCheckinBase\"\n\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { GET_ORGANIZATION_LOCATIONS_QUERY } from \"./queries\"\n\n\nfunction Locations({ t, match, history }) {\n  const { loading, error, data } = useQuery(GET_ORGANIZATION_LOCATIONS_QUERY);\n\n  if (loading) return (\n    <SelfCheckinBase>\n      {t(\"general.loading_with_dots\")}\n    </SelfCheckinBase>\n  )\n  if (error) return (\n    <SelfCheckinBase>\n      {t(\"selfcheckin.locations.error_loading\")}\n    </SelfCheckinBase>\n  )\n\n\n  return (\n    <SelfCheckinBase title={t(\"selfcheckin.home.title\")}>\n      <h4>{t(\"selfcheckin.locations.please_select\")}</h4>\n        <List.Group>\n          {\n            data.organizationLocations.edges.map(({node}) =>\n              <List.GroupItem action>\n                <Link to={\"/selfcheckin/location/\" + node.id}>\n                  <div>\n                    <span className=\"pull-right\"><Icon name=\"chevron-right\" /></span>\n                    {node.name}\n                  </div>\n                </Link>\n              </List.GroupItem>\n          )}\n        </List.Group>\n\n          {/* //  List location rooms\n          // <div>\n          //   <h3>{node.name}</h3>\n          //   <List.Group>\n          //     {\n          //       node.organizationlocationroomSet.edges.map(({node}) =>\n          //         <List.GroupItem action>\n          //           <Link to={\"/selfcheckin/room/\" + node.id}>\n          //             <div>\n          //               <span className=\"pull-right\"><Icon name=\"chevron-right\" /></span>\n          //               {node.name}\n          //             </div>\n          //           </Link>\n          //         </List.GroupItem>\n          //       )\n          //     }\n          //   </List.Group>\n          //   <br />\n          // </div>\n        // ) */}\n      \n    </SelfCheckinBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(Locations))","import { gql } from \"@apollo/client\"\n\nexport const GET_LOCATION_CLASSES_QUERY = gql`\n  query ScheduleClasses(\n      $dateFrom: Date!, \n      $dateUntil:Date!, \n      $orderBy: String, \n      $organizationClasstype: ID,\n      $organizationLevel: ID,\n      $organizationLocation: ID!,\n      $attendanceCountType: String!\n    ){\n    scheduleClasses(\n        dateFrom:$dateFrom, \n        dateUntil: $dateUntil, \n        orderBy: $orderBy, \n        organizationClasstype: $organizationClasstype,\n        organizationLevel: $organizationLevel,\n        organizationLocation: $organizationLocation,\n        attendanceCountType: $attendanceCountType\n    ){\n      date\n      classes {\n        scheduleItemId\n        frequencyType\n        date\n        status\n        description\n        account {\n          id\n          fullName\n        }\n        role\n        account2 {\n          id\n          fullName\n        }\n        role2\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        timeStart\n        timeEnd\n        displayPublic\n      }\n    }\n    organizationLocation(id: $organizationLocation) {\n      id\n      name\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport moment from 'moment'\n\nimport {\n  Button,\n  Card,\n  Icon,\n  Table\n} from \"tabler-react\";\nimport SelfCheckinBase from \"../SelfCheckinBase\"\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { GET_LOCATION_CLASSES_QUERY } from \"./queries\"\n\n\nfunction LocationClasses({ t, match, history }) {\n  const locationId = match.params.location_id\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const today = moment().format('YYYY-MM-DD')\n\n  const { loading, error, data } = useQuery(GET_LOCATION_CLASSES_QUERY, {\n    variables: {\n      dateFrom: today,\n      dateUntil: today,\n      organizationLocation: locationId,\n      attendanceCountType: \"ATTENDING_AND_BOOKED\"\n    }\n  })\n\n  if (loading) return (\n    <SelfCheckinBase>\n      {t(\"general.loading_with_dots\")}\n    </SelfCheckinBase>\n  )\n  if (error) return (\n    <SelfCheckinBase>\n      {t(\"selfcheckin.classes.error_loading\")}\n    </SelfCheckinBase>\n  )\n\n  console.log(data)\n  const subTitle = data.organizationLocation.name\n\n  return (\n    <SelfCheckinBase title={t(\"selfcheckin.classes.title\")} subTitle={subTitle}>\n      <Card>\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.ColHeader>\n              { t(\"general.time\") }\n            </Table.ColHeader>\n            <Table.ColHeader>\n              { t(\"general.room\") }\n            </Table.ColHeader>\n            <Table.ColHeader>\n              { t(\"general.class\") }\n            </Table.ColHeader>\n            <Table.ColHeader>\n              { t(\"general.teacher\") }\n            </Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {\n            data.scheduleClasses.map(({ date, classes }) => \n              classes.map((\n                { scheduleItemId, \n                  frequencyType,\n                  date, \n                  status,\n                  description,\n                  account, \n                  role,\n                  account2,\n                  role2,\n                  organizationLocationRoom, \n                  organizationClasstype, \n                  organizationLevel,\n                  timeStart, \n                  timeEnd,\n                  displayPublic }) => (\n                    // console.log(scheduleItemId)\n                    <Table.Row>\n                      <Table.Col>\n                        {moment(date + ' ' + timeStart).format(timeFormat)} {' - '}\n                        {moment(date + ' ' + timeEnd).format(timeFormat)}\n                      </Table.Col>\n                      <Table.Col>\n                        { organizationLocationRoom.name }\n                      </Table.Col>\n                      <Table.Col>\n                        { organizationClasstype.name }\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Teacher(s) */}\n                        { (account) ? account.fullName : \n                          <span className=\"text-red\">{t(\"schedule.classes.no_teacher\")}</span>\n                        }\n                      </Table.Col>\n                      <Table.Col>\n                        <Link to={\"/selfcheckin/checkin/\" + locationId + \"/\" + scheduleItemId + \"/\" + date}>\n                          <Button color=\"secondary\" className=\"pull-right\">\n                            {t(\"selfcheckin.classes.go_to_checkin\")}\n                            <Icon name=\"chevron-right\" />\n                          </Button>\n                        </Link>\n                      </Table.Col>\n                    </Table.Row>\n                  )\n                )\n            )\n          }\n        </Table.Body>\n      </Table>\n      </Card>\n    </SelfCheckinBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(LocationClasses))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SYSTEM_SETTINGS_QUERY = gql`\n  query SystemSettings($setting: String!) {\n    systemSettings(setting: $setting) {\n      edges {\n        node {\n          id\n          setting\n          value\n        }\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_SYSTEM_SETTING = gql`\n  mutation UpdateSystemSetting($input: UpdateSystemSettingInput!) {\n    updateSystemSetting(input: $input) {\n      systemSetting {\n        id\n      }\n    }\n  }\n`","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport ButtonBack from \"../ui/ButtonBack\"\n\n\nfunction SettingsBack({ t, returnUrl=\"/settings\" }) { \n  return (\n    <ButtonBack returnUrl={returnUrl} />\n  )\n}\n\nexport default withTranslation()(SettingsBack)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../SiteWrapper\"\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\nimport SettingsBack from \"./SettingsBack\"\n\n\nfunction SettingsBase({ t, children, headerSubTitle=\"\", cardTitle, alertBanner=\"\", returnUrl=\"/settings\" }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('settings.title')} subTitle={headerSubTitle}>\n            <div className=\"page-options d-flex\">\n              <SettingsBack returnUrl={returnUrl} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {alertBanner}\n              <Card>\n                <Card.Header>\n                  <Card.Title>{cardTitle}</Card.Title>\n                </Card.Header>\n                {children}\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsBase))","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_SYSTEM_SETTINGS_QUERY } from '../queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../SettingsBase\"\n\n\nfunction SettingsAbout({ t, match, history }) {\n  const headerSubTitle = t('settings.about.title')\n  const cardTitle = t(\"settings.about.about.title\")\n\n  const { \n    loading: loadingVersion, \n    error: errorVersion, \n    data: dataVersion \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"system_version\"\n    }\n  })\n  const { \n    loading: loadingPatch, \n    error: errorPatch, \n    data: dataPatch \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"system_version_patch\"\n    }\n  })\n\n  if ((loadingVersion) || (loadingPatch)) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle} >  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if ((errorVersion) || errorPatch) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle} >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data app settings')\n  console.log(dataVersion)\n  console.log(dataPatch)\n\n  let version = 0\n  let patch = 0\n  if (dataVersion.systemSettings.edges.length){\n    version = dataVersion.systemSettings.edges[0].node.value\n  } \n  if (dataPatch.systemSettings.edges.length){\n    patch = dataPatch.systemSettings.edges[0].node.value\n  } \n    \n\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n    >\n      <Card.Body>\n        <h2>\n          {t(\"settings.about.about.this_is_costasiella\")} {`${version}.${patch}`}\n        </h2>\n        <h3>{t(\"general.license_info\")}</h3>\n        {t(\"settings.about.about.license_version\")} <br /><br />\n        <h3>{t(\"general.license\")}</h3>\nThis program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. <br /><br />\nThis program is distributed in the hope that it will be useful, but <b>WITHOUT ANY WARRANTY</b>; without even the implied warranty of <b>MERCHANTABILITY</b> or <b>FITNESS FOR A PARTICULAR PURPOSE</b>. See the GNU General Public License for more details. <br /><br />\nYou should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. <br />\n<br />\nGNU GENERAL PUBLIC LICENSE<br />\n<br />\nVersion 2, June 1991<br />\n<br />\nCopyright (C) 1989, 1991 Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA<br />\n<br />\nEveryone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. <br />\n<br />\nPreamble<br />\n<br />\nThe licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.) You can apply it to your programs, too.<br />\n<br />\nWhen we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.<br /><br />\n<br />\nTo protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.<br />\n<br />\nFor example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.<br />\n<br />\nWe protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.<br />\n<br />\nAlso, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations.<br />\n<br />\nFinally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all.<br />\n<br />\nThe precise terms and conditions for copying, distribution and modification follow.<br />\n<br />\nTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION<br />\n<br />\n0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The \"Program\", below, refers to any such program or work, and a \"work based on the Program\" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) Each licensee is addressed as \"you\".<br />\n<br />\nActivities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.<br />\n<br />\n1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.<br />\n<br />\nYou may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.<br />\n<br />\n2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:<br />\n<br />\na) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change. b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License. c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.) These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.<br />\n<br />\nThus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.<br />\n<br />\nIn addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.<br />\n<br />\n3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:<br />\n<br />\na) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.) The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.<br />\n<br />\nIf distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.<br />\n<br />\n4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.<br />\n<br />\n5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.<br />\n<br />\n6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.<br />\n<br />\n7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.<br />\n<br />\nIf any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.<br />\n<br />\nIt is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.<br />\n<br />\nThis section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.<br />\n<br />\n8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.<br />\n<br />\n9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.<br />\n<br />\nEach version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.<br />\n<br />\n10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.<br />\n<br />\nNO WARRANTY<br />\n<br />\n11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.<br />\n<br />\n12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.<br />\n<br />\nEND OF TERMS AND CONDITIONS<br />\n<br />\nHow to Apply These Terms to Your New Programs<br />\n<br />\nIf you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.<br />\n<br />\nTo do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.<br />\n<br />\none line to give the program's name and an idea of what it does. Copyright (C) yyyy name of author<br />\n<br />\nThis program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.<br />\n<br />\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.<br />\n<br />\nYou should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. Also add information on how to contact you by electronic and paper mail.<br />\n<br />\nIf the program is interactive, make it output a short notice like this when it starts in an interactive mode:<br />\n<br />\nGnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, the commands you use may be called something other than `show w' and `show c'; they could even be mouse-clicks or menu items--whatever suits your program.<br />\n<br />\nYou should also get your employer (if you work as a programmer) or your school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. Here is a sample; alter the names:<br />\n<br />\nYoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.<br />\n<br />\nsignature of Ty Coon, 1 April 1989 Ty Coon, President of Vice\n      </Card.Body>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsAbout))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsFinanceBankAccountsForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n        <Form.Group>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"finance_bank_accounts_iban\" \n                checked={values.finance_bank_accounts_iban}\n              />\n                <span className=\"custom-switch-indicator\" ></span>\n                <span className=\"custom-switch-description\">{t('settings.finance.bank_accounts.iban')}</span>\n            </Form.Label>\n          <ErrorMessage name=\"finance_bank_accounts_iban\" component=\"div\" />   \n        </Form.Group>  \n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsFinanceBankAccountsForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsFinanceBankAccountsForm from \"./SettingsFinanceBankAccountsForm\"\n\n\nfunction SettingsFinanceIBAN({ t, match, history }) {\n  const headerSubTitle = t('settings.finance.title')\n  const cardTitle = t(\"settings.finance.bank_accounts.title\")\n\n  const { \n    loading: loading, \n    error: error, \n    data: data \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"finance_bank_accounts_iban\"\n    },\n    // fetchPolicy: \"network-only\"\n  })\n  const [ updateSettings ] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  if (loading) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >\n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data app settings')\n  console.log(data)\n\n  let initialValues = {\n    iban: false\n  }\n  if (data.systemSettings.edges.length){\n    initialValues['iban'] = (data.systemSettings.edges[0].node.value.toLowerCase() === 'true')\n  } \n    \n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n    >  \n    <Formik\n      initialValues={{ \n        finance_bank_accounts_iban: initialValues['iban'],\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          const settings = [\n            { setting: \"finance_bank_accounts_iban\", value: values.finance_bank_accounts_iban },\n          ]\n\n          let error = false\n\n          for (let i in settings) {\n\n            console.log(i)\n            console.log(settings[i].setting)\n            console.log(settings[i].value)\n\n            updateSettings({ variables: {\n              input: {\n                setting: settings[i].setting,\n                value: settings[i].value,\n              }\n            }, refetchQueries: [\n                {query: GET_SYSTEM_SETTINGS_QUERY, variables: { setting: settings[i].setting }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('settings.general.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsFinanceBankAccountsForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsFinanceBankAccountsForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsFinanceIBAN))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsFinanceCurrencyForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.finance.currency')}>\n            <Field type=\"text\" \n              name=\"finance_currency\" \n              className={(errors.finance_currency) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"finance_currency\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('settings.finance.currency_symbol')}>\n            <Field type=\"text\" \n              name=\"finance_currency_symbol\" \n              className={(errors.finance_currency_symbol) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"finance_currency_symbol\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsFinanceCurrencyForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsFinanceCurrencyForm from \"./SettingsFinanceCurrencyForm\"\n\n\nfunction SettingsFinanceCurrency({ t, match, history }) {\n  const headerSubTitle = t('settings.finance.title')\n  const cardTitle = t(\"settings.finance.currency.title\")\n  const sidebarActive = \"integration\"\n\n  const { \n    loading: loadingCurrency, \n    error: errorCurrency, \n    data: dataCurrency \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"finance_currency\"\n    }\n  })\n  const { \n    loading: loadingSymbol, \n    error: errorSymbol, \n    data: dataSymbol \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"finance_currency_symbol\"\n    }\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  if ((loadingCurrency) || (loadingSymbol)) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if ((errorCurrency) || errorSymbol) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data app settings')\n  console.log(dataCurrency)\n  console.log(dataSymbol)\n\n  let initialValues = {\n    currency: \"EUR\",\n    symbol: \"€\"\n  }\n  if (dataCurrency.systemSettings.edges.length){\n    initialValues['currency'] = dataCurrency.systemSettings.edges[0].node.value\n  } \n  if (dataSymbol.systemSettings.edges.length){\n    initialValues['symbol'] = dataSymbol.systemSettings.edges[0].node.value\n  } \n    \n\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n      sidebarActive={sidebarActive}\n    >  \n    <Formik\n      initialValues={{ \n        finance_currency: initialValues['currency'],\n        finance_currency_symbol: initialValues['symbol']\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          const settings = [\n            { setting: \"finance_currency\", value: values.finance_currency },\n            { setting: \"finance_currency_symbol\", value: values.finance_currency_symbol },\n          ]\n\n          let error = false\n\n          for (let i in settings) {\n\n            console.log(i)\n            console.log(settings[i].setting)\n            console.log(settings[i].value)\n\n            updateSettings({ variables: {\n              input: {\n                setting: settings[i].setting,\n                value: settings[i].value,\n              }\n            }, refetchQueries: [\n                {query: GET_SYSTEM_SETTINGS_QUERY, variables: { setting: i.setting }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('settings.general.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsFinanceCurrencyForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsFinanceCurrencyForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsFinanceCurrency))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const DATETIME_SCHEMA = Yup.object().shape({\n    dateFormat: Yup.string()\n      .required(t('yup.field_required')),\n    timeFormat: Yup.string()\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsGeneralDateTimeForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.general.date_format')}>\n            <Field component=\"select\" \n                    name=\"dateFormat\" \n                    className={(errors.dateFormat) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"YYYY-MM-DD\" key={v4()}>{t('settings.general.date_formats.YYYY-MM-DD')}</option>\n                <option value=\"MM-DD-YYYY\" key={v4()}>{t('settings.general.date_formats.MM-DD-YYYY')}</option>\n                <option value=\"DD-MM-YYYY\" key={v4()}>{t('settings.general.date_formats.DD-MM-YYYY')}</option>\n            </Field>\n            <ErrorMessage name=\"dateFormat\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('settings.general.time_format')}>\n            <Field component=\"select\" \n                    name=\"timeFormat\" \n                    className={(errors.timeFormat) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"24\" key={v4()}>{t('settings.general.time_formats.24hr')}</option>\n                <option value=\"12\" key={v4()}>{t('settings.general.time_formats.12hr')}</option>\n            </Field>\n            <ErrorMessage name=\"timeFormat\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsGeneralDateTimeForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APP_SETTINGS_QUERY, UPDATE_APP_SETTINGS } from './queries'\nimport { DATETIME_SCHEMA } from './yupSchema'\n\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsGeneralDateTimeForm from \"./SettingsGeneralDateTimeForm\"\n\n\nfunction SettingsGeneralDateTime({ t, match, history }) {\n  const headerSubTitle = t(\"settings.general.datetime\")\n  const cardTitle = t(\"settings.general.datetime\")\n  const sidebarActive = \"general\"\n\n  const { loading, error, data } = useQuery(GET_APP_SETTINGS_QUERY)\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_APP_SETTINGS)\n\n  console.log('query data app settings')\n  console.log(data)\n\n  if (loading) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n      sidebarActive={sidebarActive}\n    >  \n    <Formik\n      initialValues={{ \n        dateFormat: data.appSettings.dateFormat,\n        timeFormat: data.appSettings.timeFormat,\n        note: \"\",\n      }}\n      validationSchema={DATETIME_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          updateSettings({ variables: {\n            input: {\n              dateFormat: values.dateFormat,\n              timeFormat: values.timeFormat,\n            }\n          }, refetchQueries: [\n              {query: GET_APP_SETTINGS_QUERY}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('settings.general.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsGeneralDateTimeForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsGeneralDateTimeForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsGeneralDateTime))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsGeneralSystemForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.general.system.system_hostname')}>\n            <Field type=\"text\" \n              name=\"system_hostname\" \n              className={(errors.system_hostname) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"system_hostname\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsGeneralSystemForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsGeneralSystemForm from \"./SettingsGeneralSystemForm\"\n\n\nfunction SettingsGeneralSystem({ t, match, history }) {\n  const headerSubTitle = t('settings.general.title')\n  const cardTitle = t(\"settings.general.system.title\")\n  const sidebarActive = \"general\"\n  const queryVariables = {\n    setting: \"system_hostname\"\n  }\n\n  const { loading, error, data } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: queryVariables\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  console.log('query data settings')\n  console.log(data)\n\n  if (loading) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  let hostname = \"\"\n  if (data.systemSettings.edges.length) {\n    hostname = data.systemSettings.edges[0].node.value \n  }\n\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n      sidebarActive={sidebarActive}\n    >  \n    <Formik\n      initialValues={{ \n        system_hostname: hostname\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          updateSettings({ variables: {\n            input: {\n              setting: \"system_hostname\",\n              value: values.system_hostname\n            }\n          }, refetchQueries: [\n              { query: GET_SYSTEM_SETTINGS_QUERY, variables: queryVariables }\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('settings.general.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsGeneralSystemForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsGeneralSystemForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsGeneralSystem))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Container,\n  Grid,\n  Icon,\n  Page,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HomeItemButton from \"../../ui/HomeItemButton\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n// import RelationsMenu from \"../RelationsMenu\"\n\nfunction SettingsHome({ t, match, params }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('settings.title')} />\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.general.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.general.date_time.title\")}</h5>\n                  {t(\"settings.general.date_time.explanation\")}\n                  <br /><br />\n                  <HomeItemButton link=\"/settings/general/datetime\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.general.system.title\")}</h5>\n                  {t(\"settings.general.system.explanation\")}\n                  <br /><br />\n                  <HomeItemButton link=\"/settings/general/system\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.workflow.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.workflow.class_booking.title\")}</h5>\n                  {t(\"settings.workflow.class_booking.explanation\")}\n                  <br /><br />\n                  <HomeItemButton link=\"/settings/workflow/class_booking\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.workflow.subscription_pauses.title\")}</h5>\n                  {t(\"settings.workflow.subscription_pauses.explanation\")}\n                  <br /><br />\n                  <HomeItemButton link=\"/settings/workflow/subscription_pauses\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.workflow.trial.title\")}</h5>\n                  {t(\"settings.workflow.trial.explanation\")}\n                  <br /><br />\n                  <HomeItemButton link=\"/settings/workflow/trial\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.workflow.shop.title\")}</h5>\n                  {t(\"settings.workflow.shop.explanation\")}\n                  <br /><br />\n                  <HomeItemButton link=\"/settings/workflow/shop\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.finance.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.finance.currency.title\")}</h5>\n                  {t(\"settings.finance.currency.explanation\")}\n                  <br /><br />\n                  <HomeItemButton link=\"/settings/finance/currency\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.finance.bank_accounts.title\")}</h5>\n                  {t(\"settings.finance.bank_accounts.explanation\")}\n                  <br /><br />\n                  <HomeItemButton link=\"/settings/finance/bank_accounts\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.mail.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.mail.templates.title\")}</h5>\n                  {t(\"settings.mail.templates.explanation\")}\n                  <br /><br />\n                  <HomeItemButton link=\"/settings/mail/templates\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.shop.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.shop.features.title\")}</h5>\n                  {t(\"settings.shop.features.explanation\")}\n                  <br /><br />\n                  <HomeItemButton link=\"/settings/shop/features/\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.integration.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.integration.mollie.title\")}</h5>\n                  {t(\"settings.integration.mollie.explanation\")}\n                  <br /><br />\n                  <HomeItemButton link=\"/settings/integration/mollie/\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.about.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.about.about.title\")}</h5>\n                  {t(\"settings.about.explanation\")}\n                  <br /><br />\n                  <HomeItemButton \n                    link=\"/settings/about\" \n                    linkTitle={t(\"View info\")}\n                  />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(SettingsHome))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsIntegrationMollieForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.integration.mollie.api_key')}>\n            <Field type=\"text\" \n              name=\"mollie_api_key\" \n              className={(errors.mollie_api_key) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"mollie_api_key\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsIntegrationMollieForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Alert,\n  Button,\n  Header,\n  Icon\n} from \"tabler-react\";\n\n\nfunction SettingsIntegrationMollieCreateAccount({ t, match, history, mollieApiKey }) {\n  if (mollieApiKey) {\n    return \"\"\n  }\n\n  return (\n    <Alert type=\"primary\">\n      <Header.H4>{t('settings.integration.mollie.create_account_title')}</Header.H4>\n      <p>\n        {t(\"settings.integration.mollie.create_account_message\")}\n      </p>\n      <a href=\"https://www.mollie.com/dashboard/signup/2488481\" target=\"_blank\">\n        <Button color=\"success\" RootComponent=\"button\">\n          {t(\"settings.integration.mollie.to_mollie\")} <Icon name=\"chevron-right\" />\n        </Button>\n      </a>\n    </Alert>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsIntegrationMollieCreateAccount))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsIntegrationMollieForm from \"./SettingsIntegrationMollieForm\"\nimport SettingsIntegrationMollieCreateAccount from \"./SettingsIntegrationMollieCreateAccount\"\n\n\nfunction SettingsIntegrationMollie({ t, match, history }) {\n  const headerSubTitle = t('settings.integration.title')\n  const cardTitle = t(\"settings.integration.mollie.title\")\n  const sidebarActive = \"integration\"\n\n  const { loading, error, data } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"integration_mollie_api_key\"\n    }\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  console.log('query data app settings')\n  console.log(data)\n\n  if (loading) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  let mollieApiKey = \"\"\n  if (data.systemSettings.edges.length) {\n    mollieApiKey = data.systemSettings.edges[0].node.value\n  }\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n      sidebarActive={sidebarActive}\n      alertBanner={<SettingsIntegrationMollieCreateAccount mollieApiKey={mollieApiKey} />}\n    >\n    <Formik\n      initialValues={{ \n        mollie_api_key: mollieApiKey\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          updateSettings({ variables: {\n            input: {\n              setting: \"integration_mollie_api_key\",\n              value: values.mollie_api_key\n            }\n          }, refetchQueries: [\n              {query: GET_SYSTEM_SETTINGS_QUERY,     variables: {\n                setting: \"integration_mollie_api_key\"\n              }}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('settings.general.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsIntegrationMollieForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsIntegrationMollieForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsIntegrationMollie))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport SettingsBack from \"../SettingsBack\"\n\nfunction SettingsMailTemplatesBase({ t, children, headerSubTitle, }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"settings.mail.templates.title\")} subTitle={headerSubTitle}>\n            <div className=\"page-options d-flex\">\n              <SettingsBack />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(SettingsMailTemplatesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_SYSTEM_MAIL_TEMPLATES_QUERY = gql`\n  query SystemMailTemplates {\n    systemMailTemplates(first:100) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          name\n          subject\n          title\n          description\n          content\n          comments\n        }\n      }\n    }\n  }\n`\n\nexport const GET_SYSTEM_MAIL_TEMPLATE_QUERY = gql`\n  query SystemMailTemplate($id: ID!) {\n    systemMailTemplate(id:$id) {\n      id\n      name\n      subject\n      title\n      description\n      content\n      comments\n    }\n  }\n`\n\nexport const UPDATE_SYSTEM_MAIL_TEMPLATE =  gql`\n  mutation UpdateSystemMailTemplate($input: UpdateSystemMailTemplateInput!) {\n    updateSystemMailTemplate(input: $input) {\n      systemMailTemplate {\n        id\n        name\n        subject\n        title\n        description\n        content\n        comments\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport SettingsMailTemplatesBase from \"./SettingsMailTemplatesBase\"\n\nimport { GET_SYSTEM_MAIL_TEMPLATES_QUERY } from \"./queries\"\n\n\nfunction SystemMailTemplates({ t, match, params }) {\n  const title = t(\"settings.mail.templates.title\")\n  const { loading, error, data, fetchMore } = useQuery(GET_SYSTEM_MAIL_TEMPLATES_QUERY)\n\n  if (loading) return (\n    <SettingsMailTemplatesBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </SettingsMailTemplatesBase>\n  )\n  if (error) return (\n    <SettingsMailTemplatesBase title={title}>\n      {t(\"settings.mail.templates.error_loading\")}\n    </SettingsMailTemplatesBase>\n  )\n\n  console.log(data)\n  const mailTemplates = data.systemMailTemplates\n\n  // TODO: add empty list message and request import\n\n\n\n  return (\n    <SettingsMailTemplatesBase title={title} >\n      <ContentCard \n        cardTitle={t('settings.mail.templates.title')}\n        // headerContent={headerOptions}\n        pageInfo={mailTemplates.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: mailTemplates.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.systemMailTemplates.edges\n              const pageInfo = fetchMoreResult.systemMailTemplates.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new subscriptions at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    systemMailTemplates: {\n                      __typename: previousResult.systemMailTemplates.__typename,\n                      edges: [ ...previousResult.systemMailTemplates.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('settings.mail.templates.name')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n              <Table.Body>\n                  {mailTemplates.edges.map(({ node }) => (\n                    <Table.Row key={v4()}>\n                      <Table.Col>\n                        {node.name}\n                      </Table.Col>\n                      <Table.Col>\n                        <Link to={\"/settings/mail/templates/edit/\" + node.id}>\n                          <Button className='btn-sm pull-right' \n                                  color=\"secondary\">\n                            {t('general.edit')}\n                          </Button>\n                        </Link>\n                      </Table.Col>\n                    </Table.Row>\n                  ))}\n              </Table.Body>\n            </Table>\n      </ContentCard>\n    </SettingsMailTemplatesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(SystemMailTemplates))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\nimport SettingsBack from \"../SettingsBack\"\n\nfunction SettingsMailTemplatesBase({ t, children, headerSubTitle, help={} }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"settings.mail.templates.title\")} subTitle={headerSubTitle}>\n            <div className=\"page-options d-flex\">\n              <SettingsBack returnUrl=\"/settings/mail/templates\" />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={8}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={4}>\n              <Card title={t('general.subject')}>\n                <Card.Body>\n                  {help.subject}\n                </Card.Body>\n              </Card>\n              <Card title={t('general.title')}>\n                <Card.Body>\n                  {help.title}\n                </Card.Body>\n              </Card>\n              <Card title={t('general.description')}>\n                <Card.Body>\n                  {help.description}\n                </Card.Body>\n              </Card>\n              <Card title={t('general.content')}>\n                <Card.Body>\n                  {help.content}\n                </Card.Body>\n              </Card>\n              <Card title={t('general.comments')}>\n                <Card.Body>\n                  {help.comments}\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(SettingsMailTemplatesBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\n\nimport {\n  Button,\n  Card,\n  Form\n} from \"tabler-react\";\n\n\nfunction SettingsMailTemplateEditForm({ t, history, isSubmitting, errors, values, setFieldTouched, setFieldValue, returnUrl, cardTitle }) {\n\n\n  return (\n    <FoForm>\n      <Card title={cardTitle}>\n        <Card.Body>    \n          <Form.Group label={t('general.subject')} >\n            <Field type=\"text\" \n                  name=\"subject\" \n                  className={(errors.subject) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"subject\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.title')} >\n            <Field type=\"text\" \n                  name=\"title\" \n                  className={(errors.title) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"title\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.description')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"description\"\n              initialValue={values.description}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"description\", e.target.getContent())\n                setFieldTouched(\"description\", true, true)\n              }}\n            />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.content')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"content\"\n              initialValue={values.content}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"content\", e.target.getContent())\n                setFieldTouched(\"content\", true, true)\n              }}\n            />\n            <ErrorMessage name=\"content\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.comments')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"comments\"\n              initialValue={values.comments}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"comments\", e.target.getContent())\n                setFieldTouched(\"comments\", true, true)\n              }}\n            />\n            <ErrorMessage name=\"comments\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Card.Body>\n        <Card.Footer>\n            <Button \n              className=\"pull-right\"\n              color=\"primary\"\n              disabled={isSubmitting}\n              type=\"submit\"\n            >\n              {t('general.submit')}\n            </Button>\n            <Link to={returnUrl}>\n              <Button\n                type=\"button\" \n                color=\"link\" \n              >\n                {t('general.cancel')}\n              </Button>\n            </Link>\n        </Card.Footer>\n      </Card>\n    </FoForm>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsMailTemplateEditForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_MAIL_TEMPLATE_QUERY, GET_SYSTEM_MAIL_TEMPLATES_QUERY, UPDATE_SYSTEM_MAIL_TEMPLATE } from './queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { getTemplateInfo } from './tools'\n\nimport SettingsMailTemplateEditBase from \"./SettingsMailTemplateEditBase\"\nimport SettingsMailTemplateEditForm from \"./SettingsMailTemplateEditForm\"\n\n\nfunction SettingsMailTemplateEdit({ t, match, history }) {\n  const id = match.params.id\n  const returnUrl = \"/settings/mail/templates\"\n  const headerSubTitle = t('settings.mail.title')\n  const cardTitle = t(\"settings.mail.templates.edit.title\")\n\n  const { loading, error, data } = useQuery(GET_SYSTEM_MAIL_TEMPLATE_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_MAIL_TEMPLATE)\n\n  console.log('query data app settings')\n  console.log(data)\n\n  if (loading) {\n    return (\n      <SettingsMailTemplateEditBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsMailTemplateEditBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsMailTemplateEditBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsMailTemplateEditBase>\n    )\n  }\n\n  const templateInfo = getTemplateInfo(t, data.systemMailTemplate.name)\n  console.log(data.systemMailTemplate.name)\n  console.log(templateInfo)\n\n\n  return (\n    <SettingsMailTemplateEditBase \n      headerSubTitle={headerSubTitle}\n      help={templateInfo.helpTexts}\n    >  \n    <Formik\n      initialValues={{ \n        subject: data.systemMailTemplate.subject,\n        title: data.systemMailTemplate.title,\n        description: data.systemMailTemplate.description,\n        content: data.systemMailTemplate.content,\n        comments: data.systemMailTemplate.comments        \n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          updateSettings({ variables: {\n            input: {\n              id: id,\n              subject: values.subject,\n              title: values.title,\n              description: values.description,\n              content: values.content,\n              comments: values.comments\n            }\n          }, refetchQueries: [\n              {query: GET_SYSTEM_MAIL_TEMPLATES_QUERY}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('settings.mail.templates.edit.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n    >\n      {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n        <SettingsMailTemplateEditForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n          setFieldTouched={setFieldTouched}\n          setFieldValue={setFieldValue}\n          cardTitle={templateInfo.cardTitle}\n          returnUrl={returnUrl}\n        >\n          {console.log(errors)}\n        </SettingsMailTemplateEditForm>\n      )}\n      </Formik>\n    </SettingsMailTemplateEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsMailTemplateEdit))","import React from \"react\"\n\n\nexport function getTemplateInfo(t, template_name) {\n  let cardTitle\n  let helpTexts\n\n\n  switch(template_name) {\n    case \"class_info_mail\":\n      cardTitle = t(\"settings.mail.templates.class_info_mail.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.class_info_mail.help_subject\"),\n        title: t(\"settings.mail.templates.class_info_mail.help_title\"),\n        description: t(\"settings.mail.templates.class_info_mail.help_description\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        content: t(\"settings.mail.templates.class_info_mail.help_content\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        comments: t(\"settings.mail.templates.class_info_mail.help_comments\"), \n      }\n      break\n    case \"event_info_mail\":\n      cardTitle = t(\"settings.mail.templates.event_info_mail.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.event_info_mail.help_subject\"),\n        title: t(\"settings.mail.templates.event_info_mail.help_title\"),\n        description: t(\"settings.mail.templates.event_info_mail.help_description\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        content: t(\"settings.mail.templates.event_info_mail.help_content\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        comments: t(\"settings.mail.templates.event_info_mail.help_comments\"), \n      }\n      break\n    case \"order_received\":\n      cardTitle = t(\"settings.mail.templates.order_received.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.order_received.help_subject\"),\n        title: t(\"settings.mail.templates.order_received.help_title\"),\n        description: t(\"settings.mail.templates.order_received.help_description\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        content: t(\"settings.mail.templates.order_received.help_content\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        comments: t(\"settings.mail.templates.order_received.help_comments\"), \n      }\n      break\n    case \"recurring_payment_failed\":\n      cardTitle = t(\"settings.mail.templates.recurring_payment_failed.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.recurring_payment_failed.help_subject\"),\n        title: t(\"settings.mail.templates.recurring_payment_failed.help_title\"),\n        description: t(\"settings.mail.templates.recurring_payment_failed.help_description\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        content: t(\"settings.mail.templates.recurring_payment_failed.help_content\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        comments: t(\"settings.mail.templates.recurring_payment_failed.help_comments\"), \n      }\n      break\n      break\n    case \"system_footer\":\n      cardTitle = t(\"settings.mail.templates.system_footer.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.system_footer.help_subject\"),\n        title: t(\"settings.mail.templates.system_footer.help_title\"),\n        description: t(\"settings.mail.templates.system_footer.help_description\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        content: t(\"settings.mail.templates.system_footer.help_content\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        comments: t(\"settings.mail.templates.system_footer.help_comments\"), \n      }\n      break\n    default:\n      cardTitle = t(\"settings.mail.templates.not_found.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.not_found.help_subject\"),\n        title: t(\"settings.mail.templates.not_found.help_title\"),\n        description: t(\"settings.mail.templates.not_found.help_description\"),\n        content: t(\"settings.mail.templates.not_found.help_content\"),\n        comments: t(\"settings.mail.templates.not_found.help_comments\"),\n      }\n  }\n\n\n  return {\n    \"cardTitle\": cardTitle,\n    \"helpTexts\": helpTexts,\n  }\n}\n\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SHOP_FEATURES_QUERY = gql`\n  query SystemFeatureShop {\n    systemFeatureShop(id: \"U3lzdGVtRmVhdHVyZVNob3BOb2RlOjE=\") {\n      memberships\n      subscriptions\n      classpasses\n      classes\n      events\n    }\n  }\n`\n\n\nexport const UPDATE_SHOP_FEATURES = gql`\n  mutation UpdateSystemFeatureShop($input: UpdateSystemFeatureShopInput!) {\n    updateSystemFeatureShop(input: $input) {\n      systemFeatureShop {\n        id\n      }\n    }\n  }\n`","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SHOP_FEATURES_SCHEMA = Yup.object().shape({\n    subscriptions: Yup.boolean(),\n    classpasses: Yup.boolean(),\n    classes: Yup.boolean(),\n    events: Yup.boolean(),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsShopFeaturesForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n        {/* <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"memberships\" \n              checked={values.memberships} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.memberships')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"memberships\" component=\"div\" />   \n        </Form.Group>   */}\n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"subscriptions\" \n              checked={values.subscriptions} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.subscriptions')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"subscriptions\" component=\"div\" />   \n        </Form.Group>  \n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"classpasses\" \n              checked={values.classpasses} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.classpasses')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"classpasses\" component=\"div\" />   \n        </Form.Group>  \n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"classes\" \n              checked={values.classes} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.classes')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"classes\" component=\"div\" />   \n        </Form.Group>  \n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"events\" \n              checked={values.events} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.events')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"events\" component=\"div\" />   \n        </Form.Group>  \n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsShopFeaturesForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SHOP_FEATURES_QUERY, UPDATE_SHOP_FEATURES } from './queries'\nimport { SHOP_FEATURES_SCHEMA } from './yupSchema'\n\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsShopFeaturesForm from \"./SettingsShopFeaturesForm\"\n\n\nfunction SettingsShopFeatures({ t, match, history }) {\n  const headerSubTitle = t(\"settings.shop.features.title\")\n  const cardTitle = t(\"settings.shop.features.title\")\n  const sidebarActive = \"general\"\n\n  const { loading, error, data } = useQuery(GET_SHOP_FEATURES_QUERY)\n  const [ updateSettings ] = useMutation(UPDATE_SHOP_FEATURES)\n\n  console.log('query data app settings')\n  console.log(data)\n\n  if (loading) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  const shopFeatures = data.systemFeatureShop\n  \n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n      sidebarActive={sidebarActive}\n    >  \n    <Formik\n      initialValues={{ \n        memberships: shopFeatures.memberships,\n        subscriptions: shopFeatures.subscriptions,\n        classpasses: shopFeatures.classpasses,\n        classes: shopFeatures.classes,\n        events: shopFeatures.events,\n      }}\n      validationSchema={SHOP_FEATURES_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          updateSettings({ variables: {\n            input: {\n              memberships: values.memberships,\n              subscriptions: values.subscriptions,\n              classpasses: values.classpasses,\n              classes: values.classes,\n              events: values.events\n            }\n          }, refetchQueries: [\n              {query: GET_SHOP_FEATURES_QUERY}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('settings.general.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsShopFeaturesForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsShopFeaturesForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsShopFeatures))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsWorkflowClassBookingForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.workflow.class_booking.book_days_advance')}>\n            <Field type=\"text\" \n              name=\"workflow_class_book_days_advance\" \n              className={(errors.workflow_class_book_days_advance) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"workflow_class_book_days_advance\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('settings.workflow.class_booking.cancel_until')}>\n            <Field type=\"text\" \n              name=\"workflow_class_cancel_until\" \n              className={(errors.workflow_class_cancel_until) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"workflow_class_cancel_until\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsWorkflowClassBookingForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Card,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsWorkflowClassBookingForm from \"./SettingsWorkflowClassBookingForm\"\n\n\nfunction SettingsWorkflowClassBooking({ t, match, history }) {\n  const headerSubTitle = t('settings.workflow.title')\n  const cardTitle = t(\"settings.workflow.class_booking.title\")\n\n  const { \n    loading: loadingDaysAdvance, \n    error: errorDaysAdvance, \n    data: dataDaysAdvance \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"workflow_class_book_days_advance\"\n    }\n  })\n  const { \n    loading: loadingCancelUntil, \n    error: errorCancelUntil, \n    data: dataCancelUntil \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"workflow_class_cancel_until\"\n    }\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  if ((loadingDaysAdvance) || (loadingCancelUntil)) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if ((errorDaysAdvance) || errorCancelUntil) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data app settings')\n  console.log(dataDaysAdvance)\n  console.log(dataCancelUntil)\n\n  let initialValues = {\n    workflow_class_book_days_advance: \"30\",\n    workflow_class_cancel_until: \"2\"\n  }\n  if (dataDaysAdvance.systemSettings.edges.length){\n    initialValues['workflow_class_book_days_advance'] = dataDaysAdvance.systemSettings.edges[0].node.value\n  } \n  if (dataCancelUntil.systemSettings.edges.length){\n    initialValues['workflow_class_cancel_until'] = dataCancelUntil.systemSettings.edges[0].node.value\n  } \n    \n\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n    >  \n    <Formik\n      initialValues={{ \n        workflow_class_book_days_advance: initialValues['workflow_class_book_days_advance'],\n        workflow_class_cancel_until: initialValues['workflow_class_cancel_until']\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          const settings = [\n            { setting: \"workflow_class_book_days_advance\", value: values.workflow_class_book_days_advance },\n            { setting: \"workflow_class_cancel_until\", value: values.workflow_class_cancel_until },\n          ]\n\n          let error = false\n\n          for (let i in settings) {\n\n            console.log(i)\n            console.log(settings[i].setting)\n            console.log(settings[i].value)\n\n            updateSettings({ variables: {\n              input: {\n                setting: settings[i].setting,\n                value: settings[i].value,\n              }\n            }, refetchQueries: [\n                {query: GET_SYSTEM_SETTINGS_QUERY, variables: { setting: settings[i].setting }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('settings.general.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsWorkflowClassBookingForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsWorkflowClassBookingForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsWorkflowClassBooking))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsWorkflowShopForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.workflow.shop.subscription_payment_method')}>\n            <Field component=\"select\" \n              name=\"workflow_shop_subscription_payment_method\" \n              className={(errors.workflow_shop_subscription_payment_method) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\">\n                <option value=\"MOLLIE\">{t(\"finance.payment_methods.mollie\")}</option>\n                <option value=\"DIRECTDEBIT\">{t(\"finance.payment_methods.direct_debit\")}</option>\n            </Field>\n            <ErrorMessage name=\"workflow_shop_subscription_payment_method\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsWorkflowShopForm))\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Card,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsWorkflowShopForm from \"./SettingsWorkflowShopForm\"\n\n\nfunction SettingsWorkflowShop({ t, match, history }) {\n  const headerSubTitle = t('settings.workflow.title')\n  const cardTitle = t(\"settings.workflow.shop.title\")\n\n  const { \n    loading: loadingSubscriptionPayment, \n    error: errorSubscriptionPayment, \n    data: dataSubscriptionPayment \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"workflow_shop_subscription_payment_method\"\n    }\n  })\n  const [ updateSettings ] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  if (loadingSubscriptionPayment) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (errorSubscriptionPayment) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data settings')\n  console.log(dataSubscriptionPayment)\n\n  let initialValues = {\n    workflow_shop_subscription_payment_method: \"\",\n  }\n  if (dataSubscriptionPayment.systemSettings.edges.length){\n    initialValues['workflow_shop_subscription_payment_method'] = dataSubscriptionPayment.systemSettings.edges[0].node.value\n  } \n    \n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n    >  \n    <Formik\n      initialValues={{ \n        workflow_shop_subscription_payment_method: initialValues['workflow_shop_subscription_payment_method'],\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          const settings = [\n            { setting: \"workflow_shop_subscription_payment_method\", \n              value: values.workflow_shop_subscription_payment_method },\n          ]\n\n          let error = false\n\n          for (let i in settings) {\n\n            console.log(i)\n            console.log(settings[i].setting)\n            console.log(settings[i].value)\n\n            updateSettings({ variables: {\n              input: {\n                setting: settings[i].setting,\n                value: settings[i].value,\n              }\n            }, refetchQueries: [\n                {query: GET_SYSTEM_SETTINGS_QUERY, variables: { setting: settings[i].setting }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('settings.general.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsWorkflowShopForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsWorkflowShopForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsWorkflowShop))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsWorkflowSubscriptionPausesForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.workflow.subscription_pauses.min_duration_in_days')}>\n            <Field type=\"text\" \n              name=\"workflow_subscription_pauses_min_duration_in_days\" \n              className={(errors.workflow_subscription_pauses_min_duration_in_days) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"workflow_subscription_pauses_min_duration_in_days\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('settings.workflow.subscription_pauses.max_pauses_in_year')}>\n            <Field type=\"text\" \n              name=\"workflow_subscription_pauses_max_pauses_in_year\" \n              className={(errors.workflow_subscription_pauses_max_pauses_in_year) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"workflow_subscription_pauses_max_pauses_in_year\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsWorkflowSubscriptionPausesForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Card,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsWorkflowSubscriptionPausesForm from \"./SettingsWorkflowSubscriptionPausesForm\"\n\n\nfunction SettingsWorkflowSubscriptionPauses({ t, match, history }) {\n  const headerSubTitle = t('settings.workflow.title')\n  const cardTitle = t(\"settings.workflow.subscription_pauses.title\")\n\n  const { \n    loading: loadingMinDuration, \n    error: errorMinDuration, \n    data: dataMinDuration \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"workflow_subscription_pauses_min_duration_in_days\"\n    }\n  })\n  const { \n    loading: loadingMaxPauses, \n    error: errorMaxPauses, \n    data: dataMaxPauses \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"workflow_subscription_pauses_max_pauses_in_year\"\n    }\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  if ((loadingMinDuration) || (loadingMaxPauses)) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if ((errorMinDuration) || errorMaxPauses) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data app settings')\n  console.log(dataMinDuration)\n  console.log(dataMaxPauses)\n\n  let initialValues = {\n    workflow_subscription_pauses_min_duration_in_days: \"1\",\n    workflow_subscription_pauses_max_pauses_in_year: \"1\"\n  }\n\n  if (dataMinDuration.systemSettings.edges.length){\n    initialValues['workflow_subscription_pauses_min_duration_in_days'] = dataMinDuration.systemSettings.edges[0].node.value\n  } \n  if (dataMaxPauses.systemSettings.edges.length){\n    initialValues['workflow_subscription_pauses_max_pauses_in_year'] = dataMaxPauses.systemSettings.edges[0].node.value\n  } \n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n    >  \n    <Formik\n      initialValues={{ \n        workflow_subscription_pauses_min_duration_in_days: initialValues['workflow_subscription_pauses_min_duration_in_days'],\n        workflow_subscription_pauses_max_pauses_in_year: initialValues['workflow_subscription_pauses_max_pauses_in_year']\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          const settings = [\n            { setting: \"workflow_subscription_pauses_min_duration_in_days\", \n              value: values.workflow_subscription_pauses_min_duration_in_days },\n            { setting: \"workflow_subscription_pauses_max_pauses_in_year\", \n              value: values.workflow_subscription_pauses_max_pauses_in_year },\n          ]\n\n          let error = false\n\n          for (let i in settings) {\n\n            console.log(i)\n            console.log(settings[i].setting)\n            console.log(settings[i].value)\n\n            updateSettings({ variables: {\n              input: {\n                setting: settings[i].setting,\n                value: settings[i].value,\n              }\n            }, refetchQueries: [\n                {query: GET_SYSTEM_SETTINGS_QUERY, variables: { setting: settings[i].setting }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('settings.general.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsWorkflowSubscriptionPausesForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsWorkflowSubscriptionPausesForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsWorkflowSubscriptionPauses))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsWorkflowTrialForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.workflow.trial.trial_pass_limit')}>\n            <Field type=\"text\" \n              name=\"workflow_trial_pass_limit\" \n              className={(errors.workflow_trial_pass_limit) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"workflow_trial_pass_limit\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsWorkflowTrialForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Card,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsWorkflowTrialForm from \"./SettingsWorkflowTrialForm\"\n\n\nfunction SettingsWorkflowClassBooking({ t, match, history }) {\n  const headerSubTitle = t('settings.workflow.title')\n  const cardTitle = t(\"settings.workflow.class_booking.title\")\n\n  const { \n    loading: loadingTrialClassLimit, \n    error: errorTrialClassLimit, \n    data: dataTrialClassLimit \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"workflow_trial_pass_limit\"\n    }\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  if (loadingTrialClassLimit) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (errorTrialClassLimit) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data app settings')\n  console.log(dataTrialClassLimit)\n\n  let initialValues = {\n    workflow_trial_pass_limit: \"1\",\n  }\n  if (dataTrialClassLimit.systemSettings.edges.length){\n    initialValues['workflow_trial_pass_limit'] = dataTrialClassLimit.systemSettings.edges[0].node.value\n  } \n    \n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n    >  \n    <Formik\n      initialValues={{ \n        workflow_trial_pass_limit: initialValues['workflow_trial_pass_limit'],\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          const settings = [\n            { setting: \"workflow_trial_pass_limit\", value: values.workflow_trial_pass_limit },\n          ]\n\n          let error = false\n\n          for (let i in settings) {\n\n            console.log(i)\n            console.log(settings[i].setting)\n            console.log(settings[i].value)\n\n            updateSettings({ variables: {\n              input: {\n                setting: settings[i].setting,\n                value: settings[i].value,\n              }\n            }, refetchQueries: [\n                {query: GET_SYSTEM_SETTINGS_QUERY, variables: { setting: settings[i].setting }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('settings.general.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsWorkflowTrialForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsWorkflowTrialForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsWorkflowClassBooking))","import { gql } from \"@apollo/client\"\n\nconst GET_USER_PROFILE = gql`\n  query User {\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n      teacher\n      employee\n    }\n  }\n`\n\nexport default GET_USER_PROFILE","// @flow\n\nimport * as React from \"react\"\nimport { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { NavLink, withRouter } from \"react-router-dom\"\nimport { useQuery } from \"@apollo/client\"\nimport { ToastContainer, Slide } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport { Link } from 'react-router-dom'\n\nimport { GET_SHOP_FEATURES_QUERY } from \"../components/settings/shop/features/queries\"\nimport OrganizationContext from './context/OrganizationContext'\nimport CSLS from \"../tools/cs_local_storage\"\nimport { get_all_permissions, has_permission } from \"../tools/user_tools\"\nimport CSStandalonePageLoader from \"./ui/CSStandalonePageLoader\"\n\nimport {\n  Site,\n  Nav,\n  Grid,\n  Button,\n  // Page,\n  RouterContextProvider,\n} from \"tabler-react\";\n\nimport type { NotificationProps } from \"tabler-react\";\n\ntype Props = {|\n  +children: React.Node,\n|};\n\ntype State = {|\n  notificationsObjects: Array<NotificationProps>,\n|};\n\ntype subNavItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +LinkComponent?: React.ElementType,\n|};\n\ntype navItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +active?: boolean,\n  +LinkComponent?: React.ElementType,\n  +subItems?: Array<subNavItem>,\n  +useExact?: boolean,\n|};\n\n\nconst getNavBarItems = (t, loading, error, data) => {\n  const shopFeatures = data.systemFeatureShop\n\n  let items: Array<navItem> = []\n  // let permissions = get_all_permissions(user)\n\n  if (loading) {\n    items.push({\n      value: t(\"general.loading_with_dots\"),\n      to: \"/\",\n      icon: \"\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true, \n    })\n\n    return items\n  }\n\n  if (error) {\n    items.push({\n      value: t(\"general.error_sad_smiley\"),\n      to: \"/\",\n      icon: \"\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true, \n    })\n\n    return items\n  }\n\n  items.push({\n    value: t(\"shop.home.title\"),\n    to: \"/\",\n    icon: \"home\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  })\n\n\n  if (shopFeatures.subscriptions) {\n    items.push({\n      value: t(\"shop.subscriptions.title\"),\n      to: \"/shop/subscriptions\",\n      icon: \"edit\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true,\n    })\n  }\n\n  if (shopFeatures.classpasses) {\n    items.push({\n      value: t(\"shop.classpasses.title\"),\n      to: \"/shop/classpasses\",\n      icon: \"credit-card\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true,\n    })\n  }\n\n  if (shopFeatures.classes) {\n    items.push({\n      value: t(\"shop.classes.title\"),\n      to: \"/shop/classes\",\n      icon: \"book\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true,\n    })\n  }\n\n  if (shopFeatures.events) {\n    items.push({\n      value: t(\"shop.events.title\"),\n      to: \"/shop/events\",\n      icon: \"calendar\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true,\n    })\n  }\n\n  items.push({\n    value: t(\"shop.contact.title\"),\n    to: \"/shop/contact\",\n    icon: \"message-square\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  })\n\n  // Check if refresh token is present and if so, hasn't expired\n  const refreshTokenExp = localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN_EXP)\n  let accountTitle = t(\"shop.account.title\")\n  let accountLink = \"/shop/account\"\n  if (new Date() / 1000 >= refreshTokenExp || refreshTokenExp == null ) {\n    accountTitle = t(\"general.sign_in\")\n    accountLink = \"/user/login\"\n  }\n\n  items.push({\n    value: accountTitle,\n    to: accountLink,\n    icon: \"user\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  })\n\n  return items\n}\n\nfunction getHeaderImageUrl(organization) {\n  let imageURL = \"/d/static/logos/stock/logo_stock_backend.png\"\n\n  if (organization) {\n    if (organization.urlLogoShopHeader) {\n      imageURL = organization.urlLogoShopHeader\n    }\n  }\n\n  return imageURL\n}\n\nconst now = new Date()\n\nfunction SiteWrapperShop({t, match, history, children}) {\n  const { loading, error, data } = useQuery(GET_SHOP_FEATURES_QUERY)\n  const organization = useContext(OrganizationContext)\n  console.log(organization)\n  // const { error, loading, data, fetchMore } = useQuery(GET_USER)\n\n  if (loading) return <CSStandalonePageLoader/>;\n  if (error) return <p>{t('system.user.error_loading')}</p>; \n\n  console.log(data)\n\n  const headerImageUrl = getHeaderImageUrl(organization)\n\n  return (\n    <Site.Wrapper\n      headerProps={{\n          href: \"/\",\n          alt: \"Costasiella\",\n          imageURL: headerImageUrl, // Set logo url here\n          navItems: (\n            <Nav.Item type=\"div\" className=\"d-none d-md-flex\">\n              {(data.user) ? (data.user.teacher || data.user.employee) ? <Link to=\"/user/welcome\">\n                <Button\n                  className=\"mr-2\"\n                  icon=\"link\"\n                  outline\n                  size=\"sm\"\n                  color=\"primary\"\n                >\n                  {t('goto.title')}\n                </Button>\n              </Link> : \"\" : \"\"}\n            </Nav.Item>\n          ),\n          \n          // notificationsTray: {\n          //   notificationsObjects,\n          //   markAllAsRead: () =>\n          //     this.setState(\n          //       () => ({\n          //         notificationsObjects: this.state.notificationsObjects.map(\n          //           v => ({ ...v, unread: false })\n          //         ),\n          //       }),\n          //       () =>\n          //         setTimeout(\n          //           () =>\n          //             this.setState({\n          //               notificationsObjects: this.state.notificationsObjects.map(\n          //                 v => ({ ...v, unread: true })\n          //               ),\n          //             }),\n          //           5000\n          //         )\n          //     ),\n          //   unread: unreadCount,\n          // },\n        //   accountDropdown: {\n        //   avatarURL: \"#\",\n        //   name: data.user.firstName + ' ' + data.user.lastName,\n        //   description: \"\",\n        //   options: [\n        //     // { icon: \"user\", value: \"Profile\" },\n        //     { icon: \"lock\", value: \"Change password\", to: \"/#/user/password/change/\" },\n        //     { isDivider: true },\n        //     { icon: \"log-out\", value: \"Sign out\", to: \"/#/user/logout/\" },\n        //   ],\n        // },\n        }}\n        // navProps={{ itemsObjects: navBarItems }}\n        navProps={{ itemsObjects: getNavBarItems(t, loading, error, data) }}\n        routerContextComponentType={withRouter(RouterContextProvider)}\n        footerProps={{\n          // links: [\n          //   <a href=\"#\">First Link</a>,\n          //   <a href=\"#\">Second Link</a>,\n          //   <a href=\"#\">Third Link</a>,\n          //   <a href=\"#\">Fourth Link</a>,\n          //   <a href=\"#\">Five Link</a>,\n          //   <a href=\"#\">Sixth Link</a>,\n          //   <a href=\"#\">Seventh Link</a>,\n          //   <a href=\"#\">Eigth Link</a>,\n          // ],\n          // note:\n          //   \"Premium and Open Source dashboard template with responsive and high quality UI. For Free!\",\n          copyright: (\n            <React.Fragment>\n              <small>\n                Peacefully powered by\n                <a\n                  href=\"https://www.costasiella.com\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {\" \"}\n                  Costasiella\n                </a>{\". \"}\n                All rights reserved © {now.getFullYear()}.\n              </small>\n            </React.Fragment>\n          ),\n          nav: (\n            <React.Fragment>\n              <Grid.Col auto={true}>\n                {/* <List className=\"list-inline list-inline-dots mb-0\">\n                  <List.Item className=\"list-inline-item\">\n                    <a href=\"./docs/index.html\">Documentation</a>\n                  </List.Item>\n                  <List.Item className=\"list-inline-item\">\n                    <a href=\"./faq.html\">FAQ</a>\n                  </List.Item>\n                </List> */}\n              </Grid.Col>\n              <Grid.Col auto={true}>\n                {/* <Button\n                  href=\"https://github.com/tabler/tabler-react\"\n                  size=\"sm\"\n                  outline\n                  color=\"primary\"\n                  RootComponent=\"a\"\n                >\n                  Source code\n                </Button> */}\n              </Grid.Col>\n            </React.Fragment>\n          ),\n        }}\n      >\n      {children}\n      <ToastContainer \n        autoClose={5000} \n        transition={Slide}\n      />\n    </Site.Wrapper>    \n  )\n}\n\n\nexport default withTranslation()(SiteWrapperShop)\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\n\n\nfunction ShopAccountHomeBase({ t, match, history, children, subTitle=\"\" }) {\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"shop.account.title\")} subTitle={subTitle}/>\n          { children }\n        </Container>\n      </div>\n    </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountHomeBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\n\n\nfunction ShopAccountHomeButton({ t, link, buttonText }) {\n  return (\n    <Link to={link} >\n      <Button \n        outline\n        block\n        color=\"primary\"\n      >\n        {buttonText} <Icon name=\"chevron-right\" />\n      </Button>\n    </Link>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountHomeButton))","// @flow\n\nimport React, {Component } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\n\nimport CSLS from '../../../../tools/cs_local_storage';\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountHomeBase from \"./ShopAccountHomeBase\"\nimport ShopAccountHomeButton from \"./ShopAccountHomeButton\"\n\n\nfunction ShopAccountHome({t, match, history}) {\n  const { loading, error, data } = useQuery(GET_USER_PROFILE)\n\n  // Unset any next link for bank accounts that might have come from /shop/subscription/:id\n  localStorage.removeItem(CSLS.SHOP_ACCOUNT_BANK_ACCOUNT_NEXT)\n\n\n  if (loading) return (\n    <ShopAccountHomeBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountHomeBase>\n  )\n  if (error) return (\n    <ShopAccountHomeBase>\n      {t(\"shop.account.error_loading_user_data\")}\n    </ShopAccountHomeBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = data.user\n\n  return (\n    <ShopAccountHomeBase subTitle={user.fullName}>\n      {(user.teacher || user.employee) ?\n        <div>\n          <Grid.Row>\n            <Grid.Col xs={12} sm={12} md={4} lg={4}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"goto.title\")}</h5>\n                  {t(\"shop.account.goto.explanation\")}\n                  <br /><br />\n                  <ShopAccountHomeButton link=\"/user/welcome\" buttonText={t(\"shop.account.btn_go_to\")} />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row> \n          <hr />\n        </div>\n        : \"\"\n      } \n      <Grid.Row>\n        <Grid.Col xs={12} sm={12} md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.classes.title\")}</h5>\n              {t(\"shop.account.classes.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/classes\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col xs={12} sm={12} md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.subscriptions.title\")}</h5>\n              {t(\"shop.account.subscriptions.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/subscriptions\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col xs={12} sm={12} md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.classpasses.title\")}</h5>\n              {t(\"shop.account.classpasses.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/classpasses\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col xs={12} sm={12} md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.event_tickets.title\")}</h5>\n              {t(\"shop.account.event_tickets.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/event_tickets\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n      <hr />\n      {/* Administrative stuff below this point, profile, invoices, orders, etc. */}\n      <Grid.Row>\n        <Grid.Col xs={12} sm={12} md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.profile.title\")}</h5>\n              {t(\"shop.account.profile.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/profile\" buttonText={t(\"shop.account.btn_text_profile_edit\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col xs={12} sm={12} md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.bank_account.title\")}</h5>\n              {t(\"shop.account.bank_account.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/bank_account\" buttonText={t(\"shop.account.btn_text_profile_edit\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col xs={12} sm={12} md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.orders.title\")}</h5>\n              {t(\"shop.account.orders.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/orders\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col xs={12} sm={12} md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.invoices.title\")}</h5>\n              {t(\"shop.account.invoices.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/invoices\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col xs={12} sm={12} md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.change_password.title\")}</h5>\n              {t(\"shop.account.change_password.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/user/password/change/\" buttonText={t(\"shop.account.btn_text_change_password\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col xs={12} sm={12} md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.sign_out.title\")}</h5>\n              {t(\"shop.account.sign_out.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/user/logout/\" buttonText={t(\"shop.account.btn_text_sign_out\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountHomeBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountHome))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_BANK_ACCOUNTS = gql`\n  query AccountBankAccounts($before: String, $after: String, $account: ID!) {\n    accountBankAccounts(first: 1, before: $before, after: $after, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          number\n          holder\n          bic\n        }\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`\n\n\nexport const UPDATE_BANK_ACCOUNT = gql`\n  mutation UpdateBankAccount($input:UpdateAccountBankAccountInput!) {\n    updateAccountBankAccount(input: $input) {\n      accountBankAccount {\n        id\n      }\n    }\n  }\n`","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport ButtonBack from \"../../ui/ButtonBack\"\n\n\nfunction ShopAccountBack({ t, returnUrl=\"/shop/account\" }) {\n  \n  return (\n    <ButtonBack returnUrl={returnUrl} />\n  )\n}\n\nexport default withTranslation()(ShopAccountBack)\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../SiteWrapperShop\"\nimport ShopAccountBack from \"./ShopAccountBack\"\n\n\nfunction ShopAccountProfileBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n          </Page.Header>\n          { children }\n        </Container>\n      </div>\n    </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountProfileBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nconst ShopAccountBankAccountForm = ({ t, history, isSubmitting, errors, returnUrl }) => (\n  <FoForm>\n    <Card title={t(\"shop.account.bank_account.title\")} >\n    <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.bank_accounts.holder')}>\n              <Field type=\"text\" \n                      name=\"holder\" \n                      className={(errors.holder) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"bic\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.bank_accounts.number')}>\n              <Field type=\"text\" \n                      name=\"number\" \n                      className={(errors.number) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"number\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.bank_accounts.bic')}>\n              <Field type=\"text\" \n                      name=\"bic\" \n                      className={(errors.bic) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"bic\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </Card>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(ShopAccountBankAccountForm))\n\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_BANK_ACCOUNT_SCHEMA = Yup.object().shape({\n    holder: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n    number: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Grid,\n} from \"tabler-react\";\n\nimport CSLS from '../../../../tools/cs_local_storage'\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\nimport { GET_ACCOUNT_BANK_ACCOUNTS, UPDATE_BANK_ACCOUNT } from \"./queries\"\n\nimport ShopAccountProfileBase from \"../ShopAccountProfileBase\"\nimport ShopAccountBankAccountForm from \"./ShopAccountBankAccountForm\"\nimport { ACCOUNT_BANK_ACCOUNT_SCHEMA } from \"./yupSchema\"\n\n\nfunction ShopAccountBankAccount({t, match, history}) {\n  // TODO fetch returnUrl from local storage to see if the user comes from a shop subscription component\n  const nextUrl = localStorage.getItem(CSLS.SHOP_ACCOUNT_BANK_ACCOUNT_NEXT)\n\n  // Chain queries. First query user data and then query class attendance for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_BANK_ACCOUNTS, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })\n  const [ updateBankAccount ] = useMutation(UPDATE_BANK_ACCOUNT)\n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountProfileBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountProfileBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountProfileBase>\n      {t(\"shop.account.bank_account.error_loading_data\")}\n    </ShopAccountProfileBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  console.log(dataUser)\n  const user = dataUser.user\n  const bankAccount = data.accountBankAccounts.edges[0].node\n\n  return (\n    <ShopAccountProfileBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <Formik\n            initialValues={{ \n              number: bankAccount.number,\n              holder: bankAccount.holder,\n              bic: bankAccount.bic\n            }}\n            validationSchema={ACCOUNT_BANK_ACCOUNT_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                let input_vars = {\n                  id: bankAccount.id,\n                  number: values.number,\n                  holder: values.holder,\n                  bic: values.bic\n                }\n\n                updateBankAccount({ variables: {\n                  input: input_vars\n                }, refetchQueries: [\n                    // // Refetch list\n                    // {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()},\n                    // // Refresh local cached results for this account\n                    // {query: GET_ACCOUNT_QUERY, variables: {\"id\": match.params.account_id}}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    if (nextUrl) {\n                      history.push(nextUrl)\n                    }\n\n                    toast.success((t('shop.account.bank_account.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    setSubmitting(false)\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values }) => (\n              <ShopAccountBankAccountForm\n                isSubmitting={isSubmitting}\n                errors={errors}\n                values={values}\n                returnUrl={\"/shop/account\"}\n              />\n            )}\n          </Formik>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountProfileBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountBankAccount))","import React from 'react'\nimport moment from 'moment'\nimport { TimeStringToJSDateOBJ } from '../../tools/date_tools'\n\n\nexport function DisplayClassInfo({t, classDate, classData, dateFormat, timeFormat }) {\n    return (\n      <div>\n        <b>\n          {moment(classDate).format(dateFormat)} {' '}\n          {moment(TimeStringToJSDateOBJ(classData.scheduleClass.timeStart)).format(timeFormat)} {' - '}\n          {moment(TimeStringToJSDateOBJ(classData.scheduleClass.timeEnd)).format(timeFormat)} <br />  \n        </b>\n        {classData.scheduleClass.organizationClasstype.name + \" \" + t(\"general.at\") + ' ' + \n          classData.scheduleClass.organizationLocationRoom.organizationLocation.name}\n      </div>\n    )\n}","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ACCOUNT_CLASS_QUERY = gql`\n  query ScheduleItemAttendance($scheduleItemId:ID!, $date:Date!, $id: ID!) {\n    scheduleClass(scheduleItemId: $scheduleItemId, date:$date) {\n      scheduleItemId\n      frequencyType\n      date\n      organizationClasstype {\n        name\n      }\n      organizationLocationRoom {\n        organizationLocation {\n          name\n        }\n      }\n          timeStart\n      timeEnd\n      infoMailContent\n    }\n    scheduleItemAttendance(id: $id) {\n      id\n      cancellationPossible\n      attendanceType\n      date\n      bookingStatus\n      scheduleItem {\n        id\n        timeStart\n        timeEnd\n        organizationLocationRoom {\n          name\n          organizationLocation {\n            name\n          }\n        }\n        organizationClasstype {\n          name\n        }\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Container,\n  Icon,\n  Page\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\n\n\nfunction ShopAccountClassCancelBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header \n              title={t(\"shop.account.title\")} \n              subTitle={ accountName }\n            >\n              <div className=\"page-options d-flex\">\n                <Link to={\"/shop/account/classes\"}\n                      className='btn btn-secondary'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')} \n                </Link>\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountClassCancelBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table\n} from \"tabler-react\"\n\nimport { DisplayClassInfo } from \"../../tools\"\nimport { UPDATE_SCHEDULE_ITEM_ATTENDANCE } from \"../../../schedule/classes/class/attendance/queries\"\nimport { GET_ACCOUNT_CLASS_QUERY } from \"./queries\"\n// import { GET_SCHEDULE_CLASS_QUERY } from \"../../checkout/class_info/queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\nimport ShopAccountClassCancelBase from \"./ShopAccountClassCancelBase\"\n\n\n\nfunction ShopAccountClassCancel({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const attendanceId = match.params.attendance_id\n  const scheduleItemId = match.params.class_id\n  const date = match.params.date\n  const { loading: loadingAttendance, error: errorAttendance, data: dataAttendance } = useQuery(GET_ACCOUNT_CLASS_QUERY, {\n    variables: { \n      id: attendanceId,\n      scheduleItemId: scheduleItemId,\n      date: date\n    }\n  })\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const [updateScheduleItemAttendance] = useMutation(UPDATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loadingUser || loadingAttendance) return (\n    <ShopAccountClassCancelBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountClassCancelBase>\n  )\n  if (errorUser || errorAttendance) return (\n    <ShopAccountClassCancelBase>\n      {t(\"shop.account.class_info.error_loading_data\")}\n    </ShopAccountClassCancelBase>\n  )\n\n  const user = dataUser.user\n  console.log(dataUser)\n  console.log(dataAttendance)\n  const scheduleItemAttendance = dataAttendance.scheduleItemAttendance\n\n  // Booking already cancelled\n  if (scheduleItemAttendance.bookingStatus == 'CANCELLED') {\n    return (\n      <ShopAccountClassCancelBase accountName={user.fullName}>\n        <Card title={t(\"shop.account.class_cancel.title_already_cancelled\")}>\n          <Card.Body>\n            <h5>{t(\"shop.account.class_cancel.already_cancelled\")}</h5>\n          </Card.Body>\n        </Card>\n      </ShopAccountClassCancelBase>\n    )\n  }\n\n  // Cancellation no longer possible\n  if (!scheduleItemAttendance.cancellationPossible) {\n    return (\n      <ShopAccountClassCancelBase accountName={user.fullName}>\n        <Card title={t(\"shop.account.class_cancel.title_cancelation_not_possible\")}>\n          <Card.Body>\n            <h5>{t(\"shop.account.class_cancel.cancelation_not_possible\")}</h5>\n          </Card.Body>\n        </Card>\n      </ShopAccountClassCancelBase>\n    )\n  }\n\n  // Show cancel option\n  return (\n    <ShopAccountClassCancelBase accountName={user.fullName}>\n      <Card title={t(\"shop.account.class_cancel.title\")}>\n        <Card.Body>\n          {/* TODO: Check if class already cancelled */}\n          <h5>\n            {t(\"shop.account.class_cancel.confirmation_question\")}\n          </h5>\n            <DisplayClassInfo\n              t={t}\n              classDate={date}\n              classData={dataAttendance}\n              dateFormat={dateFormat}\n              timeFormat={timeFormat}\n            />\n            <br />\n            <Button\n              className=\"mr-4\"\n              color=\"warning\"\n              onClick={() =>\n                updateScheduleItemAttendance({ variables: {\n                  input: {\n                    id: attendanceId,\n                    bookingStatus: \"CANCELLED\"\n                  }\n                }})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(\"/shop/account/classes\")\n                    toast.success((t('shop.account.class_cancel.success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                  })\n                }\n            >\n              {t(\"shop.account.class_cancel.confirm_yes\")}\n            </Button>\n            <Link to={\"/shop/account/classes\"}>\n              {t(\"shop.account.class_cancel.confirm_no\")}\n            </Link>\n        </Card.Body>\n      </Card>\n    </ShopAccountClassCancelBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountClassCancel))\n\n\n{/* <Button \nclassName=\"pull-right\"\ncolor=\"warning\"\nonClick={() =>\n  updateAccountScheduleEventTicket({ variables: {\n    input: {\n      id: node.id,\n      cancelled: true\n    }\n  }, refetchQueries: [\n      {query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n        scheduleEventTicket: id\n      }},\n  ]})\n  .then(({ data }) => {\n      console.log('got data', data);\n      toast.success((t('schedule.events.tickets.customers.cancelled')), {\n          position: toast.POSITION.BOTTOM_RIGHT\n        })\n      setShowSearch(false)\n    }).catch((error) => {\n      toast.error((t('general.toast_server_error')) +  error, {\n          position: toast.POSITION.BOTTOM_RIGHT\n        })\n      console.log('there was an error sending the query', error)\n      setShowSearch(false)\n    })\n  }\n>\n  {t(\"general.cancel\")}\n</Button> */}","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_CLASS_QUERY = gql`\n  query ScheduleClass($scheduleItemId:ID!, $date:Date!) {\n    scheduleClass(scheduleItemId: $scheduleItemId, date:$date) {\n      scheduleItemId\n      frequencyType\n      date\n      organizationClasstype {\n        name\n      }\n      organizationLocationRoom {\n        organizationLocation {\n          name\n        }\n      }\n          timeStart\n      timeEnd\n      infoMailContent\n    }\n  }\n`\n\n\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { v4 } from 'uuid'\nimport moment from 'moment'\n\nimport {\n  Card,\n  Icon,\n  Table,\n} from \"tabler-react\";\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport { DisplayClassInfo } from \"../../tools\"\nimport { GET_SCHEDULE_CLASS_QUERY } from \"./queries\"\n\n\nfunction ShopCheckoutClassInfo({ t, scheduleItemId, date, complete=true}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n\n  console.log(scheduleItemId)\n  console.log(date)\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_CLASS_QUERY, {\n    variables: { \n      scheduleItemId: scheduleItemId,\n      date: date\n    }\n  })\n\n  if (loading) return (\n      t(\"general.loading_with_dots\")\n  )\n  if (error) return (\n      t(\"shop.checkout.class_info.error_loading\")\n  )\n\n  console.log(data)\n\n  return (\n    (!loading && !error) ?\n      <div className=\"text-muted\">\n        <h5><Icon name=\"book\" /> {\n          (complete) ? t(\"shop.checkout.class_info.have_been_checked_in\")\n                     : t(\"shop.checkout.class_info.will_be_checked_in\") \n        }</h5>\n        {/* Class display info $ mail content */}\n        <DisplayClassInfo \n          t={t} \n          classDate={date}\n          classData={data} \n          dateFormat={dateFormat} \n          timeFormat={timeFormat}\n        />\n        <br />\n        {(data.scheduleClass.infoMailContent) ? \n          <div>\n            <h5><Icon name=\"info\" /> {t(\"shop.checkout.class_info.info_mail\")}</h5>\n            <div dangerouslySetInnerHTML={{ __html: data.scheduleClass.infoMailContent }} /> \n          </div>\n          : \"\"\n        }\n      </div> \n      : \"\"\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutClassInfo))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Container,\n  Icon,\n  Page\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\n\n\nfunction ShopAccountClassInfoBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header \n              title={t(\"shop.account.title\")} \n              subTitle={ accountName }\n            >\n              <div className=\"page-options d-flex\">\n                <Link to={\"/shop/account/classes\"}\n                      className='btn btn-secondary'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')} \n                </Link>\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountClassInfoBase))","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table\n} from \"tabler-react\"\n\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\nimport ShopCheckoutClassInfo from \"../../checkout/class_info/ShopCheckoutClassInfo\"\nimport ShopAccountClassInfoBase from \"./ShopAccountClassInfoBase\"\n\n\n\nfunction ShopAccountClassInfo({t, match, history}) {\n  const { loading, error, data } = useQuery(GET_USER_PROFILE)\n  const scheduleItemId = match.params.class_id\n  const date = match.params.date \n\n  if (loading) return (\n    <ShopAccountClassInfoBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountClassInfoBase>\n  )\n  if (error) return (\n    <ShopAccountClassInfoBase>\n      {t(\"shop.account.class_info.error_loading_data\")}\n    </ShopAccountClassInfoBase>\n  )\n\n  const user = data.user\n\n  // Populated list\n  return (\n    <ShopAccountClassInfoBase accountName={user.fullName}>\n      <Card title={t(\"shop.account.class_info.title\")}>\n        <Card.Body>\n          <ShopCheckoutClassInfo\n            scheduleItemId={scheduleItemId}\n            date={date}\n            complete={true}\n          />\n        </Card.Body>\n      </Card>\n    </ShopAccountClassInfoBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountClassInfo))\n","import { gql } from \"@apollo/client\"\n\n\nexport const QUERY_ACCOUNT_CLASSPASSES = gql`\n  query AccountClasspass($before: String, $after: String, $account: ID!) {\n    accountClasspasses(first: 100, before: $before, after: $after, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          organizationClasspass {\n            name\n          }\n          dateStart\n          dateEnd\n          classesRemainingDisplay\n        }\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountProfileBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n          </Page.Header>\n          { children }\n        </Container>\n      </div>\n    </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountProfileBase))","// @flow\n\nimport React, { useContext} from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport {\n  Card,\n  Grid,\n  Table\n} from \"tabler-react\";\nimport { QUERY_ACCOUNT_CLASSPASSES } from \"./queries\"\n\nimport ShopAccountClasspassesBase from \"./ShopAccountClasspassesBase\"\nimport ContentCard from \"../../../general/ContentCard\"\n\n\nfunction ShopAccountClasspasses({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(QUERY_ACCOUNT_CLASSPASSES, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })\n  \n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountClasspassesBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountClasspassesBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountClasspassesBase>\n      {t(\"shop.account.classpasses.error_loading_data\")}\n    </ShopAccountClasspassesBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = data.user\n  const classpasses = data.accountClasspasses\n\n  // Empty list\n  if (!classpasses.edges.length) {\n    return (\n      <ShopAccountClasspassesBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.classpasses.title')} >\n              <Card.Body>\n                {t('shop.account.classpasses.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountClasspassesBase>\n    )  \n  }\n\n  // Populated list\n  return (\n    <ShopAccountClasspassesBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <ContentCard cardTitle={t('shop.account.classpasses.title')}\n            // headerContent={headerOptions}\n            pageInfo={classpasses.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: classpasses.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.accountClasspasses.edges\n                  const pageInfo = fetchMoreResult.accountClasspasses.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        accountClasspasses: {\n                          __typename: previousResult.accountClasspasses.__typename,\n                          edges: [ ...previousResult.accountClasspasses.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.classes_remaining')}</Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {classpasses.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      {node.organizationClasspass.name}\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateStart).format(dateFormat)}\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateEnd).format(dateFormat)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.classesRemainingDisplay}\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </ContentCard>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountClasspassesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountClasspasses))","// @flow\n\nimport React, { useContext} from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport {\n  Badge,\n  Card,\n  Grid,\n  Table\n} from \"tabler-react\";\nimport { GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY } from \"../../../relations/accounts/schedule_event_tickets/queries\"\n\nimport ShopAccountProfileBase from \"../ShopAccountProfileBase\"\nimport ContentCard from \"../../../general/ContentCard\"\n\n\nfunction ShopAccountEventTickets({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })  \n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountProfileBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountProfileBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountProfileBase>\n      {t(\"shop.account.event_tickets.error_loading_data\")}\n    </ShopAccountProfileBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(dataUser)\n  const user = dataUser.user\n  const eventTickets = data.accountScheduleEventTickets\n\n  // Empty list\n  if (!eventTickets.edges.length) {\n    return (\n      <ShopAccountProfileBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.event_tickets.title')} >\n              <Card.Body>\n                {t('shop.account.event_tickets.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountProfileBase>\n    )  \n  }\n\n  // Populated list\n  return (\n    <ShopAccountProfileBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <ContentCard cardTitle={t('shop.account.event_tickets.title')}\n            // headerContent={headerOptions}\n            pageInfo={eventTickets.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: eventTickets.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.accountScheduleEventTickets.edges\n                  const pageInfo = fetchMoreResult.accountScheduleEventTickets.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new tickets at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        eventTickets: {\n                          __typename: previousResult.accountScheduleEventTickets.__typename,\n                          edges: [ ...previousResult.accountScheduleEventTickets.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.ticket')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.start')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {eventTickets.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      {node.scheduleEventTicket.scheduleEvent.name} <br />\n                      <Badge>{node.scheduleEventTicket.name}</Badge> {\" \"}\n                      {(node.cancelled) ? <Badge color=\"warning\">{t(\"general.cancelled\")}</Badge> : \"\"}\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.scheduleEventTicket.scheduleEvent.dateStart).format(dateFormat)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.scheduleEventTicket.scheduleEvent.organizationLocation.name}\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </ContentCard>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountProfileBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountEventTickets))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_INVOICE_QUERY = gql`\n  query FinanceInvoice($id: ID!) {\n    financeInvoice(id:$id) {\n      id\n      account {\n        id\n        fullName\n      }\n      financePaymentMethod {\n        id\n        name\n      }\n      relationCompany\n      relationCompanyRegistration\n      relationCompanyTaxRegistration\n      relationContactName\n      relationAddress\n      relationPostcode\n      relationCity\n      relationCountry\n      status\n      summary\n      invoiceNumber\n      dateSent\n      dateDue\n      terms\n      footer\n      note\n      subtotalDisplay\n      taxDisplay\n      total\n      totalDisplay\n      paidDisplay\n      balance\n      balanceDisplay\n      creditInvoiceNumber\n      updatedAt\n      items {\n        edges {\n          node {\n            id\n            lineNumber\n            productName\n            description\n            quantity\n            price\n            financeTaxRate {\n              id\n              name\n              percentage\n              rateType\n            }\n            subtotal\n            subtotalDisplay\n            tax\n            taxDisplay\n            total\n            totalDisplay\n            financeGlaccount {\n              id\n              name\n            }\n            financeCostcenter {\n              id\n              name\n            }\n          }\n        }\n      }\n      payments {\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            id\n            amount\n            amountDisplay\n            date\n            financePaymentMethod {\n              id\n              name\n            }\n            note\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const CREATE_PAYMENT_LINK = gql`\nmutation CreateFinanceInvoicePaymentLink($id: ID!) {\n  createFinanceInvoicePaymentLink(id: $id) {\n    financeInvoicePaymentLink {\n      paymentLink\n    }\n  }\n}\n`\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountInvoicePaymentBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack returnUrl=\"/shop/account/invoices\"/>\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountInvoicePaymentBase))","// @flow\n\nimport React, { useContext, useRef, useState } from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceInvoicesStatus from \"../../../ui/FinanceInvoiceStatus\"\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table,\n  Text\n} from \"tabler-react\"\nimport { GET_INVOICE_QUERY, CREATE_PAYMENT_LINK } from \"./queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountInvoicePaymentBase from \"./ShopAccountInvoicePaymentBase\"\n\n\nfunction ShopAccountInvoicePayment({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n  const onlinePaymentsAvailable = appSettings.onlinePaymentsAvailable\n\n  const id = match.params.id\n  const cardTitleLoadingError = t(\"shop.account.invoice_payment.title\")\n\n  const btnPayNow = useRef(null);\n  const initialBtnText = <span><Icon name=\"credit-card\" /> {t('shop.checkout.payment.to_payment')} <Icon name=\"chevron-right\" /></span>\n  const [btn_text, setBtnText] = useState(initialBtnText)\n\n  // Chain queries. First query user data and then query invoices for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(GET_INVOICE_QUERY, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      id: id\n    }\n  })\n\n  const [createPaymentLink] = useMutation(CREATE_PAYMENT_LINK)\n\n  function onClickPay() {\n    btnPayNow.current.setAttribute(\"disabled\", \"disabled\")\n    setBtnText(t(\"shop.checkout.payment.redirecting\"))\n    // btnPayNow.current.setValue(\"redirecting...\")\n    // btnPayNow\n    // btnPayNow.current.removeAttribute(\"disabled\")\n    createPaymentLink({ variables: { id: id } }).then(({ data }) => {\n      console.log('got data', data);\n      const paymentLink = data.createFinanceInvoicePaymentLink.financeInvoicePaymentLink.paymentLink\n      window.location.href = paymentLink\n    }).catch((error) => {\n      toast.error((t('general.toast_server_error')) +  error, {\n          position: toast.POSITION.BOTTOM_RIGHT\n        })\n      console.log('there was an error sending the query', error)\n    })\n  }\n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountInvoicePaymentBase>\n      <Card title={cardTitleLoadingError}>\n        <Card.Body>\n          {t(\"general.loading_with_dots\")}\n        </Card.Body>\n      </Card>\n    </ShopAccountInvoicePaymentBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountInvoicePaymentBase>\n      <Card title={cardTitleLoadingError}>\n        <Card.Body>\n          {t(\"shop.account.invoice_payment.error_loading_data\")}\n        </Card.Body>\n      </Card>\n    </ShopAccountInvoicePaymentBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = dataUser.user\n  const invoice = data.financeInvoice\n\n  \n  return (\n    <ShopAccountInvoicePaymentBase accountName={user.fullName}>\n      <Card title={<span>{t(\"general.invoice\")} #{invoice.invoiceNumber}</span>}>\n        <Card.Body>\n          { invoice.items.edges.map(({ node }) => (\n            <Grid.Row>\n              <Grid.Col md={9}>\n                {node.productName} <br />\n                <small className=\"text-muted\">\n                  {node.description}\n                </small>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <span className=\"float-right\">\n                  {node.totalDisplay}\n                </span>\n              </Grid.Col>\n            </Grid.Row>\n          ))}\n          {/* Total */}\n          <Grid.Row>\n            <Grid.Col md={9} className=\"bold\">\n              <br />\n              {t(\"general.total\")}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <span className=\"bold float-right\">\n                <br />\n                {invoice.totalDisplay}\n              </span>\n            </Grid.Col>\n          </Grid.Row>\n        </Card.Body>\n        <Card.Footer>\n          <button\n            className=\"btn float-right btn-success\"\n            ref={btnPayNow}\n            onClick={ onClickPay }\n          >\n            {btn_text}\n          </button>\n        </Card.Footer>\n      </Card>\n    </ShopAccountInvoicePaymentBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountInvoicePayment))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountInvoicePaymentStatusBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              {/* <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div> */}\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountInvoicePaymentStatusBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceInvoicesStatus from \"../../../ui/FinanceInvoiceStatus\"\n\nimport {\n  Alert,\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table,\n  Text\n} from \"tabler-react\"\nimport { GET_INVOICE_QUERY } from \"../invoice_payment/queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountInvoicePaymentStatusBase from \"./ShopAccountInvoicePaymentStatusBase\"\n\n\nfunction ShopAccountInvoicePaymentStatus({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n  const onlinePaymentsAvailable = appSettings.onlinePaymentsAvailable\n\n  const id = match.params.id\n  const cardTitleLoadingError = t(\"shop.account.invoice_payment.title\")\n\n  // Chain queries. First query user data and then query invoices for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(GET_INVOICE_QUERY, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      id: id\n    }\n  })\n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountInvoicePaymentStatusBase>\n      <Card title={cardTitleLoadingError}>\n        <Card.Body>\n          {t(\"general.loading_with_dots\")}\n        </Card.Body>\n      </Card>\n    </ShopAccountInvoicePaymentStatusBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountInvoicePaymentStatusBase>\n      <Card title={cardTitleLoadingError}>\n        <Card.Body>\n          {t(\"shop.account.invoice_payment_status.error_loading_data\")}\n        </Card.Body>\n      </Card>\n    </ShopAccountInvoicePaymentStatusBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = dataUser.user\n  const invoice = data.financeInvoice\n\n  let alert\n  if (invoice.status == \"PAID\") {\n    alert = <Alert type=\"success\" icon=\"check\">\n      {t(\"shop.account.invoice_payment_status.payment_received\")}\n    </Alert>\n  } else {\n    alert = <Alert type=\"primary\" icon=\"help-circle\">\n      {t(\"shop.account.invoice_payment_status.payment_not_confirmed\")}\n    </Alert>\n  }\n\n  \n  return (\n    <ShopAccountInvoicePaymentStatusBase accountName={user.fullName}>\n      {alert}\n      <Card title={<span>{t(\"general.invoice\")} #{invoice.invoiceNumber}</span>}>\n        <Card.Body>\n          { invoice.items.edges.map(({ node }) => (\n            <Grid.Row>\n              <Grid.Col md={9}>\n                {node.productName} <br />\n                <small className=\"text-muted\">\n                  {node.description}\n                </small>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <span className=\"float-right\">\n                  {node.totalDisplay}\n                </span>\n              </Grid.Col>\n            </Grid.Row>\n          ))}\n          {/* Total */}\n          <Grid.Row>\n            <Grid.Col md={9} className=\"bold\">\n              <br />\n              {t(\"general.total\")}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <span className=\"bold float-right\">\n                <br />\n                {invoice.totalDisplay}\n              </span>\n            </Grid.Col>\n          </Grid.Row>\n        </Card.Body>\n        <Card.Footer>\n          <Link to=\"/shop/account/invoices\">\n            <Button \n              color=\"primary\"\n              className=\"float-right\"\n            >\n              {t(\"shop.account.invoice_payment_status.to_profile\")} <Icon name=\"chevron-right\" />\n            </Button>\n          </Link>\n        </Card.Footer>\n      </Card>\n    </ShopAccountInvoicePaymentStatusBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountInvoicePaymentStatus))","import { gql } from \"@apollo/client\"\n\n\nexport const QUERY_ACCOUNT_INVOICES = gql`\n  query FinanceInvoices($after: String, $before: String, $account: ID!) {\n    financeInvoices(first: 15, before: $before, after: $after, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          invoiceNumber\n          status\n          summary\n          relationCompany\n          relationContactName\n          dateSent\n          dateDue\n          total\n          totalDisplay\n          balance\n          balanceDisplay\n        }\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountInvoicesBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountInvoicesBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceInvoicesStatus from \"../../../ui/FinanceInvoiceStatus\"\nimport { TOKEN_REFRESH } from \"../../../../queries/system/auth\"\nimport { refreshTokenAndOpenExportLinkInNewTab } from \"../../../../tools/refresh_token_and_open_export_link\"\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table,\n  Text\n} from \"tabler-react\"\nimport { QUERY_ACCOUNT_INVOICES, CREATE_PAYMENT_LINK } from \"./queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\nimport LoadMoreOnBottomScroll from \"../../../general/LoadMoreOnBottomScroll\"\n\nimport ShopAccountInvoicesBase from \"./ShopAccountInvoicesBase\"\n\n\nfunction ShopAccountInvoices({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n  const onlinePaymentsAvailable = appSettings.onlinePaymentsAvailable\n\n  // Chain queries. First query user data and then query invoices for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(QUERY_ACCOUNT_INVOICES, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountInvoicesBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountInvoicesBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountInvoicesBase>\n      {t(\"shop.account.classpasses.error_loading_data\")}\n    </ShopAccountInvoicesBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = dataUser.user\n  const invoices = data.financeInvoices\n\n  // Empty list\n  if (!invoices.edges.length) {\n    return (\n      <ShopAccountInvoicesBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.invoices.title')} >\n              <Card.Body>\n                {t('shop.account.invoices.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountInvoicesBase>\n    )  \n  }\n\n  // Populated list\n  return (\n    <ShopAccountInvoicesBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <LoadMoreOnBottomScroll\n            // headerContent={headerOptions}\n            pageInfo={invoices.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: invoices.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.financeInvoices.edges\n                  const pageInfo = fetchMoreResult.financeInvoices.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        financeInvoices: {\n                          __typename: previousResult.financeInvoices.__typename,\n                          edges: [ ...previousResult.financeInvoices.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} \n          >\n            <h4>{t(\"shop.account.invoices.title\")}</h4>\n            <Grid.Row>\n              {invoices.edges.map(({ node }) => (\n                <Grid.Col xs={12} sm={12} md={4} lg={4}>\n                  <Card>\n                    <Card.Header>\n                      <Card.Title>{node.invoiceNumber}</Card.Title>\n                      <Card.Options>\n                        <FinanceInvoicesStatus status={node.status}/>\n                      </Card.Options>\n                    </Card.Header>\n                    <Card.Body>\n                      <span className=\"text-bold\">\n                        {node.summary}\n                      </span>\n                    </Card.Body>\n                      <Table cards>\n                        <Table.Body>\n                          <Table.Row>\n                            <Table.ColHeader>{t(\"general.date\")}</Table.ColHeader>\n                            <Table.Col>{moment(node.dateSent).format(dateFormat)}</Table.Col>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.ColHeader>{t(\"finance.invoices.due\")}</Table.ColHeader>\n                            <Table.Col>{moment(node.dateDue).format(dateFormat)}</Table.Col>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.ColHeader>{t(\"general.total\")}</Table.ColHeader>\n                            <Table.Col>{node.totalDisplay}</Table.Col>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.ColHeader>{t(\"general.balance\")}</Table.ColHeader>\n                            <Table.Col>{node.balanceDisplay}</Table.Col>\n                          </Table.Row>\n                        </Table.Body>\n                      </Table>\n                    <Card.Footer>\n                      {(node.status == \"SENT\" && onlinePaymentsAvailable) ?\n                        <Link to={\"/shop/account/invoice_payment/\" + node.id}>\n                          <Button\n                            className=\"float-right\"\n                            color=\"success\"\n                          >\n                            {t('shop.account.invoices.to_payment')} <Icon name=\"chevron-right\" />\n                          </Button>\n                        </Link>\n                        : \"\"\n                      }  \n                      <Button \n                        color=\"secondary\"\n                        icon=\"printer\"\n                        onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n                          doTokenRefresh, history, `/d/export/invoice/pdf/${node.id}`\n                        )}\n                      >\n                        {t('general.pdf')}\n                      </Button>              \n                    </Card.Footer>\n                  </Card>\n                </Grid.Col>\n              ))}\n            </Grid.Row>\n          </LoadMoreOnBottomScroll>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountInvoicesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountInvoices))","import { gql } from \"@apollo/client\"\n\n\nexport const QUERY_ACCOUNT_ORDERS = gql`\n  query FinanceOrders($after: String, $before: String, $account: ID!) {\n    financeOrders(first: 15, before: $before, after: $after, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          orderNumber\n          account {\n            id\n            fullName\n          }\n          message\n          status\n          total\n          totalDisplay\n          createdAt\n          items(first: 100) {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n              startCursor\n              endCursor\n            }\n            edges {\n              node {\n                id\n                productName\n                description\n                quantity\n                priceDisplay\n                financeTaxRate {\n                  id\n                  name\n                  percentage\n                  rateType\n                }\n                subtotalDisplay\n                taxDisplay\n                totalDisplay                \n              }\n            }\n          }\n        }\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`\n\n\nexport const UPDATE_ORDER = gql`\n  mutation UpdateOrder($input: UpdateFinanceOrderInput!) {\n    updateFinanceOrder(input: $input) {\n      financeOrder {\n        id\n        status\n      }\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountOrdersBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountOrdersBase))","export function get_order_card_status_color(status) {\n    switch(status) {\n        case (\"RECEIVED\"): \n          return \"blue\"\n          break\n        case (\"AWAITING_PAYMENT\"): \n          return \"blue\"\n          break\n        case (\"PAID\"):\n          return \"green\"\n          break\n        case (\"DELIVERED\"):\n          return \"green\"\n          break\n        case \"CANCELLED\":\n          return \"orange\"\n          break\n        default:\n          return \"\"\n      }\n}","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceOrderStatus from \"../../../finance/orders/FinanceOrderStatus\"\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table\n} from \"tabler-react\"\nimport { QUERY_ACCOUNT_ORDERS, UPDATE_ORDER } from \"./queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountOrdersBase from \"./ShopAccountOrdersBase\"\nimport { cancelOrder } from \"./ShopAccountOrderCancel\"\nimport LoadMoreOnBottomScroll from \"../../../general/LoadMoreOnBottomScroll\"\n\nimport { get_order_card_status_color } from \"./tools\"\n\nfunction ShopAccountOrders({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n  const onlinePaymentsAvailable = appSettings.onlinePaymentsAvailable\n\n  // Chain queries. First query user data and then query orders for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(QUERY_ACCOUNT_ORDERS, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })\n  const [ updateOrder ] = useMutation(UPDATE_ORDER)\n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountOrdersBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountOrdersBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountOrdersBase>\n      {t(\"shop.account.classpasses.error_loading_data\")}\n    </ShopAccountOrdersBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = dataUser.user\n  const orders = data.financeOrders\n\n  // Empty list\n  if (!orders.edges.length) {\n    return (\n      <ShopAccountOrdersBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.orders.title')} >\n              <Card.Body>\n                {t('shop.account.orders.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountOrdersBase>\n    )  \n  }\n\n  // Populated list\n  return (\n    <ShopAccountOrdersBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <LoadMoreOnBottomScroll\n            // headerContent={headerOptions}\n            pageInfo={orders.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: orders.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.financeOrders.edges\n                  const pageInfo = fetchMoreResult.financeOrders.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        financeOrders: {\n                          __typename: previousResult.financeOrders.__typename,\n                          edges: [ ...previousResult.financeOrders.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <h4>{t(\"shop.account.orders.title\")}</h4>\n            {orders.edges.map(({ node }) => (\n              <div>\n                <span className=\"pull-right\">\n                  <FinanceOrderStatus status={node.status} />\n                </span>\n                <small className=\"text-muted\">\n                  {moment(node.createdAt).format(dateTimeFormat)}\n                </small>\n                <Card statusColor={get_order_card_status_color(node.status)}>\n                  <Card.Header>\n                    <Card.Title>{t(\"general.order\") + \" #\" + node.orderNumber}</Card.Title>\n                    <Card.Options>\n                      {(node.status == \"RECEIVED\" || node.status == \"AWAITING_PAYMENT\") ?\n                        <Button\n                          outline\n                          color=\"warning\"\n                          size=\"sm\"\n                          onClick={() => cancelOrder({\n                            t: t,\n                            msgConfirm: t('shop.account.orders.msg_cancel_confirm'),\n                            msgDescription: <p>{t('general.order') + \" #\" + node.orderNumber}</p>, \n                            msgSuccess: t('shop.account.orders.order.cancelled'), \n                            cancelFunction: updateOrder, \n                            functionVariables: {\n                              variables: {\n                                input: {\n                                  id: node.id,\n                                  status: 'CANCELLED'\n                                }\n                              }\n                            }\n                          })}\n                        >\n                          {t('general.cancel')}\n                        </Button>\n                      : \"\"}\n                      {(node.status == \"AWAITING_PAYMENT\" && onlinePaymentsAvailable) ?\n                        <Link to={\"/shop/checkout/payment/\" + node.id}>\n                          <Button\n                            className=\"ml-4\"\n                            color=\"success\"\n                            size=\"sm\"\n                          >\n                            {t('shop.account.orders.to_payment')} <Icon name=\"chevron-right\" />\n                          </Button>\n                        </Link>\n                      : \"\"}\n                    </Card.Options>\n                  </Card.Header>\n                  <Table cards>\n                    <Table.Header>\n                      <Table.Row>\n                        <Table.ColHeader>{t(\"general.product\")}</Table.ColHeader>\n                        <Table.ColHeader>{t(\"general.description\")}</Table.ColHeader>\n                        <Table.ColHeader><span className=\"float-right\">{t(\"general.total\")}</span></Table.ColHeader>\n                      </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                      {node.items.edges.map(({ node }) => (\n                        <Table.Row>\n                          <Table.Col>{node.productName}</Table.Col>\n                          <Table.Col>{node.description}</Table.Col>\n                          <Table.Col><span className=\"float-right\">{node.totalDisplay}</span></Table.Col>\n                        </Table.Row>    \n                      ))}\n                      <Table.Row>\n                        <Table.Col></Table.Col>\n                        <Table.Col></Table.Col>\n                        <Table.Col><span className=\"bold float-right\">{node.totalDisplay}</span></Table.Col>\n                      </Table.Row>\n                    </Table.Body>\n                  </Table>\n                </Card>\n              </div>\n            ))}\n          </LoadMoreOnBottomScroll>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountOrdersBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountOrders))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { toast } from 'react-toastify'\nimport { confirmAlert } from 'react-confirm-alert'\nimport { v4 } from 'uuid'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nexport function cancelOrder({t, msgConfirm, msgDescription, msgSuccess, cancelFunction, functionVariables}) {\n  return (\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div key={v4()} className='custom-ui'>\n            <h1>{t('shop.account.orders.confirm_cancel')}</h1>\n            {msgConfirm}\n            {msgDescription}\n            <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('shop.account.orders.confirm_cancel_no')}</button>\n            <button\n              className=\"btn btn-warning btn-sm outline\"\n              onClick={() => {\n                cancelFunction(functionVariables)\n                  .then(({ data }) => {\n                    console.log('got data', data);\n                    toast.success(\n                      msgSuccess, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                  })\n                onClose()\n              }}\n            >\n              {t('shop.account.orders.confirm_cancel_yes')}\n            </button>\n          </div>\n        )\n      }\n    })\n  )\n}\n","import { gql } from \"@apollo/client\"\n\n\nexport const UPDATE_PROFILE = gql`\n  mutation UpdateAccount($input:UpdateAccountInput!) {\n    updateAccount(input: $input) {\n      account {\n        id\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`","import React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\n\nimport { TOKEN_REFRESH } from \"../../../../queries/system/auth\"\nimport { refreshTokenAndOpenExportLinkInNewTab } from \"../../../../tools/refresh_token_and_open_export_link\"\n\nimport {\n  Button,\n} from \"tabler-react\";\n\n\nfunction ShopAccountProfileBtnDownloadData({ t, history }) {\n  const export_url = \"/d/export/account_data\"\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n\n  //TODO Check if account data download feature is enabled\n\n  return (\n    <Button\n      color=\"secondary\"\n      icon=\"download\"\n      className=\"ml-2\"\n      onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n        doTokenRefresh, history, export_url\n      )}\n    >\n      {t('shop.account.profile.download_my_data')} \n    </Button>\n  )\n}\n\nexport default withTranslation()(ShopAccountProfileBtnDownloadData)\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\nimport ShopAccountProfileBtnDownloadData from './ShopAccountProfileBtnDownloadData'\n\n\nfunction ShopAccountProfileBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n            <div className=\"page-options d-flex\">\n              <ShopAccountBack />\n              <ShopAccountProfileBtnDownloadData />\n            </div>\n          </Page.Header>\n          { children }\n        </Container>\n      </div>\n    </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountProfileBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\nimport ISO_COUNTRY_CODES from \"../../../../tools/iso_country_codes\"\n\n\nconst ShopAccountProfileForm = ({ t, history, isSubmitting, errors, values, returnUrl, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n    <Card title={t(\"shop.accounts.profile.edit\")} >\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col xs={12} sm={12} md={6} lg={6}>\n            <Form.Group label={t('general.first_name')}>\n              <Field type=\"text\" \n                      name=\"firstName\" \n                      className={(errors.firstName) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"firstName\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col xs={12} sm={12} md={6} lg={6}>\n            <Form.Group label={t('general.last_name')}>\n              <Field type=\"text\" \n                      name=\"lastName\" \n                      className={(errors.lastName) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"lastName\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n         <Grid.Col xs={12} sm={12} md={6} lg={6}>\n            <Form.Group label={t('general.date_of_birth')}>\n              <CSDatePicker \n                selected={values.dateOfBirth}\n                onChange={(date) => setFieldValue(\"dateOfBirth\", date)}\n                onBlur={() => setFieldTouched(\"dateOfBirth\", true)}\n              />\n              <ErrorMessage name=\"dateOfBirth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col xs={12} sm={12} md={6} lg={6}>\n            <Form.Group label={t('general.gender')}>\n              <Field component=\"select\" \n                    name=\"gender\" \n                    className={(errors.organizationMembership) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\"></option>\n                <option value=\"F\">{t(\"genders.female\")}</option>\n                <option value=\"M\">{t(\"genders.male\")}</option>\n                <option value=\"X\">{t(\"genders.other\")}</option>\n              </Field>\n              <ErrorMessage name=\"gender\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={12} sm={12} md={6} lg={6}>\n            <Form.Group label={t('general.email')}>\n              <Field type=\"text\" \n                      name=\"email\" \n                      className={(errors.email) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"email\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col xs={12} sm={12} md={6} lg={6}>\n            <Form.Group label={t('relations.accounts.emergency')}>\n              <Field type=\"text\" \n                     name=\"emergency\" \n                     className={(errors.emergency) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"emergency\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={12} sm={12} md={6} lg={6}>\n            <Form.Group label={t('general.phone')}>\n              <Field type=\"text\" \n                      name=\"phone\" \n                      className={(errors.phone) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"phone\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col xs={12} sm={12} md={6} lg={6}>\n            <Form.Group label={t('general.mobile')}>\n              <Field type=\"text\" \n                     name=\"mobile\" \n                     className={(errors.mobile) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"mobile\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={12} sm={12} md={6} lg={6}>\n            <Form.Group label={t('general.address')}>\n              <Field type=\"text\" \n                      name=\"address\" \n                      className={(errors.address) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"address\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col xs={12} sm={12} md={6} lg={6}>\n            <Form.Group label={t('general.postcode')}>\n              <Field type=\"text\" \n                     name=\"postcode\" \n                     className={(errors.postcode) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"postcode\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={12} sm={12} md={6} lg={6}>\n            <Form.Group label={t('general.city')}>\n              <Field type=\"text\" \n                      name=\"city\" \n                      className={(errors.city) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"city\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col xs={12} sm={12} md={6} lg={6}>\n            <Form.Group label={t('general.country')}>\n              <Field component=\"select\" \n                     name=\"country\" \n                     className={(errors.country) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\">\n                <option value=\"\"></option>\n                { ISO_COUNTRY_CODES.map(\n                    country => <option value={country.Code} key={v4()}>{country.Name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"gender\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </Card>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(ShopAccountProfileForm))\n\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SCHEMA = Yup.object().shape({\n    firstName: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n    lastName: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n    email: Yup.string()\n      .email(t('yup.email'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\nimport { UPDATE_PROFILE } from \"./queries\"\n\nimport ShopAccountProfileBase from \"./ShopAccountProfileBase\"\nimport ShopAccountProfileForm from \"./ShopAccountProfileForm\"\n\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport { ACCOUNT_SCHEMA } from \"./yupSchema\"\n\n\nfunction ShopAccountProfile({t, match, history}) {\n  const { loading, error, data } = useQuery(GET_USER_PROFILE)\n  const [ updateProfile ] = useMutation(UPDATE_PROFILE)\n\n  if (loading) return (\n    <ShopAccountProfileBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountProfileBase>\n  )\n  if (error) return (\n    <ShopAccountProfileBase>\n      {t(\"shop.account.profile.error_loading_data\")}\n    </ShopAccountProfileBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = data.user\n\n  let dateOfBirth = null\n  if (user.dateOfBirth) {\n    dateOfBirth = new Date(user.dateOfBirth)\n  }\n\n  return (\n    <ShopAccountProfileBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <Formik\n            initialValues={{ \n              firstName: user.firstName, \n              lastName: user.lastName, \n              email: user.email,\n              dateOfBirth: dateOfBirth,\n              gender: user.gender,\n              emergency: user.emergency,\n              phone: user.phone,\n              mobile: user.mobile,\n              address: user.address,\n              postcode: user.postcode,\n              city: user.city,\n              country: user.country\n            }}\n            validationSchema={ACCOUNT_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                let input_vars = {\n                  id: user.accountId,\n                  firstName: values.firstName,\n                  lastName: values.lastName,\n                  email: values.email,\n                  gender: values.gender,\n                  emergency: values.emergency,\n                  phone: values.phone,\n                  mobile: values.mobile,\n                  address: values.address,\n                  postcode: values.postcode,\n                  city: values.city,\n                  country: values.country\n                }\n\n                if (values.dateOfBirth) {\n                  input_vars['dateOfBirth'] = dateToLocalISO(values.dateOfBirth)\n                } \n\n                updateProfile({ variables: {\n                  input: input_vars\n                }, refetchQueries: [\n                    // // Refetch list\n                    // {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()},\n                    // // Refresh local cached results for this account\n                    // {query: GET_ACCOUNT_QUERY, variables: {\"id\": match.params.account_id}}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    toast.success((t('shop.account.profile.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    setSubmitting(false)\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n              <ShopAccountProfileForm\n                isSubmitting={isSubmitting}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                errors={errors}\n                values={values}\n                returnUrl={\"/shop/account\"}\n              />\n            )}\n          </Formik>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountProfileBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountProfile))","import { gql } from \"@apollo/client\"\n\n\nexport const QUERY_ACCOUNT_SUBSCRIPTIONS = gql`\n  query AccountSubscriptions($before: String, $after: String, $account: ID!) {\n    accountSubscriptions(first: 100, before: $before, after: $after, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          organizationSubscription {\n            name\n          }\n          dateStart\n          dateEnd\n        }\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountProfileBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n          </Page.Header>\n          { children }\n        </Container>\n      </div>\n    </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountProfileBase))","// @flow\n\nimport React, { useContext} from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Card,\n  Grid,\n  Table\n} from \"tabler-react\";\nimport { QUERY_ACCOUNT_SUBSCRIPTIONS } from \"./queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountSubscriptionsBase from \"./ShopAccountSubscriptionsBase\"\nimport ContentCard from \"../../../general/ContentCard\"\n\n\nfunction ShopAccountSubscriptions({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  // Chain queries. First query user data and then query invoices for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(QUERY_ACCOUNT_SUBSCRIPTIONS, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })\n  \n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountSubscriptionsBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountSubscriptionsBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountSubscriptionsBase>\n      {t(\"shop.account.subscriptions.error_loading_data\")}\n    </ShopAccountSubscriptionsBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = data.user\n  const subscriptions = data.accountSubscriptions\n\n  // Empty list\n  if (!subscriptions.edges.length) {\n    return (\n      <ShopAccountSubscriptionsBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.subscriptions.title')} >\n              <Card.Body>\n                {t('shop.account.subscriptions.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountSubscriptionsBase>\n    )  \n  }\n\n  // Populated list\n  return (\n    <ShopAccountSubscriptionsBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <ContentCard cardTitle={t('shop.account.subscriptions.title')}\n            // headerContent={headerOptions}\n            pageInfo={subscriptions.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: subscriptions.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.accountSubscriptions.edges\n                  const pageInfo = fetchMoreResult.accountSubscriptions.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        accountSubscriptions: {\n                          __typename: previousResult.accountSubscriptions.__typename,\n                          edges: [ ...previousResult.accountSubscriptions.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {subscriptions.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      {node.organizationSubscription.name}\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateStart).format(dateFormat)}\n                    </Table.Col>\n                    <Table.Col>\n                      { (node.dateEnd) ? moment(node.dateEnd).format(dateFormat) : \"\" }\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </ContentCard>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountSubscriptionsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountSubscriptions))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nconst ShopClassBookBack = ({ t }) => (\n  <Link to={\"/shop/classes\"} >\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(withRouter(ShopClassBookBack))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Container,\n  Tag,\n} from \"tabler-react\";\n\n\nfunction ShopCheckoutProgress({ t, match, history, checkoutProgress=\"\" }) {\n  let color_order = \"\" \n  let color_payment = \"\"\n  let color_complete = \"\"\n\n  switch(checkoutProgress) {\n    case \"order\":\n      color_order = \"info\"\n      break\n    case \"payment\":\n      color_order = \"success\"\n      color_payment = \"info\"\n      break      \n    case \"complete\":\n      color_order = \"success\"\n      color_payment = \"success\"\n      color_complete = \"success\"\n      break      \n  }\n\n  return (\n    <div className=\"d-flex justify-content-center mb-4\">\n    <Tag.List>\n      <Tag color={color_order} addOn={<Icon name=\"shopping-cart\"/>}>\n        {t(\"shop.checkout_progress.order\")} \n      </Tag>\n      <Tag color={color_payment} addOn={<Icon name=\"credit-card\" />}>\n        {t(\"shop.checkout_progress.payment\")} \n      </Tag>\n      <Tag color={color_complete} addOn={<Icon name=\"check\" />}>\n        {t(\"shop.checkout_progress.complete\")}\n      </Tag>\n    </Tag.List>\n    </div>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutProgress))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../SiteWrapperShop\"\nimport ShopCheckoutProgress from \"./ShopCheckoutProgress\"\n\n\nfunction ShopBase({ t, match, history, children, title, return_url, pageHeaderOptions=\"\", checkoutProgress=false }) {\n\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={title}>\n            <div className=\"page-options d-flex\">\n              {/* Back */}\n              {(return_url) ?\n                <Link to={return_url} \n                      className='btn btn-secondary mr-2'>\n                    <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')} \n                </Link>\n                : \"\"\n              }\n              { pageHeaderOptions }\n            </div>\n          </Page.Header>\n            <Grid.Row>\n              <Grid.Col md={12}>\n                {(checkoutProgress) ?\n                  <ShopCheckoutProgress checkoutProgress={checkoutProgress} />\n                  : \"\" }\n                { children }\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapperShop>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopBase))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../../ShopBase\"\n\nfunction ShopClassBookBase({ t, match, history, children, pageHeaderOptions=\"\" }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")} pageHeaderOptions={pageHeaderOptions}>\n      <h4>{t(\"shop.classes.book.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookBase))","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport { CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"../../../schedule/classes/class/book/queries\"\n// import CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ShopClassBookClasspassBtn({t, match, history, classpass}) {\n  console.log(classpass)\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  const createInput = {\n    \"scheduleItem\": schedule_item_id,\n    \"accountClasspass\": classpass.accountClasspass.id,\n    \"date\": class_date,\n    \"attendanceType\": \"CLASSPASS\",\n    \"onlineBooking\": true,\n    \"bookingStatus\": \"BOOKED\"\n  }\n\n  const [classCheckin, { data, loading, error, onCompleted }] = useMutation(CREATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loading) {\n    return \"Please wait...\"\n  }\n\n  if (error) {\n    return \"uh oh... error found\"\n  }\n\n  return (\n    <Button \n      block \n      outline \n      color=\"primary\" \n      onClick={() => classCheckin({\n        variables: { \"input\": createInput }, \n        refetchQueries: [\n          // {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, variables: get_attendance_list_query_variables(schedule_item_id, class_date)},\n        ]})\n        .then(({ data }) => {\n            console.log('got data', data);\n            // redirect to class booked page\n            console.log(\"Checkin success!\")\n            history.push(`/shop/classes/booked/${schedule_item_id}/${class_date}`)\n\n            // show message to user\n            // toast.success((t('schedule.classes.class.book.toast_success')), {\n            //   position: toast.POSITION.BOTTOM_RIGHT\n            // })\n          }).catch((error) => {\n            toast.error((t('general.toast_server_error')) +  error, {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            console.log('there was an error sending the query', error)\n          })}\n    >\n      {t(\"general.book\")} <Icon name=\"chevron-right\" />\n    </Button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookClasspassBtn))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport moment from 'moment'\n\nimport {\n  Grid,\n  Card,\n} from \"tabler-react\";\n\nimport ShopClassBookClasspassBtn from \"./ShopClassBookClasspassBtn\"\n\n\nfunction ShopClassBookClasspasses({ t, match, history, classpasses }) {\n  console.log(\"CLASSPASSES\")\n  console.log(classpasses)\n\n  return (\n    classpasses.map((classpass) =>(\n      <Grid.Col xs={12} sm={12} md={3}>\n        <Card \n          statusColor=\"blue\"\n          title={t(\"general.classpass\")} >\n        <Card.Body>\n          <b>{classpass.accountClasspass.organizationClasspass.name}</b><br />\n          <span className=\"text-muted\">\n            {t('general.classes_remaining')}: {classpass.accountClasspass.classesRemainingDisplay} <br />\n            {t('general.valid_until')}: {moment(classpass.accountClasspass.dateEnd).format('LL')} <br />\n          </span>\n        </Card.Body>\n        <Card.Footer>\n          {(!classpass.allowed) ? t('schedule.classes.class.book.classpass_not_allowed') :\n            <ShopClassBookClasspassBtn classpass={classpass} />\n          }\n        </Card.Footer>\n        </Card>\n      </Grid.Col>\n    ))\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookClasspasses))\n\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport { CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"../../../schedule/classes/class/book/queries\"\n// import CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ShopClassBookSubscriptionBtn({t, match, history, subscription}) {\n  console.log(subscription)\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  const createInput = {\n    \"scheduleItem\": schedule_item_id,\n    \"accountSubscription\": subscription.accountSubscription.id,\n    \"date\": class_date,\n    \"attendanceType\": \"SUBSCRIPTION\",\n    \"onlineBooking\": true,\n    \"bookingStatus\": \"BOOKED\"\n  }\n\n  const [classCheckin, { data, loading, error, onCompleted }] = useMutation(CREATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loading) {\n    return \"Please wait...\"\n  }\n\n  if (error) {\n    return \"uh oh... error found\"\n  }\n\n  return (\n    <Button \n      block \n      outline \n      color=\"primary\" \n      onClick={() => classCheckin({\n        variables: { \"input\": createInput }, \n        refetchQueries: [\n          // {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, variables: get_attendance_list_query_variables(schedule_item_id, class_date)},\n        ]})\n        .then(({ data }) => {\n            console.log('got data', data);\n            // redirect to class booked page\n            console.log(\"Checkin success!\")\n            history.push(`/shop/classes/booked/${schedule_item_id}/${class_date}`)\n\n            // show message to user\n            // toast.success((t('schedule.classes.class.book.toast_success')), {\n            //   position: toast.POSITION.BOTTOM_RIGHT\n            // })\n          }).catch((error) => {\n            toast.error((t('general.toast_server_error')) +  error, {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            console.log('there was an error sending the query', error)\n          })}\n    >\n      {t(\"general.book\")} <Icon name=\"chevron-right\" />\n    </Button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookSubscriptionBtn))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport moment from 'moment'\n\nimport {\n  Grid,\n  Card,\n} from \"tabler-react\";\n\nimport ShopClassBookSubscriptionBtn from \"./ShopClassBookSubscriptionBtn\"\n\n\nfunction ShopClassBookSubscriptions({ t, match, history, subscriptions }) {\n  console.log(\"SUBSCRIPTIONS\")\n  console.log(subscriptions)\n\n  return (\n    subscriptions.map((subscription) =>(\n      <Grid.Col xs={12} sm={12} md={3}>\n        <Card \n          statusColor=\"blue\"\n          title={t(\"general.subscription\")} >\n        <Card.Body>\n          <b>{subscription.accountSubscription.organizationSubscription.name}</b><br />\n          <span className=\"text-muted\">\n            {t(\"general.credits_remaining\")}: {subscription.accountSubscription.creditTotal}\n          </span>\n        </Card.Body>\n        <Card.Footer>\n          {(!subscription.allowed) ? t('schedule.classes.class.book.subscription_not_allowed') :\n            <ShopClassBookSubscriptionBtn subscription={subscription} />\n          }\n        </Card.Footer>\n        </Card>\n      </Grid.Col>\n    ))\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookSubscriptions))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\";\n\n\nfunction ShopClassBookPriceBtn({t, match, history, price}) {\n  console.log(price)\n  const classpassId = price.id\n  const scheduleItemId = match.params.class_id\n  const classDate = match.params.date\n\n  return (\n    <Link to={`/shop/classpass/${classpassId}/${scheduleItemId}/${classDate}`}>\n    <Button \n      block \n      outline \n      color=\"primary\" \n    >\n      {t(\"shop.classes.book.pay_and_book\")} <Icon name=\"chevron-right\" />\n    </Button>\n    </Link>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopClassBookPriceBtn))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Grid,\n} from \"tabler-react\";\n\nimport ShopClassBookPriceBtn from './ShopClassBookPriceBtn'\n\nfunction ShopClassBookPriceDropin({ \n  t, \n  match, \n  history, \n  priceDropin\n}) {\n\n  return (\n    <Grid.Col xs={12} sm={12} md={3}>\n      <Card \n        statusColor=\"blue\"\n        title={t(\"general.dropin\")} >\n      <Card.Body>\n        <b>{priceDropin.priceDisplay}</b><br />\n        {t(\"shop.classes.book.dropin_pay_and_book\")} <br />\n      </Card.Body>\n      <Card.Footer>\n        <ShopClassBookPriceBtn price={priceDropin} />\n      </Card.Footer>\n      </Card>\n    </Grid.Col>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookPriceDropin))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Grid,\n} from \"tabler-react\";\n\nimport ShopClassBookPriceBtn from './ShopClassBookPriceBtn'\n\nfunction ShopClassBookPriceTrial({ \n  t, \n  match, \n  history, \n  priceTrial\n}) {\n\n  return (\n    <Grid.Col xs={12} sm={12} md={3}>\n      <Card \n        statusColor=\"green\"\n        title={t(\"general.trial\")} >\n      <Card.Body>\n        <b>{priceTrial.priceDisplay}</b><br />\n        {t(\"shop.classes.book.trial_pay_and_book\")} <br />\n      </Card.Body>\n      <Card.Footer>\n        <ShopClassBookPriceBtn price={priceTrial} />\n      </Card.Footer>\n      </Card>\n    </Grid.Col>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookPriceTrial))\n\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_BOOKING_OPTIONS_QUERY = gql`\n  query ScheduleClassBookingOptions($scheduleItem:ID!, $date:Date!, $listType:String!) {\n    scheduleClass(scheduleItemId: $scheduleItem, date:$date) {\n      bookingStatus\n    }\n    scheduleClassBookingOptions(scheduleItem: $scheduleItem, date:$date, listType:$listType) {\n      date\n      alreadyBooked\n      account {\n        id\n        fullName\n        hasReachedTrialLimit\n      }\n      scheduleItem {\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n      }\n    \tscheduleItemPrices {\n        organizationClasspassDropin {\n          id\n          name\n          priceDisplay\n        }\n        organizationClasspassTrial {\n          id\n          name\n          priceDisplay\n        }\n      }\n      classpasses {\n        bookingType \n        allowed\n        accountClasspass {\n          id\n          dateStart\n          dateEnd\n          classesRemainingDisplay\n          organizationClasspass {\n            id\n            name\n          }\n        }\n      }\n      subscriptions {\n        bookingType\n        allowed\n        accountSubscription {\n          id\n          dateStart\n          dateEnd\n          organizationSubscription {\n            id\n            name\n          }\n          creditTotal\n        }\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport { TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport ShopClassBookBack from \"./ShopClassBookBack\"\nimport ShopClassBookBase from \"./ShopClassBookBase\"\nimport ShopClassBookClasspasses from './ShopClassBookClasspasses'\nimport ShopClassBookSubscriptions from \"./ShopClassBookSubscriptions\"\nimport ShopClassBookPriceDropin from \"./ShopClassBookPriceDropin\"\nimport ShopClassBookPriceTrial from \"./ShopClassBookPriceTrial\"\n\nimport { GET_BOOKING_OPTIONS_QUERY } from \"./queries\"\n// import CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ShopClassBook({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const { loading, error, data } = useQuery(\n    GET_BOOKING_OPTIONS_QUERY, {\n      variables: {\n        scheduleItem: schedule_item_id,\n        date: class_date,\n        listType: \"SHOP_BOOK\"\n      }\n    }\n  )\n\n  // Loading\n  if (loading) return (\n    <ShopClassBookBase pageHeaderOptions={<ShopClassBookBack />}>\n      <p>{t('general.loading_with_dots')}</p>\n    </ShopClassBookBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <ShopClassBookBase pageHeaderOptions={<ShopClassBookBack />}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ShopClassBookBase>\n    )\n  }\n  \n  console.log(data)\n  const scheduleClass = data.scheduleClass\n\n  const alreadyBooked = data.scheduleClassBookingOptions.alreadyBooked\n  const account = data.scheduleClassBookingOptions.account\n  const classpasses = data.scheduleClassBookingOptions.classpasses\n  const subscriptions = data.scheduleClassBookingOptions.subscriptions\n  const prices = data.scheduleClassBookingOptions.scheduleItemPrices\n  const scheduleItem = data.scheduleClassBookingOptions.scheduleItem\n\n  const location = scheduleItem.organizationLocationRoom.organizationLocation.name\n  const classType = scheduleItem.organizationClasstype.name\n  const timeStart = moment(TimeStringToJSDateOBJ(scheduleItem.timeStart)).format(timeFormat) \n  const timeEnd = moment(TimeStringToJSDateOBJ(scheduleItem.timeEnd)).format(timeFormat) \n  const date_display = moment(class_date).format(dateFormat)\n  // const subtitle = class_subtitle({\n  //   t: t,\n  //   location: , \n  //   locationRoom: scheduleItem.organizationLocationRoom.name,\n  //   classtype: , \n  //   timeStart: , \n  //   date: class_date\n  // })\n  const class_info = date_display + ' ' + timeStart + ' - ' + timeEnd + ', ' + classType + ' ' + t(\"general.at\") + ' ' + location\n\n  console.log(prices)\n  console.log(\"ALREADY BOOKED\")\n  console.log(alreadyBooked)\n  console.log(scheduleClass.bookingStatus)\n\n  let content\n\n  switch(scheduleClass.bookingStatus) {\n    case \"NOT_YET_OPEN\":\n      const bookingOpenOn = scheduleClass.bookingOpenOn\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.open_on\") + \" \" + moment(bookingOpenOn).format(dateFormat)}\n        </Alert>\n      break\n    case \"CANCELLED\":\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.cancelled\")}\n        </Alert>\n      break\n    case \"HOLIDAY\":\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.cancelled_holiday\")}\n        </Alert>\n      break\n    case \"FINISHED\":\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.finished\")}\n        </Alert>\n      break\n    case \"ONGOING\":\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.ongoing\")}\n        </Alert>\n      break\n      break\n    case \"FULL\":\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.full\")}\n        </Alert>\n      break\n    case \"OK\":\n      content = <Grid.Row cards deck>\n        <ShopClassBookSubscriptions subscriptions={subscriptions} />\n        <ShopClassBookClasspasses classpasses={classpasses} />\n        {(prices) ?\n          (prices.organizationClasspassDropin) ? \n            <ShopClassBookPriceDropin priceDropin={prices.organizationClasspassDropin}/> : \"\" \n        : \"\" }\n        {(prices) ?\n          ((prices.organizationClasspassTrial) && (!account.hasReachedTrialLimit)) ? \n            <ShopClassBookPriceTrial priceTrial={prices.organizationClasspassTrial}/> : \"\" \n          : \"\" } \n      </Grid.Row>\n      break\n    default:\n      content = \"\"\n  }\n\n  return (\n    <ShopClassBookBase pageHeaderOptions={<ShopClassBookBack />}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          { class_info }\n          <div className=\"mt-6\">\n            {(alreadyBooked) ?\n              <Alert type=\"primary\" hasExtraSpace>\n                <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n                {t(\"shop.classes.book.already_booked\")}\n              </Alert>\n              : content\n            }\n          </div>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopClassBookBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBook))\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../../ShopBase\"\n\nfunction ShopClassBookedBase({ t, match, history, children, pageHeaderOptions=\"\" }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")} pageHeaderOptions={pageHeaderOptions}>\n      <h4>{t(\"shop.classes.booked.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookedBase))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_CLASS_QUERY = gql`\n  query ScheduleClass($scheduleItemId: ID!, $date: Date!) {\n    scheduleClass(scheduleItemId: $scheduleItemId, date:$date) {\n      scheduleItemId \n      date\n      organizationLocationRoom {\n        organizationLocation {\n          name\n        }\n      }\n      organizationClasstype {\n        name\n      }\n      timeStart\n      timeEnd\n    }\n  }\n`\n\n\nexport const CREATE_ORDER = gql`\n  mutation CreateFinanceOrder($input: CreateFinanceOrderInput!) {\n    createFinanceOrder(input: $input) {\n      financeOrder {\n        id\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon\n} from \"tabler-react\";\nimport { TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\n// import { toast } from 'react-toastify'\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport ShopClassBookedBase from \"./ShopClassBookedBase\"\nimport { GET_CLASS_QUERY } from \"../../queries\"\n// import CSLS from \"../../../../../tools/cs_local_storage\"\n\nimport { DisplayClassInfo } from \"../../tools\"\n\n\nfunction ShopClassBook({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const { loading, error, data } = useQuery(\n    GET_CLASS_QUERY, {\n      variables: {\n        scheduleItemId: schedule_item_id,\n        date: class_date,\n      }\n    }\n  )\n\n  // Loading\n  if (loading) return (\n    <ShopClassBookedBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </ShopClassBookedBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <ShopClassBookedBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ShopClassBookedBase>\n    )\n  }\n  \n  console.log(data)\n  // TODO: display class info in a card\n\n  \n  return (\n    <ShopClassBookedBase>\n      <Grid.Row cards deck>\n        <Grid.Col xs={12} sm={12} md={6} lg={6}>\n          <Card title={t(\"shop.classes.booked.class\")}>\n            <Card.Body>\n              {t(\"shop.classes.booked.class_explanation\")} <br /><br />\n              <DisplayClassInfo \n                t={t} \n                classDate={class_date}\n                classData={data} \n                dateFormat={dateFormat} \n                timeFormat={timeFormat}\n              />\n            </Card.Body>\n            <Card.Footer>\n              <Link to={\"/shop/account\"}>\n                <Button\n                  outline\n                  block\n                  color=\"success\"\n                >\n                  {t(\"general.continue\")} <Icon name=\"chevron-right\" />\n                </Button>\n              </Link>\n            </Card.Footer>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopClassBookedBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBook))\n\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\";\nimport ShopBase from \"../../ShopBase\"\n\nfunction ShopClassesScheduleBase({ t, match, history, children, pageHeaderOptions=\"\" }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")} pageHeaderOptions={pageHeaderOptions}>\n      <h4>{t(\"shop.classes.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassesScheduleBase))","import CSLS from \"../../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n    let orderBy\n    let organizationClasstype\n    let organizationLevel\n    let organizationLocation\n  \n    let queryVars = {\n      attendanceCountType: \"ATTENDING_AND_BOOKED\",\n      dateFrom: localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM), \n      dateUntil: localStorage.getItem(CSLS.SHOP_CLASSES_DATE_UNTIL),\n    }\n  \n    // orderBy = localStorage.getItem(CSLS.SHOP_CLASSES_ORDER_BY)\n    // if (orderBy) {\n    //   queryVars.orderBy = orderBy\n    // }\n  \n    organizationClasstype = localStorage.getItem(CSLS.SHOP_CLASSES_FILTER_CLASSTYPE)\n    if (organizationClasstype) {\n      queryVars.organizationClasstype = organizationClasstype\n    } else {\n      queryVars.organizationClasstype = \"\"\n    }\n  \n    organizationLevel = localStorage.getItem(CSLS.SHOP_CLASSES_FILTER_LEVEL)\n    if (organizationLevel) {\n      queryVars.organizationLevel = organizationLevel\n    } else {\n      queryVars.organizationLevel = \"\"\n    }\n  \n    organizationLocation = localStorage.getItem(CSLS.SHOP_CLASSES_FILTER_LOCATION)\n    if (organizationLocation) {\n      queryVars.organizationLocation = organizationLocation\n    } else {\n      queryVars.organizationLocation = \"\"\n    }\n  \n    console.log(queryVars)\n  \n    return queryVars\n  }\n  ","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport CSLS from \"../../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from './tools'\n\nimport { \n  Grid,\n} from \"tabler-react\";\n\n\n\nfunction getDefaultValue(value) {\n  let defaultValue = localStorage.getItem(value)\n  if (defaultValue) {\n    return defaultValue\n  } else {\n    return \"\"\n  }\n}\n\n\nfunction updateLocalStorageAndRefetch(key, value, refetch) {\n  localStorage.setItem(key, value)\n  refetch(get_list_query_variables())\n\n}\n\nconst selectClass = \"form-control custom-select mb-2\"\n\nconst ShopClassesScheduleFilter = ({ t, history, data, refetch }) => (\n  <Grid.Row>\n    <Grid.Col md={4}>\n      {/* Locations */}\n      <select \n        className={selectClass}\n        defaultValue={getDefaultValue(CSLS.SHOP_CLASSES_FILTER_LOCATION)}\n        onChange={ (event) => {\n          updateLocalStorageAndRefetch(\n            CSLS.SHOP_CLASSES_FILTER_LOCATION,\n            event.target.value,\n            refetch\n          )\n        }}\n      >\n        <option value=\"\" key={v4()}>{t(\"shop.classes.filter_all_locations\")}</option>\n        {data.organizationLocations.edges.map(({ node }) =>\n          <option value={node.id} key={v4()}>{node.name}</option>\n        )}\n      </select>\n    </Grid.Col>\n    <Grid.Col md={4}>\n      {/* Classtypes */}\n      <select \n        className={selectClass}\n        defaultValue={getDefaultValue(CSLS.SHOP_CLASSES_FILTER_CLASSTYPE)}\n        onChange={ (event) => {\n          updateLocalStorageAndRefetch(\n            CSLS.SHOP_CLASSES_FILTER_CLASSTYPE,\n            event.target.value,\n            refetch\n          )\n        }}\n      >\n        <option value=\"\" key={v4()}>{t(\"shop.classes.filter_all_classtypes\")}</option>\n        {data.organizationClasstypes.edges.map(({ node }) =>\n          <option value={node.id} key={v4()}>{node.name}</option>\n        )}\n      </select>\n    </Grid.Col>\n    <Grid.Col md={4}>\n      {/* Levels */}\n      <select \n        className={selectClass}\n        defaultValue={getDefaultValue(CSLS.SHOP_CLASSES_FILTER_LEVEL)}\n        onChange={ (event) => {\n          updateLocalStorageAndRefetch(\n            CSLS.SHOP_CLASSES_FILTER_LEVEL,\n            event.target.value,\n            refetch\n          )\n        }}\n      >\n        <option value=\"\" key={v4()}>{t(\"shop.classes.filter_all_levels\")}</option>\n        {data.organizationLevels.edges.map(({ node }) =>\n          <option value={node.id} key={v4()}>{node.name}</option>\n        )}\n      </select>\n    </Grid.Col>\n  </Grid.Row>\n);\n\nexport default withTranslation()(withRouter(ShopClassesScheduleFilter))","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport moment from 'moment'\n\nimport CSLS from \"../../../../tools/cs_local_storage\"\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\n\n\nfunction ShopClassesScheduleButtonBook({ t, match, history, scheduleItemId, classDate, bookingOpenOn, bookingStatus }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  let buttonBook\n  // Uncomment the line below when testing the book component statuses. (Development only)\n  // bookingStatus = \"OK\"\n\n  switch(bookingStatus) {\n    case \"NOT_YET_OPEN\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.open_on\") + \" \" + moment(bookingOpenOn).format(dateFormat)}\n        </span>\n      break\n    case \"CANCELLED\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.cancelled\")}\n        </span>\n      break\n    case \"HOLIDAY\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.cancelled_holiday\")}\n        </span>\n      break\n    case \"FINISHED\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.finished\")}\n        </span>\n      break\n    case \"ONGOING\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.ongoing\")}\n        </span>\n      break\n      break\n    case \"FULL\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.full\")}\n        </span>\n      break\n    case \"OK\":\n      buttonBook = <Link to={`/shop/classes/book/${scheduleItemId}/${classDate}`}>\n          <Button className=\"pull-right\" color=\"primary\" outline>\n            {t(\"general.book\")} <Icon name=\"chevron-right\" />\n          </Button>\n        </Link>\n      break\n    \n    default:\n      buttonBook = \"\"\n  }\n  \n  return buttonBook\n}\n\n\nexport default withTranslation()(withRouter(ShopClassesScheduleButtonBook))\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport moment from 'moment'\n\nimport CSLS from \"../../../../tools/cs_local_storage\"\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Button,\n  Card, \n  Grid,\n  Icon,\n  List,\n  Media,\n  Table,\n} from \"tabler-react\";\nimport ShopClassesScheduleBase from \"./ShopClassesScheduleBase\"\nimport ShopClassesScheduleFilter from \"./ShopClassesScheduleFilter\"\nimport ShopClassesScheduleButtonBook from \"./ShopClassesScheduleButtonBook\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\nimport { GET_CLASSES_QUERY } from \"../../../schedule/classes/queries\"\n\nimport { get_list_query_variables } from './tools'\n\n\nfunction capitalize(word) {\n  const lower = word.toLowerCase();\n  return word.charAt(0).toUpperCase() + lower.slice(1);\n}\n\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM)) {\n  console.log('date from not found... defaulting to today...')\n  localStorage.setItem(CSLS.SHOP_CLASSES_DATE_FROM, moment().format('YYYY-MM-DD')) \n  localStorage.setItem(CSLS.SHOP_CLASSES_DATE_UNTIL, moment().add(6, 'days').format('YYYY-MM-DD')) \n} else {\n  const date_from  = moment(localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM))\n  if (date_from.isBefore(moment(), \"day\")) {\n    localStorage.setItem(CSLS.SHOP_CLASSES_DATE_FROM, moment().format('YYYY-MM-DD')) \n    localStorage.setItem(CSLS.SHOP_CLASSES_DATE_UNTIL, moment().add(6, 'days').format('YYYY-MM-DD')) \n  }\n}\n\n\n\nfunction ShopClassesSchedule({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const title = t(\"shop.home.title\")\n  const { loading, error, data, refetch } = useQuery(GET_CLASSES_QUERY, {\n    variables: get_list_query_variables()\n  })\n\n  if (loading) return (\n    <ShopClassesScheduleBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopClassesScheduleBase>\n  )\n  if (error) return (\n    <ShopClassesScheduleBase title={title}>\n      {t(\"shop.classes.error_loading\")}\n    </ShopClassesScheduleBase>\n  )\n\n  console.log(data)\n  console.log(data.scheduleClasses)\n\n  return (\n    <ShopClassesScheduleBase \n      title={title}\n      pageHeaderOptions={\n        <Button.List className=\"schedule-list-page-options-btn-list\">\n          <Button \n            icon=\"chevron-left\"\n            color=\"secondary\"\n            disabled={ (moment(localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM)).subtract(7, 'days').isBefore(moment(), \"day\")) }\n            onClick={ () => {\n              let prevWeekFrom = moment(localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM)).subtract(7, 'days')\n              let prevWeekUntil = moment(prevWeekFrom).add(6, 'days')\n              \n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_FROM, prevWeekFrom.format('YYYY-MM-DD')) \n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_UNTIL, prevWeekUntil.format('YYYY-MM-DD')) \n\n              refetch(get_list_query_variables())\n          }} />\n          <Button \n            color=\"secondary\"\n            onClick={ () => {\n              let currentWeekFrom = moment()\n              let currentWeekUntil = moment(currentWeekFrom).add(6, 'days')\n\n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_FROM, currentWeekFrom.format('YYYY-MM-DD')) \n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_UNTIL, currentWeekUntil.format('YYYY-MM-DD')) \n              \n              refetch(get_list_query_variables())\n          }} > \n            {t(\"general.today\")}\n          </Button>\n          <Button \n            icon=\"chevron-right\"\n            color=\"secondary\"\n            onClick={ () => {\n              let nextWeekFrom = moment(localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM)).add(7, 'days')\n              let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n              \n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n              refetch(get_list_query_variables())\n          }} />\n        </Button.List> \n      }\n    >\n      \n      <ShopClassesScheduleFilter data={data} refetch={refetch} />\n      {data.scheduleClasses.map(({ date, bookingOpenOn, classes }) =>\n        <Grid.Row key={v4()}>\n          <Grid.Col md={12}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>\n                    <b>{capitalize(moment(date).format(\"dddd\"))}</b> {' '}\n                    <span className=\"text-muted\">\n                      {moment(date).format(\"LL\")} \n                    </span>\n                  </Card.Title>\n                </Card.Header>                \n                {!(classes.length) ? \n                  <Card.Body>\n                    <p>{t('schedule.classes.empty_list')}</p>\n                  </Card.Body> :\n                  <Table cards>\n                    <Table.Body>\n                      {classes.map(({ \n                        scheduleItemId, \n                        frequencyType,\n                        date, \n                        status,\n                        holiday,\n                        holidayName,\n                        description,\n                        account, \n                        role,\n                        account2,\n                        role2,\n                        organizationLocationRoom, \n                        organizationClasstype, \n                        organizationLevel,\n                        timeStart, \n                        timeEnd,\n                        displayPublic,\n                        bookingStatus }) => (\n                          <Table.Row>\n                            <Table.Col>\n                            <h4>\n                              {moment(date + ' ' + timeStart).format(timeFormat)} {' - '}\n                              {moment(date + ' ' + timeEnd).format(timeFormat)} { ' ' }\n                            </h4> \n                            { organizationClasstype.name } { (account) ? ' ' + t(\"general.with\") + ' ' + account.fullName : \"\" } <br />\n                            <span className=\"text-muted\">{ organizationLocationRoom.organizationLocation.name }</span>\n                            </Table.Col>\n                            <Table.Col>\n                              <ShopClassesScheduleButtonBook\n                                scheduleItemId={scheduleItemId}\n                                classDate={date}\n                                bookingOpenOn={bookingOpenOn}\n                                bookingStatus={bookingStatus}\n                              />\n                            </Table.Col>\n                          </Table.Row>\n                        )\n                      )}\n                    </Table.Body>\n                  </Table>\n                }\n              </Card>\n          </Grid.Col>\n        </Grid.Row>\n      )}\n\n    </ShopClassesScheduleBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassesSchedule))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopContactBase({ t, match, history, children, pageHeaderOptions=\"\" }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")} pageHeaderOptions={pageHeaderOptions}>\n      <h4>{t(\"shop.contact.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopContactBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport moment from 'moment'\n\n\nimport {\n  Button,\n  Card, \n  Grid,\n  Icon,\n  List,\n  Media,\n  Table,\n} from \"tabler-react\";\nimport ShopContactBase from \"./ShopContactBase\"\n\nimport { GET_ORGANIZATION_QUERY } from \"../../organization/organization/queries\"\n\n\nfunction ShopContact({ t, match, history }) {\n  // The ID is fixed, as there's only one organization supported at the moment... easy peasy.\n  const { loading, error, data, refetch } = useQuery(GET_ORGANIZATION_QUERY, {\n    variables: { id: \"T3JnYW5pemF0aW9uTm9kZToxMDA=\"}\n  })\n\n  if (loading) return (\n    <ShopContactBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopContactBase>\n  )\n  if (error) return (\n    <ShopContactBase>\n      {t(\"shop.classpasses.error_loading\")}\n    </ShopContactBase>\n  )\n\n  console.log(data)\n  console.log(data.organization)\n\n  const organization = data.organization\n\n  return (\n    <ShopContactBase>\n      <Card title={organization.name}>\n        <Card.Body>\n          <div dangerouslySetInnerHTML={{ __html: organization.address}} />\n          <p>{organization.email} <br /> {organization.phone}</p>\n          <p>{organization.registration} <br /> {organization.taxRegistration}</p>\n        </Card.Body>\n      </Card>\n    </ShopContactBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopContact))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\";\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopEventsBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")}>\n      <h4>{t(\"shop.events.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEventsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_EVENTS_QUERY = gql`\n  query ScheduleEvents($before:String, $after:String) {\n    scheduleEvents(first: 100, before: $before, after:$after, archived:false, displayShop:true) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          displayShop\n          autoSendInfoMail\n          organizationLocation {\n            id\n            name\n          }\n          name\n          tagline\n          preview\n          description\n          organizationLevel {\n            id\n            name\n          }\n          teacher {\n            id \n            fullName\n          }\n          teacher2 {\n            id\n            fullName\n          }\n          dateStart\n          dateEnd\n          timeStart\n          timeEnd\n          infoMailContent\n          scheduleItems {\n            edges {\n              node {\n                id\n              }\n            }\n          }\n          media(first: 1) {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n              startCursor\n              endCursor\n            }\n            edges {\n              node {\n                urlImageThumbnailSmall\n                urlImageThumbnailLarge\n              }\n            }\n          }\n          createdAt\n          updatedAt\n        }\n      }\n    }\n  }\n`\n","import React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Grid,\n  Icon,\n  List,\n  GalleryCard\n} from \"tabler-react\";\nimport ShopEventsBase from \"./ShopEventsBase\"\n// import ShopClasspassPricingCard from \"../classpass/ShopClasspassPricingCard\"\n\nimport { GET_SCHEDULE_EVENTS_QUERY } from \"./queries\"\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopEvents({ t, match, history }) {\n  const title = t(\"shop.home.title\")\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENTS_QUERY)\n\n  if (loading) return (\n    <ShopEventsBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopEventsBase>\n  )\n  if (error) return (\n    <ShopEventsBase title={title}>\n      {t(\"shop.classpasses.error_loading\")}\n    </ShopEventsBase>\n  )\n\n  console.log(data)\n  const scheduleEvents = data.scheduleEvents\n  console.log(scheduleEvents)\n\n  return (\n    <ShopEventsBase title={title}>\n        <Grid.Row>\n          {scheduleEvents.edges.map(({ node }) => (\n            <Grid.Col xs={12} sm={12} md={6} lg={4} key={v4()}>\n              <GalleryCard>\n                {(node.media.edges.length) ?\n                  <GalleryCard.Image \n                    src={(node.media.edges.length) ? node.media.edges[0].node.urlImageThumbnailLarge: \"\"} \n                    href={`/shop/events/${node.id}`}\n                  /> : \"\" }\n                <GalleryCard.Footer>\n                  <h4>{node.name}</h4>\n                </GalleryCard.Footer>\n                <GalleryCard.Footer>                  \n                  <GalleryCard.Details\n                    fullName={<span className=\"\">{(node.teacher) ? node.teacher.fullName: \"\"}</span>}\n                    dateString={node.organizationLocation.name}\n                  />\n                  <GalleryCard.IconGroup>\n                  <GalleryCard.IconItem \n                    name=\"calendar\"\n                    label={node.dateStart}\n                    right={false}\n                    RootComponent=\"span\"\n                  />\n                  </GalleryCard.IconGroup>\n                </GalleryCard.Footer>\n                <Link to={`/shop/events/${node.id}`}>\n                  <GalleryCard.Footer pt={10}>\n                    <Button\n                      block\n                      color=\"link\"\n                    >\n                      {t(\"shop.events.tell_me_more\")} <Icon name=\"chevron-right\" />\n                    </Button>\n                  </GalleryCard.Footer>\n                </Link>\n              </GalleryCard>\n            </Grid.Col>\n          ))}\n        </Grid.Row>\n\n        \n    </ShopEventsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEvents))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopEventBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      return_url=\"/shop/events\"\n      // checkoutProgress=\"order\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEventBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport moment from 'moment'\n\nimport {\n  Badge,\n  Grid,\n  Icon,\n  List,\n  PricingCard\n} from \"tabler-react\";\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopEventTicketPricingCard({ t, match, eventTicket, showButton=true, active=false }) {\n  // eventTicket should be an object with at least the following values from an organizationClasspass object:\n  // id, name, priceDisplay, \n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  console.log(eventTicket)\n  const ticketScheduleItems = eventTicket.ticketScheduleItems\n\n  const eventId = match.params.event_id\n\n  return (\n    <PricingCard active={active}>\n      <PricingCard.Category>\n        {eventTicket.name}\n        {(eventTicket.isEarlybirdPrice) ? <div><Badge color=\"primary\">{t(\"shop.event.ticket.earlybird_price\")}</Badge></div> : \"\"}\n      </PricingCard.Category>\n      <PricingCard.Price>\n        { (eventTicket.price == 0) ? \n          t(\"shop.event.ticket.free\") :\n          eventTicket.totalPriceDisplay \n        }\n      </PricingCard.Price>\n      <PricingCard.AttributeList>\n        {(eventTicket.isEarlybirdPrice) ? \n          <PricingCard.AttributeItem>\n            {t(\"shop.event.ticket.regular_price\")} {eventTicket.priceDisplay}\n          </PricingCard.AttributeItem>\n          : \"\" \n        }\n        {ticketScheduleItems.edges.map(({ node }) => (\n          <PricingCard.AttributeItem>\n              <Icon name=\"calendar\" /> { \" \" }\n              {moment(node.scheduleItem.dateStart).format(dateFormat)} {\" \"}\n              {/* Start & end time */}\n              {moment(node.scheduleItem.dateStart + ' ' + node.scheduleItem.timeStart).format(timeFormat)} {' - '}\n              {moment(node.scheduleItem.dateStart + ' ' + node.scheduleItem.timeEnd).format(timeFormat)} { ' ' }\n            <br />\n            <small className=\"text-muted\">\n              {node.scheduleItem.name} <Icon name=\"map-pin\" /> {node.scheduleItem.organizationLocationRoom.organizationLocation.name}\n            </small>\n          </PricingCard.AttributeItem>\n        ))}\n      </PricingCard.AttributeList>\n      {(showButton && !eventTicket.isSoldOut) ?\n        <Link to={`/shop/events/${eventId}/ticket/${eventTicket.id}`}>\n          <PricingCard.Button>\n            {t(\"shop.event.ticket.choose\")} <Icon name=\"chevron-right\" />\n          </PricingCard.Button>\n        </Link>\n        : \"\" \n      }\n      {(showButton && eventTicket.isSoldOut) ? \n        <PricingCard.Button \n          className=\"disabled\"\n        >\n          {t('general.sold_out')}\n        </PricingCard.Button> : \"\"}\n    </PricingCard>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEventTicketPricingCard))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_EVENT_QUERY = gql`\nquery ScheduleEvent($id: ID!) {\n  scheduleEvent(id: $id) {\n    id\n    archived\n    displayPublic\n    displayShop\n    autoSendInfoMail\n    organizationLocation {\n      id\n      name\n    }\n    name\n    tagline\n    preview\n    description\n    organizationLevel {\n      id\n      name\n    }\n    teacher {\n      id \n      fullName\n    }\n    teacher2 {\n      id\n      fullName\n    }\n    dateStart\n    dateEnd\n    timeStart\n    timeEnd\n    infoMailContent\n    media(first: 1) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          urlImageThumbnailSmall\n          urlImageThumbnailLarge\n        }\n      }\n    }\n    tickets(first: 100) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          name\n          price\n          priceDisplay\n          totalPrice\n          totalPriceDisplay\n          description\n          isSoldOut\n          isEarlybirdPrice\n          ticketScheduleItems(included: true, orderBy: \"date_start\") {\n           pageInfo{\n            hasNextPage\n            hasPreviousPage\n            startCursor\n            endCursor\n            }\n            edges {\n              node {\n                id\n                included\n                scheduleItem {\n                  name\n                  dateStart\n                  timeStart\n                  timeEnd\n                  organizationLocationRoom {\n                    organizationLocation {\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    createdAt\n    updatedAt\n  }\n}\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport {\n  Card,\n  GalleryCard,\n  Grid,\n  Icon,\n  List\n} from \"tabler-react\"\nimport { TimeStringToJSDateOBJ } from '../../../tools/date_tools'\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport ShopEventBase from \"./ShopEventBase\"\nimport ShopEventTicketPricingCard from \"./ShopEventTicketPricingCard\"\n\nimport { GET_SCHEDULE_EVENT_QUERY } from \"./queries\"\n\n\nfunction ShopEvent({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const title = t(\"shop.home.title\")\n  const eventId = match.params.event_id\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  if (loading) return (\n    <ShopEventBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopEventBase>\n  )\n  if (error) return (\n    <ShopEventBase title={title}>\n      {t(\"shop.event.error_loading\")}\n    </ShopEventBase>\n  )\n\n  console.log(data)\n  const event = data.scheduleEvent\n  const tickets = event.tickets\n  console.log(event)\n\n  return (\n    <ShopEventBase title={title}>\n      <Grid.Row>\n        <Grid.Col xs={12} sm={12} md={12} lg={12}>\n          <h3>{event.name}</h3>\n          <h5>{event.tagline}</h5>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col xs={12} sm={12} md={6} lg={4}>\n          {((event.media.edges.length) ? \n            <GalleryCard>\n              <GalleryCard.Image src={(event.media.edges.length) ? event.media.edges[0].node.urlImageThumbnailLarge : \"\"} />\n              <GalleryCard.Details>\n                {(event.media.edges.length) ? event.media.edges[0].node.description : \"\"}\n              </GalleryCard.Details>\n            </GalleryCard>\n          : \"\" )}\n          <Card title={t(\"general.info\")}>\n            <Card.Body>\n              <h6>{t('general.teacher')}: {(event.teacher) ? event.teacher.fullName: \"\"}</h6>\n              <h6>{t('general.start')}: {(event.dateStart) ? moment(event.dateStart).format(dateFormat): \"\"}</h6>\n              <h6>{t('general.end')}: {(event.dateEnd) ? moment(event.dateEnd).format(dateFormat): \"\"}</h6>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col xs={12} sm={12} md={6} lg={8}>\n          <Card title={t(\"general.description\")}>\n            <Card.Body>\n              <h5>{t('general.description')}</h5>\n              <div dangerouslySetInnerHTML={{ __html: event.description}} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col xs={12} sm={12} md={12} lg={12}>\n          <h3>{t(\"shop.event.tickets\")}</h3>\n        </Grid.Col>\n        {tickets.edges.map(({ node }) => (\n          <Grid.Col xs={12} sm={12} md={6} lg={4}>\n            <ShopEventTicketPricingCard eventID={eventId} eventTicket={node} />\n          </Grid.Col>\n        ))}\n      </Grid.Row>\n    </ShopEventBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEvent))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopEventTicketBase({ t, match, history, children }) {\n  const eventId = match.params.event_id\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      return_url={`/shop/events/${eventId}`}\n      checkoutProgress=\"order\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopEventTicketBase))","const cs_django_links = {\n    EXPORT_TERMS_AND_CONDITIONS: \"/d/export/terms-and-conditions\",\n    EXPORT_PRIVACY_POLICY: \"/d/export/privacy-policy\",\n}\n\nexport default cs_django_links\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport {\n  Button,\n  Form,\n  Icon\n} from \"tabler-react\"\n\nimport cs_django_links from \"../../tools/cs_django_links\"\n\n\nconst ShopClasspassForm = ({ t, isSubmitting, errors }) => (\n    <FoForm>\n      <Form.Group label={t('shop.order.message')}>\n        <Field type=\"text\" \n               component=\"textarea\"\n               name=\"message\" \n               className={(errors.message) ? \"form-control is-invalid\" : \"form-control\"} \n               autoComplete=\"off\" />\n        <ErrorMessage name=\"message\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <small className=\"text-muted\">\n        {t(\"shop.order.by_placing_this_order\")} <br />\n        <ul>\n          <li>{t(\"shop.order.agree_terms\")} {\" \"}\n            <a target=\"_blank\" href={cs_django_links.EXPORT_TERMS_AND_CONDITIONS}>{t(\"general.terms_and_conditions\")}</a>\n          </li>\n          <li>{t(\"shop.order.agree_privacy\")} {\" \"}\n            <a target=\"_blank\" href={cs_django_links.EXPORT_PRIVACY_POLICY}>{t(\"general.privacy_policy\")}</a>\n          </li>\n        </ul>\n      </small>\n      <Button \n        block\n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('shop.place_order')} <Icon name=\"chevron-right\" />\n      </Button>\n    </FoForm>\n)\n\nexport default withTranslation()(withRouter(ShopClasspassForm))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_EVENT_TICKET_QUERY = gql`\n  query ScheduleEventTicket($id: ID!) {\n    scheduleEventTicket(id:$id) {\n      id\n      name\n      price\n      priceDisplay\n      totalPrice\n      totalPriceDisplay\n      description\n      isSoldOut\n      isEarlybirdPrice\n      ticketScheduleItems(included: true, orderBy: \"date_start\") {\n        pageInfo{\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n        }\n        edges {\n          node {\n            id\n            included\n            scheduleItem {\n              name\n              dateStart\n              timeStart\n              timeEnd\n              organizationLocationRoom {\n                organizationLocation {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n      scheduleEvent {\n        id\n        name\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport {\n  Card,\n  Grid,\n  Icon,\n  List\n} from \"tabler-react\"\nimport { TimeStringToJSDateOBJ } from '../../../tools/date_tools'\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport ShopEventTicketBase from \"./ShopEventTicketBase\"\nimport ShopCheckoutForm from \"../ShopCheckoutForm\"\nimport ShopEventTicketPricingCard from \"../event/ShopEventTicketPricingCard\"\n\nimport { GET_SCHEDULE_EVENT_TICKET_QUERY } from \"./queries\"\nimport { CREATE_ORDER } from \"../queries\"\n\n\nfunction ShopEventTicket({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const title = t(\"shop.home.title\")\n  const scheduleEventTicketId = match.params.id\n  const eventId = match.params.event_id\n  const classDate = match.params.date\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_TICKET_QUERY, {\n    variables: { id: scheduleEventTicketId }\n  })\n\n  const [createOrder, { data: createOrderData }] = useMutation(CREATE_ORDER)\n\n\n  if (loading) return (\n    <ShopEventTicketBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopEventTicketBase>\n  )\n  if (error) return (\n    <ShopEventTicketBase title={title}>\n      {t(\"shop.events.ticket.error_loading\")}\n    </ShopEventTicketBase>\n  )\n\n  console.log(data)\n  const eventTicket = data.scheduleEventTicket\n  console.log(eventTicket)\n\n  // Chceck sold out\n  if (eventTicket.isSoldOut) {\n    return (\n      <ShopEventTicketBase title={title}>\n        <Card title={t(\"shop.events.ticket.sold_out_title\")}>\n          <Card.Body>{t(\"shop.events.ticket.sold_out\")}</Card.Body>\n        </Card>\n      </ShopEventTicketBase>\n    )\n  }\n\n  return (\n    <ShopEventTicketBase title={title}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <h3>{eventTicket.scheduleEvent.name}</h3>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col md={4}>\n          <ShopEventTicketPricingCard eventId={eventId} eventTicket={eventTicket} showButton={false} active={true} />\n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"shop.events.ticket.additional_info\")}>\n            <Card.Body>\n              {(eventTicket.description) ?\n                <div dangerouslySetInnerHTML={{ __html: eventTicket.description}} />\n              : t(\"shop.events.ticket.no_additional_info\")}\n            </Card.Body>\n          </Card> \n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"shop.checkout.title\")}>\n            <Card.Body>\n              <Formik\n                initialValues={{ message: \"\" }}\n                // validationSchema={CLASSTYPE_SCHEMA}\n                onSubmit={(values, { setSubmitting }) => {\n\n                    let createOrderInput = {\n                      message: values.message,\n                      scheduleEventTicket: match.params.id,\n                    }\n\n\n                    createOrder({ variables: {\n                      input: createOrderInput,\n                      // file: values.image\n                    }, refetchQueries: [\n                        // {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": false }}\n                    ]})\n                    .then(({ data }) => {\n                        console.log('got data', data)\n                        console.log('good...  now redirect to the payment page')\n                        const orderId = data.createFinanceOrder.financeOrder.id\n                        history.push('/shop/checkout/payment/' + orderId)\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error)\n                        setSubmitting(false)\n                      })\n                }}\n                >\n                {({ isSubmitting, errors, values }) => (\n                  <ShopCheckoutForm \n                    isSubmitting={isSubmitting}\n                    errors={errors}\n                    values={values}\n                  />\n                )}\n              </Formik>\n\n              {/* When a user is not logged in, show a login button to redirect to the login page */}\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopEventTicketBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEventTicket))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { gql } from \"@apollo/client\"\n\nexport const GET_SHOP_ANNOUNCEMENTS_QUERY = gql`\n  query OrganizationAnnouncements($after: String, $before: String) {\n    organizationAnnouncements(first: 100, before: $before, after: $after, displayPublic: true, displayShop: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          displayPublic\n          displayShop\n          title\n          content\n          dateStart\n          dateEnd\n          priority\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n// import { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\n// import {\n//   Icon,\n//   List\n// } from \"tabler-react\";\nimport ShopBase from \"../ShopBase\"\n\n\nfunction ShopHomeBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase title={t(\"shop.home.title\")}>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopHomeBase))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { v4 } from 'uuid'\n\nimport {\n  Card,\n  Grid,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { GET_SHOP_ANNOUNCEMENTS_QUERY } from \"./queries\"\n\nimport ShopHomeBase from \"./ShopHomeBase\"\n\nfunction ShopHome({ t, match, history }) {\n  \n  const { loading, error, data } = useQuery(GET_SHOP_ANNOUNCEMENTS_QUERY);\n\n  if (loading) return (\n    <ShopHomeBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopHomeBase>\n  )\n  if (error) return (\n    <ShopHomeBase>\n      {t(\"shop.home.announcements.error_loading\")}\n    </ShopHomeBase>\n  )\n\n  const announcements = data.organizationAnnouncements\n\n  return (\n    <ShopHomeBase title={t(\"shop.home.title\")}>\n      <Grid.Row cards deck>\n        {(announcements.edges.length) ? announcements.edges.map(({ node }) => (\n          <Grid.Col xs={12} sm={12} md={6} key={v4()}>\n            <Card title={node.title}>\n              <Card.Body>\n                <div dangerouslySetInnerHTML={{ __html:node.content }}></div>\n              </Card.Body>\n            </Card> \n          </Grid.Col>\n        )) : \"\"\n        }\n      </Grid.Row>\n    </ShopHomeBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopHome))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../../ShopBase\"\n\nfunction ShopCheckoutPaymentBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      checkoutProgress=\"payment\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutPaymentBase))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ORDER_QUERY = gql`\n  query FinanceOrder($id: ID!) {\n    financeOrder(id: $id) {\n      id\n      orderNumber\n      account {\n        id\n        fullName\n      }\n      message\n      status\n      total\n      totalDisplay\n      createdAt\n      items {\n        edges {\n          node {\n            id\n            productName\n            description\n            quantity\n            totalDisplay\n            scheduleItem {\n              id\n            }\n            attendanceDate\n          }\n        }\n      }\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { v4 } from 'uuid'\n\nimport {\n  Card,\n  Icon,\n  Table,\n} from \"tabler-react\";\n\nimport { GET_ORDER_QUERY } from \"../queries\"\nimport ShopCheckoutClassInfo from \"../class_info/ShopCheckoutClassInfo\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\nimport { DisplayClassInfo } from '../../tools'\n\n\nfunction ShopCheckoutOrderSummary({ t, id, complete=false }) {\n  const { loading, error, data } = useQuery(GET_ORDER_QUERY, {\n    variables: { id: id }\n  })\n\n  if (loading) return (\n      t(\"general.loading_with_dots\")\n  )\n  if (error) return (\n      t(\"shop.checkout.order_summary.error_loading\")\n  )\n\n  console.log(data)\n  const order = data.financeOrder\n  console.log(order)\n  const orderItems = order.items.edges\n  console.log(orderItems)\n\n  let classDate \n  let scheduleItemId\n  let item\n  console.log(\"Start looping\")\n  for (item of orderItems) {\n    let node = item.node\n    console.log(node)\n    if (node.scheduleItem) {\n      classDate = node.attendanceDate\n      scheduleItemId = node.scheduleItem.id\n    }\n  }\n\n  console.log('schedule item found!')\n  console.log(classDate)\n  console.log(scheduleItemId)\n\n\n  return (\n    <Card title={t(\"shop.checkout.payment.order_summary\")}>\n      <div className=\"table-responsive\">\n        <Table cards={true}>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t('general.item')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {orderItems.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {node.productName} <br /> \n                  <span className=\"text-muted\">\n                    {node.description}\n                  </span>\n                </Table.Col>\n                <Table.Col>{node.totalDisplay}</Table.Col>\n              </Table.Row>      \n            ))}\n            <Table.Row className=\"bold\">\n              <Table.Col>\n                {t(\"general.total\")}\n              </Table.Col>\n              <Table.Col>\n                  {order.totalDisplay}\n              </Table.Col>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </div>\n      <Card.Body>\n        {(order.message) ?\n          <span className=\"text-muted\">\n            <h5><Icon name=\"message-square\" /> {t(\"shop.checkout.order_summary.message\")}</h5> \n            {/* Order message */}\n            {order.message}\n            <br /><br />\n          </span> \n          : \"\"\n        }\n        {(scheduleItemId && classDate) ?\n          <ShopCheckoutClassInfo \n            scheduleItemId={scheduleItemId}\n            date={classDate}\n            complete={complete}\n          />\n          : \"\"\n        }\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutOrderSummary))\n","import { gql } from \"@apollo/client\"\n\n\nexport const CREATE_PAYMENT_LINK = gql`\nmutation CreateFinanceOrderPaymentLink($id: ID!) {\n  createFinanceOrderPaymentLink(id: $id) {\n    financeOrderPaymentLink {\n      paymentLink\n    }\n  }\n}\n`","// @flow\n\nimport React, { useContext, useRef, useState } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n} from \"tabler-react\";\nimport ShopCheckoutPaymentBase from \"./ShopCheckoutPaymentBase\"\nimport ShopCheckoutOrderSummary from \"../order_summary/ShopCheckoutOrderSummary\"\n\nimport { GET_ORDER_QUERY } from \"../queries\"\nimport { CREATE_PAYMENT_LINK } from \"./queries\"\n\n\nfunction ShopCheckoutPayment({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const onlinePaymentsAvailable = appSettings.onlinePaymentsAvailable\n  const btnPayNow = useRef(null);\n  const initialBtnText = <span><Icon name=\"credit-card\" /> {t('shop.checkout.payment.to_payment')} <Icon name=\"chevron-right\" /></span>\n  const [btn_text, setBtnText] = useState(initialBtnText)\n  const title = t(\"shop.home.title\")\n  const id = match.params.id\n  const { loading, error, data } = useQuery(GET_ORDER_QUERY, {\n    variables: { id: id }\n  })\n\n  const [createPaymentLink] = useMutation(CREATE_PAYMENT_LINK)\n\n  if (loading) return (\n    <ShopCheckoutPaymentBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopCheckoutPaymentBase>\n  )\n  if (error) return (\n    <ShopCheckoutPaymentBase title={title}>\n      {t(\"shop.classpass.error_loading\")}\n    </ShopCheckoutPaymentBase>\n  )\n\n  console.log(data)\n  const order = data.financeOrder\n  console.log(order)\n  const orderItems = order.items.edges\n  console.log(orderItems)\n\n  function onClickPay() {\n    btnPayNow.current.setAttribute(\"disabled\", \"disabled\")\n    setBtnText(t(\"shop.checkout.payment.redirecting\"))\n    // btnPayNow.current.setValue(\"redirecting...\")\n    // btnPayNow\n    // btnPayNow.current.removeAttribute(\"disabled\")\n    createPaymentLink({ variables: { id: id } }).then(({ data }) => {\n      console.log('got data', data);\n      const paymentLink = data.createFinanceOrderPaymentLink.financeOrderPaymentLink.paymentLink\n      window.location.href = paymentLink\n    }).catch((error) => {\n      toast.error((t('general.toast_server_error')) +  error, {\n          position: toast.POSITION.BOTTOM_RIGHT\n        })\n      console.log('there was an error sending the query', error)\n    })\n  }\n\n  let msgNextStep\n  let buttonNext\n  if (onlinePaymentsAvailable) {\n    msgNextStep = t(\"shop.checkout.payment.order_received_to_payment_text\")\n    buttonNext = <button\n      className=\"btn btn-block btn-success\"\n      ref={btnPayNow}\n      onClick={ onClickPay }\n    >\n      {btn_text}\n    </button>\n  } else {\n    msgNextStep = t(\"shop.checkout.payment.order_received_to_profile_text\")\n    buttonNext = <Link to=\"/\">\n      <Button\n        block\n        color=\"success\"\n      >\n        {t(\"shop.checkout.payment.to_profile\")} <Icon name=\"chevron-right\" />\n      </Button>\n    </Link>\n  }\n\n\n  return (\n    <ShopCheckoutPaymentBase title={title}>\n        <Grid.Row>\n          <Grid.Col xs={12} sm={12} md={6} lg={6}>\n            <Card title={t(\"shop.checkout.payment.order_received\")}>\n              <Card.Body>\n                <h5 className={\"mb-4\"}>{t(\"shop.checkout.payment.order_received_subheader\")}</h5>\n                {t(\"shop.checkout.payment.order_received_to_payment_explanation\")} <br />< br />\n                {msgNextStep}\n              </Card.Body>\n              <Card.Footer>\n                {buttonNext}\n              </Card.Footer>\n            </Card>\n          </Grid.Col>\n          <Grid.Col xs={12} sm={12} md={6} lg={6}>\n            <ShopCheckoutOrderSummary id={id} />\n          </Grid.Col>\n        </Grid.Row>\n    </ShopCheckoutPaymentBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopCheckoutPayment))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../../ShopBase\"\n\nfunction ShopCheckoutCompleteBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      checkoutProgress=\"complete\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutCompleteBase))","// @flow\n\nimport React, { useRef, useState } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon\n} from \"tabler-react\";\nimport ShopCheckoutCompleteBase from \"./ShopCheckoutCompleteBase\"\nimport ShopCheckoutOrderSummary from \"../order_summary/ShopCheckoutOrderSummary\"\n\nimport { GET_ORDER_QUERY } from \"../queries\"\n\n\nfunction ShopCheckoutComplete({ t, match, history }) {\n  const btnPayNow = useRef(null);\n  const initialBtnText = <span><Icon name=\"credit-card\" /> {t('shop.checkout.payment.to_payment')} <Icon name=\"chevron-right\" /></span>\n  const [btn_text, setBtnText] = useState(initialBtnText)\n  const title = t(\"shop.home.title\")\n  const id = match.params.id\n  const { loading, error, data } = useQuery(GET_ORDER_QUERY, {\n    variables: { id: id }\n  })\n\n  if (loading) return (\n    <ShopCheckoutCompleteBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopCheckoutCompleteBase>\n  )\n  if (error) return (\n    <ShopCheckoutCompleteBase title={title}>\n      {t(\"shop.classpass.error_loading\")}\n    </ShopCheckoutCompleteBase>\n  )\n\n  console.log(data)\n  const order = data.financeOrder\n  console.log(order)\n  const orderItems = order.items.edges\n  console.log(orderItems)\n\n  // Order not found\n  if (!order) {\n    return (\n      <ShopCheckoutCompleteBase title={title}>\n        {t(\"shop.checkout.complete.order_not_found\")}\n      </ShopCheckoutCompleteBase>\n    )\n  }\n\n  let subHeader = \"\"\n  let contentText = \"\"\n  let paymentText = \"\"\n  let complete = false\n\n  // Success!\n  if (order.status == \"DELIVERED\") {\n    // Thank you message\n    subHeader = t(\"shop.checkout.complete.success_subheader\") \n    // Something to explain the user what's next\n    contentText = t(\"shop.checkout.complete.success_content_text\")\n    complete = true\n\n    // Confirm receiving payment to user\n    if (order.total) {\n      paymentText = t(\"shop.checkout.complete.success_payment_text\")\n    }\n  } else {\n    // Fail...\n    // Looks like something went wrong message\n    subHeader = t(\"shop.checkout.complete.fail_subheader\") \n    // Notify user of ways to contact\n    contentText = t(\"shop.checkout.complete.fail_content_text\")\n\n    // Notify user that payment hasn't been received\n    if (order.total) {\n      paymentText = t(\"shop.checkout.complete.fail_payment_text\")\n    }\n  }\n\n\n  return (\n    <ShopCheckoutCompleteBase title={title}>\n        <Grid.Row>\n          <Grid.Col xs={12} sm={12} md={6} lg={6}>\n            <Card title={t(\"shop.checkout.complete.title\")}>\n              <Card.Body>\n                <h5 className={\"mb-4\"}>{subHeader}</h5>\n                {paymentText} <br />\n                {contentText}\n              </Card.Body>\n              <Card.Footer>\n                <Link to=\"/shop/account/\">\n                  <Button \n                    block\n                    color=\"success\"\n                  >\n                    {t(\"shop.complete.to_account\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </Card.Footer>\n            </Card>\n          </Grid.Col>\n          <Grid.Col xs={12} sm={12} md={6} lg={6}>\n            <ShopCheckoutOrderSummary id={id} complete={complete} />\n          </Grid.Col>\n        </Grid.Row>\n    </ShopCheckoutCompleteBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutComplete))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ACCOUNT_CLASSES_QUERY = gql`\n  query ScheduleItemAttendance($before: String, $after: String, $account: ID!) {\n    scheduleItemAttendances(first: 20, before: $before, after: $after, account: $account, accountScheduleEventTicket_Isnull: true) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          cancellationPossible\n          attendanceType\n          date\n          bookingStatus\n          scheduleItem {\n            id\n            timeStart\n            timeEnd\n            organizationLocationRoom {\n              name\n              organizationLocation {\n                name\n              }\n            }\n            organizationClasstype {\n              name\n            }\n          }\n        }\n      } \n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountClassesBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountClassesBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport BadgeBookingStatus from '../../../ui/BadgeBookingStatus'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table\n} from \"tabler-react\"\nimport { GET_ACCOUNT_CLASSES_QUERY } from \"./queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountClassesBase from \"./ShopAccountClassesBase\"\nimport ContentCard from \"../../../general/ContentCard\"\n\n\nfunction ShopAccountClasses({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n\n  // Chain queries. First query user data and then query class attendance for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_CLASSES_QUERY, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })\n  // TODO: add cancel class button & query\n  // const [ updateOrder ] = useMutation(UPDATE_ORDER)\n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountClassesBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountClassesBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountClassesBase>\n      {t(\"shop.account.classes.error_loading_data\")}\n    </ShopAccountClassesBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  console.log(dataUser)\n  const user = dataUser.user\n  const scheduleItemAttendances = data.scheduleItemAttendances\n\n  // Empty list\n  if (!scheduleItemAttendances.edges.length) {\n    return (\n      <ShopAccountClassesBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.classes.title')} >\n              <Card.Body>\n                {t('shop.account.classes.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountClassesBase>\n    )  \n  }\n\n\n\n  // Populated list\n  return (\n    <ShopAccountClassesBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <ContentCard cardTitle={t('shop.account.classes.title')}\n            // headerContent={headerOptions}\n            pageInfo={scheduleItemAttendances.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: scheduleItemAttendances.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.schduleItemAttendances.edges\n                  const pageInfo = fetchMoreResult.schduleItemAttendances.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        schduleItemAttendances: {\n                          __typename: previousResult.schduleItemAttendances.__typename,\n                          edges: [ ...previousResult.schduleItemAttendances.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.class')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.booking_status')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>  \n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                { scheduleItemAttendances.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      { moment(node.date).format(dateFormat) } <br />\n                      <span className=\"text-muted\">\n                        {moment(node.date + ' ' + node.scheduleItem.timeStart).format(timeFormat)}\n                      </span>\n                    </Table.Col>\n                    <Table.Col>\n                      { node.scheduleItem.organizationClasstype.name }\n                    </Table.Col>\n                    <Table.Col>\n                      { node.scheduleItem.organizationLocationRoom.organizationLocation.name } <br />\n                      <span className=\"text-muted\">\n                        { node.scheduleItem.organizationLocationRoom.name }\n                      </span> \n                    </Table.Col>\n                    <Table.Col>\n                      <BadgeBookingStatus status={node.bookingStatus} />\n                    </Table.Col>\n                    <Table.Col>\n                      {/* TODO: improve this by adding a \"Can be cancelled field to GQL schema\" */}\n                      {((node.bookingStatus != \"CANCELLED\") && node.cancellationPossible) ?  \n                        <div>\n                          <Link to={`/shop/account/class_cancel/${node.scheduleItem.id}/${node.date}/${node.id}`}>\n                            <Button \n                              className=\"pull-right mr-r\"\n                              color=\"warning\"\n                              >\n                              {t(\"general.cancel\")}\n                            </Button>\n                          </Link>\n                          <Link to={`/shop/account/class_info/${node.scheduleItem.id}/${node.date}`}>\n                            <Button\n                              className=\"pull-right\"\n                              color=\"secondary\"\n                              icon=\"info\"\n                            >\n                              {t(\"general.info\")}\n                            </Button>\n                          </Link>\n                        </div> : \"\"\n                      }\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </ContentCard>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountClassesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountClasses))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\";\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopClasspassesBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")}>\n      <h4>{t(\"shop.classpasses.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspassesBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopClasspassBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      return_url=\"/shop/classpasses\"\n      checkoutProgress=\"order\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspassBase))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_CLASSPASS_QUERY = gql`\n  query OrganizationClasspass($id: ID!) {\n    organizationClasspass(id:$id) {\n      id\n      archived\n      displayPublic\n      displayShop\n      trialPass\n      name\n      description\n      price\n      priceDisplay\n      financeTaxRate {\n        id\n        name\n      }\n      validity\n      validityUnit\n      validityUnitDisplay\n      classes\n      unlimited\n      organizationMembership {\n        id\n        name\n      }\n      quickStatsAmount\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    user {\n      hasReachedTrialLimit\n    }\n  }\n`\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Grid,\n  Icon,\n  List,\n  PricingCard\n} from \"tabler-react\";\nimport ShopClasspassesBase from \"./ShopClasspassBase\"\n\nimport { GET_ORGANIZATION_CLASSPASS_QUERY } from \"./queries\"\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopClasspassPricingCard({ t, classpass, btnLink, active=false }) {\n  // classpass should be an object with at least the following values from an organizationClasspass object:\n  // id, name, priceDisplay, unlimited, classes, validity, link\n  return (\n    <PricingCard active={active}>\n      <PricingCard.Category>\n        {classpass.name}\n      </PricingCard.Category>\n      <PricingCard.Price>\n        {classpass.priceDisplay}\n      </PricingCard.Price>\n      <PricingCard.AttributeList>\n        <PricingCard.AttributeItem>\n          <b>{(classpass.unlimited) ? t('general.unlimited') : classpass.classes }</b> { \" \" }\n          {((classpass.classes != 1) || (classpass.unlimited))? t('general.classes'): t('general.class')}\n        </PricingCard.AttributeItem>\n        <PricingCard.AttributeItem>\n          {t('general.valid_for')} { \" \" }\n          <b>{classpass.validity}</b> {' '} {classpass.validityUnitDisplay}\n        </PricingCard.AttributeItem>\n      </PricingCard.AttributeList>\n      {(btnLink) ?\n        <Link to={btnLink}>\n          <PricingCard.Button >\n            {t(\"shop.classpasses.choose\")} <Icon name=\"chevron-right\" />\n          </PricingCard.Button>\n        </Link>\n        : \"\"\n      }\n    </PricingCard>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspassPricingCard))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { gql } from \"@apollo/client\"\n\nexport const GET_ORGANIZATION_CLASSPASSES_QUERY = gql`\n  query OrganizationClasspasses($after: String, $before: String) {\n    organizationClasspasses(first: 100, before: $before, after: $after, archived: false, displayShop: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          displayShop\n          trialPass\n          name\n          description\n          price\n          priceDisplay\n          financeTaxRate {\n            id\n            name\n          }\n          validity\n          validityUnit\n          validityUnitDisplay\n          classes\n          unlimited\n          organizationMembership {\n            id\n            name\n          }\n          quickStatsAmount\n          financeGlaccount {\n            id \n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Grid,\n  Icon,\n  List,\n  PricingCard\n} from \"tabler-react\";\nimport ShopClasspassesBase from \"./ShopClasspassesBase\"\nimport ShopClasspassPricingCard from \"../classpass/ShopClasspassPricingCard\"\n\nimport { GET_ORGANIZATION_CLASSPASSES_QUERY } from \"./queries\"\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopClasspasses({ t, match, history }) {\n  const title = t(\"shop.home.title\")\n  const { loading, error, data } = useQuery(GET_ORGANIZATION_CLASSPASSES_QUERY)\n\n  if (loading) return (\n    <ShopClasspassesBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopClasspassesBase>\n  )\n  if (error) return (\n    <ShopClasspassesBase title={title}>\n      {t(\"shop.classpasses.error_loading\")}\n    </ShopClasspassesBase>\n  )\n\n  console.log(data)\n  const classpasses = data.organizationClasspasses\n  console.log(classpasses)\n\n  return (\n    <ShopClasspassesBase title={title}>\n        <Grid.Row>\n          {classpasses.edges.map(({ node }) => (\n            <Grid.Col xs={12} sm={12} md={3}>\n              <ShopClasspassPricingCard\n                classpass={node}\n                btnLink={\"/shop/classpass/\" + node.id}\n              />\n              {/* <PricingCard>\n                <PricingCard.Category>\n                  {node.name}\n                </PricingCard.Category>\n                <PricingCard.Price>\n                  {node.priceDisplay}\n                </PricingCard.Price>\n                <PricingCard.AttributeList>\n                  <PricingCard.AttributeItem>\n                    <b>{(node.unlimited) ? t('general.unlimited') : node.classes }</b> { \" \" }\n                    {((node.classes != 1) || (node.unlimited))? t('general.classes'): t('general.class')}\n                  </PricingCard.AttributeItem>\n                  <PricingCard.AttributeItem>\n                    {t('general.valid_for')} { \" \" }\n                    <b>{node.validity}</b> {' '} {node.validityUnitDisplay}\n                  </PricingCard.AttributeItem>\n                </PricingCard.AttributeList>\n                <Link to={\"/shop/classpass/\" + node.id}>\n                  <PricingCard.Button >\n                    {t(\"shop.classpasses.choose\")} <Icon name=\"chevron-right\" />\n                  </PricingCard.Button>\n                </Link>\n              </PricingCard> */}\n            </Grid.Col>\n          ))}\n        </Grid.Row>\n\n        \n    </ShopClasspassesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspasses))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport {\n  Card,\n  Grid,\n  Icon,\n  List\n} from \"tabler-react\"\nimport { TimeStringToJSDateOBJ } from '../../../tools/date_tools'\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport ShopClasspassBase from \"./ShopClasspassBase\"\nimport ShopCheckoutForm from \"../ShopCheckoutForm\"\nimport ShopClasspassesPricingCard from \"./ShopClasspassPricingCard\"\n\nimport { GET_CLASSPASS_QUERY } from \"./queries\"\nimport { GET_CLASS_QUERY } from \"../queries\"\nimport { CREATE_ORDER } from \"../queries\"\n\n\nfunction ShopClasspass({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const title = t(\"shop.home.title\")\n  const id = match.params.id\n  const scheduleItemId = match.params.class_id\n  const classDate = match.params.date\n\n  const { loading, error, data } = useQuery(GET_CLASSPASS_QUERY, {\n    variables: { id: id }\n  })\n\n  const { loading: loadingClass, error: errorClass, data: dataClass } = useQuery(GET_CLASS_QUERY, {\n    variables: { scheduleItemId: scheduleItemId, date: classDate },\n    skip: (!scheduleItemId || !classDate)\n  })\n\n  const [createOrder, { data: createOrderData }] = useMutation(CREATE_ORDER)\n\n\n  if (loading) return (\n    <ShopClasspassBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopClasspassBase>\n  )\n  if (error) return (\n    <ShopClasspassBase title={title}>\n      {t(\"shop.classpass.error_loading\")}\n    </ShopClasspassBase>\n  )\n\n  console.log(data)\n  const classpass = data.organizationClasspass\n  const user = data.user\n  console.log(classpass)\n\n  console.log('DATA CLASS')\n  console.log(dataClass)\n\n  if (user.hasReachedTrialLimit && classpass.trialPass) {\n    return (\n      <ShopClasspassBase title={title}>\n        <Card title={t(\"shop.classpass.trial_limit_reached\")}>\n          <Card.Body>\n            {t(\"shop.classpass.trial_limit_reached_explanation\")}\n          </Card.Body>\n        </Card>\n      </ShopClasspassBase>\n    )\n  }\n\n  return (\n    <ShopClasspassBase title={title}>\n      <Grid.Row>\n        <Grid.Col xs={12} sm={12} md={4}>\n          <ShopClasspassesPricingCard classpass={classpass} active={true} />\n        </Grid.Col>\n        <Grid.Col xs={12} sm={12} md={4}>\n          {(dataClass && !loadingClass && !errorClass) ?\n            <Card title={t(\"shop.classpass.class_book_information\")}>\n              <Card.Body>\n                {t(\"shop.classpass.class_book_explanation\")} <br /><br />\n                <b>\n                  {moment(classDate).format(dateFormat)} {' '}\n                  {moment(TimeStringToJSDateOBJ(dataClass.scheduleClass.timeStart)).format(timeFormat)} {' - '}\n                  {moment(TimeStringToJSDateOBJ(dataClass.scheduleClass.timeEnd)).format(timeFormat)} <br />  \n                </b>\n                {dataClass.scheduleClass.organizationClasstype.name + \" \" + t(\"general.at\") + ' ' + \n                  dataClass.scheduleClass.organizationLocationRoom.organizationLocation.name}\n\n              </Card.Body>\n            </Card>\n            : \"\" \n          }\n          <Card title={t(\"shop.classpass.additional_information\")}>\n            <Card.Body>\n              <div dangerouslySetInnerHTML={{__html:classpass.description}}></div>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col xs={12} sm={12} md={4}>\n          <Card title={t(\"shop.checkout.title\")}>\n            <Card.Body>\n              <Formik\n                initialValues={{ message: \"\" }}\n                // validationSchema={CLASSTYPE_SCHEMA}\n                onSubmit={(values, { setSubmitting }) => {\n\n                    let createOrderInput = {\n                      message: values.message,\n                      organizationClasspass: match.params.id,\n                    }\n\n                    if (scheduleItemId && classDate) {\n                      createOrderInput.attendanceDate = classDate\n                      createOrderInput.scheduleItem = scheduleItemId\n                    }\n\n                    createOrder({ variables: {\n                      input: createOrderInput,\n                      // file: values.image\n                    }, refetchQueries: [\n                        // {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": false }}\n                    ]})\n                    .then(({ data }) => {\n                        console.log('got data', data)\n                        console.log('good...  now redirect to the payment page')\n                        const orderId = data.createFinanceOrder.financeOrder.id\n                        history.push('/shop/checkout/payment/' + orderId)\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error)\n                        setSubmitting(false)\n                      })\n                }}\n                >\n                {({ isSubmitting, errors, values }) => (\n                  <ShopCheckoutForm \n                    isSubmitting={isSubmitting}\n                    errors={errors}\n                    values={values}\n                  />\n                )}\n              </Formik>\n\n              {/* When a user is not logged in, show a login button to redirect to the login page */}\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopClasspassBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspass))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\";\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopSubscriptionsBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")}>\n      <h4>{t(\"shop.subscriptions.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopSubscriptionsBase))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Grid,\n  Icon,\n  List,\n  PricingCard\n} from \"tabler-react\";\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopClasspassPricingCard({ t, subscription, btnLink, active=false, displayCheckoutInfo=false }) {\n  // classpass should be an object with at least the following values from an organizationClasspass object:\n  // id, name, priceDisplay, unlimited, classes, validity, link\n  return (\n    <PricingCard active={active}>\n      <PricingCard.Category>\n        {subscription.name}\n      </PricingCard.Category>\n      <PricingCard.Price>\n        {subscription.priceTodayDisplay}\n      </PricingCard.Price>\n      <PricingCard.AttributeList>\n        <PricingCard.AttributeItem>\n          {/* {((subscription.classes != 1) || (subscription.unlimited))? t('general.classes'): t('general.class')} / {t('general.month')} { \": \" } */}\n          {t('general.classes')} / {t('general.month')} { \": \" }\n          <b>{(subscription.unlimited) ? t('general.unlimited') : subscription.classes }</b> \n        </PricingCard.AttributeItem>\n        <PricingCard.AttributeItem>\n          {t('general.min_duration')} { \": \" }\n          <b>{subscription.minDuration} {(subscription.minDuration == 1) ? t(\"general.month\") : t(\"general.months\")}</b> \n        </PricingCard.AttributeItem>\n        {(displayCheckoutInfo) ? \n          <PricingCard.AttributeItem>\n            {t(\"general.first_month\")}: <b>{subscription.priceFirstMonthDisplay}</b>\n          </PricingCard.AttributeItem>\n        : \"\"}\n        {(displayCheckoutInfo && subscription.accountRegistrationFee > 0) ? \n          <PricingCard.AttributeItem>\n            {t(\"general.registration_fee\")}: <b>{subscription.accountRegistrationFeeDisplay}</b>\n          </PricingCard.AttributeItem>\n        : \"\"}\n      </PricingCard.AttributeList>\n      {(btnLink) ?\n        <Link to={btnLink}>\n          <PricingCard.Button >\n            {t(\"shop.subscriptions.choose\")} <Icon name=\"chevron-right\" />\n          </PricingCard.Button>\n        </Link>\n        : \"\"\n      }\n    </PricingCard>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspassPricingCard))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { gql } from \"@apollo/client\"\n\nexport const GET_ORGANIZATION_SUBSCRIPTIONS_QUERY = gql`\n  query OrganizationSubscriptions($after: String, $before: String) {\n    organizationSubscriptions(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          priceTodayDisplay\n          displayPublic\n          displayShop\n          name\n          description\n          sortOrder\n          minDuration\n          classes\n          subscriptionUnit\n          subscriptionUnitDisplay\n          reconciliationClasses\n          unlimited\n          termsAndConditions\n          registrationFee\n          organizationMembership {\n            id\n            name\n          }\n          quickStatsAmount\n          financeGlaccount {\n            id \n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Grid,\n} from \"tabler-react\";\nimport ShopSubscriptionsBase from \"./ShopSubscriptionsBase\"\nimport ShopSubscriptionPricingCard from \"../subscription/ShopSubscriptionPricingCard\"\n\nimport { GET_ORGANIZATION_SUBSCRIPTIONS_QUERY } from \"./queries\"\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopSubscriptions({ t, match, history }) {\n  const title = t(\"shop.home.title\")\n  const { loading, error, data } = useQuery(GET_ORGANIZATION_SUBSCRIPTIONS_QUERY)\n\n  if (loading) return (\n    <ShopSubscriptionsBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopSubscriptionsBase>\n  )\n  if (error) return (\n    <ShopSubscriptionsBase title={title}>\n      {t(\"shop.subscriptions.error_loading\")}\n    </ShopSubscriptionsBase>\n  )\n\n  console.log(data)\n  const subscriptions = data.organizationSubscriptions\n  console.log(subscriptions)\n\n  return (\n    <ShopSubscriptionsBase title={title}>\n        <Grid.Row>\n          {subscriptions.edges.map(({ node }) => (\n            <Grid.Col xs={12} sm={12} md={3}>\n              <ShopSubscriptionPricingCard\n                subscription={node}\n                btnLink={\"/shop/subscription/\" + node.id}\n              />\n            </Grid.Col>\n          ))}\n        </Grid.Row>\n\n        \n    </ShopSubscriptionsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopSubscriptions))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useMutation } from '@apollo/client'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Card,\n} from \"tabler-react\"\nimport ShopCheckoutForm from \"../ShopCheckoutForm\"\n\nimport { CREATE_ORDER } from \"../queries\"\n\n\nfunction CheckoutCardMollie({ t, match, history, organizationSubscriptionId }) {\n  const [createOrder, { data: createOrderData }] = useMutation(CREATE_ORDER)\n\n  return (\n    <Card title={t(\"shop.checkout.title\")}>\n      <Card.Body>\n        <Formik\n          initialValues={{ message: \"\" }}\n          // validationSchema={CLASSTYPE_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n\n              let createOrderInput = {\n                message: values.message,\n                organizationSubscription: organizationSubscriptionId,\n              }\n\n              createOrder({ variables: {\n                input: createOrderInput,\n                // file: values.image\n              }, refetchQueries: [\n                  // {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  console.log('good...  now redirect to the payment page')\n                  const orderId = data.createFinanceOrder.financeOrder.id\n                  history.push('/shop/checkout/payment/' + orderId)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <ShopCheckoutForm \n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n            />\n          )}\n        </Formik>\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default withTranslation()(withRouter(CheckoutCardMollie))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Button,\n  Card,\n  Icon,\n} from \"tabler-react\"\n\n\nfunction CheckoutCardBankAccountRequired({ t, match, history }) {\n\n  return (\n    <Card title={t(\"shop.subscription.bank_account_required\")}>\n      <Card.Body>\n        {t(\"shop.subscription.bank_account_required_explanation\")}\n      </Card.Body>\n      <Card.Footer>\n      <Link to=\"/shop/account/bank_account\">\n        <Button \n          block\n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n        >\n          {t('shop.subscription.to_bank_account')} <Icon name=\"chevron-right\" />\n        </Button>\n      </Link>\n      </Card.Footer>\n    </Card>\n  )\n}\n\n\nexport default withTranslation()(withRouter(CheckoutCardBankAccountRequired))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport {\n  Button,\n  Form,\n  Icon\n} from \"tabler-react\"\n\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport cs_django_links from \"../../../tools/cs_django_links\"\n\n\nconst ShopClasspassForm = ({ t, isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n    <FoForm>\n      <Form.Group label={t('shop.subscription.start_on')}>\n        <CSDatePicker\n          selected={values.dateStart}\n          onChange={(date) => setFieldValue(\"dateStart\", date)}\n          onBlur={() => setFieldTouched(\"dateStart\", true)}\n        />\n        <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <small className=\"text-muted\">\n        {t(\"shop.order.by_placing_this_order\")} <br />\n        <ul>\n          <li>{t(\"shop.order.agree_terms\")} {\" \"}\n            <a target=\"_blank\" href={cs_django_links.EXPORT_TERMS_AND_CONDITIONS}>{t(\"general.terms_and_conditions\")}</a>\n          </li>\n          <li>{t(\"shop.order.agree_privacy\")} {\" \"}\n            <a target=\"_blank\" href={cs_django_links.EXPORT_PRIVACY_POLICY}>{t(\"general.privacy_policy\")}</a>\n          </li>\n        </ul>\n      </small>\n      <Button \n        block\n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting || !values.dateStart}\n      >\n        {(!values.dateStart) ? t(\"shop.subscription.please_select_date\") : t(\"general.i_agree\")}\n        {\" \"} <Icon name=\"chevron-right\" />\n      </Button>\n    </FoForm>\n)\n\nexport default withTranslation()(withRouter(ShopClasspassForm))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SUBSCRIPTION_SCHEMA = Yup.object().shape({\n    dateStart: Yup.string()\n      .nullable()\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useMutation } from '@apollo/client'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Card,\n} from \"tabler-react\"\nimport CheckoutCardDirectDebitForm from \"./CheckoutCardDirectDebitForm\"\nimport { ACCOUNT_SUBSCRIPTION_SCHEMA } from \"./yupSchemaDirectDebit\"\n\n\nimport { dateToLocalISO } from \"../../../tools/date_tools\"\nimport { CREATE_ACCOUNT_SUBSCRIPTION } from \"../../relations/accounts/subscriptions/queries\"\n\n\nfunction CheckoutDirectDebit({ t, match, history, accountId, organizationSubscription }) {\n  const [createSubscription] = useMutation(CREATE_ACCOUNT_SUBSCRIPTION)\n\n  return (\n    <Card title={t(\"shop.checkout.title\")}>\n      <Card.Body>\n        {/* <p>{t(\"shop.subscription.bank_account_required_explanation\")}</p> */}\n        <div dangerouslySetInnerHTML={{ __html: organizationSubscription.termsAndConditions}} />\n        <Formik\n          initialValues={{ message: \"\" }}\n          validationSchema={ACCOUNT_SUBSCRIPTION_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              createSubscription({ variables: {\n                input: {\n                  organizationSubscription: organizationSubscription.id,\n                  account: accountId,\n                  dateStart: dateToLocalISO(values.dateStart),\n                },\n                // file: values.image\n              }, refetchQueries: [\n                  // {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  console.log('good...  now redirect to the subscription activated page')\n                  const accountSubscriptionId = data.createAccountSubscription.accountSubscription.id\n                  history.push(`/shop/subscription/direct_debit_activated/${accountSubscriptionId}`)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <CheckoutCardDirectDebitForm \n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n            />\n          )}\n        </Formik>\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default withTranslation()(withRouter(CheckoutDirectDebit))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopSubscriptionBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      return_url=\"/shop/subscriptions\"\n      checkoutProgress=\"order\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopSubscriptionBase))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SUBSCRIPTION_QUERY = gql`\n  query OrganizationSubscription($id: ID!) {\n    organizationSubscription(id:$id) {\n      id\n      archived\n      priceTodayDisplay\n      displayPublic\n      displayShop\n      name\n      description\n      sortOrder\n      minDuration\n      classes\n      subscriptionUnit\n      subscriptionUnitDisplay\n      reconciliationClasses\n      unlimited\n      termsAndConditions\n      registrationFee\n      shopPaymentMethod\n      accountRegistrationFee\n      accountRegistrationFeeDisplay\n      priceFirstMonthDisplay\n      organizationMembership {\n        id\n        name\n      }\n      quickStatsAmount\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n      teacher\n      employee\n      hasBankAccountInfo\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport {\n  Card,\n  Grid,\n  Icon,\n  List\n} from \"tabler-react\"\nimport { TimeStringToJSDateOBJ } from '../../../tools/date_tools'\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport CheckoutCardMollie from './CheckoutCardMollie'\nimport CheckoutCardBankAccountRequired from './CheckoutCardBankAccountRequired'\nimport CheckoutCardDirectDebit from './CheckoutCardDirectDebit'\nimport ShopSubscriptionBase from \"./ShopSubscriptionBase\"\nimport ShopCheckoutForm from \"../ShopCheckoutForm\"\nimport ShopSubscriptionPricingCard from \"./ShopSubscriptionPricingCard\"\n\nimport { GET_SUBSCRIPTION_QUERY } from \"./queries\"\n// import { GET_CLASS_QUERY } from \"../queries\"\n\nfunction ShopSubscription({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const title = t(\"shop.home.title\")\n  const id = match.params.id\n  // const scheduleItemId = match.params.class_id\n  // const classDate = match.params.date\n\n\n  // fetchPolicy network-only prevents caching. Need fresh results when coming back after setting bank account.\n  const { loading, error, data } = useQuery(GET_SUBSCRIPTION_QUERY, {\n    variables: { id: id },\n    fetchPolicy: \"network-only\"\n  })\n\n  if (loading) return (\n    <ShopSubscriptionBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopSubscriptionBase>\n  )\n  if (error) return (\n    <ShopSubscriptionBase title={title}>\n      {t(\"shop.subscription.error_loading\")}\n    </ShopSubscriptionBase>\n  )\n\n  console.log(data)\n  const subscription = data.organizationSubscription\n  const account = data.user\n  console.log(subscription)\n  console.log(account)\n\n  let CheckoutCard\n\n  // Check for shop subscription payment method\n  if (subscription.shopPaymentMethod === \"DIRECTDEBIT\") {\n    // Check for bank account details, if not set, \n    if (!account.hasBankAccountInfo) {\n      // Create local storage back url for account bank account component    \n      localStorage.setItem(CSLS.SHOP_ACCOUNT_BANK_ACCOUNT_NEXT, `/shop/subscription/${id}`)\n      // Show bank account requird \n      CheckoutCard = <CheckoutCardBankAccountRequired />\n    } else {\n      // Allow customer to create a subscription\n      CheckoutCard = <CheckoutCardDirectDebit accountId={account.accountId} organizationSubscription={subscription} />\n    }\n  } else {\n    CheckoutCard = <CheckoutCardMollie organizationSubscriptionId={id} />\n  }\n\n\n  return (\n    <ShopSubscriptionBase title={title}>\n      <Grid.Row>\n        <Grid.Col xs={12} sm={12} md={4}>\n          <ShopSubscriptionPricingCard subscription={subscription} active={true} displayCheckoutInfo={true} />\n        </Grid.Col>\n        <Grid.Col xs={12} sm={12} md={4}>\n          <Card title={t(\"shop.subscription.additional_information\")}>\n            <Card.Body>\n              <div dangerouslySetInnerHTML={{__html:subscription.description}}></div>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col xs={12} sm={12} md={4}>\n          {CheckoutCard}\n        </Grid.Col>\n      </Grid.Row>\n    </ShopSubscriptionBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopSubscription))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopSubscriptionDirectDebitActivatedBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      checkoutProgress=\"complete\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopSubscriptionDirectDebitActivatedBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SUBSCRIPTION_QUERY = gql`\n  query AccountSubscription($id: ID!) {\n    accountSubscription(id:$id) {\n      id\n      organizationSubscription {\n        id\n        name\n      }\n      financePaymentMethod {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      note\n      creditTotal\n      registrationFeePaid\n      createdAt\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  List\n} from \"tabler-react\"\nimport { TimeStringToJSDateOBJ } from '../../../tools/date_tools'\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport ShopSubscriptionDirectDebitActivatedBase from \"./ShopSubscriptionDirectDebitActivatedBase\"\n\nimport { GET_ACCOUNT_SUBSCRIPTION_QUERY } from \"./queries\"\n// import { GET_CLASS_QUERY } from \"../queries\"\n\nfunction ShopSubscriptionDirectDebitActivated({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const title = t(\"shop.home.title\")\n  const id = match.params.id\n  // const scheduleItemId = match.params.class_id\n  // const classDate = match.params.date\n\n\n  // fetchPolicy network-only prevents caching. Need fresh results when coming back after setting bank account.\n  const { loading, error, data } = useQuery(GET_ACCOUNT_SUBSCRIPTION_QUERY, {\n    variables: { id: id },\n    fetchPolicy: \"network-only\"\n  })\n\n  if (loading) return (\n    <ShopSubscriptionDirectDebitActivatedBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopSubscriptionDirectDebitActivatedBase>\n  )\n  if (error) return (\n    <ShopSubscriptionDirectDebitActivatedBase title={title}>\n      {t(\"shop.subscription.error_loading\")}\n    </ShopSubscriptionDirectDebitActivatedBase>\n  )\n\n  console.log(data)\n  const subscription = data.accountSubscription\n  const account = data.user\n  console.log(subscription)\n  console.log(account)\n\n  return (\n    <ShopSubscriptionDirectDebitActivatedBase title={title}>\n      <Grid.Row>\n        <Grid.Col xs={12} sm={12} md={12} lg={12}>\n          <Card title={t(\"shop.subscription_directdebit_activated.thank_you\")}>\n            <Card.Body>\n              {t(\"shop.subscription_directdebit_activated.message_activated\")} <br/>\n\n              <b>{subscription.organizationSubscription.name}</b> {t(\"shop.subscription_directdebit_activated.starting_on\")} {' '}\n              <b>{moment(subscription.dateStart).format(dateFormat)}</b>.\n              <br /><br />\n              <b>{t(\"shop.subscription_directdebit_activated.what_next_question\")}</b>\n              <List.Group>\n                <Link to=\"/shop/classes\" className=\"mb-1\">\n                  <List.GroupItem>\n                    {t('shop.subscription_directdebit_activated.next_book_class')} <Icon name=\"chevron-right\"/>\n                  </List.GroupItem>\n                </Link>\n                <Link to=\"/shop/account\" className=\"mb-1\">\n                  <List.GroupItem>\n                    {t('shop.subscription_directdebit_activated.next_account')} <Icon name=\"chevron-right\"/>\n                  </List.GroupItem>\n                </Link>\n                <Link to=\"/\">\n                  <List.GroupItem>\n                    {t('shop.subscription_directdebit_activated.next_continue_shopping')} <Icon name=\"chevron-right\"/>\n                  </List.GroupItem>\n                </Link>\n              </List.Group>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopSubscriptionDirectDebitActivatedBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopSubscriptionDirectDebitActivated))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const PASSWORD_CHANGE_SCHEMA = Yup.object().shape({\n    passwordCurrent: Yup.string()\n      .required(t('yup.field_required')),\n    passwordNew: Yup.string()\n      .required(t('yup.field_required'))\n      .min(2, t('yup.min_len_9')),\n    passwordNew2: Yup.string()\n      .oneOf([Yup.ref('passwordNew'), null], t('yup.passwords_must_match')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\n// import CSDatePicker from \"../../ui/CSDatePicker\"\n// import ISO_COUNTRY_CODES from \"../../../tools/iso_country_codes\"\n\n\nconst UserPasswordChangeForm = ({ t, history, isSubmitting, errors, values, return_url, setFieldTouched, setFieldValue }) => (\n  <FoForm className=\"card\" autoComplete=\"off\">\n    <Card.Body className=\"p-6\">\n      <Card.Title>\n        {t('user.change_password.title')}\n      </Card.Title>\n      <Form.Group label={t('user.change_password.password_current')}>\n        <Field type=\"password\" \n                name=\"passwordCurrent\" \n                className={(errors.passwordCurrent) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"passwordCurrent\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('user.change_password.password_new')}>\n        <Field type=\"password\" \n                name=\"passwordNew\" \n                className={(errors.passwordNew) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"passwordNew\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('user.change_password.password_new_repeat')}>\n        <Field type=\"password\" \n                name=\"passwordNew2\" \n                className={(errors.passwordNew2) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"passwordNew2\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Footer>\n        <Button \n          block\n          loading={isSubmitting}\n          color=\"primary\"\n          type=\"submit\" \n          disabled={isSubmitting}\n        >\n          {t('user.change_password.title')}\n        </Button>\n      </Form.Footer>\n    </Card.Body>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(UserPasswordChangeForm))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport { ToastContainer, Slide } from 'react-toastify'\n\nimport {\n  Container,\n  Grid,\n  Page\n} from \"tabler-react\"\n\n\nfunction CSStandalonePage({ t, urlLogo=\"\", children}) {\n\n  return (\n    <Page>\n      <div className=\"page-single\">\n        <Container>\n          <Grid.Row>\n            <div className=\"col col-login mx-auto\">            \n              <div className=\"text-center mb-5\">\n                { (urlLogo) ? <img src={urlLogo} className=\"h-9\" alt=\"logo\" /> : \"\" }\n              </div>\n              {children}\n              <ToastContainer \n                autoClose={5000} \n                transition={Slide}\n              />\n            </div>\n          </Grid.Row>\n        </Container>\n      </div>\n    </Page>\n  )\n}\n\nexport default withTranslation()(CSStandalonePage)\n\n\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { PASSWORD_CHANGE_SCHEMA } from './yupSchema'\nimport OrganizationContext from '../../context/OrganizationContext'\n\nimport {\n  Button,\n  Card,\n  Icon,\n  List,\n  StandaloneFormPage,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { UPDATE_ACCOUNT_PASSWORD } from \"../../../queries/system/auth\"\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport UserPasswordChangeForm from './UserPasswordChangeForm';\n\nimport CSStandaloneFormPage from \"../../ui/CSStandaloneFormPage\"\n\n\nfunction UserChangePassword({t, match, history}) {\n  const organization = useContext(OrganizationContext)\n  console.log(organization)\n\n  let errorMessage\n  const [updatePassword, { data }] = useMutation(UPDATE_ACCOUNT_PASSWORD)\n\n  return (\n    <CSStandaloneFormPage urlLogo={organization.urlLogoLogin} >\n      {/* TODO: point imageURL to logo */}\n      <Formik\n        initialValues={{ \n          passwordCurrent: \"\",\n          passwordNew: \"\",\n          passwordNew2: \"\"\n        }}\n        validationSchema={PASSWORD_CHANGE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            let vars = {\n              input: {\n                passwordCurrent: values.passwordCurrent,\n                passwordNew: values.passwordNew\n              }\n            }\n\n            updatePassword({ variables: vars })\n              .then(({ data }) => {\n                console.log('got data', data)\n                setTimeout(() => toast.success((t('user.change_password.success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                }), 300)\n                window.history.back()\n              }).catch((error) => {\n                console.log('#############')\n                console.log(error.messages)\n                console.log(error.graphQLErrors)\n                console.log(Object.keys(error))\n\n                if (error.graphQLErrors) {\n                  let i\n                  for (i = 0; i < error.graphQLErrors.length; i++) {\n                    toast.error(error.graphQLErrors[0].message\n                        .replace(/'/g, \"\")\n                        .replace(/,/g, \"\")\n                        .replace(/\\[/g, \"\")\n                        .replace(/\\]/g, \"\"), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  }\n                } else {\n                  // Show general error message\n                  toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                }\n                \n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <UserPasswordChangeForm\n            isSubmitting={isSubmitting}\n            etFieldValue={setFieldValue}\n            esetFieldTouched={setFieldTouched}\n            errors={errors}\n            values={values}\n          />\n        )}\n      </Formik>    \n      <h5>{t('user.change_password.requirements')}</h5>\n      <List>\n        <List.Item>{t('user.change_password.requirement_not_a_digit')}</List.Item>\n        <List.Item>{t('user.change_password.requirement_not_common')}</List.Item>\n        <List.Item>{t('user.change_password.requirement_min_length')}</List.Item>\n        <List.Item>{t('user.change_password.requirement_not_similar_account')}</List.Item>\n      </List>\n      {/* Cancel button below form */}\n      <Button \n        block\n        color=\"link\"\n        onClick={(event) => {\n          event.preventDefault()  \n          window.history.back()\n        }}\n      >\n        {t('general.cancel')}\n      </Button>\n    </CSStandaloneFormPage>\n  )\n}\n\n\nexport default withTranslation()(withRouter(UserChangePassword))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\n// import CSDatePicker from \"../../ui/CSDatePicker\"\n// import ISO_COUNTRY_CODES from \"../../../tools/iso_country_codes\"\n\n\nconst UserLoginForm = ({ t, history, isSubmitting, errors }) => (\n  <FoForm className=\"card\" autoComplete=\"off\">\n    <Card.Body className=\"p-6\">\n      <Card.Title>\n        {t('user.login.title')}\n      </Card.Title>\n      <Form.Group label={t('user.login.email')}>\n        <Field type=\"text\" \n                name=\"email\" \n                placeholder={t('user.login.email_placeholder')}\n                className={(errors.email) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"email\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.password')}>\n        <Field type=\"password\" \n                name=\"password\" \n                placeholder={t('user.login.password_placeholder')}\n                className={(errors.password) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"password\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Footer>\n        <Grid.Row>\n          <Grid.Col md={6}>\n            <Button \n              block\n              loading={isSubmitting}\n              color=\"primary\"\n              type=\"submit\" \n              disabled={isSubmitting}\n            >\n              {t('general.login')}\n            </Button>\n          </Grid.Col>\n          <Grid.Col md={6}>\n            <Button \n              color=\"link\"\n              RootComponent=\"a\"\n              href={(window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\") ? \n                \"http://localhost:8000/d/accounts/password/reset/\" :\n                \"/d/accounts/password/reset/\"\n              } \n            >\n              {t('user.register.reset_password')}\n            </Button>\n          </Grid.Col>\n        </Grid.Row>\n      </Form.Footer>\n    </Card.Body>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(UserLoginForm))\n\n","import React, { useContext } from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationContext from '../../context/OrganizationContext'\n\nimport { TOKEN_AUTH, TOKEN_REFRESH } from \"../../../queries/system/auth\"\nimport { CSAuth } from \"../../../tools/authentication\"\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport UserLoginForm from \"./UserLoginForm\"\nimport CSStandaloneFormPage from \"../../ui/CSStandaloneFormPage\"\n\n\nfunction UserLogin({t, match, history}) {\n  const organization = useContext(OrganizationContext)\n  console.log(organization)\n\n  let errorMessage\n  const [ doTokenAuth ] = useMutation(TOKEN_AUTH)\n  const [ doTokenRefresh ] = useMutation(TOKEN_REFRESH)\n\n  return (\n    <CSStandaloneFormPage urlLogo={organization.urlLogoLogin} >\n      <div className=\"text-center text-muted mb-1\">\n        {organization ? organization.name : \"\"}\n      </div>\n      <Formik\n        initialValues={{ \n          email: \"\",\n          password: \"\"\n        }}\n        // validationSchema={ACCOUNT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n            let vars = {\n              username: values.email,\n              password: values.password,\n            }\n\n            doTokenAuth({ variables: vars,\n              refetchQueries: [\n                // // Refetch list\n                // {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()},\n                // // Refresh local cached results for this account\n                // {query: GET_ACCOUNT_QUERY, variables: {\"id\": match.params.account_id}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                // TODO: Add link to \"feature switcher\" here\n                const next = localStorage.getItem(CSLS.AUTH_LOGIN_NEXT) || \"/user/welcome\"\n                CSAuth.login(data.tokenAuth)\n                setTimeout(() => history.push(next), 500)\n            })\n        }}\n        >\n        {({ isSubmitting, errors }) => (\n          <UserLoginForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n          />\n        )}\n      </Formik>    \n      <div className=\"text-center\">\n        <h5>{t('user.register.create_account')}</h5>\n        {t('user.register.create_account_msg')} <br />\n        {t('user.register.create_account_msg_click_below')} <br />\n      </div>\n      <Button \n        block\n        color=\"link\"\n        RootComponent=\"a\"\n        href={(window.location.hostname === \"localhost\" || window.location.hostname === \"dev.costasiella.com\") ? \n          \"http://localhost:8000/d/accounts/signup/\" :\n          \"/d/accounts/signup/\"\n        } \n      >\n        {t('user.register.create_account')} <Icon name=\"chevron-right\" />\n      </Button>\n    </CSStandaloneFormPage>\n  )\n}\n\n\nexport default withTranslation()(withRouter(UserLogin))","// @flow\n\nimport React, { useContext, useState } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { ToastContainer, Slide} from 'react-toastify'\nimport { toast } from 'react-toastify'\n\n// import { GET_ACCOUNTS_QUERY, GET_ACCOUNT_QUERY } from './queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Button,\n  Icon,\n  StandaloneFormPage,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n// import OrganizationContext from '../../context/OrganizationContext'\nimport { CSAuth } from \"../../../tools/authentication\"\nimport CSStandaloneFormPage from \"../../ui/CSStandaloneFormPage\"\n\nfunction UserLoginRequired({t, match, history}) {\n  // const organization = useContext(OrganizationContext)\n  // console.log(organization)\n\n  const [active, setActive] = useState(false);\n\n  return (\n    <CSStandaloneFormPage>\n      {/* TODO: point imageURL to logo */}\n      <Card>\n        <Card.Body>\n          <Card.Title>\n            {t('user.login_required.title')}\n          </Card.Title>\n          {t('user.login_required.message')} <br /><br />\n          <Button \n            block\n            loading={active}\n            disabled={active}\n            color=\"primary\"\n            type=\"button\" \n            onClick={() => {\n              setActive(true)\n              setTimeout(() => history.push('/user/login'), 250)\n            }}\n          >\n            {t('user.login_required.go_to_login')} <Icon name=\"chevron-right\" />\n          </Button>\n        </Card.Body>\n      </Card>\n      <ToastContainer \n          autoClose={5000} \n          transition={Slide}\n      />\n    </CSStandaloneFormPage>\n  )\n}\n\nexport default withTranslation()(withRouter(UserLoginRequired))","// @flow\n\nimport React, { useContext, useState } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n// import { GET_ACCOUNTS_QUERY, GET_ACCOUNT_QUERY } from './queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport OrganizationContext from '../../context/OrganizationContext'\n\nimport {\n  Card,\n  Button,\n  StandaloneFormPage,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { CSAuth } from \"../../../tools/authentication\"\nimport { TOKEN_COOKIE_DELETE, TOKEN_REFRESH_COOKIE_DELETE } from \"../../../queries/system/auth\"\n\nimport CSStandaloneFormPage from \"../../ui/CSStandaloneFormPage\"\n\n\nfunction UserLogout({t, match, history}) {\n  const [ deleteCookie ] = useMutation(TOKEN_COOKIE_DELETE)\n  const [ deleteRefreshCookie ] = useMutation(TOKEN_REFRESH_COOKIE_DELETE)\n  const [active, setActive] = useState(false)\n\n  const organization = useContext(OrganizationContext)\n  console.log(organization)\n\n  return (\n    <CSStandaloneFormPage urlLogo={organization.urlLogoLogin}>\n      {/* TODO: point imageURL to logo */}\n      <Card>\n        <Card.Body>\n          <Card.Title>\n            {t('user.logout.title')}\n          </Card.Title>\n          {t('user.logout.confirmation_message')} <br /><br />\n          <Button \n            block\n            loading={active}\n            disabled={active}\n            color=\"primary\"\n            type=\"button\" \n            onClick={() => {\n              setActive(true)\n              CSAuth.logout()\n              deleteCookie().then(({ data }) => {\n                console.log('got data', data)\n                })\n              .catch((error) => {\n                console.log(error)\n              })\n              deleteRefreshCookie().then(({ data }) => {\n                console.log('got data', data)\n                })\n              .catch((error) => {\n                console.log(error)\n              })\n              setTimeout(() => toast.info(t('user.logout.success'), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              }), 350)\n              setTimeout(() => history.push('/'), 250)\n            }}\n          >\n            {t('general.logout')}\n          </Button>\n        </Card.Body>\n      </Card>\n      <Button \n        block\n        color=\"link\"\n        onClick={(event) => {\n          event.preventDefault()  \n          window.history.back()\n        }}\n      >\n        {t('general.cancel')}\n      </Button>\n    </CSStandaloneFormPage>\n  )\n}\n\nexport default withTranslation()(withRouter(UserLogout))","// @flow\n\nimport React, { useContext, useState } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { ToastContainer } from 'react-toastify'\nimport { toast } from 'react-toastify'\n\n// import { GET_ACCOUNTS_QUERY, GET_ACCOUNT_QUERY } from './queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Button,\n  Icon,\n  StandaloneFormPage,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n// import OrganizationContext from '../../context/OrganizationContext'\nimport { CSAuth } from \"../../../tools/authentication\"\nimport CSStandaloneFormPage from \"../../ui/CSStandaloneFormPage\"\n\nfunction UserSessionExpired({t, match, history}) {\n  // const organization = useContext(OrganizationContext)\n  // console.log(organization)\n\n  const [active, setActive] = useState(false);\n\n  return (\n    <CSStandaloneFormPage>\n      {/* TODO: point imageURL to logo */}\n      <Card>\n        <Card.Body>\n          <Card.Title>\n            {t('user.session_expired.title')}\n          </Card.Title>\n          {t('user.session_expired.message')} <br /><br />\n          <Button \n            block\n            loading={active}\n            disabled={active}\n            color=\"primary\"\n            type=\"button\" \n            onClick={() => {\n              setActive(true)\n              setTimeout(() => history.push('/user/login'), 250)\n            }}\n          >\n            {t('user.session_expired.go_to_login')} <Icon name=\"chevron-right\" />\n          </Button>\n        </Card.Body>\n      </Card>\n      <ToastContainer autoClose={5000}/>\n    </CSStandaloneFormPage>\n  )\n}\n\nexport default withTranslation()(withRouter(UserSessionExpired))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport GET_USER_PROFILE from \"../../../queries/system/get_user_profile\"\n\n\nimport OrganizationContext from '../../context/OrganizationContext'\n\nimport {\n  Card,\n  Button,\n  Grid,\n  Icon\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport CSStandalonePageWide from \"../../ui/CSStandalonePageWide\"\n\n\nfunction Welcome({t, match, history}) {\n  const organization = useContext(OrganizationContext)\n  console.log(organization)\n  const { loading, error, data } = useQuery(GET_USER_PROFILE)\n\n  if (loading) return (\n    <CSStandalonePageWide urlLogo={organization.urlLogoLogin}>\n      {t(\"general.loading_with_dots\")}\n    </CSStandalonePageWide>\n  )\n  if (error) return (\n    <CSStandalonePageWide urlLogo={organization.urlLogoLogin}>\n      {t(\"shop.account.class_info.error_loading_data\")}\n    </CSStandalonePageWide>\n  )\n\n  const user = data.user\n  console.log(user)\n\n  if (!user.employee && !user.teacher) {\n    history.push(\"/\")\n  } \n\n\n  return (\n    <CSStandalonePageWide urlLogo={organization.urlLogoLogin}>\n      <div className=\"text-center mb-5\">\n        <h2>{t(\"general.welcome\")} {user.firstName}</h2>\n        <h5>{t(\"user.welcome.where_next_question\")}</h5>\n      </div>\n      <Grid.Row>\n        <Grid.Col md={3} offsetMd={3}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.title\")}</h5>\n              {t(\"user.welcome.shop_explanation\")} <br /><br />\n              <Link to=\"/\">\n                <Button \n                  block\n                  outline\n                  color=\"primary\"\n                >\n                  {t(\"user.welcome.shop_to\")} <Icon name=\"chevron-right\" />\n                </Button>\n              </Link>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={3}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"general.backend\")}</h5>\n              {t(\"user.welcome.backend_explantion\")} <br /><br />\n              <Link to=\"/backend\">\n                <Button \n                  block\n                  outline\n                  color=\"primary\"\n                >\n                  {t(\"user.welcome.backend_to\")} <Icon name=\"chevron-right\" />\n                </Button>\n              </Link>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <HasPermissionWrapper resource=\"selfcheckin\" permission=\"view\">\n          <Grid.Col md={3} offsetMd={3}>\n            <Card>\n              <Card.Body>\n                <h5>{t(\"selfcheckin.home.title\")}</h5>\n                {t(\"user.welcome.selfcheckin_explantion\")} <br /><br />\n                <Link to=\"/selfcheckin\">\n                  <Button \n                    block\n                    outline\n                    color=\"primary\"\n                  >\n                    {t(\"user.welcome.selfcheckin_to\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </HasPermissionWrapper>\n      </Grid.Row>\n    </CSStandalonePageWide>\n  )\n}\n\nexport default withTranslation()(withRouter(Welcome))","// @flow\n\nimport * as React from \"react\";\n\nimport { Error404Page } from \"tabler-react\";\n\ntype Props = {||}\n\nfunction Error404(props: Props): React.Node {\n  return <Error404Page />\n}\n\nexport default Error404\n","// import React, { Component } from 'react';\n// import logo from './logo.svg';\n\nimport React, { Component } from 'react'\nimport {\n  Route, \n  Switch, \n  HashRouter,\n  Redirect\n} from 'react-router-dom'\nimport { withTranslation } from 'react-i18next'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { toast } from 'react-toastify'\n\n\nimport { GET_APP_SETTINGS_QUERY } from \"./components/settings/general/date_time/queries\"\nimport { GET_ORGANIZATION_QUERY } from \"./components/organization/organization/queries\"\nimport { TOKEN_REFRESH } from \"./queries/system/auth\"\n\n// Import moment locale\nimport moment from 'moment'\nimport 'moment/locale/nl'\n\nimport CSStandalonePageLoader from './components/ui/CSStandalonePageLoader'\n\nimport { AppSettingsProvider } from \"./components/context/AppSettingsContext\"\nimport { OrganizationProvider } from \"./components/context/OrganizationContext\"\n\nimport HomeHome from './components/home/home/HomeHome'\n\nimport AutomationHome from './components/automation/home/AutomationHome'\nimport AutomationAccountSubscriptionCredits from './components/automation/account/subscription/credits/AutomationAccountSubscriptionCredits'\nimport AutomationAccountSubscriptionCreditAdd from './components/automation/account/subscription/credits/AutomationAccountSubscriptionCreditAdd'\nimport AutomationAccountSubscriptionCreditExpiration \n  from './components/automation/account/subscription/credits_expiration/AutomationAccountSubscriptionCreditExpiration'\nimport AutomationAccountSubscriptionCreditExpirationAdd\n  from './components/automation/account/subscription/credits_expiration/AutomationAccountSubscriptionCreditExpirationAdd'\nimport AutomationAccountSubscriptionInvoices from './components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoices'\nimport AutomationAccountSubscriptionInvoicesAdd from './components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoicesAdd'\nimport AutomationAccountSubscriptionMollieCollections \n  from './components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollections'\nimport AutomationAccountSubscriptionMollieCollectionAdd\n  from './components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollectionAdd'\n\nimport FinanceHome from './components/finance/home/FinanceHome'\nimport FinanceCostCenters from './components/finance/costcenters/FinanceCostCenters'\nimport FinanceCostCenterAdd from './components/finance/costcenters/FinanceCostCenterAdd'\nimport FinanceCostCenterEdit from './components/finance/costcenters/FinanceCostCenterEdit'\nimport FinanceGLAccounts from './components/finance/glaccounts/FinanceGLAccounts'\nimport FinanceGLAccountAdd from './components/finance/glaccounts/FinanceGLAccountAdd'\nimport FinanceGLAccountEdit from './components/finance/glaccounts/FinanceGLAccountEdit'\nimport FinanceInvoices from './components/finance/invoices/FinanceInvoices'\nimport FinanceInvoiceEdit from './components/finance/invoices/edit/FinanceInvoiceEdit'\nimport FinanceInvoiceGroups from './components/finance/invoices/groups/FinanceInvoiceGroups'\nimport FinanceInvoiceGroupAdd from './components/finance/invoices/groups/FinanceInvoiceGroupAdd'\nimport FinanceInvoiceGroupEdit from './components/finance/invoices/groups/FinanceInvoiceGroupEdit'\nimport FinanceInvoiceGroupDefaults from './components/finance/invoices/groups/defaults/FinanceInvoiceGroupDefaults'\nimport FinanceInvoicePaymentAdd from './components/finance/invoices/payments/FinanceInvoicePaymentAdd'\nimport FinanceInvoicePaymentEdit from './components/finance/invoices/payments/FinanceInvoicePaymentEdit'\nimport FinanceOrders from './components/finance/orders/FinanceOrders'\nimport FinancePaymentBatches from './components/finance/payment_batches/FinancePaymentBatches'\nimport FinancePaymentBatchAddWhat from './components/finance/payment_batches/FinancePaymentBatchAddWhat'\nimport FinancePaymentBatchView from './components/finance/payment_batches/FinancePaymentBatchView'\nimport FinancePaymentCollectionBatchAdd from './components/finance/payment_batches/FinancePaymentCollectionBatchAdd'\nimport FinancePaymentCollectionBatchEdit from './components/finance/payment_batches/FinancePaymentCollectionBatchEdit'\nimport FinancePaymentBatchCategories from './components/finance/payment_batch_categories/FinancePaymentBatchCategories'\nimport FinancePaymentBatchCategoryAdd from './components/finance/payment_batch_categories/FinancePaymentBatchCategoryAdd'\nimport FinancePaymentBatchCategoryEdit from './components/finance/payment_batch_categories/FinancePaymentBatchCategoryEdit'\nimport FinanceOrderEdit from './components/finance/orders/edit/FinanceOrderEdit'\nimport FinancePaymentMethods from './components/finance/payment_methods/FinancePaymentMethods'\nimport FinancePaymentMethodAdd from './components/finance/payment_methods/FinancePaymentMethodAdd'\nimport FinancePaymentMethodEdit from './components/finance/payment_methods/FinancePaymentMethodEdit'\nimport FinanceTaxRates from './components/finance/taxrates/FinanceTaxRates'\nimport FinanceTaxRatesAdd from './components/finance/taxrates/FinanceTaxRateAdd'\nimport FinanceTaxRatesEdit from './components/finance/taxrates/FinanceTaxRateEdit'\n\nimport InsightHome from './components/insight/home/InsightHome'\nimport InsightClasspasses from './components/insight/classpasses/InsightClasspasses'\nimport InsightRevenue from './components/insight/revenue/InsightRevenue'\nimport InsightSubscriptions from './components/insight/subscriptions/InsightSubscriptions'\n\nimport OrganizationHome from './components/organization/home/OrganizationHome'\nimport OrganizationEdit from './components/organization/organization/OrganizationEdit'\nimport OrganizationBranding from './components/organization/organization/branding/OrganizationBranding'\nimport OrganizationBrandingEdit from './components/organization/organization/branding/OrganizationBrandingEdit'\nimport OrganizationAnnouncements from './components/organization/announcements/OrganizationAnnouncements'\nimport OrganizationAnnouncementAdd from './components/organization/announcements/OrganizationAnnouncementAdd'\nimport OrganizationAnnouncementEdit from './components/organization/announcements/OrganizationAnnouncementEdit'\nimport OrganizationAppointments from './components/organization/appointment_categories/appointments/OrganizationAppointments'\nimport OrganizationAppointmentAdd from './components/organization/appointment_categories/appointments/OrganizationAppointmentAdd'\nimport OrganizationAppointmentEdit from './components/organization/appointment_categories/appointments/OrganizationAppointmentEdit'\nimport OrganizationAppointmentCategories from './components/organization/appointment_categories/OrganizationAppointmentCategories'\nimport OrganizationAppointmentCategoryAdd from './components/organization/appointment_categories/OrganizationAppointmentCategoryAdd'\nimport OrganizationAppointmentCategoryEdit from './components/organization/appointment_categories/OrganizationAppointmentCategoryEdit'\nimport OrganizationAppointmentPrices from './components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPrices'\nimport OrganizationAppointmentPriceAdd from './components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPriceAdd'\nimport OrganizationAppointmentPriceEdit from './components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPriceEdit'\nimport OrganizationClasspasses from './components/organization/classpasses/OrganizationClasspasses'\nimport OrganizationClasspassAdd from './components/organization/classpasses/OrganizationClasspassAdd'\nimport OrganizationClasspassEdit from './components/organization/classpasses/OrganizationClasspassEdit'\nimport OrganizationClasspassesGroups from './components/organization/classpasses_groups/OrganizationClasspassesGroups'\nimport OrganizationClasspassesGroupAdd from './components/organization/classpasses_groups/OrganizationClasspassesGroupAdd'\nimport OrganizationClasspassesGroupEdit from './components/organization/classpasses_groups/OrganizationClasspassesGroupEdit'\nimport OrganizationClasspassesGroupEditPasses from './components/organization/classpasses_groups/OrganizationClasspassesGroupEditPasses'\nimport OrganizationClasstypes from './components/organization/classtypes/OrganizationClasstypes'\nimport OrganizationClasstypeAdd from './components/organization/classtypes/OrganizationClasstypeAdd'\nimport OrganizationClasstypeEdit from './components/organization/classtypes/OrganizationClasstypeEdit'\nimport OrganizationClasstypeEditImage from './components/organization/classtypes/OrganizationClasstypeEditImage'\nimport OrganizationDiscoveries from './components/organization/discovery/OrganizationDiscoveries'\nimport OrganizationDiscoveryAdd from './components/organization/discovery/OrganizationDiscoveryAdd'\nimport OrganizationDiscoveryEdit from './components/organization/discovery/OrganizationDiscoveryEdit'\nimport OrganizationDocuments from './components/organization/documents/OrganizationDocuments'\nimport OrganizationListDocuments from './components/organization/documents/OrganizationListDocuments'\nimport OrganizationDocumentAdd from './components/organization/documents/OrganizationDocumentAdd'\nimport OrganizationDocumentEdit from './components/organization/documents/OrganizationDocumentEdit'\nimport OrganizationHolidays from './components/organization/holidays/OrganizationHolidays'\nimport OrganizationHolidayAdd from './components/organization/holidays/OrganizationHolidayAdd'\nimport OrganizationHolidayEdit from './components/organization/holidays/OrganizationHolidayEdit'\nimport OrganizationHolidayEditLocations from './components/organization/holidays/OrganizationHolidayEditLocations'\nimport OrganizationLanguages from './components/organization/languages/OrganizationLanguages'\nimport OrganizationLanguageAdd from './components/organization/languages/OrganizationLanguageAdd'\nimport OrganizationLanguageEdit from './components/organization/languages/OrganizationLanguageEdit'\nimport OrganizationLocations from './components/organization/locations/OrganizationLocations'\nimport OrganizationLocationAdd from './components/organization/locations/OrganizationLocationAdd'\nimport OrganizationLocationEdit from './components/organization/locations/OrganizationLocationEdit'\nimport OrganizationLocationRooms from './components/organization/locations/rooms/OrganizationLocationRooms'\nimport OrganizationLocationRoomAdd from './components/organization/locations/rooms/OrganizationLocationRoomAdd'\nimport OrganizationLocationRoomEdit from './components/organization/locations/rooms/OrganizationLocationRoomEdit'\nimport OrganizationLevels from './components/organization/levels/OrganizationLevels'\nimport OrganizationLevelAdd from './components/organization/levels/OrganizationLevelAdd'\nimport OrganizationLevelEdit from './components/organization/levels/OrganizationLevelEdit'\nimport OrganizationMemberships from './components/organization/memberships/OrganizationMemberships'\nimport OrganizationMembershipAdd from './components/organization/memberships/OrganizationMembershipAdd'\nimport OrganizationMembershipEdit from './components/organization/memberships/OrganizationMembershipEdit'\nimport OrganizationSubscriptions from './components/organization/subscriptions/OrganizationSubscriptions'\nimport OrganizationSubscriptionAdd from './components/organization/subscriptions/OrganizationSubscriptionAdd'\nimport OrganizationSubscriptionEdit from './components/organization/subscriptions/OrganizationSubscriptionEdit'\nimport OrganizationSubscriptionsGroups from './components/organization/subscriptions_groups/OrganizationSubscriptionsGroups'\nimport OrganizationSubscriptionsGroupAdd from './components/organization/subscriptions_groups/OrganizationSubscriptionsGroupAdd'\nimport OrganizationSubscriptionsGroupEdit from './components/organization/subscriptions_groups/OrganizationSubscriptionsGroupEdit'\nimport OrganizationSubscriptionsGroupEditSubscriptions from './components/organization/subscriptions_groups/OrganizationSubscriptionsGroupEditSubscriptions'\nimport OrganizationSubscriptionsPrices from './components/organization/subscriptions/prices/OrganizationSubscriptionsPrices'\nimport OrganizationSubscriptionPriceAdd from './components/organization/subscriptions/prices/OrganizationSubscriptionPriceAdd'\nimport OrganizationSubscriptionPriceEdit from './components/organization/subscriptions/prices/OrganizationSubscriptionPriceEdit'\n\nimport RelationsHome from './components/relations/home/RelationsHome'\nimport RelationsAccounts from './components/relations/accounts/RelationsAccounts'\nimport RelationsAccountAdd from './components/relations/accounts/RelationsAccountAdd'\nimport RelationsAccountProfile from './components/relations/accounts/RelationsAccountProfile'\nimport RelationsAccountProfileImage from './components/relations/accounts/RelationsAccountProfileImage'\nimport AccountAcceptedDocuments from './components/relations/accounts/accepted_documents/AcceptedDocuments.jsx'\nimport RelationsAccountBankAccount from './components/relations/accounts/bank_accounts/RelationsAccountBankAccount'\nimport RelationsAccountBankAccountMandateAdd from './components/relations/accounts/bank_accounts/mandates/RelationsAccountBankAccountMandateAdd'\nimport RelationsAccountBankAccountMandateEdit from './components/relations/accounts/bank_accounts/mandates/RelationsAccountBankAccountMandateEdit'\nimport RelationsAccountClasses from './components/relations/accounts/classes/AccountClasses'\nimport AccountClasspasses from './components/relations/accounts/classpasses/AccountClasspasses'\nimport AccountClasspassAdd from './components/relations/accounts/classpasses/AccountClasspassAdd'\nimport AccountClasspassEdit from './components/relations/accounts/classpasses/AccountClasspassEdit'\nimport AccountDocuments from './components/relations/accounts/documents/AccountDocuments'\nimport AccountDocumentAdd from './components/relations/accounts/documents/AccountDocumentAdd'\nimport AccountDocumentEdit from './components/relations/accounts/documents/AccountDocumentEdit'\nimport AccountFinancePaymentBatchCategoryItems from \n  './components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItems'\nimport AccountFinancePaymentBatchCategoryItemAdd from \n'./components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemAdd'\nimport AccountFinancePaymentBatchCategoryItemEdit from \n'./components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemEdit'\nimport AccountInvoices from './components/relations/accounts/invoices/AccountInvoices'\nimport AccountInvoiceAdd from './components/relations/accounts/invoices/AccountInvoiceAdd'\nimport AccountMemberships from './components/relations/accounts/memberships/AccountMemberships'\nimport AccountMembershipAdd from './components/relations/accounts/memberships/AccountMembershipAdd'\nimport AccountMembershipEdit from './components/relations/accounts/memberships/AccountMembershipEdit'\nimport AccountNotes from './components/relations/accounts/notes/AccountNotes.jsx'\nimport AccountNoteAdd from './components/relations/accounts/notes/AccountNoteAdd.jsx'\nimport AccountNoteEdit from './components/relations/accounts/notes/AccountNoteEdit.jsx'\nimport AccountOrders from './components/relations/accounts/orders/AccountOrders'\nimport AccountScheduleEventTickets from './components/relations/accounts/schedule_event_tickets/AccountScheduleEventTickets'\nimport AccountSubscriptions from './components/relations/accounts/subscriptions/AccountSubscriptions'\nimport AccountSubscriptionAdd from './components/relations/accounts/subscriptions/AccountSubscriptionAdd'\nimport AccountSubscriptionEdit from './components/relations/accounts/subscriptions/edit/AccountSubscriptionEdit'\nimport AccountSubscriptionEditAltPrices from './components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPrices'\nimport AccountSubscriptionEditAltPriceAdd from './components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceAdd'\nimport AccountSubscriptionEditAltPriceEdit from './components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceEdit'\nimport AccountSubscriptionEditBlocks from './components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlocks'\nimport AccountSubscriptionEditBlockAdd from './components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockAdd'\nimport AccountSubscriptionEditBlockEdit from './components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockEdit'\nimport AccountSubscriptionEditCredits from './components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCredits'\nimport AccountSubscriptionEditCreditAdd from './components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditAdd'\nimport AccountSubscriptionEditCreditEdit from './components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditEdit'\nimport AccountSubscriptionEditInvoices from './components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoices'\nimport AccountSubscriptionEditInvoiceAdd from './components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoiceAdd'\nimport AccountSubscriptionEditPauses from './components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauses'\nimport AccountSubscriptionEditPauseAdd from './components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseAdd'\nimport AccountSubscriptionEditPauseEdit from './components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseEdit'\nimport RelationsAccountTeacherProfile from './components/relations/accounts/teacher_profile/RelationsAccountTeacherProfile'\nimport RelationsB2B from './components/relations/b2b/RelationsB2B'\nimport RelationsB2BAdd from './components/relations/b2b/RelationsB2BAdd.jsx'\nimport RelationsB2BEdit from './components/relations/b2b/RelationsB2BEdit.jsx'\n\nimport ScheduleHome from './components/schedule/home/ScheduleHome'\nimport ScheduleAppointments from './components/schedule/appointments/ScheduleAppointments'\nimport ScheduleAppointmentAdd from './components/schedule/appointments/ScheduleAppointmentAdd'\nimport ScheduleAppointmentEditAll from './components/schedule/appointments/all/edit/ScheduleAppointmentEditAll'\nimport ScheduleClasses from './components/schedule/classes/ScheduleClasses'\nimport ScheduleClassAdd from './components/schedule/classes/ScheduleClassAdd'\nimport ScheduleClassEditAll from './components/schedule/classes/all/edit/ScheduleClassEditAll'\nimport ScheduleClassClasspasses from './components/schedule/classes/all/classpasses/ScheduleClassClasspasses'\nimport ScheduleClassSubscriptions from './components/schedule/classes/all/subscriptions/ScheduleClassSubscriptions'\nimport ScheduleClassTeachers from './components/schedule/classes/all/teachers/ScheduleClassTeachers'\nimport ScheduleClassTeacherAdd from './components/schedule/classes/all/teachers/ScheduleClassTeacherAdd'\nimport ScheduleClassTeacherEdit from './components/schedule/classes/all/teachers/ScheduleClassTeacherEdit'\nimport ScheduleClassAttendance from './components/schedule/classes/class/attendance/ScheduleClassAttendance'\nimport ScheduleClassAttendanceChart from './components/schedule/classes/class/attendance_chart/ScheduleClassAttendanceChart'\nimport ScheduleClassBook from './components/schedule/classes/class/book/ScheduleClassBook'\nimport ScheduleClassEdit from './components/schedule/classes/class/edit/ScheduleClassEdit'\nimport ScheduleClassPrices from './components/schedule/classes/all/prices/ScheduleClassPrices'\nimport ScheduleClassPriceAdd from './components/schedule/classes/all/prices/ScheduleClassPriceAdd'\nimport ScheduleClassPriceEdit from './components/schedule/classes/all/prices/ScheduleClassPriceEdit'\nimport ScheduleEvents from './components/schedule/events/ScheduleEvents'\nimport ScheduleEventAdd from './components/schedule/events/ScheduleEventAdd'\nimport ScheduleEventEdit from './components/schedule/events/edit/ScheduleEventEdit'\nimport ScheduleEventActivities from './components/schedule/events/activities/ScheduleEventActivities'\nimport ScheduleEventActivityAdd from './components/schedule/events/activities/ScheduleEventActivityAdd'\nimport ScheduleEventActivityEdit from './components/schedule/events/activities/ScheduleEventActivityEdit'\nimport ScheduleEventActivityAttendance from './components/schedule/events/activities/attendance/ScheduleEventActivityAttendance'\nimport ScheduleEventEarlybirds from './components/schedule/events/earlybirds/ScheduleEventEarlybirds'\nimport ScheduleEventEarlybirdAdd from './components/schedule/events/earlybirds/ScheduleEventEarlybirdAdd'\nimport ScheduleEventEarlybirdEdit from './components/schedule/events/earlybirds/ScheduleEventEarlybirdEdit'\nimport ScheduleEventMedia from './components/schedule/events/media/ScheduleEventMedia'\nimport ScheduleEventMediaAdd from './components/schedule/events/media/ScheduleEventMediaAdd'\nimport ScheduleEventMediaEdit from './components/schedule/events/media/ScheduleEventMediaEdit'\nimport ScheduleEventTickets from './components/schedule/events/tickets/ScheduleEventTickets'\nimport ScheduleEventTicketAdd from './components/schedule/events/tickets/ScheduleEventTicketAdd'\nimport ScheduleEventTicketEdit from './components/schedule/events/tickets/ScheduleEventTicketEdit'\nimport ScheduleEventTicketEditActivities from './components/schedule/events/tickets/activities/ScheduleEventTicketEditActivities'\nimport ScheduleEventTicketEditCustomers from './components/schedule/events/tickets/customers/ScheduleEventTicketEditCustomers'\n\nimport SelfCheckinCheckin from './components/selfcheckin/Checkin/Checkin'\nimport SelfCheckinBookingOptions from './components/selfcheckin/BookingOptions/BookingOptions'\nimport SelfCheckinLocations from './components/selfcheckin/Locations/Locations'\nimport SelfCheckinLocationClasses from './components/selfcheckin/LocationClasses/LocationClasses'\n\nimport SettingsAbout from './components/settings/about/SettingsAbout'\nimport SettingsFinanceBankAccounts from './components/settings/finance/bank_accounts/SettingsFinanceBankAccounts'\nimport SettingsFinanceCurrency from './components/settings/finance/currency/SettingsFinanceCurrency'\nimport SettingsGeneralDateTime from './components/settings/general/date_time/SettingsGeneralDateTime'\nimport SettingsGeneralSystem from './components/settings/general/system/SettingsGeneralSystem'\nimport SettingsHome from './components/settings/home/SettingsHome'\nimport SettingsIntegrationMollie from './components/settings/integration/mollie/SettingsIntegrationMollie'\nimport SettingsMailTemplates from './components/settings/mail/SettingsMailTemplates'\nimport SettingsMailTemplateEdit from './components/settings/mail/SettingsMailTemplateEdit'\nimport SettingsShopFeatures from './components/settings/shop/features/SettingsShopFeatures'\nimport SettingsWorkflowClassBooking from './components/settings/workflow/class_booking/SettingsWorkflowClassBooking'\nimport SettingsWorkflowShop from './components/settings/workflow/shop/SettingsWorkflowShop'\nimport SettingsWorkflowSubscriptionPauses from './components/settings/workflow/subscription_pauses/SettingsWorkflowSubscriptionPauses'\nimport SettingsWorkflowTrial from './components/settings/workflow/trial/SettingsWorkflowTrial'\n\nimport ShopAccountHome from './components/shop/account/home/ShopAccountHome'\nimport c from './components/shop/account/bank_account/ShopAccountBankAccount'\nimport ShopAccountClassCancel from './components/shop/account/class_cancel/ShopAccountClassCancel'\nimport ShopAccountClassInfo from './components/shop/account/class_info/ShopAccountClassInfo'\nimport ShopAccountClasspasses from './components/shop/account/classpasses/ShopAccountClasspasses'\nimport ShopAccountEventTickets from './components/shop/account/event_tickets/ShopAccountEventTickets'\nimport ShopAccountInvoicePayment from './components/shop/account/invoice_payment/ShopAccountInvoicePayment'\nimport ShopAccountInvoicePaymentStatus from './components/shop/account/invoice_payment_status/ShopAccountInvoicePaymentStatus'\nimport ShopAccountInvoices from './components/shop/account/invoices/ShopAccountInvoices'\nimport ShopAccountOrders from './components/shop/account/orders/ShopAccountOrders'\nimport ShopAccountProfile from './components/shop/account/profile/ShopAccountProfile'\nimport ShopAccountSubscriptions from './components/shop/account/subscriptions/ShopAccountSubscriptions'\nimport ShopClassBook from './components/shop/classes/book/ShopClassBook'\nimport ShopClassBooked from './components/shop/classes/booked/ShopClassBooked'\nimport ShopClassesSchedule from './components/shop/classes/schedule/ShopClassesSchedule'\nimport ShopContact from './components/shop/contact/ShopContact'\nimport ShopEvents from './components/shop/events/ShopEvents'\nimport ShopEvent from './components/shop/event/ShopEvent'\nimport ShopEventTicket from './components/shop/event_ticket/ShopEventTicket'\nimport ShopHome from './components/shop/home/ShopHome'\nimport ShopCheckoutPayment from './components/shop/checkout/payment/ShopCheckoutPayment'\nimport ShopCheckoutComplete from './components/shop/checkout/complete/ShopCheckoutComplete'\nimport ShopClasses from './components/shop/account/classes/ShopAccountClasses'\nimport ShopClasspasses from './components/shop/classpasses/ShopClasspasses'\nimport ShopClasspass from './components/shop/classpass/ShopClasspass'\nimport ShopSubscriptions from './components/shop/subscriptions/ShopSubscriptions'\nimport ShopSubscription from './components/shop/subscription/ShopSubscription'\nimport ShopSubscriptionDirectDebitActivated from './components/shop/subscription_directdebit_activated/ShopSubscriptionDirectDebitActivated'\n\nimport UserChangePassword from './components/user/password/UserPasswordChange'\nimport UserLogin from './components/user/login/UserLogin'\nimport UserLoginRequired from './components/user/login/UserLoginRequired'\nimport UserLogout from './components/user/login/UserLogout'\nimport UserSessionExpired from './components/user/session/UserSessionExpired'\nimport UserWelcome from './components/user/welcome/UserWelcome'\n\n\nimport Error404 from \"./components/Error404\"\n\nimport CSLS from \"./tools/cs_local_storage\"\nimport { CSAuth } from './tools/authentication'\nimport ShopAccountBankAccount from './components/shop/account/bank_account/ShopAccountBankAccount'\n\n\nfunction SetCurrentUrlAsNext() {\n  console.log(\"Storing current location as next in local storage\")\n  const currentUrl = window.location.href\n  const next = currentUrl.split(\"#\")[1]\n  console.log(next)\n  localStorage.setItem(CSLS.AUTH_LOGIN_NEXT, next)\n}\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n  let authTokenExpired = false\n  console.log(rest.path)\n\n  const ContinueAsYouAre = <Route {...rest} render={(props) => ( <Component {...props} /> )} />\n  const LoginRequired = <Route {...rest} render={(props) => ( <Redirect to='/user/login/required' /> )} />\n  const SessionExpired = <Route {...rest} render={(props) => ( <Redirect to='/user/session/expired' /> )} />\n  \n  // Check expiration\n  const tokenExp = localStorage.getItem(CSLS.AUTH_TOKEN_EXP)\n  if ((new Date() / 1000) >= tokenExp) {\n    authTokenExpired = true\n  }\n\n  if (authTokenExpired) {\n    const refreshTokenExp = localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN_EXP)\n    if (refreshTokenExp == null) {\n      console.log(\"refresh token not found\")\n      SetCurrentUrlAsNext()\n      \n      return LoginRequired\n    } else if ((new Date() / 1000) >= refreshTokenExp) {\n      console.log(\"refresh token expired\")\n      console.log(new Date() / 1000)\n      console.log(refreshTokenExp)\n      SetCurrentUrlAsNext()\n\n      return SessionExpired\n    } else {\n      // Refresh token\n      console.log(\"auth token expired\")\n      console.log(new Date() / 1000)\n      console.log(refreshTokenExp)\n\n      const refreshToken = localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN)\n      doTokenRefresh({ variables: { refreshToken: refreshToken }}).then(({ data }) => {\n        console.log('got refresh data', data)\n        CSAuth.updateTokenInfo(data.refreshToken)\n        return ContinueAsYouAre\n      }).catch((error) => {\n        toast.error('general.toast_server_error' + ': ' +  error, {\n          position: toast.POSITION.BOTTOM_RIGHT\n        })\n        console.log('there was an error refreshing the token', error) \n        SetCurrentUrlAsNext()\n        console.log(\"REDIRECT BACK TO LOGIN\")\n        window.location.href = \"/#/user/login\"\n        window.location.reload()\n      })\n    }\n  } else {\n    return ContinueAsYouAre\n  }\n  return null\n}\n\n\nfunction AppRoot({ t }) {\n  const { loading: loadingAppSettings, error: errorAppSettings, data: dataAppSettings } = useQuery(GET_APP_SETTINGS_QUERY)\n  const { loading: loadingOrganization, error: errorOrganization, data: dataOrganization } = useQuery(GET_ORGANIZATION_QUERY, {\n    variables: {id: \"T3JnYW5pemF0aW9uTm9kZToxMDA=\"}\n  })\n\n\n\n  if (loadingAppSettings || loadingOrganization) {\n    return (\n      <CSStandalonePageLoader />\n    )\n  }\n  if (errorAppSettings || errorOrganization) {\n    if (errorAppSettings.message == \"Signature has expired\")  {\n      return \"\"\n    } else {\n      return (\n        <div>\n          { t('settings.error_loading') } <br />\n          { errorAppSettings.message } <br />\n          { errorOrganization.message}\n        </div>\n      )\n    }\n  }\n\n  // Register \"US\" locale for moment\n  // moment.locale('en-US')\n  let appSettings = dataAppSettings.appSettings\n  console.log(appSettings)\n  let organization = dataOrganization.organization\n  console.log(organization)\n\n  return (\n    <AppSettingsProvider value={appSettings}>\n      <OrganizationProvider value={organization}>\n        <HashRouter>\n          <Switch>\n            {/* BACKEND HOME */}\n            <PrivateRoute exact path=\"/backend\" component={HomeHome} />\n\n            {/* AUTOMATION */}\n            <PrivateRoute exact path=\"/automation\" component={AutomationHome} />\n            <PrivateRoute exact path=\"/automation/account/subscriptions/credits\" \n                                component={AutomationAccountSubscriptionCredits} />\n            <PrivateRoute exact path=\"/automation/account/subscriptions/credits/add\" \n                                component={AutomationAccountSubscriptionCreditAdd} />\n            <PrivateRoute exact path=\"/automation/account/subscriptions/credits_expiration\" \n                                component={AutomationAccountSubscriptionCreditExpiration} />\n            <PrivateRoute exact path=\"/automation/account/subscriptions/credits_expiration/add\" \n                                component={AutomationAccountSubscriptionCreditExpirationAdd} />\n            <PrivateRoute exact path=\"/automation/account/subscriptions/invoices\" \n                                component={AutomationAccountSubscriptionInvoices} />    \n            <PrivateRoute exact path=\"/automation/account/subscriptions/invoices/add\" \n                                component={AutomationAccountSubscriptionInvoicesAdd} />    \n            <PrivateRoute exact path=\"/automation/account/subscriptions/mollie_collections\" \n                                component={AutomationAccountSubscriptionMollieCollections} />\n            <PrivateRoute exact path=\"/automation/account/subscriptions/mollie_collections/add\" \n                                component={AutomationAccountSubscriptionMollieCollectionAdd} />\n\n            \n            {/* FINANCE */}\n            <PrivateRoute exact path=\"/finance\" component={FinanceHome} />\n            <PrivateRoute exact path=\"/finance/costcenters\" component={FinanceCostCenters} />\n            <PrivateRoute exact path=\"/finance/costcenters/add\" component={FinanceCostCenterAdd} />\n            <PrivateRoute exact path=\"/finance/costcenters/edit/:id\" component={FinanceCostCenterEdit} />\n            <PrivateRoute exact path=\"/finance/invoices\" component={FinanceInvoices} />\n            <PrivateRoute exact path=\"/finance/invoices/edit/:id\" component={FinanceInvoiceEdit} />\n            <PrivateRoute exact path=\"/finance/invoices/groups\" component={FinanceInvoiceGroups} />\n            <PrivateRoute exact path=\"/finance/invoices/groups/add\" component={FinanceInvoiceGroupAdd} />\n            <PrivateRoute exact path=\"/finance/invoices/groups/edit/:id\" component={FinanceInvoiceGroupEdit} />\n            <PrivateRoute exact path=\"/finance/invoices/groups/defaults\" component={FinanceInvoiceGroupDefaults} />\n            <PrivateRoute exact path=\"/finance/invoices/:invoice_id/payment/add\" component={FinanceInvoicePaymentAdd} />\n            <PrivateRoute exact path=\"/finance/invoices/:invoice_id/payment/edit/:id\" component={FinanceInvoicePaymentEdit} />\n            <PrivateRoute exact path=\"/finance/glaccounts\" component={FinanceGLAccounts} />\n            <PrivateRoute exact path=\"/finance/glaccounts/add\" component={FinanceGLAccountAdd} />\n            <PrivateRoute exact path=\"/finance/glaccounts/edit/:id\" component={FinanceGLAccountEdit} />\n            <PrivateRoute exact path=\"/finance/orders\" component={FinanceOrders} />\n            <PrivateRoute exact path=\"/finance/orders/edit/:id\" component={FinanceOrderEdit} />\n            <PrivateRoute exact path=\"/finance/paymentbatches/:batch_type\" component={FinancePaymentBatches} />\n            <PrivateRoute exact path=\"/finance/paymentbatches/:batch_type/add_what\" component={FinancePaymentBatchAddWhat} />\n            <PrivateRoute exact path=\"/finance/paymentbatches/:batch_type/view/:id\" component={FinancePaymentBatchView} />\n            <PrivateRoute exact path=\"/finance/paymentbatches/:batch_type/add/:category_type\" component={FinancePaymentCollectionBatchAdd} />\n            <PrivateRoute exact path=\"/finance/paymentbatches/:batch_type/edit/:id\" component={FinancePaymentCollectionBatchEdit} />\n            <PrivateRoute exact path=\"/finance/paymentbatchcategories\" component={FinancePaymentBatchCategories} />\n            <PrivateRoute exact path=\"/finance/paymentbatchcategories/add\" component={FinancePaymentBatchCategoryAdd} />\n            <PrivateRoute exact path=\"/finance/paymentbatchcategories/edit/:id\" component={FinancePaymentBatchCategoryEdit} />\n            <PrivateRoute exact path=\"/finance/paymentmethods\" component={FinancePaymentMethods} />\n            <PrivateRoute exact path=\"/finance/paymentmethods/add\" component={FinancePaymentMethodAdd} />\n            <PrivateRoute exact path=\"/finance/paymentmethods/edit/:id\" component={FinancePaymentMethodEdit} />\n            <PrivateRoute exact path=\"/finance/taxrates\" component={FinanceTaxRates} />\n            <PrivateRoute exact path=\"/finance/taxrates/add\" component={FinanceTaxRatesAdd} />\n            <PrivateRoute exact path=\"/finance/taxrates/edit/:id\" component={FinanceTaxRatesEdit} />\n            \n            {/* ORGANIZATION */}\n            <PrivateRoute exact path=\"/organization\" component={OrganizationHome} />\n            <PrivateRoute exact path=\"/organization/edit/:id\" component={OrganizationEdit} />\n            <PrivateRoute exact path=\"/organization/edit/:id/branding\" component={OrganizationBranding} />\n            <PrivateRoute exact path=\"/organization/edit/:id/branding/:update_field\" component={OrganizationBrandingEdit} />\n            <PrivateRoute exact path=\"/organization/documents/:organization_id\" component={OrganizationDocuments} />\n            <PrivateRoute exact path=\"/organization/documents/:organization_id/:document_type\" component={OrganizationListDocuments} />\n            <PrivateRoute exact path=\"/organization/documents/:organization_id/:document_type/add\" component={OrganizationDocumentAdd} />\n            <PrivateRoute exact path=\"/organization/documents/:organization_id/:document_type/edit/:id\" component={OrganizationDocumentEdit} />\n            <PrivateRoute exact path=\"/organization/announcements\" component={OrganizationAnnouncements} />\n            <PrivateRoute exact path=\"/organization/announcements/add\" component={OrganizationAnnouncementAdd} />\n            <PrivateRoute exact path=\"/organization/announcements/edit/:id\" component={OrganizationAnnouncementEdit} />\n            <PrivateRoute exact path=\"/organization/appointment_categories\" component={OrganizationAppointmentCategories} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/add\" component={OrganizationAppointmentCategoryAdd} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/edit/:id\" component={OrganizationAppointmentCategoryEdit} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments\" component={OrganizationAppointments} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments/add/\" component={OrganizationAppointmentAdd} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments/edit/:id\" component={OrganizationAppointmentEdit} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments/prices/:appointment_id\" \n                  component={OrganizationAppointmentPrices} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments/prices/:appointment_id/add\" \n                  component={OrganizationAppointmentPriceAdd} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments/prices/:appointment_id/edit/:id\" \n                  component={OrganizationAppointmentPriceEdit} />\n            <PrivateRoute exact path=\"/organization/classpasses\" component={OrganizationClasspasses} />\n            <PrivateRoute exact path=\"/organization/classpasses/add\" component={OrganizationClasspassAdd} />\n            <PrivateRoute exact path=\"/organization/classpasses/edit/:id\" component={OrganizationClasspassEdit} />    \n            <PrivateRoute exact path=\"/organization/classpasses/groups\" component={OrganizationClasspassesGroups} />\n            <PrivateRoute exact path=\"/organization/classpasses/groups/add\" component={OrganizationClasspassesGroupAdd} />\n            <PrivateRoute exact path=\"/organization/classpasses/groups/edit/:id\" component={OrganizationClasspassesGroupEdit} />\n            <PrivateRoute exact path=\"/organization/classpasses/groups/edit/passes/:id\" component={OrganizationClasspassesGroupEditPasses} />\n            <PrivateRoute exact path=\"/organization/classtypes\" component={OrganizationClasstypes} />\n            <PrivateRoute exact path=\"/organization/classtypes/add\" component={OrganizationClasstypeAdd} />\n            <PrivateRoute exact path=\"/organization/classtypes/edit/:id\" component={OrganizationClasstypeEdit} />\n            <PrivateRoute exact path=\"/organization/classtypes/edit_image/:id\" component={OrganizationClasstypeEditImage} />\n            <PrivateRoute exact path=\"/organization/discoveries\" component={OrganizationDiscoveries} />\n            <PrivateRoute exact path=\"/organization/discoveries/add\" component={OrganizationDiscoveryAdd} /> \n            <PrivateRoute exact path=\"/organization/discoveries/edit/:id\" component={OrganizationDiscoveryEdit} /> \n            <PrivateRoute exact path=\"/organization/holidays\" component={OrganizationHolidays} />\n            <PrivateRoute exact path=\"/organization/holidays/add\" component={OrganizationHolidayAdd} />\n            <PrivateRoute exact path=\"/organization/holidays/edit/:id\" component={OrganizationHolidayEdit} />\n            <PrivateRoute exact path=\"/organization/holidays/edit/:id/locations\" component={OrganizationHolidayEditLocations} />\n            <PrivateRoute exact path=\"/organization/languages\" component={OrganizationLanguages} />\n            <PrivateRoute exact path=\"/organization/languages/add\" component={OrganizationLanguageAdd} />\n            <PrivateRoute exact path=\"/organization/languages/edit/:id\" component={OrganizationLanguageEdit} />\n            <PrivateRoute exact path=\"/organization/levels\" component={OrganizationLevels} />\n            <PrivateRoute exact path=\"/organization/levels/add\" component={OrganizationLevelAdd} />\n            <PrivateRoute exact path=\"/organization/levels/edit/:id\" component={OrganizationLevelEdit} />\n            <PrivateRoute exact path=\"/organization/locations\" component={OrganizationLocations} />\n            <PrivateRoute exact path=\"/organization/locations/add\" component={OrganizationLocationAdd} />\n            <PrivateRoute exact path=\"/organization/locations/edit/:id\" component={OrganizationLocationEdit} />\n            <PrivateRoute exact path=\"/organization/locations/rooms/:location_id\" component={OrganizationLocationRooms} />\n            <PrivateRoute exact path=\"/organization/locations/rooms/add/:location_id\" component={OrganizationLocationRoomAdd} />\n            <PrivateRoute exact path=\"/organization/locations/rooms/edit/:location_id/:id\" component={OrganizationLocationRoomEdit} />\n            <PrivateRoute exact path=\"/organization/memberships\" component={OrganizationMemberships} />\n            <PrivateRoute exact path=\"/organization/memberships/add\" component={OrganizationMembershipAdd} />\n            <PrivateRoute exact path=\"/organization/memberships/edit/:id\" component={OrganizationMembershipEdit} /> \n            <PrivateRoute exact path=\"/organization/subscriptions\" component={OrganizationSubscriptions} />\n            <PrivateRoute exact path=\"/organization/subscriptions/add\" component={OrganizationSubscriptionAdd} />\n            <PrivateRoute exact path=\"/organization/subscriptions/edit/:id\" component={OrganizationSubscriptionEdit} />\n            <PrivateRoute exact path=\"/organization/subscriptions/groups\" component={OrganizationSubscriptionsGroups} />\n            <PrivateRoute exact path=\"/organization/subscriptions/groups/add\" component={OrganizationSubscriptionsGroupAdd} />\n            <PrivateRoute exact path=\"/organization/subscriptions/groups/edit/:id\" component={OrganizationSubscriptionsGroupEdit} />\n            <PrivateRoute exact path=\"/organization/subscriptions/groups/edit/subscriptions/:id\" component={OrganizationSubscriptionsGroupEditSubscriptions} />\n            <PrivateRoute exact path=\"/organization/subscriptions/prices/:subscription_id\" component={OrganizationSubscriptionsPrices} />\n            <PrivateRoute exact path=\"/organization/subscriptions/prices/add/:subscription_id\" component={OrganizationSubscriptionPriceAdd} />\n            <PrivateRoute exact path=\"/organization/subscriptions/prices/edit/:subscription_id/:id\" component={OrganizationSubscriptionPriceEdit} />\n\n            {/* RELATIONS */}\n            <PrivateRoute exact path=\"/relations\" component={RelationsHome} />\n            <PrivateRoute exact path=\"/relations/accounts\" component={RelationsAccounts} />\n            <PrivateRoute exact path=\"/relations/accounts/add\" component={RelationsAccountAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/profile\" component={RelationsAccountProfile} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/profile/image\" component={RelationsAccountProfileImage} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/accepted_documents\" component={AccountAcceptedDocuments} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/bank_accounts\" component={RelationsAccountBankAccount} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/bank_accounts/:bank_account_id/mandates/add\" \n                          component={RelationsAccountBankAccountMandateAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/bank_accounts/:bank_account_id/mandates/edit/:id\" \n                          component={RelationsAccountBankAccountMandateEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/classes\" component={RelationsAccountClasses} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/classpasses\" component={AccountClasspasses} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/classpasses/add\" component={AccountClasspassAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/classpasses/edit/:id\" component={AccountClasspassEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/documents\" component={AccountDocuments} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/documents/add\" component={AccountDocumentAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/documents/edit/:id\" component={AccountDocumentEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/finance_payment_batch_category_items\" \n                          component={AccountFinancePaymentBatchCategoryItems} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/finance_payment_batch_category_items/add\" \n                          component={AccountFinancePaymentBatchCategoryItemAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/finance_payment_batch_category_items/edit/:id\" \n                          component={AccountFinancePaymentBatchCategoryItemEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/invoices\" component={AccountInvoices} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/invoices/add\" component={AccountInvoiceAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/memberships\" component={AccountMemberships} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/memberships/add\" component={AccountMembershipAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/memberships/edit/:id\" component={AccountMembershipEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/notes\" component={AccountNotes} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/notes/add\" component={AccountNoteAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/notes/edit/:id\" component={AccountNoteEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/orders\" component={AccountOrders} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/event_tickets\" component={AccountScheduleEventTickets} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions\" component={AccountSubscriptions} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/add\" component={AccountSubscriptionAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id\" \n                          component={AccountSubscriptionEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/alt_prices\" \n                          component={AccountSubscriptionEditAltPrices} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/alt_prices/add\" \n                          component={AccountSubscriptionEditAltPriceAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/alt_prices/edit/:id\" \n                          component={AccountSubscriptionEditAltPriceEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/blocks\" component={AccountSubscriptionEditBlocks} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/blocks/add\" component={AccountSubscriptionEditBlockAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/blocks/edit/:id\" \n                          component={AccountSubscriptionEditBlockEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/credits\" component={AccountSubscriptionEditCredits} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/credits/add\" component={AccountSubscriptionEditCreditAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/credits/edit/:id\" \n                          component={AccountSubscriptionEditCreditEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/invoices\" \n              component={AccountSubscriptionEditInvoices} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/invoices/add\" \n              component={AccountSubscriptionEditInvoiceAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/pauses\" component={AccountSubscriptionEditPauses} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/pauses/add\" component={AccountSubscriptionEditPauseAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/pauses/edit/:id\" \n                          component={AccountSubscriptionEditPauseEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/teacher_profile\" component={RelationsAccountTeacherProfile} />\n            <PrivateRoute exact path=\"/relations/b2b\" component={RelationsB2B} />\n            <PrivateRoute exact path=\"/relations/b2b/add\" component={RelationsB2BAdd} />\n            <PrivateRoute exact path=\"/relations/b2b/:business_id/edit\" component={RelationsB2BEdit} />\n\n            {/* SCHEDULE */}\n            <PrivateRoute exact path=\"/schedule\" component={ScheduleHome} />\n            <PrivateRoute exact path=\"/schedule/appointments\" component={ScheduleAppointments} />\n            <PrivateRoute exact path=\"/schedule/appointments/add\" component={ScheduleAppointmentAdd} />\n            <PrivateRoute exact path=\"/schedule/appointments/all/edit/:appointment_id\" component={ScheduleAppointmentEditAll} />\n            <PrivateRoute exact path=\"/schedule/classes\" component={ScheduleClasses} />\n            <PrivateRoute exact path=\"/schedule/classes/add/\" component={ScheduleClassAdd} />\n            <PrivateRoute exact path=\"/schedule/classes/all/edit/:class_id/\" component={ScheduleClassEditAll} />\n            <PrivateRoute exact path=\"/schedule/classes/all/classpasses/:class_id/\" component={ScheduleClassClasspasses} />\n            <PrivateRoute exact path=\"/schedule/classes/all/prices/:class_id/\" component={ScheduleClassPrices} />\n            <PrivateRoute exact path=\"/schedule/classes/all/prices/:class_id/add\" component={ScheduleClassPriceAdd} />\n            <PrivateRoute exact path=\"/schedule/classes/all/prices/:class_id/edit/:id\" component={ScheduleClassPriceEdit} />\n            <PrivateRoute exact path=\"/schedule/classes/all/subscriptions/:class_id/\" component={ScheduleClassSubscriptions} />\n            <PrivateRoute exact path=\"/schedule/classes/all/teachers/:class_id/\" component={ScheduleClassTeachers} />\n            <PrivateRoute exact path=\"/schedule/classes/all/teachers/:class_id/add\" component={ScheduleClassTeacherAdd} />\n            <PrivateRoute exact path=\"/schedule/classes/all/teachers/:class_id/edit/:id\" component={ScheduleClassTeacherEdit} />\n            <PrivateRoute exact path=\"/schedule/classes/class/attendance/:class_id/:date\" component={ScheduleClassAttendance} />\n            <PrivateRoute exact path=\"/schedule/classes/class/attendance_chart/:class_id/:date\" \n                          component={ScheduleClassAttendanceChart} />\n            <PrivateRoute exact path=\"/schedule/classes/class/book/:class_id/:date/:account_id\" component={ScheduleClassBook} />\n            <PrivateRoute exact path=\"/schedule/classes/class/edit/:class_id/:date\" component={ScheduleClassEdit} />\n            <PrivateRoute exact path=\"/schedule/events\" component={ScheduleEvents} />\n            <PrivateRoute exact path=\"/schedule/events/add\" component={ScheduleEventAdd} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id\" component={ScheduleEventEdit} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/activities\" component={ScheduleEventActivities} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/activities/add\" component={ScheduleEventActivityAdd} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/activities/edit/:id\" component={ScheduleEventActivityEdit} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/activities/edit/:id/attendance\" \n                          component={ScheduleEventActivityAttendance} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/earlybirds\" component={ScheduleEventEarlybirds} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/earlybirds/add\" component={ScheduleEventEarlybirdAdd} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/earlybirds/edit/:id\" component={ScheduleEventEarlybirdEdit} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/media\" component={ScheduleEventMedia} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/media/add\" component={ScheduleEventMediaAdd} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/media/edit/:id\" component={ScheduleEventMediaEdit} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/tickets\" component={ScheduleEventTickets} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/tickets/add\" component={ScheduleEventTicketAdd} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/tickets/edit/:id\" component={ScheduleEventTicketEdit} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/tickets/edit/:id/activities\" component={ScheduleEventTicketEditActivities} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/tickets/edit/:id/customers\" component={ScheduleEventTicketEditCustomers} />\n\n            {/* Insight */}\n            <PrivateRoute exact path=\"/insight\" component={InsightHome} />\n            <PrivateRoute exact path=\"/insight/classpasses\" component={InsightClasspasses} />\n            <PrivateRoute exact path=\"/insight/revenue\" component={InsightRevenue} />\n            <PrivateRoute exact path=\"/insight/subscriptions\" component={InsightSubscriptions} />\n\n            {/* Self Check-in */}\n            <PrivateRoute exact path=\"/selfcheckin/checkin/:location_id/:class_id/:date\" component={SelfCheckinCheckin} />\n            <PrivateRoute exact path=\"/selfcheckin/book/:location_id/:class_id/:date/:account_id\" \n                                component={SelfCheckinBookingOptions} />\n            <PrivateRoute exact path=\"/selfcheckin\" component={SelfCheckinLocations} />\n            <PrivateRoute exact path=\"/selfcheckin/location/:location_id\" component={SelfCheckinLocationClasses} />\n\n            {/* Shop */}\n            <Route exact path = \"/\" component={ShopHome} />\n            <PrivateRoute exact path = \"/shop/account\" component={ShopAccountHome} />\n            <PrivateRoute exact path = \"/shop/account/bank_account\" component={ShopAccountBankAccount} />\n            <PrivateRoute exact path = \"/shop/account/class_cancel/:class_id/:date/:attendance_id\" \n                                component={ShopAccountClassCancel} />\n            <PrivateRoute exact path = \"/shop/account/class_info/:class_id/:date\" component={ShopAccountClassInfo} />\n            <PrivateRoute exact path = \"/shop/account/classes\" component={ShopClasses} />\n            <PrivateRoute exact path = \"/shop/account/classpasses\" component={ShopAccountClasspasses} />\n            <PrivateRoute exact path = \"/shop/account/event_tickets\" component={ShopAccountEventTickets} />\n            <PrivateRoute exact path = \"/shop/account/invoice_payment/:id\" component={ShopAccountInvoicePayment} />\n            <PrivateRoute exact path = \"/shop/account/invoice_payment_status/:id\" component={ShopAccountInvoicePaymentStatus} />\n            <PrivateRoute exact path = \"/shop/account/invoices\" component={ShopAccountInvoices} />\n            <PrivateRoute exact path = \"/shop/account/orders\" component={ShopAccountOrders} />\n            <PrivateRoute exact path = \"/shop/account/profile\" component={ShopAccountProfile} />\n            <PrivateRoute exact path = \"/shop/account/subscriptions\" component={ShopAccountSubscriptions} />\n            <PrivateRoute exact path = \"/shop/checkout/payment/:id\" component={ShopCheckoutPayment} />\n            <PrivateRoute exact path = \"/shop/checkout/complete/:id\" component={ShopCheckoutComplete} />\n            <Route exact path = \"/shop/classes\" component={ShopClassesSchedule} />\n            <PrivateRoute exact path = \"/shop/classes/book/:class_id/:date\" component={ShopClassBook} />\n            <PrivateRoute exact path = \"/shop/classes/booked/:class_id/:date\" component={ShopClassBooked} />\n            <Route exact path = \"/shop/classpasses\" component={ShopClasspasses} />\n            <PrivateRoute exact path = \"/shop/classpass/:id\" component={ShopClasspass} />\n            <PrivateRoute exact path = \"/shop/classpass/:id/:class_id/:date\" component={ShopClasspass} />\n            <Route exact path = \"/shop/contact\" component={ShopContact} />\n            <Route exact path = \"/shop/events\" component={ShopEvents} />\n            <PrivateRoute exact path = \"/shop/events/:event_id\" component={ShopEvent} />\n            <PrivateRoute exact path = \"/shop/events/:event_id/ticket/:id\" component={ShopEventTicket} />\n            <Route exact path = \"/shop/subscriptions\" component={ShopSubscriptions} />\n            <PrivateRoute exact path = \"/shop/subscription/:id\" component={ShopSubscription} />\n            <PrivateRoute exact path = \"/shop/subscription/direct_debit_activated/:id\" component={ShopSubscriptionDirectDebitActivated} />\n\n            {/* Settings */}\n            <PrivateRoute exact path=\"/settings\" component={SettingsHome} />\n            <PrivateRoute exact path=\"/settings/about\" component={SettingsAbout} />\n            <PrivateRoute exact path=\"/settings/finance/bank_accounts\" component={SettingsFinanceBankAccounts} />\n            <PrivateRoute exact path=\"/settings/finance/currency\" component={SettingsFinanceCurrency} />\n            <PrivateRoute exact path=\"/settings/general/datetime\" component={SettingsGeneralDateTime} />\n            <PrivateRoute exact path=\"/settings/general/system\" component={SettingsGeneralSystem} />\n            <PrivateRoute exact path=\"/settings/integration/mollie\" component={SettingsIntegrationMollie} />\n            <PrivateRoute exact path=\"/settings/mail/templates\" component={SettingsMailTemplates} />\n            <PrivateRoute exact path=\"/settings/mail/templates/edit/:id\" component={SettingsMailTemplateEdit} />\n            <PrivateRoute exact path=\"/settings/shop/features\" component={SettingsShopFeatures} />\n            <PrivateRoute exact path=\"/settings/workflow/class_booking\" component={SettingsWorkflowClassBooking} />\n            <PrivateRoute exact path=\"/settings/workflow/shop\" component={SettingsWorkflowShop} />\n            <PrivateRoute exact path=\"/settings/workflow/subscription_pauses\" component={SettingsWorkflowSubscriptionPauses} />\n            <PrivateRoute exact path=\"/settings/workflow/trial\" component={SettingsWorkflowTrial} />\n\n            {/* User */}\n            <PrivateRoute exact path=\"/user/password/change\" component={UserChangePassword} />\n            <Route exact path=\"/user/login\" component={UserLogin} />\n            <Route exact path=\"/user/login/required\" component={UserLoginRequired} />\n            <Route exact path=\"/user/logout\" component={UserLogout} />\n            <Route exact path=\"/user/session/expired\" component={UserSessionExpired} />\n            <Route exact path=\"/user/welcome\" component={UserWelcome} />\n            \n            <Route component={Error404} />\n          </Switch>\n        </HashRouter>\n      </OrganizationProvider>\n    </AppSettingsProvider>\n  )\n}\n\nexport default withTranslation()(AppRoot)\n\n","import React from 'react'\nimport {\n  ApolloClient,\n  from,\n  createHttpLink,\n  InMemoryCache,\n  ApolloProvider,\n  Observable,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { setContext } from '@apollo/client/link/context';\n// import ApolloClient from \"react\"\n\nimport { TOKEN_REFRESH } from \"./queries/system/auth\"\n// Import moment locale\n// import moment from 'moment'\n// import 'moment/locale/nl'\n\nimport CSLS from \"./tools/cs_local_storage\"\nimport CSEC from \"./tools/cs_error_codes\"\nimport { CSAuth } from './tools/authentication'\n\n// Main app\nimport AppRoot from \"./AppRoot\"\n\n// Tabler css \nimport \"tabler-react/dist/Tabler.css\"\n// React-datepicker css\nimport \"react-datepicker/dist/react-datepicker.css\"\n// App css\nimport './App.css'\n\n// Register \"nl\" locale for react-datepicker\n// https://reactdatepicker.com/#example-17\n// import { registerLocale } from \"react-datepicker\"\n// import nl from 'date-fns/locale/nl';\n// registerLocale('nl', nl);\n\n// This allows <string>.trunc(x)\nString.prototype.trunc = \n  function(n){\n      return this.substr(0, n-1) + (this.length > n ? '...' : '')\n  }\n\nfunction SetCurrentUrlAsNext() {\n  console.log(\"Storing current location as next in local storage\")\n  const currentUrl = window.location.href\n  const next = currentUrl.split(\"#\")[1]\n  console.log(next)\n  if ((next != \"/user/login\") && (next != \"/user/session/expired\") && (next != \"/user/login/required\") && (next)) {\n    // This is a dirty hack to work around the following, a user refreshes the page but has an expired refreshtoken.\n    // This will produce an error on the orinal component, setting the correct next URL in localStorage. However, \n    // the code below will move the user to /user/login, which will also error at first, thus /user/login always\n    // gets set... we don't want that. This flow can be refactored at some point, but it works for now. \n    localStorage.setItem(CSLS.AUTH_LOGIN_NEXT, next)\n  } \n}\n  \n\nconst errorLink = onError(({ graphQLErrors, networkError, operation, forward, response }) => {\n  console.log(operation)\n  \n  if (graphQLErrors)\n    graphQLErrors.forEach(({ message, locations, path }) => {\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n      )\n    });\n\n  if (networkError) console.log(`[Network error]: ${networkError}`);\n\n  // request size check\n  if (graphQLErrors && graphQLErrors[0].message == \"Request body exceeded settings.DATA_UPLOAD_MAX_MEMORY_SIZE.\") {\n    console.error('CHOSEN FILE EXCEEDS SIZE LIMIT')\n  }\n\n  // Token refresh check\n  if (graphQLErrors && graphQLErrors[0].message == \"Signature has expired\") {\n    console.log(graphQLErrors[0])\n    console.log('Time to refresh the token')\n\n    let authTokenExpired = false\n    let refreshTokenExpired = false\n    const tokenExp = localStorage.getItem(CSLS.AUTH_TOKEN_EXP)\n    const refreshTokenExp = localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN_EXP)\n\n    if ((new Date() / 1000) >= tokenExp) {\n      authTokenExpired = true\n      \n      if ((new Date() / 1000) >= refreshTokenExp) {\n        refreshTokenExpired = true\n        // Remove any remaining token data\n        CSAuth.cleanup()\n        // Store current location, user has to login again\n        SetCurrentUrlAsNext()\n      }\n    }\n    \n    if (authTokenExpired && !refreshTokenExpired) {\n      console.log(\"refresh token... somehow...\")\n      console.log(localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN))\n\n      return new Observable(observer => {\n        client.mutate({\n          mutation: TOKEN_REFRESH,\n          variables: {\n            refreshToken: localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN)\n          }\n        })\n          .then(({ data }) => { \n            console.log(data)\n            CSAuth.updateTokenInfo(data.refreshToken)\n          })\n          .then(() => {\n            const subscriber = {\n              next: observer.next.bind(observer),\n              error: observer.error.bind(observer),\n              complete: observer.complete.bind(observer)\n            };\n\n            // Retry last failed request\n            forward(operation).subscribe(subscriber);\n          })\n          .catch(error => {\n            // No refresh or client token available, we force user to login, after a cleanup\n            console.log(\"Failed to refresh the token, onwards to the login page\")\n            observer.error(error);\n            CSAuth.cleanup()\n            window.location.href = \"/#/user/login\"\n            window.location.reload()\n          });\n      })\n    } else if (refreshTokenExpired) {\n      window.location.href = \"#/user/session/expired\"\n      window.location.reload()\n    } else {\n      window.location.href = \"#/user/login/required\"\n      window.location.reload()\n    }\n  }\n})\n    \n\nconst httpLink = createHttpLink({\n  uri: '/d/graphql/',\n  credentials: 'same-origin',\n});\n\nconst authLink = setContext(async (request, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(CSLS.AUTH_TOKEN)\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      Authorization: token ? `JWT ${token}`: ''\n    }\n  }\n});\n\n// set up ApolloClient\nconst client = new ApolloClient({\n  link: from([errorLink, authLink, httpLink]),\n  cache: new InMemoryCache(),\n})\n\n\nfunction App() {\n  // Register \"NL\" locale for moment\n  // moment.locale('en-US')\n\n  return (\n    <ApolloProvider client={client}>\n      <AppRoot />\n    </ApolloProvider>\n  )\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './i18n'\nimport './index.css'\nimport \"./c3jscustom.css\"\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}