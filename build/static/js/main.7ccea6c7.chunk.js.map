{"version":3,"sources":["i18n.js","queries/system/auth.js","tools/cs_local_storage.js","tools/authentication.js","components/settings/general/date_time/queries.js","components/organization/organization/queries.js","components/context/AppSettingsContext.js","components/context/OrganizationContext.js","queries/system/get_user.js","tools/user_tools.js","components/HasPermissionWrapper.js","components/home/home/queries.js","components/SiteWrapper.js","components/home/home/HomeHomeBase.jsx","components/home/home/HomeHome.jsx","components/automation/home/AutomationHomeItemButton.jsx","components/automation/home/AutomationHome.jsx","components/general/ContentCard.jsx","components/automation/queries.js","components/ui/ButtonBack.jsx","components/automation/AutomationBack.jsx","components/automation/account/subscription/credits/AutomationAccountSubscriptionCreditsBase.jsx","components/automation/AutomationTaskResultStatus.jsx","components/automation/account/subscription/credits/AutomationAccountSubscriptionCredits.jsx","components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoicesBase.jsx","components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoices.jsx","components/automation/account/subscription/invoices/yupSchema.js","components/ui/CSDatePicker.jsx","components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoicesForm.jsx","components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoicesAdd.jsx","components/automation/account/subscription/credits/yupSchema.js","components/automation/account/subscription/credits/AutomationAccountSubscriptionCreditForm.jsx","components/automation/account/subscription/credits/AutomationAccountSubscriptionCreditAdd.jsx","components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollectionBase.jsx","components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollections.jsx","components/automation/account/subscription/mollie_collection/yupSchema.js","components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollectionForm.jsx","components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollectionAdd.jsx","components/finance/FinanceMenu.jsx","components/finance/home/FinanceHome.jsx","components/finance/costcenters/queries.js","components/finance/costcenters/FinanceCostCentersBase.jsx","components/finance/costcenters/FinanceCostCenters.jsx","components/finance/costcenters/yupSchema.js","components/finance/costcenters/FinanceCostCenterAdd.jsx","components/finance/costcenters/FinanceCostCenterEdit.jsx","components/finance/glaccounts/queries.js","components/finance/glaccounts/FinanceGLAccountsBase.jsx","components/finance/glaccounts/FinanceGLAccounts.jsx","components/finance/glaccounts/yupSchema.js","components/finance/glaccounts/FinanceGLAccountAdd.jsx","components/finance/glaccounts/FinanceGLAccountEdit.jsx","components/finance/invoices/tools.js","components/finance/invoices/FinanceInvoicesFilter.jsx","components/finance/invoices/FinanceInvoicesBase.jsx","components/ui/FinanceInvoiceStatus.jsx","components/finance/invoices/queries.js","tools/confirm_delete.js","components/finance/invoices/FinanceInvoices.jsx","tools/refresh_token_and_open_export_link.js","components/finance/invoices/edit/FinanceInvoiceEditBase.jsx","components/finance/invoices/edit/FinanceInvoiceItemAdd.jsx","components/finance/invoices/edit/FinanceInvoiceItemDelete.jsx","components/finance/invoices/edit/FinanceInvoiceItemEditForm.jsx","components/finance/invoices/edit/FinanceInvoiceItemEdit.jsx","components/finance/invoices/edit/FinanceInvoiceEditItems.jsx","plugin_config/tinymce.js","components/finance/invoices/edit/FinanceInvoiceEditTermsForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditFooterForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditNoteForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditAdditional.jsx","components/finance/invoices/edit/FinanceInvoiceEditBalance.jsx","tools/date_tools.js","components/finance/invoices/edit/FinanceInvoiceEditOptionsForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditOptions.jsx","components/finance/invoices/edit/FinanceInvoiceEditOrganization.jsx","components/finance/invoices/edit/FinanceInvoiceEditSummaryForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditSummary.jsx","components/finance/invoices/edit/FinanceInvoiceEditToForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditTo.jsx","components/finance/invoices/edit/FinanceInvoiceEditPaymentDelete.jsx","components/finance/invoices/edit/FinanceInvoiceEditPayments.jsx","components/finance/invoices/edit/FinanceInvoiceEdit.jsx","components/ui/BadgeBoolean.jsx","components/finance/invoices/groups/queries.js","components/finance/invoices/groups/FinanceInvoiceGroupsBase.jsx","components/finance/invoices/groups/FinanceInvoiceGroups.jsx","components/finance/invoices/groups/yupSchema.js","components/finance/invoices/groups/FinanceInvoiceGroupForm.jsx","components/finance/invoices/groups/FinanceInvoiceGroupAdd.jsx","components/finance/invoices/groups/FinanceInvoiceGroupEdit.jsx","components/finance/invoices/groups/defaults/FinanceInvoiceGroupDefaultForm.jsx","components/finance/invoices/groups/defaults/yupSchema.js","components/finance/invoices/groups/defaults/queries.js","components/finance/invoices/groups/defaults/FinanceInvoiceGroupDefaults.jsx","components/finance/invoices/payments/queries.js","components/finance/invoices/payments/yupSchema.js","components/finance/invoices/payments/FinanceInvoicePaymentBase.jsx","components/finance/invoices/payments/FinanceInvoicePaymentForm.jsx","components/finance/invoices/payments/FinanceInvoicePaymentAdd.jsx","components/finance/invoices/payments/FinanceInvoicePaymentEdit.jsx","components/finance/orders/tools.js","components/finance/orders/FinanceOrdersFilter.jsx","components/finance/orders/FinanceOrdersBase.jsx","components/finance/orders/FinanceOrderStatus.jsx","components/finance/orders/queries.js","components/finance/orders/FinanceOrderDelete.jsx","components/finance/orders/FinanceOrders.jsx","components/finance/payment_batches/tools.js","components/ui/BadgeFinancePaymentBatchStatus.jsx","components/finance/payment_batches/FinancePaymentBatchesBase.jsx","components/finance/payment_batches/queries.js","components/finance/payment_batches/FinancePaymentBatches.jsx","components/ui/FinancePaymentBatchCategory.jsx","components/finance/payment_batches/FinancePaymentBatchAddWhat.jsx","components/finance/payment_batches/FinancePaymentBatchViewBase.jsx","components/finance/payment_batches/FinancePaymentCollectionBatchForm.jsx","components/finance/payment_batches/FinancePaymentBatchView.jsx","components/finance/payment_batches/yupSchema.js","components/finance/payment_batches/FinancePaymentCollectionBatchAdd.jsx","components/finance/payment_batches/FinancePaymentCollectionBatchEdit.jsx","components/finance/payment_batch_categories/tools.js","components/finance/payment_batch_categories/FinancePaymentBatchCategoriesBase.jsx","components/finance/payment_batch_categories/queries.js","components/finance/payment_batch_categories/FinancePaymentBatchCategories.jsx","components/finance/payment_batch_categories/yupSchema.js","components/finance/payment_batch_categories/FinancePaymentBatchCategoryForm.jsx","components/finance/payment_batch_categories/FinancePaymentBatchCategoryAdd.jsx","components/finance/payment_batch_categories/FinancePaymentBatchCategoryEdit.jsx","components/finance/orders/edit/queries.js","components/finance/orders/edit/FinanceOrderEditForm.jsx","components/finance/orders/edit/FinanceOrderEditBase.jsx","components/finance/orders/edit/FinanceOrderEdit.jsx","components/finance/payment_methods/FinancePaymentMethodsBase.jsx","components/finance/payment_methods/queries.js","components/finance/payment_methods/FinancePaymentMethods.jsx","components/finance/payment_methods/yupSchema.js","components/finance/payment_methods/FinancePaymentMethodForm.jsx","components/finance/payment_methods/FinancePaymentMethodAdd.jsx","components/finance/payment_methods/FinancePaymentMethodEdit.jsx","components/finance/taxrates/FinanceTaxRatesBase.jsx","components/finance/taxrates/queries.js","components/finance/taxrates/FinanceTaxRates.jsx","components/finance/taxrates/yupSchema.js","components/finance/taxrates/FinanceTaxRateAdd.jsx","components/finance/taxrates/FinanceTaxRateEdit.jsx","components/insight/InsightMenu.jsx","components/insight/home/InsightHome.jsx","components/insight/classpasses/queries.js","components/insight/InsightBackHome.jsx","components/insight/classpasses/InsightClasspassesBase.jsx","components/insight/classpasses/InsightClasspasses.jsx","components/insight/subscriptions/queries.js","components/insight/subscriptions/InsightSubscriptionsBase.jsx","components/insight/subscriptions/InsightSubscriptions.jsx","components/organization/OrganizationMenu.jsx","components/organization/home/OrganizationHome.jsx","components/organization/organization/yupSchema.js","tools/custom_file_input_label_style.js","components/organization/organization/OrganizationForm.jsx","components/organization/organization/OrganizationEditBase.jsx","components/organization/organization/OrganizationEdit.jsx","components/organization/organization/branding/OrganizationBrandingBase.jsx","components/organization/organization/branding/OrganizationBranding.jsx","components/organization/organization/branding/OrganizationBrandingEditForm.jsx","components/organization/organization/branding/OrganizationBrandingEdit.jsx","components/organization/announcements/OrganizationAnnouncementsBase.jsx","components/organization/announcements/queries.js","components/organization/announcements/OrganizationAnnouncements.jsx","components/organization/announcements/yupSchema.js","components/organization/announcements/OrganizationAnnouncementForm.jsx","components/organization/announcements/OrganizationAnnouncementAdd.jsx","components/organization/announcements/OrganizationAnnouncementEdit.jsx","components/organization/appointment_categories/appointments/queries.js","components/organization/appointment_categories/appointments/OrganizationAppointments.jsx","components/organization/appointment_categories/appointments/yupSchema.js","components/organization/appointment_categories/appointments/OrganizationAppointmentForm.jsx","components/organization/appointment_categories/appointments/OrganizationAppointmentAdd.jsx","components/organization/appointment_categories/appointments/OrganizationAppointmentEdit.jsx","components/organization/appointment_categories/queries.js","components/organization/appointment_categories/OrganizationAppointmentCategories.jsx","components/organization/appointment_categories/yupSchema.js","components/organization/appointment_categories/OrganizationAppointmentCategoryForm.jsx","components/organization/appointment_categories/OrganizationAppointmentCategoryAdd.jsx","components/organization/appointment_categories/OrganizationAppointmentCategoryEdit.jsx","components/organization/appointment_categories/appointments/prices/queries.js","components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPrices.jsx","components/organization/appointment_categories/appointments/prices/yupSchema.js","components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPriceForm.jsx","components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPriceAdd.jsx","components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPriceEdit.jsx","components/organization/classpasses/OrganizationClasspassesBase.jsx","components/organization/classpasses/queries.js","components/organization/classpasses/OrganizationClasspasses.jsx","components/organization/classpasses/yupSchema.js","components/organization/classpasses/OrganizationClasspassForm.jsx","components/organization/classpasses/OrganizationClasspassAdd.jsx","components/organization/classpasses/OrganizationClasspassEdit.jsx","components/organization/classpasses_groups/OrganizationClasspassesGroupsBase.jsx","components/organization/classpasses_groups/queries.js","components/organization/classpasses_groups/OrganizationClasspassesGroups.jsx","components/organization/classpasses_groups/yupSchema.js","components/organization/classpasses_groups/OrganizationClasspassesGroupAdd.jsx","components/organization/classpasses_groups/OrganizationClasspassesGroupEdit.jsx","components/organization/classpasses_groups/OrganizationClasspassesGroupEditPasses.jsx","components/organization/classtypes/tools.js","components/organization/classtypes/queries.js","components/organization/classtypes/OrganizationClasstypesBase.jsx","components/organization/classtypes/OrganizationClasstypes.jsx","components/organization/classtypes/yupSchema.js","components/organization/classtypes/OrganizationClasstypeAdd.jsx","components/organization/classtypes/OrganizationClasstypeEdit.jsx","components/organization/classtypes/OrganizationClasstypeEditImage.jsx","components/organization/discovery/queries.js","components/organization/discovery/OrganizationDiscoveriesBase.jsx","components/organization/discovery/OrganizationDiscoveries.jsx","components/organization/discovery/yupSchema.js","components/organization/discovery/OrganizationDiscoveryAdd.jsx","components/organization/discovery/OrganizationDiscoveryEdit.jsx","components/organization/documents/OrganizationDocuments.jsx","components/ui/ISODateString.jsx","components/ui/FileDownloadTableButton.jsx","components/organization/documents/OrganizationDocumentsBase.jsx","components/organization/documents/queries.js","components/organization/documents/OrganizationDocumentDelete.jsx","components/organization/documents/tools.js","components/organization/documents/OrganizationListDocuments.jsx","components/organization/documents/OrganizationDocumentAdd.jsx","components/organization/documents/yupSchema.js","components/organization/documents/OrganizationDocumentEdit.jsx","components/organization/holidays/OrganizationHolidaysBase.jsx","components/organization/holidays/queries.js","components/organization/holidays/OrganizationHolidays.jsx","components/organization/holidays/yupSchema.js","components/organization/holidays/OrganizationHolidayForm.jsx","components/organization/holidays/OrganizationHolidayAdd.jsx","components/organization/holidays/OrganizationHolidayEdit.jsx","components/organization/holidays/OrganizationHolidayEditLocations.jsx","components/organization/languages/OrganizationLanguagesBase.jsx","components/organization/languages/queries.js","components/organization/languages/OrganizationLanguages.jsx","components/organization/languages/yupSchema.js","components/organization/languages/OrganizationLanguageForm.jsx","components/organization/languages/OrganizationLanguageAdd.jsx","components/organization/languages/OrganizationLanguageEdit.jsx","components/organization/locations/queries.js","components/organization/locations/OrganizationLocationsBase.jsx","components/organization/locations/OrganizationLocations.jsx","components/organization/locations/yupSchema.js","components/organization/locations/OrganizationLocationAdd.jsx","components/organization/locations/OrganizationLocationEdit.jsx","components/organization/locations/rooms/queries.js","components/organization/locations/rooms/OrganizationLocationRoomsBase.jsx","components/organization/locations/rooms/OrganizationLocationRooms.jsx","components/organization/locations/rooms/yupSchema.js","components/organization/locations/rooms/OrganizationLocationRoomForm.jsx","components/organization/locations/rooms/OrganizationLocationRoomAdd.jsx","components/organization/locations/rooms/OrganizationLocationRoomEdit.jsx","components/organization/levels/OrganizationLevelsBase.jsx","components/organization/levels/queries.js","components/organization/levels/OrganizationLevels.jsx","components/organization/levels/yupSchema.js","components/organization/levels/OrganizationLevelForm.jsx","components/organization/levels/OrganizationLevelAdd.jsx","components/organization/levels/OrganizationLevelEdit.jsx","components/ui/Validity.jsx","components/organization/memberships/queries.js","components/organization/memberships/OrganizationMemberships.jsx","components/organization/memberships/yupSchema.js","components/organization/memberships/OrganizationMembershipAdd.jsx","components/organization/memberships/OrganizationMembershipEdit.jsx","components/organization/subscriptions/OrganizationSubscriptionsBase.jsx","components/organization/subscriptions/queries.js","components/organization/subscriptions/OrganizationSubscriptions.jsx","components/organization/subscriptions/yupSchema.js","components/organization/subscriptions/OrganizationSubscriptionForm.jsx","components/organization/subscriptions/OrganizationSubscriptionAdd.jsx","components/organization/subscriptions/OrganizationSubscriptionEdit.jsx","components/organization/subscriptions_groups/OrganizationSubscriptionsGroupsBase.jsx","components/organization/subscriptions_groups/queries.js","components/organization/subscriptions_groups/OrganizationSubscriptionsGroups.jsx","components/organization/subscriptions_groups/yupSchema.js","components/organization/subscriptions_groups/OrganizationSubscriptionsGroupForm.jsx","components/organization/subscriptions_groups/OrganizationSubscriptionsGroupAdd.jsx","components/organization/subscriptions_groups/OrganizationSubscriptionsGroupEdit.jsx","components/organization/subscriptions_groups/OrganizationSubscriptionsGroupEditSubscriptions.jsx","components/ui/AlertInfo.jsx","components/organization/subscriptions/prices/queries.js","components/organization/subscriptions/prices/OrganizationSubscriptionsPrices.jsx","components/relations/RelationsMenu.jsx","components/organization/subscriptions/prices/yupSchema.js","components/organization/subscriptions/prices/OrganizationSubscriptionPriceForm.jsx","components/organization/subscriptions/prices/OrganizationSubscriptionPriceAdd.jsx","components/organization/subscriptions/prices/OrganizationSubscriptionPriceEdit.jsx","components/relations/home/RelationsHome.jsx","components/general/InputSearch.jsx","components/relations/accounts/tools.js","components/relations/accounts/RelationsAccountsBase.jsx","components/relations/accounts/queries.js","components/relations/accounts/RelationsAccounts.jsx","components/relations/accounts/yupSchema.js","components/relations/accounts/RelationsAccountForm.jsx","components/relations/accounts/RelationsAccountAdd.jsx","components/relations/accounts/ProfileMenu.jsx","components/ui/ProfileCardSmall.jsx","components/relations/accounts/RelationsAccountsBack.jsx","tools/iso_country_codes.js","components/relations/accounts/RelationsAccountProfileForm.jsx","components/relations/accounts/RelationsAccountProfileBase.jsx","components/relations/accounts/RelationsAccountProfile.jsx","components/ui/DocumentType.jsx","components/relations/accounts/accepted_documents/queries.js","components/relations/accounts/accepted_documents/AcceptedDocuments.jsx","components/relations/accounts/bank_accounts/queries.js","components/relations/accounts/bank_accounts/mandates/queries.js","components/relations/accounts/bank_accounts/RelationsAccountBankAccountBase.jsx","components/relations/accounts/bank_accounts/RelationsAccountBankAccountForm.jsx","components/relations/accounts/bank_accounts/RelationsAccountBankAccount.jsx","components/relations/accounts/bank_accounts/mandates/RelationsAccountBankAccountMandateForm.jsx","components/relations/accounts/bank_accounts/mandates/RelationsAccountBankAccountMandateAdd.jsx","components/relations/accounts/bank_accounts/mandates/RelationsAccountBankAccountMandateEdit.jsx","components/ui/BadgeBookingStatus.jsx","components/relations/accounts/classes/AccountClassesBase.jsx","components/relations/accounts/classes/queries.js","components/schedule/classes/class/attendance/queries.js","components/relations/accounts/classes/AccountClassDelete.jsx","components/relations/accounts/classes/AccountClasses.jsx","components/relations/accounts/classpasses/queries.js","components/relations/accounts/classpasses/AccountClasspasses.jsx","components/relations/accounts/classpasses/yupSchema.js","components/relations/accounts/classpasses/AccountClasspassForm.jsx","components/relations/accounts/classpasses/AccountClasspassAdd.jsx","components/relations/accounts/classpasses/AccountClasspassEdit.jsx","components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemsBase.jsx","components/relations/accounts/finance_payment_batch_category_items/queries.js","components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItems.jsx","components/relations/accounts/finance_payment_batch_category_items/yupSchema.js","components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemsForm.jsx","components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemAdd.jsx","components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemEdit.jsx","components/relations/accounts/invoices/queries.js","components/relations/accounts/invoices/AccountInvoicesBase.jsx","components/relations/accounts/invoices/AccountInvoices.jsx","components/relations/accounts/invoices/AccountInvoiceAddForm.jsx","components/relations/accounts/invoices/yupSchema.js","components/relations/accounts/invoices/AccountInvoiceAdd.jsx","components/relations/accounts/memberships/queries.js","components/relations/accounts/memberships/AccountMemberships.jsx","components/relations/accounts/memberships/yupSchema.js","components/relations/accounts/memberships/AccountMembershipForm.jsx","components/relations/accounts/memberships/AccountMembershipAdd.jsx","components/relations/accounts/memberships/AccountMembershipEdit.jsx","components/general/LoadMoreOnBottomScroll.jsx","components/relations/accounts/notes/AccountNotesBase.jsx","components/relations/accounts/notes/queries.js","components/relations/accounts/notes/tools.js","components/relations/accounts/notes/AccountNotes.jsx","components/relations/accounts/notes/AccountNoteForm.jsx","components/relations/accounts/notes/AccountNoteAdd.jsx","components/relations/accounts/notes/AccountNoteEdit.jsx","components/relations/accounts/orders/AccountOrdersBase.jsx","components/relations/accounts/orders/queries.js","components/relations/accounts/orders/AccountOrderDelete.jsx","components/relations/accounts/orders/AccountOrders.jsx","components/relations/accounts/schedule_event_tickets/queries.js","queries/accounts/get_account.js","components/relations/accounts/schedule_event_tickets/AccountScheduleEventTicketsBase.jsx","components/schedule/events/tickets/customers/queries.js","components/relations/accounts/schedule_event_tickets/AccountScheduleEventTickets.jsx","components/relations/accounts/subscriptions/queries.js","components/relations/accounts/subscriptions/AccountSubscriptions.jsx","components/relations/accounts/subscriptions/yupSchema.js","components/relations/accounts/subscriptions/AccountSubscriptionForm.jsx","components/relations/accounts/subscriptions/AccountSubscriptionAdd.jsx","components/ui/CardTabs.jsx","components/relations/accounts/subscriptions/edit/AccountSubscriptionEditTabs.jsx","components/relations/accounts/subscriptions/edit/AccountSubscriptionEditBaseBase.jsx","components/relations/accounts/subscriptions/edit/AccountSubscriptionEditBase.jsx","components/relations/accounts/subscriptions/edit/AccountSubscriptionEdit.jsx","components/ui/ButtonAddSecondaryMenu.jsx","components/relations/accounts/subscriptions/edit/alt_prices/queries.js","components/relations/accounts/subscriptions/edit/AccountSubscriptionEditListBaseBase.jsx","components/relations/accounts/subscriptions/edit/AccountSubscriptionEditListBase.jsx","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceDelete.jsx","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPrices.jsx","components/relations/accounts/subscriptions/edit/alt_prices/yupSchema.js","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceBase.jsx","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceForm.jsx","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceAdd.jsx","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceEdit.jsx","components/relations/accounts/subscriptions/edit/blocks/queries.js","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockDelete.jsx","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlocks.jsx","components/relations/accounts/subscriptions/edit/blocks/yupSchema.js","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockBase.jsx","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockForm.jsx","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockAdd.jsx","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockEdit.jsx","components/ui/SubscriptionCreditsMutationType.jsx","components/relations/accounts/subscriptions/edit/credits/queries.js","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditDelete.jsx","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCredits.jsx","components/relations/accounts/subscriptions/edit/credits/yupSchema.js","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditBase.jsx","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditForm.jsx","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditAdd.jsx","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditEdit.jsx","components/relations/accounts/subscriptions/edit/invoices/queries.js","components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoiceDelete.jsx","components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoices.jsx","components/relations/accounts/subscriptions/edit/invoices/yupSchema.js","components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoiceAddBase.jsx","components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoiceAddForm.jsx","components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoiceAdd.jsx","components/relations/accounts/subscriptions/edit/pauses/queries.js","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseDelete.jsx","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauses.jsx","components/relations/accounts/subscriptions/edit/pauses/yupSchema.js","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseBase.jsx","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseForm.jsx","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseAdd.jsx","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseEdit.jsx","components/relations/accounts/teacher_profile/queries.js","components/relations/accounts/teacher_profile/yupSchema.js","components/relations/accounts/teacher_profile/RelationsAccountTeacherProfileForm.jsx","components/relations/accounts/teacher_profile/RelationsAccountTeacherProfile.jsx","components/relations/b2b/tools.js","components/relations/b2b/RelationsB2BBase.jsx","components/relations/b2b/queries.js","tools/confirm_archive.js","tools/confirm_unarchive.js","components/relations/b2b/RelationsB2B.jsx","components/relations/b2b/RelationB2BAddForm.jsx","components/relations/b2b/RelationsB2BAdd.jsx","components/relations/b2b/RelationsB2BEditBase.jsx","components/relations/b2b/RelationsB2BEditForm.jsx","components/relations/b2b/RelationsB2BEdit.jsx","components/schedule/ScheduleMenu.jsx","components/schedule/home/ScheduleHome.jsx","components/schedule/appointments/tools.js","components/schedule/appointments/ScheduleAppointmentsFilter.jsx","components/schedule/appointments/queries.js","components/schedule/appointments/ScheduleAppointments.jsx","components/schedule/appointments/all/AppointmentEditMenu.jsx","components/schedule/appointments/yupSchema.js","components/ui/CSTimePicker.jsx","components/schedule/appointments/ScheduleAppointmentForm.jsx","components/schedule/appointments/ScheduleAppointmentAdd.jsx","components/schedule/appointments/all/AppointmentEditBack.jsx","components/schedule/appointments/all/AppointmentEditBase.jsx","components/schedule/appointments/all/tools.js","components/schedule/appointments/all/edit/ScheduleAppointmentEditAll.jsx","components/ui/StatusIcon.jsx","components/schedule/classes/tools.js","components/schedule/classes/ScheduleClassesFilter.jsx","components/schedule/classes/ScheduleClassesBase.jsx","components/schedule/classes/queries.js","components/schedule/classes/ScheduleClasses.jsx","components/schedule/classes/yupSchema.js","components/schedule/classes/ScheduleClassForm.jsx","components/schedule/classes/ScheduleClassAddBase.jsx","components/schedule/classes/ScheduleClassAdd.jsx","components/schedule/classes/all/ClassEditMenu.jsx","components/schedule/classes/all/edit/queries.js","components/schedule/classes/all/ClassEditBack.jsx","components/schedule/classes/all/ClassEditBaseBase.jsx","components/schedule/classes/all/tools.js","components/schedule/classes/all/ClassEditBase.jsx","components/schedule/classes/all/edit/ScheduleClassEditAll.jsx","components/ui/FormHelp.jsx","components/schedule/classes/all/classpasses/ScheduleClassClasspassForm.jsx","components/schedule/classes/all/classpasses/yupSchema.js","components/schedule/classes/all/classpasses/queries.js","components/schedule/classes/all/classpasses/ScheduleClassClasspasses.jsx","components/schedule/classes/all/subscriptions/ScheduleClassSubscriptionForm.jsx","components/schedule/classes/all/subscriptions/yupSchema.js","components/schedule/classes/all/subscriptions/queries.js","components/schedule/classes/all/subscriptions/ScheduleClassSubscriptions.jsx","components/schedule/classes/all/teachers/queries.js","components/schedule/classes/all/teachers/ScheduleClassTeachers.jsx","components/schedule/classes/all/teachers/yupSchema.js","components/schedule/classes/all/teachers/ScheduleClassTeacherForm.jsx","components/schedule/classes/all/teachers/ScheduleClassTeacherBack.jsx","components/schedule/classes/all/teachers/ScheduleClassTeacherAdd.jsx","components/schedule/classes/all/teachers/ScheduleClassTeacherEdit.jsx","components/schedule/classes/class/attendance/tools.js","components/schedule/classes/class/tools.js","components/schedule/classes/class/ScheduleClassBack.jsx","components/schedule/classes/class/ClassMenu.jsx","components/schedule/classes/class/attendance/ScheduleClassAttendanceDelete.jsx","queries/accounts/account_search_queries.js","components/schedule/classes/class/attendance/ScheduleClassAttendance.jsx","components/schedule/classes/class/book/ScheduleClassBookBack.jsx","components/schedule/classes/class/book/queries.js","components/schedule/classes/class/book/tools.js","components/schedule/classes/class/book/ScheduleClassBookClasspassBtn.jsx","components/schedule/classes/class/book/ScheduleClassBookClasspasses.jsx","components/schedule/classes/class/book/ScheduleClassBookSubscriptionBtn.jsx","components/schedule/classes/class/book/ScheduleClassBookSubscriptions.jsx","components/schedule/classes/class/book/ScheduleClassBookPriceBtn.jsx","components/schedule/classes/class/book/ScheduleClassBookPriceDropin.jsx","components/schedule/classes/class/book/ScheduleClassBookPriceTrial.jsx","components/schedule/classes/class/book/ScheduleClassBook.jsx","components/schedule/classes/class/edit/queries.js","components/schedule/classes/class/edit/yupSchema.js","components/schedule/classes/class/edit/ScheduleClassEditForm.jsx","components/schedule/classes/class/edit/ScheduleClassWeeklyOTCDelete.jsx","components/schedule/classes/class/edit/ScheduleClassEdit.jsx","components/schedule/classes/all/prices/ButtonAdd.jsx","components/schedule/classes/all/prices/queries.js","components/schedule/classes/all/prices/ScheduleClassPriceDelete.jsx","components/schedule/classes/all/prices/ScheduleClassPrices.jsx","components/schedule/classes/all/prices/ScheduleClassPriceForm.jsx","components/schedule/classes/all/prices/yupSchema.js","components/schedule/classes/all/prices/ScheduleClassPriceBack.jsx","components/schedule/classes/all/prices/ScheduleClassPriceAdd.jsx","components/schedule/classes/all/prices/ScheduleClassPriceEdit.jsx","components/schedule/events/ScheduleEventsBase.jsx","components/schedule/events/queries.js","components/schedule/events/tools.js","components/schedule/events/ScheduleEventArchive.jsx","components/schedule/events/ScheduleEvents.jsx","components/schedule/events/yupSchema.js","components/schedule/events/ScheduleEventForm.jsx","components/schedule/events/ScheduleEventAdd.jsx","components/schedule/events/edit/ScheduleEventEditMenu.jsx","components/schedule/events/edit/ScheduleEventEditBack.jsx","components/schedule/events/edit/ScheduleEventEditBaseBase.jsx","components/schedule/events/edit/ScheduleEventEditBase.jsx","components/schedule/events/edit/ScheduleEventEdit.jsx","components/schedule/events/activities/queries.js","components/schedule/events/edit/ScheduleEventEditListBase.jsx","components/schedule/events/activities/ScheduleEventActivityDelete.jsx","components/schedule/events/activities/ScheduleEventActivities.jsx","components/schedule/events/activities/yupSchema.js","components/schedule/events/activities/ScheduleEventActivityBack.jsx","components/schedule/events/activities/ScheduleEventActivityForm.jsx","components/schedule/events/activities/ScheduleEventActivityAdd.jsx","components/schedule/events/activities/ScheduleEventActivityTabs.jsx","components/schedule/events/activities/ScheduleEventActivityEditBase.jsx","components/schedule/events/activities/ScheduleEventActivityEdit.jsx","components/schedule/events/activities/attendance/queries.js","components/schedule/events/activities/attendance/ScheduleEventActivityAttendanceBase.jsx","components/schedule/events/activities/attendance/ScheduleEventActivityAttendance.jsx","components/schedule/events/earlybirds/queries.js","components/schedule/events/earlybirds/ScheduleEventEarlybirdDelete.jsx","components/schedule/events/earlybirds/ScheduleEventEarlybirds.jsx","components/schedule/events/earlybirds/yupSchema.js","components/schedule/events/earlybirds/ScheduleEventEarlybirdsBack.jsx","components/schedule/events/earlybirds/ScheduleEventEarlybirdForm.jsx","components/schedule/events/earlybirds/ScheduleEventEarlybirdAdd.jsx","components/schedule/events/earlybirds/ScheduleEventEarlybirdEdit.jsx","components/schedule/events/media/queries.js","components/schedule/events/media/ScheduleEventMediaDelete.jsx","components/schedule/events/media/ScheduleEventMedia.jsx","components/schedule/events/media/yupSchema.js","components/schedule/events/media/ScheduleEventMediaBack.jsx","components/schedule/events/media/ScheduleEventMediaForm.jsx","components/schedule/events/media/ScheduleEventMediaAdd.jsx","components/schedule/events/media/ScheduleEventMediaEditBase.jsx","components/schedule/events/media/ScheduleEventMediaEdit.jsx","components/schedule/events/tickets/queries.js","components/schedule/events/tickets/ScheduleEventTicketListBase.jsx","components/schedule/events/tickets/ScheduleEventTicketDelete.jsx","components/ui/BadgeSoldOut.jsx","components/schedule/events/tickets/ScheduleEventTickets.jsx","components/schedule/events/tickets/yupSchema.js","components/schedule/events/tickets/ScheduleEventTicketBack.jsx","components/schedule/events/tickets/ScheduleEventTicketForm.jsx","components/schedule/events/tickets/ScheduleEventTicketAdd.jsx","components/schedule/events/tickets/ScheduleEventTicketTabs.jsx","components/schedule/events/tickets/ScheduleEventTicketEditBase.jsx","components/schedule/events/tickets/ScheduleEventTicketEdit.jsx","components/schedule/events/tickets/activities/queries.js","components/schedule/events/tickets/activities/yupSchema.js","components/schedule/events/tickets/activities/ScheduleEventTicketEditActivityForm.jsx","components/schedule/events/tickets/activities/ScheduleEventTicketEditActivities.jsx","components/schedule/events/tickets/customers/tools.js","components/schedule/events/tickets/customers/ScheduleEventTicketEditCustomers.jsx","components/SiteWrapperSelfCheckin.js","components/selfcheckin/SelfCheckinBase.jsx","components/selfcheckin/Checkin/queries.js","components/selfcheckin/Checkin/tools.js","components/selfcheckin/Checkin/Checkin.jsx","components/selfcheckin/BookingOptions/queries.js","components/selfcheckin/BookingOptions/BookingOptions.jsx","components/selfcheckin/Locations/queries.js","components/selfcheckin/Locations/Locations.jsx","components/selfcheckin/LocationClasses/queries.js","components/selfcheckin/LocationClasses/LocationClasses.jsx","components/settings/queries.js","components/settings/SettingsBack.jsx","components/settings/SettingsBase.jsx","components/settings/about/SettingsAbout.jsx","components/settings/finance/bank_accounts/SettingsFinanceBankAccountsForm.jsx","components/settings/finance/bank_accounts/SettingsFinanceBankAccounts.jsx","components/settings/finance/currency/SettingsFinanceCurrencyForm.jsx","components/settings/finance/currency/SettingsFinanceCurrency.jsx","components/settings/general/date_time/yupSchema.js","components/settings/general/date_time/SettingsGeneralDateTimeForm.jsx","components/settings/general/date_time/SettingsGeneralDateTime.jsx","components/settings/general/system/SettingsGeneralSystemForm.jsx","components/settings/general/system/SettingsGeneralSystem.jsx","components/settings/home/SettingsHomeItemButton.jsx","components/settings/home/SettingsHome.jsx","components/settings/integration/mollie/SettingsIntegrationMollieForm.jsx","components/settings/integration/mollie/SettingsIntegrationMollieCreateAccount.jsx","components/settings/integration/mollie/SettingsIntegrationMollie.jsx","components/settings/mail/SettingsMailTemplatesBase.jsx","components/settings/mail/queries.js","components/settings/mail/SettingsMailTemplates.jsx","components/settings/mail/SettingsMailTemplateEditBase.jsx","components/settings/mail/SettingsMailTemplateEditForm.jsx","components/settings/mail/SettingsMailTemplateEdit.jsx","components/settings/mail/tools.js","components/settings/shop/features/queries.js","components/settings/shop/features/yupSchema.js","components/settings/shop/features/SettingsShopFeaturesForm.jsx","components/settings/shop/features/SettingsShopFeatures.jsx","components/settings/workflow/class_booking/SettingsWorkflowClassBookingForm.jsx","components/settings/workflow/class_booking/SettingsWorkflowClassBooking.jsx","components/SiteWrapperShop.js","queries/system/get_user_profile.js","components/shop/account/home/ShopAccountHomeBase.jsx","components/shop/account/home/ShopAccountHomeButton.jsx","components/shop/account/home/ShopAccountHome.jsx","components/shop/tools.js","components/shop/account/class_cancel/queries.js","components/shop/account/class_cancel/ShopAccountClassCancelBase.jsx","components/shop/account/class_cancel/ShopAccountClassCancel.jsx","components/shop/checkout/class_info/queries.js","components/shop/checkout/class_info/ShopCheckoutClassInfo.jsx","components/shop/account/class_info/ShopAccountClassInfoBase.jsx","components/shop/account/class_info/ShopAccountClassInfo.jsx","components/shop/account/classpasses/queries.js","components/shop/account/ShopAccountBack.jsx","components/shop/account/classpasses/ShopAccountClasspassesBase.jsx","components/shop/account/classpasses/ShopAccountClasspasses.jsx","components/shop/account/ShopAccountProfileBase.jsx","components/shop/account/event_tickets/ShopAccountEventTickets.jsx","components/shop/account/invoice_payment/queries.js","components/shop/account/invoice_payment/ShopAccountInvoicePaymentBase.jsx","components/shop/account/invoice_payment/ShopAccountInvoicePayment.jsx","components/shop/account/invoice_payment_status/ShopAccountInvoicePaymentStatusBase.jsx","components/shop/account/invoice_payment_status/ShopAccountInvoicePaymentStatus.jsx","components/shop/account/invoices/queries.js","components/shop/account/invoices/ShopAccountInvoicesBase.jsx","components/shop/account/invoices/ShopAccountInvoices.jsx","components/shop/account/orders/queries.js","components/shop/account/orders/ShopAccountOrdersBase.jsx","components/shop/account/orders/tools.js","components/shop/account/orders/ShopAccountOrders.jsx","components/shop/account/orders/ShopAccountOrderCancel.jsx","components/shop/account/profile/queries.js","components/shop/account/profile/ShopAccountProfileBase.jsx","components/shop/account/profile/ShopAccountProfileForm.jsx","components/shop/account/profile/yupSchema.js","components/shop/account/profile/ShopAccountProfile.jsx","components/shop/account/subscriptions/queries.js","components/shop/account/subscriptions/ShopAccountSubscriptionsBase.jsx","components/shop/account/subscriptions/ShopAccountSubscriptions.jsx","components/shop/classes/book/ShopClassBookBack.jsx","components/shop/ShopCheckoutProgress.jsx","components/shop/ShopBase.jsx","components/shop/classes/book/ShopClassBookBase.jsx","components/shop/classes/book/ShopClassBookClasspassBtn.jsx","components/shop/classes/book/ShopClassBookClasspasses.jsx","components/shop/classes/book/ShopClassBookSubscriptionBtn.jsx","components/shop/classes/book/ShopClassBookSubscriptions.jsx","components/shop/classes/book/ShopClassBookPriceBtn.jsx","components/shop/classes/book/ShopClassBookPriceDropin.jsx","components/shop/classes/book/ShopClassBookPriceTrial.jsx","components/shop/classes/book/queries.js","components/shop/classes/book/ShopClassBook.jsx","components/shop/classes/booked/ShopClassBookedBase.jsx","components/shop/queries.js","components/shop/classes/booked/ShopClassBooked.jsx","components/shop/classes/schedule/ShopClassesScheduleBase.jsx","components/shop/classes/schedule/tools.js","components/shop/classes/schedule/ShopClassesScheduleFilter.jsx","components/shop/classes/schedule/ShopClassesScheduleButtonBook.jsx","components/shop/classes/schedule/ShopClassesSchedule.jsx","components/shop/contact/ShopContactBase.jsx","components/shop/contact/ShopContact.jsx","components/shop/events/ShopEventsBase.jsx","components/shop/events/queries.js","components/shop/events/ShopEvents.jsx","components/shop/event/ShopEventBase.jsx","components/shop/event/ShopEventTicketPricingCard.jsx","components/shop/event/queries.js","components/shop/event/ShopEvent.jsx","components/shop/event_ticket/ShopEventTicketBase.jsx","tools/cs_django_links.js","components/shop/ShopCheckoutForm.jsx","components/shop/event_ticket/queries.js","components/shop/event_ticket/ShopEventTicket.jsx","components/shop/home/queries.js","components/shop/home/ShopHomeBase.jsx","components/shop/home/ShopHome.jsx","components/shop/checkout/payment/ShopCheckoutPaymentBase.jsx","components/shop/checkout/queries.js","components/shop/checkout/order_summary/ShopCheckoutOrderSummary.jsx","components/shop/checkout/payment/queries.js","components/shop/checkout/payment/ShopCheckoutPayment.jsx","components/shop/checkout/complete/ShopCheckoutCompleteBase.jsx","components/shop/checkout/complete/ShopCheckoutComplete.jsx","components/shop/account/classes/queries.js","components/shop/account/classes/ShopAccountClassesBase.jsx","components/shop/account/classes/ShopAccountClasses.jsx","components/shop/classpasses/ShopClasspassesBase.jsx","components/shop/classpass/ShopClasspassBase.jsx","components/shop/classpass/queries.js","components/shop/classpass/ShopClasspassPricingCard.jsx","components/shop/classpasses/queries.js","components/shop/classpasses/ShopClasspasses.jsx","components/shop/classpass/ShopClasspass.jsx","components/shop/subscriptions/ShopSubscriptionsBase.jsx","components/shop/subscription/ShopSubscriptionPricingCard.jsx","components/shop/subscriptions/queries.js","components/shop/subscriptions/ShopSubscriptions.jsx","components/shop/subscription/ShopSubscriptionBase.jsx","components/shop/subscription/queries.js","components/shop/subscription/ShopSubscription.jsx","components/user/password/yupSchema.js","components/user/password/UserPasswordChangeForm.jsx","components/ui/CSStandaloneFormPage.jsx","components/user/password/UserPasswordChange.jsx","components/user/login/UserLoginForm.jsx","components/user/login/UserLogin.jsx","components/user/login/UserLoginRequired.jsx","components/user/login/UserLogout.jsx","components/user/session/UserSessionExpired.jsx","components/ui/CSStandalonePageWide.jsx","components/user/welcome/UserWelcome.jsx","components/Error404.js","AppRoot.js","App.js","serviceWorker.js","index.js"],"names":["resources","en_US","common","console","log","i18n","use","LanguageDetector","initReactI18next","init","lng","fallbackLng","ns","defaultNS","debug","keySeparator","interpolation","escapeValue","TOKEN_AUTH","gql","TOKEN_REFRESH","TOKEN_COOKIE_DELETE","TOKEN_REFRESH_COOKIE_DELETE","UPDATE_ACCOUNT_PASSWORD","cs_local_storage_keys","AUTH_TOKEN","AUTH_TOKEN_EXP","AUTH_TOKEN_ORIGIAT","AUTH_REFRESH_TOKEN","AUTH_REFRESH_TOKEN_EXP","AUTH_LOGIN_NEXT","FINANCE_INVOICES_FILTER_STATUS","FINANCE_INVOICES_EDIT_RETURN","FINANCE_ORDERS_FILTER_STATUS","FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE","INSIGHT_CLASSPASSES_YEAR","INSIGHT_SUBSCRIPTIONS_YEAR","ORGANIZATION_CLASSTYPES_ARCHIVED","RELATIONS_ACCOUNTS_FILTER_TYPE","RELATIONS_ACCOUNTS_SEARCH","RELATIONS_ACCOUNTS_IS_ACTIVE","RELATIONS_ACCOUNT_NOTES_NOTE_TYPE","RELATIONS_BUSINESSES_SHOW_ARCHIVE","RELATIONS_BUSINESSES_SEARCH","SCHEDULE_APPOINTMENTS_DATE_FROM","SCHEDULE_APPOINTMENTS_DATE_UNTIL","SCHEDULE_APPOINTMENTS_ORDER_BY","SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE","SCHEDULE_APPOINTMENTS_FILTER_LOCATION","SCHEDULE_CLASSES_DATE_FROM","SCHEDULE_CLASSES_DATE_UNTIL","SCHEDULE_CLASSES_ORDER_BY","SCHEDULE_CLASSES_FILTER_CLASSTYPE","SCHEDULE_CLASSES_FILTER_LEVEL","SCHEDULE_CLASSES_FILTER_LOCATION","SCHEDULE_CLASSES_CLASS_ATTENDANCE_SEARCH","SCHEDULE_EVENTS_ARCHIVED","SCHEDULE_EVENTS_TICKETS_CUSTOMERS_SEARCH","SHOP_CLASSES_DATE_FROM","SHOP_CLASSES_DATE_UNTIL","SHOP_CLASSES_ORDER_BY","SHOP_CLASSES_FILTER_CLASSTYPE","SHOP_CLASSES_FILTER_LEVEL","SHOP_CLASSES_FILTER_LOCATION","CSAuth","login","tokenData","localStorage","setItem","CSLS","token","payload","exp","origIat","refreshToken","refreshExpiresIn","removeItem","updateTokenInfo","refreshTokenData","cleanup","logout","expired","this","GET_APP_SETTINGS_QUERY","UPDATE_APP_SETTINGS","GET_ORGANIZATION_QUERY","AppSettingsContext","React","createContext","AppSettingsProvider","Provider","Consumer","OrganizationContext","OrganizationProvider","GET_USER","get_all_permissions","user","permissions","groups","edges","edge_index","group_edge","node","group_node","permission_index","permission_edge","codename_split","codename","split","Set","add","has_permission","permission","resource","you_shall_not_pass","has","HasPermissionWrapper","children","useQuery","loading","error","data","check_permission","GET_BACKEND_ANNOUNCEMENTS_QUERY","getNavBarItems","t","items","push","value","to","icon","LinkComponent","withRouter","NavLink","useExact","now","Date","withTranslation","match","history","fetchMore","Wrapper","headerProps","href","alt","imageURL","navItems","Item","type","className","outline","size","color","accountDropdown","avatarURL","name","firstName","lastName","description","options","isDivider","navProps","itemsObjects","routerContextComponentType","RouterContextProvider","footerProps","copyright","getFullYear","target","rel","nav","Col","auto","autoClose","transition","Slide","Header","title","announcements","organizationAnnouncements","length","Row","cards","deck","map","md","Body","dangerouslySetInnerHTML","__html","content","link","linkTitle","block","params","AutomationHomeItemButton","ContentCard","handleOnScroll","scrollTop","document","documentElement","body","scrollHeight","clientHeight","window","innerHeight","Math","ceil","pageInfo","props","hasNextPage","onLoadMore","addEventListener","removeEventListener","cardTitle","headerContent","cardTabs","hasCardBody","Title","Footer","onClick","Component","defaultProps","f","GET_TASK_RESULT_QUERY","returnUrl","status","dateTimeFormatMoment","useContext","variables","taskName","headerOptions","Options","taskResults","djangoCeleryResultTaskResults","after","endCursor","updateQuery","previousResult","fetchMoreResult","newEdges","__typename","ColHeader","v4","moment","dateDone","format","taskKwargs","result","AUTOMATION_ACCOUNT_SUBSCRIPTION_INVOICES_SCHEMA","Yup","shape","subscriptionYear","required","positive","min","max","subscriptionMonth","invoiceDate","dateFormat","selected","onChange","onBlur","isClearable","placeholderText","todayButton","showMonthDropdown","showYearDropdown","dropdownMode","date","isSubmitting","errors","Group","label","autoComplete","component","disabled","ADD_TASK","useMutation","addTask","initialValues","getMonth","validationSchema","onSubmit","values","setSubmitting","input","month","year","refetchQueries","query","then","toast","success","position","POSITION","BOTTOM_RIGHT","catch","AUTOMATION_ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA","AUTOMATION_ACCOUNT_SUBSCRIPTION_MOLLIE_COLLECTION_SCHEMA","invoices_active","orders_active","costcenters_active","glaccounts_active","taxrates_active","payment_methods_active","payment_batch_collections_active","payment_batch_payments_active","payment_batch_categories_active","activeLink","transparent","GroupItem","active","FinanceHome","id","lg","header","footer","GET_COSTCENTERS_QUERY","GET_COSTCENTER_QUERY","ADD_COSTCENTER","UPDATE_COSTCENTER","ARCHIVE_COSTCENTER","showBack","prefix","useState","archived","setArchived","refetch","archiveCostcenter","loader","costcenters","financeCostcenters","code","COSTCENTER_SCHEMA","addCostcenter","updateCostcenter","initialData","financeCostcenter","GET_GLACCOUNTS_QUERY","GET_GLACCOUNT_QUERY","ADD_GLACCOUNT","UPDATE_GLACCOUNT","ARCHIVE_GLACCOUNT","archiveGlaccount","glaccounts","financeGlaccounts","GLACCOUNT_SCHEMA","addGlaccount","updateGlaccount","financeGlaccount","get_list_query_variables","queryVars","getItem","undefined","getDefaultValue","defaultValue","event","key","updateLocalStorageAndRefetch","FinanceInvoicesStatus","GET_INVOICES_QUERY","GET_INVOICE_QUERY","UPDATE_INVOICE","CANCEL_AND_CREATE_CREDIT_INVOICE","DELETE_FINANCE_INVOICE","CREATE_INVOICE_ITEM","UPDATE_INVOICE_ITEM","DELETE_INVOICE_ITEM","DELETE_INVOICE_PAYMENT","confirm_delete","msgConfirm","msgDescription","msgSuccess","deleteFunction","functionVariables","confirmAlert","customUI","onClose","location","pathname","fetchPolicy","deleteFinanceInvoice","invoices","financeInvoices","invoiceNumber","account","relationCompany","relationContactName","Small","summary","trunc","dateSent","dateDue","totalDisplay","balanceDisplay","refreshTokenAndOpenExportLinkInNewTab","doTokenRefresh","exportUrl","url","open","addInvoiceItem","financeInvoice","deleteInvoiceItem","productName","touched","handleChange","setFieldTouched","inputData","e","quantity","price","financeTaxRate","financeTaxRates","percentage","rateType","Object","keys","updateInvoiceItem","setTouched","refetchInvoice","updateItem","updating","setUpdating","onDragEnd","useCallback","draggableId","destination","source","reason","droppableId","index","updateLineNumber","node_id","line_number","lineNumber","setTimeout","statusColor","provided","snapshot","ref","innerRef","droppableProps","idx","draggableProps","dragHandleProps","placeholder","tinymceBasicConf","resize","menubar","plugins","statusbar","toolbar","setFieldValue","tinymceScriptSrc","textareaName","initialValue","terms","getContent","submitForm","note","updateInvoice","initialTab","subtotalDisplay","taxDisplay","paidDisplay","dateToLocalISO","slice","getDate","dateToLocalISOTime","getHours","getMinutes","TimeStringToJSDateOBJ","time_string","date_obj","time_split","setHours","setMinutes","financePaymentMethod","financePaymentMethods","initialPaymentMethod","organization","address","phone","email","registration","taxRegistration","creditInvoiceNumber","relationCompanyRegistration","relationCompanyTaxRegistration","relationAddress","relationPostcode","relationCity","relationCountry","deleteInvoicePayment","amountDisplay","paymentAddUrl","payments","onlinePaymentId","cancelAndCreateCreditInvoice","return_url","export_url","payment_add_url","toggle","triggerContent","creditInvoiceId","cancelAndCreateCreditFinanceInvoice","ml","GET_INVOICE_GROUPS_QUERY","GET_INVOICE_GROUP_QUERY","UPDATE_INVOICE_GROUP","ADD_INVOICE_GROUP","ARCHIVE_INVOICE_GROUP","archiveInvoiceGroup","invoiceGroups","financeInvoiceGroups","nextId","dueAfterDays","prefixYear","autoResetPrefixYear","displayPublic","INVOICE_GROUP_SCHEMA","moreThan","edit","Label","checked","addInvoiceGroup","updateInvoiceGroup","financeInvoiceGroup","INVOICE_GROUP_DEFAULT_SCHEMA","GET_INVOICE_GROUPS_DEFAULTS_QUERY","UPDATE_INVOICE_GROUP_DEFAULT","fetch_default_type_name","itemType","invoice_group_defaults","financeInvoiceGroupDefaults","mutation","updateDefault","GET_INVOICE_PAYMENT_QUERY","UPDATE_FINANCE_INVOICE_PAYMENT","form_type","invoiceId","invoice_id","queryLoading","queryError","invoice_number","padding","fullName","amount","role","ADD_FINANCE_INVOICE_PAYMENT","onCompleted","addInvoicePayment","mutationData","mutationLoading","mutationError","balance","invoiceQueryLoading","invoiceQueryError","invoiceData","paymentQueryLoading","paymentQueryError","paymentData","updateInvoicePayment","financeInvoicePayment","initialDate","FinanceOrderStatus","GET_ORDERS_QUERY","DELETE_FINANCE_ORDER","deleteOrder","orderNumber","orders","financeOrders","createdAt","batchType","toUpperCase","showAdd","batch_type","GET_PAYMENT_BATCHES_QUERY","GET_PAYMENT_BATCH_QUERY","GET_INPUT_VALUES","ADD_PAYMENT_BATCH","UPDATE_PAYMENT_BATCH","DELETE_PAYMENT_BATCH","msgEmptyList","deletePaymentBatch","financePaymentBatches","executionDate","financePaymentBatchCategory","FinancePaymentBatchCategory","categoryType","unstyled","get_add_options_collection","get_add_options_payment","batchId","setDisabled","updateFinancePaymentBatch","sentToBankColor","approvedColor","awaitingApprovalColor","rejectedColor","onClickStatusButton","newStatus","subTitle","List","create","category","financePaymentBatchCategories","includeZeroAmounts","appSettings","dateTimeFormat","timeFormatMoment","financePaymentBatch","countItems","exports","accountHolder","accountNumber","accountBic","currency","PAYMENT_BATCH_INVOICES_SCHEMA","PAYMENT_BATCH_CATEGORY_SCHEMA","PAYMENT_BATCH_EDIT_SCHEMA","batchCategoryType","category_type","addFinancePaymentBatch","yupSchema","createFinancePaymentBatch","inputValues","showArchive","GET_PAYMENT_BATCH_CATEGORIES_QUERY","GET_PAYMENT_BATCH_CATEGORY_QUERY","ARCHIVE_PAYMENT_BATCH_CATEGORY","archivePaymentBatchCategory","payment_batch_categories","ADD_PAYMENT_BATCH_CATEGORY","addFinancePaymentBatchCategory","UPDATE_PAYMENT_BATCH_CATEGORY","paymentBatchCategoryId","updateFinancePaymentBatchCategory","GET_FINANCE_ORDER_QUERY","UPDATE_ORDER","updateOrder","order","financeOrder","priceDisplay","message","GET_PAYMENT_METHODS_QUERY","GET_PAYMENT_METHOD_QUERY","ADD_PAYMENT_METHOD","UPDATE_PAYMENT_METHOD","ARCHIVE_PAYMENT_METHOD","archivePaymentMethod","paymentMethods","systemMethod","PAYMENT_METHOD_SCHEMA","addPaymentMethod","updatePaymentMethod","GET_TAXRATES_QUERY","GET_TAXRATE_QUERY","ADD_TAXRATE","UPDATE_TAXRATE","ARCHIVE_TAXRATE","archiveTaxrate","taxrates","TAX_RATE_SCHEMA","typeError","addFinanceTaxrate","classpasses_active","subscriptions_active","updateTaxrate","InsightHome","GET_CLASSPASSES_SOLD_QUERY","GET_CLASSPASSES_ACTIVE_QUERY","refetchData","previousYear","parseInt","currentYear","nextYear","export_url_active","export_url_sold","loadingSold","errorSold","dataSold","refetchSold","loadingActive","errorActive","dataActive","refetchActive","data_sold_label","chart_data_sold","insightAccountClasspassesSold","data_active_label","chart_data_active","insightAccountClasspassesActive","style","height","x","columns","colors","sold","names","axis","y","bottom","show","left","right","tooltip","point","RootComponent","GET_SUBSCRIPTIONS_SOLD_QUERY","GET_SUBSCRIPTIONS_ACTIVE_QUERY","classtypes_active","discoveries_active","documents_active","languages_active","locations_active","levels_active","holidays_active","organization_active","organization_branding_active","announcements_active","insightAccountSubscriptionsSold","insightAccountSubscriptionsActive","OrganizationHome","ORGANIZATION_SCHEMA","customFileInputLabelStyle","whiteSpace","display","overflow","UPDATE_ORGANIZATION","updateOrganization","Image","src","urlLogoLogin","Details","urlLogoInvoice","urlLogoEmail","urlLogoShopHeader","urlLogoSelfCheckin","formTitle","inputFileName","fileInputLabel","handleFileInputChange","updateField","update_field","fileName","setFileName","useRef","files","inputVars","reader","FileReader","onload","reader_event","b64_enc_file","logoLoginFileName","logoLogin","logoInvoiceFileName","logoInvoice","logoEmailFileName","logoEmail","logoShopHeaderFileName","logoShopHeader","logoSelfCheckinFileName","logoSelfCheckin","file","current","readAsDataURL","showEditBack","GET_ANNOUNCEMENTS_QUERY","GET_ANNOUNCEMENT_QUERY","ADD_ANNOUNCEMENT","UPDATE_ANNOUNCEMENT","DELETE_ANNOUNCEMENT","deleteAnnouncement","displayShop","displayBackend","dateStart","dateEnd","priority","ANNOUNCEMENT_SCHEMA","addAnnouncement","announcementId","updateAnnouncement","organizationAnnouncement","GET_APPOINTMENTS_QUERY","GET_APPOINTMENT_QUERY","GET_INPUT_VALUES_QUERY","ARCHIVE_APPOINTMENT","organizationAppointmentCategory","category_id","appointments","organizationAppointments","organizationAppointmentPrices","archiveAppointmentCategorysRoom","APPOINTMENT_SCHEMA","ADD_APPOINTMENT","addAppointment","UPDATE_APPOINTMENT","OrganizationAppointmentEdit","organizationAppointment","initialGlaccount","initialCostcenter","updateLocation","GET_APPOINTMENT_CATEGORIES_QUERY","GET_APPOINTMENT_CATEGORY_QUERY","ARCHIVE_APPOINTMENT_CATEGORY","appointment_categories","organizationAppointmentCategories","archiveLocation","APPOINTMENT_CATEGORY_SCHEMA","ADD_ORGANIZATION_APPOINTMENT_CATEGORY","addAppointmentCategory","UPDATE_APPOINTMENT_CATEGORY","OrganizationAppointmentCategoryEdit","updateAppointmentCategory","GET_APPOINTMENT_PRICES_QUERY","GET_APPOINTMENT_PRICE_QUERY","DELETE_APPOINTMENT_PRICE","appointment_id","prices","deleteAppointmentPrice","APPOINTMENT_PRICE_SCHEMA","accountTeacherProfiles","ADD_APPOINTMENT_PRICE","OrganizationAppointmentPriceForm","UPDATE_APPOINTMENT_PRICE","OrganizationAppointmentPriceEdit","organizationAppointmentPrice","initialAccount","initialFinanceTaxRate","GET_CLASSPASSES_QUERY","GET_CLASSPASS_QUERY","CREATE_CLASSPASS","UPDATE_CLASSPASS","ARCHIVE_CLASSPASS","archiveClasspass","classpasses","organizationClasspasses","organizationMemberships","trialPass","unlimited","classes","validity","validityUnitDisplay","CLASSPASS_SCHEMA","validityUnit","quickStatsAmount","OrganizationClasspassForm","trialTimes","unlimied","createClasspass","organizationMembership","updateClasspass","initialMembership","organizationClasspass","GET_CLASSPASS_GROUPS_QUERY","GET_CLASSPASS_GROUP_QUERY","GET_CLASSPASS_GROUP_PASSES_QUERY","ADD_CLASSPASS_GROUP","UPDATE_CLASSPASS_GROUP","DELETE_CLASSPASS_GROUP","ADD_CARD_TO_GROUP","DELETE_CARD_FROM_GROUP","deleteClasspassGroup","classpass_groups","organizationClasspassGroups","substring","CLASSPASS_GROUP_SCHEMA","addClasspassGroup","hasExtraSpace","updateClasspassGroup","organizationClasspassGroup","groupId","addCardToGroup","deleteCardFromGroup","passes","group","group_passes","pass_id","GET_CLASSTYPES_QUERY","GET_CLASSTYPE_QUERY","ADD_CLASSTYPE","UPDATE_CLASSTYPE","UPDATE_CLASSTYPE_IMAGE","ARCHIVE_CLASSTYPE","archiveClasstype","classtypes","organizationClasstypes","urlImageThumbnailSmall","CLASSTYPE_SCHEMA","urlWebsite","addClasstype","image","updateClasstype","organizationClasstype","classtypeId","uploadImage","b64_enc_image","GET_DISCOVERIES_QUERY","GET_DISCOVERY_QUERY","ADD_DISCOVERY","UPDATE_DISCOVERY","ARCHIVE_DISCOVERY","archiveDiscovery","discoveries","organizationDiscoveries","DISCOVERY_SCHEMA","addDiscovery","updateDiscovery","organizationDiscovery","organizationId","organization_id","docTypes","docType","FormatISODateStr","ISODateStr","mediaUrl","headerLinks","sidebarButton","GET_DOCUMENTS_QUERY","GET_DOCUMENT_QUERY","ADD_DOCUMENT","UPDATE_DOCUMENT","DELETE_DOCUMENT","deleteOrganizationDocument","confirmDelete","version","documentType","getSubtitle","document_type","back","organizationDocuments","ISODateString","urlDocument","addDocument","documentFileName","updateDocument","organizationDocument","GET_HOLIDAYS_QUERY","GET_HOLIDAY_QUERY","ADD_HOLIDAY","UPDATE_HOLIDAY","DELETE_HOLIDAY","GET_HOLIDAY_LOCATIONS_QUERY","ADD_LOCATION_TO_HOLIDAY","DELETE_LOCATION_FROM_HOLIDAY","deleteHoliday","holidays","organizationHolidays","organizationLocations","HOLIDAY_SCHEMA","addHoliday","updateHoliday","organizationHoliday","holidayId","addLocationToHoliday","deleteLocationFromHoliday","locations","holiday","holiday_locations","locationId","organizationLocation","GET_LANGUAGES_QUERY","GET_LANGUAGE_QUERY","ADD_LANGUAGE","UPDATE_LANGUAGE","ARCHIVE_LANGUAGE","archiveLanguage","languages","organizationLanguages","LANGUAGE_SCHEMA","addLanguage","updateLanguage","organizationLanguage","GET_LOCATIONS_QUERY","GET_LOCATION_QUERY","ADD_LOCATION","UPDATE_LOCATION","ARCHIVE_LOCATION","LOCATION_SCHEMA","addLocation","GET_LOCATION_ROOMS_QUERY","GET_LOCATION_ROOM_QUERY","ADD_LOCATION_ROOM","UPDATE_LOCATION_ROOM","ARCHIVE_LOCATION_ROOM","location_id","organizationLocationId","archiveLocationRoom","locationRooms","organizationLocationRooms","organizationLocationsRooms","LOCATION_ROOM_SCHEMA","addLocationRoom","updateLocationRoom","organizationLocationRoom","GET_LEVELS_QUERY","GET_LEVEL_QUERY","ADD_LEVEL","UPDATE_LEVEL","ARCHIVE_LEVEL","archiveLevel","levels","organizationLevels","LEVEL_SCHEMA","addLevel","updateLevel","organizationLevel","Validity","GET_MEMBERSHIPS_QUERY","GET_MEMBERSHIP_QUERY","ARCHIVE_MEMBERSHIP","memberships","archiveMembership","MEMBERSHIP_SCHEMA","CREATE_MEMBERSHIP","OrganizationMembershipAdd","createMembership","termsAndConditions","UPDATE_MEMBERSHIP","OrganizationMembershipEdit","GET_SUBSCRIPTIONS_QUERY","GET_SUBSCRIPTION_QUERY","CREATE_SUBSCRIPTION","UPDATE_SUBSCRIPTION","ARCHIVE_SUBSCRIPTION","archiveSubscription","subscriptions","organizationSubscriptions","subscriptionUnitDisplay","priceTodayDisplay","SUBSCRIPTION_SCHEMA","sortOrder","minDuration","subscriptionUnit","creditValidity","createSubscription","reconciliationClasses","updateSubscription","organizationSubscription","GET_SUBSCRIPTION_GROUPS_QUERY","GET_SUBSCRIPTION_GROUP_QUERY","GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY","ADD_SUBSCRIPTION_GROUP","UPDATE_SUBSCRIPTION_GROUP","DELETE_SUBSCRIPTION_GROUP","deleteSubscriptionGroup","subscription_groups","organizationSubscriptionGroups","SUBSCRIPTION_GROUP_SCHEMA","addSubscriptionGroup","updateSubscriptionGroup","organizationSubscriptionGroup","group_subscriptions","GET_SUBSCRIPTION_PRICES_QUERY","GET_SUBSCRIPTION_PRICE_QUERY","DELETE_SUBSCRIPTION_PRICE","accounts_active","b2b_active","subscription_id","subscription_prices","organizationSubscriptionPrices","subscription","organizationSubscriptionsPrices","deleteSubscriptionPrice","SUBSCRIPTION_PRICE_SCHEMA","ADD_SUBSCRIPTION_PRICE","addSubscription","UPDATE_SUBSCRIPTION_PRICE","OrganizationSubscriptionPriceEdit","organizationSubscriptionPrice","updateSubscriptionPrice","RelationsHome","InputSearch","inputValue","createRef","initialValueKey","state","submitValue","doneTypingInterval","typingTimer","focus","clearTimeout","setState","onKeyUp","onInputKeyUp","bind","onInputChange","onClear","isActive","customer","teacher","employee","search","searchName","Select","GET_ACCOUNTS_QUERY","GET_ACCOUNT_QUERY","ADD_ACCOUNT","UPDATE_ACCOUNT","UPDATE_ACCOUNT_ACTIVE","DELETE_ACCOUNT","updateAccountActive","deleteAccount","accounts","reverse","classpass","classesRemainingDisplay","first_name","last_name","ACCOUNT_SCHEMA","profile_active","classes_active","tickets_active","teacher_profile_active","bank_account_active","notes_active","finance_payment_batch_category_item_active","accepted_documents_active","addAccount","accountId","createAccount","avatarSize","inline","placement","mobile","ISO_COUNTRY_CODES","dateOfBirth","emergency","postcode","city","country","Code","Name","keyNumber","account_id","headerTitle","updateAccount","gender","input_vars","GET_ACCOUNT_ACCEPTED_DOCUMENTS_QUERY","acceptedDocuments","accountAcceptedDocuments","dateAccepted","clientIp","GET_ACCOUNT_BANK_ACCOUNTS_QUERY","UPDATE_ACCOUNT_BANK_ACCOUNT","GET_ACCOUNT_BANK_ACCOUNT_MANDATE_QUERY","CREATE_ACCOUNT_BANK_ACCOUNT_MANDATE","UPDATE_ACCOUNT_BANK_ACCOUNT_MANDATE","DELETE_ACCOUNT_BANK_ACCOUNT_MANDATE","bankAccountId","holder","number","bic","updateAccountBankAccount","deleteAccountBankAccountMandate","accountBankAccount","accountBankAccounts","mandates","reference","signatureDate","bank_account_id","createAccountBankAccountMandate","refrence","mandateId","updateAccountBankAccountMandate","mandate","accountBankAccountMandate","GET_ACCOUNT_CLASSES_QUERY","GET_SCHEDULE_CLASS_ATTENDANCE_QUERY","DELETE_SCHEDULE_CLASS_ATTENDANCE","UPDATE_SCHEDULE_ITEM_ATTENDANCE","timeFormat","deleteScheduleItemAttendance","scheduleItem","timeStart","scheduleItemAttendances","bookingStatus","GET_ACCOUNT_CLASSPASSES_QUERY","GET_ACCOUNT_CLASSPASS_QUERY","CREATE_ACCOUNT_CLASSPASS","UPDATE_ACCOUNT_CLASSPASS","DELETE_ACCOUNT_CLASSPASS","deleteAccountClasspass","accountClasspasses","nullable","createAccountClasspass","classpassId","accountClasspass","initialdata","GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY","GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_QUERY","CREATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM","UPDATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM","DELETE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM","deleteAccountFinancePaymentBatchCategoryItem","AccountFinancePaymentBatchCategoryItemsBase","batchCategoryItems","accountFinancePaymentBatchCategoryItems","replace","ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA","addAccountFinancePaymentBatchCategoryItem","accountFinancePaymentBatchCategoryItemId","updateAccountFinancePaymentBatchCategoryItem","accountFinancePaymentBatchCategoryItem","GET_ACCOUNT_INVOICES_QUERY","CREATE_ACCOUNT_INVOICE","pageHeader","FinanceInvoiceStatus","registrationFeePaid","queryData","createInvoice","createFinanceInvoice","GET_ACCOUNT_MEMBERSHIPS_QUERY","GET_ACCOUNT_MEMBERSHIP_QUERY","DELETE_ACCOUNT_MEMBERSHIP","accountMemberships","deleteAccountMembership","frequencyType","CREATE_ACCOUNT_MEMBERSHIP","AccountMembershipAdd","UPDATE_ACCOUNT_MEMBERSHIP","AccountMembershipEdit","accountMembership","updateMembership","LoadMoreOnBottomScroll","GET_ACCOUNT_NOTES_QUERY","GET_ACCOUNT_NOTE_QUERY","CREATE_ACCOUNT_NOTE","UPDATE_ACCOUNT_NOTE","DELETE_ACCOUNT_NOTE","noteType","deleteAccountNote","notes","accountNotes","injury","noteBy","addNote","noteId","updateNote","accountNote","GET_ACCOUNT_ORDERS_QUERY","AccountOrderDelete","GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY","GET_ACCOUNT","UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET","updateAccountScheduleEventTicket","accountScheduleEventTickets","scheduleEventTicket","scheduleEvent","cancelled","invoiceItems","infoMailSent","GET_ACCOUNT_SUBSCRIPTIONS_QUERY","GET_ACCOUNT_SUBSCRIPTION_QUERY","CREATE_ACCOUNT_SUBSCRIPTION","UPDATE_ACCOUNT_SUBSCRIPTION","DELETE_ACCOUNT_SUBSCRIPTION","deleteAccountSubscription","accountSubscriptions","creditTotal","createAccountSubscription","subscriptionId","accountSubscription","tabs","class_tabs_position","active_tab","activeTab","linkTo","GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY","GET_ACCOUNT_SUBSCRIPTION_ALT_PRICE_QUERY","DELETE_ACCOUNT_SUBSCRIPTION_ALT_PRICE","AccountSubscriptionEditListBaseBase","onLoaMore","deleteAccountSubscriptionAltPrice","query_vars","buttonAdd","accountSubscriptionAltPrices","ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA","ADD_ACCOUNT_SUBSCRIPTION_ALT_PRICE","addSubscriptionAltPrice","UPDATE_ACCOUNT_SUBSCRIPTION_ALT_PRICE","updateSubscriptionAltPrice","accountSubscriptionAltPrice","GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY","GET_ACCOUNT_SUBSCRIPTION_BLOCK_QUERY","DELETE_ACCOUNT_SUBSCRIPTION_BLOCK","deleteAccountSubscriptionBlock","accountSubscriptionBlocks","ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA","ADD_ACCOUNT_SUBSCRIPTION_BLOCK","addSubscriptionBlock","UPDATE_ACCOUNT_SUBSCRIPTION_BLOCK","updateSubscriptionBlock","accountSubscriptionBlock","mutationType","GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY","GET_ACCOUNT_SUBSCRIPTION_CREDIT_QUERY","DELETE_ACCOUNT_SUBSCRIPTION_CREDIT","deleteAccountSubscriptionCredit","accountSubscriptionCredits","mutationAmount","ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA","ADD_ACCOUNT_SUBSCRIPTION_CREDIT","addSubscriptionCredit","UPDATE_ACCOUNT_SUBSCRIPTION_CREDIT","updateSubscriptionCredit","accountSubscriptionCredit","GET_FINANCE_INVOICE_ITEM_QUERY","deleteAccountSubscriptionInvoice","financeInvoiceItems","ACCOUNT_SUBSCRIPTION_INVOICE_SCHEMA","addFinanceInvoice","financeInvoiceId","GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY","GET_ACCOUNT_SUBSCRIPTION_PAUSE_QUERY","DELETE_ACCOUNT_SUBSCRIPTION_PAUSE","deleteAccountSubscriptionPause","accountSubscriptionPauses","ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA","ADD_ACCOUNT_SUBSCRIPTION_PAUSE","addSubscriptionPause","UPDATE_ACCOUNT_SUBSCRIPTION_PAUSE","updateSubscriptionPause","accountSubscriptionPause","GET_ACCOUNT_TEACHER_PROFILE_QUERY","UPDATE_ACCOUNT_TEACHER_PROFILE","ACCOUNT_TEACHER_PROFILE_SCHEMA","events","education","bio","urlBio","updateAccountTeacherProfile","showArchived","GET_BUSINESSES_QUERY","GET_BUSINESS_QUERY","UPDATE_BUSINESS","confirm_archive","archiveFunction","confirm_unarchive","DELETE_BUSINESS","updateBusiness","deleteBusiness","businesses","show_archive","ADD_BUSINESS","addBusiness","b2b","businessId","createBusiness","business","emailContact","emailBilling","phone2","events_active","business_id","ScheduleHome","orderBy","dateFrom","dateUntil","DELETE_SCHEDULE_APPOINTMENT","edit_active","teachers_available_active","scheduleAppointments","nextWeekFrom","nextWeekUntil","subtract","currentWeekFrom","currentWeekUntil","scheduleItemId","timeEnd","ItemDivider","badge","badgeType","deleteScheduleAppointment","SCHEDULE_APPOINTMENTS_FILTER_LEVEL","clearable","showTimeSelect","showTimeSelectOnly","timeIntervals","frequencyInterval","CREATE_APPOINTMENT","ScheduleAppointmentAdd","appointmentId","AppointmentEditBase","menu_activeLink","default_card","sidebar_button","initialTimeStart","subtitle","locationRoom","starttime","appointment_edit_all_subtitle","card_title","ScheduleAppointmentEditAll","initialTimeEnd","updateScheduleAppointment","attendanceCountType","represent_teacher","textColor","represent_class_status","get_class_messages","holidayName","selectClass","GET_CLASSES_QUERY","GET_CLASS_QUERY","CREATE_CLASS","DELETE_SCHEDULE_CLASS","deleteScheduleClass","scheduleClasses","account2","role2","CLASS_SCHEMA","spaces","walkInSpaces","infoMailContent","teachers_active","prices_active","createScheduleClass","UPDATE_CLASS","classId","defaultCard","menuActiveLink","class_id","class_edit_all_subtitle","classtype","represent_teacher_role","updateScheduleClass","initialLevelID","shopBook","attend","SCHEDULE_CLASS_CLASSPASS_SCHEMA","GET_SCHEDULE_CLASS_CLASSPASSES_QUERY","UPDATE_SCHEDULE_CLASS_CLASSPASS","updateScheduleClassClasspass","scheduleItemOrganizationClasspassGroups","enroll","SCHEDULE_CLASS_SUBSCRIPTION_SCHEMA","GET_SCHEDULE_CLASS_SUBSCRIPTIONS_QUERY","UPDATE_SCHEDULE_CLASS_SUBSCRIPTION","updateScheduleClassSubscription","scheduleItemOrganizationSubscriptionGroups","GET_SCHEDULE_CLASS_TEACHERS_QUERY","GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY","ADD_SCHEDULE_CLASS_TEACHER","UPDATE_SCHEDULE_CLASS_TEACHER","DELETE_SCHEDULE_CLASS_TEACHER","deleteScheduleItemTeacher","ButtonAdd","scheduleItemTeachers","SCHEDULE_CLASS_TEACHER_SCHEMA","addScheduleClassTeacher","updateScheduleClassTeacher","scheduleItemTeacher","initialAccount2","get_accounts_query_variables","get_attendance_list_query_variables","schedule_item_id","class_subtitle","class_date","attendance_active","setAttendanceStatus","updateAttendance","showSearch","setShowSearch","queryAttendanceLoading","queryAttendanceError","queryAttendanceData","useLazyQuery","getAccounts","fetchMoreAccounts","queryAccountsLoading","queryAccountsError","queryAccountsData","checkedInIds","includes","GET_BOOKING_OPTIONS_QUERY","CREATE_SCHEDULE_ITEM_ATTENDANCE","getUrlFromReturnTo","returnTo","createInput","classCheckin","onClickCheckin","allowed","blocked","paused","priceDropin","locationID","priceTrial","listType","scheduleClassBookingOptions","scheduleItemPrices","organizationClasspassDropin","organizationClasspassTrial","GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY","DELETE_SCHEDULE_CLASS_WEEKLY_OTC","UPDATE_SCHEDULE_CLASS_WEEKLY_OTC","SCHEDULE_CLASS_EDIT_OTC_SCHEMA","notRequired","deleteClassOTC","showDelete","updateScheduleClassWeeklyOTC","scheduleClassWeeklyOtcs","graphQLErrors","GET_SCHEDULE_ITEM_PRICES_QUERY","GET_SINGLE_SCHEDULE_ITEM_PRICE_QUERY","ADD_SCHEDULE_ITEM_PRICE","UPDATE_SCHEDULE_ITEM_PRICE","DELETE_SCHEDULE_ITEM_PRICE","deleteClassPrice","addScheduleClassPrice","editScheduleClassPrice","initialOrganizationClasspassDropin","initialOrganizationClasspassTrial","scheduleItemPrice","sidebarContent","displayMenu","GET_SCHEDULE_EVENTS_QUERY","GET_SCHEDULE_EVENT_QUERY","ARCHIVE_SCHEDULE_EVENT","archiveScheduleEvent","cardHeaderContent","scheduleEvents","SCHEDULE_EVENT_EDIT_SCHEMA","autoSendInfoMail","teacher2","tagline","preview","CREATE_SCHEDULE_EVENT","general_active","earlybirds_active","activities_active","media_active","createScheduleEvent","autoSentInfoMail","eventId","pageHeaderOptions","event_id","ScheduleEventEditMenu","cardSubTitle","UPDATE_SCHEDULE_EVENT","updateScheduleEvent","initialOrgranizationlevel","initialTeacher","initialTeacher2","GET_SCHEDULE_EVENT_ACTIVITIES_QUERY","GET_SCHEDULE_EVENT_ACTIVITY_QUERY","DELETE_SCHEDULE_EVENT_ACTIVITY","deleteScheduleEventActivity","scheduleItems","countAttendance","SCHEDULE_EVENT_ACTIVITY_SCHEMA","ADD_SCHEDULE_EVENT_ACTIVITY","addScheduleEventTicket","scheduleItemType","loadingActivity","errorActivity","dataActivity","cardActivitySubtitle","UPDATE_SCHEDULE_EVENT_ACTIVITY","updateScheduleEventTicket","GET_SCHEDULE_ITEM_ATTENDANCES_QUERY","schedule_item","GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY","GET_SCHEDULE_EVENT_EARLYBIRD_QUERY","ADD_SCHEDULE_EVENT_EARLYBIRD","UPDATE_SCHEDULE_EVENT_EARLYBIRD","DELETE_SCHEDULE_EVENT_EARLYBIRD","deleteScheduleEventEarlybird","scheduleEventEarlybirds","discountPercentage","SCHEDULE_EVENT_EARLYBIRDS_SCHEMA","addScheduleEventEarlybird","ScheduleEventEarlybirdForm","scheduleEventEarlybirdId","updateScheduleEventEarlybird","scheduleEventEarlybird","GET_SCHEDULE_EVENT_MEDIAS_QUERY","GET_SCHEDULE_EVENT_MEDIA_QUERY","DELETE_SCHEDULE_EVENT_MEDIA","deleteScheduleEventMedia","scheduleEventMedias","SCHEDULE_EVENT_MEDIA_SCHEMA","ADD_SCHEDULE_EVENT_MEDIA","addScheduleEventMedia","imageFileName","scheduleEventMediaId","loadingMedia","errorMedia","dataMedia","scheduleEventMedia","UPDATE_SCHEDULE_EVENT_MEDIA","updateScheduleEventMedia","updateMedia","GET_SCHEDULE_EVENT_TICKETS_QUERY","GET_SCHEDULE_EVENT_TICKET_QUERY","DELETE_SCHEDULE_EVENT_TICKET","deleteScheduleEventTicket","scheduleEventTickets","isSoldOut","deletable","SCHEDULE_EVENT_TICKET_SCHEMA","ADD_SCHEDULE_EVENT_TICKET","ticketId","searchResults","loadingTicket","errorTicket","dataTicket","ticket","cardTicketSubtitle","UPDATE_SCHEDULE_EVENT_TICKET","initialFinanceGlaccount","initialFinanceCostcenter","GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEMS_QUERY","SCHEDULE_EVENT_TICKET_SCHEDLE_ITEM_SCHEMA","included","UPDATE_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM","updateScheduleEventTicketScheduleItem","scheduleEventTicketActivities","scheduleEventTicketScheduleItems","fullEvent","ADD_ACCOUNT_SCHEDULE_EVENT_TICKET","addAccountScheduleEventTicket","accountIdsWithTickets","SELFCHECKIN_CHECKIN_SEARCH","refetchAttendance","GET_ORGANIZATION_LOCATIONS_QUERY","action","GET_LOCATION_CLASSES_QUERY","today","GET_SYSTEM_SETTINGS_QUERY","UPDATE_SYSTEM_SETTING","headerSubTitle","alertBanner","setting","loadingVersion","errorVersion","dataVersion","loadingPatch","errorPatch","dataPatch","patch","systemSettings","finance_bank_accounts_iban","updateSettings","iban","settings","i","finance_currency","finance_currency_symbol","sidebarActive","loadingCurrency","errorCurrency","dataCurrency","loadingSymbol","errorSymbol","dataSymbol","symbol","DATETIME_SCHEMA","system_hostname","queryVariables","hostname","mollie_api_key","mollieApiKey","H4","GET_SYSTEM_MAIL_TEMPLATES_QUERY","GET_SYSTEM_MAIL_TEMPLATE_QUERY","UPDATE_SYSTEM_MAIL_TEMPLATE","mailTemplates","systemMailTemplates","help","subject","comments","SettingsMailTemplateEditBase","templateInfo","template_name","helpTexts","suffix","getTemplateInfo","systemMailTemplate","GET_SHOP_FEATURES_QUERY","UPDATE_SHOP_FEATURES","SHOP_FEATURES_SCHEMA","shopFeatures","systemFeatureShop","workflow_class_book_days_advance","workflow_class_cancel_until","loadingDaysAdvance","errorDaysAdvance","dataDaysAdvance","loadingCancelUntil","errorCancelUntil","dataCancelUntil","refreshTokenExp","accountTitle","accountLink","headerImageUrl","getHeaderImageUrl","GET_USER_PROFILE","buttonText","DisplayClassInfo","classDate","classData","scheduleClass","GET_ACCOUNT_CLASS_QUERY","accountName","attendanceId","attendance_id","loadingAttendance","errorAttendance","dataAttendance","loadingUser","errorUser","dataUser","updateScheduleItemAttendance","scheduleItemAttendance","cancellationPossible","GET_SCHEDULE_CLASS_QUERY","complete","QUERY_ACCOUNT_CLASSPASSES","skip","ShopAccountClasspassesBase","eventTickets","CREATE_PAYMENT_LINK","onlinePaymentsAvailable","cardTitleLoadingError","btnPayNow","initialBtnText","btn_text","setBtnText","createPaymentLink","invoice","setAttribute","paymentLink","createFinanceInvoicePaymentLink","financeInvoicePaymentLink","alert","QUERY_ACCOUNT_INVOICES","responsive","muted","QUERY_ACCOUNT_ORDERS","get_order_card_status_color","cancelFunction","cancelOrder","UPDATE_PROFILE","updateProfile","QUERY_ACCOUNT_SUBSCRIPTIONS","ShopAccountSubscriptionsBase","checkoutProgress","color_order","color_payment","color_complete","addOn","alreadyBooked","classType","class_info","bookingOpenOn","CREATE_ORDER","buttonBook","capitalize","word","lower","toLowerCase","charAt","isBefore","prevWeekFrom","prevWeekUntil","xs","sm","media","urlImageThumbnailLarge","dateString","IconGroup","IconItem","pt","eventTicket","showButton","ticketScheduleItems","Category","isEarlybirdPrice","Price","totalPriceDisplay","AttributeList","AttributeItem","Button","tickets","eventID","cs_django_links","EXPORT_TERMS_AND_CONDITIONS","EXPORT_PRIVACY_POLICY","scheduleEventTicketId","createOrder","createOrderInput","orderId","createFinanceOrder","ShopCheckoutForm","GET_SHOP_ANNOUNCEMENTS_QUERY","GET_ORDER_QUERY","orderItems","attendanceDate","msgNextStep","buttonNext","createFinanceOrderPaymentLink","financeOrderPaymentLink","subHeader","contentText","paymentText","total","schduleItemAttendances","btnLink","GET_ORGANIZATION_CLASSPASSES_QUERY","loadingClass","errorClass","dataClass","GET_ORGANIZATION_SUBSCRIPTIONS_QUERY","ShopSubscriptionPricingCard","PASSWORD_CHANGE_SCHEMA","passwordCurrent","passwordNew","passwordNew2","oneOf","urlLogo","updatePassword","CSStandaloneFormPage","vars","messages","etFieldValue","esetFieldTouched","preventDefault","password","doTokenAuth","username","next","tokenAuth","setActive","deleteCookie","deleteRefreshCookie","info","offsetMd","Error404","SetCurrentUrlAsNext","PrivateRoute","rest","authTokenExpired","path","ContinueAsYouAre","render","LoginRequired","SessionExpired","tokenExp","reload","loadingAppSettings","errorAppSettings","dataAppSettings","loadingOrganization","errorOrganization","dataOrganization","exact","HomeHome","AutomationHome","AutomationAccountSubscriptionCredits","AutomationAccountSubscriptionCreditAdd","AutomationAccountSubscriptionInvoices","AutomationAccountSubscriptionInvoicesAdd","AutomationAccountSubscriptionMollieCollections","AutomationAccountSubscriptionMollieCollectionAdd","FinanceCostCenters","FinanceCostCenterAdd","FinanceCostCenterEdit","FinanceInvoices","FinanceInvoiceEdit","FinanceInvoiceGroups","FinanceInvoiceGroupAdd","FinanceInvoiceGroupEdit","FinanceInvoiceGroupDefaults","FinanceInvoicePaymentAdd","FinanceInvoicePaymentEdit","FinanceGLAccounts","FinanceGLAccountAdd","FinanceGLAccountEdit","FinanceOrders","FinanceOrderEdit","FinancePaymentBatches","FinancePaymentBatchAddWhat","FinancePaymentBatchView","FinancePaymentCollectionBatchAdd","FinancePaymentCollectionBatchEdit","FinancePaymentBatchCategories","FinancePaymentBatchCategoryAdd","FinancePaymentBatchCategoryEdit","FinancePaymentMethods","FinancePaymentMethodAdd","FinancePaymentMethodEdit","FinanceTaxRates","FinanceTaxRatesAdd","FinanceTaxRatesEdit","OrganizationEdit","OrganizationBranding","OrganizationBrandingEdit","OrganizationDocuments","OrganizationListDocuments","OrganizationDocumentAdd","OrganizationDocumentEdit","OrganizationAnnouncements","OrganizationAnnouncementAdd","OrganizationAnnouncementEdit","OrganizationAppointmentCategories","OrganizationAppointmentCategoryAdd","OrganizationAppointments","OrganizationAppointmentAdd","OrganizationAppointmentPrices","OrganizationAppointmentPriceAdd","OrganizationClasspasses","OrganizationClasspassAdd","OrganizationClasspassEdit","OrganizationClasspassesGroups","OrganizationClasspassesGroupAdd","OrganizationClasspassesGroupEdit","OrganizationClasspassesGroupEditPasses","OrganizationClasstypes","OrganizationClasstypeAdd","OrganizationClasstypeEdit","OrganizationClasstypeEditImage","OrganizationDiscoveries","OrganizationDiscoveryAdd","OrganizationDiscoveryEdit","OrganizationHolidays","OrganizationHolidayAdd","OrganizationHolidayEdit","OrganizationHolidayEditLocations","OrganizationLanguages","OrganizationLanguageAdd","OrganizationLanguageEdit","OrganizationLevels","OrganizationLevelAdd","OrganizationLevelEdit","OrganizationLocations","OrganizationLocationAdd","OrganizationLocationEdit","OrganizationLocationRooms","OrganizationLocationRoomAdd","OrganizationLocationRoomEdit","OrganizationMemberships","OrganizationSubscriptions","OrganizationSubscriptionAdd","OrganizationSubscriptionEdit","OrganizationSubscriptionsGroups","OrganizationSubscriptionsGroupAdd","OrganizationSubscriptionsGroupEdit","OrganizationSubscriptionsGroupEditSubscriptions","OrganizationSubscriptionsPrices","OrganizationSubscriptionPriceAdd","RelationsAccounts","RelationsAccountAdd","RelationsAccountProfile","AccountAcceptedDocuments","RelationsAccountBankAccount","RelationsAccountBankAccountMandateAdd","RelationsAccountBankAccountMandateEdit","RelationsAccountClasses","AccountClasspasses","AccountClasspassAdd","AccountClasspassEdit","AccountFinancePaymentBatchCategoryItems","AccountFinancePaymentBatchCategoryItemAdd","AccountFinancePaymentBatchCategoryItemEdit","AccountInvoices","AccountInvoiceAdd","AccountMemberships","AccountNotes","AccountNoteAdd","AccountNoteEdit","AccountOrders","AccountScheduleEventTickets","AccountSubscriptions","AccountSubscriptionAdd","AccountSubscriptionEdit","AccountSubscriptionEditAltPrices","AccountSubscriptionEditAltPriceAdd","AccountSubscriptionEditAltPriceEdit","AccountSubscriptionEditBlocks","AccountSubscriptionEditBlockAdd","AccountSubscriptionEditBlockEdit","AccountSubscriptionEditCredits","AccountSubscriptionEditCreditAdd","AccountSubscriptionEditCreditEdit","AccountSubscriptionEditInvoices","AccountSubscriptionEditInvoiceAdd","AccountSubscriptionEditPauses","AccountSubscriptionEditPauseAdd","AccountSubscriptionEditPauseEdit","RelationsAccountTeacherProfile","RelationsB2B","RelationsB2BAdd","RelationsB2BEdit","ScheduleAppointments","ScheduleClasses","ScheduleClassAdd","ScheduleClassEditAll","ScheduleClassClasspasses","ScheduleClassPrices","ScheduleClassPriceAdd","ScheduleClassPriceEdit","ScheduleClassSubscriptions","ScheduleClassTeachers","ScheduleClassTeacherAdd","ScheduleClassTeacherEdit","ScheduleClassAttendance","ScheduleClassBook","ScheduleClassEdit","ScheduleEvents","ScheduleEventAdd","ScheduleEventEdit","ScheduleEventActivities","ScheduleEventActivityAdd","ScheduleEventActivityEdit","ScheduleEventActivityAttendance","ScheduleEventEarlybirds","ScheduleEventEarlybirdAdd","ScheduleEventEarlybirdEdit","ScheduleEventMedia","ScheduleEventMediaAdd","ScheduleEventMediaEdit","ScheduleEventTickets","ScheduleEventTicketAdd","ScheduleEventTicketEdit","ScheduleEventTicketEditActivities","ScheduleEventTicketEditCustomers","InsightClasspasses","InsightSubscriptions","SelfCheckinCheckin","SelfCheckinBookingOptions","SelfCheckinLocations","SelfCheckinLocationClasses","ShopHome","ShopAccountHome","ShopAccountClassCancel","ShopAccountClassInfo","ShopClasses","ShopAccountClasspasses","ShopAccountEventTickets","ShopAccountInvoicePayment","ShopAccountInvoicePaymentStatus","ShopAccountInvoices","ShopAccountOrders","ShopAccountProfile","ShopAccountSubscriptions","ShopCheckoutPayment","ShopCheckoutComplete","ShopClassesSchedule","ShopClassBook","ShopClassBooked","ShopClasspasses","ShopClasspass","ShopContact","ShopEvents","ShopEvent","ShopEventTicket","ShopSubscriptions","ShopSubscription","SettingsHome","SettingsAbout","SettingsFinanceBankAccounts","SettingsFinanceCurrency","SettingsGeneralDateTime","SettingsGeneralSystem","SettingsIntegrationMollie","SettingsMailTemplates","SettingsMailTemplateEdit","SettingsShopFeatures","SettingsWorkflowClassBooking","UserChangePassword","UserLogin","UserLoginRequired","UserLogout","UserSessionExpired","UserWelcome","String","prototype","n","substr","errorLink","onError","networkError","operation","forward","response","forEach","refreshTokenExpired","Observable","observer","client","mutate","subscriber","subscribe","httpLink","createHttpLink","uri","credentials","authLink","setContext","request","a","headers","Authorization","ApolloClient","from","cache","InMemoryCache","App","ApolloProvider","Boolean","ReactDOM","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.7ccea6c7.chunk.js","sourcesContent":["import i18n from \"i18next\"\nimport { initReactI18next } from \"react-i18next\"\n// import Backend from 'i18next-xhr-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\n// the translations\n// (tip move them in a JSON file and import them)\n// const resources = {\n//   en: {\n//     translations: {\n//         school: \"School\"\n//     }\n//   }\n// }\n\nimport en_US_common from \"./i18n/en_US/common\"\nconst resources = {\n    en_US: {\n        common: en_US_common\n    },\n}\n\nconsole.log(resources)\n\n\ni18n\n  // load translation using xhr -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  //   .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    resources,\n    lng: \"en_US\",\n    fallbackLng: \"en_US\",\n    ns: [\"common\"],\n    defaultNS: \"common\",\n    debug: true,\n\n    // keySeparator: false, // we do not use keys in form messages.welcome\n    keySeparator: '.', // we use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    }\n  })\n\n  export default i18n","import { gql } from \"@apollo/client\"\n\n\nexport const TOKEN_AUTH = gql`\n  mutation TokenAuth($username: String!, $password: String!) {\n    tokenAuth(username: $username, password: $password) {\n      token\n      payload\n      refreshToken\n      refreshExpiresIn\n    }\n  } \n`\n\n\nexport const TOKEN_VERIFY = gql`\n  mutation VerifyToken($token: String!) {\n    verifyToken(token: $token) {\n      payload\n    }\n  }\n`\n\n\nexport const TOKEN_REFRESH = gql`\n  mutation RefreshToken($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      token\n      payload\n      refreshToken\n      refreshExpiresIn\n    }\n  }\n`\n\n\nexport const TOKEN_REVOKE = gql`\n  mutation RevokeToken($refreshToken: String!) {\n    revokeToken(refreshToken: $refreshToken) {\n      revoked\n    }\n  }\n`\n\n\nexport const TOKEN_COOKIE_DELETE = gql`\n  mutation {\n    deleteTokenCookie {\n      deleted\n    }\n  }\n`\n\n\nexport const TOKEN_REFRESH_COOKIE_DELETE = gql`\n  mutation {\n    deleteRefreshTokenCookie {\n      deleted\n    }\n  }\n`\n\n\nexport const UPDATE_ACCOUNT_PASSWORD = gql`\n  mutation UpdateAccountPassword($input: UpdateAccountPasswordInput!) {\n    updateAccountPassword(input: $input) {\n      ok\n    }\n  }\n`","const cs_local_storage_keys = {\n    AUTH_TOKEN: 'costasiella:authToken',\n    AUTH_TOKEN_EXP: 'costasiella:authTokenExp',\n    AUTH_TOKEN_ORIGIAT: 'costasiella:authTokenorigIat',\n    AUTH_REFRESH_TOKEN: 'costasiella:authRefreshToken', \n    AUTH_REFRESH_TOKEN_EXP: 'costasiella:refreshTokenExp',\n    AUTH_LOGIN_NEXT: 'costasiella:authLoginNext',\n    FINANCE_INVOICES_FILTER_STATUS: 'costasiella:financeInvoicesFilterStatus',\n    FINANCE_INVOICES_EDIT_RETURN: 'costasiella:financeInvoiceEditReturn',\n    FINANCE_ORDERS_FILTER_STATUS: 'costasiella:financeOrdersFilterStatus',\n    FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE: 'costasiella:financePaymentBatchCategoriesShowArchive',\n    INSIGHT_CLASSPASSES_YEAR: 'costasiella:insightClasspassesYear',\n    INSIGHT_SUBSCRIPTIONS_YEAR: 'costasiella:insightSubscriptionsYear',\n    ORGANIZATION_CLASSTYPES_ARCHIVED: 'costasiella:organizationClasstypesArchived',\n    RELATIONS_ACCOUNTS_FILTER_TYPE: 'costasiella:relationsAccountsFilterType',\n    RELATIONS_ACCOUNTS_SEARCH: 'costasiella:relationsAccountsSearch',\n    RELATIONS_ACCOUNTS_IS_ACTIVE: 'costasiella:relationsAccountsIsActive',\n    RELATIONS_ACCOUNT_NOTES_NOTE_TYPE: 'costasiella:relationsAccountNotesNoteType',\n    RELATIONS_BUSINESSES_SHOW_ARCHIVE: 'costasiella:relationsBusinessesShowArchive',\n    RELATIONS_BUSINESSES_SEARCH: 'costasiella:relationsBusinessesSeach',\n    SCHEDULE_APPOINTMENTS_DATE_FROM: 'costasiella:scheduleAppointmentsDateFrom',\n    SCHEDULE_APPOINTMENTS_DATE_UNTIL: 'costasiella:scheduleAppointmentsDateUntil',\n    SCHEDULE_APPOINTMENTS_ORDER_BY: 'costasiella:scheduleAppointmentsOrderBy',\n    SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE: 'costasiella:scheduleAppointmentsFilterClasstype',\n    SCHEDULE_APPOINTMENTS_FILTER_LOCATION: 'costasiella:scheduleAppointmentsFilterLocation',\n    SCHEDULE_CLASSES_DATE_FROM: 'costasiella:scheduleClassesDateFrom',\n    SCHEDULE_CLASSES_DATE_UNTIL: 'costasiella:scheduleClassesDateUntil',\n    SCHEDULE_CLASSES_ORDER_BY: 'costasiella:scheduleClassesOrderBy',\n    SCHEDULE_CLASSES_FILTER_CLASSTYPE: 'costasiella:scheduleClassesFilterClasstype',\n    SCHEDULE_CLASSES_FILTER_LEVEL: 'costasiella:scheduleClassesFilterLevel',\n    SCHEDULE_CLASSES_FILTER_LOCATION: 'costasiella:scheduleClassesFilterLocation',\n    SCHEDULE_CLASSES_CLASS_ATTENDANCE_SEARCH: 'costasiella:scheduleClassesClassAttendanceSearch',\n    SCHEDULE_EVENTS_ARCHIVED: 'costasiella:scheduleEventsArchived',\n    SCHEDULE_EVENTS_TICKETS_CUSTOMERS_SEARCH: 'costasiella:scheduleEventsTicketsCustomersSearch',\n    SHOP_CLASSES_DATE_FROM: 'costasiella:shopClassesDateFrom',\n    SHOP_CLASSES_DATE_UNTIL: 'costasiella:shopClassesDateUntil',\n    SHOP_CLASSES_ORDER_BY: 'costasiella:shopClassesOrderBy',\n    SHOP_CLASSES_FILTER_CLASSTYPE: 'costasiella:shopClassesFilterClasstype',\n    SHOP_CLASSES_FILTER_LEVEL: 'costasiella:shopClassesFilterLevel',\n    SHOP_CLASSES_FILTER_LOCATION: 'costasiella:shopClassesFilterLocation',\n}\n\nexport default cs_local_storage_keys\n","import CSLS from \"./cs_local_storage\"\n\n\nexport const CSAuth = {\n    login(tokenData) {\n        localStorage.setItem(CSLS.AUTH_TOKEN, tokenData.token)\n        localStorage.setItem(CSLS.AUTH_TOKEN_EXP, tokenData.payload.exp)\n        localStorage.setItem(CSLS.AUTH_TOKEN_ORIGIAT, tokenData.payload.origIat)\n        localStorage.setItem(CSLS.AUTH_REFRESH_TOKEN, tokenData.refreshToken)\n        localStorage.setItem(CSLS.AUTH_REFRESH_TOKEN_EXP, tokenData.refreshExpiresIn)\n        localStorage.removeItem(CSLS.AUTH_LOGIN_NEXT)\n    },\n    updateTokenInfo(refreshTokenData) {\n        console.log(\"Token payload:\")\n        console.log(refreshTokenData)\n        localStorage.setItem(CSLS.AUTH_TOKEN, refreshTokenData.token)\n        localStorage.setItem(CSLS.AUTH_TOKEN_EXP, refreshTokenData.payload.exp)\n        localStorage.setItem(CSLS.AUTH_TOKEN_ORIGIAT, refreshTokenData.payload.origIat)\n        localStorage.setItem(CSLS.AUTH_REFRESH_TOKEN, refreshTokenData.refreshToken)\n        localStorage.setItem(CSLS.AUTH_REFRESH_TOKEN_EXP, refreshTokenData.refreshExpiresIn)\n    },\n    cleanup() {\n        // Like logging out, but don't unset next url. \n        // This function is used when a refreshToken has expired\n        localStorage.removeItem(CSLS.AUTH_TOKEN)\n        localStorage.removeItem(CSLS.AUTH_TOKEN_EXP)\n        localStorage.removeItem(CSLS.AUTH_TOKEN_ORIGIAT)\n        localStorage.removeItem(CSLS.AUTH_REFRESH_TOKEN)\n        localStorage.removeItem(CSLS.AUTH_REFRESH_TOKEN_EXP)\n    },\n    logout(expired=false) {\n        if (!expired) {\n            // Manual logout, remove everything\n            this.cleanup()\n            localStorage.removeItem(CSLS.AUTH_LOGIN_NEXT)\n        }        \n    }\n}\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_APP_SETTINGS_QUERY = gql`\n  query AppSettings {\n    appSettings(id: \"QXBwU2V0dGluZ3NOb2RlOjE=\") {\n      dateFormat\n      timeFormat\n      timeFormatMoment\n      dateTimeFormatMoment\n      onlinePaymentsAvailable\n    }\n  }\n`\n\n\nexport const UPDATE_APP_SETTINGS = gql`\n  mutation UpdateAppSettings($input: UpdateAppSettingsInput!) {\n    updateAppSettings(input: $input) {\n      appSettings {\n        id\n      }\n    }\n  }\n`","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ORGANIZATION_QUERY = gql`\n  query Organization($id: ID!) {\n    organization(id:$id) {\n      id\n      name\n      address\n      phone\n      email\n      registration\n      taxRegistration\n      urlLogoLogin\n      urlLogoInvoice\n      urlLogoEmail\n      urlLogoShopHeader\n      urlLogoSelfCheckin\n    }\n  }\n`","import React from 'react'\n\nconst AppSettingsContext = React.createContext({})\n\nexport const AppSettingsProvider = AppSettingsContext.Provider\nexport const AppSettingsConsumer = AppSettingsContext.Consumer\n\nexport default AppSettingsContext","import React from 'react'\n\nconst OrganizationContext = React.createContext({})\n\nexport const OrganizationProvider = OrganizationContext.Provider\nexport const OrganizationConsumer = OrganizationContext.Consumer\n\nexport default OrganizationContext","import { gql } from \"@apollo/client\"\n\nconst GET_USER = gql`\n  query User($before: String, $after: String)  {\n    user {\n      id\n      isActive\n      email\n      firstName\n      lastName\n      employee\n      teacher\n      groups {\n        edges {\n          node {\n            id\n            name\n            permissions(first: 1000, before: $before, after: $after) {\n              pageInfo {\n                hasNextPage\n                hasPreviousPage\n                startCursor\n                endCursor                \n              }\n              edges {\n                node {\n                  id\n                  name\n                  codename\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default GET_USER","export function get_all_permissions(user) {\n    const permissions = {}\n    const groups = user.groups\n    if (groups.edges) {\n      for (let edge_index in groups.edges) {\n        let group_edge = groups.edges[edge_index]\n        if (group_edge.node) {\n          let group_node = group_edge.node \n          if (group_node.permissions.edges) {\n            for (let permission_index in group_node.permissions.edges) {\n              let permission_edge = group_node.permissions.edges[permission_index] \n              if (permission_edge.node) {\n                  let permission_node = permission_edge.node\n                  let codename = permission_node.codename\n                  let codename_split = codename.split('_')\n                  // If code name is not in permissions, create a new set\n                  if (!(codename_split[1] in permissions)) {\n                  permissions[codename_split[1]] = new Set()\n                  }\n                  // Add permission name to set\n                  permissions[codename_split[1]].add(codename_split[0])\n              }\n            }\n          }\n        }\n      }\n    }\n    \n    return permissions\n}\n\n\nexport const has_permission = (permissions, permission, resource) => {\n  let you_shall_not_pass = true\n\n  if (resource in permissions) {\n    if (permissions[resource].has(permission)) {\n      console.log('found permission')\n      you_shall_not_pass = false\n    }\n  }\n  \n  return !you_shall_not_pass\n}\n","import React from 'react'\nimport { useQuery } from \"@apollo/client\"\n\nimport GET_USER from '../queries/system/get_user'\nimport { get_all_permissions } from \"../tools/user_tools\"\n\n\nfunction check_permission(permissions, permission, resource) {\n  let you_shall_not_pass = true\n\n  if (resource in permissions) {\n    if (permissions[resource].has(permission)) {\n      you_shall_not_pass = false\n    }\n  }\n  \n  return !you_shall_not_pass\n}\n\nfunction HasPermissionWrapper({permission, resource, children}) {\n  const {loading, error, data} = useQuery(GET_USER)\n  \n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error loading user... :(</p>\n\n  const permissions = get_all_permissions(data.user)\n\n  if (check_permission(permissions, permission, resource)) {\n    return children\n  } else {\n    return ''\n  }\n}\n  \nexport default HasPermissionWrapper","import { gql } from \"@apollo/client\"\n\nexport const GET_BACKEND_ANNOUNCEMENTS_QUERY = gql`\n  query OrganizationAnnouncements($after: String, $before: String) {\n    organizationAnnouncements(first: 100, before: $before, after: $after, displayPublic: true, displayBackend: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          displayPublic\n          displayBackend\n          title\n          content\n          dateStart\n          dateEnd\n          priority\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport * as React from \"react\"\nimport { withTranslation } from 'react-i18next'\nimport { NavLink, withRouter } from \"react-router-dom\"\nimport { useQuery } from \"@apollo/client\"\nimport { ToastContainer, Slide } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport { Link } from 'react-router-dom'\n\nimport GET_USER from \"../queries/system/get_user\"\nimport { get_all_permissions, has_permission } from \"../tools/user_tools\"\n\nimport {\n  Site,\n  Nav,\n  Grid,\n  Button,\n  // Page,\n  RouterContextProvider,\n} from \"tabler-react\";\n\nimport type { NotificationProps } from \"tabler-react\";\n\ntype Props = {|\n  +children: React.Node,\n|};\n\ntype State = {|\n  notificationsObjects: Array<NotificationProps>,\n|};\n\ntype subNavItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +LinkComponent?: React.ElementType,\n|};\n\ntype navItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +active?: boolean,\n  +LinkComponent?: React.ElementType,\n  +subItems?: Array<subNavItem>,\n  +useExact?: boolean,\n|};\n\n\nconst getNavBarItems = (t, user) => {\n  let items: Array<navItem> = []\n  let permissions = get_all_permissions(user)\n\n  items.push({\n    value: t(\"home.title\"),\n    to: \"/backend\",\n    icon: \"home\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  })\n\n  // Relations\n  if (\n    (has_permission(permissions, 'view', 'account'))\n  ){\n    items.push({\n      value: t(\"relations.title\"),\n      to: \"/relations\",\n      icon: \"users\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Schedule\n  if (\n    (has_permission(permissions, 'view', 'scheduleclass')) ||\n    (has_permission(permissions, 'view', 'scheduleevent'))\n  ){\n    items.push({\n      value: t(\"schedule.title\"),\n      to: \"/schedule\",\n      icon: \"calendar\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Finance\n  if (\n    (has_permission(permissions, 'view', 'financecostcenter')) ||\n    (has_permission(permissions, 'view', 'financeglaccount')) ||\n    (has_permission(permissions, 'view', 'financetaxrate')) \n  ){\n    items.push({\n      value: t(\"finance.title\"),\n      to: \"/finance\",\n      icon: \"dollar-sign\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Organization\n  if (\n    (has_permission(permissions, 'view', 'organizationclasspass')) || \n    (has_permission(permissions, 'view', 'organizationclasstype')) ||\n    (has_permission(permissions, 'view', 'organizationdiscovery')) ||\n    (has_permission(permissions, 'view', 'organizationlocation')) ||\n    (has_permission(permissions, 'view', 'organizationmembership')) ||  \n    (has_permission(permissions, 'view', 'organization')) \n   ){\n   items.push({\n      value: t(\"organization.title\"),\n      to: \"/organization\",\n      icon: \"feather\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Insight\n  if (\n    (has_permission(permissions, 'view', 'insight'))\n   ){\n    items.push({\n      value: t(\"insight.title\"),\n      to: \"/insight\",\n      icon: \"bar-chart-2\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Automation\n  if (\n    (has_permission(permissions, 'view', 'automation'))\n   ){\n    items.push({\n      value: t(\"automation.title\"),\n      to: \"/automation\",\n      icon: \"loader\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // let goToSubItems = []\n  // if (has_permission(permissions, 'view', 'selfcheckin')) {\n  //   goToSubItems.push(\n  //     { value: t(\"selfcheckin.home.title\"), to: \"/selfcheckin\", LinkComponent: withRouter(NavLink) }\n  //   )\n  // }\n  // goToSubItems.push(\n  //   { value: t(\"shop.title\"), to: \"/shop\", LinkComponent: withRouter(NavLink) }\n  // )\n\n  // // Go to\n  // if (\n  //   (has_permission(permissions, 'view', 'selfcheckin'))\n  //  ){\n  //   items.push({\n  //     value: t(\"goto.title\"),\n  //     icon: \"link\",\n  //     subItems: goToSubItems,\n  //   })\n  // }\n\n\n  return items\n\n}\n\nconst now = new Date()\n\nfunction SiteWrapper({t, match, history, children}) {\n  const { error, loading, data, fetchMore } = useQuery(GET_USER)\n\n  if (loading) return <p>{t('general.loading_with_dots')}</p>;\n  if (error) return <p>{t('system.user.error_loading')}</p>; \n\n  console.log(data)\n\n  return (\n    <Site.Wrapper\n      headerProps={{\n          href: \"/\",\n          alt: \"Costasiella\",\n          imageURL: \"/d/static/logos/stock/logo_stock_backend.png\", // Set logo url here\n          navItems: (\n            <Nav.Item type=\"div\" className=\"d-none d-md-flex\">\n              <Link to=\"/settings\">\n                <Button\n                  className=\"mr-2\"\n                  icon=\"settings\"\n                  outline\n                  size=\"sm\"\n                  color=\"primary\"\n                >\n                  {t('general.settings')}\n                </Button>\n              </Link>\n              <Link to=\"/user/welcome\">\n                <Button\n                  className=\"mr-2\"\n                  icon=\"link\"\n                  outline\n                  size=\"sm\"\n                  color=\"primary\"\n                >\n                  {t('goto.title')}\n                </Button>\n              </Link>\n            </Nav.Item>\n          ),\n          // notificationsTray: {\n          //   notificationsObjects,\n          //   markAllAsRead: () =>\n          //     this.setState(\n          //       () => ({\n          //         notificationsObjects: this.state.notificationsObjects.map(\n          //           v => ({ ...v, unread: false })\n          //         ),\n          //       }),\n          //       () =>\n          //         setTimeout(\n          //           () =>\n          //             this.setState({\n          //               notificationsObjects: this.state.notificationsObjects.map(\n          //                 v => ({ ...v, unread: true })\n          //               ),\n          //             }),\n          //           5000\n          //         )\n          //     ),\n          //   unread: unreadCount,\n          // },\n          accountDropdown: {\n          avatarURL: \"#\",\n          name: data.user.firstName + ' ' + data.user.lastName,\n          description: \"\",\n          options: [\n            // { icon: \"user\", value: \"Profile\" },\n            { icon: \"lock\", value: t(\"user.change_password.title\"), to: \"/#/user/password/change/\" },\n            { isDivider: true },\n            { icon: \"user\", value: t(\"shop.account.title\"), to: \"/#/shop/account/\" },\n            { isDivider: true },\n            { icon: \"log-out\", value: t(\"user.logout.title\"), to: \"/#/user/logout/\" },\n          ],\n        },\n        }}\n        // navProps={{ itemsObjects: navBarItems }}\n        navProps={{ itemsObjects: getNavBarItems(t, data.user) }}\n        routerContextComponentType={withRouter(RouterContextProvider)}\n        footerProps={{\n          // links: [\n          //   <a href=\"#\">First Link</a>,\n          //   <a href=\"#\">Second Link</a>,\n          //   <a href=\"#\">Third Link</a>,\n          //   <a href=\"#\">Fourth Link</a>,\n          //   <a href=\"#\">Five Link</a>,\n          //   <a href=\"#\">Sixth Link</a>,\n          //   <a href=\"#\">Seventh Link</a>,\n          //   <a href=\"#\">Eigth Link</a>,\n          // ],\n          // note:\n          //   \"Premium and Open Source dashboard template with responsive and high quality UI. For Free!\",\n          copyright: (\n            <React.Fragment>\n              Copyleft © {now.getFullYear()}.\n              <a\n                href=\"https://www.costasiella.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {\" \"}\n                Edwin van de Ven\n              </a>{\". \"}\n              All rights reserved.\n            </React.Fragment>\n          ),\n          nav: (\n            <React.Fragment>\n              <Grid.Col auto={true}>\n                {/* <List className=\"list-inline list-inline-dots mb-0\">\n                  <List.Item className=\"list-inline-item\">\n                    <a href=\"./docs/index.html\">Documentation</a>\n                  </List.Item>\n                  <List.Item className=\"list-inline-item\">\n                    <a href=\"./faq.html\">FAQ</a>\n                  </List.Item>\n                </List> */}\n              </Grid.Col>\n              <Grid.Col auto={true}>\n                {/* <Button\n                  href=\"https://github.com/tabler/tabler-react\"\n                  size=\"sm\"\n                  outline\n                  color=\"primary\"\n                  RootComponent=\"a\"\n                >\n                  Source code\n                </Button> */}\n              </Grid.Col>\n            </React.Fragment>\n          ),\n        }}\n      >\n        {children}\n        <ToastContainer \n          autoClose={5000} \n          transition={Slide}\n        />\n      </Site.Wrapper>\n  )\n}\n\nexport default withTranslation()(SiteWrapper)\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Container,\n  Page\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\n\n\nfunction HomeHomeBase({ t, match, history, children }) {\n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.announcements.title\")} />\n          {children}\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(HomeHomeBase))","// @flow\n\nimport React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { GET_BACKEND_ANNOUNCEMENTS_QUERY } from \"./queries\"\n\nimport HomeHomeBase from './HomeHomeBase';\n\n\nfunction HomeHome({ t, match }) {\n  const { loading, error, data } = useQuery(GET_BACKEND_ANNOUNCEMENTS_QUERY);\n\n  if (loading) return (\n    <HomeHomeBase>\n      {t(\"general.loading_with_dots\")}\n    </HomeHomeBase>\n  )\n  if (error) return (\n    <HomeHomeBase>\n      {t(\"home.home.announcements.error_loading\")}\n    </HomeHomeBase>\n  )\n\n  console.log(\"%%%%%%%%%%%%%%%%%%%%%\")\n  console.log(data)\n\n  const announcements = data.organizationAnnouncements\n\n  // Empty list\n  if (!announcements.edges.length) return (\n    <HomeHomeBase>\n      {t(\"home.home.announcements_empty_list\")}\n    </HomeHomeBase>\n  )\n\n  // Data\n  return (\n    <HomeHomeBase>\n      <Grid.Row cards deck>\n        {(announcements.edges.length) ? announcements.edges.map(({ node }) => (\n          <Grid.Col md={6}>\n            <Card title={node.title}>\n              <Card.Body>\n                <div dangerouslySetInnerHTML={{ __html:node.content }}></div>\n              </Card.Body>\n            </Card> \n          </Grid.Col>\n        )) : \"\"\n        }\n      </Grid.Row>\n    </HomeHomeBase>\n  )\n}\n\n\n// class HomeHome extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Home home props:\")\n//     console.log(props)\n//   }\n\n\n//   render() {\n//     const t = this.props.t\n//     const match = this.props.match\n//     const history = this.props.history\n//     const id = match.params.id\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//           <Container>\n//             <Page.Header title={t(\"home.title\")} />\n//             <Grid.Row>\n//               <Grid.Col md={9}>\n//               <Card>\n//                 <Card.Header>\n//                   <Card.Title>{t('home.title')}</Card.Title>\n//                 </Card.Header>\n//                 <Card.Body>\n//                     Hello world!\n//                 </Card.Body>\n//               </Card>\n//               </Grid.Col>\n//             </Grid.Row>\n//           </Container>\n//         </div>\n//     </SiteWrapper>\n//     )}\n//   }\n\n\nexport default withTranslation()(withRouter(HomeHome))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\n\nfunction SettingsHomeItemButton({ t, link, linkTitle=null }) {\n  return (\n    <Link to={link} >\n      <Button \n        outline\n        block\n        color=\"primary\"\n      >\n        {linkTitle ? linkTitle: t(\"automation.home.link_edit\")} <Icon name=\"chevron-right\" />\n      </Button>\n    </Link>\n  )\n}\n\nexport default withTranslation()(withRouter(SettingsHomeItemButton))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Container,\n  Grid,\n  Icon,\n  Page,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport AutomationHomeItemButton from \"./AutomationHomeItemButton\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n\nfunction AutomationHome({ t, match, params }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('automation.title')} />\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"automation.account.subscriptions.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"automation.account.subscriptions.invoices.title\")}</h5>\n                  {t(\"automation.account.subscriptions.invoices.explanation\")}\n                  <br /><br />\n                  <AutomationHomeItemButton link=\"/automation/account/subscriptions/invoices\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"automation.account.subscriptions.credits.title\")}</h5>\n                  {t(\"automation.account.subscriptions.credits.explanation\")}\n                  <br /><br />\n                  <AutomationHomeItemButton link=\"/automation/account/subscriptions/credits\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"automation.account.subscriptions.mollie_collection.title\")}</h5>\n                  {t(\"automation.account.subscriptions.mollie_collection.explanation\")}\n                  <br /><br />\n                  <AutomationHomeItemButton link=\"/automation/account/subscriptions/mollie_collections\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationHome))","import React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n    Button,\n    Card,\n  } from \"tabler-react\"\n\n\nclass ContentCard extends Component {\n    componentDidMount() {\n      window.addEventListener(\"scroll\", this.handleOnScroll);\n    }\n  \n    componentWillUnmount() {\n      window.removeEventListener(\"scroll\", this.handleOnScroll);\n    }\n\n    handleOnScroll = () => {\n      // http://stackoverflow.com/questions/9439725/javascript-how-to-detect-if-browser-window-is-scrolled-to-bottom\n      var scrollTop =\n        (document.documentElement && document.documentElement.scrollTop) ||\n        document.body.scrollTop;\n      var scrollHeight =\n        (document.documentElement && document.documentElement.scrollHeight) ||\n        document.body.scrollHeight;\n      var clientHeight =\n        document.documentElement.clientHeight || window.innerHeight;\n      var scrolledToBottom = Math.ceil(scrollTop + clientHeight) >= scrollHeight;\n      if (scrolledToBottom) {\n        const pageInfo = this.props.pageInfo\n        if (pageInfo) {\n          if (pageInfo.hasNextPage) {\n            this.props.onLoadMore()\n          }\n        }\n      }\n    }\n\n    render() {\n      const t = this.props.t\n      const cardTitle = this.props.cardTitle\n      const headerContent = this.props.headerContent\n      const onLoadMore = this.props.onLoadMore \n      const pageInfo = this.props.pageInfo\n      const children = this.props.children\n      const cardTabs = this.props.cardTabs\n      const hasCardBody = this.props.hasCardBody \n\n\n      return(\n        <Card>\n          <Card.Header>\n            <Card.Title>{cardTitle}</Card.Title>\n            {headerContent}\n          </Card.Header>\n          {cardTabs}\n          {(hasCardBody) ? \n            <Card.Body>{children}</Card.Body> :\n            children\n          }\n          <Card.Footer>\n            {(!pageInfo) ? '':\n              (pageInfo.hasNextPage) ? \n                <Button \n                  link\n                  onClick={onLoadMore} \n                  >\n                  {t('general.load_more')}\n                </Button>\n               : t('general.loaded_all')\n            }\n          </Card.Footer>\n        </Card>\n      )\n    }\n}\n\nContentCard.defaultProps = {\n  onLoadMore: f=>f,\n  hasCardBody: true\n}\n  \nexport default withTranslation()(ContentCard)\n","import { gql } from \"@apollo/client\"\n\nexport const GET_TASK_RESULT_QUERY = gql`\nquery TaskResults($before: String, $after: String, $taskName:String) {\n  djangoCeleryResultTaskResults(first: 100, before: $before, after: $after, taskName: $taskName) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        taskId\n        taskName\n        taskArgs\n        taskKwargs\n        status\n        contentType\n        contentEncoding\n        result\n        dateDone\n        traceback\n        meta\n      }\n    }\n  }\n}\n`\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Button\n} from \"tabler-react\"\n\nconst ButtonBack = ({ t, returnUrl }) => (\n  <Link to={returnUrl}>\n    <Button\n      color=\"secondary\"\n      icon=\"arrow-left\">\n        {t(\"general.back\")}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(ButtonBack)\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport ButtonBack from \"../ui/ButtonBack\"\n\n\nfunction AutomationBack({ t, returnUrl=\"/automation\" }) { \n  return (\n    <ButtonBack returnUrl={returnUrl} />\n  )\n}\n\nexport default withTranslation()(AutomationBack)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AutomationBack from \"../../../AutomationBack\"\n\nfunction AutomationAccountSubscriptionCreditsBase({t, history, match, children, returnUrl=\"/automation\"}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('automation.title')} >\n            <div className=\"page-options d-flex\">\n              <AutomationBack returnUrl={returnUrl} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditsBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Badge,\n} from \"tabler-react\";\n\n// Status reference\n// https://docs.celeryproject.org/en/stable/userguide/tasks.html\n\nfunction AutomationTaskResultStatus({t, history, match, status}) {\n  switch(status) {\n    case \"PENDING\":\n      return <Badge color=\"secondary\">{t(\"automation.tasks.result_statuses.pending\")}</Badge>\n      break\n    case \"STARTED\":\n      return <Badge color=\"primary\">{t(\"automation.tasks.result_statuses.started\")}</Badge>\n      break\n    case \"SUCCESS\":\n      return <Badge color=\"success\">{t(\"automation.tasks.result_statuses.success\")}</Badge>\n      break\n    case \"FAILURE\":\n      return <Badge color=\"danger\">{t(\"automation.tasks.result_statuses.failure\")}</Badge>\n      break\n    case \"RETRY\":\n      return <Badge color=\"warning\">{t(\"automation.tasks.result_statuses.retry\")}</Badge>\n      break\n    case \"REVOKED\":\n      return <Badge color=\"warning\">{t(\"automation.tasks.result_statuses.revoked\")}</Badge>\n      break\n    default:\n      return \"status unknown\"\n  }\n}\n\nexport default withTranslation()(withRouter(AutomationTaskResultStatus))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport AutomationAccountSubscriptionCreditsBase from './AutomationAccountSubscriptionCreditsBase'\nimport AutomationTaskResultStatus from \"../../../AutomationTaskResultStatus\"\n\n// const ARCHIVE_LEVEL = gql`\n//   mutation ArchiveOrganizationLevel($input: ArchiveOrganizationLevelInput!) {\n//     archiveOrganizationLevel(input: $input) {\n//       organizationLevel {\n//         id\n//         archived\n//       }\n//     }\n//   }\n// `\n\nfunction AutomationAccountSubscriptionCredits({t, history, match}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n\n  const { error, loading, data, fetchMore } = useQuery(GET_TASK_RESULT_QUERY, {\n    variables: {\n      taskName: \"costasiella.tasks.account.subscription.credits.tasks.account_subscription_credits_add_for_month\"\n    }\n  })\n\n  const headerOptions = <Card.Options>\n    <Link to={\"/automation/account/subscriptions/credits/add\"}>\n      <Button color=\"primary\" \n              size=\"sm\"\n      >\n      {t('general.new_task')}\n      </Button>\n    </Link>\n  </Card.Options>\n\n\n  // Loading\n  if (loading) return (\n    <AutomationAccountSubscriptionCreditsBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AutomationAccountSubscriptionCreditsBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AutomationAccountSubscriptionCreditsBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AutomationAccountSubscriptionCreditsBase>\n    )\n  }\n\n  console.log(\"Automation credits data:\")\n  console.log(data)\n  const taskResults = data.djangoCeleryResultTaskResults\n  // const account = data.account\n  // const scheduleItemAttendances = data.scheduleItemAttendances\n  \n\n  return (\n    <AutomationAccountSubscriptionCreditsBase>\n      <ContentCard \n        cardTitle={t('automation.account.subscriptions.credits.title_card')}\n        pageInfo={taskResults.pageInfo}\n        headerContent={headerOptions}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: taskResults.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.djangoCeleryResultTaskResults.edges\n              const pageInfo = fetchMoreResult.djangoCeleryResultTaskResults.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new invoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    djangoCeleryResultTaskResults: {\n                      __typename: previousResult.djangoCeleryResultTaskResults.__typename,\n                      edges: [ ...previousResult.djangoCeleryResultTaskResults.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n              }\n            })\n          }} \n        >\n          { (!taskResults.edges.length) ? \n            // Empty list\n            <p>{t('automation.account.subscriptions.credits.empty_list')}</p>\n            :\n            // Content\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('automation.general.status.title')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.time_completed')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_kwargs')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_result')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {taskResults.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      <AutomationTaskResultStatus status={node.status} />\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateDone).format(dateTimeFormatMoment)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.taskKwargs}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.result}\n                    </Table.Col>\n                    <Table.Col>\n\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          }\n        </ContentCard>\n    </AutomationAccountSubscriptionCreditsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCredits))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AutomationBack from \"../../../AutomationBack\"\n\nfunction AutomationAccountSubscriptionInvoicesBase({t, history, match, children, returnUrl=\"/automation\"}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('automation.title')} >\n            <div className=\"page-options d-flex\">\n              <AutomationBack returnUrl={returnUrl} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionInvoicesBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport AutomationAccountSubscriptionInvoicesBase from './AutomationAccountSubscriptionInvoicesBase'\nimport AutomationTaskResultStatus from \"../../../AutomationTaskResultStatus\"\n\n// const ARCHIVE_LEVEL = gql`h\n//   mutation ArchiveOrganizationLevel($input: ArchiveOrganizationLevelInput!) {\n//     archiveOrganizationLevel(input: $input) {\n//       organizationLevel {\n//         id\n//         archived\n//       }\n//     }\n//   }\n// `\n\nfunction AutomationAccountSubscriptionInvoices({t, history, match}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n\n  const { error, loading, data, fetchMore } = useQuery(GET_TASK_RESULT_QUERY, {\n    variables: {\n      taskName: \"costasiella.tasks.account.subscription.invoices.tasks.account_subscription_invoices_add_for_month\"\n    }\n  })\n\n  const headerOptions = <Card.Options>\n    <Link to={\"/automation/account/subscriptions/invoices/add\"}>\n      <Button color=\"primary\" \n              size=\"sm\"\n      >\n      {t('general.new_task')}\n      </Button>\n    </Link>\n  </Card.Options>\n\n\n  // Loading\n  if (loading) return (\n    <AutomationAccountSubscriptionInvoicesBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AutomationAccountSubscriptionInvoicesBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AutomationAccountSubscriptionInvoicesBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AutomationAccountSubscriptionInvoicesBase>\n    )\n  }\n\n  console.log(\"Automation invoices data:\")\n  console.log(data)\n  const taskResults = data.djangoCeleryResultTaskResults\n  // const account = data.account\n  // const scheduleItemAttendances = data.scheduleItemAttendances\n  \n\n  return (\n    <AutomationAccountSubscriptionInvoicesBase>\n      <ContentCard \n        cardTitle={t('automation.account.subscriptions.invoices.title_card')}\n        pageInfo={taskResults.pageInfo}\n        headerContent={headerOptions}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: taskResults.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.djangoCeleryResultTaskResults.edges\n              const pageInfo = fetchMoreResult.djangoCeleryResultTaskResults.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new invoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    djangoCeleryResultTaskResults: {\n                      __typename: previousResult.djangoCeleryResultTaskResults.__typename,\n                      edges: [ ...previousResult.djangoCeleryResultTaskResults.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n              }\n            })\n          }} \n        >\n          { (!taskResults.edges.length) ? \n            // Empty list\n            <p>{t('automation.account.subscriptions.invoices.empty_list')}</p>\n            :\n            // Content\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('automation.general.status.title')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.time_completed')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_kwargs')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_result')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {taskResults.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      <AutomationTaskResultStatus status={node.status} />\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateDone).format(dateTimeFormatMoment)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.taskKwargs}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.result}\n                    </Table.Col>\n                    <Table.Col>\n\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          }\n        </ContentCard>\n    </AutomationAccountSubscriptionInvoicesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionInvoices))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const AUTOMATION_ACCOUNT_SUBSCRIPTION_INVOICES_SCHEMA = Yup.object().shape({\n  subscriptionYear: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  subscriptionMonth: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  invoiceDate: Yup.string()\n    .required(),\n  })\n","import React, { useContext } from 'react'\nimport DatePicker from \"react-datepicker\"\nimport { withTranslation } from 'react-i18next'\n\nimport AppSettingsContext from \"../context/AppSettingsContext\"\n\n\nfunction CSDatePicker ({t, selected, onChange=f=>f, onBlur=f=>f, className=\"form-control\", isClearable=true, placeholderText=\"\"}) {\n  const appSettings = useContext(AppSettingsContext)\n  const sysDateFormat = appSettings.dateFormat\n  let dateFormat\n\n  switch (sysDateFormat) {\n    case \"MM-DD-YYYY\":\n      dateFormat = \"MM-dd-yyyy\"\n      break\n    case \"DD-MM-YYYY\":\n      dateFormat = \"dd-MM-yyyy\"\n      break\n    default:\n      dateFormat = \"yyyy-MM-dd\"\n  }\n\n\n  return (\n    <DatePicker \n        todayButton={t('general.today')}\n        dateFormat={dateFormat}\n        selected={selected}\n        placeholderText={(placeholderText) ? placeholderText : t('datepicker.placeholder')}\n        isClearable={isClearable}\n        className={className}\n        showMonthDropdown\n        showYearDropdown\n        dropdownMode=\"select\"\n        onChange={(date) => onChange(date)}\n        onBlur={() => onBlur()}\n    />\n  )\n}\n\nexport default withTranslation()(CSDatePicker)","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { v4 } from \"uuid\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid,\n    Icon\n  } from \"tabler-react\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport CSDatePicker from \"../../../../ui/CSDatePicker\"\n\n\nfunction AutomationAccountSubscriptionInvoicesForm({ t, history, isSubmitting, errors, returnUrl}) {\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_year')}>\n              <Field type=\"number\" \n                      name=\"subscriptionYear\" \n                      className={(errors.subscriptionYear) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionYear\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_month')}>\n              <Field type=\"number\" \n                      name=\"subscriptionMonth\" \n                      className={(errors.subscriptionMonth) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionMonth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('automation.account.subscriptions.invoices.invoice_date')}>\n              <Field component=\"select\" \n                    name=\"invoiceDate\" \n                    className={(errors.invoiceDate) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"today\" key={v4()}>{t('automation.account.subscriptions.invoices.today')}</option>\n                <option value=\"first_of_month\" key={v4()}>{t('automation.account.subscriptions.invoices.invoice_date_first_day_month')}</option>                \n              </Field>\n              <ErrorMessage name=\"invoiceDate\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.description')}>\n              <Field type=\"text\" \n                      name=\"description\" \n                      className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n         color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n          >\n          {t('general.new_task')} <Icon name=\"chevron-right\" />\n        </Button>\n        <Link to={returnUrl}>\n          <Button color=\"link\">\n            {t('general.cancel')}\n          </Button>\n        </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n  \nexport default withTranslation()(withRouter(AutomationAccountSubscriptionInvoicesForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport { AUTOMATION_ACCOUNT_SUBSCRIPTION_INVOICES_SCHEMA } from './yupSchema'\nimport AutomationAccountSubscriptionInvoicesForm from './AutomationAccountSubscriptionInvoicesForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n// import SiteWrapper from \"../../SiteWrapper\"\n// import HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport AutomationAccountSubscriptionInvoicesBase from './AutomationAccountSubscriptionInvoicesBase'\n\n\nconst ADD_TASK = gql`\n  mutation CreateAccountSubscriptionInvoicesForMonth($input:CreateAccountSubscriptionInvoicesForMonthInput!) {\n    createAccountSubscriptionInvoicesForMonth(input: $input) {\n      ok\n    }\n  }\n`\n\n\nfunction AutomationAccountSubscriptionCreditAdd({ t, history }) {\n  const [addTask] = useMutation(ADD_TASK)\n  const returnUrl = \"/automation/account/subscriptions/invoices\"\n\n  return (\n    <AutomationAccountSubscriptionInvoicesBase returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('automation.account.subscriptions.invoices.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            subscriptionYear: new Date().getFullYear(), \n            subscriptionMonth: new Date().getMonth() + 1 ,\n            description: '',\n            invoiceDate: 'today'\n          }}\n          validationSchema={AUTOMATION_ACCOUNT_SUBSCRIPTION_INVOICES_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addTask({ variables: {\n                input: {\n                  month: values.subscriptionMonth,\n                  year: values.subscriptionYear,\n                  description: values.description,\n                  invoiceDate: values.invoiceDate\n                }\n              }, refetchQueries: [\n                  {query: GET_TASK_RESULT_QUERY, \n                    variables: {\n                      taskName: \"costasiella.tasks.account.subscription.invoices.tasks.account_subscription_invoices_add_for_month\"\n                  }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('automation.account.subscriptions.invoices.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <AutomationAccountSubscriptionInvoicesForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </AutomationAccountSubscriptionInvoicesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditAdd))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const AUTOMATION_ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA = Yup.object().shape({\n  subscriptionYear: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  subscriptionMonth: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid,\n    Icon\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nfunction AutomationAccountSubscriptionCreditForm({ t, history, isSubmitting, errors, returnUrl}) {\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_year')}>\n              <Field type=\"number\" \n                      name=\"subscriptionYear\" \n                      className={(errors.subscriptionYear) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionYear\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_month')}>\n              <Field type=\"number\" \n                      name=\"subscriptionMonth\" \n                      className={(errors.subscriptionMonth) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionMonth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n         color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n          >\n          {t('general.new_task')} <Icon name=\"chevron-right\" />\n        </Button>\n        <Link to={returnUrl}>\n          <Button color=\"link\">\n            {t('general.cancel')}\n          </Button>\n        </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n  \nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport { AUTOMATION_ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA } from './yupSchema'\nimport AutomationAccountSubscriptionCreditForm from './AutomationAccountSubscriptionCreditForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n// import SiteWrapper from \"../../SiteWrapper\"\n// import HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport AutomationAccountSubscriptionCreditsBase from './AutomationAccountSubscriptionCreditsBase'\n\n\nconst ADD_TASK = gql`\n  mutation CreateAccountSubscriptionCreditForMonth($input:CreateAccountSubscriptionCreditForMonthInput!) {\n    createAccountSubscriptionCreditForMonth(input: $input) {\n      ok\n    }\n  }\n`\n\n\nfunction AutomationAccountSubscriptionCreditAdd({ t, history }) {\n  const [addTask] = useMutation(ADD_TASK)\n  const returnUrl = \"/automation/account/subscriptions/credits\"\n\n  return (\n    <AutomationAccountSubscriptionCreditsBase returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('automation.account.subscriptions.credits.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            subscriptionYear: new Date().getFullYear(), \n            subscriptionMonth: new Date().getMonth() + 1 }}\n          validationSchema={AUTOMATION_ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addTask({ variables: {\n                input: {\n                  month: values.subscriptionMonth,\n                  year: values.subscriptionYear\n                }\n              }, refetchQueries: [\n                  {query: GET_TASK_RESULT_QUERY, \n                    variables: {\n                      taskName: \"costasiella.tasks.account.subscription.credits.tasks.account_subscription_credits_add_for_month\"\n                  }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('automation.account.subscriptions.credits.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <AutomationAccountSubscriptionCreditForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </AutomationAccountSubscriptionCreditsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AutomationBack from \"../../../AutomationBack\"\n\nfunction AutomationAccountSubscriptionMollieCollectionBase({t, history, match, children, returnUrl=\"/automation\"}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('automation.title')} >\n            <div className=\"page-options d-flex\">\n              <AutomationBack returnUrl={returnUrl} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionMollieCollectionBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport AutomationAccountSubscriptionMollieCollectionBase from './AutomationAccountSubscriptionMollieCollectionBase'\nimport AutomationTaskResultStatus from \"../../../AutomationTaskResultStatus\"\n\n\nfunction AutomationAccountSubscriptionMollieCollections({t, history, match}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n\n  const { error, loading, data, fetchMore } = useQuery(GET_TASK_RESULT_QUERY, {\n    variables: {\n      taskName: \"costasiella.tasks.account.subscription.invoices.tasks.account_subscription_invoices_add_for_month_mollie_collection\"\n    }\n  })\n\n  const headerOptions = <Card.Options>\n    <Link to={\"/automation/account/subscriptions/mollie_collections/add\"}>\n      <Button color=\"primary\" \n              size=\"sm\"\n      >\n      {t('general.new_task')}\n      </Button>\n    </Link>\n  </Card.Options>\n\n\n  // Loading\n  if (loading) return (\n    <AutomationAccountSubscriptionMollieCollectionBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AutomationAccountSubscriptionMollieCollectionBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AutomationAccountSubscriptionMollieCollectionBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AutomationAccountSubscriptionMollieCollectionBase>\n    )\n  }\n\n  console.log(\"Automation mollie collection data:\")\n  console.log(data)\n  const taskResults = data.djangoCeleryResultTaskResults\n  // const account = data.account\n  // const scheduleItemAttendances = data.scheduleItemAttendances\n  \n  return (\n    <AutomationAccountSubscriptionMollieCollectionBase>\n      <ContentCard \n        cardTitle={t('automation.account.subscriptions.mollie_collection.title_card')}\n        pageInfo={taskResults.pageInfo}\n        headerContent={headerOptions}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: taskResults.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.djangoCeleryResultTaskResults.edges\n              const pageInfo = fetchMoreResult.djangoCeleryResultTaskResults.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new invoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    djangoCeleryResultTaskResults: {\n                      __typename: previousResult.djangoCeleryResultTaskResults.__typename,\n                      edges: [ ...previousResult.djangoCeleryResultTaskResults.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n              }\n            })\n          }} \n        >\n          {(!taskResults.edges.length) ? \n            // Empty list\n            <p>{t('automation.account.subscriptions.mollie_collection.empty_list')}</p>\n            :\n            // Content\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('automation.general.status.title')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.time_completed')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_kwargs')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_result')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {taskResults.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      <AutomationTaskResultStatus status={node.status} />\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateDone).format(dateTimeFormatMoment)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.taskKwargs}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.result}\n                    </Table.Col>\n                    <Table.Col>\n\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          }\n        </ContentCard>\n    </AutomationAccountSubscriptionMollieCollectionBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionMollieCollections))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const AUTOMATION_ACCOUNT_SUBSCRIPTION_MOLLIE_COLLECTION_SCHEMA = Yup.object().shape({\n  subscriptionYear: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  subscriptionMonth: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid,\n    Icon\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nfunction AutomationAccountSubscriptionMollieCollectionForm({ t, history, isSubmitting, errors, returnUrl}) {\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_year')}>\n              <Field type=\"number\" \n                      name=\"subscriptionYear\" \n                      className={(errors.subscriptionYear) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionYear\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_month')}>\n              <Field type=\"number\" \n                      name=\"subscriptionMonth\" \n                      className={(errors.subscriptionMonth) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionMonth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n         color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n          >\n          {t('general.new_task')} <Icon name=\"chevron-right\" />\n        </Button>\n        <Link to={returnUrl}>\n          <Button color=\"link\">\n            {t('general.cancel')}\n          </Button>\n        </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n  \nexport default withTranslation()(withRouter(AutomationAccountSubscriptionMollieCollectionForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport { AUTOMATION_ACCOUNT_SUBSCRIPTION_MOLLIE_COLLECTION_SCHEMA } from './yupSchema'\nimport AutomationAccountSubscriptionMollieCollectionForm from './AutomationAccountSubscriptionMollieCollectionForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n// import SiteWrapper from \"../../SiteWrapper\"\n// import HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport AutomationAccountSubscriptionCreditsBase from './AutomationAccountSubscriptionMollieCollectionBase'\n\n\nconst ADD_TASK = gql`\n  mutation CreateAccountSubscriptionInvoicesMollieCollectionForMonth(\n    $input:CreateAccountSubscriptionInvoicesMollieCollectionForMonthInput!\n  ) {\n    createAccountSubscriptionInvoicesMollieCollectionForMonth(input: $input) {\n      ok\n    }\n  }\n`\n\n\nfunction AutomationAccountSubscriptionMollieCollectionAdd({ t, history }) {\n  const [addTask] = useMutation(ADD_TASK)\n  const returnUrl = \"/automation/account/subscriptions/mollie_collections\"\n\n  return (\n    <AutomationAccountSubscriptionCreditsBase returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('automation.account.subscriptions.mollie_collection.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            subscriptionYear: new Date().getFullYear(), \n            subscriptionMonth: new Date().getMonth() + 1 }}\n          validationSchema={AUTOMATION_ACCOUNT_SUBSCRIPTION_MOLLIE_COLLECTION_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addTask({ variables: {\n                input: {\n                  month: values.subscriptionMonth,\n                  year: values.subscriptionYear\n                }\n              }, refetchQueries: [\n                  {query: GET_TASK_RESULT_QUERY, \n                    variables: {\n                      taskName: \"costasiella.tasks.account.subscription.mollie_collection.tasks.account_subscription_credits_add_for_month\"\n                  }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('automation.account.subscriptions.mollie_collection.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <AutomationAccountSubscriptionMollieCollectionForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </AutomationAccountSubscriptionCreditsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionMollieCollectionAdd))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\n\nlet invoices_active\nlet orders_active\nlet costcenters_active\nlet glaccounts_active\nlet taxrates_active\nlet payment_methods_active\nlet payment_batch_collections_active\nlet payment_batch_payments_active\nlet payment_batch_categories_active\n\nconst FinanceMenu = ({ t, activeLink }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'invoices') ? invoices_active = true: invoices_active = false}\n        {(activeLink === 'orders') ? orders_active = true: orders_active = false}\n        {(activeLink === 'costcenters') ? costcenters_active = true: costcenters_active = false}\n        {(activeLink === 'glaccounts') ? glaccounts_active = true: glaccounts_active = false}\n        {(activeLink === 'taxrates') ? taxrates_active = true: taxrates_active = false}\n        {(activeLink === 'payment_methods') ? payment_methods_active = true: payment_methods_active = false}\n        {(activeLink === 'payment_batch_collections') ? payment_batch_collections_active = true: payment_batch_collections_active = false}\n        {(activeLink === 'payment_batch_payments') ? payment_batch_payments_active = true: payment_batch_payments_active = false}\n        {(activeLink === 'payment_batch_categories') ? payment_batch_categories_active = true: payment_batch_categories_active = false}\n        \n\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/invoices\"\n            icon=\"file-text\"\n            active={invoices_active}\n            >\n            {t('finance.invoices.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/orders\"\n            icon=\"file-plus\"\n            active={orders_active}\n            >\n            {t('finance.orders.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/glaccounts\"\n            icon=\"book\"\n            active={glaccounts_active}\n            >\n            {t('finance.glaccounts.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/costcenters\"\n            icon=\"compass\"\n            active={costcenters_active}\n            >\n            {t('finance.costcenters.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/taxrates\"\n            icon=\"briefcase\"\n            active={taxrates_active}\n            >\n            {t('finance.taxrates.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/paymentmethods\"\n            icon=\"credit-card\"\n            active={payment_methods_active}\n            >\n            {t('finance.payment_methods.title')}\n        </List.GroupItem>\n        <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatch\">\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to=\"#/finance/paymentbatches/collection\"\n              icon=\"download\"\n              active={payment_batch_collections_active}\n              >\n              {t('finance.payment_batch_collections.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatch\">\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to=\"#/finance/paymentbatches/payment\"\n              icon=\"upload\"\n              active={payment_batch_payments_active}\n              >\n              {t('finance.payment_batch_payments.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatchcategory\">\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to=\"#/finance/paymentbatchcategories\"\n              icon=\"list\"\n              active={payment_batch_categories_active}\n              >\n              {t('finance.payment_batch_categories.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n    </List.Group>\n);\n\nexport default withTranslation()(FinanceMenu)","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nclass FinanceHome extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Finance home props:\")\n    console.log(props)\n  }\n\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"finance.title\")} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n                <Grid.Row>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/invoices'>\n                      <StampCard header={<small>{t('finance.invoices.title')}</small>} footer={t('')} color=\"blue\" icon=\"file-text\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/orders'>\n                      <StampCard header={<small>{t('finance.orders.title')}</small>} footer={t('')} color=\"blue\" icon=\"file-plus\" />\n                      </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/glaccounts'>\n                      <StampCard header={<small>{t('finance.glaccounts.title')}</small>} footer={t('')} color=\"blue\" icon=\"book\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/costcenters'>\n                      <StampCard header={<small>{t('finance.costcenters.title')}</small>} footer={t('')} color=\"blue\" icon=\"compass\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/taxrates'>\n                      <StampCard header={<small>{t('finance.taxrates.title')}</small>} footer={t('')} color=\"blue\" icon=\"briefcase\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/paymentmethods'>\n                      <StampCard header={<small>{t('finance.payment_methods.title')}</small>} footer={t('')} color=\"blue\" icon=\"credit-card\" />\n                    </Link>\n                  </Grid.Col>\n                  <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatch\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to={'/finance/paymentbatches/collection'}>\n                        <StampCard header={<small>{t('finance.payment_batch_collections.title')}</small>} footer={t('')} color=\"blue\" icon=\"download\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                  <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatch\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to={'/finance/paymentbatches/payment'}>\n                        <StampCard header={<small>{t('finance.payment_batch_payments.title')}</small>} footer={t('')} color=\"blue\" icon=\"upload\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                  <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatchcategory\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to={'/finance/paymentbatchcategories'}>\n                        <StampCard header={<small>{t('finance.payment_batch_categories.title')}</small>} footer={t('')} color=\"blue\" icon=\"list\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                </Grid.Row>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <FinanceMenu />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(FinanceHome))","import { gql } from \"@apollo/client\"\n\nexport const GET_COSTCENTERS_QUERY = gql`\n  query FinanceCostCenters($after: String, $before: String, $archived: Boolean) {\n    financeCostcenters(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id,\n          archived,\n          name,\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_COSTCENTER_QUERY = gql`\n  query FinanceCostcenter($id: ID!) {\n    financeCostcenter(id:$id) {\n      id\n      name\n      code\n      archived\n    }\n  }\n`\n\nexport const ADD_COSTCENTER = gql`\nmutation CreateFinanceCostCenter($input:CreateFinanceCostCenterInput!) {\n  createFinanceCostcenter(input: $input) {\n    financeCostcenter{\n      id\n      archived\n      name\n      code\n    }\n  }\n}\n`\n\nexport const UPDATE_COSTCENTER = gql`\nmutation UpdateFinanceCostCenter($input: UpdateFinanceCostCenterInput!) {\n  updateFinanceCostcenter(input: $input) {\n    financeCostcenter {\n      id\n      name\n      code\n    }\n  }\n}\n`\n\nexport const ARCHIVE_COSTCENTER = gql`\nmutation ArchiveFinanceCostCenter($input: ArchiveFinanceCostCenterInput!) {\n  archiveFinanceCostcenter(input: $input) {\n    financeCostcenter {\n      id\n      archived\n    }\n  }\n}\n`","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinanceCostCentersBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to={\"/finance/costcenters\"}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financeglaccount\">\n                  <Link to={\"/finance/costcenters/add\"}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.costcenters.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <FinanceMenu activeLink='costcenters'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceCostCentersBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\n\nimport { GET_COSTCENTERS_QUERY, ARCHIVE_COSTCENTER } from \"./queries\"\nimport FinanceCostCentersBase from './FinanceCostCentersBase'\n\n\nfunction FinanceCostCenters({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('finance.costcenters.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_COSTCENTERS_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveCostcenter ] = useMutation(ARCHIVE_COSTCENTER)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <FinanceCostCentersBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )\n\n  if (error) return (\n    <FinanceCostCentersBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.costcenters.error_loading')}</p>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )\n\n  const costcenters = data.financeCostcenters\n\n  // Empty list\n  if (!costcenters.edges.length) { return (\n    <FinanceCostCentersBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('finance.costcenters.empty_list') : t(\"finance.costcenters.empty_archive\")}\n        </p>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )}\n\n  return (\n    <FinanceCostCentersBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}\n                    pageInfo={costcenters.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: costcenters.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.financeCostcenters.edges\n                        const pageInfo = fetchMoreResult.financeCostcenters.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new costcenters at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              financeCostcenters: {\n                                __typename: previousResult.financeCostcenters.__typename,\n                                edges: [ ...previousResult.financeCostcenters.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} \n        >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {costcenters.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.code}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/finance/costcenters/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveCostcenter({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_COSTCENTERS_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceCostCenters))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const COSTCENTER_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_COSTCENTERS_QUERY, ADD_COSTCENTER } from './queries'\nimport { COSTCENTER_SCHEMA } from './yupSchema'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceCostCentersBase from './FinanceCostCentersBase';\n\n\nfunction FinanceCostCenterAdd({ t, history }) {\n  const returnUrl = \"/finance/costcenters\"\n  const [ addCostcenter ] = useMutation(ADD_COSTCENTER)\n\n  return (\n    <FinanceCostCentersBase showBack={true}>\n      <Card title={t('finance.costcenters.title_add')}>\n        <Formik\n            initialValues={{ name: '', code: '' }}\n            validationSchema={COSTCENTER_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                addCostcenter({ variables: {\n                  input: {\n                    name: values.name, \n                    code: values.code\n                  }\n                }, refetchQueries: [\n                    {query: GET_COSTCENTERS_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data);\n                    history.push(returnUrl)\n                    toast.success((t('finance.costcenters.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n                <FoForm>\n                    <Card.Body>\n                        <Form.Group label={t('general.name')}>\n                          <Field type=\"text\" \n                                  name=\"name\" \n                                  className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                  autoComplete=\"off\" />\n                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                        <Form.Group label={t('finance.code')}>\n                          <Field type=\"text\" \n                                  name=\"code\" \n                                  className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                                  autoComplete=\"off\" />\n                          <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          color=\"primary\"\n                          className=\"pull-right\" \n                          type=\"submit\" \n                          disabled={isSubmitting}\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button color=\"link\">\n                            {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </FinanceCostCentersBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceCostCenterAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_COSTCENTERS_QUERY, GET_COSTCENTER_QUERY, UPDATE_COSTCENTER } from './queries'\nimport { COSTCENTER_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceCostCentersBase from './FinanceCostCentersBase';\n\n\nfunction FinanceCostCenterEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('finance.costcenters.title_edit')\n  const returnUrl = \"/finance/costcenters\"\n  const { loading, error, data } = useQuery(GET_COSTCENTER_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateCostcenter ] = useMutation(UPDATE_COSTCENTER)\n\n  if (loading) return (\n    <FinanceCostCentersBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )\n\n  if (error) return (\n    <FinanceCostCentersBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )\n\n  const initialData = data.financeCostcenter;\n\n  return (\n    <FinanceCostCentersBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n              code: initialData.code\n            }}\n            validationSchema={COSTCENTER_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateCostcenter({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                    code: values.code\n                  }\n                }, refetchQueries: [\n                    {query: GET_COSTCENTERS_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('finance.costcenters.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values }) => (\n                <FoForm>\n                    <Card.Body>\n                      <Form.Group label={t('general.name')}>\n                        <Field type=\"text\" \n                                name=\"name\" \n                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.code')}>\n                        <Field type=\"text\" \n                                name=\"code\" \n                                className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          className=\"pull-right\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          type=\"submit\"\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button\n                            type=\"button\" \n                            color=\"link\" \n                          >\n                              {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </FinanceCostCentersBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceCostCenterEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_GLACCOUNTS_QUERY = gql`\n  query FinanceGLAccounts($after: String, $before: String, $archived: Boolean) {\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id,\n          archived,\n          name,\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_GLACCOUNT_QUERY = gql`\n  query FinanceGLAccount($id: ID!) {\n    financeGlaccount(id:$id) {\n      id\n      name\n      code\n      archived\n    }\n  }\n`\n\nexport const ADD_GLACCOUNT = gql`\nmutation CreateFinanceGLAccount($input:CreateFinanceGLAccountInput!) {\n  createFinanceGlaccount(input: $input) {\n    financeGlaccount{\n      id\n      archived\n      name\n      code\n    }\n  }\n}\n`\n\nexport const UPDATE_GLACCOUNT = gql`\nmutation UpdateFinanceGLAccount($input: UpdateFinanceGLAccountInput!) {\n  updateFinanceGlaccount(input: $input) {\n    financeGlaccount {\n      id\n      name\n      code\n    }\n  }\n}\n`\n\nexport const ARCHIVE_GLACCOUNT = gql`\nmutation ArchiveFinanceGLAccount($input: ArchiveFinanceGLAccountInput!) {\n  archiveFinanceGlaccount(input: $input) {\n    financeGlaccount {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinanceGLAccountsBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/finance/glaccounts\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financeglaccount\">\n                  <Link to=\"/finance/glaccounts/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.glaccounts.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <FinanceMenu activeLink='glaccounts'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceGLAccountsBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\n\nimport { GET_GLACCOUNTS_QUERY, ARCHIVE_GLACCOUNT } from \"./queries\"\nimport FinanceGLAccountsBase from './FinanceGLAccountsBase'\n\n\nfunction FinanceGLAccounts({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t(\"finance.glaccounts.title\")\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_GLACCOUNTS_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveGlaccount ] = useMutation(ARCHIVE_GLACCOUNT)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )\n\n  if (error) return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.glaccounts.error_loading')}</p>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )\n\n  const glaccounts = data.financeGlaccounts\n   \n  // Empty list\n  if (!glaccounts.edges.length) { return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}\n                   headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('finance.glaccounts.empty_list') : t(\"finance.glaccounts.empty_archive\")}\n        </p>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )} \n\n  return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}\n                headerContent={headerOptions}\n                pageInfo={glaccounts.pageInfo}\n                onLoadMore={() => {\n                fetchMore({\n                  variables: {\n                    after: glaccounts.pageInfo.endCursor\n                  },\n                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                    const newEdges = fetchMoreResult.financeGlaccounts.edges\n                    const pageInfo = fetchMoreResult.financeGlaccounts.pageInfo\n\n                    return newEdges.length\n                      ? {\n                          // Put the new glaccounts at the end of the list and update `pageInfo`\n                          // so we have the new `endCursor` and `hasNextPage` values\n                          financeGlaccounts: {\n                            __typename: previousResult.financeGlaccounts.__typename,\n                            edges: [ ...previousResult.financeGlaccounts.edges, ...newEdges ],\n                            pageInfo\n                          }\n                        }\n                      : previousResult\n                  }\n                })\n              }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {glaccounts.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.code}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/finance/glaccounts/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveGlaccount({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_GLACCOUNTS_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceGLAccounts))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const GLACCOUNT_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from \"react-router-dom\"\n\nimport { GET_GLACCOUNTS_QUERY, ADD_GLACCOUNT } from './queries'\nimport { GLACCOUNT_SCHEMA } from './yupSchema'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport FinanceGLAccountsBase from './FinanceGLAccountsBase'\n\n\nfunction FinanceGLAccountAdd({t, history}) {\n  const returnUrl = \"/finance/glaccounts\"\n  const [ addGlaccount ] = useMutation(ADD_GLACCOUNT)\n\n  return (\n    <FinanceGLAccountsBase>\n      <Card title={t('finance.glaccounts.title_add')}>\n        <Formik\n          initialValues={{ name: '', code: '' }}\n          validationSchema={GLACCOUNT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addGlaccount({ variables: {\n                input: {\n                  name: values.name, \n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_GLACCOUNTS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('finance.glaccounts.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n            <FoForm>\n                <Card.Body>\n                    <Form.Group label={t('general.name')}>\n                      <Field type=\"text\" \n                              name=\"name\" \n                              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                      <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                    <Form.Group label={t('finance.code')}>\n                      <Field type=\"text\" \n                              name=\"code\" \n                              className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                      <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                </Card.Body>\n                <Card.Footer>\n                    <Button \n                      color=\"primary\"\n                      className=\"pull-right\" \n                      type=\"submit\" \n                      disabled={isSubmitting}\n                    >\n                      {t('general.submit')}\n                    </Button>\n                    <Link to={returnUrl}>\n                      <Button color=\"link\">\n                          {t('general.cancel')}\n                      </Button>\n                    </Link>\n                </Card.Footer>\n            </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </FinanceGLAccountsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceGLAccountAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql, useMutation, useQuery } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_GLACCOUNTS_QUERY, GET_GLACCOUNT_QUERY, UPDATE_GLACCOUNT } from './queries'\nimport { GLACCOUNT_SCHEMA } from './yupSchema'\n\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceGLAccountsBase from './FinanceGLAccountsBase'\n\n\nfunction FinanceGLAccountEdit({t, history, match}) {\n  const id = match.params.id\n  const returnUrl = \"/finance/glaccounts\"\n  const cardTitle = t('finance.glaccounts.title_edit')\n  const { loading, error, data } = useQuery(GET_GLACCOUNT_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateGlaccount ] = useMutation(UPDATE_GLACCOUNT)\n\n  if (loading) return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )\n\n  if (error) return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )\n\n  const initialData = data.financeGlaccount;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <FinanceGLAccountsBase>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            code: initialData.code\n          }}\n          validationSchema={GLACCOUNT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateGlaccount({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name,\n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_GLACCOUNTS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('finance.glaccounts.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <FoForm>\n                <Card.Body>\n                  <Form.Group label={t('general.name')}>\n                    <Field type=\"text\" \n                            name=\"name\" \n                            className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                            autoComplete=\"off\" />\n                    <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                  <Form.Group label={t('finance.code')}>\n                    <Field type=\"text\" \n                            name=\"code\" \n                            className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                            autoComplete=\"off\" />\n                    <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Card.Body>\n                <Card.Footer>\n                    <Button \n                      className=\"pull-right\"\n                      color=\"primary\"\n                      disabled={isSubmitting}\n                      type=\"submit\"\n                    >\n                      {t('general.submit')}\n                    </Button>\n                    <Link to={returnUrl}>\n                      <Button\n                        type=\"button\" \n                        color=\"link\" \n                      >\n                          {t('general.cancel')}\n                      </Button>\n                    </Link>\n                </Card.Footer>\n            </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </FinanceGLAccountsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceGLAccountEdit))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let queryVars = {}\n\n  let status = localStorage.getItem(CSLS.FINANCE_INVOICES_FILTER_STATUS)\n  if (status) {\n    queryVars.status = status\n  } else {\n    queryVars.status = undefined\n  }\n  \n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from './tools'\n\n\nfunction getDefaultValue(value) {\n  let defaultValue = localStorage.getItem(value)\n  console.log(defaultValue)\n\n  if (defaultValue) {\n    return defaultValue\n  } else {\n    console.log('return empty default')\n    return \"\"\n  }\n}\n\n\nfunction updateLocalStorageAndRefetch(key, value, refetch) {\n  localStorage.setItem(key, value)\n  refetch(get_list_query_variables())\n\n}\n\nconst selectClass = \"form-control mb-2\"\n\n\nconst FinanceInvoicesFilter = ({ t, history, data, refetch }) => (\n  <div>\n    {/* Status */}\n    <select \n      className={selectClass}\n      value={getDefaultValue(CSLS.FINANCE_INVOICES_FILTER_STATUS)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.FINANCE_INVOICES_FILTER_STATUS,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"finance.invoices.statuses.all\")}</option>\n      <option value=\"DRAFT\" key={v4()}>{t('finance.invoices.statuses.draft')}</option>\n      <option value=\"SENT\" key={v4()}>{t('finance.invoices.statuses.sent')}</option>\n      <option value=\"PAID\" key={v4()}>{t('finance.invoices.statuses.paid')}</option>\n      <option value=\"CANCELLED\" key={v4()}>{t('finance.invoices.statuses.cancelled')}</option>\n    </select>\n  </div>\n);\n\nexport default withTranslation()(withRouter(FinanceInvoicesFilter))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Container,\n  Grid,\n  Icon,\n  Page\n} from \"tabler-react\";\n\nimport SiteWrapper from '../../SiteWrapper'\nimport FinanceInvoicesFilter from \"./FinanceInvoicesFilter\"\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinanceInvoicesBase ({ t, history, children, refetch }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/finance/invoices/groups\" \n                    className='btn btn-outline-secondary btn-sm'>\n                <Icon prefix=\"fe\" name=\"folder\" /> {t('general.groups')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n              <FinanceInvoicesFilter refetch={refetch}/>\n              <h5>{t(\"general.menu\")}</h5>\n              <FinanceMenu activeLink='invoices'/>\n            </Grid.Col>\n          </Grid.Row>\n          </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceInvoicesBase))","// @flow\n\nimport React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Badge\n} from \"tabler-react\";\n\n\nclass FinanceInvoicesStatus extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"finance costcenter edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const history = this.props.history\n    const status = this.props.status\n\n    switch (status) {\n      case \"DRAFT\":\n        return <Badge color=\"secondary\">{t('finance.invoices.status.DRAFT')}</Badge>\n        break\n      case \"SENT\":\n        return <Badge color=\"primary\">{t('finance.invoices.status.SENT')}</Badge>\n        break\n      case \"PAID\":\n        return <Badge color=\"success\">{t('finance.invoices.status.PAID')}</Badge>\n        break\n      case \"CANCELLED\":\n        return <Badge color=\"warning\">{t('finance.invoices.status.CANCELLED')}</Badge>\n        break\n      default:\n        return t('finance.invoices.status.NOT_FOUND') \n    }\n  }\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoicesStatus))","import { gql } from \"@apollo/client\"\n\nexport const GET_INVOICES_QUERY = gql`\n  query FinanceInvoices($after: String, $before: String, $status: String) {\n    financeInvoices(first: 15, before: $before, after: $after, status: $status) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          invoiceNumber\n          status\n          summary\n          relationCompany\n          relationContactName\n          dateSent\n          dateDue\n          total\n          totalDisplay\n          balance\n          balanceDisplay\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INVOICE_QUERY = gql`\n  query FinanceInvoice($id: ID!, $before: String, $after: String) {\n    financeInvoice(id:$id) {\n      id\n      account {\n        id\n        fullName\n      }\n      financePaymentMethod {\n        id\n        name\n      }\n      relationCompany\n      relationCompanyRegistration\n      relationCompanyTaxRegistration\n      relationContactName\n      relationAddress\n      relationPostcode\n      relationCity\n      relationCountry\n      status\n      summary\n      invoiceNumber\n      dateSent\n      dateDue\n      terms\n      footer\n      note\n      subtotalDisplay\n      taxDisplay\n      total\n      totalDisplay\n      paidDisplay\n      balance\n      balanceDisplay\n      creditInvoiceNumber\n      updatedAt\n      items {\n        edges {\n          node {\n            id\n            lineNumber\n            productName\n            description\n            quantity\n            price\n            financeTaxRate {\n              id\n              name\n              percentage\n              rateType\n            }\n            subtotal\n            subtotalDisplay\n            tax\n            taxDisplay\n            total\n            totalDisplay\n            financeGlaccount {\n              id\n              name\n            }\n            financeCostcenter {\n              id\n              name\n            }\n          }\n        }\n      }\n      payments {\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            id\n            amount\n            amountDisplay\n            date\n            financePaymentMethod {\n              id\n              name\n            }\n            note\n            onlinePaymentId\n          }\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    organization(id:\"T3JnYW5pemF0aW9uTm9kZToxMDA=\") {\n      id\n      name\n      address\n      phone\n      email\n      registration\n      taxRegistration\n    }\n  }\n`\n\n\nexport const UPDATE_INVOICE = gql`\n  mutation UpdateFinanceInvoice($input: UpdateFinanceInvoiceInput!) {\n    updateFinanceInvoice(input: $input) {\n      financeInvoice {\n        id\n        summary\n      }\n    }\n  }\n`\n\n\nexport const CANCEL_AND_CREATE_CREDIT_INVOICE = gql`\n  mutation CancelAndCreateCreditFinanceInvoice($input: CancelAndCreateCreditFinanceInvoiceInput!) {\n    cancelAndCreateCreditFinanceInvoice(input: $input) {\n      financeInvoice {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_FINANCE_INVOICE = gql`\n  mutation DeleteFinanceInvoice($input: DeleteFinanceInvoiceInput!) {\n    deleteFinanceInvoice(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const CREATE_INVOICE_ITEM = gql`\n  mutation CreateFinanceInvoiceItem($input: CreateFinanceInvoiceItemInput!) {\n    createFinanceInvoiceItem(input: $input) {\n      financeInvoiceItem {\n        id\n        productName\n        description\n        quantity\n        price\n        financeTaxRate {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_INVOICE_ITEM = gql`\n  mutation UpdateFinanceInvoiceItem($input: UpdateFinanceInvoiceItemInput!) {\n    updateFinanceInvoiceItem(input: $input) {\n      financeInvoiceItem {\n        id\n        productName\n        description\n        quantity\n        price\n        financeTaxRate {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const DELETE_INVOICE_ITEM = gql`\n  mutation DeleteFinanceInvoiceItem($input: DeleteFinanceInvoiceItemInput!) {\n    deleteFinanceInvoiceItem(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const DELETE_INVOICE_PAYMENT = gql`\n  mutation DeleteFinanceInvoicePayment($input: DeleteFinanceInvoicePaymentInput!) {\n    deleteFinanceInvoicePayment(input: $input) {\n      ok\n    }\n  }\n`","import React from 'react'\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\nimport {\n  Icon,\n} from \"tabler-react\";\n\n\nconst confirm_delete = ({t, msgConfirm, msgDescription, msgSuccess, deleteFunction, functionVariables}) => {\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className='custom-ui'>\n            <h1>{t('general.confirm_delete')}</h1>\n            {msgConfirm}\n            {msgDescription}\n            <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_delete_no')}</button>\n            <button\n              className=\"btn btn-danger\"\n              onClick={() => {\n                deleteFunction(functionVariables)\n                  .then(({ data }) => {\n                    console.log('got data', data);\n                    toast.success(\n                      msgSuccess, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                  })\n                onClose()\n              }}\n            >\n              <Icon name=\"trash-2\" /> {t('general.confirm_delete_yes')}\n            </button>\n          </div>\n        )\n      }\n    })\n  }\n\nexport default confirm_delete\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Table, \n  Text\n} from \"tabler-react\";\n\nimport { get_list_query_variables } from \"./tools\"\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceInvoicesBase from \"./FinanceInvoicesBase\"\nimport FinanceInvoicesStatus from \"../../ui/FinanceInvoiceStatus\"\n\nimport { GET_INVOICES_QUERY, DELETE_FINANCE_INVOICE } from \"./queries\"\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport moment from 'moment'\n\n\nfunction FinanceInvoices({ t, location, history }) {\n  // Set back location for edit invoice\n  localStorage.setItem(CSLS.FINANCE_INVOICES_EDIT_RETURN, location.pathname)\n  // Fetch data\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_INVOICES_QUERY, {\n    variables: get_list_query_variables(),\n    fetchPolicy: \"network-only\"\n  })\n  const [ deleteFinanceInvoice ] = useMutation(DELETE_FINANCE_INVOICE)\n\n  if (loading) return (\n    <FinanceInvoicesBase refetch={refetch}>\n      <ContentCard cardTitle={t('finance.invoices.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceInvoicesBase>\n  )\n  // Error\n  if (error) return (\n    <FinanceInvoicesBase refetch={refetch}>\n      <ContentCard cardTitle={t('finance.invoices.title')}>\n        <p>{t('finance.invoices.error_loading')}</p>\n      </ContentCard>\n    </FinanceInvoicesBase>\n  )\n\n  const invoices = data.financeInvoices\n\n  // Empty list\n  if (!invoices.edges.length) { return (\n    <FinanceInvoicesBase refetch={refetch}>\n      <ContentCard cardTitle={t('finance.invoices.title')}>\n        <p>\n          {t('finance.invoices.empty_list')}\n        </p>\n      </ContentCard>\n    </FinanceInvoicesBase>\n  )}\n\n  return (\n    <FinanceInvoicesBase refetch={refetch}>\n      <ContentCard cardTitle={t('finance.invoices.title')}\n                  pageInfo={invoices.pageInfo}\n                  onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: invoices.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.financeInvoices.edges\n                        const pageInfo = fetchMoreResult.financeInvoices.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new invoices at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              financeInvoices: {\n                                __typename: previousResult.financeInvoices.__typename,\n                                edges: [ ...previousResult.financeInvoices.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} \n        >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoices.invoice_number')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoices.relation')} & {t('finance.invoices.summary')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoices.date')} & {t('finance.invoices.due')}</Table.ColHeader>\n              {/* <Table.ColHeader>{t('finance.invoices.due')}</Table.ColHeader> */}\n              <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.balance')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {invoices.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    <FinanceInvoicesStatus status={node.status} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <Link to={\"/finance/invoices/edit/\" + node.id}>\n                      {node.invoiceNumber}\n                    </Link>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.account) ? \n                      <Link to={\"/relations/accounts/\" + node.account.id + \"/profile\"}>\n                        {(node.relationCompany) ? node.relationCompany: node.relationContactName}\n                      </Link> :\n                      (node.relationCompany) ? node.relationCompany: node.relationContactName\n                    }\n                    <br />\n                    <Text.Small color=\"gray\">{node.summary.trunc(20)}</Text.Small>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {moment(node.dateSent).format('LL')} <br />\n                    {moment(node.dateDue).format('LL')}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.totalDisplay}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.balanceDisplay}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={\"/finance/invoices/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"finance.invoices.delete_confirm_msg\"),\n                          msgDescription: <p>{node.invoiceNumber}</p>,\n                          msgSuccess: t('finance.invoices.deleted'),\n                          deleteFunction: deleteFinanceInvoice,\n                          functionVariables: { \n                            variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, \n                            refetchQueries: [\n                              {query: GET_INVOICES_QUERY, variables: get_list_query_variables() } \n                            ]\n                          }\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceInvoicesBase>\n  )\n} \n\nexport default withTranslation()(withRouter(FinanceInvoices))","import CSLS from './cs_local_storage'\nimport { CSAuth } from './authentication';\n\nexport function refreshTokenAndOpenExportLinkInNewTab(doTokenRefresh, history, exportUrl) {  \n  const refreshToken = localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN)\n\n  doTokenRefresh({ variables: { refreshToken: refreshToken }})\n    .then(({data}) => {\n      CSAuth.updateTokenInfo(data.refreshToken)\n      const token = data.refreshToken.token\n      //Add authentication headers in URL\n      var url = `${exportUrl}/${token}`;\n\n      window.open(url, \"_blank\")\n      // history.push(export_url)\n    }).catch((error) => {\n      console.log(error)\n      history.push(\"/#/user/login\")\n    })\n}\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\n\n\nfunction FinanceInvoiceEditBase({t, match, history, children}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n          <Container>\n            {children}\n          </Container>\n      </div>\n    </SiteWrapper>\n  ) \n}\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditBase))","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { get_list_query_variables } from \"../tools\"\nimport { CREATE_INVOICE_ITEM, GET_INVOICES_QUERY, GET_INVOICE_QUERY } from \"../queries\"\nimport { toast } from 'react-toastify'\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction FinanceInvoiceItemAdd({t, match}) {\n  const [addInvoiceItem, { data }] = useMutation(CREATE_INVOICE_ITEM)\n\n    return (\n      <button className=\"btn btn-primary btn-sm\" \n        title={t('general.delete')} \n        href=\"\"\n        onClick={() => {\n          addInvoiceItem({ variables: {\n            input: {\n              financeInvoice: match.params.id              \n            }\n          }, refetchQueries: [\n              {query: GET_INVOICE_QUERY, variables: {id: match.params.id}}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('finance.invoice.toast_add_item_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              // setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              // setSubmitting(false)\n            })\n      }}>\n        <Icon prefix=\"fe\" name=\"plus\" /> { ' ' }\n        {t('finance.invoice.item_add')}\n      </button>\n    )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceItemAdd))\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { get_list_query_variables } from \"../tools\"\nimport { DELETE_INVOICE_ITEM, GET_INVOICES_QUERY, GET_INVOICE_QUERY } from \"../queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\n\nfunction FinanceInvoiceItemDelete({t, match, node}) {\n  const [deleteInvoiceItem, { data }] = useMutation(DELETE_INVOICE_ITEM)\n\n    return (\n      <button className=\"icon btn btn-link btn-sm\" \n        title={t('general.delete')} \n        href=\"\"\n        onClick={() => {\n          confirm_delete({\n            t: t,\n            msgConfirm: t(\"finance.invoices.item_delete_confirm_msg\"),\n            msgDescription: <p>{node.productName} <br /> {node.description}</p>,\n            msgSuccess: t('finance.invoices.item_deleted'),\n            deleteFunction: deleteInvoiceItem,\n            functionVariables: { \n              variables: {\n                input: {\n                  id: node.id\n                }\n              }, \n              refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables() },\n                {query: GET_INVOICE_QUERY, variables: {id: match.params.id} },\n              ]\n            }\n          })\n      }}>\n        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n      </button>\n    )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceItemDelete))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n  Grid,\n  Icon\n} from \"tabler-react\"\n\nimport FinanceInvoiceItemDelete from './FinanceInvoiceItemDelete'\n\n\nconst FinanceInvoiceItemEditForm = ({ t, isSubmitting, errors, node, touched, handleChange, setFieldTouched, inputData }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Grid.Row>\n      {/* <Icon name=\"more-vertical\" /> */}\n        <Grid.Col md={3} className=\"cs-grid-table-cell\">\n          <Form.Group>\n            <Field type=\"text\" \n                    name=\"productName\" \n                    className={(errors.productName) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"productName\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"productName\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={3} className=\"cs-grid-table-cell\">\n          <Form.Group>\n            <Field type=\"text\" \n                    name=\"description\" \n                    className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    component=\"textarea\"\n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"description\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={2} className=\"cs-grid-table-cell\">\n          <Form.Group>\n            <Field type=\"text\" \n                   name=\"quantity\" \n                   className={(errors.quantity) ? \"form-control is-invalid\" : \"form-control\"} \n                   autoComplete=\"off\" \n                   onChange={(e) => {\n                    handleChange(e)\n                    setFieldTouched(\"quantity\", true, true)\n                  }}\n            />\n            <ErrorMessage name=\"quantity\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group>\n            <Field type=\"text\" \n                    name=\"price\" \n                    className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"price\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={2} className=\"cs-grid-table-cell\">\n          <Form.Group>\n            <Field component=\"select\" \n                  name=\"financeTaxRate\" \n                  className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\"\n                  onChange={(e) => {\n                    handleChange(e)\n                    setFieldTouched(\"financeTaxRate\", true, true)\n                  }}\n            >\n              {console.log(\"query data in form finance tax rate:\")}\n              {console.log(inputData)}\n              <option value=\"\" key={v4()}></option>\n              {inputData.financeTaxRates.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={1} className=\"cs-grid-table-cell\">\n          <span className=\"float-right\">{node.totalDisplay}</span> <br /><br />\n          {(Object.keys(touched).length === 0) ? \"\" :\n            <Button \n              color=\"primary\"\n              className=\"pull-right\" \n              type=\"submit\" \n              disabled={isSubmitting}\n            >\n              {t('general.submit')}\n            </Button>\n          }\n        </Grid.Col>\n        <Grid.Col md={1} className=\"cs-grid-table-cell\">\n          <span className=\"float-right\"><FinanceInvoiceItemDelete node={node}/></span>\n        </Grid.Col>\n      </Grid.Row>\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceItemEditForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { UPDATE_INVOICE_ITEM } from \"../queries\"\nimport FinanceInvoiceItemEditForm from './FinanceInvoiceItemEditForm'\n\n\nfunction FinanceInvoiceItemEdit({t, initialValues, node, inputData}) {\n  const [updateInvoiceItem, { data }] = useMutation(UPDATE_INVOICE_ITEM)\n\n    return (\n      <Formik\n        initialValues={{\n          productName: initialValues.productName,\n          description: initialValues.description,\n          price: initialValues.price,\n          quantity: initialValues.quantity,\n          financeTaxRate: (initialValues.financeTaxRate) ? initialValues.financeTaxRate.id : null\n        }}\n        // validationSchema={INVOICE_GROUP_SCHEMA}\n        onSubmit={(values, { setSubmitting, setTouched }) => {\n          console.log('submit values:')\n          console.log(values)\n\n          updateInvoiceItem({ variables: {\n            input: {\n              id: initialValues.id,\n              productName: values.productName, \n              description: values.description,\n              price: values.price,\n              quantity: values.quantity,\n              financeTaxRate: values.financeTaxRate\n            }\n          }, refetchQueries: [\n              // {query: GET_INVOICES_QUERY, variables: get_list_query_variables()}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('finance.invoice.item.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n              setTouched({})\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n          }}\n      >\n        {({ isSubmitting, errors, values, touched, handleChange, setFieldTouched }) => (\n          <FinanceInvoiceItemEditForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            touched={touched}\n            handleChange={handleChange}\n            setFieldTouched={setFieldTouched}\n            node={node}\n            inputData={inputData}\n          >\n          </FinanceInvoiceItemEditForm>   \n        )}\n      </Formik>\n    )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceItemEdit))","// @flow\n\nimport React, { useCallback, useState } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport { toast } from 'react-toastify'\n\nimport {\n  Card,\n  Dimmer, \n  Grid, \n} from \"tabler-react\"\n\nimport FinanceInvoiceItemAdd from \"./FinanceInvoiceItemAdd\"\nimport { GET_INVOICE_QUERY } from '../queries'\n\nimport FinanceInvoiceItemEdit from './FinanceInvoiceItemEdit'\n\n\nexport const UPDATE_INVOICE_ITEM = gql`\n  mutation UpdateFinanceInvoiceItem($input: UpdateFinanceInvoiceItemInput!) {\n    updateFinanceInvoiceItem(input: $input) {\n      financeInvoiceItem {\n        id\n      }\n    }\n  }\n`\n\nfunction FinanceInvoiceEditItems ({ t, history, match, refetchInvoice, inputData }) {\n  const [updateItem, { data }] = useMutation(UPDATE_INVOICE_ITEM)\n  const [ updating, setUpdating ] = useState(false)\n\n  const onDragEnd = useCallback((result) => {\n    // the only one that is required\n    console.log('onDragEnd triggered...')\n    console.log(result)\n    const { draggableId, destination, source, reason } = result\n    console.log(source)\n    console.log(destination)\n    console.log(reason)\n\n    // Nothing to do, nowhere to go...\n    console.log(\"drop cancelled...\")\n    if (!destination || reason === 'CANCEL') {\n      return\n    }\n\n    // Moved back to the same spot\n    console.log(\"dropped to the same spot\")\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return\n    }\n\n    updateLineNumber({\n      node_id: draggableId,\n      line_number: destination.index\n    })\n\n  }, []);\n\n\n  const updateLineNumber = ({ node_id, line_number }) => {\n    setUpdating(true)\n    updateItem({ \n      variables: { \n        input: {\n          id: node_id,\n          lineNumber: line_number\n        } \n      },\n      refetchQueries: [\n        { query: GET_INVOICE_QUERY, variables: { id: inputData.financeInvoice.id }}\n      ]\n    }).then(({ data }) => {\n      console.log('got data', data)\n      toast.success((t('finance.invoice.saved_item_sorting')), {\n          position: toast.POSITION.BOTTOM_RIGHT\n      })\n      setTimeout(() => setUpdating(false), 125)\n    }).catch((error) => {\n      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n          position: toast.POSITION.BOTTOM_RIGHT\n      })\n      console.log('there was an error sending the query', error)\n      setTimeout(() => setUpdating(false), 125)\n    })\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd} >\n      <Card statusColor=\"blue\">\n        <Card.Header>\n          <Card.Title>{t('general.items')}</Card.Title>\n          <Card.Options>\n            <FinanceInvoiceItemAdd />\n          </Card.Options>\n        </Card.Header>\n        <Card.Body>\n          <Dimmer active={updating} loader={updating}>\n              <Grid.Row className=\"cs-grid-table-header\">\n                <Grid.Col md={3} className=\"cs-grid-table-cell\">{t(\"general.product\")}</Grid.Col>\n                <Grid.Col md={3} className=\"cs-grid-table-cell\">{t(\"general.description\")}</Grid.Col>\n                <Grid.Col md={2} className=\"cs-grid-table-cell\">{t(\"general.quantity_short_and_price\")}</Grid.Col>\n                <Grid.Col md={2} className=\"cs-grid-table-cell\">{t(\"general.tax\")}</Grid.Col>\n                <Grid.Col md={1} className=\"cs-grid-table-cell\"><span className=\"float-right\">{t(\"general.total\")}</span></Grid.Col>\n                <Grid.Col md={1} className=\"cs-grid-table-cell\"></Grid.Col>\n              </Grid.Row>\n              <Droppable droppableId=\"invoice_items\">\n                {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef} \n                      {...provided.droppableProps} \n                    >\n                      {inputData.financeInvoice.items.edges.map(({ node }, idx) => (\n                        <Draggable \n                          draggableId={node.id}\n                          index={idx}\n                          key={node.id}\n                        >\n                          {(provided, snapshot) => (\n                              <div \n                                ref={provided.innerRef}\n                                index={node.lineNumber}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                >\n                                <FinanceInvoiceItemEdit initialValues={node} inputData={inputData} node={node} />\n                              </div>\n                          )}\n                        </Draggable>\n                      ))}\n                      {provided.placeholder}\n                    </div>\n                )}\n              </Droppable>\n          </Dimmer>\n        </Card.Body>\n      </Card>\n    </DragDropContext>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditItems))","export const tinymceBasicConf = {\n    resize: true,\n    menubar: false,\n    plugins: 'link image code lists paste fullscreen',\n    statusbar: false,\n    toolbar: ' undo redo | formatselect | bold italic strikethrough | bullist numlist | alignleft aligncenter alignright | link image | pastetext code | fullscreen',    \n}\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n\n// Use editor as controlled component:\n// https://github.com/tinymce/tinymce-react/blob/master/README.md\n\nconst FinanceInvoiceEditTermsForm = ({ t, isSubmitting, values, errors, touched, handleChange, setFieldTouched, setFieldValue }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group label={t('general.terms_and_conditions')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"terms\"\n          initialValue={values.terms}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldValue(\"terms\", e.target.getContent())\n            setFieldTouched(\"terms\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"terms\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('general.submit')}\n      </Button>\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditTermsForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n\n// Use editor as controlled component:\n// https://github.com/tinymce/tinymce-react/blob/master/README.md\n\nconst FinanceInvoiceEditFooterForm = ({ t, isSubmitting, values, errors, touched, handleChange, setFieldTouched, setFieldValue }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group label={t('general.footer')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"footer\"\n          initialValue={values.footer}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldValue(\"footer\", e.target.getContent())\n            setFieldTouched(\"footer\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"footer\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('general.submit')}\n      </Button>\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditFooterForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n// Use editor as controlled component:\n// https://github.com/tinymce/tinymce-react/blob/master/README.md\n\nconst FinanceInvoiceEditNoteForm = ({ t, isSubmitting, values, errors, handleChange, submitForm, setFieldTouched, setFieldValue }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group label={t('general.note')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"note\"\n          initialValue={values.note}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldValue(\"note\", e.target.getContent())\n            setFieldTouched(\"note\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('general.submit')}\n      </Button>\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditNoteForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport {\n  Tab,\n  TabbedCard\n} from \"tabler-react\"\n\n\nimport { get_list_query_variables } from \"../tools\"\nimport { UPDATE_INVOICE, GET_INVOICE_QUERY } from \"../queries\"\nimport FinanceInvoiceEditTermsForm from \"./FinanceInvoiceEditTermsForm\"\nimport FinanceInvoiceEditFooterForm from \"./FinanceInvoiceEditFooterForm\"\nimport FinanceInvoiceEditNoteForm from \"./FinanceInvoiceEditNoteForm\"\n\n\nfunction FinanceInvoiceEditAdditional({t, history, match, initialData}) {\n  const id = match.params.id\n  const [ updateInvoice ] = useMutation(UPDATE_INVOICE)\n\n  return (\n    <TabbedCard initialTab={t('general.terms_and_conditions')}>\n      <Tab title={t('general.terms_and_conditions')}>\n        <Formik\n          initialValues={{ \n            terms: initialData.financeInvoice.terms, \n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                terms: values.terms, \n              }\n            }, refetchQueries: [\n                {query: GET_INVOICE_QUERY, variables: {id: id}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_terms_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, handleChange, setFieldTouched, setFieldValue }) => (\n            <FinanceInvoiceEditTermsForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              touched={touched}\n              handleChange={handleChange}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n            >\n            </FinanceInvoiceEditTermsForm>\n          )}\n        </Formik>\n      </Tab>\n      <Tab title={t('general.footer')}>\n        <Formik\n          initialValues={{ \n            footer: initialData.financeInvoice.footer, \n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                footer: values.footer, \n              }\n            }, refetchQueries: [\n              {query: GET_INVOICE_QUERY, variables: {id: id}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_footer_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, handleChange, setFieldTouched, setFieldValue }) => (\n            <FinanceInvoiceEditFooterForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              handleChange={handleChange}\n              touched={touched}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n            >\n            </FinanceInvoiceEditFooterForm>\n          )}\n        </Formik>\n      </Tab>\n      <Tab title={t('general.note')}>\n        <Formik\n          initialValues={{ \n            note: initialData.financeInvoice.note, \n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                note: values.note, \n              }\n            }, refetchQueries: [\n              {query: GET_INVOICE_QUERY, variables: {id: id}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_note_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, handleChange, setFieldTouched, setFieldValue }) => (\n            <FinanceInvoiceEditNoteForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              touched={touched}\n              handleChange={handleChange}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n            >\n            </FinanceInvoiceEditNoteForm>\n          )}\n        </Formik>\n      </Tab>\n    </TabbedCard>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditAdditional))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Card\n} from \"tabler-react\";\n\n\nconst FinanceInvoiceEditBalance = ({ t, history, financeInvoice }) => (\n  <Card statusColor=\"blue\">\n    <Card.Header>\n      <Card.Title>{t('general.balance')}</Card.Title>\n    </Card.Header>\n    <Card.Body>\n      <div>\n        <span className=\"pull-left bold\">\n          {t('general.subtotal')}\n        </span>\n        <span className=\"pull-right\">\n          {financeInvoice.subtotalDisplay}\n        </span>\n      </div><br />\n      <div>\n        <span className=\"pull-left bold\">\n          {t('general.tax')}\n        </span>\n        <span className=\"pull-right\">\n          {financeInvoice.taxDisplay}\n        </span>\n      </div><br />\n      <div>\n        <span className=\"pull-left bold\">\n          {t('general.total')}\n        </span>\n        <span className=\"pull-right\">\n          {financeInvoice.totalDisplay}\n        </span>\n      </div><br />\n      <div>\n        <span className=\"pull-left bold\">\n          {t('general.paid')}\n        </span>\n        <span className=\"pull-right\">\n          {financeInvoice.paidDisplay}\n        </span>\n      </div><br />\n      <div>\n        <span className=\"pull-left bold\">\n          {t('general.balance')}\n        </span>\n        <span className=\"pull-right\">\n          {financeInvoice.balanceDisplay}\n        </span>\n      </div>\n    </Card.Body>\n  </Card>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditBalance))","export function dateToLocalISO(date) {\n    if (date instanceof Date) {\n        return date.getFullYear() + '-' + \n               (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' +\n               (\"0\" + date.getDate()).slice(-2)\n    } else {\n        return date\n    }\n}\n\nexport function dateToLocalISOTime(date) {\n    if (date instanceof Date) {\n        return date.getHours() + ':' + \n               ('0' + date.getMinutes()).slice(-2)\n    } else {\n        return date\n    }\n}\n\n\nexport function TimeStringToJSDateOBJ(time_string) {\n    // time_string is Expected to be \"HH:MM:SS\"\n    let date_obj = new Date()\n    let time_split = time_string.split(':')\n    date_obj.setHours(time_split[0])\n    date_obj.setMinutes(time_split[1])\n\n    return date_obj\n}","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n} from \"tabler-react\"\n\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nconst FinanceInvoiceEditOptionsForm = ({ t, isSubmitting, values, errors, handleChange, touched, setFieldValue, setFieldTouched, inputData }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group label={t('finance.invoices.invoice_number')}>\n        <Field type=\"text\" \n                name=\"invoiceNumber\" \n                className={(errors.invoiceNumber) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" \n                onChange={(e) => {\n                  handleChange(e)\n                  setFieldTouched(\"invoiceNumber\", true, true)\n                }}           \n        />\n        <ErrorMessage name=\"invoiceNumber\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('finance.invoices.date')}>\n        <CSDatePicker \n          className={(errors.dateSent) ? \"form-control is-invalid\" : \"form-control\"} \n          selected={values.dateSent}\n          onChange={(date) => {\n            setFieldValue(\"dateSent\", date)\n            setFieldTouched(\"dateSent\", true)\n          }}\n        />\n        <ErrorMessage name=\"dateSent\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('finance.invoices.due')}>\n        <CSDatePicker \n          className={(errors.dateDue) ? \"form-control is-invalid\" : \"form-control\"} \n          selected={values.dateDue}\n          onChange={(date) => {\n            setFieldValue(\"dateDue\", date)\n            setFieldTouched(\"dateDue\", true)\n          }}\n        />\n        <ErrorMessage name=\"dateDue\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.status')}>\n        <Field component=\"select\" \n              name=\"status\" \n              className={(errors.status) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\"\n              onChange={(e) => {\n                handleChange(e)\n                setFieldTouched(\"status\", true, true)\n              }}\n        >\n          <option value=\"DRAFT\">{t('finance.invoices.status.DRAFT')}</option>\n          <option value=\"SENT\">{t('finance.invoices.status.SENT')}</option>\n          <option value=\"PAID\">{t('finance.invoices.status.PAID')}</option>\n          <option value=\"CANCELLED\">{t('finance.invoices.status.CANCELLED')}</option>\n        </Field>\n        <ErrorMessage name=\"status\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.payment_method')}>\n        <Field component=\"select\" \n              name=\"financePaymentMethod\" \n              className={(errors.financePaymentMethod) ? \"form-control is-invalid\" : \"form-control\"} \n              onChange={(e) => {\n                handleChange(e)\n                setFieldTouched(\"financePaymentMethod\", true, true)\n              }}\n              autoComplete=\"off\">\n          <option value=\"\" key={v4()}></option>\n          {inputData.financePaymentMethods.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name}</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"financePaymentMethod\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>  \n      {(Object.keys(touched).length === 0) ? \"\" :\n        <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n        >\n          {t('general.submit')}\n        </Button>\n      }\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditOptionsForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Card, \n} from \"tabler-react\"\n\nimport { dateToLocalISO } from '../../../../tools/date_tools'\nimport { get_list_query_variables } from \"../tools\"\nimport { UPDATE_INVOICE, GET_INVOICES_QUERY } from \"../queries\"\nimport FinanceInvoiceEditOptionsForm from \"./FinanceInvoiceEditOptionsForm\"\n\n\nfunction FinanceInvoiceEditOptions({t, match, initialData}) {\n  const [ updateInvoice ] = useMutation(UPDATE_INVOICE)\n  \n  let initialPaymentMethod = \"\"\n  if (initialData.financeInvoice.financePaymentMethod) {\n    initialPaymentMethod = initialData.financeInvoice.financePaymentMethod.id\n  }\n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateSent = null\n  if (initialData.financeInvoice.dateSent) {\n    dateSent = new Date(initialData.financeInvoice.dateSent)\n  }\n  let dateDue = null\n  if (initialData.financeInvoice.dateDue) {\n    dateDue = new Date(initialData.financeInvoice.dateDue)\n  }\n\n  \n  console.log(\"########\")\n  console.log(initialData)\n  console.log(dateSent)\n  console.log(dateDue)\n\n\n  return (\n    <Card title={t('general.options')} statusColor=\"blue\">\n      <Card.Body>\n        <Formik\n          initialValues={{ \n            invoiceNumber: initialData.financeInvoice.invoiceNumber, \n            dateSent: dateSent,\n            dateDue: dateDue,\n            status: initialData.financeInvoice.status,\n            financePaymentMethod: initialPaymentMethod\n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting, setTouched }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                invoiceNumber: values.invoiceNumber, \n                dateSent: dateToLocalISO(values.dateSent),\n                dateDue: dateToLocalISO(values.dateDue),\n                status: values.status,\n                financePaymentMethod: values.financePaymentMethod,\n              }\n            }, refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables()}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_options_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n                setTouched({})\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, handleChange, submitForm, setFieldTouched, setFieldValue }) => (\n            <FinanceInvoiceEditOptionsForm\n              inputData={initialData}\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              touched={touched}\n              handleChange={handleChange}\n              setFieldValue={setFieldValue}\n              setFieldTouched={setFieldTouched}\n            >\n            </FinanceInvoiceEditOptionsForm>\n          )}\n        </Formik>\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditOptions))","// @flow\n\nimport React, { Fragment } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Card\n} from \"tabler-react\";\n\n\nconst FinanceInvoiceEditOrganization = ({ t, history, organization }) => (\n  <Card statusColor=\"blue\">\n    <Card.Header>\n      <Card.Title>{t('general.from')}</Card.Title>\n    </Card.Header>\n    <Card.Body>\n      <div className=\"bold\">\n        {organization.name}\n      </div>\n      {(organization.address) ?\n        <div dangerouslySetInnerHTML={{ __html: organization.address}} />\n        : \"\"\n      }      \n      <div>\n        {organization.phone}\n      </div>\n      <div>\n        {organization.email}\n      </div>\n      <div>\n        {organization.registration}\n      </div>\n      <div>\n        {organization.taxRegistration}\n      </div>\n    </Card.Body>\n  </Card>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditOrganization))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n} from \"tabler-react\"\n\n\nlet summaryFormTypingTimer\nconst formSubmitTimeout = 750\n\n\nconst FinanceInvoiceEditSummaryForm = ({ t, isSubmitting, errors, touched, setFieldTouched, handleChange }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group>\n        <Field \n          type=\"text\" \n          name=\"summary\" \n          className={(errors.summary) ? \"form-control is-invalid\" : \"form-control\"} \n          autoComplete=\"off\" \n          onChange={(e) => {\n            handleChange(e)\n            setFieldTouched(\"summary\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"summary\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      {(Object.keys(touched).length === 0) ? \"\" :\n        <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n        >\n          {t('general.submit')}\n        </Button>\n      }\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditSummaryForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Card\n} from \"tabler-react\"\n\nimport { get_list_query_variables } from \"../tools\"\nimport { UPDATE_INVOICE, GET_INVOICES_QUERY } from \"../queries\"\nimport FinanceInvoiceEditSummaryForm from \"./FinanceInvoiceEditSummaryForm\"\n\n\nfunction FinanceInvoiceEditSummary({t, history, match, initialData}) {\n  const [ updateInvoice ] = useMutation(UPDATE_INVOICE)\n\n  return (\n    <Card statusColor=\"blue\">\n      <Card.Header>\n        <Card.Title>{t('general.summary')}</Card.Title>\n      </Card.Header>\n      <Card.Body>\n        <Formik\n          initialValues={{ \n            summary: initialData.financeInvoice.summary, \n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting, setTouched }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                summary: values.summary, \n              }\n            }, refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables()}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_summary_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n                setTouched({})\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, setFieldTouched, handleChange }) => (\n            <FinanceInvoiceEditSummaryForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              touched={touched}\n              handleChange={handleChange}\n              setFieldTouched={setFieldTouched}\n            >\n            </FinanceInvoiceEditSummaryForm>\n          )}\n        </Formik>\n        {console.log(initialData)}\n        {(initialData.financeInvoice.creditInvoiceNumber) ?\n          t(\"finance.invoice.credit_invoice_for\") + \": \" + initialData.financeInvoice.creditInvoiceNumber\n        : \"\"}\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditSummary))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\n\nconst FinanceInvoiceEditToForm = ({ t, isSubmitting, errors, touched, handleChange, setFieldTouched }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group label={t(\"finance.invoices.relation_company\")}>\n        <Field type=\"text\" \n                name=\"relationCompany\" \n                className={(errors.relationCompany) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" \n                onChange={(e) => {\n                  handleChange(e)\n                  setFieldTouched(\"relationCompany\", true, true)\n                }}           \n        />\n        <ErrorMessage name=\"relationCompany\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_company_registration\")}>\n            <Field type=\"text\" \n                    name=\"relationCompanyRegistration\" \n                    className={(errors.relationCompanyRegistration) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationCompanyRegistartion\", true, true)\n                    }} \n            />\n            <ErrorMessage name=\"relationCompanyRegistration\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_company_tax_registration\")}>\n            <Field type=\"text\" \n                    name=\"relationCompanyTaxRegistration\" \n                    className={(errors.relationCompanyTaxRegistration) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationCompanyTaxRegistration\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"relationCompanyTaxRegistration\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Form.Group label={t(\"finance.invoices.relation_contact_name\")}>\n        <Field type=\"text\" \n                name=\"relationContactName\" \n                className={(errors.relationContactName) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" \n                onChange={(e) => {\n                  handleChange(e)\n                  setFieldTouched(\"relationContactName\", true, true)\n                }}\n        />\n        <ErrorMessage name=\"relationContactName\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_address\")}>\n            <Field type=\"text\" \n                    name=\"relationAddress\" \n                    className={(errors.relationAddress) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationAddress\", true, true)\n                    }} \n            />\n            <ErrorMessage name=\"relationAddress\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_postcode\")}>\n            <Field type=\"text\" \n                    name=\"relationPostcode\" \n                    className={(errors.relationPostcode) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationPostcode\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"relationPostcode\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_city\")}>\n            <Field type=\"text\" \n                    name=\"relationCity\" \n                    className={(errors.relationCity) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationCity\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"relationCity\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_country\")}>\n            <Field type=\"text\" \n                    name=\"relationCountry\" \n                    className={(errors.relationCountry) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationCountry\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"relationCountry\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          {(Object.keys(touched).length === 0) ? \"\" :\n            <Button \n              color=\"primary\"\n              className=\"pull-right\" \n              type=\"submit\" \n              disabled={isSubmitting}\n            >\n              {t('general.submit')}\n            </Button>\n          }\n        </Grid.Col>\n      </Grid.Row>\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditToForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport {\n  Card\n} from \"tabler-react\"\n\n\nimport { get_list_query_variables } from \"../tools\"\nimport { UPDATE_INVOICE, GET_INVOICES_QUERY } from \"../queries\"\nimport FinanceInvoiceEditToForm from \"./FinanceInvoiceEditToForm\"\n\n\nfunction FinanceInvoiceEditTo({ t, history, match, initialData }) {\n  const [ updateInvoice ] = useMutation(UPDATE_INVOICE)\n\n  return (\n    <Card title={t('general.to')} statusColor=\"blue\">\n      <Card.Body>\n        <Formik\n          initialValues={{ \n            relationCompany: initialData.financeInvoice.relationCompany, \n            relationCompanyRegistration: initialData.financeInvoice.relationCompanyRegistration, \n            relationCompanyTaxRegistration: initialData.financeInvoice.relationCompanyTaxRegistration, \n            relationContactName: initialData.financeInvoice.relationContactName, \n            relationAddress: initialData.financeInvoice.relationAddress, \n            relationPostcode: initialData.financeInvoice.relationPostcode, \n            relationCity: initialData.financeInvoice.relationCity, \n            relationCountry: initialData.financeInvoice.relationCountry, \n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting, setTouched }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                relationCompany: values.relationCompany,\n                relationCompanyRegistration: values.relationCompanyRegistration,\n                relationCompanyTaxRegistration: values.relationCompanyTaxRegistration,\n                relationContactName: values.relationContactName,\n                relationAddress: values.relationAddress,\n                relationPostcode: values.relationPostcode,\n                relationCity: values.relationCity,\n                relationCountry: values.relationCountry\n              }\n            }, refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables()}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_to_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n                setTouched({})\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, handleChange, setFieldTouched }) => (\n            <FinanceInvoiceEditToForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              touched={touched}\n              handleChange={handleChange}\n              setFieldTouched={setFieldTouched}\n            >\n            </FinanceInvoiceEditToForm>\n          )}\n        </Formik>\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditTo))","import React, { useContext } from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n// import { get_list_query_variables } from \"../tools\"\nimport { DELETE_INVOICE_PAYMENT, GET_INVOICES_QUERY, GET_INVOICE_QUERY } from \"../queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\nimport moment from 'moment'\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport { get_list_query_variables } from \"../tools\"\n\n\nfunction FinanceInvoiceEditPaymentDelete({t, match, node}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const [deleteInvoicePayment, { data }] = useMutation(DELETE_INVOICE_PAYMENT)\n\n    return (\n      <button className=\"icon btn btn-link btn-sm\" \n        title={t('general.delete')} \n        href=\"\"\n        onClick={() => {\n          confirm_delete({\n            t: t,\n            msgConfirm: t(\"finance.invoices.payment_delete_confirm_msg\"),\n            msgDescription: <p>{ moment(node.date).format(dateFormat) } - {node.amountDisplay}</p>,\n            msgSuccess: t('finance.invoices.payment_deleted'),\n            deleteFunction: deleteInvoicePayment,\n            functionVariables: { \n              variables: {\n                input: {\n                  id: node.id\n                }\n              }, \n              refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables() },\n                {query: GET_INVOICE_QUERY, variables: {id: match.params.id} },\n              ]\n            }\n          })\n      }}>\n        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n      </button>\n    )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditPaymentDelete))\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Button,\n  Card,\n  Icon, \n  Table\n} from \"tabler-react\"\n\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceInvoiceEditPaymentDelete from \"./FinanceInvoiceEditPaymentDelete\"\n\n\nfunction FinanceInvoiceEditPayments ({ t, history, match, refetchInvoice, inputData }) {\n  const id = match.params.id\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const paymentAddUrl = `/finance/invoices/${id}/payment/add`\n\n  return (\n    <Card statusColor=\"blue\">\n      <Card.Header>\n        <Card.Title>{t('general.payments')}</Card.Title>\n        <Card.Options>\n          {/* <FinanceInvoiceItemAdd /> */}\n          <Link to={paymentAddUrl}>\n            <Button className=\"btn-sm\" color=\"primary\">\n              <Icon prefix=\"fe\" name=\"plus\" /> {t('finance.invoice.payments.add')} \n            </Button>\n          </Link>\n        </Card.Options>\n      </Card.Header>\n        <Table cards>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t(\"general.date\")}</Table.ColHeader>\n              <Table.ColHeader>{t(\"general.amount\")}</Table.ColHeader>\n              <Table.ColHeader>{t(\"general.payment_method\")}</Table.ColHeader>\n              <Table.ColHeader>{t(\"general.note\")}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {inputData.financeInvoice.payments.edges.map(({ node }) => (\n              <Table.Row key={\"payment_\" + node.id}>\n                <Table.Col>\n                  { moment(node.date).format(dateFormat) }\n                </Table.Col>\n                <Table.Col>\n                  { node.amountDisplay }\n                </Table.Col>\n                <Table.Col>\n                  { (node.financePaymentMethod) ? node.financePaymentMethod.name : \"\" }\n                  { (node.onlinePaymentId) ? <div><small className=\"text-muted\">{node.onlinePaymentId}</small></div> : \"\" }\n                </Table.Col>\n                <Table.Col>\n                  <div dangerouslySetInnerHTML={{ __html:node.note }}></div>\n                </Table.Col>\n                <Table.Col>\n                  <span className=\"pull-right\">\n                    <Link to={ \"/finance/invoices/\" + inputData.financeInvoice.id + \"/payment/edit/\" + node.id } \n                          className='btn btn-secondary btn-sm mr-2'\n                    >\n                      {t('general.edit')}\n                    </Link>\n                    <FinanceInvoiceEditPaymentDelete node={node} />\n                  </span>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Card>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditPayments))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport { toast } from 'react-toastify'\n\nimport { GET_INVOICES_QUERY, GET_INVOICE_QUERY, CANCEL_AND_CREATE_CREDIT_INVOICE } from '../queries'\nimport { TOKEN_REFRESH } from \"../../../../queries/system/auth\"\nimport { refreshTokenAndOpenExportLinkInNewTab } from \"../../../../tools/refresh_token_and_open_export_link\"\n\nimport {\n  Dropdown,\n  Page,\n  Grid,\n  Icon,\n  Button,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n\nimport CSLS from \"../../../../tools/cs_local_storage\"\n\nimport FinanceInvoiceEditBase from \"./FinanceInvoiceEditBase\"\nimport FinanceInvoiceEditItems from \"./FinanceInvoiceEditItems\"\nimport FinanceInvoiceEditAdditional from \"./FinanceInvoiceEditAdditional\"\nimport FinanceInvoiceEditBalance from \"./FinanceInvoiceEditBalance\"\nimport FinanceInvoiceEditOptions from \"./FinanceInvoiceEditOptions\"\nimport FinanceInvoiceEditOrganization from \"./FinanceInvoiceEditOrganization\"\nimport FinanceInvoiceEditSummary from \"./FinanceInvoiceEditSummary\"\nimport FinanceInvoiceEditTo from \"./FinanceInvoiceEditTo\"\nimport FinanceInvoiceEditPayments from \"./FinanceInvoiceEditPayments\"\n\nfunction FinanceInvoiceEdit({t, match, history}) {\n  const id = match.params.id\n  const { loading, error, data, refetch } = useQuery(GET_INVOICE_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n  const [cancelAndCreateCreditInvoice] = useMutation(CANCEL_AND_CREATE_CREDIT_INVOICE)\n  \n  // Loading\n  if (loading) return <FinanceInvoiceEditBase>{t('general.loading_with_dots')}</FinanceInvoiceEditBase>\n  // Error\n  if (error) {\n    console.log(error)\n    return <FinanceInvoiceEditBase>{t('general.error_sad_smiley')}</FinanceInvoiceEditBase>\n  }\n\n  console.log(data)\n  // Fetch back location from localStorage, if no value set, default back to /finance/invoices\n  let return_url = localStorage.getItem(CSLS.FINANCE_INVOICES_EDIT_RETURN)\n  if (!return_url) {\n    return_url = \"/finance/invoices\"\n  }\n  const export_url = \"/d/export/invoice/pdf/\" + id\n  const payment_add_url = `/finance/invoices/${id}/payment/add`\n\n  return (\n    <FinanceInvoiceEditBase>\n      <Page.Header title={t('finance.invoice.title') + ' #' + data.financeInvoice.invoiceNumber}>\n        <div className=\"page-options d-flex\">\n          {/* Back */}\n          <Link to={return_url} \n                className='btn btn-secondary mr-2'>\n              <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')} \n          </Link>\n          {/* Add payment */}\n          <Link to={payment_add_url} \n              className='btn btn-secondary mr-2'>\n              <Icon prefix=\"fe\" name=\"dollar-sign\" /> {t('finance.invoice.payments.add')} \n          </Link>\n          {/* Export as PDF */}\n          <Button\n            color=\"secondary\"\n            icon=\"printer\"\n            className=\"mr-2\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url\n            )}\n          >\n            {t('general.pdf')} \n          </Button>\n          {/* Tools */}\n          <Dropdown\n            className=\"\"\n            type=\"button\"\n            toggle\n            icon=\"tool\"\n            color=\"secondary\"\n            triggerContent={t(\"general.tools\")}\n            items={[\n              <HasPermissionWrapper permission=\"change\" resource=\"financeinvoice\">\n                <Dropdown.Item\n                  key={v4()}\n                  icon=\"slash\"\n                  onClick={() => {\n                    cancelAndCreateCreditInvoice({ variables: {\n                      input: {\n                        id: id,\n                      }\n                    }, refetchQueries: []\n                    })\n                    .then(({ data }) => {\n                        console.log('got data', data)\n                        const creditInvoiceId = data.cancelAndCreateCreditFinanceInvoice.financeInvoice.id\n                        history.push(`/finance/invoices/edit/${creditInvoiceId}`)\n                        toast.success((t('finance.invoice.now_editing_credit_invoice')), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error)\n                      })\n                  }}>\n                    {t('finance.invoice.cancel_and_create_credit_invoice')}\n                </Dropdown.Item>\n              </HasPermissionWrapper>\n            ]}>\n          </Dropdown>\n        </div>\n      </Page.Header>\n      <Grid.Row>\n        <Grid.Col md={9}>\n          <FinanceInvoiceEditSummary \n            initialData={data}\n          />\n          <Grid.Row>\n            <Grid.Col md={6} ml={0}>\n              <FinanceInvoiceEditOrganization organization={data.organization} />\n            </Grid.Col>\n            <Grid.Col md={6} ml={0}>\n              <FinanceInvoiceEditTo initialData={data} />\n            </Grid.Col>\n          </Grid.Row>\n        </Grid.Col>\n        <Grid.Col md={3}>\n          <FinanceInvoiceEditBalance financeInvoice={data.financeInvoice} />\n          <FinanceInvoiceEditOptions\n            initialData={data}\n          />\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <FinanceInvoiceEditItems inputData={data} refetchInvoice={refetch} />\n          <FinanceInvoiceEditAdditional initialData={data} />\n          <FinanceInvoiceEditPayments inputData={data} />\n        </Grid.Col>\n      </Grid.Row>\n    </FinanceInvoiceEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Badge\n} from \"tabler-react\"\n\n\nconst BadgeBoolean = ({ t, value }) => (\n    (value) ?\n        <Badge color=\"success\">{t('general.yes')}</Badge> :\n        <Badge color=\"danger\">{t('general.no')}</Badge> \n)\n\nexport default withTranslation()(BadgeBoolean)","import { gql } from \"@apollo/client\"\n\nexport const GET_INVOICE_GROUPS_QUERY = gql`\n  query FinanceInvoiceGroupsQuery($archived: Boolean!) {\n    financeInvoiceGroups(archived: $archived) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          name\n          nextId\n          dueAfterDays\n          prefix\n          prefixYear\n          autoResetPrefixYear\n          terms\n          footer\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INVOICE_GROUP_QUERY = gql`\n  query FinanceInvoiceGroup($id: ID!) {\n    financeInvoiceGroup(id:$id) {\n      id\n      archived\n      displayPublic\n      name\n      nextId\n      dueAfterDays\n      prefix\n      prefixYear\n      autoResetPrefixYear\n      terms\n      footer\n      code\n    }\n  }\n`\n\nexport const UPDATE_INVOICE_GROUP = gql`\nmutation UpdateFinanceInvoiceGroup($input: UpdateFinanceInvoiceGroupInput!) {\n  updateFinanceInvoiceGroup(input: $input) {\n    financeInvoiceGroup {\n      id\n      name\n      code\n    }\n  }\n}\n`\n\nexport const ADD_INVOICE_GROUP = gql`\nmutation CreateFinanceInvoiceGroup($input:CreateFinanceInvoiceGroupInput!) {\n  createFinanceInvoiceGroup(input: $input) {\n    financeInvoiceGroup{\n      id\n      archived\n      displayPublic\n      name\n      nextId\n      dueAfterDays\n      prefix\n      prefixYear\n      autoResetPrefixYear\n      terms\n      footer\n      code\n    }\n  }\n}\n`\n\nexport const ARCHIVE_INVOICE_GROUP = gql`\nmutation ArchiveFinanceInvoiceGroup($input: ArchiveFinanceInvoiceGroupInput!) {\n  archiveFinanceInvoiceGroup(input: $input) {\n    financeInvoiceGroup {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  Text\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport ContentCard from \"../../../general/ContentCard\"\nimport FinanceMenu from \"../../FinanceMenu\"\n\nimport { GET_INVOICE_GROUPS_QUERY, ARCHIVE_INVOICE_GROUP } from \"./queries\"\n\n\nfunction FinanceInvoiceGroupsBase({t, history, children, showBack=true}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/finance/invoices\" \n                    className='btn btn-outline-secondary btn-sm mr-2'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('finance.invoices.title')}\n              </Link>\n              <Link to=\"/finance/invoices/groups/defaults\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"settings\" /> {t('finance.invoice_groups_defaults.title')}\n              </Link> \n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/finance/invoices/groups\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financeinvoicegroup\">\n                  <Link to=\"/finance/invoices/groups/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.invoice_groups.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <FinanceMenu activeLink='invoices'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nconst FinanceInvoiceGroups = ({ t, history, archived=false }) => (\n\n            <Query query={GET_INVOICE_GROUPS_QUERY} variables={{ archived }}>\n             {({ loading, error, data: {financeInvoiceGroups: invoice_groups}, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('finance.invoice_groups.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('finance.invoice_groups.title')}>\n                    <p>{t('finance.invoice_groups.error_loading')}</p>\n                  </ContentCard>\n                )\n                const headerOptions = <Card.Options>\n                  <Button color={(!archived) ? 'primary': 'secondary'}  \n                          size=\"sm\"\n                          onClick={() => {archived=false; refetch({archived});}}>\n                    {t('general.current')}\n                  </Button>\n                  <Button color={(archived) ? 'primary': 'secondary'} \n                          size=\"sm\" \n                          className=\"ml-2\" \n                          onClick={() => {archived=true; refetch({archived});}}>\n                    {t('general.archive')}\n                  </Button>\n                </Card.Options>\n                \n                // Empty list\n                if (!invoice_groups.edges.length) { return (\n                  <ContentCard cardTitle={t('finance.invoice_groups.title')}\n                               headerContent={headerOptions}>\n                    <p>\n                    {(!archived) ? t('finance.invoice_groups.empty_list') : t(\"finance.invoice_groups.empty_archive\")}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('finance.invoice_groups.title')}\n                               headerContent={headerOptions}\n                               pageInfo={invoice_groups.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: invoice_groups.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.financeInvoiceGroups.edges\n                                    const pageInfo = fetchMoreResult.financeInvoiceGroups.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new invoice_groups at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          financeInvoiceGroups: {\n                                            __typename: previousResult.financeInvoiceGroups.__typename,\n                                            edges: [ ...previousResult.financeInvoiceGroups.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} \n                    >\n                    <Table>\n                      <Table.Header>\n                        <Table.Row key={v4()}>\n                          <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                          <Table.ColHeader>{t('finance.invoice_groups.next_id')}</Table.ColHeader>\n                          <Table.ColHeader>{t('finance.invoice_groups.due_after_days')}</Table.ColHeader>\n                          <Table.ColHeader>{t('general.prefix')}</Table.ColHeader>\n                          <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                          <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n                        </Table.Row>\n                      </Table.Header>\n                      <Table.Body>\n                          {invoice_groups.edges.map(({ node }) => (\n                            <Table.Row key={v4()}>\n                              <Table.Col key={v4()}>\n                                {node.name}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.nextId}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.dueAfterDays}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.prefix} \n                                {(node.prefixYear) ? <span>[{t('general.year')}]<br /></span>: ''}\n                                {(node.autoResetPrefixYear) ? <Text.Small color=\"gray\">\n                                  {t('finance.invoice_groups.auto_reset_prefix_year')}\n                                </Text.Small>: ''}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                <BadgeBoolean value={node.displayPublic} />\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.code}\n                              </Table.Col>\n                              <Table.Col className=\"text-right\" key={v4()}>\n                                {(node.archived) ? \n                                  <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                  <Button className='btn-sm' \n                                          onClick={() => history.push(\"/finance/invoices/groups/edit/\" + node.id)}\n                                          color=\"secondary\">\n                                    {t('general.edit')}\n                                  </Button>\n                                }\n                              </Table.Col>\n                              <Mutation mutation={ARCHIVE_INVOICE_GROUP} key={v4()}>\n                                {(archiveInvoiceGroup, { data }) => (\n                                  <Table.Col className=\"text-right\" key={v4()}>\n                                    <button className=\"icon btn btn-link btn-sm\" \n                                        title={t('general.archive')} \n                                        href=\"\"\n                                        onClick={() => {\n                                          console.log(\"clicked archived\")\n                                          let id = node.id\n                                          archiveInvoiceGroup({ variables: {\n                                            input: {\n                                            id,\n                                            archived: !archived\n                                            }\n                                    }, refetchQueries: [\n                                        {query: GET_INVOICE_GROUPS_QUERY, variables: {\"archived\": archived }}\n                                    ]}).then(({ data }) => {\n                                      console.log('got data', data);\n                                      toast.success(\n                                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error);\n                                    })\n                                    }}>\n                                      <Icon prefix=\"fa\" name=\"inbox\" />\n                                    </button>\n                                  </Table.Col>\n                                )}\n                              </Mutation>\n                            </Table.Row>\n                          ))}\n                      </Table.Body>\n                    </Table>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n\n);\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupsBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table,\n  Text\n} from \"tabler-react\";\n\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport { GET_INVOICE_GROUPS_QUERY, ARCHIVE_INVOICE_GROUP } from \"./queries\"\nimport FinanceInvoiceGroupsBase from './FinanceInvoiceGroupsBase'\n\n\nfunction FinanceInvoiceGroups({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('finance.invoice_groups.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_INVOICE_GROUPS_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveInvoiceGroup ] = useMutation(ARCHIVE_INVOICE_GROUP)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <FinanceInvoiceGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceInvoiceGroupsBase>\n  )\n\n  if (error) return (\n    <FinanceInvoiceGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.invoice_groups.error_loading')}</p>\n      </ContentCard>\n    </FinanceInvoiceGroupsBase>\n  )\n\n  const invoiceGroups = data.financeInvoiceGroups\n\n  return (\n    <FinanceInvoiceGroupsBase>\n      <ContentCard cardTitle={t('finance.invoice_groups.title')}\n                   headerContent={headerOptions}\n                   pageInfo={invoiceGroups.pageInfo}\n                   onLoadMore={() => {\n                   fetchMore({\n                     variables: {\n                       after: invoiceGroups.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.financeInvoiceGroups.edges\n                        const pageInfo = fetchMoreResult.financeInvoiceGroups.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new invoiceGroups at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              financeInvoiceGroups: {\n                                __typename: previousResult.financeInvoiceGroups.__typename,\n                                edges: [ ...previousResult.financeInvoiceGroups.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} \n        >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoice_groups.next_id')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoice_groups.due_after_days')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.prefix')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {invoiceGroups.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.nextId}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dueAfterDays}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.prefix} \n                    {(node.prefixYear) ? <span>[{t('general.year')}]<br /></span>: ''}\n                    {(node.autoResetPrefixYear) ? <Text.Small color=\"gray\">\n                      {t('finance.invoice_groups.auto_reset_prefix_year')}\n                    </Text.Small>: ''}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <BadgeBoolean value={node.displayPublic} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.code}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/finance/invoices/groups/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveInvoiceGroup({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_INVOICE_GROUPS_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceInvoiceGroupsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroups))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const INVOICE_GROUP_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    dueAfterDays: Yup.number()\n      .moreThan(0, t('yup.field_above_0'))\n      .required(t('yup.field_required')),\n    nextId: Yup.number(),\n    prefix: Yup.string(),\n    prefixYear: Yup.boolean(),\n    autoResetPrefixYear: Yup.boolean(),\n    terms: Yup.string(),\n    footer: Yup.string(),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n\n\nconst FinanceInvoiceGroupForm = ({ t, history, isSubmitting, setFieldTouched, setFieldValue, errors, values, returnUrl, edit=false }) => (\n  <FoForm>\n    <Card.Body>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"displayPublic\" \n                checked={values.displayPublic} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('finance.invoice_groups.public')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n          </Form.Group>    \n        </Grid.Col>\n      </Grid.Row>\n      <Form.Group label={t('general.name')}>\n        <Field type=\"text\" \n                name=\"name\" \n                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Grid.Row>\n        {(edit) ?\n        <Grid.Col>\n          <Form.Group label={t('finance.invoice_groups.next_id')}>\n            <Field type=\"text\" \n                    name=\"nextId\" \n                    className={(errors.nextId) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"nextId\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col> : \"\"}\n        <Grid.Col>\n          <Form.Group label={t('finance.invoice_groups.due_after_days')}>\n            <Field type=\"text\" \n                    name=\"dueAfterDays\" \n                    className={(errors.dueAfterDays) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"dueAfterDays\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Form.Group label={t('general.prefix')}>\n        <Field type=\"text\" \n                name=\"prefix\" \n                className={(errors.prefix) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"prefix\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"prefixYear\" \n                checked={values.prefixYear} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('finance.invoice_groups.prefix_year')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"prefixYear\" component=\"div\" />   \n          </Form.Group>   \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"autoResetPrefixYear\" \n                checked={values.autoResetPrefixYear} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('finance.invoice_groups.auto_reset_prefix_year')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"autoResetPrefixYear\" component=\"div\" />   \n          </Form.Group>   \n        </Grid.Col>\n      </Grid.Row>\n      <Form.Group label={t('general.terms')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"terms\"\n          initialValue={values.terms}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldTouched(\"terms\", true, true)\n            setFieldValue(\"terms\", e.target.getContent())\n          }}\n        />\n        <ErrorMessage name=\"terms\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.footer')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"footer\"\n          initialValue={values.footer}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldTouched(\"footer\", true, true)\n            setFieldValue(\"footer\", e.target.getContent())\n          }}\n        />\n        <ErrorMessage name=\"footer\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('finance.code')}>\n        <Field type=\"text\" \n                name=\"code\" \n                className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button \n            type=\"button\" \n            color=\"link\">\n              {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupForm))","import React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_INVOICE_GROUPS_QUERY, ADD_INVOICE_GROUP } from './queries'\nimport { INVOICE_GROUP_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport FinanceInvoiceGroupsBase from './FinanceInvoiceGroupsBase';\nimport FinanceInvoiceGroupForm from './FinanceInvoiceGroupForm'\n\n\nfunction FinanceInvoiceGroupAdd({ t, history }) {\n  const returnUrl = \"/finance/invoices/groups\"\n  const [addInvoiceGroup] = useMutation(ADD_INVOICE_GROUP)\n\n  return (\n    <FinanceInvoiceGroupsBase showBack={true}>\n      <Card title={t('finance.invoice_groups.title_add')}>\n        <Formik\n          initialValues={{ \n            name: '', \n            displayPublic: true,\n            dueAfterDays: 30,\n            prefix: 'INV',\n            prefixYear: true,\n            autoResetPrefixYear: true,\n            terms: '',\n            footer: '',\n            code: '' \n          }}\n          validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addInvoiceGroup({ variables: {\n                input: {\n                  name: values.name, \n                  displayPublic: values.displayPublic,\n                  dueAfterDays: values.dueAfterDays,\n                  prefix: values.prefix,\n                  prefixYear: values.prefixYear,\n                  autoResetPrefixYear: values.autoResetPrefixYear,\n                  terms: values.terms,\n                  footer: values.footer,\n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_INVOICE_GROUPS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('finance.invoice_groups.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, values, errors, setFieldValue, setFieldTouched }) => (\n            <FinanceInvoiceGroupForm \n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n            />\n          )}\n        </Formik>\n      </Card>\n    </FinanceInvoiceGroupsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_INVOICE_GROUPS_QUERY, GET_INVOICE_GROUP_QUERY, UPDATE_INVOICE_GROUP } from './queries'\nimport { INVOICE_GROUP_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport FinanceInvoiceGroupForm from './FinanceInvoiceGroupForm'\nimport FinanceInvoiceGroupsBase from './FinanceInvoiceGroupsBase';\n\n\nfunction FinanceInvoiceGroupEdit({t, history, match}) {\n  const id = match.params.id\n  const returnUrl = \"/finance/invoices/groups\"\n  const cardTitle = t('finance.invoice_groups.title_edit')\n  const { loading, error, data } = useQuery(GET_INVOICE_GROUP_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateInvoiceGroup ] = useMutation(UPDATE_INVOICE_GROUP)\n\n  if (loading) return (\n    <FinanceInvoiceGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceInvoiceGroupsBase>\n  )\n\n  if (error) return (\n    <FinanceInvoiceGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.invoice_groups.error_loading')}</p>\n      </ContentCard>\n    </FinanceInvoiceGroupsBase>\n  )\n                    \n  const initialData = data.financeInvoiceGroup;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <FinanceInvoiceGroupsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            displayPublic: initialData.displayPublic,\n            dueAfterDays: initialData.dueAfterDays,\n            nextId: initialData.nextId,\n            prefix: initialData.prefix,\n            prefixYear: initialData.prefixYear,\n            autoResetPrefixYear: initialData.autoResetPrefixYear,\n            terms: initialData.terms,\n            footer: initialData.footer,\n            code: initialData.code\n          }}\n          validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateInvoiceGroup({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name, \n                  displayPublic: values.displayPublic,\n                  nextId: values.nextId,\n                  dueAfterDays: values.dueAfterDays,\n                  prefix: values.prefix,\n                  prefixYear: values.prefixYear,\n                  autoResetPrefixYear: values.autoResetPrefixYear,\n                  terms: values.terms,\n                  footer: values.footer,\n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_INVOICE_GROUPS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('finance.invoice_groups.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <FinanceInvoiceGroupForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              edit={true}\n            />\n          )}\n        </Formik>\n      </Card>\n    </FinanceInvoiceGroupsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport {\n  Dimmer,\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\n\nconst FinanceInvoiceGroupDefaultForm = ({ t, history, inputData, isSubmitting, setFieldTouched, setFieldValue, errors, values, submitForm }) => (\n  <FoForm>\n    <Dimmer active={isSubmitting} loader={isSubmitting} >\n      <Form.Group>\n        <Field component=\"select\" \n              name=\"financeInvoiceGroup\" \n              className={(errors.financeInvoiceGroup) ? \"form-control is-invalid\" : \"form-control\"} \n              onChange={(e) => {\n                setFieldValue('financeInvoiceGroup', e.target.value)\n                setFieldTouched('financeInvoiceGroup', true)\n                setTimeout(() => {submitForm()}, 200)\n              }}\n              autoComplete=\"off\">\n          {inputData.financeInvoiceGroups.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name}</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"financeInvoiceGroup\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>  \n    </Dimmer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupDefaultForm))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const INVOICE_GROUP_DEFAULT_SCHEMA = Yup.object().shape({\n    financeInvoiceGroup: Yup.string(),\n  })\n","import { gql } from \"@apollo/client\"\n\nexport const GET_INVOICE_GROUPS_DEFAULTS_QUERY = gql`\nquery FinanceInvoiceGroupDefaults {\n  financeInvoiceGroupDefaults(first: 100) {\n    edges {\n      node {\n        id\n        itemType\n        financeInvoiceGroup {\n          id\n          name\n        }\n      }\n    }\n  }\n}\n`\n\nexport const GET_INVOICE_GROUP_QUERY = gql`\n  query FinanceInvoiceGroup($id: ID!) {\n    financeInvoiceGroup(id:$id) {\n      id\n      archived\n      displayPublic\n      name\n      nextId\n      dueAfterDays\n      prefix\n      prefixYear\n      autoResetPrefixYear\n      terms\n      footer\n      code\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { Formik } from 'formik'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  Text\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport FinanceMenu from \"../../../FinanceMenu\"\nimport FinanceInvoiceGroupDefaultForm from './FinanceInvoiceGroupDefaultForm'\n\nimport { INVOICE_GROUP_DEFAULT_SCHEMA } from \"./yupSchema\"\nimport { GET_INVOICE_GROUPS_QUERY } from \"../queries\"\nimport { GET_INVOICE_GROUPS_DEFAULTS_QUERY } from \"./queries\"\n\n\nconst UPDATE_INVOICE_GROUP_DEFAULT = gql`\n  mutation UpdateFinanceInvoiceGroupDefault($input: UpdateFinanceInvoiceGroupDefaultInput!) {\n    updateFinanceInvoiceGroupDefault(input: $input) {\n      financeInvoiceGroupDefault {\n        id\n        itemType\n        financeInvoiceGroup {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nconst fetch_default_type_name = (t, itemType) => {\n  switch(itemType) {\n    case \"MEMBERSHIPS\":\n      return t('finance.invoice_groups_defaults.MEMBERSHIPS')\n      break\n    case \"SUBSCRIPTIONS\":\n      return t('finance.invoice_groups_defaults.SUBSCRIPTIONS')\n      break\n    case \"CLASSPASSES\":\n      return t('finance.invoice_groups_defaults.CLASSPASSES')\n      break\n    case \"DROPINCLASSES\":\n      return t('finance.invoice_groups_defaults.DROPINCLASSES')\n      break\n    case \"TRIALCLASSES\":\n      return t('finance.invoice_groups_defaults.TRIALCLASSES')\n      break\n    case \"EVENT_TICKETS\":\n      return t('finance.invoice_groups_defaults.EVENT_TICKETS')\n      break\n    case \"SHOP_SALES\":\n      return t('finance.invoice_groups_defaults.SHOP_SALES')\n      break\n    case \"TEACHER_PAYMENTS\":\n      return t('finance.invoice_groups_defaults.TEACHER_PAYMENTS')\n      break\n    case \"EMPLOYEE_EXPENSES\":\n      return t('finance.invoice_groups_defaults.EMPLOYEE_EXPENSES')\n      break\n    default:\n      return t('finance.invoice_groups_defaults.TYPE_NOT_FOUND')\n  }\n}\n\n\n\nconst FinanceInvoiceGroupsDefaults = ({ t, history }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"finance.title\")}>\n          <div className=\"page-options d-flex\">\n            <Link to=\"/finance/invoices/groups\" \n                  className='btn btn-outline-secondary btn-sm'>\n                <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('finance.invoice_groups.title')}\n            </Link>\n          </div>\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            <Query query={GET_INVOICE_GROUPS_DEFAULTS_QUERY} variables={{}}>\n             {({ loading, error, data: {financeInvoiceGroupDefaults: invoice_group_defaults}, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('finance.invoice_groups_defaults.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('finance.invoice_groups_defaults.title')}>\n                    <p>{t('finance.invoice_groups_defaults.error_loading')}</p>\n                  </ContentCard>\n                )\n                \n                // Empty list\n                if (!invoice_group_defaults.edges.length) { return (\n                  <ContentCard cardTitle={t('finance.invoice_groups_defaults.title')}>\n                    <p>\n                      {t('finance.invoice_groups_defaults.empty_list')}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('finance.invoice_groups_defaults.title')}\n                               pageInfo={invoice_group_defaults.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: invoice_group_defaults.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.financeInvoiceGroups.edges\n                                    const pageInfo = fetchMoreResult.financeInvoiceGroups.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new invoice_groups_defaults at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          financeInvoiceGroups: {\n                                            __typename: previousResult.financeInvoiceGroups.__typename,\n                                            edges: [ ...previousResult.financeInvoiceGroups.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} \n                    >\n                    <Table>\n                      <Table.Header>\n                        <Table.Row key={v4()}>\n                          <Table.ColHeader>{t('finance.invoice_groups_defaults.item_type')}</Table.ColHeader>\n                          <Table.ColHeader>{t('finance.invoice_groups_defaults.invoice_group')}</Table.ColHeader>\n                        </Table.Row>\n                      </Table.Header>\n                      <Table.Body>\n                          {invoice_group_defaults.edges.map(({ node }) => (\n                            <Table.Row key={v4()}>\n                              <Table.Col key={v4()}>\n                                { fetch_default_type_name(t, node.itemType) }\n                              </Table.Col>\n                              <Table.Col>\n                                <Query query={GET_INVOICE_GROUPS_QUERY} variables={{archived: false}}>\n                                  {({ loading, error, data, refetch, fetchMore }) => {\n                                    // Loading\n                                    if (loading) return ( \"Loading...\")\n                                    // Error\n                                    if (error) return ( \"error loading\" )\n\n                                    const inputData = data\n\n                                    return (\n                                      <Mutation mutation={UPDATE_INVOICE_GROUP_DEFAULT} key={v4()}>\n                                        {(updateDefault, { data }) => (\n                                          <Formik\n                                            initialValues={{ \n                                              financeInvoiceGroup:node.financeInvoiceGroup.id\n                                            }}\n                                            validationSchema={INVOICE_GROUP_DEFAULT_SCHEMA}\n                                            onSubmit={(values, { setSubmitting }) => {\n                                                console.log('submit values:')\n                                                console.log(values)\n\n                                                updateDefault({ variables: {\n                                                  input: {\n                                                    id: node.id,\n                                                    financeInvoiceGroup: values.financeInvoiceGroup\n                                                  }\n                                                }, refetchQueries: [\n                                                    // {query: GET_INVOICE_GROUPS_QUERY, variables: {\"archived\": false }}\n                                                ]})\n                                                .then(({ data }) => {\n                                                    console.log('got data', data)\n                                                    toast.success((t('finance.invoice_groups.toast_edit_success')), {\n                                                        position: toast.POSITION.BOTTOM_RIGHT\n                                                      })\n                                                  }).catch((error) => {\n                                                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                                        position: toast.POSITION.BOTTOM_RIGHT\n                                                      })\n                                                    console.log('there was an error sending the query', error)\n                                                    setSubmitting(false)\n                                                  })\n                                            }}\n                                            >\n                                            {({ isSubmitting, errors, values, setFieldTouched, setFieldValue, submitForm }) => (\n                                              <FinanceInvoiceGroupDefaultForm\n                                                inputData={inputData}\n                                                isSubmitting={isSubmitting}\n                                                errors={errors}\n                                                values={values}\n                                                setFieldTouched={setFieldTouched}\n                                                setFieldValue={setFieldValue}\n                                                submitForm={submitForm}\n                                              />\n                                            )}\n                                        </Formik>\n                                        )}\n                                      </Mutation>\n                                    )}}\n                                  </Query>\n                                </Table.Col>\n                            </Table.Row>\n                          ))}\n                      </Table.Body>\n                    </Table>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <h5>{t(\"general.menu\")}</h5>\n            <FinanceMenu activeLink='invoices'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupsDefaults))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_INVOICE_PAYMENT_QUERY = gql`\n  query FinanceInvoicePayment($id: ID!) {\n    financeInvoicePayment(id:$id) {\n      id\n      date\n      amount\n      financePaymentMethod {\n        id\n        name\n      }\n      note\n      onlinePaymentId\n    }\n  }\n`\n\nexport const UPDATE_FINANCE_INVOICE_PAYMENT = gql`\n  mutation UpdateFinanceInvoicePayment($input:UpdateFinanceInvoicePaymentInput!) {\n    updateFinanceInvoicePayment(input:$input) {\n      financeInvoicePayment {\n        id\n      } \n    }\n  }\n`\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const FINANCE_INVOICE_PAYMENT_SCHEMA = Yup.object().shape({\n  // account: Yup.string()\n  //   .required(t('yup.field_required')),\n  // role: Yup.string(),\n  // account2: Yup.string(),\n  // role2: Yup.string(),\n  // dateStart: Yup.date()\n  //   .required(t('yup.field_required')),\n  // // dateEnd: Yup.date()\n  })\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\n// import { GET_INVOICE_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { GET_INVOICE_QUERY } from \"../queries\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\n// import ScheduleClassPriceBack from \"./ScheduleClassPriceBack\"\nimport FinanceInvoiceEditBalance from \"../edit/FinanceInvoiceEditBalance\"\n\n\nfunction FinanceInvoicePaymentBase({ t, history, match, children, form_type=\"create\" }) {\n  const invoiceId = match.params.invoice_id\n  const return_url = \"/finance/invoices/edit/\" + invoiceId\n  const { loading: queryLoading, error: queryError, data, } = useQuery(GET_INVOICE_QUERY, {\n    variables: {\n      id: invoiceId\n    }\n  })\n\n  if (queryLoading) return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <p>{t('general.loading_with_dots')}</p>\n      </div>\n    </SiteWrapper>\n  )\n  // Error\n  if (queryError) {\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          { console.log(queryError) }\n          <p>{t('general.error_sad_smiley')}</p>\n        </div>\n      </SiteWrapper>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const invoice_number = inputData.financeInvoice.invoiceNumber\n\n  let title\n  if ( form_type == \"create\" ) {\n    title = t('finance.invoice.payments.add')\n  } else {\n    title = t('finance.invoice.payments.edit')\n  }\n\n  title = title + \" #\" + invoice_number\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={ title }>\n            <div className=\"page-options d-flex\">\n              {/* Back */}\n              <Link to={return_url} \n                    className='btn btn-secondary mr-2'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')} \n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={8}>\n              {/* Form can go here */}\n              {children} \n            </Grid.Col>\n            <Grid.Col md={4}>\n            <Card statusColor=\"blue\">\n              <Card.Header>\n                <Card.Title>{t('general.info')}</Card.Title>\n              </Card.Header>\n              <Card.Body padding={0}>\n                <h4> #{ invoice_number } </h4>\n                { inputData.financeInvoice.account.fullName } <br />\n                { inputData.financeInvoice.summary }\n              </Card.Body>\n            </Card>\n            <FinanceInvoiceEditBalance financeInvoice={inputData.financeInvoice} />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoicePaymentBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\nconst FinanceInvoicePaymentForm = ({ t, history, match, isSubmitting, errors, values, inputData, return_url, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n    <Card statusColor=\"blue\">\n      <Card.Header>\n        <Card.Title>{t('general.details')}</Card.Title>\n      </Card.Header>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date')}>\n              <CSDatePicker \n                selected={values.date}\n                onChange={(date) => setFieldValue(\"date\", date)}\n                onBlur={() => setFieldTouched(\"date\", true)}\n              />\n              <ErrorMessage name=\"date\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.amount')}>\n              <Field type=\"text\" \n                      name=\"amount\" \n                      className={(errors.amount) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"amount\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.payment_method')}>\n              <Field component=\"select\" \n                      name=\"financePaymentMethod\" \n                      className={(errors.financePaymentMethod) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in finance payment form:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('')}</option>\n                {inputData.financePaymentMethods.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financePaymentMethod\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.note')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"note\"\n                initialValue={values.note}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldValue(\"note\", e.target.getContent())\n                  setFieldTouched(\"note\", true)\n                }}\n              />\n            <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(return_url)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </Card>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(FinanceInvoicePaymentForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n\n\nimport { get_list_query_variables } from \"../tools\"\n\nimport { GET_INVOICE_QUERY, GET_INVOICES_QUERY } from \"../queries\"\nimport { GET_INPUT_VALUES_QUERY } from './queries'\nimport { FINANCE_INVOICE_PAYMENT_SCHEMA } from './yupSchema'\n// import ScheduleClassPriceForm from './ScheduleClassPriceForm'\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport SiteWrapper from \"../../../SiteWrapper\"\n\nimport FinanceInvoicePaymentBase from \"./FinanceInvoicePaymentBase\"\nimport FinanceInvoicePaymentForm from \"./FinanceInvoicePaymentForm\"\n\n\nconst ADD_FINANCE_INVOICE_PAYMENT = gql`\n  mutation CreateFinanceInvoicePayment($input:CreateFinanceInvoicePaymentInput!) {\n    createFinanceInvoicePayment(input:$input) {\n      financeInvoicePayment {\n        id\n      } \n    }\n  }\n`\n\n\nfunction FinanceInvoicePaymentAdd({ t, history, match }) {\n  const invoiceId = match.params.invoice_id\n  const return_url = \"/finance/invoices/edit/\" + invoiceId\n  const { loading: queryLoading, error: queryError, data, } = useQuery(GET_INVOICE_QUERY, {\n    variables: {\n      id: invoiceId\n    }\n  })\n  const [addInvoicePayment, { mutationData, mutationLoading, mutationError, onCompleted }] = useMutation(ADD_FINANCE_INVOICE_PAYMENT, {\n    onCompleted: () => history.push(return_url),\n  })\n\n  if (queryLoading) return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <p>{t('general.loading_with_dots')}</p>\n      </div>\n    </SiteWrapper>\n  )\n  // Error\n  if (queryError) {\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          { console.log(queryError) }\n          <p>{t('general.error_sad_smiley')}</p>\n        </div>\n      </SiteWrapper>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n\n\n  return (\n    <FinanceInvoicePaymentBase form_type={\"create\"}>\n      <Formik\n        initialValues={{ \n          date: new Date() ,\n          amount: inputData.financeInvoice.balance,\n          financePaymentMethod: \"\",\n          note: \"\"\n        }}\n        // validationSchema={FINANCE_INVOICE_PAYMENT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n            addInvoicePayment({ variables: {\n              input: {\n                financeInvoice: invoiceId,\n                date: dateToLocalISO(values.date),\n                amount: values.amount,\n                financePaymentMethod: values.financePaymentMethod,\n                note: values.note\n              }\n            }, refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables() },\n                {query: GET_INVOICE_QUERY, variables: { id: invoiceId }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('finance.invoice.payments.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <FinanceInvoicePaymentForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            return_url={return_url}\n          />\n        )}\n      </Formik>\n    </FinanceInvoicePaymentBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoicePaymentAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport { get_list_query_variables } from \"../tools\"\n\nimport { GET_INVOICE_QUERY, GET_INVOICES_QUERY } from \"../queries\"\nimport { GET_INVOICE_PAYMENT_QUERY, UPDATE_FINANCE_INVOICE_PAYMENT } from './queries'\nimport { FINANCE_INVOICE_PAYMENT_SCHEMA } from './yupSchema'\n// import ScheduleClassPriceForm from './ScheduleClassPriceForm'\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport SiteWrapper from \"../../../SiteWrapper\"\n\nimport FinanceInvoicePaymentBase from \"./FinanceInvoicePaymentBase\"\nimport FinanceInvoicePaymentForm from \"./FinanceInvoicePaymentForm\"\n\n\n\nfunction FinanceInvoicePaymentEdit({ t, history, match }) {\n  const invoiceId = match.params.invoice_id\n  const id = match.params.id\n  console.log(invoiceId)\n  console.log(id)\n\n  const return_url = \"/finance/invoices/edit/\" + invoiceId\n  const { loading: invoiceQueryLoading, error: invoiceQueryError, data: invoiceData, } = useQuery(GET_INVOICE_QUERY, {\n    variables: {\n      id: invoiceId\n    }\n  })\n  const { loading: paymentQueryLoading, error: paymentQueryError, data: paymentData, } = useQuery(GET_INVOICE_PAYMENT_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n  const [updateInvoicePayment, { mutationData, mutationLoading, mutationError, onCompleted }] = useMutation(UPDATE_FINANCE_INVOICE_PAYMENT, {\n    onCompleted: () => history.push(return_url),\n  })\n\n  if (invoiceQueryLoading || paymentQueryLoading) return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <p>{t('general.loading_with_dots')}</p>\n      </div>\n    </SiteWrapper>\n  )\n  // Error\n  if (invoiceQueryError) {\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          { console.log(invoiceQueryError) }\n          <p>{t('general.error_sad_smiley')}</p>\n        </div>\n      </SiteWrapper>\n    )\n  }\n  // Error\n  if (paymentQueryError) {\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          { console.log(paymentQueryError) }\n          <p>{t('general.error_sad_smiley')}</p>\n        </div>\n      </SiteWrapper>\n    )\n  }\n\n  console.log('query data')\n  console.log(invoiceData)\n  console.log(paymentData)\n  const inputData = invoiceData\n  const initialValues = paymentData.financeInvoicePayment\n\n  let initialPaymentMethod\n  if (initialValues.financePaymentMethod) {\n    initialPaymentMethod = initialValues.financePaymentMethod.id\n  }\n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let initialDate = null\n  if (initialValues.date) {\n    initialDate = new Date(initialValues.date)\n  }\n\n  return (\n    <FinanceInvoicePaymentBase form_type={\"update\"}>\n      <Formik\n        initialValues={{ \n          date: initialDate,\n          amount: initialValues.amount,\n          financePaymentMethod: initialPaymentMethod,\n          note: initialValues.note\n        }}\n        // validationSchema={FINANCE_INVOICE_PAYMENT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n            updateInvoicePayment({ variables: {\n              input: {\n                id: id,\n                date: dateToLocalISO(values.date),\n                amount: values.amount,\n                financePaymentMethod: values.financePaymentMethod,\n                note: values.note\n              }\n            }, refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables() },\n                {query: GET_INVOICE_QUERY, variables: { id: invoiceId }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('finance.invoice.payments.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n        }\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <FinanceInvoicePaymentForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            return_url={return_url}\n          />\n        )}\n      </Formik>\n    </FinanceInvoicePaymentBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoicePaymentEdit))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let queryVars = {}\n\n  let status = localStorage.getItem(CSLS.FINANCE_ORDERS_FILTER_STATUS)\n  if (status) {\n    queryVars.status = status\n  } else {\n    queryVars.status = undefined\n  }\n  \n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from './tools'\n\n\nfunction getDefaultValue(value) {\n  let defaultValue = localStorage.getItem(value)\n  console.log(defaultValue)\n\n  if (defaultValue) {\n    return defaultValue\n  } else {\n    console.log('return empty default')\n    return \"\"\n  }\n}\n\n\nfunction updateLocalStorageAndRefetch(key, value, refetch) {\n  localStorage.setItem(key, value)\n  refetch(get_list_query_variables())\n\n}\n\nconst selectClass = \"form-control mb-2\"\n\n\nconst FinanceOrdersFilter = ({ t, history, data, refetch }) => (\n  <div>\n    {/* Status */}\n    <select \n      className={selectClass}\n      value={getDefaultValue(CSLS.FINANCE_ORDERS_FILTER_STATUS)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.FINANCE_ORDERS_FILTER_STATUS,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t('finance.orders.statuses.all')}</option>\n      <option value=\"RECEIVED\" key={v4()}>{t('finance.orders.statuses.RECEIVED')}</option>\n      <option value=\"AWAITING_PAYMENT\" key={v4()}>{t('finance.orders.statuses.AWAITING_PAYMENT')}</option>\n      <option value=\"PAID\" key={v4()}>{t('finance.orders.statuses.PAID')}</option>\n      <option value=\"DELIVERED\" key={v4()}>{t('finance.orders.statuses.DELIVERED')}</option>\n      <option value=\"CANCELLED\" key={v4()}>{t('finance.orders.statuses.CANCELLED')}</option>\n    </select>\n  </div>\n);\n\nexport default withTranslation()(withRouter(FinanceOrdersFilter))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Container,\n  Grid,\n  Page\n} from \"tabler-react\";\n\nimport SiteWrapper from \"../../SiteWrapper\"\n\nimport FinanceOrdersFilter from \"./FinanceOrdersFilter\"\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nconst FinanceOrdersBase = ({ t, history, children, refetch }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"finance.title\")}>\n          <div className=\"page-options d-flex\">\n          </div>\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            {children}\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n            <FinanceOrdersFilter refetch={refetch}/>\n            <h5>{t(\"general.menu\")}</h5>\n            <FinanceMenu activeLink='orders'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n)\n\nexport default withTranslation()(withRouter(FinanceOrdersBase))","// @flow\n\nimport React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Badge\n} from \"tabler-react\";\n\n\nclass FinanceOrderStatus extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"finance order status props:\")\n    console.log(props)\n  }\n\n  // ('RECEIVED', _(\"Received\")),\n  // ('AWAITING_PAYMENT', _(\"Awaiting payment\")),\n  // ('PAID', _(\"Paid\")),\n  // ('DELIVERED', _(\"Delivered\")),\n  // ('CANCELLED', _(\"Cancelled\")),\n\n  render() {\n    const t = this.props.t\n    const history = this.props.history\n    const status = this.props.status\n\n    switch (status) {\n      case \"RECEIVED\":\n        return <Badge color=\"secondary\">{t('finance.orders.statuses.RECEIVED')}</Badge>\n        break\n      case \"AWAITING_PAYMENT\":\n        return <Badge color=\"primary\">{t('finance.orders.statuses.AWAITING_PAYMENT')}</Badge>\n        break\n      case \"PAID\":\n        return <Badge color=\"success\">{t('finance.orders.statuses.PAID')}</Badge>\n        break\n      case \"DELIVERED\":\n        return <Badge color=\"success\">{t('finance.orders.statuses.DELIVERED')}</Badge>\n        break\n      case \"CANCELLED\":\n        return <Badge color=\"warning\">{t('finance.orders.statuses.CANCELLED')}</Badge>\n        break\n      default:\n        return t('finance.orders.statuses.NOT_FOUND') \n    }\n  }\n}\n\n\nexport default withTranslation()(withRouter(FinanceOrderStatus))","import { gql } from \"@apollo/client\"\n\nexport const GET_ORDERS_QUERY = gql`\n  query FinanceOrders($after: String, $before: String, $status: String) {\n    financeOrders(first: 15, before: $before, after: $after, status: $status) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          orderNumber\n          account {\n            id\n            fullName\n          }\n          message\n          status\n          total\n          totalDisplay\n          createdAt\n        }\n      }\n    }\n  }\n`\n\nexport const GET_ORDER_QUERY = gql`\n  query FinanceOrder($id: ID!) {\n    financeOrder(id: $id) {\n      id\n      orderNumber\n      account {\n        id\n        fullName\n      }\n      message\n      status\n      total\n      totalDisplay\n      createdAt\n      items {\n        edges {\n          node {\n            id\n            productName\n          }\n        }\n      }\n      \n    }\n  }\n`\n\n\nexport const UPDATE_FINANCE_ORDER = gql`\n  mutation UpdateFinanceOrder($input: UpdateFinanceOrderInput!) {\n    updateFinanceOrder(input: $input) {\n      financeOrder {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_FINANCE_ORDER = gql`\n  mutation DeleteFinanceOrder($input: DeleteFinanceOrderInput!) {\n    deleteFinanceOrder(input: $input) {\n      ok\n    }\n  }\n`\n","import React, { useContext } from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n// import { get_list_query_variables } from \"../tools\"\nimport { DELETE_FINANCE_ORDER, GET_ORDERS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\nimport moment from 'moment'\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport { get_list_query_variables } from \"./tools\"\n\n\nfunction FinanceOrderDelete({t, match, node}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const [deleteOrder, { data }] = useMutation(DELETE_FINANCE_ORDER)\n\n    return (\n      <button className=\"icon btn btn-link btn-sm\" \n        title={t('general.delete')} \n        href=\"\"\n        onClick={() => {\n          confirm_delete({\n            t: t,\n            msgConfirm: t(\"finance.orders.delete_confirm_msg\"),\n            msgDescription: <p>{t(\"general.order\")} # { node.orderNumber }</p>,\n            msgSuccess: t('finance.orders.deleted'),\n            deleteFunction: deleteOrder,\n            functionVariables: { \n              variables: {\n                input: {\n                  id: node.id\n                }\n              }, \n              refetchQueries: [\n                {query: GET_ORDERS_QUERY, variables: get_list_query_variables() },\n              ]\n            }\n          })\n      }}>\n        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n      </button>\n    )\n}\n\n\nexport default withTranslation()(withRouter(FinanceOrderDelete))\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table, \n  Text\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport { get_list_query_variables } from \"./tools\"\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceOrdersBase from './FinanceOrdersBase'\nimport FinanceOrderStatus from \"./FinanceOrderStatus\"\nimport FinanceOrderDelete from \"./FinanceOrderDelete\"\n\nimport { GET_ORDERS_QUERY, DELETE_FINANCE_ORDER } from \"./queries\"\n\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport moment from 'moment'\n\n\n\nfunction FinanceOrders({t, match, history}) {\n  const title = t(\"shop.home.title\")\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_ORDERS_QUERY, {\n    variables: {get_list_query_variables},\n    fetchPolicy: \"network-only\"\n  })\n\n  if (loading) return (\n    <FinanceOrdersBase title={title}>\n      {t(\"general.loading_with_dots\")}\n    </FinanceOrdersBase>\n  )\n\n  if (error) return (\n    <FinanceOrdersBase title={title}>\n      {t(\"finance.orders.error_loading\")}\n    </FinanceOrdersBase>\n  )\n\n  console.log(data)\n  const orders = data.financeOrders\n  console.log(orders)\n\n  // Empty list\n  if (!orders.edges.length) { return (\n    <FinanceOrdersBase refetch={refetch}>\n      <ContentCard cardTitle={t('finance.orders.title')}>\n        <p>\n          {t('finance.orders.empty_list')}\n        </p>\n      </ContentCard>\n    </FinanceOrdersBase>\n  )}\n\n  return (\n    <FinanceOrdersBase title={title} refetch={refetch}>\n      <ContentCard \n        cardTitle={t('finance.orders.title')} \n        pageInfo={orders.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: orders.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.financeOrders.edges\n              const pageInfo = fetchMoreResult.financeOrders.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new invoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    financeOrders: {\n                      __typename: previousResult.financeOrders.__typename,\n                      edges: [ ...previousResult.financeOrders.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.order_number')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.relation')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.date')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {orders.edges.map(({ node }) => (        \n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    <FinanceOrderStatus status={node.status} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    # {node.orderNumber}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.account && node.account.fullName}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {moment(node.createdAt).format('LL')}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.totalDisplay}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <Link to={\"/finance/orders/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <FinanceOrderDelete node={node}/>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceOrdersBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceOrders))","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\"\n\n\nexport function get_list_query_variables(batchType) {\n  let queryVars = {\n    batchType: batchType.toUpperCase()\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n\nexport function get_add_options_collection(t, batchType) {\n  return (\n    <List unstyled>\n      <List.Item>\n        <Link to={`/finance/paymentbatches/${batchType}/add/invoices`}>\n          <b>{t(\"finance.payment_batch_collections.invoices_batch\")} <Icon name=\"chevron-right\" /></b>\n        </Link><br />\n        <p>{t(\"finance.payment_batch_collections.invoices_batch_description\")}</p>\n      </List.Item>\n      <List.Item>\n        <Link to={`/finance/paymentbatches/${batchType}/add/category`}>\n          <b>{t(\"finance.payment_batch_collections.category_batch\")} <Icon name=\"chevron-right\" /></b>\n        </Link><br />\n        <p>{t(\"finance.payment_batch_collections.category_batch_description\")}</p>\n      </List.Item>\n    </List>\n  )\n}\n\n\nexport function get_add_options_payment(t, batchType) {\n  return (\n    <List unstyled>\n      <List.Item>\n        <Link to={`/finance/paymentbatches/${batchType}/add/category`}>\n          <b>{t(\"finance.payment_batch_payments.category_batch\")} <Icon name=\"chevron-right\" /></b>\n        </Link><br />\n        <p>{t(\"finance.payment_batch_payments.category_batch_description\")}</p>\n      </List.Item>\n    </List>\n  )\n}","import React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Badge\n} from \"tabler-react\"\n\n\nfunction BadgeFinancePaymentBatchStatus({ t, status }) {\n  switch (status) {\n    case \"SENT_TO_BANK\":\n      return <Badge color=\"success\">{t('finance.payment_batches.status.SENT_TO_BANK')}</Badge> \n      break\n    case \"APPROVED\":\n      return <Badge color=\"success\">{t('finance.payment_batches.status.APPROVED')}</Badge> \n      break\n    case \"AWAITING_APPROVAL\":\n      return <Badge color=\"primary\">{t('finance.payment_batches.status.AWAITING_APPROVAL')}</Badge> \n      break\n    case \"REJECTED\":\n      return <Badge color=\"danger\">{t('finance.payment_batches.status.REJECTED')}</Badge> \n      break\n    default:\n      return t(\"finance.payment_batches.status.invalid_type\")\n  }\n}\n\nexport default withTranslation()(BadgeFinancePaymentBatchStatus)\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinancePaymentBatchesBase({t, history, match, children, showAdd=false, showBack=false, returnUrl=\"\"}) {\n  const batchType = match.params.batch_type\n\n  let activeLink\n  if (batchType == 'collection') {\n    activeLink = 'payment_batch_collections'\n  } else {\n    activeLink = 'payment_batch_payments'\n  }\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showAdd) ?\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financepaymentbatch\">\n                  <Link to={`/finance/paymentbatches/${batchType}/add_what`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.payment_batches.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              {(showBack) ?\n                <HasPermissionWrapper permission=\"view\"\n                                      resource=\"financepaymentbatch\">\n                  <Link to={returnUrl}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              <FinanceMenu activeLink={activeLink} />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_PAYMENT_BATCHES_QUERY = gql`\n  query FinancePaymentBatches($after: String, $before: String, $batchType: String!) {\n    financePaymentBatches(first: 15, before: $before, after: $after, batchType: $batchType) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          status\n          financePaymentBatchCategory {\n            id\n            name\n          }\n          description\n          batchType\n          year\n          month\n          includeZeroAmounts\n          note\n        }\n      }\n    }\n  }\n`\n\nexport const GET_PAYMENT_BATCH_QUERY = gql`\n  query FinancePaymentBatch($id: ID!) {\n    financePaymentBatch(id:$id) {\n      id\n      name\n      status\n      financePaymentBatchCategory {\n        id\n        name\n      }\n      description\n      batchType\n      year\n      month\n      includeZeroAmounts\n      note\n      totalDisplay\n      countItems\n      items {\n        pageInfo {\n          startCursor\n          endCursor\n          hasNextPage\n          hasPreviousPage\n        }\n        edges {\n          node {\n            id\n            account {\n              id\n              fullName\n            }\n            financeInvoice {\n              id\n              invoiceNumber\n            }\n            accountHolder\n            accountNumber\n            accountBic\n            mandateReference\n            mandateSignatureDate\n            amount\n            amountDisplay\n            currency\n            description\n          }\n        }\n      }\n      exports {\n        pageInfo {\n          startCursor\n          endCursor\n          hasNextPage\n          hasPreviousPage\n        }\n        edges {\n          node {\n            id\n            account {\n              id\n              fullName\n            }\n            createdAt\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES = gql`\n  query InputValues($after: String, $before: String, $batchCategoryType: String!) {\n    financePaymentBatchCategories(first: 1000, before:$before, after:$after, archived:false, batchCategoryType: $batchCategoryType) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const ADD_PAYMENT_BATCH = gql`\n  mutation CreateFinancePaymentBatch($input:CreateFinancePaymentBatchInput!) {\n    createFinancePaymentBatch(input: $input) {\n      financePaymentBatch {\n        id\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_PAYMENT_BATCH = gql`\n  mutation UpdateFinancePaymentBatch($input:UpdateFinancePaymentBatchInput!) {\n    updateFinancePaymentBatch(input: $input) {\n      financePaymentBatch {\n        id\n      }\n    }\n  }\n`\n\n\nexport const DELETE_PAYMENT_BATCH = gql`\n  mutation DeleteFinancePaymentBatch($input: DeleteFinancePaymentBatchInput!) {\n    deleteFinancePaymentBatch(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport { get_list_query_variables } from \"./tools\"\n\n// import FinancePaymentBatchCategory from \"../../ui/FinancePaymentBatchCategory\"\nimport BadgeFinancePaymentBatchStatus from \"../../ui/BadgeFinancePaymentBatchStatus\"\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceMenu from \"../FinanceMenu\"\nimport FinancePaymentBatchesBase from \"./FinancePaymentBatchesBase\"\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport confirm_delete from \"../../../tools/confirm_delete\"\n\nimport { GET_PAYMENT_BATCHES_QUERY, DELETE_PAYMENT_BATCH } from \"./queries\"\nimport moment from 'moment'\n\nfunction FinancePaymentBatches({t, history, match }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const batchType = match.params.batch_type\n\n  const { loading, error, data, fetchMore, refetch } = useQuery(GET_PAYMENT_BATCHES_QUERY, {\n    variables: get_list_query_variables(batchType),\n  })\n  const [deletePaymentBatch] = useMutation(DELETE_PAYMENT_BATCH)\n\n  let cardTitle\n  let msgEmptyList\n  if (batchType == \"collection\") {\n    cardTitle = t('finance.payment_batch_collections.title')\n    msgEmptyList = t('finance.payment_batch_collections.empty_list')\n  } else {\n    cardTitle = t('finance.payment_batch_payments.title')\n    msgEmptyList = t('finance.payment_batch_payments.empty_list')\n  }\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinancePaymentBatchesBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.payment_batches.error_loading')}</p>\n      </ContentCard>\n      </FinancePaymentBatchesBase>\n  )\n\n  let financePaymentBatches = data.financePaymentBatches\n  // Empty list\n  if (!financePaymentBatches.edges.length) { return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <ContentCard cardTitle={cardTitle} >\n        <p>{msgEmptyList}</p>\n      </ContentCard>\n    </FinancePaymentBatchesBase>\n  )}\n\n  return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <ContentCard cardTitle={cardTitle}\n        pageInfo={financePaymentBatches.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: financePaymentBatches.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.financePaymentBatches.edges\n            const pageInfo = fetchMoreResult.financePaymentBatches.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new payment_methods at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  financePaymentBatches: {\n                    __typename: previousResult.financePaymentBatches.__typename,\n                    edges: [ ...previousResult.financePaymentBatches.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n            }\n        })\n      }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.payment_batches.execution_date')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.payment_batches.batch_category')}</Table.ColHeader>             \n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {financePaymentBatches.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  <BadgeFinancePaymentBatchStatus status={node.status} />\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.name}\n                </Table.Col>\n                <Table.Col>\n                  {moment(node.executionDate).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  {(node.financePaymentBatchCategory) ? node.financePaymentBatchCategory.name : t(\"general.invoices\")}\n                  {(node.year) ? <div><small className=\"text-muted\">{node.year} - {node.month}</small></div> : \"\"}\n                </Table.Col>\n                <Table.Col>\n                  <Link to={`/finance/paymentbatches/${batchType}/view/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.view')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <button className=\"icon btn btn-link btn-sm\" \n                    title={t('general.delete')} \n                    href=\"\"\n                    onClick={() => {\n                      confirm_delete({\n                        t: t,\n                        msgConfirm: t(\"finance.payment_batches.delete_confirm_msg\"),\n                        msgDescription: <p>{node.name}</p>,\n                        msgSuccess: t('finance.payment_batches.deleted'),\n                        deleteFunction: deletePaymentBatch,\n                        functionVariables: { variables: {\n                          input: {\n                            id: node.id\n                          }\n                        }, refetchQueries: [\n                          {query: GET_PAYMENT_BATCHES_QUERY, variables: get_list_query_variables(batchType) } \n                        ]}\n                      })\n                  }}>\n                    <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                  </button>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinancePaymentBatchesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatches))","// @flow\n\nimport React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Badge\n} from \"tabler-react\";\n\n\nclass FinancePaymentBatchCategory extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"finance payment batch category props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const categoryType = this.props.categoryType\n\n    switch (categoryType) {\n      case \"COLLECTION\":\n        return <Badge color=\"success\">{t('finance.payment_batch_categories.payment_batch_category_type.COLLECTION')}</Badge>\n        break\n      case \"PAYMENT\":\n        return <Badge color=\"warning\">{t('finance.payment_batch_categories.payment_batch_category_type.PAYMENT')}</Badge>\n        break\n      default:\n        return t('finance.payment_batch_categories.payment_batch_category_type.NOT_FOUND') \n    }\n  }\n}\n\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategory))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport FinancePaymentBatchCategory from \"../../ui/FinancePaymentBatchCategory\"\nimport ContentCard from \"../../general/ContentCard\"\nimport FinancePaymentBatchesBase from \"./FinancePaymentBatchesBase\"\n\nimport { get_add_options_collection, get_add_options_payment } from './tools'\n\n\nfunction FinancePaymentBatchAddWhat({t, history, match }) {\n  const batchType = match.params.batch_type\n  const returnUrl = `/finance/paymentbatches/${batchType}`\n\n  let cardTitle\n  let options\n  if (batchType == \"collection\") {\n    cardTitle = t('finance.payment_batch_collections.title_add_what')\n    options = get_add_options_collection(t, batchType)\n  } else {\n    cardTitle = t('finance.payment_batch_payments.title_add_what')\n    options = get_add_options_payment(t, batchType)\n  }\n\n  return (\n    <FinancePaymentBatchesBase showBack={true} returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          {options}\n        </Card.Body>\n      </Card>\n    </FinancePaymentBatchesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchAddWhat))","// @flow\n\nimport React, {useState} from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { useMutation } from \"@apollo/client\"\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { toast } from 'react-toastify'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { UPDATE_PAYMENT_BATCH, GET_PAYMENT_BATCHES_QUERY } from \"./queries\"\nimport { get_list_query_variables } from \"./tools\"\n\n\nfunction FinancePaymentBatchViewBase({t, history, match, children, status}) {\n  const batchId = match.params.id\n  const batchType = match.params.batch_type\n  const returnUrl = `/finance/paymentbatches/${batchType}`\n  const exportUrl = `/d/export/finance_payment_batch/csv/${batchId}`\n  const [disabled, setDisabled] = useState(false)\n\n  const [updateFinancePaymentBatch] = useMutation(UPDATE_PAYMENT_BATCH)\n\n  let sentToBankColor = \"secondary\"\n  let approvedColor = \"secondary\"\n  let awaitingApprovalColor = \"secondary\"\n  let rejectedColor = \"secondary\"\n\n  switch (status) {\n    case \"SENT_TO_BANK\":\n      sentToBankColor = \"success\"\n      break\n    case \"APPROVED\":\n      approvedColor = \"success\"\n      break\n    case \"AWAITING_APPROVAL\":\n      awaitingApprovalColor = \"primary\"\n      break\n    case \"REJECTED\":\n      rejectedColor = \"danger\"\n      break\n    default:\n      break\n  }\n\n  function onClickStatusButton(newStatus) {\n    setDisabled(true)\n\n    updateFinancePaymentBatch({ \n      variables: { input: {id: batchId, status: newStatus} }, \n      refetchQueries: [\n        {query: GET_PAYMENT_BATCHES_QUERY, variables: get_list_query_variables(batchType)}\n    ]})\n    .then(({ data }) => {\n        console.log('got data', data);\n        toast.success((t('finance.payment_batches.toast_edit_status_success')), {\n            position: toast.POSITION.BOTTOM_RIGHT\n          })\n        if (status != \"SENT_TO_BANK\") {\n          console.log(status)\n          setDisabled(false)\n        }\n      }).catch((error) => {\n        toast.error((t('general.toast_server_error')) + ': ' +  error, {\n            position: toast.POSITION.BOTTOM_RIGHT\n          })\n        console.log('there was an error sending the query', error)\n        if (status != \"SENT_TO_BANK\") {\n          console.log(status)\n          setDisabled(false)\n        }\n      })\n  }\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} subTitle={t('finance.payment_batch.title_view')}>\n            <div className=\"page-options d-flex\">\n                <Link to={returnUrl} \n                      className='btn btn-secondary mr-2'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')}\n                </Link>\n                {/* Export as PDF */}\n                <a href={exportUrl} \n                    className='btn btn-secondary mr-2'>\n                    <Icon prefix=\"fe\" name=\"download\" /> {t('general.export')} \n                </a>\n                <Link to={`/finance/paymentbatches/${batchType}/edit/${batchId}`} \n                      className='btn btn-secondary mr-2'>\n                  <Icon name=\"edit-2\" /> {t('general.edit')}\n                </Link>\n                {(status) ? \n                  (status == \"SENT_TO_BANK\") ?\n                    <Button.List>\n                      <Button \n                        icon=\"mail\"\n                        disabled={true}\n                        color={sentToBankColor}\n                        onClick={() => onClickStatusButton(\"SENT_TO_BANK\")}\n                      >\n                        {t('finance.payment_batch.status.SENT_TO_BANK')}\n                      </Button>\n                    </Button.List>\n                  :\n                    <Button.List>\n                      <Button \n                        icon=\"mail\"\n                        disabled={disabled}\n                        color={sentToBankColor}\n                        onClick={() => onClickStatusButton(\"SENT_TO_BANK\")}\n                      >\n                        {t('finance.payment_batch.status.SENT_TO_BANK')}\n                      </Button>\n                      <Button \n                        icon=\"check\"\n                        disabled={disabled}\n                        color={approvedColor}\n                        onClick={() => onClickStatusButton(\"APPROVED\")}\n                      >\n                        {t('finance.payment_batch.status.APPROVED')}\n                      </Button>\n                      <Button \n                        icon=\"clock\"\n                        disabled={disabled}\n                        color={awaitingApprovalColor}\n                        onClick={() => onClickStatusButton(\"AWAITING_APPROVAL\")}\n                      >\n                        {t('finance.payment_batch.status.AWAITING_APPROVAL')}\n                      </Button>\n                      <Button \n                        icon=\"x\"\n                        disabled={disabled}\n                        color={rejectedColor}\n                        onClick={() => onClickStatusButton(\"REJECTED\")}\n                      >\n                        {t('finance.payment_batch.status.REJECTED')}\n                      </Button>\n                    </Button.List>\n                  : \"\"\n                }\n            </div>\n          </Page.Header>\n          {children}\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchViewBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\nimport CSDatePicker from \"../../ui/CSDatePicker\"\n\n\nconst FinancePaymentCollectionBatchForm = (\n  { t, history, isSubmitting, setFieldTouched, setFieldValue, errors, values, inputData, returnUrl, create=false, category=false }\n  ) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.name')}>\n              <Field type=\"text\" \n                      name=\"name\" \n                      className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          {(create) ? \n            <Grid.Col>\n              <Form.Group label={t('finance.payment_batches.execution_date')}>\n                <CSDatePicker \n                  selected={values.executionDate}\n                  onChange={(executionDate) => {\n                    setFieldValue(\"executionDate\", executionDate)\n                    setFieldTouched(\"executionDate\", true)\n                  }}\n                  onBlur={() => setFieldTouched(\"executionDate\", true)}\n                  placeholderText={t('')}\n                />\n                <ErrorMessage name=\"executionDate\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n            : \"\" \n          }\n        </Grid.Row>\n        {(create && category) ?\n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group label={t('general.category')}>\n                <Field component=\"select\" \n                        name=\"financePaymentBatchCategory\" \n                        className={(errors.financePaymentBatchCategory) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\">\n                  <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                  {inputData.financePaymentBatchCategories.edges.map(({ node }) =>\n                    <option value={node.id} key={v4()}>{node.name}</option>\n                  )}\n                </Field>\n                <ErrorMessage name=\"financePaymentBatchCategory\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n            <Grid.Col>\n              <Form.Group label={t('general.year')} >\n                <Field type=\"text\" \n                      name=\"year\" \n                      className={(errors.year) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n                <ErrorMessage name=\"year\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n            <Grid.Col>\n              <Form.Group label={t('general.month')} >\n                <Field type=\"text\" \n                      name=\"month\" \n                      className={(errors.month) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n                <ErrorMessage name=\"month\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          </Grid.Row> \n          : \"\"\n        }\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.note')}>\n              <Field type=\"textarea\"\n                     component=\"textarea\" \n                     name=\"note\" \n                     className={(errors.note) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        {(create) ? \n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group>\n                <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"includeZeroAmounts\" \n                  checked={values.includeZeroAmounts} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('finance.payment_batches.include_zero_amounts')}</span>\n                </Form.Label>\n                <ErrorMessage name=\"includeZeroAmounts\" component=\"div\" />   \n              </Form.Group>  \n            </Grid.Col>\n          </Grid.Row>\n          : \"\" \n        }\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(FinancePaymentCollectionBatchForm))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport { GET_PAYMENT_BATCHES_QUERY, GET_PAYMENT_BATCH_QUERY } from './queries'\n// import { PAYMENT_BATCH_CATEGORY_SCHEMA } from './yupSchema'\nimport { get_list_query_variables } from \"./tools\"\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n  List,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\nimport BooleanBadge from \"../../ui/BadgeBoolean\"\nimport FinancePaymentBatchCategory from \"../../ui/FinancePaymentBatchCategory\"\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport FinanceMenu from '../FinanceMenu'\nimport FinancePaymentBatchViewBase from './FinancePaymentBatchViewBase'\nimport FinancePaymentCollectionBatchForm from './FinancePaymentCollectionBatchForm'\nimport BadgeBoolean from '../../ui/BadgeBoolean';\n\nfunction FinancePaymentBatchView({ t, history, match }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n  const batchType = match.params.batch_type\n  const batchId = match.params.id\n  const returnUrl = `/finance/paymentbatches/${batchType}`\n\n  const { loading, error, data } = useQuery(GET_PAYMENT_BATCH_QUERY, {\n    variables: { id: batchId }\n  })\n  // const [updateFinancePaymentBatch] = useMutation(UPDATE_PAYMENT_BATCH)\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchViewBase>\n      <p>{t(\"general.loading_with_dots\")}</p>\n    </FinancePaymentBatchViewBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchViewBase>\n      <p>{t('finance.payment_batch.error_loading')}</p>\n    </FinancePaymentBatchViewBase>\n  )\n\n  const financePaymentBatch = data.financePaymentBatch\n  console.log(financePaymentBatch)\n\n  return (\n    <FinancePaymentBatchViewBase status={financePaymentBatch.status}>\n      <Grid.Row>\n        <Grid.Col md={4}>\n          <Card title={t(\"finance.payment_batch.title_batch_info\")}>\n            <Table cards>\n              <Table.Body>\n                <Table.Row>\n                  <Table.Col>\n                    {t(\"general.name\")}\n                  </Table.Col>\n                  <Table.Col>\n                    {financePaymentBatch.name}\n                  </Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Col>\n                    {t('finance.payment_batch_categories.batch_category_type')}\n                  </Table.Col>\n                  <Table.Col>\n                    <FinancePaymentBatchCategory categoryType={financePaymentBatch.batchType} />\n                  </Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Col>\n                    {t('finance.payment_batches.batch_category')}\n                  </Table.Col>\n                  <Table.Col>\n                    {\n                      (financePaymentBatch.financePaymentBatchCategory) ? \n                        <div>\n                          {financePaymentBatch.financePaymentBatchCategory.name}\n                          <div><small className=\"text-muted\">{financePaymentBatch.year} - {financePaymentBatch.month}</small></div>\n                        </div> : \n                        t(\"general.invoices\")\n                    }\n                  </Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Col>\n                    {t('finance.payment_batches.execution_date')}\n                  </Table.Col>\n                  <Table.Col>\n                    {moment(financePaymentBatch.executionDate).format(dateFormat)}\n                  </Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Col>\n                    {t('finance.payment_batches.include_zero_amounts')}\n                  </Table.Col>\n                  <Table.Col>\n                    <BadgeBoolean value={financePaymentBatch.includeZeroAmounts} />\n                  </Table.Col>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"finance.payment_batch.title_batch_totals\")}>\n            <Table cards>\n              <Table.Row>\n                <Table.Col>\n                  {t('general.total')}\n                </Table.Col>\n                <Table.Col>\n                  {financePaymentBatch.totalDisplay}\n                </Table.Col>\n              </Table.Row>\n              <Table.Row>\n                <Table.Col>\n                  {t('general.items')}\n                </Table.Col>\n                <Table.Col>\n                  {financePaymentBatch.countItems}\n                </Table.Col>\n              </Table.Row>\n            </Table>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"finance.payment_batch.title_batch_exports\")}>\n            <Card.Body>\n              <List unstyled>\n              {financePaymentBatch.exports.edges.map(({ node }) => (\n                <List.Item>\n                  {moment(node.createdAt).format(dateTimeFormat)} <br /> \n                  <small>{node.account.fullName}</small>\n                </List.Item>\n              ))}\n              </List>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n      {(financePaymentBatch.note) ?\n        <Grid.Row>\n          <Grid.Col md={12}>\n              <Card title={t(\"finance.payment_batch.title_batch_note\")}>\n                <Card.Body>\n                  {financePaymentBatch.note}\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n      : \"\" }\n      <Grid.Row>\n        <Grid.Col>\n          <Card title={t(\"finance.payment_batch.title_batch_items\")}>\n            <small>\n              <Table cards >\n                <Table.Header>\n                  <Table.Row>\n                    <Table.ColHeader>\n                      {t(\"general.line\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"general.account\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"relations.account.bank_accounts.holder\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"relations.account.bank_accounts.number\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"general.description\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"settings.finance.currency.title\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"general.amount\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"finance.invoices.invoice_number\")}\n                    </Table.ColHeader>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {financePaymentBatch.items.edges.map(({ node }, index) => (\n                    <Table.Row>\n                      <Table.Col>{index + 1}</Table.Col>\n                      <Table.Col>\n                        <Link to={`/relations/accounts/${node.account.id}/profile`}>\n                          {node.account.fullName}\n                        </Link>\n                      </Table.Col>\n                      <Table.Col>\n                        {node.accountHolder}\n                      </Table.Col>\n                      <Table.Col>\n                        {node.accountNumber} {(node.accountBic) ? <div>{node.accountBic}</div> : \"\"}\n                      </Table.Col>\n                      <Table.Col>\n                        {node.description}\n                      </Table.Col>\n                      <Table.Col>\n                        {node.currency}\n                      </Table.Col>\n                      <Table.Col>\n                        {node.amountDisplay}\n                      </Table.Col>\n                      <Table.Col>\n                        {(node.financeInvoice) ?\n                          <Link to={`/finance/invoices/edit/${node.financeInvoice.id}`}>\n                            {node.financeInvoice.invoiceNumber}\n                          </Link> : \"\" }\n                      </Table.Col>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </small>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n      {/* <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: '', description: '', executionDate: new Date() }}\n          // validationSchema={PAYMENT_BATCH_CATEGORY_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            let input = {\n                batchType: batchType.toUpperCase(),\n                name: values.name, \n                executionDate: dateToLocalISO(values.executionDate),\n                description: values.description,\n                note: values.note,\n                includeZeroAmounts: values.includeZeroAmounts\n            }\n\n            if (categoryType == \"category\") {\n              input.year = values.year\n              input.month = values.month\n              input.financePaymentBatchCategory = values.financePaymentBatchCategory\n            }\n\n            addFinancePaymentBatch({ \n              variables: { input: input }, \n              refetchQueries: [\n                {query: GET_PAYMENT_BATCHES_QUERY, variables: get_list_query_variables(batchType)}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('finance.payment_batches.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldValue, setFieldTouched }) => (\n              <FinancePaymentCollectionBatchForm\n                inputValues={inputValues}\n                create={true}\n                invoices={invoices}\n                category={category}\n                isSubmitting={isSubmitting}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                values={values}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card> */}\n    </FinancePaymentBatchViewBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchView))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const PAYMENT_BATCH_INVOICES_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    executionDate: Yup.date()\n      .required(t('yup.field_required')),\n    note: Yup.string(),\n    includeZeroAmounts: Yup.boolean()\n  })\n\nexport const PAYMENT_BATCH_CATEGORY_SCHEMA = Yup.object().shape({\n  name: Yup.string()\n    .min(3, t('yup.min_len_3'))\n    .required(t('yup.field_required')),\n  executionDate: Yup.date()\n    .required(t('yup.field_required')),\n  financePaymentBatchCategory: Yup.string()\n  .required(t('yup.field_required')),\n  year: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  month: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  note: Yup.string(),\n  includeZeroAmounts: Yup.boolean()\n  })\n\nexport const PAYMENT_BATCH_EDIT_SCHEMA = Yup.object().shape({\n  name: Yup.string()\n    .min(3, t('yup.min_len_3'))\n    .required(t('yup.field_required')),\n})","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { ADD_PAYMENT_BATCH, GET_PAYMENT_BATCHES_QUERY, GET_INPUT_VALUES } from './queries'\nimport { PAYMENT_BATCH_INVOICES_SCHEMA, PAYMENT_BATCH_CATEGORY_SCHEMA } from './yupSchema'\nimport { get_list_query_variables } from \"./tools\"\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\n\nimport FinanceMenu from '../FinanceMenu'\nimport FinancePaymentBatchesBase from './FinancePaymentBatchesBase'\nimport FinancePaymentCollectionBatchForm from './FinancePaymentCollectionBatchForm'\n\n\nfunction FinancePaymentCollectionBatchAdd({ t, history, match }) {\n  const batchType = match.params.batch_type\n  const returnUrl = `/finance/paymentbatches/${batchType}`\n  const categoryType = match.params.category_type\n  const cardTitle = t('finance.payment_batch.title_add')\n\n\n  let invoices = false\n  let category = false\n  switch (categoryType) {\n    case \"invoices\":\n      invoices = true\n      break\n    case \"category\":\n      category = true\n      break\n    default:\n      break\n  }\n\n  let batchCategoryType\n  switch (batchType) {\n    case \"collection\":\n      batchCategoryType = \"COLLECTION\"\n      break\n    case \"payment\":\n      batchCategoryType = \"PAYMENT\"\n      break\n    default:\n      break\n  }\n\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES, { variables: {\n    batchCategoryType: batchCategoryType\n  }})\n  const [addFinancePaymentBatch] = useMutation(ADD_PAYMENT_BATCH)\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <Card cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </Card>\n    </FinancePaymentBatchesBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <Card cardTitle={cardTitle}>\n        <p>{t('finance.payment_batches.error_loading_input_values')}</p>\n      </Card>\n      </FinancePaymentBatchesBase>\n  )\n\n  const inputData = data\n\n  let initialValues = { name: '', description: '', executionDate: new Date() }\n  let yupSchema\n  if (categoryType == \"category\") {\n    initialValues.year = new Date().getFullYear()\n    initialValues.month = new Date().getMonth() + 1\n    yupSchema = PAYMENT_BATCH_CATEGORY_SCHEMA\n  } else {\n    yupSchema = PAYMENT_BATCH_INVOICES_SCHEMA\n  }\n\n  return (\n    <FinancePaymentBatchesBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={yupSchema}\n          onSubmit={(values, { setSubmitting }) => {\n            let input = {\n                batchType: batchType.toUpperCase(),\n                name: values.name, \n                executionDate: dateToLocalISO(values.executionDate),\n                description: values.description,\n                note: values.note,\n                includeZeroAmounts: values.includeZeroAmounts\n            }\n\n            if (categoryType == \"category\") {\n              input.year = values.year\n              input.month = values.month\n              input.financePaymentBatchCategory = values.financePaymentBatchCategory\n            }\n\n            addFinancePaymentBatch({ \n              variables: { input: input }, \n              refetchQueries: [\n                {query: GET_PAYMENT_BATCHES_QUERY, variables: get_list_query_variables(batchType)}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                const id = data.createFinancePaymentBatch.financePaymentBatch.id\n                history.push(`/finance/paymentbatches/${batchType}/view/${id}`)\n                toast.success((t('finance.payment_batches.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldValue, setFieldTouched }) => (\n              <FinancePaymentCollectionBatchForm\n                inputData={inputData}\n                create={true}\n                invoices={invoices}\n                category={category}\n                isSubmitting={isSubmitting}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                values={values}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </FinancePaymentBatchesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentCollectionBatchAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { UPDATE_PAYMENT_BATCH, GET_PAYMENT_BATCH_QUERY, GET_PAYMENT_BATCHES_QUERY } from './queries'\nimport { PAYMENT_BATCH_EDIT_SCHEMA } from './yupSchema'\nimport { get_list_query_variables } from \"./tools\"\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\n\nimport FinanceMenu from '../FinanceMenu'\nimport FinancePaymentBatchesBase from './FinancePaymentBatchesBase'\nimport FinancePaymentCollectionBatchForm from './FinancePaymentCollectionBatchForm'\n\n\nfunction FinancePaymentCollectionBatchEdit({ t, history, match }) {\n  const batchType = match.params.batch_type\n  const batchId = match.params.id\n  const returnUrl = `/finance/paymentbatches/${batchType}/view/${batchId}`\n  const cardTitle = t('finance.payment_batch.title_edit')\n\n\n  const { loading, error, data } = useQuery(GET_PAYMENT_BATCH_QUERY, {\n    variables: { id: batchId }\n  })\n  const [updateFinancePaymentBatch] = useMutation(UPDATE_PAYMENT_BATCH)\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchesBase showAdd={false} returnUrl={returnUrl}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <Dimmer active={true} loader={true} />\n        </Card.Body>\n      </Card>\n    </FinancePaymentBatchesBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchesBase showAdd={true} returnUrl={returnUrl}>\n      <Card title={cardTitle}>\n        <p>{t('finance.payment_batches.error_loading_input_values')}</p>\n      </Card>\n      </FinancePaymentBatchesBase>\n  )\n\n  const inputValues = data.financePaymentBatch\n\n  return (\n    <FinancePaymentBatchesBase showBack={true} returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: inputValues.name , note: inputValues.note }}\n          validationSchema={PAYMENT_BATCH_EDIT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            let input = {\n                id: batchId,\n                name: values.name, \n                note: values.note,\n            }\n\n            updateFinancePaymentBatch({ \n              variables: { input: input }, \n              refetchQueries: [\n                {query: GET_PAYMENT_BATCHES_QUERY, variables: get_list_query_variables(batchType)}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('finance.payment_batches.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldValue, setFieldTouched }) => (\n              <FinancePaymentCollectionBatchForm\n                create={false}\n                isSubmitting={isSubmitting}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                values={values}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </FinancePaymentBatchesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentCollectionBatchEdit))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let showArchive = localStorage.getItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE)\n  if (showArchive === null) {\n    showArchive = \"false\"\n  }\n\n  let queryVars = {\n    archived: (showArchive === \"true\") ? true : false,\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinancePaymentBatchCategoriesBase({t, history, children, showAdd=false, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showAdd) ?\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financepaymentbatchcategory\">\n                  <Link to={\"/finance/paymentbatchcategories/add\"}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.payment_batch_categories.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              {(showBack) ?\n                <HasPermissionWrapper permission=\"view\"\n                                      resource=\"financepaymentbatchcategory\">\n                  <Link to=\"/finance/paymentbatchcategories\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              <FinanceMenu activeLink='payment_batch_categories'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategoriesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_PAYMENT_BATCH_CATEGORIES_QUERY = gql`\n  query FinancePaymentBatchCategories($after: String, $before: String, $archived: Boolean) {\n    financePaymentBatchCategories(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          description\n          batchCategoryType\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_PAYMENT_BATCH_CATEGORY_QUERY = gql`\n  query FinancePaymentBatchCategory($id: ID!) {\n    financePaymentBatchCategory(id:$id) {\n      id\n      name\n      description\n      archived\n    }\n  }\n`\n\n\nexport const ARCHIVE_PAYMENT_BATCH_CATEGORY = gql`\n  mutation ArchiveFinancePaymentBatchCategory($input: ArchiveFinancePaymentBatchCategoryInput!) {\n    archiveFinancePaymentBatchCategory(input: $input) {\n      financePaymentBatchCategory {\n        id\n        archived\n      }\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport { get_list_query_variables } from \"./tools\"\n\nimport FinancePaymentBatchCategory from \"../../ui/FinancePaymentBatchCategory\"\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceMenu from \"../FinanceMenu\"\nimport FinancePaymentBatchCategoriesBase from \"./FinancePaymentBatchCategoriesBase\"\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport { GET_PAYMENT_BATCH_CATEGORIES_QUERY, ARCHIVE_PAYMENT_BATCH_CATEGORY } from \"./queries\"\n\nfunction FinancePaymentBatchCategories({t, history}) {\n  const { loading, error, data, fetchMore, refetch } = useQuery(GET_PAYMENT_BATCH_CATEGORIES_QUERY, {\n    variables: get_list_query_variables(),\n  })\n  const [archivePaymentBatchCategory] = useMutation(ARCHIVE_PAYMENT_BATCH_CATEGORY)\n\n  // TODO: use local storage for archive buttons\n  const headerOptions = <Card.Options>\n    <Button color={(localStorage.getItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE) != \"true\") ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {\n              localStorage.setItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE, false)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.current')}\n    </Button>\n    <Button color={(localStorage.getItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE) === \"true\") ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {\n              localStorage.setItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE, true)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchCategoriesBase showAdd={true}>\n      <ContentCard cardTitle={t('finance.payment_batch_categories.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinancePaymentBatchCategoriesBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchCategoriesBase showAdd={true}>\n      <ContentCard cardTitle={t('finance.payment_batch_categories.title')}>\n        <p>{t('finance.payment_batch_categories.error_loading')}</p>\n      </ContentCard>\n      </FinancePaymentBatchCategoriesBase>\n  )\n\n  let payment_batch_categories = data.financePaymentBatchCategories\n  // Empty list\n  if (!payment_batch_categories.edges.length) { return (\n    <FinancePaymentBatchCategoriesBase showAdd={true}>\n      <ContentCard cardTitle={t('finance.payment_batch_categories.title')}\n                    headerContent={headerOptions}>\n        <p>\n          { (localStorage.getItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE === \"true\")) ? \n              t(\"finance.payment_batch_categories.empty_archive\") :\n              t('finance.payment_batch_categories.empty_list')\n          }\n        </p>\n      </ContentCard>\n    </FinancePaymentBatchCategoriesBase>\n  )}\n\n  return (\n    <FinancePaymentBatchCategoriesBase showAdd={true}>\n      <ContentCard cardTitle={t('finance.payment_batch_categories.title')}\n        headerContent={headerOptions}\n        pageInfo={payment_batch_categories.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: payment_batch_categories.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.financePaymentBatchCategories.edges\n            const pageInfo = fetchMoreResult.financePaymentBatchCategories.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new payment_methods at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  financePaymentBatchCategories: {\n                    __typename: previousResult.financePaymentBatchCategories.__typename,\n                    edges: [ ...previousResult.financePaymentBatchCategories.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n            }\n        })\n      }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.payment_batch_categories.batch_category_type')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {payment_batch_categories.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  {node.name}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  <FinancePaymentBatchCategory categoryType={node.batchCategoryType} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/finance/paymentbatchcategories/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.archive')} \n                      onClick={() => {\n                        console.log(\"clicked archived\")\n                        let id = node.id\n                        archivePaymentBatchCategory({ variables: {\n                          input: {\n                          id,\n                          archived: !node.archived\n                        }\n                      }, refetchQueries: [\n                          {query: GET_PAYMENT_BATCH_CATEGORIES_QUERY, variables: get_list_query_variables()}\n                      ]}).then(({ data }) => {\n                        console.log('got data', data);\n                        toast.success(\n                          (node.archived) ? t('general.unarchived'): t('general.archived'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error);\n                        })\n                      }}>\n                    <Icon prefix=\"fa\" name=\"inbox\" />\n                  </button>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinancePaymentBatchCategoriesBase>\n  )\n}\n\n\n\n// const FinancePaymentMethods = ({ t, history, archived=false }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t(\"finance.title\")} />\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//             <Query query={GET_PAYMENT_METHODS_QUERY} variables={{ archived }}>\n//              {({ loading, error, data: {financePaymentMethods: payment_methods}, refetch, fetchMore }) => {\n//                 // Loading\n//                 if (loading) return (\n//                   <ContentCard cardTitle={t('finance.payment_methods.title')}>\n//                     <Dimmer active={true}\n//                             loader={true}>\n//                     </Dimmer>\n//                   </ContentCard>\n//                 )\n//                 // Error\n//                 if (error) return (\n//                   <ContentCard cardTitle={t('finance.payment_methods.title')}>\n//                     <p>{t('finance.payment_methods.error_loading')}</p>\n//                   </ContentCard>\n//                 )\n//                 const headerOptions = <Card.Options>\n//                   <Button color={(!archived) ? 'primary': 'secondary'}  \n//                           size=\"sm\"\n//                           onClick={() => {archived=false; refetch({archived});}}>\n//                     {t('general.current')}\n//                   </Button>\n//                   <Button color={(archived) ? 'primary': 'secondary'} \n//                           size=\"sm\" \n//                           className=\"ml-2\" \n//                           onClick={() => {archived=true; refetch({archived});}}>\n//                     {t('general.archive')}\n//                   </Button>\n//                 </Card.Options>\n                \n//                 // Empty list\n//                 if (!payment_methods.edges.length) { return (\n//                   <ContentCard cardTitle={t('finance.payment_methods.title')}\n//                                headerContent={headerOptions}>\n//                     <p>\n//                     {(!archived) ? t('finance.payment_methods.empty_list') : t(\"finance.payment_methods.empty_archive\")}\n//                     </p>\n                   \n//                   </ContentCard>\n//                 )} else {   \n//                 // Life's good! :)\n//                 return (\n//                   <ContentCard cardTitle={t('finance.payment_methods.title')}\n//                                headerContent={headerOptions}\n//                                pageInfo={payment_methods.pageInfo}\n//                                onLoadMore={() => {\n//                                 fetchMore({\n//                                   variables: {\n//                                     after: payment_methods.pageInfo.endCursor\n//                                   },\n//                                   updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                     const newEdges = fetchMoreResult.financePaymentMethods.edges\n//                                     const pageInfo = fetchMoreResult.financePaymentMethods.pageInfo\n\n//                                     return newEdges.length\n//                                       ? {\n//                                           // Put the new payment_methods at the end of the list and update `pageInfo`\n//                                           // so we have the new `endCursor` and `hasNextPage` values\n//                                           financePaymentMethods: {\n//                                             __typename: previousResult.financePaymentMethods.__typename,\n//                                             edges: [ ...previousResult.financePaymentMethods.edges, ...newEdges ],\n//                                             pageInfo\n//                                           }\n//                                         }\n//                                       : previousResult\n//                                   }\n//                                 })\n//                               }} >\n//                     <Table>\n//                           <Table.Header>\n//                             <Table.Row key={v4()}>\n//                               <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n//                             </Table.Row>\n//                           </Table.Header>\n//                           <Table.Body>\n//                               {payment_methods.edges.map(({ node }) => (\n//                                 <Table.Row key={v4()}>\n//                                   <Table.Col key={v4()}>\n//                                     {node.name}\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     {node.code}\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     {(node.archived) ? \n//                                       <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/finance/paymentmethods/edit/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('general.edit')}\n//                                       </Button>\n//                                     }\n//                                   </Table.Col>\n//                                   {(node.systemMethod) ? \n//                                     <Table.Col></Table.Col> :\n//                                     <Mutation mutation={ARCHIVE_PAYMENT_METHOD} key={v4()}>\n//                                       {(archivePaymentMethod, { data }) => (\n//                                         <Table.Col className=\"text-right\" key={v4()}>\n//                                           <button className=\"icon btn btn-link btn-sm\" \n//                                             title={t('general.archive')} \n//                                             href=\"\"\n//                                             onClick={() => {\n//                                               console.log(\"clicked archived\")\n//                                               let id = node.id\n//                                               archivePaymentMethod({ variables: {\n//                                                 input: {\n//                                                   id,\n//                                                   archived: !archived\n//                                                 }\n//                                           }, refetchQueries: [\n//                                               {query: GET_PAYMENT_METHODS_QUERY, variables: {\"archived\": archived }}\n//                                           ]}).then(({ data }) => {\n//                                             console.log('got data', data);\n//                                             toast.success(\n//                                               (archived) ? t('general.unarchived'): t('general.archived'), {\n//                                                 position: toast.POSITION.BOTTOM_RIGHT\n//                                               })\n//                                           }).catch((error) => {\n//                                             toast.error((t('general.toast_server_error')) + ': ' +  error, {\n//                                                 position: toast.POSITION.BOTTOM_RIGHT\n//                                               })\n//                                             console.log('there was an error sending the query', error);\n//                                           })\n//                                           }}>\n//                                             <Icon prefix=\"fa\" name=\"inbox\" />\n//                                           </button>\n//                                         </Table.Col>\n//                                       )}\n//                                     </Mutation>\n//                                   }\n//                                 </Table.Row>\n//                               ))}\n//                           </Table.Body>\n//                         </Table>\n//                   </ContentCard>\n//                 )}}\n//              }\n//             </Query>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"financepaymentmethod\">\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(\"/finance/paymentmethods/add\")}>\n//                 <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.payment_methods.add')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <FinanceMenu activeLink='payment_methods'/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// );\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategories))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const PAYMENT_BATCH_CATEGORY_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    description: Yup.string()\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\n\nconst FinancePaymentBatchCategoryForm = ({ t, history, isSubmitting, errors, values, returnUrl, create=false }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.name')}>\n              <Field type=\"text\" \n                      name=\"name\" \n                      className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        {(create) ?\n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group label={t('finance.payment_batch_categories.batch_category_type')}>\n                <Field component=\"select\" \n                        name=\"batchCategoryType\" \n                        className={(errors.batchCategoryType) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\">\n                  <option value=\"COLLECTION\" key={v4()}>{t('general.collection')}</option>\n                  <option value=\"PAYMENT\" key={v4()}>{t('general.payment')}</option>\n                </Field>\n                <ErrorMessage name=\"batchCategoryType\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          </Grid.Row> \n          : \"\"\n        }\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.description')}>\n              <Field type=\"text\" \n                      name=\"description\" \n                      className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategoryForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_PAYMENT_BATCH_CATEGORIES_QUERY } from './queries'\nimport { PAYMENT_BATCH_CATEGORY_SCHEMA } from './yupSchema'\nimport { get_list_query_variables } from \"./tools\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from '../FinanceMenu'\nimport FinancePaymentBatchCategoriesBase from './FinancePaymentBatchCategoriesBase'\nimport FinancePaymentBatchCategoryForm from './FinancePaymentBatchCategoryForm'\n\nconst ADD_PAYMENT_BATCH_CATEGORY = gql`\n  mutation CreateFinancePaymentBatchCategory($input:CreateFinancePaymentBatchCategoryInput!) {\n    createFinancePaymentBatchCategory(input: $input) {\n      financePaymentBatchCategory {\n        id\n      }\n    }\n  }\n`\n\nfunction FinancePaymentBatchCategoryAdd({ t, history }) {\n  const returnUrl = \"/finance/paymentbatchcategories\"\n  const [addFinancePaymentBatchCategory] = useMutation(ADD_PAYMENT_BATCH_CATEGORY, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  return (\n    <FinancePaymentBatchCategoriesBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('finance.payment_batch_categories.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: '', batchCategoryType: \"COLLECTION\", description: '' }}\n          validationSchema={PAYMENT_BATCH_CATEGORY_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            addFinancePaymentBatchCategory({ variables: {\n              input: {\n                name: values.name, \n                batchCategoryType: values.batchCategoryType,\n                description: values.description\n              }\n            }, refetchQueries: [\n                {query: GET_PAYMENT_BATCH_CATEGORIES_QUERY, variables: get_list_query_variables()}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('finance.payment_batch_categories.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <FinancePaymentBatchCategoryForm\n                create={true}\n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </FinancePaymentBatchCategoriesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategoryAdd))","// @flow\n\nimport React from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_PAYMENT_BATCH_CATEGORIES_QUERY, GET_PAYMENT_BATCH_CATEGORY_QUERY } from './queries'\nimport { get_list_query_variables } from './tools'\nimport { PAYMENT_BATCH_CATEGORY_SCHEMA } from './yupSchema'\n\n\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinancePaymentBatchCategoriesBase from './FinancePaymentBatchCategoriesBase'\nimport FinancePaymentBatchCategoryForm from './FinancePaymentBatchCategoryForm'\n\n\nconst UPDATE_PAYMENT_BATCH_CATEGORY = gql`\n  mutation UpdateFinancePaymentBatchCategory($input: UpdateFinancePaymentBatchCategoryInput!) {\n    updateFinancePaymentBatchCategory(input: $input) {\n      financePaymentBatchCategory {\n        id\n      }\n    }\n  }\n`\n\nfunction FinancePaymentBatchCategoryEdit({ t, history, match }) {\n  const returnUrl = \"/finance/paymentbatchcategories\"\n  const paymentBatchCategoryId = match.params.id\n\n  const { loading, error, data } = useQuery(GET_PAYMENT_BATCH_CATEGORY_QUERY, {\n    variables: {'id': paymentBatchCategoryId},\n  })\n  const [updateFinancePaymentBatchCategory] = useMutation(UPDATE_PAYMENT_BATCH_CATEGORY)\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchCategoriesBase showBack={true}>\n      <Card cardTitle={t('finance.payment_batch_categories.title')}>\n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true} />\n        </Card.Body>\n      </Card>\n    </FinancePaymentBatchCategoriesBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchCategoriesBase showBack={true}>\n      <Card cardTitle={t('finance.payment_batch_categories.title')}>\n        <Card.Body>\n          <p>{t('finance.payment_batch_categories.error_loading')}</p>\n        </Card.Body>\n      </Card>\n    </FinancePaymentBatchCategoriesBase>\n  )\n\n  const initialData = data.financePaymentBatchCategory\n\n  return (\n    <FinancePaymentBatchCategoriesBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('finance.payment_batch_categories.title_edit')}</Card.Title>\n        </Card.Header>\n          <Formik\n            initialValues={{ \n              name: initialData.name, \n              batchCategoryType: initialData.batchCategoryType,\n              description: initialData.description,\n            }}\n            validationSchema={PAYMENT_BATCH_CATEGORY_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateFinancePaymentBatchCategory({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name, \n                  batchCategoryType: values.batchCategoryType,\n                  description: values.description\n                }\n              }, refetchQueries: [\n                {query: GET_PAYMENT_BATCH_CATEGORIES_QUERY, variables: get_list_query_variables()}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('finance.payment_batch_categories.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n              }}\n            >\n            {({ isSubmitting, errors, values }) => (\n                <FinancePaymentBatchCategoryForm\n                  isSubmitting={isSubmitting}\n                  errors={errors}\n                  values={values}\n                  returnUrl={returnUrl}\n                />\n               \n            )}\n          </Formik>\n      </Card>\n    </FinancePaymentBatchCategoriesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategoryEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_FINANCE_ORDER_QUERY = gql`\n  query FinanceOrder($id: ID!) {\n    financeOrder(id: $id) {\n      id\n      account {\n        id\n        fullName\n      }\n      orderNumber\n      status\n      message\n      createdAt\n      total\n      totalDisplay\n      balanceDisplay\n      items(first: 100) {\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            id\n            organizationClasspass {\n              id\n              name\n            }\n            productName \n            description\n            quantity\n            price\n            priceDisplay\n            financeTaxRate {\n              name\n            }\n            subtotalDisplay\n            taxDisplay\n            totalDisplay\n            financeGlaccount {\n              name\n            }\n          \tfinanceCostcenter {\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_ORDER = gql`\n  mutation UpdateFinanceOrder($input: UpdateFinanceOrderInput!) {\n    updateFinanceOrder(input: $input) {\n      financeOrder {\n        id\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n  Icon\n} from \"tabler-react\";\n\n\nconst FinanceOrderEditForm = ({ t, isSubmitting, errors, values, returnUrl }) => (\n  <FoForm>\n    <Card title={t('general.status')}>\n      <Card.Body> \n        <Grid.Row>\n          <Grid.Col md={10}>\n            <Form.Group>\n              <Field component=\"select\" \n                     name=\"status\" \n                     className={(errors.status) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\">\n                <option value={\"RECEIVED\"} key={v4()}>{t(\"finance.orders.statuses.RECEIVED\")}</option>\n                <option value={\"AWAITING_PAYMENT\"} key={v4()}>{t(\"finance.orders.statuses.AWAITING_PAYMENT\")}</option>\n                <option value={\"PAID\"} key={v4()}>{t(\"finance.orders.statuses.PAID\")}</option>\n                <option value={\"DELIVERED\"} key={v4()}>{t(\"finance.orders.statuses.DELIVERED\")}</option>\n                <option value={\"CANCELLED\"} key={v4()}>{t(\"finance.orders.statuses.CANCELLED\")}</option>\n                <option value={\"NOT_FOUND\"} key={v4()}>{t(\"finance.orders.statuses.NOT_FOUND\")}</option>\n              </Field>\n              <ErrorMessage name=\"status\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n            <span className=\"text-muted\">\n              <Icon name=\"info\" /> {' '}\n              {t(\"finance.orders.set_status_to_delivered_to_deliver_manually\")}\n            </span>\n          </Grid.Col>\n          <Grid.Col md={2}>\n          <Button \n                className=\"pull-right\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n              >\n                {t('general.submit')}\n              </Button>\n          </Grid.Col>\n        </Grid.Row> \n      </Card.Body>\n    </Card>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(FinanceOrderEditForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Container,\n  Grid,\n  Icon,\n  Page\n} from \"tabler-react\";\n\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport FinanceMenu from \"../../FinanceMenu\"\n\n\nfunction FinanceOrderEditBase ({ t, match, history, children, refetch }) {\n  const returnUrl = \"/finance/orders\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")}>\n            <div className=\"page-options d-flex\">\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"change\"\n                                    resource=\"financeorder\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>            \n              <h5>{t(\"general.menu\")}</h5>\n              <FinanceMenu activeLink='orders'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceOrderEditBase))","// @flow\n\nimport React, { useContext } from 'react'\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { v4 } from \"uuid\"\nimport moment from 'moment'\n\nimport { GET_ORDERS_QUERY } from '../queries'\nimport { GET_FINANCE_ORDER_QUERY, UPDATE_ORDER } from './queries'\nimport FinanceOrderEditForm from \"./FinanceOrderEditForm\"\nimport FinanceOrderEditBase from './FinanceOrderEditBase'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\n\nfunction FinanceOrderEdit({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n\n  const id = match.params.id\n  const returnUrl = \"/finance/orders\"\n  \n  const { loading, error, data } = useQuery(GET_FINANCE_ORDER_QUERY, {\n    variables: { id: id },\n  })\n  const [updateOrder] = useMutation(UPDATE_ORDER)\n\n\n  // Loading\n  if (loading) return (\n    <FinanceOrderEditBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </FinanceOrderEditBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <FinanceOrderEditBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </FinanceOrderEditBase>\n    )\n  }\n\n  console.log(data) \n  const order = data.financeOrder\n  \n\n  return(\n    <FinanceOrderEditBase>\n      {/* Start info row */}\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Card title={t(\"finance.orders.edit_details\")}>\n            <Table cards>\n              <Table.Body>\n                <Table.Row>\n                  <Table.ColHeader>{t(\"general.order\")} #</Table.ColHeader>\n                  <Table.Col>{order.orderNumber}</Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.ColHeader>{t(\"general.account\")}</Table.ColHeader>\n                  <Table.Col>{order.account && order.account.fullName}</Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.ColHeader>{t(\"finance.orders.placed_at\")}</Table.ColHeader>\n                  <Table.Col>{moment(order.createdAt).format(dateTimeFormat)}</Table.Col>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </Card>\n\n        </Grid.Col>\n        <Grid.Col md={6}>\n          {(order.status != \"DELIVERED\") ? \n            <Formik\n              initialValues={{ \n                status: order.status, \n              }}\n              // validationSchema={GLACCOUNT_SCHEMA}\n              onSubmit={(values, { setSubmitting }) => {\n                  console.log('submit values:')\n                  console.log(values)\n\n                  updateOrder({ variables: {\n                    input: {\n                      id: match.params.id,\n                      status: values.status\n                    }\n                  }, refetchQueries: [\n                      {query: GET_ORDERS_QUERY }\n                  ]})\n                  .then(({ data }) => {\n                      console.log('got data', data)\n                      toast.success((t('finance.orders.toast_edit_success')), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      setSubmitting(false)\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error)\n                      setSubmitting(false)\n                    })\n              }}\n              >\n              {({ isSubmitting, errors, values }) => (\n                <FinanceOrderEditForm\n                  isSubmitting={isSubmitting}\n                  errors={errors}\n                  values={values}\n                  returnUrl={returnUrl}\n                />\n              )}\n            </Formik>\n            :     \n            <Card title={t('general.status')}>\n              <Card.Body> \n                <span className=\"text-green\"><Icon name=\"check\" /></span> {t(\"finance.orders.statuses.DELIVERED\")}\n              </Card.Body>\n            </Card>\n          }\n        </Grid.Col>\n      </Grid.Row> \n      {/* End information row */}\n      {/* Start items row */}\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <Card title={t(\"general.items\")}>\n            <Table cards>\n              <Table.Header>\n                <Table.Row>\n                  <Table.ColHeader>{t(\"general.product\")}</Table.ColHeader>\n                  <Table.ColHeader>{t(\"general.description\")}</Table.ColHeader>\n                  <Table.ColHeader>{t(\"general.quantity_short_and_price\")}</Table.ColHeader>\n                  <Table.ColHeader>{t(\"general.tax\")}</Table.ColHeader>\n                  <Table.ColHeader>{t(\"general.total\")}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                { order.items.edges.map(({ node }) => (        \n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      {node.productName}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.description}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.quantity} <br />\n                      {node.priceDisplay}\n                    </Table.Col>\n                    <Table.Col>\n                      {(node.financeTaxRate) ? node.financeTaxRate.name : \"\"}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.totalDisplay}\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>                \n            </Table>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n      {/* End items row */}\n      {/* Start note row */}\n      { (order.message) ?\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card title={t('finance.orders.customer_message')}>\n              <Card.Body>\n                {order.message}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row> : \"\"\n      }\n      {/* End note row */}\n    </FinanceOrderEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceOrderEdit))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinancePaymentMethodsBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"finance.title\")} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n            {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/finance/paymentmethods\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financepaymentmethod\">\n                  <Link to=\"/finance/paymentmethods/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.payment_methods.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <FinanceMenu activeLink='payment_methods'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinancePaymentMethodsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_PAYMENT_METHODS_QUERY = gql`\n  query FinancePaymentMethods($after: String, $before: String, $archived: Boolean) {\n    financePaymentMethods(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          systemMethod\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_PAYMENT_METHOD_QUERY = gql`\n  query FinancePaymentMethod($id: ID!) {\n    financePaymentMethod(id:$id) {\n      id\n      name\n      code\n      archived\n    }\n  }\n`\n\nexport const ADD_PAYMENT_METHOD = gql`\nmutation CreateFinancePaymentMethod($input:CreateFinancePaymentMethodInput!) {\n  createFinancePaymentMethod(input: $input) {\n    financePaymentMethod{\n      id\n      archived\n      name\n      code\n    }\n  }\n}\n`\n\nexport const UPDATE_PAYMENT_METHOD = gql`\nmutation UpdateFinancePaymentMethod($input: UpdateFinancePaymentMethodInput!) {\n  updateFinancePaymentMethod(input: $input) {\n    financePaymentMethod {\n      id\n      name\n      code\n    }\n  }\n}\n`\n\nexport const ARCHIVE_PAYMENT_METHOD = gql`\nmutation ArchiveFinancePaymentMethod($input: ArchiveFinancePaymentMethodInput!) {\n  archiveFinancePaymentMethod(input: $input) {\n    financePaymentMethod {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinancePaymentMethodsBase from './FinancePaymentMethodsBase'\n\nimport { GET_PAYMENT_METHODS_QUERY, ARCHIVE_PAYMENT_METHOD } from \"./queries\"\n\n\nfunction FinancePaymentMethods({ t, history }) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('finance.payment_methods.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_PAYMENT_METHODS_QUERY, {\n    variables: { archived: archived }\n  })\n\n  const [ archivePaymentMethod ] = useMutation(ARCHIVE_PAYMENT_METHOD)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <FinancePaymentMethodsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinancePaymentMethodsBase>\n  )\n\n  if (error) return (\n    <FinancePaymentMethodsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.payment_methods.error_loading')}</p>\n      </ContentCard>\n    </FinancePaymentMethodsBase>\n  )\n\n  const paymentMethods = data.financePaymentMethods\n\n  // Empty list\n  if (!paymentMethods.edges.length) { return (\n    <FinancePaymentMethodsBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('finance.payment_methods.empty_list') : t(\"finance.payment_methods.empty_archive\")}\n        </p>\n      </ContentCard>\n    </FinancePaymentMethodsBase>\n  )}\n\n  return (\n    <FinancePaymentMethodsBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}\n                    pageInfo={paymentMethods.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: paymentMethods.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.financePaymentMethods.edges\n                        const pageInfo = fetchMoreResult.financePaymentMethods.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new paymentMethods at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              financePaymentMethods: {\n                                __typename: previousResult.financePaymentMethods.__typename,\n                                edges: [ ...previousResult.financePaymentMethods.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {paymentMethods.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.code}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Link to={`/finance/paymentmethods/edit/${node.id}`}>\n                        <Button className='btn-sm' \n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                      </Link>\n                    }\n                  </Table.Col>\n                  {(node.systemMethod) ? \n                    <Table.Col></Table.Col> :\n                    <Table.Col className=\"text-right\" key={v4()}>\n                      <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archivePaymentMethod({ variables: {\n                            input: {\n                              id,\n                              archived: !archived\n                            }\n                      }, refetchQueries: [\n                          {query: GET_PAYMENT_METHODS_QUERY, variables: {\"archived\": archived }}\n                      ]}).then(({ data }) => {\n                        console.log('got data', data);\n                        toast.success(\n                          (archived) ? t('general.unarchived'): t('general.archived'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error);\n                      })\n                      }}>\n                        <Icon prefix=\"fa\" name=\"inbox\" />\n                      </button>\n                    </Table.Col>\n                  }\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>      \n    </FinancePaymentMethodsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinancePaymentMethods))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const PAYMENT_METHOD_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst FinancePaymentMethodForm = ({ t, history, isSubmitting, errors, values, returnUrl }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('finance.code')}>\n            <Field type=\"text\" \n                    name=\"code\" \n                    className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(FinancePaymentMethodForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_PAYMENT_METHODS_QUERY, ADD_PAYMENT_METHOD } from './queries'\nimport { PAYMENT_METHOD_SCHEMA } from './yupSchema'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport FinancePaymentMethodsBase from './FinancePaymentMethodsBase';\nimport FinancePaymentMethodForm from './FinancePaymentMethodForm'\n\n\nfunction FinancePaymentMethodAdd({ t, history }) {\n  const returnUrl = \"/finance/paymentmethods\"\n  const [ addPaymentMethod ] = useMutation(ADD_PAYMENT_METHOD)\n\n  return (\n    <FinancePaymentMethodsBase showBack={true}>\n      <Card title={t('finance.payment_methods.title_add')}>\n        <Formik\n          initialValues={{ name: '', code: '' }}\n          validationSchema={PAYMENT_METHOD_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addPaymentMethod({ variables: {\n                input: {\n                  name: values.name, \n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_PAYMENT_METHODS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('finance.payment_methods.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <FinancePaymentMethodForm\n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </FinancePaymentMethodsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinancePaymentMethodAdd))","import React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_PAYMENT_METHODS_QUERY, GET_PAYMENT_METHOD_QUERY, UPDATE_PAYMENT_METHOD } from './queries'\nimport { PAYMENT_METHOD_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinancePaymentMethodsBase from './FinancePaymentMethodsBase';\nimport FinancePaymentMethodForm from './FinancePaymentMethodForm'\n\n\nfunction FinancePaymentMethodEdit({ t, history, match }) {\n  const id = match.params.id\n  const cardTitle = t('finance.payment_methods.title_edit')\n  const returnUrl = \"/finance/paymentmethods\"\n\n  const { loading, error, data } = useQuery(GET_PAYMENT_METHOD_QUERY, {\n    variables: { id: id }\n  })\n  const [ updatePaymentMethod ] = useMutation(UPDATE_PAYMENT_METHOD)\n\n  if (loading) return (\n    <FinancePaymentMethodsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinancePaymentMethodsBase>\n  )\n\n  if (error) return (\n    <FinancePaymentMethodsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </FinancePaymentMethodsBase>\n  )\n\n  const initialData = data.financePaymentMethod;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <FinancePaymentMethodsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            code: initialData.code\n          }}\n          validationSchema={PAYMENT_METHOD_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updatePaymentMethod({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name,\n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_PAYMENT_METHODS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('finance.payment_methods.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n              <FinancePaymentMethodForm\n                isSubmitting={isSubmitting}\n                errors={errors}\n                values={values}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </FinancePaymentMethodsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinancePaymentMethodEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinanceTaxRatesBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/finance/taxrates\"  >\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financetaxrate\">\n                  <Link to=\"/finance/taxrates/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.taxrates.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <FinanceMenu activeLink='taxrates'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceTaxRatesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_TAXRATES_QUERY = gql`\n  query FinanceTaxRates($after: String, $before: String, $archived: Boolean) {\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_TAXRATE_QUERY = gql`\n  query FinanceTaxRate($id: ID!) {\n    financeTaxRate(id:$id) {\n      id\n      archived\n      name\n      percentage\n      rateType\n      code\n    }\n  }\n`\n\nexport const ADD_TAXRATE = gql`\nmutation CreateFinanceTaxRate($input:CreateFinanceTaxRateInput!) {\n  createFinanceTaxRate(input: $input) {\n    financeTaxRate{\n      id\n      archived\n      name\n      percentage\n      rateType\n      code\n    }\n  }\n}\n`\n\nexport const UPDATE_TAXRATE = gql`\nmutation UpdateFinanceTaxRate($input: UpdateFinanceTaxRateInput!) {\n  updateFinanceTaxRate(input: $input) {\n    financeTaxRate {\n      id\n      archived\n      name\n      percentage\n      rateType\n      code\n    }\n  }\n}\n`\n\nexport const ARCHIVE_TAXRATE = gql`\nmutation ArchiveFinanceTaxRate($input: ArchiveFinanceTaxRateInput!) {\n  archiveFinanceTaxRate(input: $input) {\n    financeTaxRate {\n      id\n      archived\n    }\n  }\n}\n`\n","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceTaxRatesBase from './FinanceTaxRatesBase'\n\nimport { GET_TAXRATES_QUERY, ARCHIVE_TAXRATE } from \"./queries\"\n\nfunction FinanceTaxRates({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('finance.taxrates.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_TAXRATES_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveTaxrate ] = useMutation(ARCHIVE_TAXRATE)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <FinanceTaxRatesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )\n\n  if (error) return (\n    <FinanceTaxRatesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.glaccounts.error_loading')}</p>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )\n\n  const taxrates = data.financeTaxRates\n\n  // Empty list\n  if (!taxrates.edges.length) { return (\n    <FinanceTaxRatesBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('finance.taxrates.empty_list') : t(\"finance.taxrates.empty_archive\")}\n        </p>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )}\n\n  return (\n    <FinanceTaxRatesBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}\n                    pageInfo={taxrates.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: taxrates.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.financeTaxRates.edges\n                        const pageInfo = fetchMoreResult.financeTaxRates.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new taxrates at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              financeTaxRates: {\n                                __typename: previousResult.financeTaxRates.__typename,\n                                edges: [ ...previousResult.financeTaxRates.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.taxrates.percentage')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.taxrates.rateType')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {taxrates.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.percentage} %\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.rateType}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.code}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/finance/taxrates/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveTaxrate({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_TAXRATES_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceTaxRates))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const TAX_RATE_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    percentage: Yup.number()\n      .max(100)\n      .typeError(t('yup.field_has_to_be_number'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_TAXRATES_QUERY, ADD_TAXRATE } from './queries'\nimport { TAX_RATE_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport FinanceTaxRatesBase from './FinanceTaxRatesBase';\n\n\nfunction FinanceTaxRateAdd({t, history}) {\n  const returnUrl = \"/finance/taxrates\"\n  const [ addFinanceTaxrate ] = useMutation(ADD_TAXRATE)\n\n  return (\n    <FinanceTaxRatesBase showBack={true}>\n      <Card title={t('finance.taxrates.title_add')}>\n        <Formik\n            initialValues={{ name: \"\", percentage: \"\", rateType: \"IN\", code: \"\" }}\n            validationSchema={TAX_RATE_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                addFinanceTaxrate({ variables: {\n                  input: {\n                    name: values.name,\n                    percentage: values.percentage,\n                    rateType: values.rateType, \n                    code: values.code,\n                  }\n                }, refetchQueries: [\n                    {query: GET_TAXRATES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data);\n                    history.push(returnUrl)\n                    toast.success((t('finance.taxrates.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n              <FoForm>\n                  <Card.Body>\n                      <Form.Group label={t('general.name')}>\n                        <Field type=\"text\" \n                                name=\"name\" \n                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.taxrates.percentage')}>\n                        <Field type=\"text\" \n                                name=\"percentage\" \n                                className={(errors.percentage) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"percentage\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.taxrates.rateType')}>\n                        <Field component=\"select\" \n                                name=\"rateType\" \n                                className={(errors.rateType) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\">\n                          <option value=\"IN\">{t('finance.taxrates.including')}</option>\n                          <option value=\"EX\">{t('finance.taxrates.excluding')}</option>\n                        </Field>\n                        <ErrorMessage name=\"rateType\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.code')}>\n                        <Field type=\"text\" \n                                name=\"code\" \n                                className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                  </Card.Body>\n                  <Card.Footer>\n                      <Button \n                        color=\"primary\"\n                        className=\"pull-right\" \n                        type=\"submit\" \n                        disabled={isSubmitting}\n                      >\n                        {t('general.submit')}\n                      </Button>\n                      <Link to={returnUrl}>\n                        <Button color=\"link\">\n                            {t('general.cancel')}\n                        </Button>\n                      </Link>\n                  </Card.Footer>\n              </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </FinanceTaxRatesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceTaxRateAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_TAXRATES_QUERY, GET_TAXRATE_QUERY, UPDATE_TAXRATE } from './queries'\nimport { TAX_RATE_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceTaxRatesBase from './FinanceTaxRatesBase';\n\n\nfunction FinanceTaxRateEdit({t, match, history}) {\n  const id = match.params.id\n  const returnUrl = \"/finance/taxrates\"\n  const cardTitle = t('finance.taxrates.title_edit')\n  const { loading, error, data } = useQuery(GET_TAXRATE_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateTaxrate ] = useMutation(UPDATE_TAXRATE)\n\n  if (loading) return (\n    <FinanceTaxRatesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )\n\n  if (error) return (\n    <FinanceTaxRatesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.taxrates.error_loading')}</p>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )\n\n  const initialData = data.financeTaxRate;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <FinanceTaxRatesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n              percentage: initialData.percentage,\n              rateType: initialData.rateType,\n              code: initialData.code,\n            }}\n            validationSchema={TAX_RATE_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateTaxrate({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                    percentage: values.percentage,\n                    rateType: values.rateType,\n                    code: values.code,\n                  }\n                }, refetchQueries: [\n                    {query: GET_TAXRATES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('finance.taxrates.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values }) => (\n                <FoForm>\n                    <Card.Body>\n                      <Form.Group label={t('general.name')}>\n                        <Field type=\"text\" \n                                name=\"name\" \n                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.taxrates.percentage')}>\n                        <Field type=\"text\" \n                              name=\"percentage\" \n                              className={(errors.percentage) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                        <ErrorMessage name=\"percentage\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.taxrates.rateType')}>\n                        <Field component=\"select\" \n                              name=\"rateType\" \n                              className={(errors.rateType) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\">\n                          <option value=\"IN\">{t('finance.taxrates.including')}</option>\n                          <option value=\"EX\">{t('finance.taxrates.excluding')}</option>\n                        </Field>\n                        <ErrorMessage name=\"rateType\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.code')}>\n                        <Field type=\"text\" \n                                name=\"code\" \n                                className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          className=\"pull-right\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          type=\"submit\"\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button\n                            type=\"button\" \n                            color=\"link\" \n                          >\n                              {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </FinanceTaxRatesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceTaxRateEdit))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\n\n\nlet classpasses_active\nlet subscriptions_active\n\n\nconst InsightMenu = ({ t, activeLink }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'classpasses') ? classpasses_active = true: classpasses_active = false}\n        {(activeLink === 'subscriptions') ? subscriptions_active = true: subscriptions_active = false}\n        \n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"insight\"\n        >\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to=\"#/insight/classpasses\"\n              icon=\"credit-card\"\n              active={classpasses_active}\n              >\n              {t('insight.classpass.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"insight\"\n        >\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to=\"#/insight/subscriptions\"\n              icon=\"edit\"\n              active={subscriptions_active}\n              >\n              {t('insight.subscriptions.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        {/* <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"organizationlocation\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to=\"#/organization/locations\"\n                icon=\"home\"\n                active={location_active}\n                >\n            Locations\n            </List.GroupItem>\n        </HasPermissionWrapper> */}\n    </List.Group>\n);\n\nexport default withTranslation()(InsightMenu)","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Container,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport InsightMenu from \"../InsightMenu\"\n\n\nclass InsightHome extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Insight home props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"insight.title\")} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n                <Grid.Row>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/insight/classpasses'>\n                      <StampCard header={<small>{t('insight.classpasses.title')}</small>} footer={t('')} color=\"blue\" icon=\"credit-card\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/insight/subscriptions'>\n                      <StampCard header={<small>{t('insight.subscriptions.title')}</small>} footer={t('')} color=\"blue\" icon=\"edit\" />\n                    </Link>\n                  </Grid.Col>\n                </Grid.Row>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <InsightMenu />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(InsightHome))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_CLASSPASSES_SOLD_QUERY = gql`\n  query InsightAccountClasspassesSold($year: Int!) {\n    insightAccountClasspassesSold(year: $year) {\n      description\n      data\n      year\n    }\n  }\n`\n\n\nexport const GET_CLASSPASSES_ACTIVE_QUERY = gql`\n  query InsightAccountClasspassesActive($year: Int!) {\n    insightAccountClasspassesActive(year: $year) {\n      description\n      data\n      year\n    }\n  }\n`","\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nconst InsightBackHome = ({ t }) => (\n  <div className=\"page-options d-flex\">\n    <Link to=\"/insight\" \n          className='btn btn-secondary mr-4'>\n        <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('insight.title')}\n    </Link>\n  </div>\n)\n\nexport default withTranslation()(InsightBackHome)","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport moment from 'moment'\n\nimport {\n  Button,\n  Container,\n  Grid,\n  Page\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport InsightBackHome from '../InsightBackHome'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.INSIGHT_CLASSPASSES_YEAR)) {\n  console.log('year from not found... defaulting to today...')\n  localStorage.setItem(CSLS.INSIGHT_CLASSPASSES_YEAR, moment().format('YYYY')) \n} \n\nfunction InsightClasspassesBase ({ t, history, children, year, refetchData=f=>f }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"insight.title\")} subTitle={t(\"general.classpasses\") + \" \" + year}>\n            <div className=\"page-options d-flex\">\n              <InsightBackHome />\n              <Button.List className=\"schedule-list-page-options-btn-list\">\n                <Button \n                  icon=\"chevron-left\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let previousYear = parseInt(localStorage.getItem(CSLS.INSIGHT_CLASSPASSES_YEAR)) - 1                    \n                    localStorage.setItem(CSLS.INSIGHT_CLASSPASSES_YEAR, previousYear) \n\n                    refetchData(previousYear)\n                }} />\n                <Button \n                  icon=\"sunset\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let currentYear = moment().format('YYYY')\n                    localStorage.setItem(CSLS.INSIGHT_CLASSPASSES_YEAR, currentYear) \n                    \n                    refetchData(currentYear)\n                }} />\n                <Button \n                  icon=\"chevron-right\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let nextYear = parseInt(localStorage.getItem(CSLS.INSIGHT_CLASSPASSES_YEAR)) + 1                    \n                    localStorage.setItem(CSLS.INSIGHT_CLASSPASSES_YEAR, nextYear) \n\n                    refetchData(nextYear)\n                }} />\n              </Button.List> \n            </div>\n          </Page.Header>\n          <Grid.Row>\n            {children}\n          </Grid.Row>\n        </Container>  \n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(InsightClasspassesBase))","import React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport C3Chart from \"react-c3js\"\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { refreshTokenAndOpenExportLinkInNewTab } from \"../../../tools/refresh_token_and_open_export_link\"\n\nimport {\n  colors,\n  Grid,\n  Button,\n  Card,\n} from \"tabler-react\";\n// import ContentCard from \"../../general/ContentCard\"\nimport { GET_CLASSPASSES_SOLD_QUERY, GET_CLASSPASSES_ACTIVE_QUERY } from './queries'\nimport { TOKEN_REFRESH } from \"../../../queries/system/auth\"\nimport InsightClasspassesBase from './InsightClasspassesBase'\n\nfunction InsightClasspasses ({ t, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const year = localStorage.getItem(CSLS.INSIGHT_CLASSPASSES_YEAR)\n  const export_url_active = \"/d/export/insight/classpasses/active/\" + year\n  const export_url_sold = \"/d/export/insight/classpasses/sold/\" + year\n\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n\n  const { \n    loading: loadingSold, \n    error: errorSold, \n    data: dataSold,\n    refetch: refetchSold\n   } = useQuery(GET_CLASSPASSES_SOLD_QUERY, {\n    variables: { year: year }\n  })\n\n  const { \n    loading: loadingActive, \n    error: errorActive, \n    data: dataActive,\n    refetch: refetchActive\n   } = useQuery(GET_CLASSPASSES_ACTIVE_QUERY, {\n    variables: { year: year }\n  })\n\n\n  if (loadingSold || loadingActive) {\n    return (\n      <InsightClasspassesBase year={year}>\n        {t(\"general.loading_with_dots\")}\n      </InsightClasspassesBase>\n    )\n  }\n\n  if (errorSold || errorActive) {\n    return (\n      <InsightClasspassesBase year={year}>\n        {t(\"general.error_sad_smiley\")}\n      </InsightClasspassesBase>\n    )\n  }\n\n  function refetchData(year) {\n    refetchActive({year: year})\n    refetchSold({year: year})\n  }\n\n  console.log(dataSold)\n  console.log(dataActive)\n\n  const data_sold_label = t(\"insight.classpasses.sold.title\")\n  const chart_data_sold = dataSold.insightAccountClasspassesSold.data\n  console.log(\"chart_data sold\")\n  console.log(data_sold_label, ...chart_data_sold)\n\n  const data_active_label = t(\"insight.classpasses.active.title\")\n  const chart_data_active = dataActive.insightAccountClasspassesActive.data\n  console.log(\"chart_data active\")\n  console.log(data_sold_label, ...chart_data_active)\n\n\n  return (\n    <InsightClasspassesBase year={year} refetchData={refetchData}>\n      {/* <Grid.Row> */}\n        <Grid.Col md={9}>\n          <Card title={t('general.chart')}>\n            <Card.Body>\n              <C3Chart\n                style={{ height: \"16rem\" }}\n                data={{\n                  x: 'x',\n                  columns: [\n                    // each columns data as array, starting with \"name\" and then containing data\n                    [ 'x',\n                      t(\"datetime.months.short_january\"),\n                      t(\"datetime.months.short_february\"),\n                      t(\"datetime.months.short_march\"),\n                      t(\"datetime.months.short_april\"),\n                      t(\"datetime.months.short_may\"),\n                      t(\"datetime.months.short_june\"),\n                      t(\"datetime.months.short_july\"),\n                      t(\"datetime.months.short_august\"),\n                      t(\"datetime.months.short_september\"),\n                      t(\"datetime.months.short_october\"),\n                      t(\"datetime.months.short_november\"),\n                      t(\"datetime.months.short_decemer\"),\n                    ],\n                    [ 'sold', ...chart_data_sold],\n                    [ 'active', ...chart_data_active],\n                  ],\n                  type: \"area\", // default type of chart\n                  groups: [['sold'], ['active']],\n                  colors: {\n                    sold: colors[\"blue\"],\n                    active: colors[\"green\"],\n                  },\n                  names: {\n                    // name of each serie\n                    sold: data_sold_label,\n                    active: data_active_label,\n                  },\n                  \n                }}\n                axis={{\n                  y: {\n                    padding: {\n                      bottom: 0,\n                    },\n                    show: true,\n                  },\n                  x: {\n                    padding: {\n                      left: 0,\n                      right: 0,\n                    },\n                    type: 'category',\n                    show: true,\n                  },\n                }}\n                tooltip={{\n                  format: {\n                    title: function(x) {\n                      return \"\";\n                    },\n                  },\n                }}\n                padding={{\n                  bottom: 0,\n                  // left: -1,\n                  right: -1,\n                }}\n                point={{\n                  show: false,\n                }}\n              />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={3}>\n          {/* Export as sold as excel sheet */}\n          <Button\n            block\n            color=\"secondary\"\n            RootComponent=\"a\"\n            icon=\"download-cloud\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url_sold\n            )}\n          >\n            {t(\"insight.classpasses.sold.export_excel\")}\n          </Button>\n          {/* Export as active as excel sheet */}\n          <Button\n            block\n            color=\"secondary\"\n            RootComponent=\"a\"\n            icon=\"download-cloud\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url_active\n            )}\n          >\n            {t(\"insight.classpasses.active.export_excel\")}\n          </Button>\n        </Grid.Col>\n      {/* </Grid.Row> */}\n    </InsightClasspassesBase>\n  //   <SiteWrapper>\n  //     <div className=\"my-3 my-md-5\">\n  //       <Container>\n  //         <Page.Header title={t(\"insight.title\")} subTitle={t(\"general.classpasses\") + \" \" + year}>\n  //           <div className=\"page-options d-flex\">\n  //             <InsightBackHome />\n  //           </div>\n  //         </Page.Header>\n\n  //       </Container>  \n  //     </div>\n  //   </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(InsightClasspasses))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SUBSCRIPTIONS_SOLD_QUERY = gql`\n  query InsightAccountSubscriptionsSold($year: Int!) {\n    insightAccountSubscriptionsSold(year: $year) {\n      description\n      data\n      year\n    }\n  }\n`\n\n\nexport const GET_SUBSCRIPTIONS_ACTIVE_QUERY = gql`\n  query InsightAccountSubscriptionsActive($year: Int!) {\n    insightAccountSubscriptionsActive(year: $year) {\n      description\n      data\n      year\n    }\n  }\n`","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport moment from 'moment'\n\nimport {\n  Button,\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport InsightBackHome from '../InsightBackHome'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR)) {\n  console.log('year from not found... defaulting to today...')\n  localStorage.setItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR, moment().format('YYYY')) \n} \n\nfunction InsightSubscriptionsBase ({ t, history, children, year, refetchData=f=>f}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"insight.title\")} subTitle={t(\"general.subscriptions\") + \" \" + year}>\n            <div className=\"page-options d-flex\">\n              <InsightBackHome />\n              <Button.List className=\"schedule-list-page-options-btn-list\">\n                <Button \n                  icon=\"chevron-left\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let previousYear = parseInt(localStorage.getItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR)) - 1                    \n                    localStorage.setItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR, previousYear) \n\n                    refetchData(previousYear)\n                }} />\n                <Button \n                  icon=\"sunset\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let currentYear = moment().format('YYYY')\n                    localStorage.setItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR, currentYear) \n                    \n                    refetchData(currentYear)\n                }} />\n                <Button \n                  icon=\"chevron-right\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let nextYear = parseInt(localStorage.getItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR)) + 1                    \n                    localStorage.setItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR, nextYear) \n\n                    refetchData(nextYear)\n                }} />\n              </Button.List> \n            </div>\n          </Page.Header>\n          <Grid.Row>\n            {children}\n          </Grid.Row>\n        </Container>  \n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(InsightSubscriptionsBase))","import React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport C3Chart from \"react-c3js\"\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { refreshTokenAndOpenExportLinkInNewTab } from \"../../../tools/refresh_token_and_open_export_link\"\n\nimport {\n  colors,\n  Grid,\n  Button,\n  Card,\n} from \"tabler-react\";\n// import ContentCard from \"../../general/ContentCard\"\nimport { GET_SUBSCRIPTIONS_SOLD_QUERY, GET_SUBSCRIPTIONS_ACTIVE_QUERY } from './queries'\nimport { TOKEN_REFRESH } from \"../../../queries/system/auth\"\nimport InsightSubscriptionsBase from './InsightSubscriptionsBase'\n\nfunction InsightSubscriptions ({ t, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const year = localStorage.getItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR)\n  const export_url_active = \"/d/export/insight/subscriptions/active/\" + year\n  const export_url_sold = \"/d/export/insight/subscriptions/sold/\" + year\n\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n\n  const { \n    loading: loadingSold, \n    error: errorSold, \n    data: dataSold,\n    refetch: refetchSold\n   } = useQuery(GET_SUBSCRIPTIONS_SOLD_QUERY, {\n    variables: { year: 2020 }\n  })\n\n  const { \n    loading: loadingActive, \n    error: errorActive, \n    data: dataActive,\n    refetch: refetchActive\n   } = useQuery(GET_SUBSCRIPTIONS_ACTIVE_QUERY, {\n    variables: { year: 2020 }\n  })\n\n\n  if (loadingSold || loadingActive) {\n    return (\n      <InsightSubscriptionsBase year={year}>\n        {t(\"general.loading_with_dots\")}\n      </InsightSubscriptionsBase>\n    )\n  }\n\n  if (errorSold || errorActive) {\n    return (\n      <InsightSubscriptionsBase year={year}>\n        {t(\"general.error_sad_smiley\")}\n      </InsightSubscriptionsBase>\n    )\n  }\n\n\n  function refetchData(year) {\n    refetchActive({year: year})\n    refetchSold({year: year})\n  }\n\n  console.log(dataSold)\n  console.log(dataActive)\n\n  const data_sold_label = t(\"insight.subscriptions.sold.title\")\n  const chart_data_sold = dataSold.insightAccountSubscriptionsSold.data\n  console.log(\"chart_data sold\")\n  console.log(data_sold_label, ...chart_data_sold)\n\n  const data_active_label = t(\"insight.subscriptions.active.title\")\n  const chart_data_active = dataActive.insightAccountSubscriptionsActive.data\n  console.log(\"chart_data active\")\n  console.log(data_sold_label, ...chart_data_active)\n\n\n  return (\n    <InsightSubscriptionsBase year={year} refetchData={refetchData}>\n      {/* <Grid.Row> */}\n        <Grid.Col md={9}>\n          <Card title={t('general.chart')}>\n            <Card.Body>\n              <C3Chart\n                style={{ height: \"16rem\" }}\n                data={{\n                  x: 'x',\n                  columns: [\n                    // each columns data as array, starting with \"name\" and then containing data\n                    [ 'x',\n                      t(\"datetime.months.short_january\"),\n                      t(\"datetime.months.short_february\"),\n                      t(\"datetime.months.short_march\"),\n                      t(\"datetime.months.short_april\"),\n                      t(\"datetime.months.short_may\"),\n                      t(\"datetime.months.short_june\"),\n                      t(\"datetime.months.short_july\"),\n                      t(\"datetime.months.short_august\"),\n                      t(\"datetime.months.short_september\"),\n                      t(\"datetime.months.short_october\"),\n                      t(\"datetime.months.short_november\"),\n                      t(\"datetime.months.short_decemer\"),\n                    ],\n                    [ 'sold', ...chart_data_sold],\n                    [ 'active', ...chart_data_active],\n                  ],\n                  type: \"area\", // default type of chart\n                  groups: [['sold'], ['active']],\n                  colors: {\n                    sold: colors[\"blue\"],\n                    active: colors[\"green\"],\n                  },\n                  names: {\n                    // name of each serie\n                    sold: data_sold_label,\n                    active: data_active_label,\n                  },\n                  \n                }}\n                axis={{\n                  y: {\n                    padding: {\n                      bottom: 0,\n                    },\n                    show: true,\n                  },\n                  x: {\n                    padding: {\n                      left: 0,\n                      right: 0,\n                    },\n                    type: 'category',\n                    show: true,\n                  },\n                }}\n                tooltip={{\n                  format: {\n                    title: function(x) {\n                      return \"\";\n                    },\n                  },\n                }}\n                padding={{\n                  bottom: 0,\n                  // left: -1,\n                  right: -1,\n                }}\n                point={{\n                  show: false,\n                }}\n              />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={3}>\n          {/* Export as sold as excel sheet */}\n          <Button\n            block\n            color=\"secondary\"\n            RootComponent=\"a\"\n            icon=\"download-cloud\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url_sold\n            )}\n          >\n            {t(\"insight.subscriptions.sold.export_excel\")}\n          </Button>\n          {/* Export as active as excel sheet */}\n          <Button\n            block\n            color=\"secondary\"\n            RootComponent=\"a\"\n            icon=\"download-cloud\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url_active\n            )}\n          >\n            {t(\"insight.subscriptions.active.export_excel\")}\n          </Button>\n        </Grid.Col>\n      {/* </Grid.Row> */}\n    </InsightSubscriptionsBase>\n  //   <SiteWrapper>\n  //     <div className=\"my-3 my-md-5\">\n  //       <Container>\n  //         <Page.Header title={t(\"insight.title\")} subTitle={t(\"general.classpasses\") + \" \" + year}>\n  //           <div className=\"page-options d-flex\">\n  //             <InsightBackHome />\n  //           </div>\n  //         </Page.Header>\n\n  //       </Container>  \n  //     </div>\n  //   </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(InsightSubscriptions))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\n\n\nlet classpasses_active\nlet classtypes_active\nlet discoveries_active\nlet documents_active\nlet languages_active\nlet locations_active\nlet levels_active\nlet holidays_active\nlet memberships_active\nlet subscriptions_active\nlet appointments_active\nlet organization_active\nlet organization_branding_active\nlet announcements_active\n\nconst OrganizationMenu = ({ t, activeLink }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'classpasses') ? classpasses_active = true: classpasses_active = false}\n        {(activeLink === 'classtypes') ? classtypes_active = true: classtypes_active = false}\n        {(activeLink === 'discoveries') ? discoveries_active = true: discoveries_active = false}\n        {(activeLink === 'documents') ? documents_active = true: documents_active = false}\n        {(activeLink === 'languages') ? languages_active = true: languages_active = false}\n        {(activeLink === 'locations') ? locations_active = true: locations_active = false}\n        {(activeLink === 'levels') ? levels_active = true: levels_active = false}\n        {(activeLink === 'holidays') ? holidays_active = true: holidays_active = false}\n        {(activeLink === 'memberships') ? memberships_active = true: memberships_active = false}\n        {(activeLink === 'subscriptions') ? subscriptions_active = true: subscriptions_active = false}\n        {(activeLink === 'appointments') ? appointments_active = true: appointments_active = false}\n        {(activeLink === 'organization') ? organization_active = true: organization_active = false}\n        {(activeLink === 'organization_branding') ? organization_branding_active = true: organization_branding_active = false}\n        {(activeLink === 'announcements') ? announcements_active = true: announcements_active = false}\n        \n\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/edit/T3JnYW5pemF0aW9uTm9kZToxMDA=\"\n            icon=\"layout\"\n            active={organization_active}\n            >\n            {t('organization.organization.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/locations\"\n            icon=\"home\"\n            active={locations_active}\n            >\n            {t('organization.locations.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/classtypes\"\n            icon=\"book-open\"\n            active={classtypes_active}\n            >\n            {t('organization.classtypes.title')}\n        </List.GroupItem>\n        {/* <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/memberships\"\n            icon=\"clipboard\"\n            active={memberships_active}\n            >\n            {t('organization.memberships.title')}\n        </List.GroupItem> */}\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/classpasses\"\n            icon=\"credit-card\"\n            active={classpasses_active}\n            >\n            {t('organization.classpasses.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/subscriptions\"\n            icon=\"edit\"\n            active={subscriptions_active}\n            >\n            {t('organization.subscriptions.title')}\n        </List.GroupItem>\n        {/* <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/appointment_categories\"\n            icon=\"calendar\"\n            active={appointments_active}\n            >\n            {t('organization.appointments.title')}\n        </List.GroupItem> */}\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/levels\"\n            icon=\"tag\"\n            active={levels_active}\n            >\n            {t('organization.levels.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/holidays\"\n            icon=\"sun\"\n            active={holidays_active}\n            >\n            {t('organization.holidays.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/discoveries\"\n            icon=\"compass\"\n            active={discoveries_active}\n            >\n            {t('organization.discoveries.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/languages\"\n            icon=\"flag\"\n            active={languages_active}\n            >\n            {t('organization.languages.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/edit/T3JnYW5pemF0aW9uTm9kZToxMDA=/branding\"\n            icon=\"image\"\n            active={organization_branding_active}\n            >\n            {t('organization.organization.branding.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/documents/T3JnYW5pemF0aW9uTm9kZToxMDA=\"\n            icon=\"briefcase\"\n            active={documents_active}\n            >\n            {t('organization.documents.title')}\n        </List.GroupItem>\n        <HasPermissionWrapper permission=\"view\"\n                              resource=\"organizationannouncement\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to=\"#/organization/announcements\"\n                icon=\"message-square\"\n                active={announcements_active}\n                >\n                {t('organization.announcements.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n    </List.Group>\n);\n\nexport default withTranslation()(OrganizationMenu)","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Container,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nclass OrganizationHome extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"School home props:\")\n    console.log(props)\n  }\n\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"organization.title\")} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n                <Grid.Row>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/edit/T3JnYW5pemF0aW9uTm9kZToxMDA='>\n                      <StampCard header={<small>{t('organization.organization.title')}</small>} footer={t('')} color=\"blue\" icon=\"layout\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/locations'>\n                      <StampCard header={<small>{t('organization.locations.title')}</small>} footer={t('')} color=\"blue\" icon=\"home\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/classtypes'>\n                      <StampCard header={<small>{t('organization.classtypes.title')}</small>} footer={t('')} color=\"blue\" icon=\"book-open\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/classpasses'>\n                      <StampCard header={<small>{t('organization.classpasses.title')}</small>} footer={t('')} color=\"blue\" icon=\"credit-card\" />\n                    </Link>\n                  </Grid.Col>\n                  {/* <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/memberships'>\n                      <StampCard header={<small>{t('organization.memberships.title')}</small>} footer={t('')} color=\"blue\" icon=\"clipboard\" />\n                    </Link>\n                  </Grid.Col> */}\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/subscriptions'>\n                      <StampCard header={<small>{t('organization.subscriptions.title')}</small>} footer={t('')} color=\"blue\" icon=\"edit\" />\n                    </Link>\n                  </Grid.Col>\n                  {/* <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/appointment_categories'>\n                      <StampCard header={<small>{t('organization.appointments.title')}</small>} footer={t('')} color=\"blue\" icon=\"calendar\" />\n                    </Link>\n                  </Grid.Col> */}\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/levels'>\n                      <StampCard header={<small>{t('organization.levels.title')}</small>} footer={t('')} color=\"blue\" icon=\"tag\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/holidays'>\n                      <StampCard header={<small>{t('organization.holidays.title')}</small>} footer={t('')} color=\"blue\" icon=\"sun\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/discoveries'>\n                      <StampCard header={<small>{t('organization.discoveries.title')}</small>} footer={t('')} color=\"blue\" icon=\"compass\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/languages'>\n                      <StampCard header={<small>{t('organization.languages.title')}</small>} footer={t('')} color=\"blue\" icon=\"flag\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/edit/T3JnYW5pemF0aW9uTm9kZToxMDA=/branding'>\n                      <StampCard header={<small>{t('organization.organization.branding.title')}</small>} footer={t('')} color=\"blue\" icon=\"image\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/documents/T3JnYW5pemF0aW9uTm9kZToxMDA='>\n                      <StampCard header={<small>{t('organization.documents.title')}</small>} footer={t('')} color=\"blue\" icon=\"briefcase\" />\n                    </Link>\n                  </Grid.Col>\n                  <HasPermissionWrapper permission=\"view\"\n                                        resource=\"organizationannouncement\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/organization/announcements'>\n                        <StampCard header={<small>{t('organization.announcements.title')}</small>} footer={t('')} color=\"blue\" icon=\"message-square\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                </Grid.Row>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <OrganizationMenu />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationHome))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ORGANIZATION_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .required(t('yup.field_required')),\n    address: Yup.string(),\n    phone: Yup.string(),\n    email: Yup.string()\n      .email(t('yup.email')),\n    registration: Yup.string(),\n    taxRegistration: Yup.string(),\n  })\n","export const customFileInputLabelStyle = {\n    whiteSpace: \"nowrap\",\n    display: \"block\",\n    overflow: \"hidden\"\n  }  \n  ","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\nimport { customFileInputLabelStyle } from \"../../../tools/custom_file_input_label_style\"\n\n\nconst OrganizationForm = ({ \n  t, \n  history, \n  isSubmitting, \n  errors, \n  values, \n  setFieldTouched, \n  setFieldValue,\n}) => (\n    <FoForm>\n      <Card.Body>\n        <Form.Group label={t('general.name')}>\n          <Field type=\"text\" \n                  name=\"name\" \n                  className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Form.Group label={t('general.address')}>\n          <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"address\"\n            initialValue={values.address}\n            init={tinymceBasicConf}\n            onBlur={(e) => {\n              setFieldValue(\"address\", e.target.getContent())\n              setFieldTouched(\"address\", true, true)\n            }}\n          />\n          <ErrorMessage name=\"address\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.phone')}>\n              <Field type=\"text\" \n                      name=\"phone\" \n                      className={(errors.phone) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"phone\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.email')}>\n              <Field type=\"text\" \n                      name=\"email\" \n                      className={(errors.email) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"email\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('organization.organization.registration')}>\n              <Field type=\"text\" \n                      name=\"registration\" \n                      className={(errors.registration) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"registration\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('organization.organization.tax_registration')}>\n              <Field type=\"text\" \n                      name=\"taxRegistration\" \n                      className={(errors.taxRegistration) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"taxRegistration\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n          color=\"primary\"\n          // className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n          >\n          {t('general.submit')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Page,\n  Grid,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationEditBase({t, match, history, children}) {\n  const id = match.params.id\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('organization.title')}>\n            <div className=\"page-options d-flex\">\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n            <Card>\n              <Card.Header>\n                <Card.Title>{t('organization.organization.title_edit')}</Card.Title>\n              </Card.Header>\n              {children}\n            </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <h5>{t(\"general.menu\")}</h5>\n              <OrganizationMenu activeLink='organization'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationEditBase))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ORGANIZATION_QUERY } from './queries'\nimport { ORGANIZATION_SCHEMA } from './yupSchema'\nimport OrganizationForm from './OrganizationForm'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationEditBase from \"./OrganizationEditBase\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nconst UPDATE_ORGANIZATION = gql`\n  mutation UpdateOrganization($input: UpdateOrganizationInput!) {\n    updateOrganization(input: $input) {\n      organization {\n        id\n        name\n      }\n    }\n  }\n`\n\n\nfunction OrganizationEdit({t, match, history}) {\n  const id = match.params.id\n\n  const [updateOrganization] = useMutation(UPDATE_ORGANIZATION)\n  const { loading, error, data, fetchMore } = useQuery(GET_ORGANIZATION_QUERY, {\n    variables: {\n      id: id\n  }})\n\n  if (loading) return (\n    <OrganizationEditBase>\n      {t(\"general.loading_with_dots\")}\n    </OrganizationEditBase>\n  )\n  if (error) return (\n    <OrganizationEditBase>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </OrganizationEditBase>\n  )\n\n  const initialData = data.organization\n\n  return (\n \n    <OrganizationEditBase>\n      <Formik\n        initialValues={{ \n          name: initialData.name, \n          address: initialData.address,\n          phone: initialData.phone,\n          email: initialData.email,\n          registration: initialData.registration,\n          taxRegistration: initialData.taxRegistration,\n        }}\n        validationSchema={ORGANIZATION_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log('submit values:')\n          console.log(values)\n\n          updateOrganization({ variables: {\n            input: {\n              id: match.params.id,\n              name: values.name,\n              address: values.address,\n              phone: values.phone,\n              email: values.email,\n              registration: values.registration,\n              taxRegistration: values.taxRegistration,\n            }\n          }})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('organization.organization.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n          }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <OrganizationForm \n            isSubmitting={isSubmitting}\n            values={values}\n            errors={errors}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n          />\n        )}\n      </Formik>\n    </OrganizationEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Page,\n  Grid,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nfunction OrganizationBrandingBase({t, match, history, children}) {\n  const id = match.params.id\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('organization.title')} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <h3>{t('organization.organization.branding.title')}</h3>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <h5>{t(\"general.menu\")}</h5>\n              <OrganizationMenu activeLink='organization_branding'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationBrandingBase))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ORGANIZATION_QUERY } from '../queries'\n\nimport {\n  Button,\n  GalleryCard,\n  Grid,\n  Icon\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationBrandingBase from \"./OrganizationBrandingBase\"\n\n\nconst UPDATE_ORGANIZATION = gql`\n  mutation UpdateOrganization($input: UpdateOrganizationInput!) {\n    updateOrganization(input: $input) {\n      organization {\n        id\n        name\n      }\n    }\n  }\n`\n\n\nfunction OrganizationBranding({t, match, history}) {\n  const id = match.params.id\n\n  const [updateOrganization] = useMutation(UPDATE_ORGANIZATION)\n  const { loading, error, data, fetchMore } = useQuery(GET_ORGANIZATION_QUERY, {\n    variables: {\n      id: id\n  }})\n\n  if (loading) return (\n    <OrganizationBrandingBase>\n      {t(\"general.loading_with_dots\")}\n    </OrganizationBrandingBase>\n  )\n  if (error) return (\n    <OrganizationBrandingBase>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </OrganizationBrandingBase>\n  )\n\n  const organization = data.organization\n\n  return (\n \n    <OrganizationBrandingBase>\n        <Grid.Row>\n          <Grid.Col md={4}>\n            <GalleryCard>\n              <h5>{t('organization.branding.logo_login')}</h5>\n              <GalleryCard.Image\n                src={organization.urlLogoLogin}\n              >\n              </GalleryCard.Image>\n              <GalleryCard.Details>\n                <Link to={`/organization/edit/${id}/branding/logoLogin`}>\n                  <Button block color=\"secondary\">\n                    {t(\"organization.branding.link_change\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </GalleryCard.Details>\n            </GalleryCard>\n          </Grid.Col>\n          <Grid.Col md={4}>\n            <GalleryCard>\n              <h5>{t('organization.branding.logo_invoice')}</h5>\n              <GalleryCard.Image\n                src={organization.urlLogoInvoice}\n              >\n              </GalleryCard.Image>\n              <GalleryCard.Details>\n                <Link to={`/organization/edit/${id}/branding/logoInvoice`}>\n                  <Button block color=\"secondary\">\n                    {t(\"organization.branding.link_change\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </GalleryCard.Details>\n            </GalleryCard>\n          </Grid.Col>\n          <Grid.Col md={4}>\n            <GalleryCard>\n              <h5>{t('organization.branding.logo_email')}</h5>\n              <GalleryCard.Image\n                src={organization.urlLogoEmail}\n              >\n              </GalleryCard.Image>\n              <GalleryCard.Details>\n                <Link to={`/organization/edit/${id}/branding/logoEmail`}>\n                  <Button block color=\"secondary\">\n                    {t(\"organization.branding.link_change\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </GalleryCard.Details>\n            </GalleryCard>\n          </Grid.Col>\n          <Grid.Col md={4}>\n            <GalleryCard>\n              <h5>{t('organization.branding.logo_shop_header')}</h5>\n              <GalleryCard.Image\n                src={organization.urlLogoShopHeader}\n              >\n              </GalleryCard.Image>\n              <GalleryCard.Details>\n                <Link to={`/organization/edit/${id}/branding/logoShopHeader`}>\n                  <Button block color=\"secondary\">\n                    {t(\"organization.branding.link_change\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </GalleryCard.Details>\n            </GalleryCard>\n          </Grid.Col>\n          <Grid.Col md={4}>\n            <GalleryCard>\n              <h5>{t('organization.branding.logo_self_checkin')}</h5>\n              <GalleryCard.Image\n                src={organization.urlLogoSelfCheckin}\n              >\n              </GalleryCard.Image>\n              <GalleryCard.Details>\n                <Link to={`/organization/edit/${id}/branding/logoSelfCheckin`}>\n                  <Button block color=\"secondary\">\n                    {t(\"organization.branding.link_change\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </GalleryCard.Details>\n            </GalleryCard>\n          </Grid.Col>\n        </Grid.Row>\n    </OrganizationBrandingBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationBranding))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { customFileInputLabelStyle } from \"../../../../tools/custom_file_input_label_style\"\n\n\nconst OrganizationBrandingEditForm = ({ \n  t, \n  history, \n  formTitle,\n  isSubmitting, \n  inputFileName, \n  fileInputLabel, \n  handleFileInputChange=f=>f\n}) => (\n    <FoForm>\n      <Card title={formTitle}>\n        <Card.Body>\n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group label={t('general.custom_file_input_label')}>\n                <div className=\"custom-file\">\n                  <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                  <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                    {fileInputLabel}\n                  </label>\n                </div>\n              </Form.Group>\n            </Grid.Col>\n          </Grid.Row>\n        </Card.Body>\n        <Card.Footer>\n            <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n            >\n            {t('general.submit')}\n            </Button>\n        </Card.Footer>\n      </Card>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationBrandingEditForm))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ORGANIZATION_QUERY } from '../queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationBrandingBase from \"./OrganizationBrandingBase\"\nimport OrganizationBrandingEditForm from \"./OrganizationBrandingEditForm\"\nimport { updateLocale } from 'moment'\n\n\nconst UPDATE_ORGANIZATION = gql`\n  mutation UpdateOrganization($input: UpdateOrganizationInput!) {\n    updateOrganization(input: $input) {\n      organization {\n        id\n      }\n    }\n  }\n`\n\n\nfunction OrganizationBrandingEdit({t, match, history}) {\n  const id = match.params.id\n  const updateField = match.params.update_field\n  const returnUrl = `/organization/edit/${id}/branding`\n\n  let formTitle = \"\"\n  switch (updateField) {\n    case \"logoLogin\":\n      formTitle = t(\"organization.branding.logo_login\")\n      break\n    default:\n      break\n  }\n\n\n  const [updateOrganization] = useMutation(UPDATE_ORGANIZATION)\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n\n  return (\n \n    <OrganizationBrandingBase>\n      <Formik\n        initialValues={{}}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"Submit values\")\n          console.log(values)\n          console.log(fileName)\n\n          let inputVars = {\n            id: id\n          }\n\n          let reader = new FileReader()\n          reader.onload = function(reader_event) {\n            console.log(reader_event.target.result)\n            let b64_enc_file = reader_event.target.result\n            console.log(b64_enc_file)\n            // Add uploaded document b64 encoded blob to input vars\n            switch(updateField) {\n              case \"logoLogin\":\n                inputVars.logoLoginFileName = fileName\n                inputVars.logoLogin = b64_enc_file\n                break\n              case \"logoInvoice\":\n                inputVars.logoInvoiceFileName = fileName\n                inputVars.logoInvoice = b64_enc_file\n                break\n              case \"logoEmail\":\n                inputVars.logoEmailFileName = fileName\n                inputVars.logoEmail = b64_enc_file\n                break\n              case \"logoShopHeader\":\n                inputVars.logoShopHeaderFileName = fileName\n                inputVars.logoShopHeader = b64_enc_file\n                break\n              case \"logoSelfCheckin\":\n                inputVars.logoSelfCheckinFileName = fileName\n                inputVars.logoSelfCheckin = b64_enc_file\n                break\n              default:\n                break              \n            }\n            \n            updateOrganization({ variables: {\n              input: inputVars\n            }, refetchQueries: [\n                {query: GET_ORGANIZATION_QUERY, variables: {id: id}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                setSubmitting(false)\n                history.push(returnUrl)\n                toast.success((t('organization.branding.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n          \n          let file = inputFileName.current.files[0]\n          if (file && file.size < 5242880) {\n            reader.readAsDataURL(file)\n          } else if (file && file.size > 5242880) { \n            toast.error(t(\"error_messages.selected_file_exceeds_max_filesize\"), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n            setSubmitting(false)\n          } else {\n            toast.error(t(\"general.please_select_a_file\"), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n            setSubmitting(false)\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <OrganizationBrandingEditForm \n            isSubmitting={isSubmitting}\n            formTitle={formTitle}\n            inputFileName={inputFileName}\n            fileInputLabel={fileInputLabel}\n            handleFileInputChange={handleFileInputChange}\n          />\n        )}\n      </Formik>\n    </OrganizationBrandingBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationBrandingEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationAnnouncementsBase({t, history, children, showEditBack=false}) {\n  return (\n    <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"organization.title\")} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n            {children}\n          </Grid.Col>\n          <Grid.Col md={3}>\n            {(showEditBack) ?\n              <Link to=\"/organization/announcements\">\n                <Button color=\"primary btn-block mb-6\">\n                  <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                </Button>\n              </Link>\n            :\n              <HasPermissionWrapper permission=\"add\"\n                          resource=\"organizationlevel\">\n                <Link to=\"/organization/announcements/add\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.announcements.add')}\n                  </Button>\n                </Link>\n                </HasPermissionWrapper>\n            }\n            <OrganizationMenu activeLink='announcements'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationAnnouncementsBase))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ANNOUNCEMENTS_QUERY = gql`\n  query OrganizationAnnouncements($after: String, $before: String) {\n    organizationAnnouncements(first: 15, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          displayPublic\n          displayShop\n          displayBackend\n          title\n          content\n          dateStart\n          dateEnd\n          priority\n        }\n      }\n    }\n  }\n`\n\nexport const GET_ANNOUNCEMENT_QUERY = gql`\n  query OrganizationAnnouncement($id: ID!) {\n    organizationAnnouncement(id:$id) {\n      id\n      displayPublic\n      displayShop\n      displayBackend\n      title\n      content\n      dateStart\n      dateEnd\n      priority\n    }\n  }\n`\n\nexport const ADD_ANNOUNCEMENT = gql`\n  mutation CreateOrganizationAnnouncement($input:CreateOrganizationAnnouncementInput!) {\n    createOrganizationAnnouncement(input: $input) {\n      organizationAnnouncement {\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_ANNOUNCEMENT = gql`\n  mutation UpdateOrganizationAnnouncement($input: UpdateOrganizationAnnouncementInput!) {\n    updateOrganizationAnnouncement(input: $input) {\n      organizationAnnouncement {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_ANNOUNCEMENT = gql`\nmutation DeleteOrganizationAnnouncement($input: DeleteOrganizationAnnouncementInput!) {\n  deleteOrganizationAnnouncement(input: $input) {\n    ok\n  }\n}\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\n\nimport {\n  Dimmer,\n  Button,\n  Icon,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport AppSettingsContext from '../../context/AppSettingsContext'\nimport ContentCard from \"../../general/ContentCard\"\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport OrganizationAnnouncementsBase from \"./OrganizationAnnouncementsBase\"\n\nimport { GET_ANNOUNCEMENTS_QUERY, DELETE_ANNOUNCEMENT } from \"./queries\"\n\nfunction OrganizationAnnouncements({ t, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ANNOUNCEMENTS_QUERY)\n  const [ deleteAnnouncement ] = useMutation(DELETE_ANNOUNCEMENT)\n\n  const cardTitle = t('organization.announcements.title')\n\n  // Loading\n  if (loading) return (\n    <OrganizationAnnouncementsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationAnnouncementsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationAnnouncementsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.announcements.error_loading')}</p>\n      </ContentCard>\n    </OrganizationAnnouncementsBase>\n  )\n\n  const organizationAnnouncements = data.organizationAnnouncements\n\n  // Empty list\n  if (!organizationAnnouncements.edges.length) { return (\n    <OrganizationAnnouncementsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.announcements.empty_list')}</p>\n      </ContentCard>\n    </OrganizationAnnouncementsBase>\n  )}\n\n  return (\n    <OrganizationAnnouncementsBase>\n      <ContentCard cardTitle={cardTitle}\n                    pageInfo={organizationAnnouncements.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: organizationAnnouncements.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationAnnouncements.edges\n                        const pageInfo = fetchMoreResult.organizationAnnouncements.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new organizationAnnouncements at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationAnnouncements: {\n                                __typename: previousResult.organizationAnnouncements.__typename,\n                                edges: [ ...previousResult.organizationAnnouncements.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.title')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.display_public')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.backend')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.priority')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                  {organizationAnnouncements.edges.map(({ node }) => (\n                    <Table.Row key={v4()}>\n                      <Table.Col key={v4()}>\n                        {node.title}\n                      </Table.Col>\n                      <Table.Col><BadgeBoolean value={node.displayPublic} /></Table.Col>\n                      <Table.Col><BadgeBoolean value={node.displayShop} /></Table.Col>\n                      <Table.Col><BadgeBoolean value={node.displayBackend} /></Table.Col>\n                      <Table.Col>{moment(node.dateStart).format(dateFormat)}</Table.Col>\n                      <Table.Col>{(node.dateEnd) ? moment(node.dateEnd).format(dateFormat): \"\"}</Table.Col>\n                      <Table.Col>{node.priority}</Table.Col>\n                      <Table.Col className=\"text-right\" key={v4()}>\n                        <Link to={`/organization/announcements/edit/${node.id}`}>\n                          <Button className='btn-sm' \n                                  color=\"secondary\">\n                            {t('general.edit')}\n                          </Button>\n                        </Link>\n                      </Table.Col>\n                      <Table.Col>\n                        <button \n                          className=\"icon btn btn-link btn-sm\" \n                          title={t('general.delete')} \n                          href=\"\"\n                          onClick={() => {\n                            confirm_delete({\n                              t: t,\n                              msgConfirm: t(\"organization.announcements.delete_confirm_msg\"),\n                              msgDescription: <p><br />{node.title}</p>,\n                              msgSuccess: t('organization.announcements.deleted'),\n                              deleteFunction: deleteAnnouncement,\n                              functionVariables: { variables: {\n                                input: {\n                                  id: node.id\n                                }\n                              }, refetchQueries: [\n                                {query: GET_ANNOUNCEMENTS_QUERY} \n                              ]}\n                            })\n                        }}>\n                          <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                        </button>\n                      </Table.Col>\n                      {/* <Mutation mutation={ARCHIVE_LEVEL} key={v4()}>\n                        {(archiveCostcenter, { data }) => (\n                          <Table.Col className=\"text-right\" key={v4()}>\n                            <button className=\"icon btn btn-link btn-sm\" \n                                title={t('general.archive')} \n                                href=\"\"\n                                onClick={() => {\n                                  console.log(\"clicked archived\")\n                                  let id = node.id\n                                  archiveCostcenter({ variables: {\n                                    input: {\n                                    id,\n                                    archived: !archived\n                                    }\n                            }, refetchQueries: [\n                                {query: GET_LEVELS_QUERY, variables: {\"archived\": archived }}\n                            ]}).then(({ data }) => {\n                              console.log('got data', data);\n                              toast.success(\n                                (archived) ? t('general.unarchived'): t('general.archived'), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error);\n                            })\n                            }}>\n                              <Icon prefix=\"fa\" name=\"inbox\" />\n                            </button>\n                          </Table.Col>\n                        )}\n                      </Mutation> */}\n                    </Table.Row>\n                  ))}\n              </Table.Body>\n            </Table>\n      </ContentCard>\n    </OrganizationAnnouncementsBase>\n  )\n}\n\n\n// const OrganizationLevels = ({ t, history, archived=false }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t(\"organization.title\")} />\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//             <Query query={GET_LEVELS_QUERY} variables={{ archived }}>\n//              {({ loading, error, data: {organizationLevels: levels}, refetch, fetchMore }) => {\n//                 // Loading\n//                 if (loading) return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}>\n//                     <Dimmer active={true}\n//                             loader={true}>\n//                     </Dimmer>\n//                   </ContentCard>\n//                 )\n//                 // Error\n//                 if (error) return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}>\n//                     <p>{t('organization.levels.error_loading')}</p>\n//                   </ContentCard>\n//                 )\n//                 const headerOptions = <Card.Options>\n//                   <Button color={(!archived) ? 'primary': 'secondary'}  \n//                           size=\"sm\"\n//                           onClick={() => {archived=false; refetch({archived});}}>\n//                     {t('general.current')}\n//                   </Button>\n//                   <Button color={(archived) ? 'primary': 'secondary'} \n//                           size=\"sm\" \n//                           className=\"ml-2\" \n//                           onClick={() => {archived=true; refetch({archived});}}>\n//                     {t('general.archive')}\n//                   </Button>\n//                 </Card.Options>\n                \n//                 // Empty list\n//                 if (!levels.edges.length) { return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}\n//                                headerContent={headerOptions}>\n//                     <p>\n//                     {(!archived) ? t('organization.levels.empty_list') : t(\"organization.levels.empty_archive\")}\n//                     </p>\n                   \n//                   </ContentCard>\n//                 )} else {   \n//                 // Life's good! :)\n//                 return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}\n//                                headerContent={headerOptions}\n//                                pageInfo={levels.pageInfo}\n//                                onLoadMore={() => {\n//                                 fetchMore({\n//                                   variables: {\n//                                     after: levels.pageInfo.endCursor\n//                                   },\n//                                   updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                     const newEdges = fetchMoreResult.organizationLevels.edges\n//                                     const pageInfo = fetchMoreResult.organizationLevels.pageInfo\n\n//                                     return newEdges.length\n//                                       ? {\n//                                           // Put the new levels at the end of the list and update `pageInfo`\n//                                           // so we have the new `endCursor` and `hasNextPage` values\n//                                           organizationLevels: {\n//                                             __typename: previousResult.organizationLevels.__typename,\n//                                             edges: [ ...previousResult.organizationLevels.edges, ...newEdges ],\n//                                             pageInfo\n//                                           }\n//                                         }\n//                                       : previousResult\n//                                   }\n//                                 })\n//                               }} >\n//                     <Table>\n//                           <Table.Header>\n//                             <Table.Row key={v4()}>\n//                               <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                             </Table.Row>\n//                           </Table.Header>\n//                           <Table.Body>\n//                               {levels.edges.map(({ node }) => (\n//                                 <Table.Row key={v4()}>\n//                                   <Table.Col key={v4()}>\n//                                     {node.name}\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     {(node.archived) ? \n//                                       <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/organization/levels/edit/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('general.edit')}\n//                                       </Button>\n//                                     }\n//                                   </Table.Col>\n//                                   <Mutation mutation={ARCHIVE_LEVEL} key={v4()}>\n//                                     {(archiveCostcenter, { data }) => (\n//                                       <Table.Col className=\"text-right\" key={v4()}>\n//                                         <button className=\"icon btn btn-link btn-sm\" \n//                                            title={t('general.archive')} \n//                                            href=\"\"\n//                                            onClick={() => {\n//                                              console.log(\"clicked archived\")\n//                                              let id = node.id\n//                                              archiveCostcenter({ variables: {\n//                                                input: {\n//                                                 id,\n//                                                 archived: !archived\n//                                                }\n//                                         }, refetchQueries: [\n//                                             {query: GET_LEVELS_QUERY, variables: {\"archived\": archived }}\n//                                         ]}).then(({ data }) => {\n//                                           console.log('got data', data);\n//                                           toast.success(\n//                                             (archived) ? t('general.unarchived'): t('general.archived'), {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                         }).catch((error) => {\n//                                           toast.error((t('general.toast_server_error')) + ': ' +  error, {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                           console.log('there was an error sending the query', error);\n//                                         })\n//                                         }}>\n//                                           <Icon prefix=\"fa\" name=\"inbox\" />\n//                                         </button>\n//                                       </Table.Col>\n//                                     )}\n//                                   </Mutation>\n//                                 </Table.Row>\n//                               ))}\n//                           </Table.Body>\n//                         </Table>\n//                   </ContentCard>\n//                 )}}\n//              }\n//             </Query>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"organizationlevel\">\n//               <Link to={\"/organization/announcements/add\"}\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(\"\")}>\n//                 <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.levels.add')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <OrganizationMenu activeLink='levels'/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// );\n\nexport default withTranslation()(withRouter(OrganizationAnnouncements))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ANNOUNCEMENT_SCHEMA = Yup.object().shape({\n    title: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    content: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    dateStart: Yup.date()\n      .required(t('yup.field_required')),\n    dateEnd: Yup.date()\n      .required(t('yup.field_required')),\n    priority: Yup.number()\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nfunction OrganizationAnnouncementForm({ t, history, isSubmitting, values, errors, setFieldTouched, setFieldValue, returnUrl }) {\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"displayPublic\" \n                  checked={values.displayPublic} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('organization.announcements.display_public')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"displayShop\" \n                  checked={values.displayShop} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('organization.announcements.display_shop')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"displayShop\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"displayBackend\" \n                  checked={values.displayBackend} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('organization.announcements.display_backend')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"displayBackend\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.title')}>\n              <Field type=\"text\" \n                      name=\"title\" \n                      className={(errors.title) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"title\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('organization.announcements.content')}>\n              <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"content\"\n                initialValue={values.content}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldTouched(\"content\", true)\n                  setFieldValue(\"content\", e.target.getContent())\n                }}\n                />\n              <ErrorMessage name=\"content\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                selected={values.dateStart}\n                onChange={(date) => setFieldValue(\"dateStart\", date)}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                selected={values.dateEnd}\n                onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.priority')}>\n              <Field type=\"text\" \n                      name=\"priority\" \n                      className={(errors.priority) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"priority\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n  \n  \nexport default withTranslation()(withRouter(OrganizationAnnouncementForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_ANNOUNCEMENTS_QUERY, ADD_ANNOUNCEMENT } from './queries'\nimport { ANNOUNCEMENT_SCHEMA } from './yupSchema'\nimport OrganizationAnnouncementForm from './OrganizationAnnouncementForm'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from '../OrganizationMenu'\nimport { dateToLocalISO } from '../../../tools/date_tools'\n\nfunction OrganizationAnnouncementAdd({t, history}) {\n  const returnUrl = \"/organization/announcements\"\n  const [addAnnouncement] = useMutation(ADD_ANNOUNCEMENT)\n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('organization.title')} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n            <Card>\n              <Card.Header>\n                <Card.Title>{t('organization.announcements.title_add')}</Card.Title>\n              </Card.Header>\n                <Formik\n                    initialValues={{ \n                      displayPublic: false,\n                      displayShop: false,\n                      displayBackend: false,\n                      title: '', \n                      content: '',\n                      dateStart: new Date(),\n                      dateEnd: new Date(),\n                      priority: 100,\n                    }}\n                    validationSchema={ANNOUNCEMENT_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n                      let inputValues = {\n                        displayPublic: values.displayPublic,\n                        displayBackend: values.displayBackend,\n                        displayShop: values.displayShop,\n                        title: values.title, \n                        content: values.content,\n                        dateStart: dateToLocalISO(values.dateStart),\n                        dateEnd: dateToLocalISO(values.dateEnd),\n                        priority: values.priority\n                      }\n\n                      addAnnouncement({ variables: {\n                        input: inputValues\n                      }, refetchQueries: [\n                          {query: GET_ANNOUNCEMENTS_QUERY}\n                      ]})\n                      .then(({ data }) => {\n                          console.log('got data', data)\n                          history.push(returnUrl)\n                          toast.success((t('organization.announcements.toast_add_success')), {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error)\n                          setSubmitting(false)\n                        })\n                    }}\n                    >\n                    {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n                        <OrganizationAnnouncementForm \n                          isSubmitting={isSubmitting}\n                          values={values}\n                          errors={errors}\n                          setFieldTouched={setFieldTouched}\n                          setFieldValue={setFieldValue}\n                          returnUrl={returnUrl}\n                        />\n                    )}\n                </Formik>\n            </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"organizationannouncement\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              <OrganizationMenu activeLink='announcements'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationAnnouncementAdd))","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ANNOUNCEMENTS_QUERY, GET_ANNOUNCEMENT_QUERY, UPDATE_ANNOUNCEMENT } from './queries'\nimport { ANNOUNCEMENT_SCHEMA } from './yupSchema'\nimport OrganizationAnnouncementForm from './OrganizationAnnouncementForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationAnnouncementsBase from \"./OrganizationAnnouncementsBase\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\n\nfunction OrganizationAnnouncementEdit({t, history, match}) {\n  const announcementId = match.params.id\n  const cardTitle = t(\"organization.announcements.title_edit\")\n  const returnUrl = \"/organization/announcements\"\n  \n  const { loading, error, data } = useQuery(GET_ANNOUNCEMENT_QUERY, { variables: {\n    id: announcementId\n  }})\n  const [updateAnnouncement] = useMutation(UPDATE_ANNOUNCEMENT)\n\n  if (loading) return (\n    <OrganizationAnnouncementsBase showEditBack={true}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          {t(\"general.loading_with_dots\")}\n        </Card.Body>\n      </Card>\n    </OrganizationAnnouncementsBase>\n  )\n\n  if (error) return (\n    <OrganizationAnnouncementsBase showEditBack={true}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          {t(\"general.error_sad_smiley\")}\n        </Card.Body>\n      </Card>\n    </OrganizationAnnouncementsBase>\n  )\n\n  const organizationAnnouncement = data.organizationAnnouncement\n  \n  return (\n    <OrganizationAnnouncementsBase showEditBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n          <Formik\n              initialValues={{ \n                displayPublic: organizationAnnouncement.displayPublic,\n                displayShop: organizationAnnouncement.displayShop,\n                displayBackend: organizationAnnouncement.displayBackend,\n                title: organizationAnnouncement.title, \n                content: organizationAnnouncement.content,\n                dateStart: organizationAnnouncement.dateStart,\n                dateEnd: organizationAnnouncement.dateEnd,\n                priority: organizationAnnouncement.priority,\n              }}\n              validationSchema={ANNOUNCEMENT_SCHEMA}\n              onSubmit={(values, { setSubmitting }) => {\n                let inputValues = {\n                  id: announcementId,\n                  displayPublic: values.displayPublic,\n                  displayBackend: values.displayBackend,\n                  displayShop: values.displayShop,\n                  title: values.title, \n                  content: values.content,\n                  dateStart: dateToLocalISO(values.dateStart),\n                  dateEnd: dateToLocalISO(values.dateEnd),\n                  priority: values.priority\n                }\n\n                updateAnnouncement({ variables: {\n                  input: inputValues\n                }, refetchQueries: [\n                    {query: GET_ANNOUNCEMENTS_QUERY}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.announcements.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n              }}\n              >\n              {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n                  <OrganizationAnnouncementForm \n                    isSubmitting={isSubmitting}\n                    values={values}\n                    errors={errors}\n                    setFieldTouched={setFieldTouched}\n                    setFieldValue={setFieldValue}\n                    returnUrl={returnUrl}\n                  />\n              )}\n          </Formik>\n      </Card>\n    </OrganizationAnnouncementsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationAnnouncementEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_APPOINTMENTS_QUERY = gql`\n  query OrganizationAppointments($after: String, $before: String, $organizationAppointmentCategory: ID!, $archived: Boolean!) {\n    organizationAppointments(first: 15, before: $before, after: $after, organizationAppointmentCategory: $organizationAppointmentCategory, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationAppointmentCategory {\n            id\n            name\n          }\n          archived,\n          displayPublic\n          name\n        }\n      }\n    }\n    organizationAppointmentCategory(id: $organizationAppointmentCategory) {\n      id\n      name\n    }\n  }\n`\n\nexport const GET_APPOINTMENT_QUERY = gql`\n  query OrganizationAppointment($id: ID!, $after: String, $before: String) {\n    organizationAppointment(id:$id) {\n      id\n      name\n      displayPublic\n      archived\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query AppointmentInputValues($after: String, $before: String, $archived: Boolean) {\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport CardHeaderSeparator from \"../../../general/CardHeaderSeparator\"\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\nimport { GET_APPOINTMENTS_QUERY } from \"./queries\"\n\nconst ARCHIVE_APPOINTMENT = gql`\n  mutation ArchiveOrganizationAppointment($input: ArchiveOrganizationAppointmentInput!) {\n    archiveOrganizationAppointment(input: $input) {\n      organizationAppointment {\n        id\n        archived\n      }\n    }\n  }\n`\n\nconst OrganizationAppointments = ({ t, history, match, archived=false }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"organization.title\")}>\n          <div className=\"page-options d-flex\">\n            <Link to=\"/organization/appointment_categories\" \n                  className='btn btn-outline-secondary btn-sm'>\n                <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.appointment_categories.title')}\n            </Link>\n          </div>\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            <Query query={GET_APPOINTMENTS_QUERY} variables={{ archived, organizationAppointmentCategory: match.params.category_id }}>\n             {({ loading, error, data: {organizationAppointments: appointments, organizationAppointmentCategory: location}, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('organization.appointments.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('organization.appointments.title')}>\n                    <p>{t('organization.appointments.error_loading')}</p>\n                  </ContentCard>\n                )\n                const headerOptions = <Card.Options>\n                  <Button color={(!archived) ? 'primary': 'secondary'}  \n                          size=\"sm\"\n                          onClick={() => {archived=false; refetch({archived});}}>\n                    {t('general.current')}\n                  </Button>\n                  <Button color={(archived) ? 'primary': 'secondary'} \n                          size=\"sm\" \n                          className=\"ml-2\" \n                          onClick={() => {archived=true; refetch({archived});}}>\n                    {t('general.archive')}\n                  </Button>\n                </Card.Options>\n\n                // Empty list\n                if (!appointments.edges.length) { return (\n                  <ContentCard cardTitle={t('organization.appointments.title')}\n                               headerContent={headerOptions}>\n                    <p>\n                    {(!archived) ? t('organization.appointments.empty_list') : t(\"organization.appointments.empty_archive\")}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('organization.appointments.title')}\n                               headerContent={headerOptions}\n                               pageInfo={appointments.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: appointments.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.organizationAppointmentPrices.edges\n                                    const pageInfo = fetchMoreResult.organizationAppointmentPrices.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new locations at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          organizationAppointmentPrices: {\n                                            __typename: previousResult.organizationAppointmentPrices.__typename,\n                                            edges: [ ...previousResult.organizationAppointmentPrices.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} >\n                    <div>\n                      <Alert type=\"primary\">\n                        <strong>{t('general.appointment_category')}</strong> {location.name}\n                      </Alert>\n\n                      <Table>\n                        <Table.Header>\n                          <Table.Row key={v4()}>\n                            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                            <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                          </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            {appointments.edges.map(({ node }) => (\n                              <Table.Row key={v4()}>\n                                <Table.Col key={v4()}>\n                                  {node.name}\n                                </Table.Col>\n                                <Table.Col key={v4()}>\n                                  {(node.displayPublic) ? \n                                    <Badge color=\"success\">{t('general.yes')}</Badge>: \n                                    <Badge color=\"danger\">{t('general.no')}</Badge>}\n                                </Table.Col>\n                                <Table.Col className=\"text-right\" key={v4()}>\n                                  {(node.archived) ? \n                                    <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                    <span>\n                                      <Button className='btn-sm' \n                                              onClick={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/edit/\" + node.id)}\n                                              color=\"secondary\">\n                                        {t('general.edit')}\n                                      </Button>\n                                      <Button className='btn-sm' \n                                              onClick={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/prices/\" + node.id)}\n                                              color=\"secondary\">\n                                        {t('organization.appointments.teacher_prices')}\n                                      </Button>\n                                    </span>\n                                  }\n                                </Table.Col>\n                                <Mutation mutation={ARCHIVE_APPOINTMENT} key={v4()}>\n                                  {(archiveAppointmentCategorysRoom, { data }) => (\n                                    <Table.Col className=\"text-right\" key={v4()}>\n                                      <button className=\"icon btn btn-link btn-sm\" \n                                          title={t('general.archive')} \n                                          href=\"\"\n                                          onClick={() => {\n                                            console.log(\"clicked archived\")\n                                            let id = node.id\n                                            archiveAppointmentCategorysRoom({ variables: {\n                                              input: {\n                                              id,\n                                              archived: !archived\n                                              }\n                                      }, refetchQueries: [\n                                          { \n                                            query: GET_APPOINTMENTS_QUERY, \n                                            variables: {\"archived\": archived, organizationAppointmentCategory: match.params.category_id }\n                                          }\n                                      ]}).then(({ data }) => {\n                                        console.log('got data', data);\n                                        toast.success(\n                                          (archived) ? t('general.unarchived'): t('general.archived'), {\n                                            position: toast.POSITION.BOTTOM_RIGHT\n                                          })\n                                      }).catch((error) => {\n                                        toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                            position: toast.POSITION.BOTTOM_RIGHT\n                                          })\n                                        console.log('there was an error sending the query', error);\n                                      })\n                                      }}>\n                                        <Icon prefix=\"fa\" name=\"inbox\" />\n                                      </button>\n                                    </Table.Col>\n                                  )}\n                                </Mutation>\n                              </Table.Row>\n                            ))}\n                        </Table.Body>\n                      </Table>\n                      </div>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointment\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/add/\")}>\n                <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.appointments.add')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointments'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointments))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const APPOINTMENT_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\n\nconst OrganizationAppointmentForm = ({ t, history, match, inputData, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"displayPublic\" \n                checked={values.displayPublic} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('organization.appointments.public')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n          </Form.Group>    \n\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.glaccount')}>\n              <Field component=\"select\" \n                    name=\"financeGlaccount\" \n                    className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.financeGlaccounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n            <Form.Group label={t('general.costcenter')}>\n              <Field component=\"select\" \n                    name=\"financeCostcenter\" \n                    className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.financeCostcenters.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={return_url}>\n            <Button color=\"link\" type=\"button\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentForm))","// @flow\n\nimport React from 'react'\nimport { Mutation, Query } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_APPOINTMENTS_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { APPOINTMENT_SCHEMA } from './yupSchema'\nimport OrganizationAppointmentForm from './OrganizationAppointmentForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nconst ADD_APPOINTMENT = gql`\n  mutation CreateOrganizationAppointment($input: CreateOrganizationAppointmentInput!) {\n    createOrganizationAppointment(input: $input) {\n      organizationAppointment {\n        id\n        organizationAppointmentCategory {\n          id\n          name\n        }\n        archived\n        displayPublic\n        name\n      }\n    }\n  }\n`\n\nconst return_url = \"/organization/appointment_categories/appointments/\"\n\nconst OrganizationAppointmentAdd = ({ t, history, match }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t('organization.title')} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n          <Card>\n            <Card.Header>\n              <Card.Title>{t('organization.appointments.title_add')}</Card.Title>\n            </Card.Header>\n            <Query query={GET_INPUT_VALUES_QUERY} variables = {{archived: false}} >\n              {({ loading, error, data, refetch }) => {\n                // Loading\n                if (loading) return <p>{t('general.loading_with_dots')}</p>\n                // Error\n                if (error) {\n                  console.log(error)\n                  return <p>{t('general.error_sad_smiley')}</p>\n                }\n                \n                console.log('query data')\n                console.log(data)\n                const inputData = data\n\n                return (\n                  <Mutation mutation={ADD_APPOINTMENT} onCompleted={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments\")}> \n                      {(addAppointment, { data }) => (\n                          <Formik\n                              initialValues={{ name: '', displayPublic: true }}\n                              validationSchema={APPOINTMENT_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  addAppointment({ variables: {\n                                    input: {\n                                      organizationAppointmentCategory: match.params.category_id,\n                                      name: values.name, \n                                      displayPublic: values.displayPublic,\n                                      financeGlaccount: values.financeGlaccount,\n                                      financeCostcenter: values.financeCostcenter\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_APPOINTMENTS_QUERY,\n                                      variables: {\"archived\": false, \"organizationAppointmentCategory\": match.params.category_id }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data);\n                                      toast.success((t('organization.appointments.toast_add_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values }) => (\n                                <OrganizationAppointmentForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments\"}\n                                  />\n                              )}\n                          </Formik>\n                      )}\n                    </Mutation>\n                )}}\n              </Query>                    \n          </Card>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointment\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(return_url + match.params.category_id)}>\n                <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointments'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APPOINTMENTS_QUERY, GET_APPOINTMENT_QUERY } from './queries'\nimport { APPOINTMENT_SCHEMA } from './yupSchema'\nimport OrganizationAppointmentForm from './OrganizationAppointmentForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nconst UPDATE_APPOINTMENT = gql`\n  mutation UpdateOrganizationAppointment($input: UpdateOrganizationAppointmentInput!) {\n    updateOrganizationAppointment(input: $input) {\n      organizationAppointment {\n        id\n        name\n        displayPublic\n      }\n    }\n  }\n`\n\n\nclass OrganizationAppointmentEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization appointment edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const category_id = match.params.category_id\n    const return_url = \"/organization/appointment_categories/\" + match.params.category_id + \"/appointments\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t('organization.title')} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.appointments.title_edit')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_APPOINTMENT_QUERY} variables={{ id }} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    const inputData = data\n                    const initialData = data.organizationAppointment\n                    console.log('query data')\n                    console.log(data)\n\n                    let initialGlaccount = \"\"\n                    if (initialData.financeGlaccount) {\n                      initialGlaccount =  initialData.financeGlaccount.id\n                    } \n\n                    let initialCostcenter = \"\"\n                    if (initialData.financeCostcenter) {\n                      initialCostcenter =  initialData.financeCostcenter.id\n                    } \n\n                    return (\n                      \n                      <Mutation mutation={UPDATE_APPOINTMENT} onCompleted={() => history.push(return_url)}> \n                      {(updateLocation, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                name: initialData.name, \n                                displayPublic: initialData.displayPublic,\n                                financeGlaccount: initialGlaccount,\n                                financeCostcenter: initialCostcenter,\n                              }}\n                              validationSchema={APPOINTMENT_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  updateLocation({ variables: {\n                                    input: {\n                                      id: match.params.id,\n                                      name: values.name,\n                                      displayPublic: values.displayPublic,\n                                      financeGlaccount: values.financeGlaccount,\n                                      financeCostcenter: values.financeCostcenter\n                                    }\n                                  }, refetchQueries: [\n                                    {query: GET_APPOINTMENTS_QUERY,\n                                      variables: {\"archived\": false, \"organizationAppointmentCategory\": match.params.category_id }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.appointments.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values }) => (\n                                <OrganizationAppointmentForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                />\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"change\"\n                                      resource=\"organizationappointment\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='appointments'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationAppointmentEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_APPOINTMENT_CATEGORIES_QUERY = gql`\n  query OrganizationAppointmentCategories($after: String, $before: String, $archived: Boolean) {\n    organizationAppointmentCategories(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id,\n          archived,\n          displayPublic,\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_APPOINTMENT_CATEGORY_QUERY = gql`\n  query OrganizationAppointmentCategory($id: ID!) {\n    organizationAppointmentCategory(id:$id) {\n      id\n      name\n      displayPublic\n      archived\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\nimport { GET_APPOINTMENT_CATEGORIES_QUERY } from \"./queries\"\n\nconst ARCHIVE_APPOINTMENT_CATEGORY = gql`\n  mutation ArchiveOrganizationAppointmentCategory($input: ArchiveOrganizationAppointmentCategoryInput!) {\n    archiveOrganizationAppointmentCategory(input: $input) {\n      organizationAppointmentCategory {\n        id\n        archived\n      }\n    }\n  }\n`\n\nconst OrganizationAppointmentCategories = ({ t, history, archived=false }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t('organization.title')} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n            <Query query={GET_APPOINTMENT_CATEGORIES_QUERY} variables={{ archived }}>\n             {({ loading, error, data: {organizationAppointmentCategories: appointment_categories}, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('organization.appointment_categories.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('organization.appointment_categories.title')}>\n                    <p>{t('organization.appointment_categories.error_loading')}</p>\n                  </ContentCard>\n                )\n                const headerOptions = <Card.Options>\n                  <Button color={(!archived) ? 'primary': 'secondary'}  \n                          size=\"sm\"\n                          onClick={() => {archived=false; refetch({archived});}}>\n                    {t('general.current')}\n                  </Button>\n                  <Button color={(archived) ? 'primary': 'secondary'} \n                          size=\"sm\" \n                          className=\"ml-2\" \n                          onClick={() => {archived=true; refetch({archived});}}>\n                    {t('general.archive')}\n                  </Button>\n                </Card.Options>\n                \n                // Empty list\n                if (!appointment_categories.edges.length) { return (\n                  <ContentCard cardTitle={t('organization.appointment_categories.title')}\n                               headerContent={headerOptions}>\n                    <p>\n                    {(!archived) ? t('organization.appointment_categories.empty_list') : t(\"organization.appointment_categories.empty_archive\")}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('organization.appointment_categories.title')}\n                               headerContent={headerOptions}\n                               pageInfo={appointment_categories.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: appointment_categories.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.organizationAppointmentCategories.edges\n                                    const pageInfo = fetchMoreResult.organizationAppointmentCategories.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new appointment_categories at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          organizationAppointmentCategories: {\n                                            __typename: previousResult.organizationAppointmentCategories.__typename,\n                                            edges: [ ...previousResult.organizationAppointmentCategories.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} >\n                    <Table>\n                          <Table.Header>\n                            <Table.Row key={v4()}>\n                              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                              {appointment_categories.edges.map(({ node }) => (\n                                <Table.Row key={v4()}>\n                                  <Table.Col key={v4()}>\n                                    {node.name}\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    {(node.displayPublic) ? \n                                      <Badge color=\"success\">{t('general.yes')}</Badge>: \n                                      <Badge color=\"danger\">{t('general.no')}</Badge>}\n                                  </Table.Col>\n                                  <Table.Col className=\"text-right\" key={v4()}>\n                                    {(node.archived) ? \n                                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                      <div>\n                                        <Button className='btn-sm' \n                                                onClick={() => history.push(\"/organization/appointment_categories/edit/\" + node.id)}\n                                                color=\"secondary\">\n                                          {t('general.edit')}\n                                        </Button>\n                                        <Button className='btn-sm' \n                                                onClick={() => history.push(\"/organization/appointment_categories/\" + node.id + \"/appointments/\")}\n                                                color=\"secondary\">\n                                          {t('organization.appointments.title')}\n                                        </Button>\n                                      </div>\n                                    }\n                                  </Table.Col>\n                                  <Mutation mutation={ARCHIVE_APPOINTMENT_CATEGORY} key={v4()}>\n                                    {(archiveLocation, { data }) => (\n                                      <Table.Col className=\"text-right\" key={v4()}>\n                                        <button className=\"icon btn btn-link btn-sm\" \n                                           title={t('general.archive')} \n                                           href=\"\"\n                                           onClick={() => {\n                                             console.log(\"clicked archived\")\n                                             let id = node.id\n                                             archiveLocation({ variables: {\n                                               input: {\n                                                id,\n                                                archived: !archived\n                                               }\n                                        }, refetchQueries: [\n                                            {query: GET_APPOINTMENT_CATEGORIES_QUERY, variables: {\"archived\": archived }}\n                                        ]}).then(({ data }) => {\n                                          console.log('got data', data);\n                                          toast.success(\n                                            (archived) ? t('general.unarchived'): t('general.archived'), {\n                                              position: toast.POSITION.BOTTOM_RIGHT\n                                            })\n                                        }).catch((error) => {\n                                          toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                              position: toast.POSITION.BOTTOM_RIGHT\n                                            })\n                                          console.log('there was an error sending the query', error);\n                                        })\n                                        }}>\n                                          <Icon prefix=\"fa\" name=\"inbox\" />\n                                        </button>\n                                      </Table.Col>\n                                    )}\n                                  </Mutation>\n                                </Table.Row>\n                              ))}\n                          </Table.Body>\n                        </Table>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointmentcategory\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/organization/appointment_categories/add\")}>\n                <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.appointment_categories.add')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointments'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentCategories))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const APPOINTMENT_CATEGORY_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n    Button,\n    Card,\n    Form\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nconst OrganizationAppointmentCategoryForm = ({ t, history, isSubmitting, values, errors, return_url }) => (\n  <FoForm>\n    <Card.Body>\n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n            <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"displayPublic\" \n              checked={values.displayPublic} />\n            <span className=\"custom-switch-indicator\" ></span>\n            <span className=\"custom-switch-description\">{t('organization.appointment_category.public')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n        </Form.Group>    \n\n        <Form.Group label={t('general.name')}>\n          <Field type=\"text\" \n                  name=\"name\" \n                  className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={return_url}>\n          <Button color=\"link\" type=\"button\">\n              {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationAppointmentCategoryForm))","// @flow\n\nimport React from 'react'\nimport { Mutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_APPOINTMENT_CATEGORIES_QUERY } from './queries'\nimport { APPOINTMENT_CATEGORY_SCHEMA } from './yupSchema'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationAppointmentCategoryForm from \"./OrganizationAppointmentCategoryForm\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nconst ADD_ORGANIZATION_APPOINTMENT_CATEGORY = gql`\n  mutation CreateOrganizationAppointmentCategory($input: CreateOrganizationAppointmentCategoryInput!) {\n    createOrganizationAppointmentCategory(input: $input) {\n      organizationAppointmentCategory {\n        id\n        archived\n        displayPublic\n        name\n      }\n    }\n  }\n`\n\nconst return_url = \"/organization/appointment_categories\"\n\nconst OrganizationAppointmentCategoryAdd = ({ t, history }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t('organization.title')} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n          <Card>\n            <Card.Header>\n              <Card.Title>{t('organization.appointment_categories.title_add')}</Card.Title>\n            </Card.Header>\n            <Mutation mutation={ADD_ORGANIZATION_APPOINTMENT_CATEGORY} onCompleted={() => history.push(return_url)}> \n                {(addAppointmentCategory, { data }) => (\n                    <Formik\n                        initialValues={{ name: '', displayPublic: true }}\n                        validationSchema={APPOINTMENT_CATEGORY_SCHEMA}\n                        onSubmit={(values, { setSubmitting }) => {\n                            addAppointmentCategory({ variables: {\n                              input: {\n                                name: values.name, \n                                displayPublic: values.displayPublic\n                              }\n                            }, refetchQueries: [\n                                {query: GET_APPOINTMENT_CATEGORIES_QUERY, variables: {\"archived\": false }}\n                            ]})\n                            .then(({ data }) => {\n                                console.log('got data', data);\n                                toast.success((t('organization.appointment_categories.toast_add_success')), {\n                                    position: toast.POSITION.BOTTOM_RIGHT\n                                  })\n                              }).catch((error) => {\n                                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                    position: toast.POSITION.BOTTOM_RIGHT\n                                  })\n                                console.log('there was an error sending the query', error)\n                                setSubmitting(false)\n                              })\n                        }}\n                        >\n                        {({ isSubmitting, errors, values }) => (\n                          <OrganizationAppointmentCategoryForm\n                            isSubmitting={isSubmitting}\n                            errors={errors}\n                            values={values}\n                            return_url={return_url}\n                          />\n                        )}\n                    </Formik>\n                )}\n                </Mutation>\n          </Card>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointmentcategory\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(return_url)}>\n                <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointment_categories'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentCategoryAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APPOINTMENT_CATEGORIES_QUERY, GET_APPOINTMENT_CATEGORY_QUERY } from './queries'\nimport { APPOINTMENT_CATEGORY_SCHEMA } from './yupSchema'\n\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\nimport OrganizationAppointmentCategoryForm from \"./OrganizationAppointmentCategoryForm\"\n\n\nconst UPDATE_APPOINTMENT_CATEGORY = gql`\n  mutation UpdateOrganizationAppointmentCategory($input: UpdateOrganizationAppointmentCategoryInput!) {\n    updateOrganizationAppointmentCategory(input: $input) {\n      organizationAppointmentCategory {\n        id\n        name\n        displayPublic\n      }\n    }\n  }\n`\n\n\nclass OrganizationAppointmentCategoryEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization location edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const return_url = \"/organization/appointment_categories\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t('organization.title')} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.appointment_categories.title_edit')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_APPOINTMENT_CATEGORY_QUERY} variables={{ id }} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    const initialData = data.organizationAppointmentCategory;\n                    console.log('query data')\n                    console.log(data)\n\n                    return (\n                      \n                      <Mutation mutation={UPDATE_APPOINTMENT_CATEGORY} onCompleted={() => history.push(return_url)}> \n                      {(updateAppointmentCategory, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                name: initialData.name, \n                                displayPublic: initialData.displayPublic \n                              }}\n                              validationSchema={APPOINTMENT_CATEGORY_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  updateAppointmentCategory({ variables: {\n                                    input: {\n                                      id: match.params.id,\n                                      name: values.name,\n                                      displayPublic: values.displayPublic \n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_APPOINTMENT_CATEGORIES_QUERY, variables: {\"archived\": false }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.appointment_categories.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values }) => (\n                                  <OrganizationAppointmentCategoryForm\n                                    isSubmitting={isSubmitting}\n                                    errors={errors}\n                                    values={values}\n                                    return_url={return_url}\n                                  />\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"change\"\n                                      resource=\"organizationappointmentcategory\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='appointment_categories'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationAppointmentCategoryEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_APPOINTMENT_PRICES_QUERY = gql`\n  query OrganizationAppointmentPrices($after: String, $before: String, $organizationAppointment: ID!) {\n    organizationAppointmentPrices(first: 15, before: $before, after: $after, organizationAppointment: $organizationAppointment) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          price\n          priceDisplay\n          financeTaxRate {\n            id\n            name\n          }\n        }\n      }\n    }\n    organizationAppointment(id: $organizationAppointment) {\n      id\n      name\n    }\n  }\n`\n\nexport const GET_APPOINTMENT_PRICE_QUERY = gql`\n  query OrganizationAppointment($id: ID!, $after: String, $before: String) {\n    organizationAppointmentPrice(id:$id) {\n      id\n      price\n      account {\n        id\n        fullName\n      }\n      financeTaxRate {\n        id\n        name\n      }\n    }\n    financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    accountTeacherProfiles(first: 100, before: $before, after: $after, appointments: true, account_IsActive: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query AppointmentInputValues($after: String, $before: String, $archived: Boolean) {\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    accountTeacherProfiles(first: 100, before: $before, after: $after, appointments: true, account_IsActive: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport CardHeaderSeparator from \"../../../../general/CardHeaderSeparator\"\nimport OrganizationMenu from \"../../../OrganizationMenu\"\n\nimport { GET_APPOINTMENT_PRICES_QUERY } from \"./queries\"\n\nconst DELETE_APPOINTMENT_PRICE = gql`\n  mutation DeleteOrganizationAppointmentPrice($input: DeleteOrganizationAppointmentPriceInput!) {\n    deleteOrganizationAppointmentPrice(input: $input) {\n      ok\n    }\n  }\n`\n\nconst OrganizationAppointmentPrices = ({ t, history, match }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"organization.title\")}>\n          <div className=\"page-options d-flex\">\n            <Link to={\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments\"}\n                  className='btn btn-outline-secondary btn-sm'>\n                <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('general.appointment')}\n            </Link>\n          </div>\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            <Query query={GET_APPOINTMENT_PRICES_QUERY} variables={{ organizationAppointment: match.params.appointment_id }}>\n             {({ loading, error, data, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('organization.appointment_prices.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('organization.appointment_prices.title')}>\n                    <p>{t('organization.appointment_prices.error_loading')}</p>\n                  </ContentCard>\n                )\n\n                const prices = data.organizationAppointmentPrices\n\n                // Empty list\n                if (!prices.edges.length) { return (\n                  <ContentCard cardTitle={t('organization.appointment_prices.title')}>\n                    <p>\n                      {t('organization.appointment_prices.empty_list')}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('organization.appointment_prices.title')}\n                               pageInfo={prices.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: prices.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.organizationAppointmentPrices.edges\n                                    const pageInfo = fetchMoreResult.organizationAppointmentPrices.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new locations at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          organizationAppointmentPrices: {\n                                            __typename: previousResult.organizationAppointmentPrices.__typename,\n                                            edges: [ ...previousResult.organizationAppointmentPrices.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} >\n                    <div>\n                      <Alert type=\"primary\">\n                        <strong>{t('general.prices_for')} {t('general.appointment')}</strong> {data.organizationAppointment.name}\n                      </Alert>\n\n                      <Table>\n                        <Table.Header>\n                          <Table.Row key={v4()}>\n                            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                            <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n                          </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            {prices.edges.map(({ node }) => (\n                              <Table.Row key={v4()}>\n                                {console.log(node)}\n                                <Table.Col key={v4()}>\n                                  {node.account.fullName}\n                                </Table.Col>\n                                <Table.Col key={v4()}>\n                                  {node.priceDisplay}\n                                </Table.Col>\n                                <Table.Col className=\"text-right\" key={v4()}>\n                                  {(node.archived) ? \n                                    <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                    <span>\n                                      <Button className='btn-sm' \n                                              onClick={() => history.push(\"/organization/appointment_categories/\" + \n                                                match.params.category_id + \"/appointments/prices/\" + match.params.appointment_id + \"/edit/\" + node.id)}\n                                              color=\"secondary\">\n                                        {t('general.edit')}\n                                      </Button>\n                                    </span>\n                                  }\n                                </Table.Col>\n                                <Mutation mutation={DELETE_APPOINTMENT_PRICE} key={v4()}>\n                                  {(deleteAppointmentPrice, { data }) => (\n                                    <Table.Col className=\"text-right\" key={v4()}>\n                                      <button className=\"icon btn btn-link btn-sm\" \n                                        title={t('general.delete')} \n                                        href=\"\"\n                                        onClick={() => {\n                                          confirm_delete({\n                                            t: t,\n                                            msgConfirm: t(\"organization.appointment_prices.delete_confirm_msg\"),\n                                            msgDescription: <p>{node.account.fullName} {node.priceDisplay}</p>,\n                                            msgSuccess: t('organization.appointment_prices.deleted'),\n                                            deleteFunction: deleteAppointmentPrice,\n                                            functionVariables: { variables: {\n                                              input: {\n                                                id: node.id\n                                              }\n                                            }, refetchQueries: [\n                                              {query: GET_APPOINTMENT_PRICES_QUERY, variables: { organizationAppointment: match.params.appointment_id }} \n                                            ]}\n                                          })\n                                      }}>\n                                        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                                      </button>\n                                    </Table.Col>\n                                  )}\n                                </Mutation>\n                              </Table.Row>\n                            ))}\n                        </Table.Body>\n                      </Table>\n                      </div>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointment\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/prices/\" + match.params.appointment_id + \"/add\")}>\n                <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.appointment_prices.add')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointments'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentPrices))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const APPOINTMENT_PRICE_SCHEMA = Yup.object().shape({\n    account: Yup.string()\n      .required(t('yup.field_required')),\n    price: Yup.number()\n      .required(t('yup.field_required')),\n    financeTaxRate: Yup.string()\n      .required(t('yup.field_required'))\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\n\nconst OrganizationAppointmentForm = ({ t, history, match, inputData, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n         <Form.Group label={t('general.teacher')}>\n            <Field component=\"select\" \n                    name=\"account\" \n                    className={(errors.account) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n              {inputData.accountTeacherProfiles.edges.map(({ node }) =>\n                <option value={node.account.id} key={v4()}>{node.account.fullName}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"account\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.price')}>\n              <Field type=\"text\" \n                    name=\"price\" \n                    className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n            <Form.Group label={t('general.taxrate')}>\n              <Field component=\"select\" \n                      name=\"financeTaxRate\" \n                      className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in appointment price form:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.financeTaxRates.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={return_url}>\n            <Button color=\"link\" type=\"button\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentForm))","// @flow\n\nimport React from 'react'\nimport { Mutation, Query } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_APPOINTMENT_PRICES_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { APPOINTMENT_PRICE_SCHEMA } from './yupSchema'\nimport OrganizationAppointmentPriceForm from './OrganizationAppointmentPriceForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../../OrganizationMenu\"\n\n\nconst ADD_APPOINTMENT_PRICE = gql`\n  mutation CreateOrganizationAppointmentPrice($input: CreateOrganizationAppointmentPriceInput!) {\n    createOrganizationAppointmentPrice(input: $input) {\n      organizationAppointmentPrice {\n        id\n        account {\n          id\n          fullName\n        }\n        organizationAppointment {\n          id\n          name\n        }\n        price\n        financeTaxRate {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst return_url = \"/organization/appointment_categories/appointments/\"\n\nconst OrganizationAppointmentPriceAdd = ({ t, history, match }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t('organization.title')} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n          <Card>\n            <Card.Header>\n              <Card.Title>{t('organization.appointment_prices.title_add')}</Card.Title>\n            </Card.Header>\n            <Query query={GET_INPUT_VALUES_QUERY} variables = {{archived: false}} >\n              {({ loading, error, data, refetch }) => {\n                // Loading\n                if (loading) return <p>{t('general.loading_with_dots')}</p>\n                // Error\n                if (error) {\n                  console.log(error)\n                  return <p>{t('general.error_sad_smiley')}</p>\n                }\n                \n                console.log('query data')\n                console.log(data)\n                const inputData = data\n\n                return (\n                  <Mutation mutation={ADD_APPOINTMENT_PRICE} onCompleted={\n                    () => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/prices/\" + match.params.appointment_id)}> \n                      {(addAppointment, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                organizationAppointment: '', \n                                account: '',\n                                price: '',\n                                financeTaxRate: \"\",\n                              }}\n                              validationSchema={APPOINTMENT_PRICE_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  addAppointment({ variables: {\n                                    input: {\n                                      organizationAppointment: match.params.appointment_id,\n                                      account: values.account,\n                                      price: values.price, \n                                      financeTaxRate: values.financeTaxRate,\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_APPOINTMENT_PRICES_QUERY,\n                                      variables: {\"organizationAppointment\": match.params.appointment_id }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data);\n                                      toast.success((t('organization.appointment_prices.toast_add_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values }) => (\n                                <OrganizationAppointmentPriceForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/prices/\" + match.params.appointment_id}\n                                />\n                              )}\n                          </Formik>\n                      )}\n                    </Mutation>\n                )}}\n              </Query>                    \n          </Card>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointmentprice\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/prices/\" + match.params.appointment_id)}>\n                <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointments'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentPriceAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APPOINTMENT_PRICES_QUERY, GET_APPOINTMENT_PRICE_QUERY } from './queries'\nimport { APPOINTMENT_PRICE_SCHEMA } from './yupSchema'\nimport OrganizationAppointmentPriceForm from './OrganizationAppointmentPriceForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../../OrganizationMenu\"\n\n\nconst UPDATE_APPOINTMENT_PRICE = gql`\n  mutation UpdateOrganizationAppointmentPrice($input: UpdateOrganizationAppointmentPriceInput!) {\n    updateOrganizationAppointmentPrice(input: $input) {\n      organizationAppointmentPrice {\n        id\n        account {\n          id\n          fullName\n        }\n        organizationAppointment {\n          id\n          name\n        }\n        price\n        financeTaxRate {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nclass OrganizationAppointmentPriceEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization appointment edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const appointment_id = match.params.appointment_id\n    const category_id = match.params.category_id\n    const return_url = \"/organization/appointment_categories/\" + category_id + \"/appointments/prices/\" + appointment_id\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t('organization.title')} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.appointment_prices.title_edit')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_APPOINTMENT_PRICE_QUERY} variables={{ id: id }} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    const inputData = data\n                    const initialData = data.organizationAppointmentPrice\n                    console.log('query data')\n                    console.log(data)\n\n                    let initialAccount = \"\"\n                    if (initialData.account) {\n                      initialAccount = initialData.account.id\n                    }\n\n                    let initialFinanceTaxRate = \"\"\n                    if (initialData.financeTaxRate) {\n                      initialFinanceTaxRate =  initialData.financeTaxRate.id\n                    } \n\n                    return (\n                      \n                      <Mutation mutation={UPDATE_APPOINTMENT_PRICE} onCompleted={() => history.push(return_url)}> \n                      {(updateLocation, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                account: initialAccount,\n                                price: initialData.price, \n                                financeTaxRate: initialFinanceTaxRate,\n                              }}\n                              validationSchema={APPOINTMENT_PRICE_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  updateLocation({ variables: {\n                                    input: {\n                                      id: match.params.id,\n                                      account: values.account,\n                                      price: values.price,\n                                      financeTaxRate: values.financeTaxRate,\n                                    }\n                                  }, refetchQueries: [\n                                    {query: GET_APPOINTMENT_PRICES_QUERY,\n                                      variables: {organizationAppointment: match.params.appointment_id }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.appointment_prices.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values }) => (\n                                <OrganizationAppointmentPriceForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                />\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"change\"\n                                      resource=\"organizationappointmentprice\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='appointments'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationAppointmentPriceEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationClasspassesBase({t, children, showBack=false}) {\n  const activeLink = \"classpasses\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/classpasses/groups\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"folder\" /> {t('general.groups')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/classpasses/\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-let\" /> {t('general.back')}\n                  </Button>\n                </Link>            \n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationclasspass\">\n                  <Link to=\"/organization/classpasses/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.classpasses.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>              \n              }\n\n              <OrganizationMenu activeLink={activeLink}/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  ) \n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_CLASSPASSES_QUERY = gql`\n  query OrganizationClasspasses($after: String, $before: String, $archived: Boolean) {\n    organizationClasspasses(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          displayShop\n          trialPass\n          name\n          description\n          price\n          priceDisplay\n          financeTaxRate {\n            id\n            name\n          }\n          validity\n          validityUnit\n          validityUnitDisplay\n          classes\n          unlimited\n          organizationMembership {\n            id\n            name\n          }\n          quickStatsAmount\n          financeGlaccount {\n            id \n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_CLASSPASS_QUERY = gql`\n  query OrganizationClasspass($id: ID!, $after: String, $before: String) {\n    organizationClasspass(id:$id) {\n      id\n      archived\n      displayPublic\n      displayShop\n      trialPass\n      trialTimes\n      name\n      description\n      price\n      priceDisplay\n      financeTaxRate {\n        id\n        name\n      }\n      validity\n      validityUnit\n      validityUnitDisplay\n      classes\n      unlimited\n      organizationMembership {\n        id\n        name\n      }\n      quickStatsAmount\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    organizationMemberships(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financeTaxRates(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InputValues($after: String, $before: String) {\n    organizationMemberships(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financeTaxRates(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const CREATE_CLASSPASS = gql`\nmutation CreateClasspass($input: CreateOrganizationClasspassInput!) {\n  createOrganizationClasspass(input: $input) {\n    organizationClasspass {\n      id\n      displayPublic\n      displayShop\n      name\n      description\n      price\n      financeTaxRate {\n        id\n        name\n      }\n      validity\n      validityUnit\n      classes\n      unlimited\n      organizationMembership {\n        id\n        name\n      }\n      quickStatsAmount\n      financeGlaccount {\n        id\n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n  }\n}\n`\n\nexport const UPDATE_CLASSPASS = gql`\n  mutation UpdateOrganizationClasspass($input: UpdateOrganizationClasspassInput!) {\n    updateOrganizationClasspass(input: $input) {\n      organizationClasspass {\n        id\n        displayPublic\n        displayShop\n        name\n        description\n        price\n        financeTaxRate {\n          id\n          name\n        }\n        validity\n        validityUnit\n        classes\n        unlimited\n        organizationMembership {\n          id\n          name\n        }\n        quickStatsAmount\n        financeGlaccount {\n          id\n          name\n        }\n        financeCostcenter {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const ARCHIVE_CLASSPASS = gql`\nmutation ArchiveOrganizationClasspass($input: ArchiveOrganizationClasspassInput!) {\n  archiveOrganizationClasspass(input: $input) {\n    organizationClasspass {\n      id\n      archived\n    }\n  }\n}\n`\n","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesBase from './OrganizationClasspassesBase'\n\nimport { GET_CLASSPASSES_QUERY, ARCHIVE_CLASSPASS } from \"./queries\"\n\n\nfunction OrganizationClasspasses({t, history}) {\n  const cardTitle = t('organization.classpasses.title')\n  let [archived, setArchived] = useState(false)\n\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_CLASSPASSES_QUERY)\n  const [ archiveClasspass ] = useMutation(ARCHIVE_CLASSPASS)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: archived});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: archived});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <OrganizationClasspassesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n  if (error) return (\n    <OrganizationClasspassesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.classpasses.error_loading')}</p>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n  let classpasses = data.organizationClasspasses\n\n  // Empty list\n  if (!classpasses.edges.length) { return (\n    <OrganizationClasspassesBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('organization.classpasses.empty_list') : t(\"organization.classpasses.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )}\n\n  return (\n    <OrganizationClasspassesBase>\n      <ContentCard \n        cardTitle={cardTitle}\n        headerContent={headerOptions}\n        pageInfo={classpasses.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: classpasses.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.organizationClasspasses.edges\n            const pageInfo = fetchMoreResult.organizationClasspasses.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new memberships at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  organizationMemberships: {\n                    __typename: previousResult.organizationClasspasses.__typename,\n                    edges: [ ...previousResult.organizationClasspasses.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n              <Table.ColHeader>{t('organization.classpasses.trial_pass')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.classes')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.validity')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {classpasses.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <BadgeBoolean value={node.displayPublic} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <BadgeBoolean value={node.displayShop} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <BadgeBoolean value={node.trialPass} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.unlimited) ? t('general.unlimited') : node.classes }\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.priceDisplay} <br />\n                    {(node.financeTaxRate) ? \n                      <span className=\"text-muted\">{node.financeTaxRate.name}</span>\n                      : \"\"\n                    }\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.validity} <br />\n                    <span className=\"text-muted\">\n                      {node.validityUnitDisplay}\n                    </span>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/organization/classpasses/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveClasspass({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_CLASSPASSES_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                      </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n}\n\n\n// const OrganizationClasspasses = ({ t, history, archived=false }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t(\"organization.title\")}>\n//          <div className=\"page-options d-flex\">\n//             <Link to=\"/organization/classpasses/groups\" \n//                   className='btn btn-outline-secondary btn-sm'>\n//                 <Icon prefix=\"fe\" name=\"folder\" /> {t('general.groups')}\n//             </Link>\n//           </div>\n//         </Page.Header>\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//             <Query query={GET_CLASSPASSES_QUERY} variables={{ archived }}>\n//              {({ loading, error, data: {organizationClasspasses: classpasses}, refetch, fetchMore }) => {\n//                 // Loading\n//                 if (loading) return (\n//                   <ContentCard cardTitle={t('organization.classpasses.title')}>\n//                     <Dimmer active={true}\n//                             loader={true}>\n//                     </Dimmer>\n//                   </ContentCard>\n//                 )\n//                 // Error\n//                 if (error) return (\n//                   <ContentCard cardTitle={t('organization.classpasses.title')}>\n//                     <p>{t('organization.classpasses.error_loading')}</p>\n//                   </ContentCard>\n//                 )\n//                 const headerOptions = <Card.Options>\n//                   {/* <Link to=\"/organization/classpasses/groups\">\n//                     <Button color='secondary'  \n//                             size=\"sm\"\n//                             icon=\"folder\"\n//                             // onClick={() => {archived=false; refetch({archived});}}>\n//                             >\n//                       {t('general.groups')}\n//                     </Button>\n//                   </Link>\n//                   <CardHeaderSeparator /> */}\n//                   <Button color={(!archived) ? 'primary': 'secondary'}  \n//                           size=\"sm\"\n//                           onClick={() => {archived=false; refetch({archived});}}>\n//                     {t('general.current')}\n//                   </Button>\n//                   <Button color={(archived) ? 'primary': 'secondary'} \n//                           size=\"sm\" \n//                           className=\"ml-2\" \n//                           onClick={() => {archived=true; refetch({archived});}}>\n//                     {t('general.archive')}\n//                   </Button>\n//                 </Card.Options>\n                \n//                 // Empty list\n//                 if (!classpasses.edges.length) { return (\n//                   <ContentCard cardTitle={t('organization.classpasses.title')}\n//                                headerContent={headerOptions}>\n//                     <p>\n//                     {(!archived) ? t('organization.classpasses.empty_list') : t(\"organization.classpasses.empty_archive\")}\n//                     </p>\n                   \n//                   </ContentCard>\n//                 )} else {   \n//                 // Life's good! :)\n//                 return (\n//                   <ContentCard cardTitle={t('organization.classpasses.title')}\n//                                headerContent={headerOptions}\n//                                pageInfo={classpasses.pageInfo}\n//                                onLoadMore={() => {\n//                                 fetchMore({\n//                                   variables: {\n//                                     after: classpasses.pageInfo.endCursor\n//                                   },\n//                                   updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                     const newEdges = fetchMoreResult.organizationClasspasses.edges\n//                                     const pageInfo = fetchMoreResult.organizationClasspasses.pageInfo\n\n//                                     return newEdges.length\n//                                       ? {\n//                                           // Put the new memberships at the end of the list and update `pageInfo`\n//                                           // so we have the new `endCursor` and `hasNextPage` values\n//                                           organizationMemberships: {\n//                                             __typename: previousResult.organizationClasspasses.__typename,\n//                                             edges: [ ...previousResult.organizationClasspasses.edges, ...newEdges ],\n//                                             pageInfo\n//                                           }\n//                                         }\n//                                       : previousResult\n//                                   }\n//                                 })\n//                               }} >\n//                     <Table>\n//                           <Table.Header>\n//                             <Table.Row key={v4()}>\n//                               <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('organization.classpasses.trial_pass')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('general.classes')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('general.validity')}</Table.ColHeader>\n//                             </Table.Row>\n//                           </Table.Header>\n//                           <Table.Body>\n//                               {classpasses.edges.map(({ node }) => (\n//                                 <Table.Row key={v4()}>\n//                                   <Table.Col key={v4()}>\n//                                     {node.name}\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     <BadgeBoolean value={node.displayPublic} />\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     <BadgeBoolean value={node.displayShop} />\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     <BadgeBoolean value={node.trialPass} />\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     {(node.unlimited) ? t('general.unlimited') : node.classes }\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     {node.priceDisplay} <br />\n//                                     {(node.financeTaxRate) ? \n//                                       <span className=\"text-muted\">{node.financeTaxRate.name}</span>\n//                                       : \"\"\n//                                     }\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     {node.validity} <br />\n//                                     <span className=\"text-muted\">\n//                                       {node.validityUnitDisplay}\n//                                     </span>\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     {(node.archived) ? \n//                                       <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/organization/classpasses/edit/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('general.edit')}\n//                                       </Button>\n//                                     }\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     <button className=\"icon btn btn-link btn-sm\" \n//                                         title={t('general.archive')} \n//                                         href=\"\"\n//                                         onClick={() => {\n//                                           console.log(\"clicked archived\")\n//                                           let id = node.id\n//                                           archiveClasspass({ variables: {\n//                                             input: {\n//                                             id,\n//                                             archived: !archived\n//                                             }\n//                                     }, refetchQueries: [\n//                                         {query: GET_CLASSPASSES_QUERY, variables: {\"archived\": archived }}\n//                                     ]}).then(({ data }) => {\n//                                       console.log('got data', data);\n//                                       toast.success(\n//                                         (archived) ? t('general.unarchived'): t('general.archived'), {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                     }).catch((error) => {\n//                                       toast.error((t('general.toast_server_error')) + ': ' +  error, {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                       console.log('there was an error sending the query', error);\n//                                     })\n//                                     }}>\n//                                       <Icon prefix=\"fa\" name=\"inbox\" />\n//                                     </button>\n//                                       </Table.Col>\n//                                 </Table.Row>\n//                               ))}\n//                           </Table.Body>\n//                         </Table>\n//                   </ContentCard>\n//                 )}}\n//              }\n//             </Query>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"organizationclasspass\">\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(\"/organization/classpasses/add\")}>\n//                 <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.classpasses.add')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <OrganizationMenu activeLink='classpasses'/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// );\n\nexport default withTranslation()(withRouter(OrganizationClasspasses))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const CLASSPASS_SCHEMA = Yup.object().shape({\n  name: Yup.string()\n  .min(3, t('yup.min_len_3'))\n  .required(t('yup.field_required')),\n  price: Yup.number()\n    .required(t('yup.field_required')),\n  financeTaxRate: Yup.string()\n    .required(t('yup.field_required')),\n  validity: Yup.number()\n    .positive(t('yup.positive_number_required'))\n    .required(t('yup.field_required')),\n  validityUnit: Yup.string()\n    .required(t('yup.field_required')),\n  classes: Yup.number(),\n  quickStatsAmount: Yup.number()\n})\n\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\n\nimport {\n  Grid,\n  Button,\n  Card,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n\nclass OrganizationClasspassForm extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization classpass form props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const return_url = \"/organization/classpasses\"\n    const initialData = this.props.initialData\n    const isSubmitting = this.props.isSubmitting\n    const setFieldValue = this.props.setFieldValue\n    const setFieldTouched = this.props.setFieldTouched\n    const errors = this.props.errors\n    const values = this.props.values\n\n    return (\n        <FoForm>\n            <Card.Body> \n            <Form.Group>\n                <Form.Label className=\"custom-switch\">\n                    <Field \n                    className=\"custom-switch-input\"\n                    type=\"checkbox\" \n                    name=\"displayPublic\" \n                    checked={values.displayPublic} />\n                    <span className=\"custom-switch-indicator\" ></span>\n                    <span className=\"custom-switch-description\">{t('organization.classpass.public')}</span>\n                </Form.Label>\n                <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n            </Form.Group>      \n            <Form.Group>\n                <Form.Label className=\"custom-switch\">\n                    <Field \n                    className=\"custom-switch-input\"\n                    type=\"checkbox\" \n                    name=\"displayShop\" \n                    checked={values.displayShop} />\n                    <span className=\"custom-switch-indicator\" ></span>\n                    <span className=\"custom-switch-description\">{t('organization.classpass.shop')}</span>\n                </Form.Label>\n                <ErrorMessage name=\"displayShop\" component=\"div\" />   \n            </Form.Group> \n            <Grid.Row>\n              <Grid.Col>\n                <Form.Group>\n                  <Form.Label className=\"custom-switch\">\n                      <Field \n                      className=\"custom-switch-input\"\n                      type=\"checkbox\" \n                      name=\"trialPass\" \n                      checked={values.trialPass} />\n                      <span className=\"custom-switch-indicator\" ></span>\n                      <span className=\"custom-switch-description\">{t('organization.classpass.trial_pass')}</span>\n                  </Form.Label>\n                  <ErrorMessage name=\"displayShop\" component=\"div\" />   \n                </Form.Group>\n              </Grid.Col>\n            </Grid.Row>  \n            { (!values.trialPass) ? \"\" : \n              <Form.Group label={t('organization.classpass.trial_times')} >\n                <Field type=\"text\" \n                    name=\"trialTimes\" \n                    className={(errors.trialTimes) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n                <ErrorMessage name=\"trialTimes\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            }                \n            <Form.Group label={t('general.name')} >\n                <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n                <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n            <Form.Group label={t('general.description')}>\n                <Editor\n                  tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                  textareaName=\"description\"\n                  initialValue={values.description}\n                  init={tinymceBasicConf}\n                  onBlur={(e) => {\n                    setFieldTouched(\"description\", true)\n                    setFieldValue(\"description\", e.target.getContent())\n                  }}\n                />\n                <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n            <Grid.Row>\n              <Grid.Col>\n                <Form.Group label={t('general.price')}>\n                    <Field type=\"text\" \n                        name=\"price\" \n                        className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\" />\n                    <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n              <Grid.Col>\n                <Form.Group label={t('general.taxrate')}>\n                  <Field component=\"select\" \n                          name=\"financeTaxRate\" \n                          className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\">\n                  {console.log(\"query data in classpass add:\")}\n                  {console.log(initialData)}\n                  <option value=\"\" key={v4()}></option>\n                  {initialData.financeTaxRates.edges.map(({ node }) =>\n                      <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n                  )}\n                  </Field>\n                  <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Col>\n                <Form.Group label={t('general.validity')}>\n                  <Field type=\"text\" \n                      name=\"validity\" \n                      className={(errors.validity) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n                  <ErrorMessage name=\"validity\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n              <Grid.Col>\n                <Form.Group label={t('general.validity_unit')}>\n                  <Field component=\"select\" \n                          name=\"validityUnit\" \n                          className={(errors.validityUnit) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\">\n                  <option value=\"DAYS\" key={v4()}>{t('validity.days')}</option>\n                  <option value=\"WEEKS\" key={v4()}>{t('validity.weeks')}</option>\n                  <option value=\"MONTHS\" key={v4()}>{t('validity.months')}</option>\n                  </Field>\n                  <ErrorMessage name=\"validityUnit\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n            </Grid.Row>\n            <Form.Group>\n                <Form.Label className=\"custom-switch\">\n                    <Field \n                    className=\"custom-switch-input\"\n                    type=\"checkbox\" \n                    name=\"unlimited\" \n                    checked={values.unlimied} />\n                    <span className=\"custom-switch-indicator\" ></span>\n                    <span className=\"custom-switch-description\">{t('general.unlimited')}</span>\n                </Form.Label>\n                <ErrorMessage name=\"unlimited\" component=\"div\" />   \n            </Form.Group>  \n            { (values.unlimited) ? \"\" :\n            <Form.Group label={t('general.classes')}>\n                <Field type=\"text\" \n                        name=\"classes\" \n                        className={(errors.classes) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\" />\n                <ErrorMessage name=\"classes\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> } \n            {/* <Form.Group label={t('general.membership')}>\n                <Field component=\"select\" \n                        name=\"organizationMembership\" \n                        className={(errors.organizationMembership) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.membership_not_required\")}</option>\n                {initialData.organizationMemberships.edges.map(({ node }) =>\n                    <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                )}\n                </Field>\n                <ErrorMessage name=\"organizationMembership\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>  */}\n            { (values.unlimited) ? \n                    <Form.Group label={t('general.quickStatsAmount')}>\n                    <Field type=\"text\" \n                            name=\"quickStatsAmount\" \n                            className={(errors.quickStatsAmount) ? \"form-control is-invalid\" : \"form-control\"} \n                            autoComplete=\"off\" />\n                    <ErrorMessage name=\"quickStatsAmount\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                    : \"\"\n            }\n            <Grid.Row>\n              <Grid.Col>\n                <Form.Group label={t('general.glaccount')}>\n                  <Field component=\"select\" \n                          name=\"financeGlaccount\" \n                          className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\">\n                  <option value=\"\" key={v4()}></option>\n                  {initialData.financeGlaccounts.edges.map(({ node }) =>\n                      <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                  )}\n                  </Field>\n                  <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n              <Grid.Col>\n                <Form.Group label={t('general.costcenter')}>\n                  <Field component=\"select\" \n                          name=\"financeCostcenter\" \n                          className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\">\n                  <option value=\"\" key={v4()}></option>\n                  {initialData.financeCostcenters.edges.map(({ node }) =>\n                      <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                  )}\n                  </Field>\n                  <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n            </Grid.Row>\n            </Card.Body>\n            <Card.Footer>\n                <Button \n                className=\"pull-right\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                >\n                {t('general.submit')}\n                </Button>\n                <Button\n                type=\"button\" \n                color=\"link\" \n                onClick={() => history.push(return_url)}\n                >\n                    {t('general.cancel')}\n                </Button>\n            </Card.Footer>\n        </FoForm>\n    ) \n  }\n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassForm))","import React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_CLASSPASSES_QUERY, GET_INPUT_VALUES_QUERY, CREATE_CLASSPASS } from './queries'\nimport { CLASSPASS_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Dimmer\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesBase from './OrganizationClasspassesBase';\nimport OrganizationClasspassForm from \"./OrganizationClasspassForm\"\n\n\nfunction OrganizationClasspassAdd({t, match, history}) {\n  const cardTitle = t('organization.classpasses.title_add')\n  const returnUrl = \"/organization/classpasses\"\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES_QUERY)\n  const [createClasspass] = useMutation(CREATE_CLASSPASS)\n\n  if (loading) return (\n    <OrganizationClasspassesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n  if (error) return (\n    <OrganizationClasspassesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n                    \n  console.log('query data')\n  console.log(data)\n  const initialData = data\n\n  return (\n    <OrganizationClasspassesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            displayPublic: true,\n            displayShop: true,\n            trialPass: false,\n            trialTimes: 1,\n            name: \"\",\n            description: \"\",\n            price: 0,\n            financeTaxRate: \"\",\n            validity: 1,\n            validityUnit: \"MONTHS\",\n            classes: 1,\n            unlimited: false,\n            organizationMembership: \"\",\n            quickStatsAmount: 0,\n            financeGlaccount: \"\",\n            financeCostcenter: \"\"\n          }}\n          validationSchema={CLASSPASS_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              createClasspass({ variables: {\n                input: {\n                  displayPublic: values.displayPublic,\n                  displayShop: values.displayShop,\n                  trialPass: values.trialPass,\n                  trialTimes: values.trialTimes,\n                  name: values.name,\n                  description: values.description,\n                  price: values.price,\n                  financeTaxRate: values.financeTaxRate,\n                  validity: values.validity,\n                  validityUnit: values.validityUnit,\n                  classes: values.classes,\n                  unlimited: values.unlimited,\n                  organizationMembership: values.organizationMembership,\n                  quickStatsAmount: values.quickStatsAmount,\n                  financeGlaccount: values.financeGlaccount,\n                  financeCostcenter: values.financeCostcenter\n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSPASSES_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('organization.classpasses.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <OrganizationClasspassForm \n              initialData = {initialData}\n              isSubmitting = {isSubmitting}\n              setFieldValue = {setFieldValue}\n              setFieldTouched = {setFieldTouched}\n              errors = {errors}\n              values = {values}\n            />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationClasspassesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_CLASSPASSES_QUERY, GET_CLASSPASS_QUERY, UPDATE_CLASSPASS } from './queries'\nimport { CLASSPASS_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Dimmer\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesBase from './OrganizationClasspassesBase'\nimport OrganizationClasspassForm from \"./OrganizationClasspassForm\"\n\n\nfunction OrganizationClasspassEdit({ t, match, history}) {\n  const id = match.params.id\n  const returnUrl = \"/organization/classpasses\"\n  const cardTitle = t('organization.classpasses.title_edit')\n  const { loading, error, data } = useQuery(GET_CLASSPASS_QUERY, {\n    variables: { id: id }\n  })\n  const [updateClasspass] = useMutation(UPDATE_CLASSPASS)\n\n  if (loading) return (\n    <OrganizationClasspassesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n  if (error) return (\n    <OrganizationClasspassesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const initialData = data\n\n  let initialMembership = \"\"\n  if (initialData.organizationClasspass.organizationMembership) {\n    initialMembership = initialData.organizationClasspass.organizationMembership.id\n  }\n\n  let initialGlaccount = \"\"\n  if (initialData.organizationClasspass.financeGlaccount) {\n    initialGlaccount =  initialData.organizationClasspass.financeGlaccount.id\n  } \n\n  let initialCostcenter = \"\"\n  if (initialData.organizationClasspass.financeCostcenter) {\n    initialCostcenter =  initialData.organizationClasspass.financeCostcenter.id\n  } \n\n  return (\n    <OrganizationClasspassesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            displayPublic: initialData.organizationClasspass.displayPublic,\n            displayShop: initialData.organizationClasspass.displayShop,\n            trialPass: initialData.organizationClasspass.trialPass,\n            trialTimes: initialData.organizationClasspass.trialTimes,\n            name: initialData.organizationClasspass.name,\n            description: initialData.organizationClasspass.description,\n            price: initialData.organizationClasspass.price,\n            financeTaxRate: initialData.organizationClasspass.financeTaxRate.id,\n            validity: initialData.organizationClasspass.validity,\n            validityUnit: initialData.organizationClasspass.validityUnit,\n            classes: initialData.organizationClasspass.classes,\n            unlimited: initialData.organizationClasspass.unlimited,\n            organizationMembership: initialMembership,\n            quickStatsAmount: initialData.organizationClasspass.quickStatsAmount,\n            financeGlaccount:  initialGlaccount,\n            financeCostcenter: initialCostcenter\n          }}\n          validationSchema={CLASSPASS_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateClasspass({ variables: {\n                input: {\n                  id: match.params.id,\n                  displayPublic: values.displayPublic,\n                  displayShop: values.displayShop,\n                  trialPass: values.trialPass,\n                  trialTimes: values.trialTimes,\n                  name: values.name,\n                  description: values.description,\n                  price: values.price,\n                  financeTaxRate: values.financeTaxRate,\n                  validity: values.validity,\n                  validityUnit: values.validityUnit,\n                  classes: values.classes,\n                  unlimited: values.unlimited,\n                  organizationMembership: values.organizationMembership,\n                  quickStatsAmount: values.quickStatsAmount,\n                  financeGlaccount: values.financeGlaccount,\n                  financeCostcenter: values.financeCostcenter\n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSPASSES_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('organization.classpasses.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <OrganizationClasspassForm \n              initialData = {initialData}\n              isSubmitting = {isSubmitting}\n              setFieldValue = {setFieldValue}\n              setFieldTouched = {setFieldTouched}\n              errors = {errors}\n              values = {values}\n            />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationClasspassesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassEdit))","// @flow\n\nimport React, { Children } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationClasspassesGroupsBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/classpasses\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.classpasses.title')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to={\"/organization/classpasses/groups\"}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t(\"general.back\")}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationclasspassgroup\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(\"/organization/classpasses/groups/add\")}>\n                    <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.classpass_groups.add')}\n                  </Button>\n                </HasPermissionWrapper>              \n              }\n              <OrganizationMenu activeLink=''/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasspassesGroupsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_CLASSPASS_GROUPS_QUERY = gql`\n  query OrganizationClasspassGroups($after: String, $before: String) {\n    organizationClasspassGroups(first: 15, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          description\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_CLASSPASS_GROUP_QUERY = gql`\n  query OrganizationClasspassGroup($id: ID!) {\n    organizationClasspassGroup(id:$id) {\n      id\n      name\n      description\n    }\n  }\n`\n\n\nexport const GET_CLASSPASS_GROUP_PASSES_QUERY = gql`\n  query GetPassesAndGroupMembership($after: String, $before: String, $id:ID!) {\n    organizationClasspasses(first: 15, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    organizationClasspassGroup(id: $id) {\n      id\n      name\n      description\n      organizationClasspasses {\n        edges {\n          node {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const ADD_CLASSPASS_GROUP = gql`\nmutation CreateOrganizationClasspassGroup($input:CreateOrganizationClasspassGroupInput!) {\n  createOrganizationClasspassGroup(input: $input) {\n    organizationClasspassGroup{\n      id\n    }\n  }\n}\n`\n\nexport const UPDATE_CLASSPASS_GROUP = gql`\nmutation UpdateOrganizationClasspassGroup($input: UpdateOrganizationClasspassGroupInput!) {\n  updateOrganizationClasspassGroup(input: $input) {\n    organizationClasspassGroup {\n      id\n      name\n    }\n  }\n}\n`\n\nexport const DELETE_CLASSPASS_GROUP = gql`\n  mutation DeleteClasspassGroup($input: DeleteOrganizationClasspassGroupInput!) {\n    deleteOrganizationClasspassGroup(input: $input) {\n      ok\n    }\n  }\n`\n\nexport const ADD_CARD_TO_GROUP = gql`\n  mutation AddCardToGroup($input: CreateOrganizationClasspassGroupClasspassInput!) {\n    createOrganizationClasspassGroupClasspass(input:$input) {\n      organizationClasspassGroupClasspass {\n        id\n        organizationClasspass {\n          id\n          name\n        }\n        organizationClasspassGroup {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const DELETE_CARD_FROM_GROUP = gql`\n  mutation DeleteCardFromGroup($input: DeleteOrganizationClasspassGroupClasspassInput!) {\n    deleteOrganizationClasspassGroupClasspass(input:$input) {\n      ok\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Table\n} from \"tabler-react\";\n\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesGroupsBase from \"./OrganizationClasspassesGroupsBase\"\n\nimport { GET_CLASSPASS_GROUPS_QUERY, DELETE_CLASSPASS_GROUP } from \"./queries\"\n\n\nfunction OrganizationClasspassesGroups({ t, history}) {\n  const { loading, error, data, fetchMore } = useQuery(GET_CLASSPASS_GROUPS_QUERY)\n  const [deleteClasspassGroup] = useMutation(DELETE_CLASSPASS_GROUP)\n\n  // Loading\n  if (loading) return (\n    <OrganizationClasspassesGroupsBase>\n      <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasspassesGroupsBase>\n      <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n        <p>{t('organization.classpass_groups.error_loading')}</p>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n  \n  const classpass_groups = data.organizationClasspassGroups\n\n  // Empty list\n  if (!classpass_groups.edges.length) { return (\n    <OrganizationClasspassesGroupsBase>\n      <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n        <p>{t('organization.classpass_groups.empty_list')}</p>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )} \n\n  \n  // We have data\n  return (\n    <OrganizationClasspassesGroupsBase>\n      <ContentCard cardTitle={t('organization.classpass_groups.title')}\n                    pageInfo={classpass_groups.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: classpass_groups.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationClasspassGroups.edges\n                        const pageInfo = fetchMoreResult.organizationClasspassGroups.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new classpass_groups at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationClasspassGroups: {\n                                __typename: previousResult.organizationClasspassGroups.__typename,\n                                edges: [ ...previousResult.organizationClasspassGroups.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {classpass_groups.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {node.name}\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.description.substring(0, 24)}\n                    </Table.Col>\n                    <Table.Col className=\"text-right\" key={v4()}>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/classpasses/groups/edit/\" + node.id)}\n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/classpasses/groups/edit/passes/\" + node.id)}\n                                color=\"secondary\">\n                          {t('organization.classpasses.groups.edit_passes')}\n                        </Button>\n                    </Table.Col>\n                    <Table.Col>\n                      <button className=\"icon btn btn-link btn-sm float-right\" \n                        title={t('general.delete')} \n                        href=\"\"\n                        onClick={() => {\n                          confirm_delete({\n                            t: t,\n                            msgConfirm: t(\"organization.classpasses.groups.delete_confirm_msg\"),\n                            msgDescription: <p>{node.name}</p>,\n                            msgSuccess: t('organization.classpasses.groups.deleted'),\n                            deleteFunction: deleteClasspassGroup,\n                            functionVariables: { variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, refetchQueries: [\n                              {query: GET_CLASSPASS_GROUPS_QUERY} \n                            ]}\n                          })\n                      }}>\n                        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                      </button>\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n   )\n\n}\n\n\n\n// const OrganizationClasspassesGroups = ({ t, history }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t(\"organization.title\")}>\n//           <div className=\"page-options d-flex\">\n//             <Link to=\"/organization/classpasses\" \n//                   className='btn btn-outline-secondary btn-sm'>\n//                 <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.classpasses.title')}\n//             </Link>\n//           </div>\n//         </Page.Header>\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//             <Query query={GET_CLASSPASS_GROUPS_QUERY} >\n//              {({ loading, error, data: {organizationClasspassGroups: classpass_groups}, refetch, fetchMore }) => {\n//                 // Loading\n//                 if (loading) return (\n//                   <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n//                     <Dimmer active={true}\n//                             loader={true}>\n//                     </Dimmer>\n//                   </ContentCard>\n//                 )\n//                 // Error\n//                 if (error) return (\n//                   <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n//                     <p>{t('organization.classpass_groups.error_loading')}</p>\n//                   </ContentCard>\n//                 )\n                \n//                 // Empty list\n//                 if (!classpass_groups.edges.length) { return (\n//                   <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n//                     <p>{t('organization.classpass_groups.empty_list')}</p>\n//                   </ContentCard>\n//                 )} else {   \n//                 // Life's good! :)\n//                 return (\n//                   <ContentCard cardTitle={t('organization.classpass_groups.title')}\n//                                pageInfo={classpass_groups.pageInfo}\n//                                onLoadMore={() => {\n//                                 fetchMore({\n//                                   variables: {\n//                                     after: classpass_groups.pageInfo.endCursor\n//                                   },\n//                                   updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                     const newEdges = fetchMoreResult.organizationClasspassGroups.edges\n//                                     const pageInfo = fetchMoreResult.organizationClasspassGroups.pageInfo\n\n//                                     return newEdges.length\n//                                       ? {\n//                                           // Put the new classpass_groups at the end of the list and update `pageInfo`\n//                                           // so we have the new `endCursor` and `hasNextPage` values\n//                                           organizationClasspassGroups: {\n//                                             __typename: previousResult.organizationClasspassGroups.__typename,\n//                                             edges: [ ...previousResult.organizationClasspassGroups.edges, ...newEdges ],\n//                                             pageInfo\n//                                           }\n//                                         }\n//                                       : previousResult\n//                                   }\n//                                 })\n//                               }} >\n//                         <Table>\n//                           <Table.Header>\n//                             <Table.Row key={v4()}>\n//                               <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                             </Table.Row>\n//                           </Table.Header>\n//                           <Table.Body>\n//                               {classpass_groups.edges.map(({ node }) => (\n//                                 <Table.Row key={v4()}>\n//                                   <Table.Col key={v4()}>\n//                                     {node.name}\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/organization/classpasses/groups/edit/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('general.edit')}\n//                                       </Button>\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/organization/classpasses/groups/edit/passes/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('organization.classpasses.groups.edit_passes')}\n//                                       </Button>\n//                                   </Table.Col>\n//                                   {/* <Mutation mutation={ARCHIVE_CLASSPASS_GROUP} key={v4()}>\n//                                     {(archiveCostcenter, { data }) => (\n//                                       <Table.Col className=\"text-right\" key={v4()}>\n//                                         <button className=\"icon btn btn-link btn-sm\" \n//                                            title={t('general.archive')} \n//                                            href=\"\"\n//                                            onClick={() => {\n//                                              console.log(\"clicked archived\")\n//                                              let id = node.id\n//                                              archiveCostcenter({ variables: {\n//                                                input: {\n//                                                 id,\n//                                                 archived: !archived\n//                                                }\n//                                         }, refetchQueries: [\n//                                             {query: GET_CLASSPASS_GROUPS_QUERY, variables: {\"archived\": archived }}\n//                                         ]}).then(({ data }) => {\n//                                           console.log('got data', data);\n//                                           toast.success(\n//                                             (archived) ? t('general.unarchived'): t('general.archived'), {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                         }).catch((error) => {\n//                                           toast.error((t('general.toast_server_error')) + ': ' +  error, {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                           console.log('there was an error sending the query', error);\n//                                         })\n//                                         }}>\n//                                           <Icon prefix=\"fa\" name=\"inbox\" />\n//                                         </button>\n//                                       </Table.Col>\n//                                     )}\n//                                   </Mutation> */}\n//                                 </Table.Row>\n//                               ))}\n//                           </Table.Body>\n//                         </Table>\n//                   </ContentCard>\n//                 )}}\n//              }\n//             </Query>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"organizationclasspassgroup\">\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(\"/organization/classpasses/groups/add\")}>\n//                 <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.classpass_groups.add')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <OrganizationMenu activeLink=''/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// )\n\nexport default withTranslation()(withRouter(OrganizationClasspassesGroups))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const CLASSPASS_GROUP_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_CLASSPASS_GROUPS_QUERY, ADD_CLASSPASS_GROUP } from './queries'\nimport { CLASSPASS_GROUP_SCHEMA } from './yupSchema'\n\nimport {\n  Alert,\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport OrganizationClasspassesGroupsBase from './OrganizationClasspassesGroupsBase';\n\n\nfunction OrganizationClasspassGroupAdd({t, history}) {\n  const returnUrl = \"/organization/classpasses/groups\"\n  const [ addClasspassGroup ] = useMutation(ADD_CLASSPASS_GROUP)\n\n  return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <Card title={t('organization.classpass_groups.title_add')}>\n        <Formik\n          initialValues={{ name: '', description: '' }}\n          validationSchema={CLASSPASS_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addClasspassGroup({ variables: {\n                input: {\n                  name: values.name, \n                  description: values.description, \n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSPASS_GROUPS_QUERY}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.classpass_groups.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <FoForm>\n                  <Card.Body>\n                    <Form.Group label={t('general.name')}>\n                      <Field type=\"text\" \n                              name=\"name\" \n                              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                      <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                    <Form.Group label={t('general.description')}>\n                      <Field type=\"text\" \n                              name=\"description\" \n                              className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                      <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                  </Card.Body>\n                  <Card.Footer>\n                      <Button \n                        color=\"primary\"\n                        className=\"pull-right\" \n                        type=\"submit\" \n                        disabled={isSubmitting}\n                      >\n                        {t('general.submit')}\n                      </Button>\n                      <Link to={returnUrl}>\n                        <Button color=\"link\">\n                            {t('general.cancel')}\n                        </Button>\n                      </Link>\n                      {(isSubmitting) ? \n                        <Alert type=\"primary\" hasExtraSpace>\n                          <strong>{t('general.please_wait')}</strong> {t('organization.classpass_groups.toast_creating_might_take_a_while')}\n                        </Alert> : \n                        \"\"\n                      }\n                  </Card.Footer>\n              </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationClasspassesGroupsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassGroupAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_CLASSPASS_GROUPS_QUERY, GET_CLASSPASS_GROUP_QUERY, UPDATE_CLASSPASS_GROUP } from './queries'\nimport { CLASSPASS_GROUP_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Dimmer,\n  Button,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesGroupsBase from './OrganizationClasspassesGroupsBase';\n\n\nfunction OrganizationClasspassGroupEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('organization.classpass_groups.title_edit')\n  const returnUrl = \"/organization/classpasses/groups\"\n  const { loading, error, data } = useQuery(GET_CLASSPASS_GROUP_QUERY, {\n    variables: {id: id}\n  })\n  const [ updateClasspassGroup ] = useMutation(UPDATE_CLASSPASS_GROUP)\n\n  // Loading\n  if (loading) return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n    \n\n  const initialData = data.organizationClasspassGroup;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            description: initialData.description,\n          }}\n          validationSchema={CLASSPASS_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateClasspassGroup({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name,\n                  description: values.description,\n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSPASS_GROUPS_QUERY}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('organization.classpass_groups.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n              <FoForm>\n                  <Card.Body>    \n                      <Form.Group label={t('general.name')} >\n                        <Field type=\"text\" \n                              name=\"name\" \n                              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('general.description')}>\n                        <Field type=\"text\" \n                                name=\"description\" \n                                className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                  </Card.Body>\n                  <Card.Footer>\n                      <Button \n                        className=\"pull-right\"\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                        type=\"submit\"\n                      >\n                        {t('general.submit')}\n                      </Button>\n                      <Link to={returnUrl}>\n                        <Button\n                          type=\"button\" \n                          color=\"link\" \n                        >\n                            {t('general.cancel')}\n                        </Button>\n                      </Link>\n                  </Card.Footer>\n              </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationClasspassesGroupsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassGroupEdit))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { toast } from 'react-toastify'\n\nimport { GET_CLASSPASS_GROUP_PASSES_QUERY, ADD_CARD_TO_GROUP, DELETE_CARD_FROM_GROUP } from './queries'\n\nimport {\n  Dimmer,\n  Alert,\n  Icon,\n  Button,\n  Card,\n  Table,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesGroupsBase from './OrganizationClasspassesGroupsBase';\n\n\nfunction OrganizationClasspassGroupEditPasses({ t, match, history }) {\n  const groupId = match.params.id\n  const returnUrl = \"/organization/classpasses/groups\"\n  const cardTitle = t('organization.classpass_group_classpasses.title_edit')\n  const { loading, error, data } = useQuery(GET_CLASSPASS_GROUP_PASSES_QUERY, { \n    variables: { id: groupId }\n  })\n  const [ addCardToGroup ] = useMutation(ADD_CARD_TO_GROUP)\n  const [ deleteCardFromGroup ] = useMutation(DELETE_CARD_FROM_GROUP)\n\n  // Loading\n  if (loading) return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const passes = data.organizationClasspasses\n  const group = data.organizationClasspassGroup\n\n  let group_passes = {}\n  if (group.organizationClasspasses.edges) {\n    group.organizationClasspasses.edges.map(({ node}) => (\n      group_passes[node.id] = true\n    ))\n  }\n\n  return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <Alert type=\"primary\">\n            <strong>{t('general.group')}</strong> {group.name}\n          </Alert>\n          <Table>\n            <Table.Header>\n              <Table.Row key={v4()}>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {passes.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {(node.id in group_passes) ? \n                        <Icon name=\"check-circle\" className=\"text-green\" /> : <Icon name=\"x-circle\" className=\"text-red\" />\n                      }\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.name}\n                    </Table.Col>\n                    {console.log((node.id in group_passes))}\n                    {(!(node.id in group_passes)) ?\n                      // Add\n                      <Table.Col className=\"text-right text-green\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('general.add_to_group')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked add\")\n                            let pass_id = node.id\n                            addCardToGroup({ variables: {\n                              input: {\n                                organizationClasspass: pass_id,\n                                organizationClasspassGroup: groupId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_CLASSPASS_GROUP_PASSES_QUERY, variables: {\"id\": groupId }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('general.added_to_group'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"plus-circle\" /> { ' ' }\n                          {t('general.add_to_group')} \n                        </Button>\n                      </Table.Col>\n                      :\n                      // Delete\n                      <Table.Col className=\"text-right text-red\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('general.delete_from_group')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked delete\")\n                            console.log(node.id)\n                            let pass_id = node.id\n                            deleteCardFromGroup({ variables: {\n                              input: {\n                                organizationClasspass: pass_id,\n                                organizationClasspassGroup: groupId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_CLASSPASS_GROUP_PASSES_QUERY, variables: {\"id\": groupId }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('general.deleted_from_group'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"minus-circle\" /> { ' ' }\n                          {t('general.delete_from_group')}\n                        </Button>\n                      </Table.Col>\n                      }\n                  </Table.Row>\n                ))}\n            </Table.Body>\n          </Table>\n        </Card.Body>\n      </Card>\n    </OrganizationClasspassesGroupsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasspassGroupEditPasses))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let archived = localStorage.getItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED)\n  if (archived === null) {\n    archived = false\n  }\n\n  let queryVars = {\n    archived: (archived === \"true\") ? true : false,\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n","import { gql } from \"@apollo/client\"\n\nexport const GET_CLASSTYPES_QUERY = gql`\nquery OrganizationClasstypes($after: String, $before: String, $archived: Boolean) {\n  organizationClasstypes(first: 15, before: $before, after: $after, archived: $archived) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        archived\n        displayPublic\n        name\n        description\n        urlWebsite\n        urlImage\n        urlImageThumbnailSmall\n      }\n    }\n  }\n}\n`\n\nexport const GET_CLASSTYPE_QUERY = gql`\nquery getOrganizationClasstype($id: ID!) {\n  organizationClasstype(id:$id) {\n    id\n    archived\n    name\n    description\n    displayPublic\n    urlWebsite\n    urlImage\n  }\n}\n`\n\nexport const ADD_CLASSTYPE = gql`\nmutation CreateOrganizationClasstype($input: CreateOrganizationClasstypeInput!) {\n  createOrganizationClasstype(input: $input) {\n    organizationClasstype {\n      id\n      archived\n      name\n      description\n      displayPublic\n      urlWebsite\n      image\n    }\n  }\n}\n`\n\nexport const UPDATE_CLASSTYPE = gql`\n  mutation UpdateOrganizationClasstype($input: UpdateOrganizationClasstypeInput!) {\n    updateOrganizationClasstype(input: $input) {\n      organizationClasstype {\n        id\n        archived\n        name\n        description\n        displayPublic\n        urlWebsite\n      }\n    }\n  }\n`\n\nexport const UPDATE_CLASSTYPE_IMAGE = gql`\nmutation UploadOrganizationClasstypeImage($input: UploadOrganizationClasstypeImageInput!) {\n  uploadOrganizationClasstypeImage(input: $input) {\n    organizationClasstype {\n      id\n      archived\n      name\n      description\n      displayPublic\n      urlWebsite\n      image\n    }\n  }\n}\n`\n\nexport const ARCHIVE_CLASSTYPE = gql`\nmutation ArchiveOrganizationClasstype($input: ArchiveOrganizationClasstypeInput!) {\n    archiveOrganizationClasstype(input: $input) {\n      organizationClasstype {\n        id\n        archived\n      }\n    }\n}\n`\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationClasstypesBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title=\"Organization\" />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/classtypes/\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationclasstype\">\n                  <Link to=\"/organization/classtypes/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.classtypes.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <OrganizationMenu activeLink='classtypes'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>          \n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasstypesBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Avatar,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport ContentCard from \"../../general/ContentCard\"\n\nimport { get_list_query_variables } from './tools'\nimport { GET_CLASSTYPES_QUERY, ARCHIVE_CLASSTYPE } from \"./queries\"\nimport OrganizationClasstypesBase from \"./OrganizationClasstypesBase\"\n\n\nfunction OrganizationClasstypes({t, history, archived=false}) {\n  const {loading, error, data, refetch, fetchMore} = useQuery(GET_CLASSTYPES_QUERY, { \n    variables: get_list_query_variables()\n  })\n  const [archiveClasstype] = useMutation(ARCHIVE_CLASSTYPE)\n\n  if (loading) return (\n    <OrganizationClasstypesBase>\n      <ContentCard cardTitle={t('organization.classtypes.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasstypesBase>\n      <ContentCard cardTitle={t('organization.classtypes.title')}>\n        <p>{t('organization.classtypes.error_loading')}</p>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n  const headerOptions = <Card.Options>\n    <Button color={(localStorage.getItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED) === \"false\") ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {\n              localStorage.setItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED, false)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.active')}\n    </Button>\n    <Button color={(localStorage.getItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED) === \"true\") ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {\n              localStorage.setItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED, true)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n  \n  const classtypes = data.organizationClasstypes\n  // Empty list\n  if (!classtypes.edges.length) { return (\n    <OrganizationClasstypesBase>\n      <ContentCard cardTitle={t('organization.classtypes.title')}\n                  headerContent={headerOptions}>\n        <p>\n        {(!archived) ? t('organization.classtypes.empty_list') : t(\"organization.classtypes.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )}   \n\n  return (\n    <OrganizationClasstypesBase>\n      <ContentCard cardTitle={t('organization.classtypes.title')}\n                   headerContent={headerOptions}\n                   pageInfo={classtypes.pageInfo}\n                   onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: classtypes.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationClasstypes.edges\n                        const pageInfo = fetchMoreResult.organizationClasstypes.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new locations at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationClasstypes: {\n                                __typename: previousResult.organizationClasstypes.__typename,\n                                edges: [ ...previousResult.organizationClasstypes.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {classtypes.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    <Avatar size=\"lg\" imageURL={node.urlImageThumbnailSmall} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.displayPublic) ? \n                      <Badge color=\"success\">{t('general.yes')}</Badge>: \n                      <Badge color=\"danger\">{t('general.no')}</Badge>}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(localStorage.getItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED) === \"true\") ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <div>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/classtypes/edit/\" + node.id)}\n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/classtypes/edit_image/\" + node.id)}\n                                color=\"secondary\">\n                          {t('organization.classtypes.edit_image')}\n                        </Button>\n                      </div>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          archiveClasstype({ variables: {\n                            input: {\n                              id: node.id,\n                              archived: !node.archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_CLASSTYPES_QUERY, variables: get_list_query_variables()}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (node.archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasstypes))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const CLASSTYPE_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    description: Yup.string(),\n    urlWebsite: Yup.string()\n      .url(t(\"yup.url\")),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nimport { GET_CLASSTYPES_QUERY, ADD_CLASSTYPE } from './queries'\nimport { CLASSTYPE_SCHEMA } from './yupSchema'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport { get_list_query_variables } from './tools'\nimport OrganizationClasstypesBase from './OrganizationClasstypesBase';\n\n\nfunction OrganizationClasstypeAdd({t, history}) {\n  const returnUrl = \"/organization/classtypes\"\n  const [addClasstype] = useMutation(ADD_CLASSTYPE)\n\n  return (\n    <OrganizationClasstypesBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('organization.classtypes.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: \"\", description: \"\", displayPublic: true, urlWebsite: '' }}\n          validationSchema={CLASSTYPE_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addClasstype({ variables: {\n                input: {\n                  name: values.name, \n                  description: values.description,\n                  displayPublic: values.displayPublic,\n                  urlWebsite: values.urlWebsite,\n                  image: values.image\n                },\n                // file: values.image\n              }, refetchQueries: [\n                  {query: GET_CLASSTYPES_QUERY, variables: get_list_query_variables()}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.classtypes.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n            }}\n            >\n            {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n                <FoForm>\n                  {/* {console.log('values in FoForm')}\n                  {console.log(values)} */}\n                    <Card.Body>\n                        <Form.Group>\n                          <Form.Label className=\"custom-switch\">\n                            <Field \n                              className=\"custom-switch-input\"\n                              type=\"checkbox\" \n                              name=\"displayPublic\" \n                              checked={values.displayPublic} />\n                            <span className=\"custom-switch-indicator\" ></span>\n                            <span className=\"custom-switch-description\">{t('organization.classtype.public')}</span>\n                          </Form.Label>\n                          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                        </Form.Group>    \n                        <Form.Group label={t('general.name')}>\n                          <Field type=\"text\" \n                                  name=\"name\" \n                                  className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                  autoComplete=\"off\" />\n                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                        <Form.Group label={t('general.description')}>\n                          <Editor\n                              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                              textareaName=\"description\"\n                              initialValue={values.description}\n                              init={tinymceBasicConf}\n                              onBlur={(e) => {\n                                setFieldValue(\"description\", e.target.getContent())\n                                setFieldTouched(\"description\", true)\n                              }}\n                            />\n                          <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                        <Form.Group label={t('organization.classtype.url_website')}>\n                          <Field type=\"text\" \n                                name=\"urlWebsite\" \n                                className={(errors.urlWebsite) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                          <ErrorMessage name=\"urlWebsite\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          color=\"primary\"\n                          className=\"pull-right\" \n                          type=\"submit\" \n                          disabled={isSubmitting}\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Button color=\"link\" onClick={() => history.push(returnUrl)}>\n                            {t('general.cancel')}\n                        </Button>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </OrganizationClasstypesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasstypeAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from \"react-router-dom\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nimport { GET_CLASSTYPES_QUERY, GET_CLASSTYPE_QUERY, UPDATE_CLASSTYPE } from './queries'\nimport { CLASSTYPE_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasstypesBase from './OrganizationClasstypesBase';\n\n\nfunction OrganizationClasstypeEdit({ t, history, match }) {\n  const id = match.params.id\n  const cardTitle = t('organization.classtypes.title_edit')\n  const returnUrl = \"/organization/classtypes\"\n  const { loading, error, data } = useQuery(GET_CLASSTYPE_QUERY, { variables: {\n    id: id\n  }})\n  const [ updateClasstype ] = useMutation(UPDATE_CLASSTYPE)\n\n  if (loading) return (\n    <OrganizationClasstypesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasstypesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n\n                      \n  const initialData = data.organizationClasstype\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationClasstypesBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n              description: initialData.description,\n              displayPublic: initialData.displayPublic,\n              urlWebsite: initialData.urlWebsite\n            }}\n            validationSchema={CLASSTYPE_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateClasstype({ variables: {\n                  input: {\n                    id: id,\n                    name: values.name,\n                    description: (values.description) ? values.description: '',\n                    displayPublic: values.displayPublic,\n                    urlWebsite: (values.urlWebsite) ? values.urlWebsite: ''\n                  }\n                }, refetchQueries: [\n                    {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    toast.success((t('organization.classtypes.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    setSubmitting(false)\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values, setFieldValue, setFieldTouched }) => (\n                <FoForm>\n                    {console.log(values)}\n                    <Card.Body>\n                        <Form.Group>\n                          <Form.Label className=\"custom-switch\">\n                            <Field \n                              className=\"custom-switch-input\"\n                              type=\"checkbox\" \n                              name=\"displayPublic\" \n                              checked={values.displayPublic} />\n                            <span className=\"custom-switch-indicator\" ></span>\n                            <span className=\"custom-switch-description\">{t('organization.classtype.public')}</span>\n                          </Form.Label>\n                          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                        </Form.Group>     \n                        <Form.Group label={t('general.name')} >\n                          <Field type=\"text\" \n                                name=\"name\" \n                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                        <Form.Group label={t('general.description')}>\n                          <Editor\n                            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                            textareaName=\"description\"\n                            initialValue={values.description}\n                            init={tinymceBasicConf}\n                            onBlur={(e) => {\n                              setFieldValue(\"description\", e.target.getContent())\n                              setFieldTouched(\"description\", true)\n                            }}\n                          />\n                          <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                        <Form.Group label={t('organization.classtype.url_website')}>\n                          <Field type=\"text\" \n                                name=\"urlWebsite\" \n                                className={(errors.urlWebsite) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                          <ErrorMessage name=\"urlWebsite\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          className=\"pull-right\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          type=\"submit\"\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button\n                            type=\"button\" \n                            color=\"link\" \n                          >\n                              {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </OrganizationClasstypesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasstypeEdit))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\nimport { \n  Formik,\n  Form as FoForm, \n  Field, \n  ErrorMessage \n} from 'formik'\n\n\nimport { GET_CLASSTYPES_QUERY, GET_CLASSTYPE_QUERY, UPDATE_CLASSTYPE_IMAGE } from './queries'\nimport { CLASSTYPE_SCHEMA } from './yupSchema'\n\nimport {\n  Dimmer,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasstypesBase from './OrganizationClasstypesBase';\n\n\nconst customFileInputLabelStyle = {\n  whiteSpace: \"nowrap\",\n  display: \"block\",\n  overflow: \"hidden\"\n}\n\n\nfunction OrganizationClasstypeEditImage({t, history, match}) {\n  const classtypeId = match.params.id\n  const returnUrl = \"/organization/classtypes\"\n  const cardTitle = t('organization.classtypes.edit_image')\n  const { loading, error, data } = useQuery(GET_CLASSTYPE_QUERY, {\n    variables: { id: classtypeId }\n  })\n  const [ uploadImage ] = useMutation(UPDATE_CLASSTYPE_IMAGE)\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n\n    console.log(inputFileName)\n    console.log(inputFileName.current)\n    console.log(inputFileName.current.files)\n  }\n\n  if (loading) return (\n    <OrganizationClasstypesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasstypesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n\n  const initialData = data.organizationClasstype\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationClasstypesBase>\n      <Card title={cardTitle}>\n       <Formik\n          initialValues={{}}\n          // validationSchema={DOCUMENT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            let reader = new FileReader()\n            reader.onload = function(reader_event) {\n              console.log(reader_event.target.result)\n              let b64_enc_image = reader_event.target.result\n\n              uploadImage({ variables: {\n                input: {\n                  id: classtypeId,\n                  image: b64_enc_image\n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": true }},\n                  {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('organization.classtypes.toast_image_save_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error);\n                })\n            }\n            let file = inputFileName.current.files[0]\n            reader.readAsDataURL(file)\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <FoForm>\n            <Card.Body>\n              <Grid.Row>\n                <Grid.Col>\n                  <Form.Group label={t('general.custom_file_input_label')}>\n                    <div className=\"custom-file\">\n                      <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                      <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                        {fileInputLabel}\n                      </label>\n                    </div>\n                  </Form.Group>\n                </Grid.Col>\n              </Grid.Row>\n            </Card.Body>\n            <Card.Footer>\n              <Button \n                color=\"primary\"\n                className=\"pull-right\" \n                type=\"submit\" \n                disabled={isSubmitting}\n              >\n                {t('general.submit')}\n              </Button>\n              <Link to={returnUrl}>\n                <Button color=\"link\">\n                  {t('general.cancel')}\n                </Button>\n              </Link>\n            </Card.Footer>\n          </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationClasstypesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasstypeEditImage))","import { gql } from \"@apollo/client\"\n\nexport const GET_DISCOVERIES_QUERY = gql`\n  query OrganizationDiscoveries($after: String, $before: String, $archived: Boolean) {\n    organizationDiscoveries(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_DISCOVERY_QUERY = gql`\n  query SchoolDiscovery($id: ID!) {\n    organizationDiscovery(id:$id) {\n      id\n      name\n      archived\n    }\n  }\n`\n\nexport const ADD_DISCOVERY = gql`\n  mutation CreateOrganizationDiscovery($input:CreateOrganizationDiscoveryInput!) {\n    createOrganizationDiscovery(input: $input) {\n      organizationDiscovery{\n        id\n        archived\n        name\n      }\n    }\n  }\n`\n\nexport const UPDATE_DISCOVERY = gql`\nmutation UpdateOrganizationDiscovery($input: UpdateOrganizationDiscoveryInput!) {\n  updateOrganizationDiscovery(input: $input) {\n    organizationDiscovery {\n      id\n      name\n    }\n  }\n}\n`\n\nexport const ARCHIVE_DISCOVERY = gql`\nmutation ArchiveOrganizationDiscovery($input: ArchiveOrganizationDiscoveryInput!) {\n  archiveOrganizationDiscovery(input: $input) {\n    organizationDiscovery {\n      id\n      archived\n    }\n  }\n}\n`\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationDiscoveriesBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/discoveries\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n             :\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"organizationdiscovery\">\n                <Link to=\"/organization/discoveries/add\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.discoveries.add')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              }\n              <OrganizationMenu activeLink='discoveries'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n)}\n\n\nexport default withTranslation()(withRouter(OrganizationDiscoveriesBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\n\nimport { GET_DISCOVERIES_QUERY, ARCHIVE_DISCOVERY } from \"./queries\"\nimport OrganizationDiscoveriesBase from './OrganizationDiscoveriesBase'\n\n\nfunction OrganizationDiscoveries({ t, history }) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('organization.discoveries.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_DISCOVERIES_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveDiscovery ] = useMutation(ARCHIVE_DISCOVERY)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <OrganizationDiscoveriesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  )\n\n  if (error) return (\n    <OrganizationDiscoveriesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.discoveries.error_loading')}</p>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  )\n\n  const discoveries = data.organizationDiscoveries\n\n  // Empty list\n  if (!discoveries.edges.length) { return (\n    <OrganizationDiscoveriesBase>\n      <ContentCard cardTitle={cardTitle}\n                  headerContent={headerOptions}>\n        <p> \n          {(!archived) ? t('organization.discoveries.empty_list') : t(\"organization.discoveries.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  )}\n\n  return (\n    <OrganizationDiscoveriesBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}\n                    pageInfo={discoveries.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: discoveries.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationDiscoveries.edges\n                        const pageInfo = fetchMoreResult.organizationDiscoveries.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new discoveries at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationDiscoveries: {\n                                __typename: previousResult.organizationDiscoveries.__typename,\n                                edges: [ ...previousResult.organizationDiscoveries.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {discoveries.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/organization/discoveries/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveDiscovery({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_DISCOVERIES_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  ) \n}\n\n\nexport default withTranslation()(withRouter(OrganizationDiscoveries))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const DISCOVERY_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from \"react-router-dom\"\n\n\nimport { GET_DISCOVERIES_QUERY, ADD_DISCOVERY } from './queries'\nimport { DISCOVERY_SCHEMA } from './yupSchema'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport OrganizationDiscoveriesBase from './OrganizationDiscoveriesBase';\n\n\nfunction OrganizationDiscoveryAdd({t, history}) {\n  const returnUrl = \"/organization/discoveries\"\n  const [ addDiscovery ] = useMutation(ADD_DISCOVERY)\n\n  return (\n    <OrganizationDiscoveriesBase showBack={true}>\n      <Card title={t('organization.discoveries.title_add')}>\n        <Formik\n            initialValues={{ name: '', code: '' }}\n            validationSchema={DISCOVERY_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                addDiscovery({ variables: {\n                  input: {\n                    name: values.name, \n                  }\n                }, refetchQueries: [\n                    {query: GET_DISCOVERIES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data);\n                    history.push(returnUrl)\n                    toast.success((t('organization.discoveries.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n                <FoForm>\n                    <Card.Body>\n                        <Form.Group label={t('general.name')}>\n                          <Field type=\"text\" \n                                  name=\"name\" \n                                  className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                  autoComplete=\"off\" />\n                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          color=\"primary\"\n                          className=\"pull-right\" \n                          type=\"submit\" \n                          disabled={isSubmitting}\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button color=\"link\">\n                              {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </OrganizationDiscoveriesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationDiscoveryAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from \"react-router-dom\"\n\nimport { GET_DISCOVERIES_QUERY, GET_DISCOVERY_QUERY, UPDATE_DISCOVERY } from './queries'\nimport { DISCOVERY_SCHEMA } from './yupSchema'\n\nimport {\n  Dimmer,\n  Button,\n  Card,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationDiscoveriesBase from './OrganizationDiscoveriesBase';\n\n\nfunction OrganizationDiscoveryEdit({t, history, match}) {\n  const id = match.params.id\n  const returnUrl = \"/organization/discoveries\"\n  const cardTitle = t('organization.discoveries.title_edit')\n  const { loading, error, data } = useQuery(GET_DISCOVERY_QUERY, {\n    variables: {id: id}\n  })\n  const [ updateDiscovery ] = useMutation(UPDATE_DISCOVERY)\n\n  if (loading) return (\n    <OrganizationDiscoveriesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  )\n\n  if (error) return (\n    <OrganizationDiscoveriesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  )\n\n  const initialData = data.organizationDiscovery;\n\n  return (\n    <OrganizationDiscoveriesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n            }}\n            validationSchema={DISCOVERY_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateDiscovery({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                  }\n                }, refetchQueries: [\n                    {query: GET_DISCOVERIES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.discoveries.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values }) => (\n                <FoForm>\n                    <Card.Body>    \n                        <Form.Group label={t('general.name')} >\n                          <Field type=\"text\" \n                                name=\"name\" \n                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          className=\"pull-right\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          type=\"submit\"\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button\n                            type=\"button\" \n                            color=\"link\" \n                          >\n                              {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </OrganizationDiscoveriesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationDiscoveryEdit))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationDocuments({ t, match }) {\n  const organizationId = match.params.organization_id\n  const docTypes = [\n    [ \"TERMS_AND_CONDITIONS\", t(\"general.terms_and_conditions\")],\n    [ \"PRIVACY_POLICY\", t(\"general.privacy_policy\")],\n  ]\n\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('organization.title')}>\n            {/* <div className=\"page-options d-flex\">\n              <Link to={`/organization/edit/${organizationId}`}>\n                <Button \n                  icon=\"arrow-left\"\n                  className=\"mr-2\"\n                  outline\n                  color=\"secondary\"\n                >\n                  {t('general.back_to')} {t('organization.title')}\n                </Button>\n              </Link>\n            </div> */}\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.documents.title')}</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  <Table>\n                    <Table.Header>\n                      <Table.Row key={v4()}>\n                        <Table.ColHeader>{t('general.document')}</Table.ColHeader>\n                        <Table.ColHeader></Table.ColHeader>\n                      </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {docTypes.map((docType) => (\n                          <Table.Row key={v4()}>\n                            <Table.Col key={v4()}>\n                              {docType[1]}\n                            </Table.Col>\n                            <Table.Col className=\"text-right\" key={v4()}>\n                              <Link to={`/organization/documents/${organizationId}/${docType[0]}`}>\n                                <Button className='btn-sm' \n                                        color=\"secondary\">\n                                  {t('general.manage')} <Icon name=\"chevron-right\" />\n                                </Button>\n                              </Link>\n                            </Table.Col>\n                          </Table.Row>\n                        ))}\n                    </Table.Body>\n                  </Table>\n                </Card.Body>\n              </Card>        \n            </Grid.Col>\n            <Grid.Col md={3}>\n              <h5>{t(\"general.menu\")}</h5>\n              <OrganizationMenu activeLink='documents'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationDocuments))","import React, { useContext } from 'react'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../context/AppSettingsContext'\n\n\nfunction FormatISODateStr({ ISODateStr }) {\n    const appSettings = useContext(AppSettingsContext)\n    const dateFormat = appSettings.dateFormat\n\n    return (\n        moment(ISODateStr).format(dateFormat)    \n    )\n}\n\nexport default FormatISODateStr\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Button\n} from \"tabler-react\";\n\nconst FileDownloadTableButton = ({ t, mediaUrl, className=\"\", target=\"_blank\" }) => {\n  return <Button \n           color={\"secondary \" + className}\n           size=\"sm\"\n           icon=\"download-cloud\"\n           target={target}\n           RootComponent=\"a\" \n           href={mediaUrl}\n          >\n           {t('general.download')}\n          </Button>\n}\n\nexport default withTranslation()(FileDownloadTableButton)\n\n\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationDocumentsBase({ t, children, headerLinks, sidebarButton }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('organization.title')}>\n            <div className=\"page-options d-flex\">\n              {headerLinks}\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}        \n            </Grid.Col>\n            <Grid.Col md={3}>\n              {sidebarButton}\n              <h5>{t(\"general.menu\")}</h5>\n              <OrganizationMenu activeLink='documents'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationDocumentsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_DOCUMENTS_QUERY = gql`\n  query OrganizationDocuments($documentType: String!) {\n    organizationDocuments(documentType:$documentType) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          documentType\n          version\n          dateStart\n          dateEnd\n          document\n          urlDocument\n        }\n      }\n    }\n  }\n`\n\nexport const GET_DOCUMENT_QUERY = gql`\n  query OrganizationDocument($id: ID!) {\n    organizationDocument(id:$id) {\n      id\n      version\n      dateStart\n      dateEnd\n      document\n    }\n  }\n`\n\nexport const ADD_DOCUMENT = gql`\n  mutation CreateOrganizationDocument($input:CreateOrganizationDocumentInput!) {\n    createOrganizationDocument(input: $input) {\n      organizationDocument{\n        id\n        version\n        dateStart\n        dateEnd\n      }\n    }\n  }\n`\n\nexport const UPDATE_DOCUMENT = gql`\n  mutation UpdateOrganizationDocument($input:UpdateOrganizationDocumentInput!) {\n    updateOrganizationDocument(input: $input) {\n      organizationDocument{\n        id\n        version\n        dateStart\n        dateEnd\n      }\n    }\n  }\n`\n\nexport const DELETE_DOCUMENT = gql`\n  mutation DeleteOrganizationDocument($input:DeleteOrganizationDocumentInput!) {\n    deleteOrganizationDocument(input: $input) {\n      ok\n    }\n  }\n`","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_DOCUMENT, GET_DOCUMENTS_QUERY } from \"./queries\"\nimport confirmDelete from \"../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction OrganizationDocumentDelete({t, match, node}) {\n  const [deleteOrganizationDocument, { data }] = useMutation(DELETE_DOCUMENT)\n\n  return (\n    <button className=\"icon btn btn-link btn-sm\" \n      title={t('general.delete')} \n      href=\"\"\n      onClick={() => {\n        confirmDelete({\n          t: t,\n          msgConfirm: t(\"organization.documents.delete_confirm_msg\"),\n          msgDescription: <p> {t(\"general.version\")}: {node.version}</p>,\n          msgSuccess: t('organization.documents.deleted'),\n          deleteFunction: deleteOrganizationDocument,\n          functionVariables: { \n            variables: {\n              input: { id: node.id }\n            }, \n            refetchQueries: [\n              {query: GET_DOCUMENTS_QUERY, variables: { documentType: node.documentType} },\n            ]\n          }\n        })\n    }}>\n      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationDocumentDelete))\n","\nexport function getSubtitle(t, documentType) {\n  switch (documentType) {\n    case \"TERMS_AND_CONDITIONS\":\n      return t('general.terms_and_conditions')\n    case \"PRIVACY_POLICY\":\n      return t('general.privacy_policy')\n    default:\n      return \"Invalid document type\"\n  }\n}\n  ","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport ISODateString from \"../../ui/ISODateString\"\nimport FileDownloadTableButton from \"../../ui/FileDownloadTableButton\"\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationMenu from \"../OrganizationMenu\"\nimport OrganizationDocumentsBase from \"./OrganizationDocumentsBase\"\nimport OrganizationDocumentsDelete from \"./OrganizationDocumentDelete\"\nimport { getSubtitle } from './tools'\n\nimport { GET_DOCUMENTS_QUERY, DELETE_DOCUMENT } from \"./queries\"\n\n\nfunction OrganizationListDocuments({ t, match, history }) {\n  const organizationId = match.params.organization_id\n  const documentType = match.params.document_type\n  const subTitle = getSubtitle(t, documentType)\n\n  const back = <Link to={`/organization/documents/${organizationId}`}>\n    <Button \n      icon=\"arrow-left\"\n      className=\"mr-2\"\n      outline\n      color=\"secondary\"\n    >\n      {t('general.back_to')} {t('organization.documents.title')}\n    </Button>\n  </Link>\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"add\"\n    resource=\"organizationdocument\">\n      <Link to={`/organization/documents/${organizationId}/${documentType}/add`} >\n        <Button color=\"primary btn-block mb-6\" >\n          <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.documents.add')}\n        </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_DOCUMENTS_QUERY, {\n    variables: { documentType: documentType }\n  })\n\n  if (loading) {\n    return (\n      <OrganizationDocumentsBase headerLinks={back}>\n        {t('general.loading_with_dots')}\n      </OrganizationDocumentsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <OrganizationDocumentsBase headerLinks={back}>\n        {t('organization.documents.error_loading')}\n      </OrganizationDocumentsBase>\n    )\n  }\n  \n\n  return (\n    <OrganizationDocumentsBase headerLinks={back} sidebarButton={sidebarButton}>\n      <ContentCard \n        cardTitle={t('organization.documents.title') + ' - ' + subTitle}\n        pageInfo={data.organizationDocuments.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: data.organizationDocuments.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.organizationDocuments.edges\n              const pageInfo = fetchMoreResult.organizationDocuments.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the fetched documents at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    organizationDocuments: {\n                      __typename: previousResult.organizationDocuments.__typename,\n                      edges: [ ...previousResult.organizationDocuments.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }}\n      >\n        <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.date')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.version')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.download')}</Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                  {data.organizationDocuments.edges.map(({ node }) => (\n                    <Table.Row key={v4()}>\n                      <Table.Col key={v4()}>\n                        <ISODateString ISODateStr={node.dateStart} />\n                        {(node.dateEnd) ? <span> - <ISODateString ISODateStr={node.dateEnd} /></span> : \"\"}\n                      </Table.Col>\n                      <Table.Col key={v4()}>\n                        {node.version}\n                      </Table.Col>\n                      <Table.Col key={v4()}>\n                        <FileDownloadTableButton mediaUrl={node.urlDocument} />\n                      </Table.Col>\n                      <Table.Col className=\"text-right\" key={v4()}>\n                        <Link to={`/organization/documents/${organizationId}/${documentType}/edit/${node.id}`} >\n                          <Button className='btn-sm' \n                                  color=\"secondary\">\n                            {t('general.edit')}\n                          </Button>\n                        </Link>\n                        <OrganizationDocumentsDelete node={node} />\n                      </Table.Col>\n                    </Table.Row>\n                  ))}\n              </Table.Body>\n            </Table>\n      </ContentCard>\n    </OrganizationDocumentsBase>\n  )\n\n}\n\nexport default withTranslation()(withRouter(OrganizationListDocuments))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { \n  Formik,\n  Form as FoForm, \n  Field, \n  ErrorMessage \n} from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { ADD_DOCUMENT, GET_DOCUMENTS_QUERY } from \"./queries\"\nimport { DOCUMENT_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from \"../../../tools/date_tools\"\n// import OrganizationDocumentForm from './OrganizationDocumentForm'\nimport CSDatePicker from \"../../ui/CSDatePicker\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationDocumentsBase from \"./OrganizationDocumentsBase\"\nimport { getSubtitle } from './tools'\n\n\nconst customFileInputLabelStyle = {\n  whiteSpace: \"nowrap\",\n  display: \"block\",\n  overflow: \"hidden\"\n}  \n\n\nfunction OrganizationDocumentAdd({ t, match, history }) {\n  const organizationId = match.params.organization_id\n  const documentType = match.params.document_type\n  const subTitle = getSubtitle(t, documentType)\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n\n  // Vars for document file input field end\n  \n  const returnUrl = `/organization/documents/${organizationId}/${documentType}`\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"add\"\n    resource=\"organizationdocument\">\n      <Link to={returnUrl} >\n        <Button color=\"primary btn-block mb-6\" >\n          <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n        </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  const [addDocument, { data }] = useMutation(ADD_DOCUMENT, {\n    onCompleted: () => history.push(returnUrl)\n  })\n\n  return (\n    <OrganizationDocumentsBase sidebarButton={sidebarButton}>\n      <Card title={t('organization.documents.add') + ' - ' + subTitle}>\n        <Formik\n          initialValues={{ \n            version: '',\n            dateStart: '', \n            dateEnd: '',\n            document: ''\n          }}\n          // validationSchema={DOCUMENT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log(\"Submit values\")\n            console.log(values)\n            console.log(fileName)\n\n            let inputVars = {\n              documentType: documentType,\n              version: values.version,\n              dateStart: dateToLocalISO(values.dateStart),\n              documentFileName: fileName,\n            }\n\n            if (values.dateEnd) {\n              inputVars.dateEnd = dateToLocalISO(values.dateEnd)\n            }\n\n            let reader = new FileReader()\n            reader.onload = function(reader_event) {\n              console.log(reader_event.target.result)\n              let b64_enc_file = reader_event.target.result\n              console.log(b64_enc_file)\n              // Add uploaded document b64 encoded blob to input vars\n              inputVars.document = b64_enc_file\n\n              addDocument({ variables: {\n                input: inputVars\n              }, refetchQueries: [\n                  {query: GET_DOCUMENTS_QUERY, variables: {documentType: documentType}}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  toast.success((t('organization.documents.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                    setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n            }\n            \n            let file = inputFileName.current.files[0]\n            reader.readAsDataURL(file)\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <FoForm>\n            <Card.Body>\n              <Grid.Row>\n                <Grid.Col>\n                  <Form.Group label={t('general.version')}>\n                    <Field type=\"text\" \n                          name=\"version\" \n                          className={(errors.version) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\" />\n                    <ErrorMessage name=\"version\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n                <Grid.Col>\n                  <Form.Group label={t('general.custom_file_input_label')}>\n                    <div className=\"custom-file\">\n                      <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                      <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                        {fileInputLabel}\n                      </label>\n                    </div>\n                  </Form.Group>\n                </Grid.Col>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col>\n                  <Form.Group label={t('general.date_start')}>\n                    <CSDatePicker \n                      selected={values.dateStart}\n                      onChange={(date) => setFieldValue(\"dateStart\", date)}\n                      onBlur={() => setFieldTouched(\"dateStart\", true)}\n                    />\n                    <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n                <Grid.Col>\n                  <Form.Group label={t('general.date_end')}>\n                    <CSDatePicker \n                      selected={values.dateEnd}\n                      onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                      onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                    />\n                    <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n              </Grid.Row>\n            </Card.Body>\n            <Card.Footer>\n              <Button \n                color=\"primary\"\n                className=\"pull-right\" \n                type=\"submit\" \n                disabled={isSubmitting}\n              >\n                {t('general.submit')}\n              </Button>\n              <Button color=\"link\" onClick={() => history.push(returnUrl)}>\n                {t('general.cancel')}\n              </Button>\n            </Card.Footer>\n          </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationDocumentsBase>\n  )\n}\n\nexport default withTranslation()(OrganizationDocumentAdd)\n\n\n// const OrganizationLevelAdd = ({ t, history }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t('organization.title')} />\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//           <Card>\n//             <Card.Header>\n//               <Card.Title>{t('organization.levels.title_add')}</Card.Title>\n//             </Card.Header>\n//             <Mutation mutation={ADD_LEVEL} onCompleted={() => history.push(return_url)}> \n//                 {(addLocation, { data }) => (\n//                     <Formik\n//                         initialValues={{ name: '', code: '' }}\n//                         validationSchema={LEVEL_SCHEMA}\n//                         onSubmit={(values, { setSubmitting }) => {\n//                             addLocation({ variables: {\n//                               input: {\n//                                 name: values.name, \n//                               }\n//                             }, refetchQueries: [\n//                                 {query: GET_LEVELS_QUERY, variables: {\"archived\": false }}\n//                             ]})\n//                             .then(({ data }) => {\n//                                 console.log('got data', data);\n//                                 toast.success((t('organization.levels.toast_add_success')), {\n//                                     position: toast.POSITION.BOTTOM_RIGHT\n//                                   })\n//                               }).catch((error) => {\n//                                 toast.error((t('general.toast_server_error')) + ': ' +  error, {\n//                                     position: toast.POSITION.BOTTOM_RIGHT\n//                                   })\n//                                 console.log('there was an error sending the query', error)\n//                                 setSubmitting(false)\n//                               })\n//                         }}\n//                         >\n//                         {({ isSubmitting, errors }) => (\n//                             <OrganizationLevelForm \n//                               isSubmitting={isSubmitting}\n//                               errors={errors}\n//                               return_url={return_url}\n//                             />\n//                         )}\n//                     </Formik>\n//                 )}\n//                 </Mutation>\n//           </Card>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"organizationlevel\">\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(return_url)}>\n//                 <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <OrganizationMenu activeLink='levels'/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// )\n\n// export default withTranslation()(withRouter(OrganizationLevelAdd))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const LEVEL_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { \n  Formik,\n  Form as FoForm, \n  Field, \n  ErrorMessage \n} from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { UPDATE_DOCUMENT, GET_DOCUMENT_QUERY, GET_DOCUMENTS_QUERY } from \"./queries\"\nimport { DOCUMENT_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from \"../../../tools/date_tools\"\n// import OrganizationDocumentForm from './OrganizationDocumentForm'\nimport CSDatePicker from \"../../ui/CSDatePicker\"\n\nimport {\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationDocumentsBase from \"./OrganizationDocumentsBase\"\nimport { getSubtitle } from './tools'\n\n\nfunction OrganizationDocumentEdit({ t, match, history }) {\n  const organizationId = match.params.organization_id\n  const documentType = match.params.document_type\n  const id = match.params.id\n  const subTitle = getSubtitle(t, documentType)\n  \n  const returnUrl = `/organization/documents/${organizationId}/${documentType}`\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"change\"\n    resource=\"organizationdocument\">\n      <Link to={returnUrl} >\n        <Button color=\"primary btn-block mb-6\" >\n          <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n        </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  const [updateDocument, { data: dataUpdate }] = useMutation(UPDATE_DOCUMENT, {\n    onCompleted: () => history.push(returnUrl)\n  })\n  const { loading, error, data } = useQuery(GET_DOCUMENT_QUERY, {\n    variables: { \"id\": id }\n  })\n\n  if (loading) {\n    return (\n      <OrganizationDocumentsBase sidebarButton={sidebarButton}>\n        {t(\"general.loading_with_dots\")}\n      </OrganizationDocumentsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <OrganizationDocumentsBase sidebarButton={sidebarButton}>\n        {t(\"organization.documents.error_loading\")}\n      </OrganizationDocumentsBase>\n    )\n  }\n\n\n  return (\n    <OrganizationDocumentsBase sidebarButton={sidebarButton}>\n      <Card>\n        <Card.Header>\n          <Card.Title>\n            {t('organization.documents.edit') + ' - ' + subTitle}\n          </Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            version: data.organizationDocument.version,\n            dateStart: data.organizationDocument.dateStart, \n            dateEnd: data.organizationDocument.dateEnd,\n          }}\n          // validationSchema={DOCUMENT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log(\"Submit values\")\n            console.log(values)\n\n            let inputVars = {\n              id: id,\n              version: values.version,\n              dateStart: dateToLocalISO(values.dateStart),\n            }\n\n            if (values.dateEnd) {\n              inputVars.dateEnd = dateToLocalISO(values.dateEnd)\n            }\n\n            updateDocument({ variables: {\n              input: inputVars\n            }, refetchQueries: [\n                {query: GET_DOCUMENTS_QUERY, variables: {documentType: documentType}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('organization.documents.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                  setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <FoForm>\n            <Card.Body>\n              <Grid.Row>\n                <Grid.Col>\n                  <Form.Group label={t('general.version')}>\n                    <Field type=\"text\" \n                          name=\"version\" \n                          className={(errors.version) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\" />\n                    <ErrorMessage name=\"version\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n                {/* <Grid.Col>\n                  <Form.Group label={t('general.custom_file_input_label')}>\n                    <div className=\"custom-file\">\n                      <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                      <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                        {fileInputLabel}\n                      </label>\n                    </div>\n                  </Form.Group>\n                </Grid.Col> */}\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col>\n                  <Form.Group label={t('general.date_start')}>\n                    <CSDatePicker \n                      selected={values.dateStart}\n                      onChange={(date) => setFieldValue(\"dateStart\", date)}\n                      onBlur={() => setFieldTouched(\"dateStart\", true)}\n                    />\n                    <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n                <Grid.Col>\n                  <Form.Group label={t('general.date_end')}>\n                    <CSDatePicker \n                      selected={values.dateEnd}\n                      onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                      onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                    />\n                    <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n              </Grid.Row>\n            </Card.Body>\n            <Card.Footer>\n              <Button \n                color=\"primary\"\n                className=\"pull-right\" \n                type=\"submit\" \n                disabled={isSubmitting}\n              >\n                {t('general.submit')}\n              </Button>\n              <Button color=\"link\" onClick={() => history.push(returnUrl)}>\n                {t('general.cancel')}\n              </Button>\n            </Card.Footer>\n          </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationDocumentsBase>\n  )\n}\n\nexport default withTranslation()(OrganizationDocumentEdit)\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationHolidaysBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/holidays\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>  \n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationholiday\">\n                  <Link to=\"/organization/holidays/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.holidays.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }     \n              <OrganizationMenu activeLink='holidays'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationHolidaysBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_HOLIDAYS_QUERY = gql`\n  query OrganizationHolidays($after: String, $before: String) {\n    organizationHolidays(first: 15, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          description\n          dateStart\n          dateEnd\n          classes\n          organizationLocations {\n            edges {\n              node {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_HOLIDAY_QUERY = gql`\n  query OrganizationHoliday($id: ID!) {\n    organizationHoliday(id:$id) {\n      id\n      name\n      description\n      dateStart\n      dateEnd\n      classes\n    }\n  }\n`\n\nexport const ADD_HOLIDAY = gql`\n  mutation CreateOrganizationHoliday($input:CreateOrganizationHolidayInput!) {\n    createOrganizationHoliday(input: $input) {\n      organizationHoliday {\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_HOLIDAY = gql`\n  mutation UpdateOrganizationHoliday($input: UpdateOrganizationHolidayInput!) {\n    updateOrganizationHoliday(input: $input) {\n      organizationHoliday {\n        id\n        name\n      }\n    }\n  }\n`\n\nexport const DELETE_HOLIDAY = gql`\n  mutation DeleteOrganizationHoliday($input: DeleteOrganizationHolidayInput!) {\n    deleteOrganizationHoliday(input: $input) {\n      ok\n    }\n  }\n`\n\nexport const GET_HOLIDAY_LOCATIONS_QUERY = gql`\n  query GetOrganizationHolidayLocations($after: String, $before: String, $id:ID!) {\n    organizationLocations(first: 100, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    organizationHoliday(id: $id) {\n      id\n      name\n      description\n      organizationLocations {\n        edges {\n          node {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const ADD_LOCATION_TO_HOLIDAY = gql`\n  mutation AddLocationToHoliday($input: CreateOrganizationHolidayLocationInput!) {\n    createOrganizationHolidayLocation(input:$input) {\n      organizationHolidayLocation {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_LOCATION_FROM_HOLIDAY = gql`\n  mutation DeleteLocationFromHoliday($input: DeleteOrganizationHolidayLocationInput!) {\n    deleteOrganizationHolidayLocation(input:$input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from \"moment\"\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\n\nimport {\n  Badge,\n  Icon,\n  Dimmer,\n  Button,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationHolidaysBase from './OrganizationHolidaysBase'\n\nimport { GET_HOLIDAYS_QUERY, DELETE_HOLIDAY } from \"./queries\"\n\n\nfunction OrganizationHolidays({t, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  const cardTitle = t('organization.holidays.title')\n  \n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_HOLIDAYS_QUERY)\n  const [ deleteHoliday ] = useMutation(DELETE_HOLIDAY)\n\n  if (loading) return (\n    <OrganizationHolidaysBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n\n  if (error) return (\n    <OrganizationHolidaysBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.holidays.error_loading')}</p>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n\n  let holidays = data.organizationHolidays\n\n  // Empty list\n  if (!holidays.edges.length) { return (\n    <OrganizationHolidaysBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.holidays.empty_list')}</p>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )}\n\n\n  return (\n    <OrganizationHolidaysBase>\n      <ContentCard \n        cardTitle={cardTitle}\n        pageInfo={holidays.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: holidays.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.organizationHolidays.edges\n            const pageInfo = fetchMoreResult.organizationHolidays.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new levels at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  organizationHolidays: {\n                    __typename: previousResult.organizationHolidays.__typename,\n                    edges: [ ...previousResult.organizationHolidays.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n          }\n        })\n      }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n              <Table.ColHeader>{t('organization.locations.title')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {holidays.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name} \n                    <div className=\"text-muted\">\n                      <small dangerouslySetInnerHTML={{__html: node.description}} />\n                    </div>\n                  </Table.Col>\n                  <Table.Col>\n                    {moment(node.dateStart).format(dateFormat)}\n                  </Table.Col>\n                  <Table.Col>\n                    {moment(node.dateEnd).format(dateFormat)}\n                  </Table.Col>\n                  <Table.Col>\n                    {node.organizationLocations.edges.map(({ node: location }) => (\n                       <div><Badge color=\"primary\" className=\"mr-1\">{location.name}</Badge></div>\n                    ))}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={`/organization/holidays/edit/${node.id}/locations`}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('organization.holidays.locations.title_edit')}\n                      </Button>\n                    </Link>\n                    <Link to={`/organization/holidays/edit/${node.id}`}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"organization.holidays.holiday_delete_confirm_msg\"),\n                          msgDescription: <p>{node.name}</p>,\n                          msgSuccess: t('organization.holidays.payment_deleted'),\n                          deleteFunction: deleteHoliday,\n                          functionVariables: { \n                            variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, \n                            refetchQueries: [\n                              {query: GET_HOLIDAYS_QUERY },\n                            ]\n                          }\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n}\n\n\n\nexport default withTranslation()(withRouter(OrganizationHolidays))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const HOLIDAY_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid,\n  } from \"tabler-react\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"  \nimport CSDatePicker from \"../../ui/CSDatePicker\"\n\nconst OrganizationHolidayForm = ({ t, history, isSubmitting, values, errors, setFieldTouched, setFieldValue, returnUrl }) => (\n    <FoForm>\n        <Card.Body>\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Grid.Row>\n              <Grid.Col>\n                <Form.Group label={t('general.date_start')}>\n                  <CSDatePicker \n                      className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                      selected={values.dateStart}\n                      onChange={(date) => {\n                      setFieldValue(\"dateStart\", date)\n                      setFieldTouched(\"dateStart\", true)\n                      }}\n                      onBlur={() => setFieldTouched(\"dateStart\", true)}\n                  />\n                  <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n                <Grid.Col>\n                  <Form.Group label={t('general.date_end')}>\n                    <CSDatePicker \n                      selected={values.dateEnd}\n                      onChange={(date) => {\n                          setFieldValue(\"dateEnd\", date)\n                          setFieldTouched(\"dateEnd\", true)\n                      }}\n                      onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                      placeholderText={t('general.date_end')}\n                    />\n                    <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n              </Grid.Row>\n            <h5>{t(\"general.apply_to\")}</h5>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"classes\" \n                  checked={values.classes} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('general.classes')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"classes\" component=\"div\" />   \n            </Form.Group>  \n          <Form.Group label={t('general.description')}>\n            <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"description\"\n                initialValue={values.description}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                    setFieldValue(\"description\", e.target.getContent())\n                    setFieldTouched(\"description\", true, true)\n                }}\n                />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Card.Body>\n        <Card.Footer>\n            <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n            >\n            {t('general.submit')}\n            </Button>\n            <Link to={returnUrl}>\n                <Button color=\"link\">\n                    {t('general.cancel')}\n                </Button>\n            </Link>\n        </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationHolidayForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport { dateToLocalISO } from \"../../../tools/date_tools\"\n\nimport { GET_HOLIDAYS_QUERY, ADD_HOLIDAY } from './queries'\nimport { HOLIDAY_SCHEMA } from './yupSchema'\nimport OrganizationHolidayForm from './OrganizationHolidayForm'\nimport OrganizationHolidaysBase from './OrganizationHolidaysBase';\n\n\nfunction OrganizationHolidayAdd({t, history}) {\n  const returnUrl = \"/organization/holidays\"\n  const [ addHoliday ] = useMutation(ADD_HOLIDAY)\n  \n  return (\n   <OrganizationHolidaysBase showBack={true}>\n    <Card>\n      <Card.Header>\n        <Card.Title>{t('organization.holidays.title_add')}</Card.Title>\n      </Card.Header>\n      <Formik\n          initialValues={{ name: '', description: '', classes: true }}\n          validationSchema={HOLIDAY_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addHoliday({ variables: {\n                input: {\n                  name: values.name, \n                  dateStart: dateToLocalISO(values.dateStart),\n                  dateEnd: dateToLocalISO(values.dateEnd),\n                  description: values.description,\n                  classes: values.classes,\n                }\n              }, refetchQueries: [\n                  {query: GET_HOLIDAYS_QUERY}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.holidays.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, values, errors, setFieldTouched, setFieldValue }) => (\n            <OrganizationHolidayForm \n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              returnUrl={returnUrl}\n            />\n          )}\n      </Formik>\n    </Card>\n   </OrganizationHolidaysBase> \n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationHolidayAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_HOLIDAYS_QUERY, GET_HOLIDAY_QUERY, UPDATE_HOLIDAY } from './queries'\nimport { HOLIDAY_SCHEMA } from './yupSchema'\nimport OrganizationHolidayForm from './OrganizationHolidayForm'\n\nimport { dateToLocalISO } from \"../../../tools/date_tools\"\n\nimport {\n  Dimmer,\n  Card,\n} from \"tabler-react\";\nimport OrganizationHolidaysBase from './OrganizationHolidaysBase';\nimport ContentCard from \"../../general/ContentCard\"\n\n\nfunction OrganizationHolidayEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('organization.holidays.title_edit')\n  const returnUrl = \"/organization/holidays\"\n  const { loading, error, data } = useQuery(GET_HOLIDAY_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateHoliday ] = useMutation(UPDATE_HOLIDAY)\n\n  if (loading) return (\n    <OrganizationHolidaysBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n\n  if (error) return (\n    <OrganizationHolidaysBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n                    \n  const initialData = data.organizationHoliday;\n  console.log('query data')\n  console.log(data)\n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  if (initialData.dateStart) {\n    dateStart = new Date(initialData.dateStart)\n  }\n  let dateEnd = null\n  if (initialData.dateEnd) {\n    dateEnd = new Date(initialData.dateEnd)\n  }\n\n\n  return (\n    <OrganizationHolidaysBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n              description: initialData.description,\n              dateStart: dateStart,\n              dateEnd: dateEnd,\n              classes: initialData.classes\n            }}\n            validationSchema={HOLIDAY_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateHoliday({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                    description: values.description,\n                    dateStart: dateToLocalISO(values.dateStart),\n                    dateEnd: dateToLocalISO(values.dateEnd)\n                  }\n                }, refetchQueries: [\n                    {query: GET_HOLIDAYS_QUERY}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.holidays.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, values, errors, setFieldTouched, setFieldValue }) => (\n              <OrganizationHolidayForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                values={values}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                returnUrl={returnUrl}\n              />\n            )}\n        </Formik>\n      </Card>\n    </OrganizationHolidaysBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationHolidayEdit))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { toast } from 'react-toastify'\n\nimport { GET_HOLIDAY_LOCATIONS_QUERY, ADD_LOCATION_TO_HOLIDAY, DELETE_LOCATION_FROM_HOLIDAY } from './queries'\n\nimport {\n  Dimmer,\n  Alert,\n  Icon,\n  Button,\n  Card,\n  Table,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationHolidaysBase from './OrganizationHolidaysBase';\n\n\nfunction OrganizationHolidayEditLocations({ t, match, history }) {\n  const holidayId = match.params.id\n  const returnUrl = \"/organization/holidays\"\n  let cardTitle = t('organization.holidays.locations.title_edit')\n  const { loading, error, data } = useQuery(GET_HOLIDAY_LOCATIONS_QUERY, { \n    variables: { id: holidayId }\n  })\n  const [ addLocationToHoliday ] = useMutation(ADD_LOCATION_TO_HOLIDAY)\n  const [ deleteLocationFromHoliday ] = useMutation(DELETE_LOCATION_FROM_HOLIDAY)\n\n  // Loading\n  if (loading) return (\n    <OrganizationHolidaysBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationHolidaysBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const locations = data.organizationLocations\n  const holiday = data.organizationHoliday\n\n  let holiday_locations = {}\n  if (holiday.organizationLocations.edges) {\n    holiday.organizationLocations.edges.map(({ node}) => (\n      holiday_locations[node.id] = true\n    ))\n  }\n\n  cardTitle = cardTitle + \" - \" + holiday.name\n\n  return (\n    <OrganizationHolidaysBase showBack={true}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <Table>\n            <Table.Header>\n              <Table.Row key={v4()}>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {locations.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {(node.id in holiday_locations) ? \n                        <Icon name=\"check-circle\" className=\"text-green\" /> : <Icon name=\"x-circle\" className=\"text-red\" />\n                      }\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.name}\n                    </Table.Col>\n                    {console.log((node.id in holiday_locations))}\n                    {(!(node.id in holiday_locations)) ?\n                      // Add\n                      <Table.Col className=\"text-right text-green\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('organization.holiday.locations.add_to_holiday')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked add\")\n                            let locationId = node.id\n                            addLocationToHoliday({ variables: {\n                              input: {\n                                organizationHoliday: holidayId,\n                                organizationLocation: locationId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_HOLIDAY_LOCATIONS_QUERY, variables: {\"id\": holidayId }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('organization.holiday.locations.added_to_holiday'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"plus-circle\" /> { ' ' }\n                          {t('organization.holiday.locations.add_to_holiday')} \n                        </Button>\n                      </Table.Col>\n                      :\n                      // Delete\n                      <Table.Col className=\"text-right text-red\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('organization.holiday.locations.delete_from_holiday')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked delete\")\n                            console.log(node.id)\n                            let locationId = node.id\n                            deleteLocationFromHoliday({ variables: {\n                              input: {\n                                organizationHoliday: holidayId,\n                                organizationLocation: locationId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_HOLIDAY_LOCATIONS_QUERY, variables: {\"id\": holidayId }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('organization.holiday.locations.deleted_from_holiday'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"minus-circle\" /> { ' ' }\n                          {t('organization.holiday.locations.delete_from_holiday')}\n                        </Button>\n                      </Table.Col>\n                      }\n                  </Table.Row>\n                ))}\n            </Table.Body>\n          </Table>\n        </Card.Body>\n      </Card>\n    </OrganizationHolidaysBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationHolidayEditLocations))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationLanguagesBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/languages\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>  \n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationlanguage\">\n                  <Link to=\"/organization/languages/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.languages.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }     \n              <OrganizationMenu activeLink='languages'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLanguagesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_LANGUAGES_QUERY = gql`\n  query OrganizationLanguages($after: String, $before: String, $archived: Boolean) {\n    organizationLanguages(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_LANGUAGE_QUERY = gql`\n  query OrganizationLanguage($id: ID!) {\n    organizationLanguage(id:$id) {\n      id\n      name\n      archived\n    }\n  }\n`\n\nexport const ADD_LANGUAGE = gql`\nmutation CreateOrganizationLanguage($input:CreateOrganizationLanguageInput!) {\n  createOrganizationLanguage(input: $input) {\n    organizationLanguage{\n      id\n      archived\n      name\n    }\n  }\n}\n`\n\nexport const UPDATE_LANGUAGE = gql`\nmutation UpdateOrganizationLanguage($input: UpdateOrganizationLanguageInput!) {\n  updateOrganizationLanguage(input: $input) {\n    organizationLanguage {\n      id\n      name\n    }\n  }\n}\n`\n\nexport const ARCHIVE_LANGUAGE = gql`\nmutation ArchiveOrganizationLanguage($input: ArchiveOrganizationLanguageInput!) {\n  archiveOrganizationLanguage(input: $input) {\n    organizationLanguage {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationLanguagesBase from './OrganizationLanguagesBase'\n\nimport { GET_LANGUAGES_QUERY, ARCHIVE_LANGUAGE } from \"./queries\"\n\n\nfunction OrganizationLanguages({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('organization.languages.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_LANGUAGES_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveLanguage ] = useMutation(ARCHIVE_LANGUAGE)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <OrganizationLanguagesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )\n\n  if (error) return (\n    <OrganizationLanguagesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.languages.error_loading')}</p>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )\n\n  let languages = data.organizationLanguages\n\n  // Empty list\n  if (!languages.edges.length) { return (\n    <OrganizationLanguagesBase>\n      <ContentCard cardTitle={t('organization.languages.title')}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('organization.languages.empty_list') : t(\"organization.languages.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )}\n\n\n  return (\n    <OrganizationLanguagesBase>\n      <ContentCard \n        cardTitle={cardTitle}\n        headerContent={headerOptions}\n        pageInfo={languages.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: languages.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.organizationLanguages.edges\n            const pageInfo = fetchMoreResult.organizationLanguages.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new languages at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  organizationLanguages: {\n                    __typename: previousResult.organizationLanguages.__typename,\n                    edges: [ ...previousResult.organizationLanguages.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n          }\n        })\n      }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {languages.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/organization/languages/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveLanguage({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_LANGUAGES_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fe\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLanguages))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const LANGUAGE_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nconst OrganizationLanguageForm = ({ t, history, isSubmitting, errors, returnUrl }) => (\n    <FoForm>\n        <Card.Body>\n            <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n        </Card.Body>\n        <Card.Footer>\n            <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n            >\n            {t('general.submit')}\n            </Button>\n            <Link to={returnUrl}>\n                <Button color=\"link\">\n                    {t('general.cancel')}\n                </Button>\n            </Link>\n        </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationLanguageForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_LANGUAGES_QUERY, ADD_LANGUAGE } from './queries'\nimport { LANGUAGE_SCHEMA } from './yupSchema'\nimport OrganizationLanguageForm from './OrganizationLanguageForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport OrganizationLanguagesBase from './OrganizationLanguagesBase';\n\n\nfunction OrganizationLanguageAdd({t, history}) {\n  const returnUrl = \"/organization/languages\"\n  const [ addLanguage ] = useMutation(ADD_LANGUAGE)\n  \n  return (\n   <OrganizationLanguagesBase showBack={true}>\n    <Card>\n      <Card.Header>\n        <Card.Title>{t('organization.languages.title_add')}</Card.Title>\n      </Card.Header>\n      <Formik\n          initialValues={{ name: '', code: '' }}\n          validationSchema={LANGUAGE_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addLanguage({ variables: {\n                input: {\n                  name: values.name, \n                }\n              }, refetchQueries: [\n                  {query: GET_LANGUAGES_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.languages.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n            <OrganizationLanguageForm \n              isSubmitting={isSubmitting}\n              errors={errors}\n              returnUrl={returnUrl}\n            />\n          )}\n      </Formik>\n    </Card>\n   </OrganizationLanguagesBase> \n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLanguageAdd))","import React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_LANGUAGES_QUERY, GET_LANGUAGE_QUERY, UPDATE_LANGUAGE } from './queries'\nimport { LANGUAGE_SCHEMA } from './yupSchema'\nimport OrganizationLanguageForm from './OrganizationLanguageForm'\n\nimport {\n  Dimmer,\n  Card,\n} from \"tabler-react\";\nimport OrganizationLanguagesBase from './OrganizationLanguagesBase';\nimport ContentCard from \"../../general/ContentCard\"\n\n\nfunction OrganizationLanguageEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('organization.languages.title_edit')\n  const returnUrl = \"/organization/languages\"\n  const { loading, error, data } = useQuery(GET_LANGUAGE_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateLanguage ] = useMutation(UPDATE_LANGUAGE)\n\n  if (loading) return (\n    <OrganizationLanguagesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )\n\n  if (error) return (\n    <OrganizationLanguagesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )\n                    \n  const initialData = data.organizationLanguage;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationLanguagesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n            }}\n            validationSchema={LANGUAGE_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateLanguage({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                  }\n                }, refetchQueries: [\n                    {query: GET_LANGUAGES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.languages.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n              <OrganizationLanguageForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n            )}\n        </Formik>\n      </Card>\n    </OrganizationLanguagesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLanguageEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_LOCATIONS_QUERY = gql`\n  query OrganizationLocations($after: String, $before: String, $archived: Boolean) {\n    organizationLocations(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id,\n          archived,\n          displayPublic,\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_LOCATION_QUERY = gql`\n  query OrganizationLocation($id: ID!) {\n    organizationLocation(id:$id) {\n      id\n      name\n      displayPublic\n      archived\n    }\n  }\n`\n\nexport const ADD_LOCATION = gql`\nmutation CreateOrganizationLocation($input: CreateOrganizationLocationInput!) {\n  createOrganizationLocation(input: $input) {\n    organizationLocation {\n      id\n      archived\n      displayPublic\n      name\n    }\n  }\n}\n`\n\nexport const UPDATE_LOCATION = gql`\nmutation UpdateOrganizationLocation($input: UpdateOrganizationLocationInput!) {\n  updateOrganizationLocation(input: $input) {\n    organizationLocation {\n      id\n      name\n      displayPublic\n    }\n  }\n}\n`\n\nexport const ARCHIVE_LOCATION = gql`\nmutation ArchiveOrganizationLocation($input: ArchiveOrganizationLocationInput!) {\n  archiveOrganizationLocation(input: $input) {\n    organizationLocation {\n      id\n      archived\n    }\n  }\n}\n`\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationLocationsBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title=\"Organization\" />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ? \n                <Link to=\"/organization/locations\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button> \n                </Link>\n                :\n                <HasPermissionWrapper permission=\"add\"\n                                resource=\"organizationlocation\">\n                  <Link to=\"/organization/locations/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.locations.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <OrganizationMenu activeLink='locations'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>  \n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLocationsBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\n\nimport { GET_LOCATIONS_QUERY, ARCHIVE_LOCATION } from \"./queries\"\nimport OrganizationLocationsBase from \"./OrganizationLocationsBase\"\n\nfunction OrganizationLocations({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('organization.locations.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_LOCATIONS_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveLocation ] = useMutation(ARCHIVE_LOCATION)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  // Loading\n  if (loading) return (\n    <OrganizationLocationsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationLocationsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.locations.error_loading')}</p>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )\n\n  let locations = data.organizationLocations\n\n  // Empty list\n  if (!locations.edges.length) { return (\n    <OrganizationLocationsBase>\n      <ContentCard cardTitle={cardTitle}\n                  headerContent={headerOptions}>\n        <p>\n        {(!archived) ? t('organization.locations.empty_list') : t(\"organization.locations.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )}\n\n  return (\n    <OrganizationLocationsBase>\n      <ContentCard cardTitle={cardTitle}\n                headerContent={headerOptions}\n                pageInfo={locations.pageInfo}\n                onLoadMore={() => {\n                fetchMore({\n                  variables: {\n                    after: locations.pageInfo.endCursor\n                  },\n                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                    const newEdges = fetchMoreResult.organizationLocations.edges\n                    const pageInfo = fetchMoreResult.organizationLocations.pageInfo\n\n                    return newEdges.length\n                      ? {\n                          // Put the new locations at the end of the list and update `pageInfo`\n                          // so we have the new `endCursor` and `hasNextPage` values\n                          organizationLocations: {\n                            __typename: previousResult.organizationLocations.__typename,\n                            edges: [ ...previousResult.organizationLocations.edges, ...newEdges ],\n                            pageInfo\n                          }\n                        }\n                      : previousResult\n                  }\n                })\n              }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {locations.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.displayPublic) ? \n                      <Badge color=\"success\">{t('general.yes')}</Badge>: \n                      <Badge color=\"danger\">{t('general.no')}</Badge>}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <div>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/locations/edit/\" + node.id)}\n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/locations/rooms/\" + node.id)}\n                                color=\"secondary\">\n                          {t('general.rooms')}\n                        </Button>\n                      </div>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveLocation({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_LOCATIONS_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLocations))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const LOCATION_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_LOCATIONS_QUERY, ADD_LOCATION } from './queries'\nimport { LOCATION_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport OrganizationLocationsBase from \"./OrganizationLocationsBase\"\n\nfunction OrganizationLocationAdd({ t, history }) {\n  const returnUrl = \"/organization/locations\"\n  const cardTitle = t('organization.locations.title_add')\n  const [ addLocation ] = useMutation(ADD_LOCATION)\n\n  return (\n    <OrganizationLocationsBase showBack={true}>\n      <Card>    \n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: '', displayPublic: true }}\n          validationSchema={LOCATION_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addLocation({ variables: {\n                input: {\n                  name: values.name, \n                  displayPublic: values.displayPublic\n                }\n              }, refetchQueries: [\n                  {query: GET_LOCATIONS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.locations.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <FoForm>\n                <Card.Body>\n                    <Form.Group>\n                      <Form.Label className=\"custom-switch\">\n                        <Field \n                          className=\"custom-switch-input\"\n                          type=\"checkbox\" \n                          name=\"displayPublic\" \n                          checked={values.displayPublic} />\n                        <span className=\"custom-switch-indicator\" ></span>\n                        <span className=\"custom-switch-description\">{t('organization.location.public')}</span>\n                      </Form.Label>\n                      <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                    </Form.Group>    \n\n                    <Form.Group label={t('general.name')}>\n                      <Field type=\"text\" \n                              name=\"name\" \n                              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                      <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                </Card.Body>\n                <Card.Footer>\n                    <Button \n                      color=\"primary\"\n                      className=\"pull-right\" \n                      type=\"submit\" \n                      disabled={isSubmitting}\n                    >\n                      {t('general.submit')}\n                    </Button>\n                    <Link to={returnUrl}>\n                      <Button color=\"link\">\n                          {t('general.cancel')}\n                      </Button>\n                    </Link>\n                </Card.Footer>\n            </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationLocationsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLocationAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_LOCATIONS_QUERY, GET_LOCATION_QUERY, UPDATE_LOCATION } from './queries'\nimport { LOCATION_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationLocationsBase from \"./OrganizationLocationsBase\"\n\n\nfunction OrganizationLocationEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('organization.locations.title_edit')\n  const returnUrl = \"/organization/locations\"\n  const { loading, error, data } = useQuery(GET_LOCATION_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateLocation ] = useMutation(UPDATE_LOCATION)\n\n  // Loading\n  if (loading) return (\n    <OrganizationLocationsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationLocationsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.locations.error_loading')}</p>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )\n\n  const initialData = data.organizationLocation;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationLocationsBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n          {console.log(match.params.id)}\n        </Card.Header>                    \n        <Formik\n            initialValues={{ \n              name: initialData.name, \n              displayPublic: initialData.displayPublic \n            }}\n            validationSchema={LOCATION_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateLocation({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                    displayPublic: values.displayPublic \n                  }\n                }, refetchQueries: [\n                    {query: GET_LOCATIONS_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.locations.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values }) => (\n              <FoForm>\n                  <Card.Body>\n                      <Form.Group>\n                        <Form.Label className=\"custom-switch\">\n                          <Field \n                            className=\"custom-switch-input\"\n                            type=\"checkbox\" \n                            name=\"displayPublic\" \n                            checked={values.displayPublic} />\n                          <span className=\"custom-switch-indicator\" ></span>\n                          <span className=\"custom-switch-description\">{t('organization.location.public')}</span>\n                        </Form.Label>\n                        <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                      </Form.Group>     \n                      <Form.Group label={t('general.name')} >\n                        <Field type=\"text\" \n                              name=\"name\" \n                              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                  </Card.Body>\n                  <Card.Footer>\n                      <Button \n                        className=\"pull-right\"\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                        type=\"submit\"\n                      >\n                        {t('general.submit')}\n                      </Button>\n                      <Link to={returnUrl}>\n                        <Button\n                          type=\"button\" \n                          color=\"link\" \n                        >\n                            {t('general.cancel')}\n                        </Button>\n                      </Link>\n                    </Card.Footer>\n                </FoForm>\n              )}\n            </Formik>\n          </Card>\n    </OrganizationLocationsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLocationEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_LOCATION_ROOMS_QUERY = gql`\n  query OrganizationLocationRooms($after: String, $before: String, $organizationLocation: ID!, $archived: Boolean!) {\n    organizationLocationRooms(first: 15, before: $before, after: $after, organizationLocation: $organizationLocation, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationLocation {\n            id\n            name\n          }\n          archived,\n          displayPublic\n          name\n        }\n      }\n    }\n    organizationLocation(id: $organizationLocation) {\n      id\n      name\n    }\n  }\n`\n\nexport const GET_LOCATION_ROOM_QUERY = gql`\n  query OrganizationLocationRoom($id: ID!) {\n    organizationLocationRoom(id:$id) {\n      id\n      organizationLocation {\n        id\n        name\n      }\n      name\n      displayPublic\n      archived\n    }\n  }\n`\n\nexport const ADD_LOCATION_ROOM = gql`\n  mutation CreateOrganizationLocationRoom($input: CreateOrganizationLocationRoomInput!) {\n    createOrganizationLocationRoom(input: $input) {\n      organizationLocationRoom {\n        id\n        organizationLocation {\n          id\n          name\n        }\n        archived\n        displayPublic\n        name\n      }\n    }\n  }\n`\n\nexport const UPDATE_LOCATION_ROOM = gql`\nmutation UpdateOrganizationLocationRoom($input: UpdateOrganizationLocationRoomInput!) {\n  updateOrganizationLocationRoom(input: $input) {\n    organizationLocationRoom {\n      id\n      organizationLocation {\n        id\n        name\n      }\n      name\n      displayPublic\n    }\n  }\n}\n`\n\nexport const ARCHIVE_LOCATION_ROOM = gql`\nmutation ArchiveOrganizationLocationRoom($input: ArchiveOrganizationLocationRoomInput!) {\n  archiveOrganizationLocationRoom(input: $input) {\n    organizationLocationRoom {\n      id\n      archived\n    }\n  }\n}\n`","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nfunction OrganizationLocationRoomsBase({t, history, match, children, showBack=false}) {\n  const locationId = match.params.location_id\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/locations\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.locations.title')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to={`/organization/locations/rooms/${locationId}`}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationlocationroom\">\n                  <Link to={`/organization/locations/rooms/add/${match.params.location_id}`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.location_rooms.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n            <OrganizationMenu activeLink='locations'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>        \n)}\n\n\nexport default withTranslation()(withRouter(OrganizationLocationRoomsBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Alert,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport { GET_LOCATION_ROOMS_QUERY, ARCHIVE_LOCATION_ROOM } from \"./queries\"\nimport OrganizationLocationRoomsBase from './OrganizationLocationRoomsBase'\n\n\nfunction OrganizationLocationsRooms({ t, history, match }) {\n  const organizationLocationId = match.params.location_id\n  const cardTitle = t('organization.location_rooms.title')\n  let [archived, setArchived] = useState(false)\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_LOCATION_ROOMS_QUERY, {\n    variables: { archived: archived, organizationLocation: organizationLocationId }\n  })\n  const [ archiveLocationRoom ] = useMutation(ARCHIVE_LOCATION_ROOM)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  // Loading\n  if (loading) return (\n    <OrganizationLocationRoomsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationLocationRoomsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.location_rooms.error_loading')}</p>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )\n\n  let locationRooms = data.organizationLocationRooms\n  let location = data.organizationLocation\n\n  // Empty list\n  if (!locationRooms.edges.length) { return (\n    <OrganizationLocationRoomsBase>\n      <ContentCard cardTitle={cardTitle}\n                  headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('organization.location_rooms.empty_list') : t(\"organization.location_rooms.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )}\n\n  return (\n    <OrganizationLocationRoomsBase>\n      <ContentCard \n        cardTitle={cardTitle}\n                    headerContent={headerOptions}\n                    pageInfo={locationRooms.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: locationRooms.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationLocationsRooms.edges\n                        const pageInfo = fetchMoreResult.organizationLocationsRooms.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new locations at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationLocationsRooms: {\n                                __typename: previousResult.organizationLocationsRooms.__typename,\n                                edges: [ ...previousResult.organizationLocationsRooms.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <div>\n          <Alert type=\"primary\">\n            <strong>{t('general.location')}</strong> {location.name}\n          </Alert>\n\n          <Table>\n            <Table.Header>\n              <Table.Row key={v4()}>\n                <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {locationRooms.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {node.name}\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {(node.displayPublic) ? \n                        <Badge color=\"success\">{t('general.yes')}</Badge>: \n                        <Badge color=\"danger\">{t('general.no')}</Badge>}\n                    </Table.Col>\n                    <Table.Col className=\"text-right\" key={v4()}>\n                      {(node.archived) ? \n                        <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/locations/rooms/edit/\" + match.params.location_id + '/' + node.id)}\n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                      }\n                    </Table.Col>\n                      <Table.Col className=\"text-right\" key={v4()}>\n                        <button className=\"icon btn btn-link btn-sm\" \n                            title={t('general.archive')} \n                            href=\"\"\n                            onClick={() => {\n                              console.log(\"clicked archived\")\n                              let id = node.id\n                              archiveLocationRoom({ variables: {\n                                input: {\n                                id,\n                                archived: !archived\n                                }\n                        }, refetchQueries: [\n                            { \n                              query: GET_LOCATION_ROOMS_QUERY, \n                              variables: {archived: archived, organizationLocation: organizationLocationId }\n                            }\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(\n                            (archived) ? t('general.unarchived'): t('general.archived'), {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fa\" name=\"inbox\" />\n                        </button>\n                      </Table.Col>\n                  </Table.Row>\n                ))}\n            </Table.Body>\n          </Table>\n          </div>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLocationsRooms))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const LOCATION_ROOM_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst OrganizationLocationRoomForm = ({ t, history, match, isSubmitting, errors, values, returnUrl }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"displayPublic\" \n                checked={values.displayPublic} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('organization.location_room.public')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n          </Form.Group>    \n\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(OrganizationLocationRoomForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_LOCATION_ROOMS_QUERY, ADD_LOCATION_ROOM } from './queries'\nimport { LOCATION_ROOM_SCHEMA } from './yupSchema'\nimport OrganizationLocationRoomForm from './OrganizationLocationRoomForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\nimport OrganizationLocationRoomsBase from './OrganizationLocationRoomsBase';\n\n\nfunction OrganizationLocationRoomAdd({ t, history, match }) {\n  const locationId = match.params.location_id\n  const returnUrl = `/organization/locations/rooms/${locationId}`\n  const [ addLocationRoom ] = useMutation(ADD_LOCATION_ROOM)\n\n  return (\n    <OrganizationLocationRoomsBase showBack={true}>\n      <Card title={t(\"organization.location_rooms.title_add\")}>\n        <Formik\n          initialValues={{ name: '', displayPublic: true }}\n          validationSchema={LOCATION_ROOM_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addLocationRoom({ variables: {\n                input: {\n                  organizationLocation: locationId,\n                  name: values.name, \n                  displayPublic: values.displayPublic\n                }\n              }, refetchQueries: [\n                  {query: GET_LOCATION_ROOMS_QUERY,\n                    variables: {\"archived\": false, \"organizationLocation\": locationId }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.location_rooms.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <OrganizationLocationRoomForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationLocationRoomsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLocationRoomAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_LOCATION_ROOMS_QUERY, GET_LOCATION_ROOM_QUERY, UPDATE_LOCATION_ROOM } from './queries'\nimport { LOCATION_ROOM_SCHEMA } from './yupSchema'\nimport OrganizationLocationRoomForm from './OrganizationLocationRoomForm'\n\nimport {\n  Card,\n  Dimmer\n} from \"tabler-react\";\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport OrganizationLocationRoomsBase from './OrganizationLocationRoomsBase'\n\n\nfunction OrganizationLocationRoomEdit({t, history, match}) {\n  const id = match.params.id\n  const locationId = match.params.location_id\n  const returnUrl = `/organization/locations/rooms/${locationId}`\n  const cardTitle = t('organization.location_rooms.title_edit')\n  const { loading, error, data } = useQuery(GET_LOCATION_ROOM_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateLocationRoom ] = useMutation(UPDATE_LOCATION_ROOM)\n\n  // Loading\n  if (loading) return (\n    <OrganizationLocationRoomsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationLocationRoomsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )\n\n  const initialData = data.organizationLocationRoom;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationLocationRoomsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            displayPublic: initialData.displayPublic \n          }}\n          validationSchema={LOCATION_ROOM_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateLocationRoom({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name,\n                  displayPublic: values.displayPublic \n                }\n              }, refetchQueries: [\n                {query: GET_LOCATION_ROOMS_QUERY,\n                  variables: {\"archived\": false, \"organizationLocation\": match.params.location_id }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('organization.location_rooms.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <OrganizationLocationRoomForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationLocationRoomsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLocationRoomEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationLevelsBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/levels\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>  \n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationlevel\">\n                  <Link to=\"/organization/levels/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.levels.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }     \n              <OrganizationMenu activeLink='levels'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLevelsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_LEVELS_QUERY = gql`\n  query OrganizationLevels($after: String, $before: String, $archived: Boolean) {\n    organizationLevels(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_LEVEL_QUERY = gql`\n  query SchoolLevel($id: ID!) {\n    organizationLevel(id:$id) {\n      id\n      name\n      archived\n    }\n  }\n`\n\nexport const ADD_LEVEL = gql`\nmutation CreateOrganizationLevel($input:CreateOrganizationLevelInput!) {\n  createOrganizationLevel(input: $input) {\n    organizationLevel{\n      id\n      archived\n      name\n    }\n  }\n}\n`\n\nexport const UPDATE_LEVEL = gql`\nmutation UpdateOrganizationLevel($input: UpdateOrganizationLevelInput!) {\n  updateOrganizationLevel(input: $input) {\n    organizationLevel {\n      id\n      name\n    }\n  }\n}\n`\n\nexport const ARCHIVE_LEVEL = gql`\nmutation ArchiveOrganizationLevel($input: ArchiveOrganizationLevelInput!) {\n  archiveOrganizationLevel(input: $input) {\n    organizationLevel {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationLevelsBase from './OrganizationLevelsBase'\n\nimport { GET_LEVELS_QUERY, ARCHIVE_LEVEL } from \"./queries\"\n\n\nfunction OrganizationLevels({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('organization.levels.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_LEVELS_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveLevel ] = useMutation(ARCHIVE_LEVEL)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <OrganizationLevelsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )\n\n  if (error) return (\n    <OrganizationLevelsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.levels.error_loading')}</p>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )\n\n  let levels = data.organizationLevels\n\n  // Empty list\n  if (!levels.edges.length) { return (\n    <OrganizationLevelsBase>\n      <ContentCard cardTitle={t('organization.levels.title')}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('organization.levels.empty_list') : t(\"organization.levels.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )}\n\n\n  return (\n    <OrganizationLevelsBase>\n      <ContentCard \n        cardTitle={cardTitle}\n        headerContent={headerOptions}\n        pageInfo={levels.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: levels.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.organizationLevels.edges\n            const pageInfo = fetchMoreResult.organizationLevels.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new levels at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  organizationLevels: {\n                    __typename: previousResult.organizationLevels.__typename,\n                    edges: [ ...previousResult.organizationLevels.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n          }\n        })\n      }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {levels.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/organization/levels/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveLevel({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_LEVELS_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fe\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )\n}\n\n\n\nexport default withTranslation()(withRouter(OrganizationLevels))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const LEVEL_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nconst OrganizationLevelForm = ({ t, history, isSubmitting, errors, returnUrl }) => (\n    <FoForm>\n        <Card.Body>\n            <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n        </Card.Body>\n        <Card.Footer>\n            <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n            >\n            {t('general.submit')}\n            </Button>\n            <Link to={returnUrl}>\n                <Button color=\"link\">\n                    {t('general.cancel')}\n                </Button>\n            </Link>\n        </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationLevelForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_LEVELS_QUERY, ADD_LEVEL } from './queries'\nimport { LEVEL_SCHEMA } from './yupSchema'\nimport OrganizationLevelForm from './OrganizationLevelForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport OrganizationLevelsBase from './OrganizationLevelsBase';\n\n\nfunction OrganizationLevelAdd({t, history}) {\n  const returnUrl = \"/organization/levels\"\n  const [ addLevel ] = useMutation(ADD_LEVEL)\n  \n  return (\n   <OrganizationLevelsBase showBack={true}>\n    <Card>\n      <Card.Header>\n        <Card.Title>{t('organization.levels.title_add')}</Card.Title>\n      </Card.Header>\n      <Formik\n          initialValues={{ name: '', code: '' }}\n          validationSchema={LEVEL_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addLevel({ variables: {\n                input: {\n                  name: values.name, \n                }\n              }, refetchQueries: [\n                  {query: GET_LEVELS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.levels.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n            <OrganizationLevelForm \n              isSubmitting={isSubmitting}\n              errors={errors}\n              returnUrl={returnUrl}\n            />\n          )}\n      </Formik>\n    </Card>\n   </OrganizationLevelsBase> \n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLevelAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_LEVELS_QUERY, GET_LEVEL_QUERY, UPDATE_LEVEL } from './queries'\nimport { LEVEL_SCHEMA } from './yupSchema'\nimport OrganizationLevelForm from './OrganizationLevelForm'\n\n\nimport {\n  Dimmer,\n  Card,\n} from \"tabler-react\";\nimport OrganizationLevelsBase from './OrganizationLevelsBase';\nimport ContentCard from \"../../general/ContentCard\"\n\n\nfunction OrganizationLevelEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('organization.levels.title_edit')\n  const returnUrl = \"/organization/levels\"\n  const { loading, error, data } = useQuery(GET_LEVEL_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateLevel ] = useMutation(UPDATE_LEVEL)\n\n  if (loading) return (\n    <OrganizationLevelsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )\n\n  if (error) return (\n    <OrganizationLevelsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )\n                    \n  const initialData = data.organizationLevel;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationLevelsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n            }}\n            validationSchema={LEVEL_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateLevel({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                  }\n                }, refetchQueries: [\n                    {query: GET_LEVELS_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.levels.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n              <OrganizationLevelForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n            )}\n        </Formik>\n      </Card>\n    </OrganizationLevelsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLevelEdit))","// @flow\n\nimport { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\n\n\nclass Validity extends Component {\n    render() {\n      const t = this.props.t\n      const validity = this.props.validity\n\n      switch(validity) {\n        case \"DAYS\":\n            return t('validity.days')\n            break\n        case \"WEEKS\":\n            return t('validity.weeks')\n            break\n        case \"MONTHS\":\n            return t('validity.months')\n            break\n        case \"YEARS\":\n            return t('validity.years')\n            break\n        default:\n            return \"\"\n            break\n        }\n    }\n}\n  \nexport default withTranslation()(Validity)\n","import { gql } from \"@apollo/client\"\n\nexport const GET_MEMBERSHIPS_QUERY = gql`\n  query OrganizationMemberships($after: String, $before: String, $archived: Boolean) {\n    organizationMemberships(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          displayShop\n          name\n          description\n          price\n          priceDisplay\n          financeTaxRate {\n            id\n            name\n          }\n          validity\n          validityUnit\n          validityUnitDisplay\n          termsAndConditions\n          financeGlaccount {\n            id \n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_MEMBERSHIP_QUERY = gql`\n  query OrganizationMembership($id: ID!, $after: String, $before: String, $archived: Boolean!) {\n    organizationMembership(id:$id) {\n      id\n      archived\n      displayPublic\n      displayShop\n      name\n      description\n      price\n      financeTaxRate {\n        id\n        name\n      }\n      validity\n      validityUnit\n      termsAndConditions\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query FinanceInputValues($after: String, $before: String, $archived: Boolean) {\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport Validity from \"../../ui/Validity\"\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\nimport { GET_MEMBERSHIPS_QUERY } from \"./queries\"\n\nconst ARCHIVE_MEMBERSHIP = gql`\n  mutation ArchiveOrganizationMembership($input: ArchiveOrganizationMembershipInput!) {\n    archiveOrganizationMembership(input: $input) {\n      organizationMembership {\n        id\n        archived\n      }\n    }\n  }\n`\n\n\nconst OrganizationMemberships = ({ t, history, archived=false }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"organization.title\")} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n            <Query query={GET_MEMBERSHIPS_QUERY} variables={{ archived }}>\n             {({ loading, error, data: {organizationMemberships: memberships}, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('organization.memberships.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('organization.memberships.title')}>\n                    <p>{t('organization.memberships.error_loading')}</p>\n                  </ContentCard>\n                )\n                const headerOptions = <Card.Options>\n                  <Button color={(!archived) ? 'primary': 'secondary'}  \n                          size=\"sm\"\n                          onClick={() => {archived=false; refetch({archived});}}>\n                    {t('general.current')}\n                  </Button>\n                  <Button color={(archived) ? 'primary': 'secondary'} \n                          size=\"sm\" \n                          className=\"ml-2\" \n                          onClick={() => {archived=true; refetch({archived});}}>\n                    {t('general.archive')}\n                  </Button>\n                </Card.Options>\n                \n                // Empty list\n                if (!memberships.edges.length) { return (\n                  <ContentCard cardTitle={t('organization.memberships.title')}\n                               headerContent={headerOptions}>\n                    <p>\n                    {(!archived) ? t('organization.memberships.empty_list') : t(\"organization.memberships.empty_archive\")}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('organization.memberships.title')}\n                               headerContent={headerOptions}\n                               pageInfo={memberships.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: memberships.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.organizationMemberships.edges\n                                    const pageInfo = fetchMoreResult.organizationMemberships.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new memberships at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          organizationMemberships: {\n                                            __typename: previousResult.organizationMemberships.__typename,\n                                            edges: [ ...previousResult.organizationMemberships.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} >\n                    <Table>\n                          <Table.Header>\n                            <Table.Row key={v4()}>\n                              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.validity')}</Table.ColHeader>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                              {memberships.edges.map(({ node }) => (\n                                <Table.Row key={v4()}>\n                                  <Table.Col key={v4()}>\n                                    {node.name}\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    <BadgeBoolean value={node.displayPublic} />\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    <BadgeBoolean value={node.displayShop} />\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    {node.priceDisplay} <br />\n                                    {(node.financeTaxRate) ? \n                                      <span className=\"text-muted\">{node.financeTaxRate.name}</span>\n                                      : \"\"\n                                    }\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    {node.validity} <br />\n                                    <span className=\"text-muted\">\n                                      {node.validityUnitDisplay}\n                                    </span>\n                                  </Table.Col>\n                                  <Table.Col className=\"text-right\" key={v4()}>\n                                    {(node.archived) ? \n                                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                      <Button className='btn-sm' \n                                              onClick={() => history.push(\"/organization/memberships/edit/\" + node.id)}\n                                              color=\"secondary\">\n                                        {t('general.edit')}\n                                      </Button>\n                                    }\n                                  </Table.Col>\n                                  <Mutation mutation={ARCHIVE_MEMBERSHIP} key={v4()}>\n                                    {(archiveMembership, { data }) => (\n                                      <Table.Col className=\"text-right\" key={v4()}>\n                                        <button className=\"icon btn btn-link btn-sm\" \n                                           title={t('general.archive')} \n                                           href=\"\"\n                                           onClick={() => {\n                                             console.log(\"clicked archived\")\n                                             let id = node.id\n                                             archiveMembership({ variables: {\n                                               input: {\n                                                id,\n                                                archived: !archived\n                                               }\n                                        }, refetchQueries: [\n                                            {query: GET_MEMBERSHIPS_QUERY, variables: {\"archived\": archived }}\n                                        ]}).then(({ data }) => {\n                                          console.log('got data', data);\n                                          toast.success(\n                                            (archived) ? t('general.unarchived'): t('general.archived'), {\n                                              position: toast.POSITION.BOTTOM_RIGHT\n                                            })\n                                        }).catch((error) => {\n                                          toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                              position: toast.POSITION.BOTTOM_RIGHT\n                                            })\n                                          console.log('there was an error sending the query', error);\n                                        })\n                                        }}>\n                                          <Icon prefix=\"fa\" name=\"inbox\" />\n                                        </button>\n                                      </Table.Col>\n                                    )}\n                                  </Mutation>\n                                </Table.Row>\n                              ))}\n                          </Table.Body>\n                        </Table>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationmembership\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/organization/memberships/add\")}>\n                <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.memberships.add')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='memberships'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationMemberships))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const MEMBERSHIP_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    price: Yup.number()\n      .required(t('yup.field_required')),\n    financeTaxRate: Yup.string()\n      .required(t('yup.field_required')),\n    validity: Yup.number()\n      .positive(t('yup.positive_number_required'))\n      .required(t('yup.field_required')),\n    validityUnit: Yup.string()\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nimport { GET_MEMBERSHIPS_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { MEMBERSHIP_SCHEMA } from './yupSchema'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nconst CREATE_MEMBERSHIP = gql`\n  mutation CreateMembership($input: CreateOrganizationMembershipInput!) {\n    createOrganizationMembership(input: $input) {\n      organizationMembership {\n        id\n        displayPublic\n        displayShop\n        name\n        description\n        price\n        financeTaxRate {\n          id\n          name\n        }\n        validity\n        validityUnit\n        termsAndConditions\n        financeGlaccount {\n          id\n          name\n        }\n        financeCostcenter {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nclass OrganizationMembershipAdd extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization membership add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const return_url = \"/organization/memberships\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title=\"Organization\" />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.memberships.title_add')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_INPUT_VALUES_QUERY} variables={{ id }} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    console.log('query data')\n                    console.log(data)\n                    const inputData = data\n\n                    return (\n                      \n                      <Mutation mutation={CREATE_MEMBERSHIP} onCompleted={() => history.push(return_url)}> \n                      {(createMembership, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                displayPublic: true,\n                                displayShop: true,\n                                name: \"\",\n                                description: \"\",\n                                price: 0,\n                                financeTaxRate: \"\",\n                                validity: 1,\n                                validityUnit: \"MONTHS\",\n                                termsAndConditions: \"\",\n                                financeGlaccount: \"\",\n                                financeCostcenter: \"\"\n                              }}\n                              validationSchema={MEMBERSHIP_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  createMembership({ variables: {\n                                    input: {\n                                      displayPublic: values.displayPublic,\n                                      displayShop: values.displayShop,\n                                      name: values.name,\n                                      description: values.description,\n                                      price: values.price,\n                                      financeTaxRate: values.financeTaxRate,\n                                      validity: values.validity,\n                                      validityUnit: values.validityUnit,\n                                      termsAndConditions: values.termsAndConditions,\n                                      financeGlaccount: values.financeGlaccount,\n                                      financeCostcenter: values.financeCostcenter\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_MEMBERSHIPS_QUERY, variables: {\"archived\": false }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.memberships.toast_add_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n                                  <FoForm>\n                                      <Card.Body> \n                                        <Form.Group>\n                                          <Form.Label className=\"custom-switch\">\n                                              <Field \n                                                className=\"custom-switch-input\"\n                                                type=\"checkbox\" \n                                                name=\"displayPublic\" \n                                                checked={values.displayPublic} />\n                                              <span className=\"custom-switch-indicator\" ></span>\n                                              <span className=\"custom-switch-description\">{t('organization.membership.public')}</span>\n                                            </Form.Label>\n                                          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                                        </Form.Group>      \n                                        <Form.Group>\n                                          <Form.Label className=\"custom-switch\">\n                                              <Field \n                                                className=\"custom-switch-input\"\n                                                type=\"checkbox\" \n                                                name=\"displayShop\" \n                                                checked={values.displayShop} />\n                                              <span className=\"custom-switch-indicator\" ></span>\n                                              <span className=\"custom-switch-description\">{t('organization.membership.shop')}</span>\n                                            </Form.Label>\n                                          <ErrorMessage name=\"displayShop\" component=\"div\" />   \n                                        </Form.Group>      \n                                        <Form.Group label={t('general.name')} >\n                                          <Field type=\"text\" \n                                                name=\"name\" \n                                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.description')}>\n                                          <Editor\n                                            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                                            textareaName=\"description\"\n                                            initialValue={values.description}\n                                            init={tinymceBasicConf}\n                                            onBlur={(e) => {\n                                              setFieldValue(\"description\", e.target.getContent())\n                                              setFieldTouched(\"description\", true, true)\n                                            }}\n                                          />\n                                          <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.price')}>\n                                          <Field type=\"text\" \n                                                name=\"price\" \n                                                className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.taxrate')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeTaxRate\" \n                                                 className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            {console.log(\"query data in membership add:\")}\n                                            {console.log(inputData)}\n                                            <option value=\"\" key={v4()}></option>\n                                            {inputData.financeTaxRates.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.validity')}>\n                                          <Field type=\"text\" \n                                                name=\"validity\" \n                                                className={(errors.validity) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"validity\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.validity_unit')}>\n                                          <Field component=\"select\" \n                                                 name=\"validityUnit\" \n                                                 className={(errors.validityUnit) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"DAYS\" key={v4()}>{t('validity.days')}</option>\n                                            <option value=\"WEEKS\" key={v4()}>{t('validity.weeks')}</option>\n                                            <option value=\"MONTHS\" key={v4()}>{t('validity.months')}</option>\n                                          </Field>\n                                          <ErrorMessage name=\"validityUnit\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.terms_and_conditions')}>\n                                          <Editor\n                                            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                                            textareaName=\"termsAndConditions\"\n                                            initialValue={values.termsAndConditions}\n                                            init={tinymceBasicConf}\n                                            onBlur={(e) => {\n                                              setFieldValue(\"termsAndConditions\", e.target.getContent())\n                                              setFieldTouched(\"termsAndConditions\", true, true)\n                                            }}\n                                          />\n                                          <ErrorMessage name=\"termsAndConditions\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.glaccount')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeGlaccount\" \n                                                 className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"\" key={v4()}></option>\n                                            {inputData.financeGlaccounts.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.costcenter')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeCostcenter\" \n                                                 className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"\" key={v4()}></option>\n                                            {inputData.financeCostcenters.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                      </Card.Body>\n                                      <Card.Footer>\n                                          <Button \n                                            className=\"pull-right\"\n                                            color=\"primary\"\n                                            disabled={isSubmitting}\n                                            type=\"submit\"\n                                          >\n                                            {t('general.submit')}\n                                          </Button>\n                                          <Button\n                                            type=\"button\" \n                                            color=\"link\" \n                                            onClick={() => history.push(return_url)}\n                                          >\n                                              {t('general.cancel')}\n                                          </Button>\n                                      </Card.Footer>\n                                  </FoForm>\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationmembership\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='memberships'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationMembershipAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nimport { GET_MEMBERSHIPS_QUERY, GET_MEMBERSHIP_QUERY } from './queries'\nimport { MEMBERSHIP_SCHEMA } from './yupSchema'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nconst UPDATE_MEMBERSHIP = gql`\n  mutation UpdateOrganizationMembership($input: UpdateOrganizationMembershipInput!) {\n    updateOrganizationMembership(input: $input) {\n        organizationMembership {\n          id\n          displayPublic\n          displayShop\n          name\n          description\n          price\n          financeTaxRate {\n            id\n            name\n          }\n          validity\n          validityUnit\n          termsAndConditions\n          financeGlaccount {\n            id\n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n    }\n  }\n`\n\n\nclass OrganizationMembershipEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization membership edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const return_url = \"/organization/memberships\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title=\"Organization\" />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.memberships.title_edit')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_MEMBERSHIP_QUERY} variables={{ \"id\": id, \"archived\": false}} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    console.log('query data')\n                    console.log(data)\n                    const initialData = data\n\n                    let initialGlaccount = \"\"\n                    if (initialData.organizationMembership.financeGlaccount) {\n                      initialGlaccount =  initialData.organizationMembership.financeGlaccount.id\n                    } \n\n                    let initialCostcenter = \"\"\n                    if (initialData.organizationMembership.financeCostcenter) {\n                      initialCostcenter =  initialData.organizationMembership.financeCostcenter.id\n                    } \n\n                    return (\n                      <Mutation mutation={UPDATE_MEMBERSHIP} onCompleted={() => history.push(return_url)}> \n                      {(createMembership, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                displayPublic: initialData.organizationMembership.displayPublic,\n                                displayShop: initialData.organizationMembership.displayShop,\n                                name: initialData.organizationMembership.name,\n                                description: initialData.organizationMembership.description,\n                                price: initialData.organizationMembership.price,\n                                financeTaxRate: initialData.organizationMembership.financeTaxRate.id,\n                                validity: initialData.organizationMembership.validity,\n                                validityUnit: initialData.organizationMembership.validityUnit,\n                                termsAndConditions: initialData.organizationMembership.termsAndConditions,\n                                financeGlaccount:  initialGlaccount,\n                                financeCostcenter: initialCostcenter\n                              }}\n                              validationSchema={MEMBERSHIP_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  createMembership({ variables: {\n                                    input: {\n                                      id: match.params.id,\n                                      displayPublic: values.displayPublic,\n                                      displayShop: values.displayShop,\n                                      name: values.name,\n                                      description: values.description,\n                                      price: values.price,\n                                      financeTaxRate: values.financeTaxRate,\n                                      validity: values.validity,\n                                      validityUnit: values.validityUnit,\n                                      termsAndConditions: values.termsAndConditions,\n                                      financeGlaccount: values.financeGlaccount,\n                                      financeCostcenter: values.financeCostcenter\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_MEMBERSHIPS_QUERY, variables: {\"archived\": false }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.memberships.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n                                  <FoForm>\n                                      <Card.Body> \n                                        <Form.Group>\n                                          <Form.Label className=\"custom-switch\">\n                                              <Field \n                                                className=\"custom-switch-input\"\n                                                type=\"checkbox\" \n                                                name=\"displayPublic\" \n                                                checked={values.displayPublic} />\n                                              <span className=\"custom-switch-indicator\" ></span>\n                                              <span className=\"custom-switch-description\">{t('organization.membership.public')}</span>\n                                            </Form.Label>\n                                          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                                        </Form.Group>      \n                                        <Form.Group>\n                                          <Form.Label className=\"custom-switch\">\n                                              <Field \n                                                className=\"custom-switch-input\"\n                                                type=\"checkbox\" \n                                                name=\"displayShop\" \n                                                checked={values.displayShop} />\n                                              <span className=\"custom-switch-indicator\" ></span>\n                                              <span className=\"custom-switch-description\">{t('organization.membership.shop')}</span>\n                                            </Form.Label>\n                                          <ErrorMessage name=\"displayShop\" component=\"div\" />   \n                                        </Form.Group>      \n                                        <Form.Group label={t('general.name')} >\n                                          <Field type=\"text\" \n                                                name=\"name\" \n                                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.description')}>\n                                          <Editor\n                                              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                                              textareaName=\"description\"\n                                              initialValue={values.description}\n                                              init={tinymceBasicConf}\n                                              onBlur={(e) => {\n                                                setFieldValue(\"description\", e.target.getContent())\n                                                setFieldTouched(\"description\", true, true)\n                                              }}\n                                            />\n                                          <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.price')}>\n                                          <Field type=\"text\" \n                                                name=\"price\" \n                                                className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.taxrate')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeTaxRate\" \n                                                 className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            {initialData.financeTaxRates.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.validity')}>\n                                          <Field type=\"text\" \n                                                name=\"validity\" \n                                                className={(errors.validity) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"validity\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.validity_unit')}>\n                                          <Field component=\"select\" \n                                                 name=\"validityUnit\" \n                                                 className={(errors.validityUnit) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"DAYS\" key={v4()}>{t('validity.days')}</option>\n                                            <option value=\"WEEKS\" key={v4()}>{t('validity.weeks')}</option>\n                                            <option value=\"MONTHS\" key={v4()}>{t('validity.months')}</option>\n                                          </Field>\n                                          <ErrorMessage name=\"validityUnit\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.terms_and_conditions')}>\n                                          <Editor\n                                              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                                              textareaName=\"termsAndConditions\"\n                                              initialValue={values.termsAndConditions}\n                                              init={tinymceBasicConf}\n                                              onBlur={(e) => {\n                                                setFieldValue(\"termsAndConditions\", e.target.getContent())\n                                                setFieldTouched(\"termsAndConditions\", true, true)\n                                              }}\n                                            />\n                                          <ErrorMessage name=\"termsAndConditions\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.glaccount')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeGlaccount\" \n                                                 className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"\" key={v4()}></option>\n                                            {initialData.financeGlaccounts.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.costcenter')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeCostcenter\" \n                                                 className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"\" key={v4()}></option>\n                                            {initialData.financeCostcenters.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                      </Card.Body>\n                                      <Card.Footer>\n                                          <Button \n                                            className=\"pull-right\"\n                                            color=\"primary\"\n                                            disabled={isSubmitting}\n                                            type=\"submit\"\n                                          >\n                                            {t('general.submit')}\n                                          </Button>\n                                          <Button\n                                            type=\"button\" \n                                            color=\"link\" \n                                            onClick={() => history.push(return_url)}\n                                          >\n                                              {t('general.cancel')}\n                                          </Button>\n                                      </Card.Footer>\n                                  </FoForm>\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"change\"\n                                      resource=\"organizationmembership\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='memberships'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationMembershipEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationSubscriptionsBase({t, children, showBack=false}) {\n  const activeLink = \"subscriptions\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/subscriptions/groups\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"folder\" /> {t('general.groups')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ? \n                <Link to=\"/organization/subscriptions/\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationsubscription\">\n                  <Link to=\"/organization/subscriptions/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.subscriptions.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <OrganizationMenu activeLink={activeLink}/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  ) \n}\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_SUBSCRIPTIONS_QUERY = gql`\n  query OrganizationSubscriptions($after: String, $before: String, $archived: Boolean) {\n    organizationSubscriptions(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          priceTodayDisplay\n          displayPublic\n          displayShop\n          name\n          description\n          sortOrder\n          minDuration\n          classes\n          subscriptionUnit\n          subscriptionUnitDisplay\n          reconciliationClasses\n          creditValidity\n          unlimited\n          termsAndConditions\n          registrationFee\n          organizationMembership {\n            id\n            name\n          }\n          quickStatsAmount\n          financeGlaccount {\n            id \n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_SUBSCRIPTION_QUERY = gql`\n  query OrganizationSubscription($id: ID!, $after: String, $before: String) {\n    organizationSubscription(id:$id) {\n      id\n      archived\n      displayPublic\n      displayShop\n      name\n      description\n      sortOrder\n      minDuration\n      classes\n      subscriptionUnit\n      subscriptionUnitDisplay\n      reconciliationClasses\n      creditValidity\n      unlimited\n      termsAndConditions\n      registrationFee\n      organizationMembership {\n        id\n        name\n      }\n      quickStatsAmount\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    organizationMemberships(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query SubscriptionInputValues($after: String, $before: String) {\n    organizationMemberships(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\n\nexport const CREATE_SUBSCRIPTION = gql`\n  mutation CreateSubscription($input: CreateOrganizationSubscriptionInput!) {\n    createOrganizationSubscription(input: $input) {\n      organizationSubscription {\n        id\n        displayPublic\n        displayShop\n        name\n        description\n        sortOrder\n        minDuration\n        classes\n        subscriptionUnit\n        subscriptionUnitDisplay\n        reconciliationClasses\n        creditValidity\n        unlimited\n        termsAndConditions\n        organizationMembership {\n          id\n          name\n        }\n        quickStatsAmount\n        financeGlaccount {\n          id\n          name\n        }\n        financeCostcenter {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_SUBSCRIPTION = gql`\n  mutation UpdateOrganizationSubscription($input: UpdateOrganizationSubscriptionInput!) {\n    updateOrganizationSubscription(input: $input) {\n      organizationSubscription {\n        id\n        displayPublic\n        displayShop\n        name\n        description\n        sortOrder\n        minDuration\n        classes\n        subscriptionUnit\n        subscriptionUnitDisplay\n        reconciliationClasses\n        creditValidity\n        unlimited\n        termsAndConditions\n        organizationMembership {\n          id\n          name\n        }\n        quickStatsAmount\n        financeGlaccount {\n          id\n          name\n        }\n        financeCostcenter {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const ARCHIVE_SUBSCRIPTION = gql`\nmutation ArchiveOrganizationSubscription($input: ArchiveOrganizationSubscriptionInput!) {\n  archiveOrganizationSubscription(input: $input) {\n    organizationSubscription {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationSubscriptionsBase from './OrganizationSubscriptionsBase'\n\nimport { GET_SUBSCRIPTIONS_QUERY, ARCHIVE_SUBSCRIPTION } from \"./queries\"\n\n\nfunction OrganizationSubscriptions({t, history}) {\n  const cardTitle = t('organization.subscriptions.title')\n  let [archived, setArchived] = useState(false)\n  const {loading, error, data, refetch, fetchMore} = useQuery(GET_SUBSCRIPTIONS_QUERY, {\n    variables: {archived: archived}\n  })\n  const [archiveSubscription] = useMutation(ARCHIVE_SUBSCRIPTION)\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: archived});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: archived});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <OrganizationSubscriptionsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  if (error) return (\n    <OrganizationSubscriptionsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.subscriptions.error_loading')}</p>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  let subscriptions = data.organizationSubscriptions\n\n  // Empty list\n  if (!subscriptions.edges.length) { return (\n    <OrganizationSubscriptionsBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('organization.subscriptions.empty_list') : t(\"organization.subscriptions.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )}\n\n  return (\n    <OrganizationSubscriptionsBase>\n      <ContentCard cardTitle={t('organization.subscriptions.title')}\n                  headerContent={headerOptions}\n                  pageInfo={subscriptions.pageInfo}\n                  onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: subscriptions.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationSubscriptions.edges\n                        const pageInfo = fetchMoreResult.organizationSubscriptions.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new subscriptions at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationSubscriptions: {\n                                __typename: previousResult.organizationSubscriptions.__typename,\n                                edges: [ ...previousResult.organizationSubscriptions.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.classes')}</Table.ColHeader>\n              <Table.ColHeader><span className=\"pull-right\">{t('general.price')}</span></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {subscriptions.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  {node.name}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  <BadgeBoolean value={node.displayPublic} />\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  <BadgeBoolean value={node.displayShop} />\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {\n                    (node.unlimited) ? t(\"general.unlimited\"):\n                    <div>\n                      {node.classes} <br />\n                      <span className=\"text-muted\"> {t(\"general.a\")} {node.subscriptionUnitDisplay}</span>\n                    </div>\n                  }\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  {node.priceTodayDisplay} <br />\n                  <Link to={\"/organization/subscriptions/prices/\" + node.id}\n                        className='btn btn-link btn-sm'>\n                      {/* <Icon prefix=\"fe\" name=\"dollar-sign\" />  */}\n                      {t('general.edit_price')}\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  {(node.archived) ? \n                    <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                    <Button className='btn-sm' \n                            onClick={() => history.push(\"/organization/subscriptions/edit/\" + node.id)}\n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  }\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.archive')} \n                      href=\"\"\n                      onClick={() => {\n                        console.log(\"clicked archived\")\n                        let id = node.id\n                        archiveSubscription({ variables: {\n                          input: {\n                          id,\n                          archived: !archived\n                          }\n                  }, refetchQueries: [\n                      {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": archived }}\n                  ]}).then(({ data }) => {\n                    console.log('got data', data);\n                    toast.success(\n                      (archived) ? t('general.unarchived'): t('general.archived'), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                  })\n                  }}>\n                    <Icon prefix=\"fa\" name=\"inbox\" />\n                  </button>\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </ContentCard>\n  </OrganizationSubscriptionsBase>\n)}\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptions))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const SUBSCRIPTION_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    description: Yup.string(),\n    sortOrder: Yup.number()\n      .min(0),\n    minDuration: Yup.number()\n      .min(0),\n    classes: Yup.number()\n      .min(0),\n    subscriptionUnit: Yup.string(),\n    creditValidity: Yup.number()\n      .min(0),\n    quickStatsAmount: Yup.number()\n      .min(0),\n    termsAndConditions: Yup.string()\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\nimport { Link } from \"react-router-dom\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\n\nimport {\n  Button,\n  Card,\n  Form\n} from \"tabler-react\";\n\n\nconst OrganizationSubscriptionForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, returnUrl }) => (\n  <FoForm>\n    <Card.Body> \n      <Form.Group>\n        <Form.Label className=\"custom-switch\">\n            <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"displayPublic\" \n              checked={values.displayPublic} />\n            <span className=\"custom-switch-indicator\" ></span>\n            <span className=\"custom-switch-description\">{t('organization.subscription.public')}</span>\n          </Form.Label>\n        <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n      </Form.Group>      \n      <Form.Group>\n        <Form.Label className=\"custom-switch\">\n            <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"displayShop\" \n              checked={values.displayShop} />\n            <span className=\"custom-switch-indicator\" ></span>\n            <span className=\"custom-switch-description\">{t('organization.subscription.shop')}</span>\n          </Form.Label>\n        <ErrorMessage name=\"displayShop\" component=\"div\" />   \n      </Form.Group>      \n      <Form.Group label={t('general.name')} >\n        <Field type=\"text\" \n              name=\"name\" \n              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.description')}>\n        <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"description\"\n            initialValue={values.description}\n            init={tinymceBasicConf}\n            onBlur={(e) => {\n              setFieldValue(\"description\", e.target.getContent())\n              setFieldTouched(\"description\", true)\n            }}\n          />\n        <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.sort_order')}>\n        <Field type=\"text\" \n              name=\"sortOrder\" \n              className={(errors.sortOrder) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n        <ErrorMessage name=\"sortOrder\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.min_duration')}>\n        <Field type=\"text\" \n              name=\"minDuration\" \n              className={(errors.minDuration) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n        <ErrorMessage name=\"minDuration\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label className=\"custom-switch\">\n            <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"unlimited\" \n              checked={values.unlimied} />\n            <span className=\"custom-switch-indicator\" ></span>\n            <span className=\"custom-switch-description\">{t('general.unlimited')}</span>\n          </Form.Label>\n        <ErrorMessage name=\"unlimited\" component=\"div\" />   \n      </Form.Group>  \n      {/* Show if unlimited */}\n      { (values.unlimited) ? \"\"\n        : \n        // Show if not unlimited\n        <span>\n          <Form.Group label={t('general.classes')}>\n            <Field type=\"text\" \n                  name=\"classes\" \n                  className={(errors.classes) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"classes\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group> \n          <Form.Group label={t('general.subscription_unit')}>\n            <Field component=\"select\" \n                  name=\"subscriptionUnit\" \n                  className={(errors.subscriptionUnit) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"WEEK\" key={v4()}>{t('subscription_unit.week')}</option>\n              <option value=\"MONTH\" key={v4()}>{t('subscription_unit.month')}</option>\n            </Field>\n            <ErrorMessage name=\"subscriptionUnit\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.credit_validity')}>\n            <Field type=\"text\" \n                  name=\"creditValidity\" \n                  className={(errors.creditValidity) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"creditValidity\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </span>\n      } \n      <Form.Group label={t('general.quickStatsAmount')}>\n        <Field type=\"text\" \n              name=\"quickStatsAmount\" \n              className={(errors.quickStatsAmount) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n        <ErrorMessage name=\"quickStatsAmount\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.terms_and_conditions')}>\n        <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"termsAndConditions\"\n            initialValue={values.termsAndConditions}\n            init={tinymceBasicConf}\n            onBlur={(e) => {\n              setFieldValue(\"termsAndConditions\", e.target.getContent())\n              setFieldTouched(\"termsAndConditions\", true)\n            }}\n          />\n        <ErrorMessage name=\"termsAndConditions\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      {/* <Form.Group label={t('general.membership')}>\n        <Field component=\"select\" \n              name=\"organizationMembership\" \n              className={(errors.organizationMembership) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\">\n          <option value=\"\" key={v4()}>{t(\"general.membership_not_required\")}</option>\n          {inputData.organizationMemberships.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"organizationMembership\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>  */}\n      <Form.Group label={t('general.glaccount')}>\n        <Field component=\"select\" \n              name=\"financeGlaccount\" \n              className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\">\n          <option value=\"\" key={v4()}></option>\n          {inputData.financeGlaccounts.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.costcenter')}>\n        <Field component=\"select\" \n              name=\"financeCostcenter\" \n              className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\">\n          <option value=\"\" key={v4()}></option>\n          {inputData.financeCostcenters.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button\n            type=\"button\" \n            color=\"link\"\n          >\n              {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTIONS_QUERY, GET_INPUT_VALUES_QUERY, CREATE_SUBSCRIPTION } from './queries'\nimport { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionForm from './OrganizationSubscriptionForm'\n\nimport {\n  Card,\n  Dimmer\n} from \"tabler-react\";\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationSubscriptionsBase from \"./OrganizationSubscriptionsBase\"\n\n\nfunction OrganizationSubscriptionAdd({ t, history }) {\n  const cardTitle = t('organization.subscriptions.title_add')\n  const returnUrl =  \"/organization/subscriptions\"\n  const {loading, error, data} = useQuery(GET_INPUT_VALUES_QUERY)\n  const [createSubscription] = useMutation(CREATE_SUBSCRIPTION)\n\n  if (loading) return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  if (error) return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n\n  return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n            initialValues={{ \n              displayPublic: true,\n              displayShop: true,\n              name: \"\",\n              description: \"\",\n              sortOrder: 0,\n              minDuration: 1,\n              classes: 1,\n              subscriptionUnit: \"WEEK\",\n              reconciliationClasses: 0,\n              creditValidity: 1,\n              unlimited: false,\n              termsAndConditions: \"\",\n              organizationMembership: \"\",\n              quickStatsAmount: 0,\n              financeGlaccount: \"\",\n              financeCostcenter: \"\"\n            }}\n            validationSchema={SUBSCRIPTION_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                createSubscription({ variables: {\n                  input: {\n                    displayPublic: values.displayPublic,\n                    displayShop: values.displayShop,\n                    name: values.name,\n                    description: values.description,\n                    sortOrder: values.sortOrder,\n                    minDuration: values.minDuration,\n                    classes: values.classes,\n                    subscriptionUnit: values.subscriptionUnit,\n                    reconciliationClasses: values.reconciliationClasses,\n                    creditValidity: values.creditValidity,\n                    unlimited: values.unlimited,\n                    termsAndConditions: values.termsAndConditions,\n                    quickStatsAmount: values.quickStatsAmount,\n                    financeGlaccount: values.financeGlaccount,\n                    financeCostcenter: values.financeCostcenter\n                  }\n                }, refetchQueries: [\n                    {query: GET_SUBSCRIPTIONS_QUERY, variables: {archived: false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.subscriptions.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n              }}\n            >\n            {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n              <OrganizationSubscriptionForm\n                inputData={inputData}\n                isSubmitting={isSubmitting}\n                setFieldValue={setFieldValue}\n                setFieldTouched={setFieldTouched}\n                errors={errors}\n                values={values}\n                returnUrl={returnUrl}\n              />\n            )}\n        </Formik>\n      </Card>\n    </OrganizationSubscriptionsBase>\n  )\n}\n\n\n\n// class OrganizationSubscriptionAdd extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Organization subscription add props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const history = this.props.history\n//     const return_url = \"/organization/subscriptions\"\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//           <Container>\n//             <Page.Header title=\"Organization\" />\n//             <Grid.Row>\n//               <Grid.Col md={9}>\n\n//               </Grid.Col>\n//               <Grid.Col md={3}>\n//                 <HasPermissionWrapper permission=\"add\"\n//                                       resource=\"organizationsubscription\">\n//                   <Button color=\"primary btn-block mb-6\"\n//                           onClick={() => history.push(return_url)}>\n//                     <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n//                   </Button>\n//                 </HasPermissionWrapper>\n//                 <OrganizationMenu activeLink='subscriptions'/>\n//               </Grid.Col>\n//             </Grid.Row>\n//           </Container>\n//         </div>\n//     </SiteWrapper>\n//     )}\n//   }\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTIONS_QUERY, GET_SUBSCRIPTION_QUERY, UPDATE_SUBSCRIPTION } from './queries'\nimport { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionForm from './OrganizationSubscriptionForm'\n\n\nimport {\n  Card,\n  Dimmer\n} from \"tabler-react\";\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationSubscriptionsBase from './OrganizationSubscriptionsBase';\n\n\nfunction OrganizationSubscriptionEdit({t, match, history}) {\n  const id = match.params.id\n  const returnUrl = \"/organization/subscriptions\"\n  const cardTitle = t('organization.subscriptions.title_edit')\n\n  const { loading, error, data } = useQuery(GET_SUBSCRIPTION_QUERY, { \n    variables: { id: id }\n  })\n  const [ updateSubscription ] = useMutation(UPDATE_SUBSCRIPTION)\n\n  if (loading) return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  if (error) return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const initialData = data\n\n  let initialMembership = \"\"\n  if (initialData.organizationSubscription.organizationMembership) {\n    initialMembership =  initialData.organizationSubscription.organizationMembership.id\n  } \n\n  let initialGlaccount = \"\"\n  if (initialData.organizationSubscription.financeGlaccount) {\n    initialGlaccount =  initialData.organizationSubscription.financeGlaccount.id\n  } \n\n  let initialCostcenter = \"\"\n  if (initialData.organizationSubscription.financeCostcenter) {\n    initialCostcenter =  initialData.organizationSubscription.financeCostcenter.id\n  } \n\n  return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            displayPublic: initialData.organizationSubscription.displayPublic,\n            displayShop: initialData.organizationSubscription.displayShop,\n            name: initialData.organizationSubscription.name,\n            description: initialData.organizationSubscription.description,\n            sortOrder: initialData.organizationSubscription.sortOrder,\n            minDuration: initialData.organizationSubscription.minDuration,\n            classes: initialData.organizationSubscription.classes,\n            subscriptionUnit: initialData.organizationSubscription.subscriptionUnit,\n            reconciliationClasses: initialData.organizationSubscription.reconciliationClasses,\n            creditValidity: initialData.organizationSubscription.creditValidity,\n            unlimited: initialData.organizationSubscription.unlimited,\n            termsAndConditions: initialData.organizationSubscription.termsAndConditions,\n            organizationMembership: initialMembership,\n            quickStatsAmount: initialData.organizationSubscription.quickStatsAmount,\n            financeGlaccount:  initialGlaccount,\n            financeCostcenter: initialCostcenter\n          }}\n          validationSchema={SUBSCRIPTION_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateSubscription({ variables: {\n                input: {\n                  id: match.params.id,\n                  displayPublic: values.displayPublic,\n                  displayShop: values.displayShop,\n                  name: values.name,\n                  description: values.description,\n                  sortOrder: values.sortOrder,\n                  minDuration: values.minDuration,\n                  classes: values.classes,\n                  subscriptionUnit: values.subscriptionUnit,\n                  reconciliationClasses: values.reconciliationClasses,\n                  creditValidity: values.creditValidity,\n                  unlimited: values.unlimited,\n                  termsAndConditions: values.termsAndConditions,\n                  quickStatsAmount: values.quickStatsAmount,\n                  financeGlaccount: values.financeGlaccount,\n                  financeCostcenter: values.financeCostcenter\n                }\n              }, refetchQueries: [\n                  {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('organization.subscriptions.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <OrganizationSubscriptionForm\n              inputData={initialData}\n              isSubmitting={isSubmitting}\n              setFieldValue={setFieldValue}\n              setFieldTouched={setFieldTouched}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n            />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationSubscriptionsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationSubscriptionsGroupsBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/subscriptions\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.subscriptions.title')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ? \n                <Link to=\"/organization/subscriptions/groups\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationsubscriptiongroup\">\n                  <Link to=\"/organization/subscriptions/groups/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.subscription_groups.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <OrganizationMenu activeLink=''/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionsGroupsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_SUBSCRIPTION_GROUPS_QUERY = gql`\n  query OrganizationSubscriptionGroups($after: String, $before: String) {\n    organizationSubscriptionGroups(first: 100, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          description\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_SUBSCRIPTION_GROUP_QUERY = gql`\n  query OrganizationSubscriptionGroup($id: ID!) {\n    organizationSubscriptionGroup(id:$id) {\n      id\n      name\n      description\n    }\n  }\n`\n\n\nexport const GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY = gql`\n  query GetPassesAndGroupMembership($after: String, $before: String, $id:ID!) {\n    organizationSubscriptions(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    organizationSubscriptionGroup(id: $id) {\n      id\n      name\n      description\n      organizationSubscriptions {\n        edges {\n          node {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const ADD_SUBSCRIPTION_GROUP = gql`\n  mutation CreateOrganizationSubscriptionGroup($input:CreateOrganizationSubscriptionGroupInput!) {\n    createOrganizationSubscriptionGroup(input: $input) {\n      organizationSubscriptionGroup{\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_SUBSCRIPTION_GROUP = gql`\nmutation UpdateOrganizationSubscriptionGroup($input: UpdateOrganizationSubscriptionGroupInput!) {\n  updateOrganizationSubscriptionGroup(input: $input) {\n    organizationSubscriptionGroup {\n      id\n    }\n  }\n}\n`\n\nexport const DELETE_SUBSCRIPTION_GROUP = gql`\n  mutation DeleteSubscriptionGroup($input: DeleteOrganizationSubscriptionGroupInput!) {\n    deleteOrganizationSubscriptionGroup(input: $input) {\n      ok\n    }\n  }\n`\n\nexport const ADD_CARD_TO_GROUP = gql`\n  mutation AddCardToGroup($input: CreateOrganizationSubscriptionGroupSubscriptionInput!) {\n    createOrganizationSubscriptionGroupSubscription(input:$input) {\n      organizationSubscriptionGroupSubscription {\n        id\n        organizationSubscription {\n          id\n          name\n        }\n        organizationSubscriptionGroup {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const DELETE_CARD_FROM_GROUP = gql`\n  mutation DeleteCardFromGroup($input: DeleteOrganizationSubscriptionGroupSubscriptionInput!) {\n    deleteOrganizationSubscriptionGroupSubscription(input:$input) {\n      ok\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport ContentCard from \"../../general/ContentCard\"\nimport CardHeaderSeparator from \"../../general/CardHeaderSeparator\"\nimport OrganizationMenu from \"../OrganizationMenu\"\nimport OrganizationGroupsSubscriptionsBase from \"./OrganizationSubscriptionsGroupsBase\"\n\nimport { GET_SUBSCRIPTION_GROUPS_QUERY, DELETE_SUBSCRIPTION_GROUP } from \"./queries\"\n\n\nfunction OrganizationSubscriptionsGroups({ t, history }) {\n  const { loading, error, data, fetchMore } = useQuery(GET_SUBSCRIPTION_GROUPS_QUERY)\n  const [deleteSubscriptionGroup] = useMutation(DELETE_SUBSCRIPTION_GROUP)\n\n  if (loading) return (\n    <OrganizationGroupsSubscriptionsBase>\n      <ContentCard cardTitle={t('organization.subscription_groups.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationGroupsSubscriptionsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationGroupsSubscriptionsBase>\n      <ContentCard cardTitle={t('organization.subscription_groups.title')}>\n        <p>{t('organization.subscription_groups.error_loading')}</p>\n      </ContentCard>\n    </OrganizationGroupsSubscriptionsBase>\n  )\n\n  const subscription_groups = data.organizationSubscriptionGroups\n  \n  // Empty list\n  if (!subscription_groups.edges.length) return (\n    <OrganizationGroupsSubscriptionsBase>\n      <ContentCard cardTitle={t('organization.subscription_groups.title')}>\n        <p>{t('organization.subscription_groups.empty_list')}</p>\n      </ContentCard>\n    </OrganizationGroupsSubscriptionsBase>\n  )\n\n  return (\n    <OrganizationGroupsSubscriptionsBase>\n      <ContentCard cardTitle={t('organization.subscription_groups.title')}\n            pageInfo={subscription_groups.pageInfo}\n            onLoadMore={() => {\n            fetchMore({\n              variables: {\n                after: subscription_groups.pageInfo.endCursor\n              },\n              updateQuery: (previousResult, { fetchMoreResult }) => {\n                const newEdges = fetchMoreResult.organizationSubscriptionGroups.edges\n                const pageInfo = fetchMoreResult.organizationSubscriptionGroups.pageInfo\n\n                return newEdges.length\n                  ? {\n                      // Put the new subscription_groups at the end of the list and update `pageInfo`\n                      // so we have the new `endCursor` and `hasNextPage` values\n                      organizationSubscriptionGroups: {\n                        __typename: previousResult.organizationSubscriptionGroups.__typename,\n                        edges: [ ...previousResult.organizationSubscriptionGroups.edges, ...newEdges ],\n                        pageInfo\n                      }\n                    }\n                  : previousResult\n              }\n            })\n          }} >\n        <Table>\n          <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n          </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {subscription_groups.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  {node.name}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.description.substring(0, 24)}\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <span>\n                    <Button className='btn-sm' \n                            onClick={() => history.push(\"/organization/subscriptions/groups/edit/\" + node.id)}\n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                    <Button className='btn-sm' \n                            onClick={() => history.push(\"/organization/subscriptions/groups/edit/subscriptions/\" + node.id)}\n                            color=\"secondary\">\n                      {t('organization.subscriptions.groups.edit_subscriptions')}\n                    </Button>\n                  </span>\n                </Table.Col>\n                <Table.Col>\n                  <button className=\"icon btn btn-link btn-sm float-right\" \n                    title={t('general.delete')} \n                    href=\"\"\n                    onClick={() => {\n                      confirm_delete({\n                        t: t,\n                        msgConfirm: t(\"organization.subscriptions.groups.delete_confirm_msg\"),\n                        msgDescription: <p>{node.name}</p>,\n                        msgSuccess: t('organization.subscriptions.groups.deleted'),\n                        deleteFunction: deleteSubscriptionGroup,\n                        functionVariables: { variables: {\n                          input: {\n                            id: node.id\n                          }\n                        }, refetchQueries: [\n                          {query: GET_SUBSCRIPTION_GROUPS_QUERY} \n                        ]}\n                      })\n                  }}>\n                    <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                  </button>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationGroupsSubscriptionsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionsGroups))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SUBSCRIPTION_GROUP_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Alert,\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nconst OrganizationSubscriptionGroupForm = ({ t, history, isSubmitting, errors, returnUrl }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.description')}>\n            <Field type=\"text\" \n                    name=\"description\" \n                    className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n        {(isSubmitting) ?\n        <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          loading\n          disabled={isSubmitting}\n        >\n          {t(\"general.submit\")}\n        </Button>\n        :\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n        }\n        <Link to={returnUrl}>\n          <Button color=\"link\">\n              {t('general.cancel')}\n          </Button>\n        </Link>\n        {(isSubmitting) ? \n          <Alert type=\"primary\" hasExtraSpace>\n            <strong>{t('general.please_wait')}</strong> {t('organization.subscription_groups.toast_creating_might_take_a_while')}\n          </Alert> : \n          \"\"\n        }\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionGroupForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTION_GROUPS_QUERY, ADD_SUBSCRIPTION_GROUP } from './queries'\nimport { SUBSCRIPTION_GROUP_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionGroupForm from './OrganizationSubscriptionsGroupForm'\n\nimport {\n  Card,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationSubscriptionsGroupsBase from './OrganizationSubscriptionsGroupsBase';\n\nfunction OrganizationSubscriptionGroupAdd({t, history}) {\n  const returnUrl = \"/organization/subscriptions/groups\"\n  const [addSubscriptionGroup] = useMutation(ADD_SUBSCRIPTION_GROUP)\n\n  return (\n    <OrganizationSubscriptionsGroupsBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('organization.subscription_groups.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: '', description: '' }}\n          validationSchema={SUBSCRIPTION_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            addSubscriptionGroup({ variables: {\n              input: {\n                name: values.name, \n                description: values.description,\n              }\n            }, refetchQueries: [\n                {query: GET_SUBSCRIPTION_GROUPS_QUERY}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                history.push(returnUrl)\n                toast.success((t('organization.subscription_groups.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n              <OrganizationSubscriptionGroupForm\n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n            )}\n        </Formik>\n      </Card>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionGroupAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTION_GROUPS_QUERY, GET_SUBSCRIPTION_GROUP_QUERY, UPDATE_SUBSCRIPTION_GROUP } from './queries'\nimport { SUBSCRIPTION_GROUP_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionGroupForm from './OrganizationSubscriptionsGroupForm'\n\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationSubscriptionsGroupsBase from './OrganizationSubscriptionsGroupsBase';\n\n\nfunction OrganizationSubscriptionGroupEdit({t, match, history}) {\n  const id = match.params.id\n  const returnUrl = \"/organization/subscriptions/groups\"\n  const cardTitle = t('organization.subscription_groups.title_edit')\n  const {loading, error, data} = useQuery(GET_SUBSCRIPTION_GROUP_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateSubscriptionGroup ] = useMutation(UPDATE_SUBSCRIPTION_GROUP)\n  \n  if (loading) return (\n    <OrganizationSubscriptionsGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationSubscriptionsGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.subscription_groups.error_loading')}</p>\n      </ContentCard>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n\n  const initialData = data.organizationSubscriptionGroup;\n\n  return (\n    <OrganizationSubscriptionsGroupsBase>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            description: initialData.description,\n          }}\n          validationSchema={SUBSCRIPTION_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateSubscriptionGroup({ variables: {\n              input: {\n                id: match.params.id,\n                name: values.name,\n                description: values.description,\n              }\n            }, refetchQueries: [\n                {query: GET_SUBSCRIPTION_GROUPS_QUERY}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                history.push(returnUrl)\n                toast.success((t('organization.subscription_groups.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <OrganizationSubscriptionGroupForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              returnUrl={returnUrl}\n            />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n}\n\n\n// class OrganizationSubscriptionGroupEdit extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Organization subscriptiongroup edit props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const match = this.props.match\n//     const history = this.props.history\n//     const id = match.params.id\n//     const return_url = \"/organization/subscriptions/groups\"\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//           <Container>\n//             <Page.Header title=\"Organization\" />\n//             <Grid.Row>\n//               <Grid.Col md={9}>\n//               <Card>\n//                 <Card.Header>\n//                   <Card.Title>{t('organization.subscription_groups.title_edit')}</Card.Title>\n//                   {console.log(match.params.id)}\n//                 </Card.Header>\n//                 <Query query={GET_SUBSCRIPTION_GROUP_QUERY} variables={{ id }} >\n//                 {({ loading, error, data, refetch }) => {\n//                     // Loading\n//                     if (loading) return <p>{t('general.loading_with_dots')}</p>\n//                     // Error\n//                     if (error) {\n//                       console.log(error)\n//                       return <p>{t('general.error_sad_smiley')}</p>\n//                     }\n                    \n//                     const initialData = data.organizationSubscriptionGroup;\n//                     console.log('query data')\n//                     console.log(data)\n\n//                     return (\n                      \n//                       <Mutation mutation={UPDATE_SUBSCRIPTION_GROUP} onCompleted={() => history.push(return_url)}> \n//                       {(updateSubscriptionGroup, { data }) => (\n//                           <Formik\n//                               initialValues={{ \n//                                 name: initialData.name, \n//                                 description: initialData.description,\n//                               }}\n//                               validationSchema={SUBSCRIPTION_GROUP_SCHEMA}\n//                               onSubmit={(values, { setSubmitting }) => {\n//                                   console.log('submit values:')\n//                                   console.log(values)\n\n//                                   updateSubscriptionGroup({ variables: {\n//                                     input: {\n//                                       id: match.params.id,\n//                                       name: values.name,\n//                                       description: values.description,\n//                                     }\n//                                   }, refetchQueries: [\n//                                       {query: GET_SUBSCRIPTION_GROUPS_QUERY}\n//                                   ]})\n//                                   .then(({ data }) => {\n//                                       console.log('got data', data)\n//                                       toast.success((t('organization.subscription_groups.toast_edit_success')), {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                     }).catch((error) => {\n//                                       toast.error((t('general.toast_server_error')) + ': ' +  error, {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                       console.log('there was an error sending the query', error)\n//                                       setSubmitting(false)\n//                                     })\n//                               }}\n//                               >\n//                               {({ isSubmitting, errors, values }) => (\n//                                 <OrganizationSubscriptionGroupForm\n//                                   isSubmitting={isSubmitting}\n//                                   errors={errors}\n//                                   return_url={return_url}\n//                                 />\n//                               )}\n//                           </Formik>\n//                       )}\n//                       </Mutation>\n//                       )}}\n//                 </Query>\n//               </Card>\n//               </Grid.Col>\n//               <Grid.Col md={3}>\n//                 <HasPermissionWrapper permission=\"change\"\n//                                       resource=\"organizationsubscriptiongroup\">\n//                   <Button color=\"primary btn-block mb-6\"\n//                           onClick={() => history.push(return_url)}>\n//                     <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n//                   </Button>\n//                 </HasPermissionWrapper>\n//                 <OrganizationMenu activeLink=''/>\n//               </Grid.Col>\n//             </Grid.Row>\n//           </Container>\n//         </div>\n//     </SiteWrapper>\n//     )}\n//   }\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionGroupEdit))","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY, ADD_CARD_TO_GROUP, DELETE_CARD_FROM_GROUP } from './queries'\n\n\nimport {\n  Alert,\n  Icon,\n  Button,\n  Card,\n  Dimmer,\n  Table,\n} from \"tabler-react\";\n\nimport ContentCard from '../../general/ContentCard'\nimport OrganizationSubscriptionsGroupsBase from './OrganizationSubscriptionsGroupsBase';\n\nfunction OrganizationSubscriptionGroupEditSubscriptions({t, match, history}) {\n  const groupId = match.params.id\n  const returnUrl = \"/organization/subscriptions/groups\"\n  const cardTitle = t('organization.subscription_group_subscriptions.title_edit')\n  const { loading, error, data } = useQuery(GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY, {\n    variables: { id: groupId }\n  })\n  const [ addCardToGroup ] = useMutation(ADD_CARD_TO_GROUP)\n  const [ deleteCardFromGroup ] = useMutation(DELETE_CARD_FROM_GROUP)\n\n  if (loading) return (\n    <OrganizationSubscriptionsGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationSubscriptionsGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const subscriptions = data.organizationSubscriptions\n  const group = data.organizationSubscriptionGroup\n\n  let group_subscriptions = {}\n  if (group.organizationSubscriptions.edges) {\n    group.organizationSubscriptions.edges.map(({ node }) => (\n      group_subscriptions[node.id] = true\n    ))\n  }\n\n  console.log(\"group_subscriptions\")\n  console.log(group_subscriptions)\n\n\n  return (\n    <OrganizationSubscriptionsGroupsBase>\n      <Card title={cardTitle}>\n      {\n      (!subscriptions.edges) ? \"\" : \n        <Card.Body>\n          <Alert type=\"primary\">\n            <strong>{t('general.group')}</strong> {group.name}\n          </Alert>\n          <Table>\n            <Table.Header>\n              <Table.Row key={v4()}>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {subscriptions.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {(node.id in group_subscriptions) ? \n                        <Icon name=\"check-circle\" className=\"text-green\" /> : <Icon name=\"x-circle\" className=\"text-red\" />\n                      }\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.name}\n                    </Table.Col>\n                    {console.log((node.id in group_subscriptions))}\n                    {(!(node.id in group_subscriptions)) ?\n                      // Add\n                      <Table.Col className=\"text-right text-green\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('general.add_to_group')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked add\")\n                            let pass_id = node.id\n                            addCardToGroup({ variables: {\n                              input: {\n                                organizationSubscription: pass_id,\n                                organizationSubscriptionGroup: groupId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY, variables: {\"id\": groupId, \"archived\": false }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('general.added_to_group'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"plus-circle\" /> { ' ' }\n                          {t('general.add_to_group')} \n                        </Button>\n                      </Table.Col>\n                      :\n                      // Delete\n                      <Table.Col className=\"text-right text-red\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('general.delete_from_group')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked delete\")\n                            console.log(node.id)\n                            let pass_id = node.id\n                            deleteCardFromGroup({ variables: {\n                              input: {\n                                organizationSubscription: pass_id,\n                                organizationSubscriptionGroup: groupId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY, variables: {\"id\": groupId, \"archived\": false }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('general.deleted_from_group'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"minus-circle\" /> { ' ' }\n                          {t('general.delete_from_group')}\n                        </Button>\n                      </Table.Col>\n                      }\n                  </Table.Row>\n                ))}\n            </Table.Body>\n          </Table>\n        </Card.Body>\n      }\n    </Card>\n  </OrganizationSubscriptionsGroupsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionGroupEditSubscriptions))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Alert\n} from \"tabler-react\"\n\nconst AlertInfo = ({ t, title, message }) => (\n  <Alert type=\"primary\">\n      <strong>{title}</strong> {message}\n  </Alert> \n)\n\nexport default withTranslation()(AlertInfo)\n\n\n\n","import { gql } from \"@apollo/client\"\n\nexport const GET_SUBSCRIPTION_PRICES_QUERY = gql`\n  query OrganizationSubscriptionPrices($after: String, $before: String, $organizationSubscription: ID!) {\n    organizationSubscriptionPrices(first: 15, before: $before, after: $after, organizationSubscription: $organizationSubscription) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationSubscription {\n            id\n            name\n          }\n          price\n          priceDisplay\n          financeTaxRate {\n            id\n            name\n          }\n          dateStart\n          dateEnd\n        }\n      }\n    }\n    organizationSubscription(id: $organizationSubscription) {\n      id\n      name\n    }\n  }\n`\n\nexport const GET_SUBSCRIPTION_PRICE_QUERY = gql`\n  query OrganizationSubscriptionPrice($id: ID!, $after: String, $before: String, $archived: Boolean!) {\n    organizationSubscriptionPrice(id:$id) {\n      id\n      organizationSubscription {\n        id\n        name\n      }\n      price\n      priceDisplay\n      financeTaxRate {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n    }\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InputValues($after: String, $before: String, $archived: Boolean) {\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\nimport { confirmAlert } from 'react-confirm-alert'\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport OrganizationMenu from \"../../OrganizationMenu\"\nimport AlertInfo from \"../../../ui/AlertInfo\"\n\nimport { GET_SUBSCRIPTION_PRICES_QUERY } from \"./queries\"\nimport { GET_SUBSCRIPTIONS_QUERY } from \"../queries\"\n\nimport moment from 'moment'\n\n\nconst DELETE_SUBSCRIPTION_PRICE = gql`\n  mutation DeleteOrganizationSubscriptionPrice($input: DeleteOrganizationSubscriptionPriceInput!) {\n    deleteOrganizationSubscriptionPrice(input: $input) {\n      ok\n    }\n  }\n`\n\n\nconst confirmDelete = (t, match, deleteSubscriptionPrice, node) => {\n  console.log(\"clicked delete\")\n  let id = node.id\n\n  confirmAlert({\n    customUI: ({ onClose }) => {\n      return (\n        <div className='custom-ui'>\n          <h1>{t('general.confirm_delete')}</h1>\n          <p>{t('organization.subscription_prices.delete_confirm_msg')}</p>\n          <p>\n            {node.priceDisplay} {node.financeTaxRate.name} <br />\n            <span className=\"text-muted\">\n              {node.dateStart} {(node.dateEnd) ? ' - ' + node.dateEnd : \"\"}\n            </span>\n          </p>\n          <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_delete_no')}</button>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n            deleteSubscriptionPrice({ variables: {\n                input: {\n                id\n                }\n              }, refetchQueries: [\n                  {query: GET_SUBSCRIPTION_PRICES_QUERY, variables: { organizationSubscription: match.params.subscription_id }},\n                  {query: GET_SUBSCRIPTIONS_QUERY, variables: {archived: false}},\n              ]}).then(({ data }) => {\n                console.log('got data', data);\n                toast.success(\n                  t('organization.subscription_prices.deleted'), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error);\n              })\n              onClose()\n            }}\n          >\n            <Icon name=\"trash-2\" /> {t('general.confirm_delete_yes')}\n          </button>\n          \n        </div>\n      );\n    }\n  })\n}\n\n\nfunction OrganizationSubscriptionsPrices ({ t, history, match, archived=false }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/subscriptions\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.subscriptions.title')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <Query query={GET_SUBSCRIPTION_PRICES_QUERY} variables={{ organizationSubscription: match.params.subscription_id }}>\n              {({ loading, error, data: {organizationSubscriptionPrices: subscription_prices, organizationSubscription: subscription}, refetch, fetchMore }) => {\n                  // Loading\n                  if (loading) return (\n                    <ContentCard cardTitle={t('organization.subscription_prices.title')}>\n                      <Dimmer active={true}\n                              loader={true}>\n                      </Dimmer>\n                    </ContentCard>\n                  )\n                  // Error\n                  if (error) return (\n                    <ContentCard cardTitle={t('organization.subscription_prices.title')}>\n                      <p>{t('organization.subscription_prices.error_loading')}</p>\n                    </ContentCard>\n                  )\n                  const headerOptions = null\n\n                  // Empty list\n                  if (!subscription_prices.edges.length) { return (\n                    <ContentCard cardTitle={t('organization.subscription_prices.title')}\n                                headerContent={headerOptions}>\n                      <AlertInfo title={t('general.subscription')} message={subscription.name} />\n                      <p>\n                      {(!archived) ? t('organization.subscription_prices.empty_list') : t(\"organization.subscription_prices.empty_archive\")}\n                      </p>\n                    \n                    </ContentCard>\n                  )} else {   \n                  // Life's good! :)\n                  return (\n                    <ContentCard cardTitle={t('organization.subscription_prices.title')}\n                                headerContent={headerOptions}\n                                pageInfo={subscription_prices.pageInfo}\n                                onLoadMore={() => {\n                                  fetchMore({\n                                    variables: {\n                                      after: subscription_prices.pageInfo.endCursor\n                                    },\n                                    updateQuery: (previousResult, { fetchMoreResult }) => {\n                                      const newEdges = fetchMoreResult.organizationSubscriptionsPrices.edges\n                                      const pageInfo = fetchMoreResult.organizationSubscriptionsPrices.pageInfo\n\n                                      return newEdges.length\n                                        ? {\n                                            // Put the new subscriptions at the end of the list and update `pageInfo`\n                                            // so we have the new `endCursor` and `hasNextPage` values\n                                            organizationSubscriptionsPrices: {\n                                              __typename: previousResult.organizationSubscriptionsPrices.__typename,\n                                              edges: [ ...previousResult.organizationSubscriptionsPrices.edges, ...newEdges ],\n                                              pageInfo\n                                            }\n                                          }\n                                        : previousResult\n                                    }\n                                  })\n                                }} >\n                      <div>\n                        <AlertInfo title={t('general.subscription')} message={subscription.name} />\n\n                        <Table>\n                          <Table.Header>\n                            <Table.Row key={v4()}>\n                              <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n                              <Table.ColHeader></Table.ColHeader>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                              {subscription_prices.edges.map(({ node }) => (\n                                <Table.Row key={v4()}>\n                                  <Table.Col key={v4()}>\n                                    {moment(node.dateStart).format(dateFormat)}\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    {(node.dateEnd) ? moment(node.dateEnd).format(dateFormat) : \"\"}\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    {node.priceDisplay} <br />\n                                    <span className=\"text-muted\">{node.financeTaxRate.name}</span>\n                                  </Table.Col>\n                                  <Table.Col className=\"text-right\" key={v4()}>\n                                    {(node.archived) ? \n                                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                      <Button className='btn-sm' \n                                              onClick={() => history.push(\"/organization/subscriptions/prices/edit/\" + match.params.subscription_id + '/' + node.id)}\n                                              color=\"secondary\">\n                                        {t('general.edit')}\n                                      </Button>\n                                    }\n                                  </Table.Col>\n                                  <Mutation mutation={DELETE_SUBSCRIPTION_PRICE} key={v4()}>\n                                      {(deleteSubscriptionPrice, { data }) => (\n                                        <Table.Col className=\"text-right\" key={v4()}>\n                                          <button className=\"icon btn btn-link btn-sm\" \n                                            title={t('general.delete')} \n                                            href=\"\"\n                                            onClick={() => {confirmDelete(t, match, deleteSubscriptionPrice, node)}}\n                                          >\n                                            <span className=\"text-red\">\n                                              <Icon prefix=\"fe\" name=\"trash-2\" />\n                                            </span>\n                                          </button>\n                                        </Table.Col>\n                                      )}\n                                    </Mutation>\n                                </Table.Row>\n                              ))}\n                          </Table.Body>\n                        </Table>\n                        </div>\n                    </ContentCard>\n                  )}}\n              }\n              </Query>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"organizationsubscriptionprice\">\n                <Button color=\"primary btn-block mb-6\"\n                        onClick={() => history.push(\"/organization/subscriptions/prices/add/\" + match.params.subscription_id)}>\n                  <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.subscription_prices.add')}\n                </Button>\n              </HasPermissionWrapper>\n              <OrganizationMenu activeLink='subscriptions'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionsPrices))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\n\n\nlet accounts_active\nlet b2b_active\nlet suppliers_active\n\n\nconst RelationsMenu = ({ t, activeLink }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'accounts') ? accounts_active = true: accounts_active = false}\n        {(activeLink === 'b2b') ? b2b_active = true: b2b_active = false}\n        {(activeLink === 'suppliers') ? suppliers_active = true: suppliers_active = false}\n        \n\n        <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to=\"#/relations/accounts\"\n          icon=\"users\"\n          active={accounts_active}\n        >\n          {t('relations.accounts.title')}\n        </List.GroupItem>\n        {/* <HasPermissionWrapper \n          permission=\"view\"\n          resource=\"business\">\n          <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/relations/suppliers\"\n            icon=\"package\"\n            active={suppliers_active}\n          >\n            {t('relations.suppliers.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper> */}\n        <HasPermissionWrapper \n          permission=\"view\"\n          resource=\"business\">\n          <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/relations/b2b\"\n            icon=\"briefcase\"\n            active={b2b_active}\n          >\n            {t('relations.b2b.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n    </List.Group>\n);\n\nexport default withTranslation()(RelationsMenu)","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SUBSCRIPTION_PRICE_SCHEMA = Yup.object().shape({\n    price: Yup.number()\n      .typeError(t('yup.type_error_number'))\n      .required(t('yup.field_required'))\n      .max(99999999999999999999, t('yup.max_decimal_number')),\n    financeTaxRate: Yup.string()\n      .required(t('yup.field_required')),\n    dateStart: Yup.date()\n      .required(t('yup.field_required')),\n    // dateEnd: Yup.date(),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nconst OrganizationSubscriptionPriceForm = (\n  { t, history, inputData, isSubmitting, errors, values, setFieldTouched, setFieldValue, return_url }\n  ) => (\n  <FoForm>\n    <Card.Body>\n      <Form.Group label={t('general.price')}>\n        <Field type=\"text\" \n              name=\"price\" \n              className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n        <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.taxrate')}>\n        <Field component=\"select\" \n                name=\"financeTaxRate\" \n                className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n          {console.log(\"query data in subscription price add:\")}\n          {console.log(inputData)}\n          <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n          {inputData.financeTaxRates.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.date_start')}>\n        <CSDatePicker \n          selected={values.dateStart}\n          onChange={(date) => setFieldValue(\"dateStart\", date)}\n          onBlur={() => setFieldTouched(\"dateStart\", true)}\n        />\n        <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.date_end')}>\n        <CSDatePicker \n          selected={values.dateEnd}\n          onChange={(date) => setFieldValue(\"dateEnd\", date)}\n          onBlur={() => setFieldTouched(\"dateEnd\", true)}\n        />\n        <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n      <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('general.submit')}\n      </Button>\n      <Button color=\"link\" onClick={() => history.push(return_url)}>\n        {t('general.cancel')}\n      </Button>\n    </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionPriceForm))","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_SUBSCRIPTION_PRICES_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { GET_SUBSCRIPTIONS_QUERY } from '../queries'\nimport { SUBSCRIPTION_PRICE_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionPriceForm from './OrganizationSubscriptionPriceForm'\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nconst ADD_SUBSCRIPTION_PRICE = gql`\n  mutation CreateOrganizationSubscriptionPrice($input: CreateOrganizationSubscriptionPriceInput!) {\n    createOrganizationSubscriptionPrice(input: $input) {\n      organizationSubscriptionPrice {\n        id\n        organizationSubscription {\n          id\n          name\n        }\n        price\n        financeTaxRate {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n      }\n    }\n  }\n`\n\nconst return_url = \"/organization/subscriptions/prices/\"\n\nconst OrganizationSubscriptionPriceAdd = ({ t, history, match }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title=\"Organization\" />\n        <Grid.Row>\n          <Grid.Col md={9}>\n          <Card>\n            <Card.Header>\n              <Card.Title>{t('organization.subscription_prices.title_add')}</Card.Title>\n            </Card.Header>\n            <Query query={GET_INPUT_VALUES_QUERY} variables={{ archived: false }} >\n              {({ loading, error, data, refetch }) => {\n                  // Loading\n                  if (loading) return <p>{t('general.loading_with_dots')}</p>\n                  // Error\n                  if (error) {\n                    console.log(error)\n                    return <p>{t('general.error_sad_smiley')}</p>\n                  }\n                  \n                  console.log('query data')\n                  console.log(data)\n                  const inputData = data\n\n                  return (\n                    <Mutation mutation={ADD_SUBSCRIPTION_PRICE} onCompleted={() => history.push(return_url + match.params.subscription_id)}> \n                      {(addSubscription, { data }) => (\n                          <Formik\n                              initialValues={{ price: \"\", dateStart: new Date() }}\n                              validationSchema={SUBSCRIPTION_PRICE_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n\n                                  let dateEnd\n                                  if (values.dateEnd) {\n                                    dateEnd = dateToLocalISO(values.dateEnd)\n                                  } else {\n                                    dateEnd = values.dateEnd\n                                  }\n\n                                  addSubscription({ variables: {\n                                    input: {\n                                      organizationSubscription: match.params.subscription_id,\n                                      price: values.price,\n                                      financeTaxRate: values.financeTaxRate,\n                                      dateStart: dateToLocalISO(values.dateStart),\n                                      dateEnd: dateEnd\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_SUBSCRIPTION_PRICES_QUERY, variables: {\"organizationSubscription\": match.params.subscription_id }},\n                                      {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data);\n                                      toast.success((t('organization.subscription_prices.toast_add_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n                                <OrganizationSubscriptionPriceForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  setFieldTouched={setFieldTouched}\n                                  setFieldValue={setFieldValue}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                />\n                              )}\n                          </Formik>\n                      )}\n                    </Mutation>\n                  )}}\n                </Query>\n          </Card>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationsubscriptionprice\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(return_url + match.params.subscription_id)}>\n                <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='subscriptions'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionPriceAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTION_PRICES_QUERY, GET_SUBSCRIPTION_PRICE_QUERY } from './queries'\nimport { GET_SUBSCRIPTIONS_QUERY } from '../queries'\n\nimport { SUBSCRIPTION_PRICE_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionPriceForm from './OrganizationSubscriptionPriceForm'\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nconst UPDATE_SUBSCRIPTION_PRICE = gql`\n  mutation UpdateOrganizationSubscriptionPrice($input: UpdateOrganizationSubscriptionPriceInput!) {\n    updateOrganizationSubscriptionPrice(input: $input) {\n      organizationSubscriptionPrice {\n        id\n        organizationSubscription {\n          id\n          name\n        }\n        price\n        financeTaxRate {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n      }\n    }\n  }\n`\n\n\nclass OrganizationSubscriptionPriceEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization location room edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const subscription_id = match.params.subscription_id\n    const return_url = \"/organization/subscriptions/prices/\" + subscription_id\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title=\"Organization\" />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.subscription_prices.title_edit')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_SUBSCRIPTION_PRICE_QUERY} variables={{ id, archived: false }} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    const initialData = data.organizationSubscriptionPrice\n                    console.log('query data')\n                    console.log(data)\n                    const inputData = data\n\n                    return (\n                      \n                      <Mutation mutation={UPDATE_SUBSCRIPTION_PRICE} onCompleted={() => history.push(return_url)}> \n                      {(updateSubscriptionPrice, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                price: initialData.price, \n                                financeTaxRate: initialData.financeTaxRate.id,\n                                dateStart: initialData.dateStart,\n                                dateEnd: initialData.dateEnd,\n                              }}\n                              validationSchema={SUBSCRIPTION_PRICE_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  let dateEnd\n                                  if (values.dateEnd) {\n                                    if (values.dateEnd instanceof Date) {\n                                      dateEnd = dateToLocalISO(values.dateEnd)\n                                    } else {\n                                      dateEnd = values.dateEnd\n                                    }\n                                  } else {\n                                    dateEnd = values.dateEnd\n                                  }\n\n                                  let dateStart\n                                  if (values.dateStart instanceof Date) {\n                                    dateStart = dateToLocalISO(values.dateStart)\n                                  } else {\n                                    // Input hasn't changed and DatePicket hasn't made a Date object out of it\n                                    dateStart = values.dateStart\n                                  }\n\n                                  updateSubscriptionPrice({ variables: {\n                                    input: {\n                                      id: match.params.id,\n                                      price: values.price,\n                                      financeTaxRate: values.financeTaxRate,\n                                      dateStart: dateStart,\n                                      dateEnd: dateEnd,\n                                    }\n                                  }, refetchQueries: [\n                                    {query: GET_SUBSCRIPTION_PRICES_QUERY, variables: { organizationSubscription: match.params.subscription_id }},\n                                    {query: GET_SUBSCRIPTIONS_QUERY, variables: { \"archived\": false }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.subscription_prices.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n                                <OrganizationSubscriptionPriceForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  setFieldTouched={setFieldTouched}\n                                  setFieldValue={setFieldValue}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                >\n                                  {console.log(errors)}\n                                </OrganizationSubscriptionPriceForm>\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"change\"\n                                      resource=\"organizationlocationroom\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='locations'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionPriceEdit))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Container,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport RelationsMenu from \"../RelationsMenu\"\n\n\nclass RelationsHome extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"School home props:\")\n    console.log(props)\n  }\n\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"relations.title\")} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n                <Grid.Row>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/relations/accounts'>\n                      <StampCard header={<small>{t('relations.accounts.title')}</small>} footer={t('')} color=\"blue\" icon=\"users\" />\n                    </Link>\n                  </Grid.Col>\n                  {/* <HasPermissionWrapper permission=\"view\"\n                                        resource=\"business\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/relations/suppliers')}>\n                        <StampCard header={<small>{t('relations.suppliers.title')}</small>} footer={t('')} color=\"blue\" icon=\"package\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper> */}\n                  <HasPermissionWrapper permission=\"view\"\n                                        resource=\"business\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/relations/b2b'>\n                        <StampCard header={<small>{t('relations.b2b.title')}</small>} footer={t('')} color=\"blue\" icon=\"briefcase\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                </Grid.Row>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <RelationsMenu />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(RelationsHome))","// @flow\n\nimport React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n    Button,\n    Icon\n  } from \"tabler-react\"\n\nimport CSLS from \"../../tools/cs_local_storage\"\n\nclass InputSearch extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Input search props:\")\n    console.log(props)\n    this.input = React.createRef()\n    let inputValue\n    const initialValue = localStorage.getItem(this.props.initialValueKey)\n    if (initialValue) {\n      inputValue = initialValue \n    } else {\n      inputValue = \"\"\n    }\n\n    this.state = {\n      inputValue: inputValue,\n      submitValue: \"\",\n      doneTypingInterval: 500\n    }\n  }\n  \n  componentDidMount() {\n    this.typingTimer = null\n    this.input.current.focus()\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.typingTimer)\n  }\n\n\n  onInputKeyUp() {\n    // Clear timeout\n    if (this.typingTimer) {\n      clearTimeout(this.typingTimer)\n    }\n    \n    this.typingTimer = setTimeout(() => {\n      // console.log(this.input.current.value)  \n      this.setState({submitValue: this.input.current.value})\n      this.props.onChange(this.state.submitValue)\n    }, this.state.doneTypingInterval)\n  }\n\n\n  onInputChange(event) {\n    this.setState({inputValue: event.target.value})\n  }\n\n\n  render() {\n    const t = this.props.t\n    const placeholder = this.props.placeholder\n\n    return(\n        <div className=\"row row gutters-xs\">\n          <div className=\"col\">\n            <div className=\"input-icon\">\n              <span className=\"input-icon-addon\">\n                <Icon name=\"search\" />\n              </span>\n              <input \n                ref={this.input}\n                className=\"form-control\" \n                type=\"text\" \n                placeholder={placeholder} \n                value={this.state.inputValue}\n                onKeyUp={this.onInputKeyUp.bind(this)}\n                onChange={this.onInputChange.bind(this)}\n              />\n            </div>\n          </div>\n          <div className=\"col col-auto\">\n            <Button\n              color=\"secondary\"\n              icon=\"x\"\n              disabled={!(this.state.inputValue)}\n              onClick={() => {\n                this.setState({inputValue: \"\", submitValue: \"\"}, () => {\n                  // setState callback, this makes sure the onChange function is calles with new values\n                  console.log(this.state)\n                  this.props.onChange(this.state.submitValue) \n                })\n              }}\n            >\n            </Button>\n          </div>\n        </div>\n    )\n  }\n}\n\nInputSearch.defaultProps = {\n  onChange: f=>f,\n  onClear: f=>f,\n}\n  \nexport default withTranslation()(InputSearch)","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let isActive = localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE)\n  if (isActive === null) {\n    isActive = true\n  }\n\n  let queryVars = {\n    isActive: (isActive === \"true\") ? true : false,\n    customer: undefined,\n    teacher: undefined,\n    employee: undefined\n  }\n\n  let search = localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_SEARCH)\n  queryVars.searchName = search\n\n  let type_filter = localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_FILTER_TYPE)\n  switch (type_filter) {\n    case \"customer\":\n      queryVars.customer = true\n      break\n    case \"teacher\":\n      queryVars.teacher = true\n      break\n    case \"employee\":\n      queryVars.employee = true\n      break\n  }\n\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Form,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport InputSearch from \"../../general/InputSearch\"\nimport RelationsMenu from \"../RelationsMenu\"\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from \"./tools\"\n\n\nfunction RelationsAccountsBase({t, history, children, refetch}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"relations.title\")}>\n            <div className=\"page-options d-flex\">\n              <Form.Select\n                className=\"w-auto mr-2\"\n                onChange={(event) => {\n                  console.log(event.target.value)\n                  localStorage.setItem(CSLS.RELATIONS_ACCOUNTS_FILTER_TYPE, event.target.value)\n                  console.log('fire refetch')\n                  console.log(refetch(get_list_query_variables()))\n                }}\n              >\n                <option value=\"\">{t(\"general.all_accounts\")}</option>\n                <option value=\"customer\">{t(\"general.customers\")}</option>\n                <option value=\"teacher\">{t(\"general.teachers\")}</option>\n                <option value=\"employee\">{t(\"general.employees\")}</option>\n              </Form.Select>\n              <InputSearch \n                initialValueKey={CSLS.RELATIONS_ACCOUNTS_SEARCH}\n                placeholder=\"Search...\"\n                onChange={(value) => {\n                  console.log(value)\n                  localStorage.setItem(CSLS.RELATIONS_ACCOUNTS_SEARCH, value)\n                  refetch(get_list_query_variables())\n                }}\n              />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"account\">\n                <Button color=\"primary btn-block mb-6\"\n                        onClick={() => history.push(\"/relations/accounts/add\")}>\n                  <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.accounts.add')}\n                </Button>\n              </HasPermissionWrapper>\n              <RelationsMenu activeLink='accounts'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>        \n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsAccountsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNTS_QUERY = gql`\nquery Accounts(\n  $after: String, \n  $before: String, \n  $isActive: Boolean!, \n  $searchName: String,\n  $customer: Boolean,\n  $teacher: Boolean,\n  $employee: Boolean\n  \n) {\n  accounts(\n    first: 15, \n    before: $before, \n    after: $after, \n    isActive: $isActive, \n    fullName_Icontains: $searchName,\n    customer: $customer,\n    teacher: $teacher,\n    employee: $employee\n  ) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        customer\n        teacher\n        employee\n        firstName\n        lastName\n        fullName\n        email\n        isActive\n        subscriptions(last: 2) {\n          edges {\n            node {\n              organizationSubscription {\n                id\n                name\n              }\n              dateStart\n              dateEnd\n            }\n          }\n        }\n        classpasses(last: 2) {\n          edges {\n            node {\n              id\n              organizationClasspass {\n                id\n                name\n              }\n              dateStart\n              dateEnd\n              classesRemaining\n              classesRemainingDisplay\n              isExpired\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport const GET_ACCOUNT_QUERY = gql`\n  query Account($id: ID!) {\n    account(id:$id) {\n      id\n      customer\n      teacher\n      employee\n      firstName\n      lastName\n      email\n      dateOfBirth\n      gender\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n      isActive\n      keyNumber\n      organizationDiscovery {\n        id\n      }\n      organizationLanguage {\n        id\n      }\n    }\n    organizationDiscoveries(first: 100){\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    organizationLanguages(first: 100) {\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const ADD_ACCOUNT = gql`\n  mutation CreateAccount($input:CreateAccountInput!) {\n    createAccount(input: $input) {\n      account {\n        id\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT = gql`\n  mutation UpdateAccount($input:UpdateAccountInput!) {\n    updateAccount(input: $input) {\n      account {\n        id\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT_ACTIVE = gql`\n  mutation UpdateAccountActive($input: UpdateAccountActiveInput!) {\n    updateAccountActive(input: $input) {\n      account {\n        id\n        isActive\n      }\n    }\n  }\n`\n\nexport const DELETE_ACCOUNT = gql`\n  mutation DeleteAccount($input: DeleteAccountInput!) {\n    deleteAccount(input: $input) {\n      ok\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\n\nimport {\n  Badge,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport ContentCard from \"../../general/ContentCard\"\nimport RelationsAccountsBase from \"./RelationsAccountsBase\"\nimport { GET_ACCOUNTS_QUERY, UPDATE_ACCOUNT_ACTIVE, DELETE_ACCOUNT } from \"./queries\"\nimport { get_list_query_variables } from \"./tools\"\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\n// Set some initial value for isActive, if not found\nif (!localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE)) {\n  localStorage.setItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE, true) \n} \n\nconst confirm_delete = ({t, msgConfirm, msgDescription, msgSuccess, deleteFunction, functionVariables}) => {\n  confirmAlert({\n    customUI: ({ onClose }) => {\n      return (\n        <div className='custom-ui'>\n          <h1>{t('general.confirm_delete')}</h1>\n          {msgConfirm}\n          {msgDescription}\n          <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_delete_no')}</button>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              deleteFunction(functionVariables)\n                .then(({ data }) => {\n                  console.log('got data', data);\n                  toast.success(\n                    msgSuccess, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error);\n                })\n              onClose()\n            }}\n          >\n            <Icon name=\"trash-2\" /> {t('general.confirm_delete_yes')}\n          </button>\n        </div>\n      )\n    }\n  })\n}\n\n\nfunction RelationsAccounts({t, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const {loading, error, data, fetchMore, refetch} = useQuery(GET_ACCOUNTS_QUERY, {\n    variables: get_list_query_variables(),\n    fetchPolicy: \"network-only\"\n  })\n  const [updateAccountActive] = useMutation(UPDATE_ACCOUNT_ACTIVE)\n  const [deleteAccount] = useMutation(DELETE_ACCOUNT)\n\n  if (loading || (data && !data.accounts)) return (\n    <RelationsAccountsBase>\n      <ContentCard cardTitle={t('relations.accounts.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </RelationsAccountsBase>\n  )\n  \n  if (error) return (\n    <RelationsAccountsBase>\n      <Container>\n        <ContentCard cardTitle={t('relations.accounts.title')}>\n          <p>{t('relations.accounts.error_loading')}</p>\n        </ContentCard>\n      </Container>\n    </RelationsAccountsBase>\n  )\n\n  const headerOptions = <Card.Options>\n    <Button color={(localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE) === \"true\") ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {\n              localStorage.setItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE, true)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.active')}\n    </Button>\n    <Button color={(localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE) === \"false\") ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {\n              localStorage.setItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE, false)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.deleted')}\n    </Button>\n  </Card.Options>\n\n  let accounts = data.accounts\n\n  // Empty list\n  if (!accounts.edges.length) { return (\n    <RelationsAccountsBase refetch={refetch}>\n      <ContentCard cardTitle={t('relations.accounts.title')}\n                    headerContent={headerOptions}>\n        <p>\n          {(localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE) === \"true\") ? t('relations.accounts.empty_list') : t(\"relations.accounts.empty_archive\")}\n        </p>\n      </ContentCard>\n    </RelationsAccountsBase>\n  )}\n\n  // Data\n  return (\n    <RelationsAccountsBase refetch={refetch}>\n      <ContentCard \n        cardTitle={t('relations.accounts.title')}\n        headerContent={headerOptions}\n        pageInfo={data.accounts.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: data.accounts.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accounts.edges\n              const pageInfo = fetchMoreResult.accounts.pageInfo \n\n              return newEdges.length\n                ? {\n                    // Put the new accounts at the end of the list and update `pageInfo`\n                  accounts: {\n                    __typename: previousResult.accounts.__typename,\n                    edges: [ ...previousResult.accounts.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.products')}</Table.ColHeader>\n              {/* <Table.ColHeader>{t('general.info')}</Table.ColHeader> */}\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {accounts.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    <span className=\"bold\">{node.fullName}</span>\n                    <div className=\"text-muted\">\n                      <a href={`mailto:${node.email}`}>{node.email}</a>\n                    </div>\n                    {(node.customer) ? <span>\n                        <Badge color=\"primary\" className=\"mr-1\">{t(\"general.customer\")}</Badge>\n                      </span> : null}\n                    {(node.teacher) ? <span>\n                        <Badge color=\"info\" className=\"mr-1\">{t(\"general.teacher\")}</Badge>\n                      </span> : null}\n                    {(node.employee) ? <span>\n                        <Badge color=\"secondary\">{t(\"general.employee\")}</Badge>\n                      </span> : null}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.subscriptions) ? \n                      // This is a workaround that reserves the array. Not yet figured out how to get the sorting right on subqueries in the backend\n                      node.subscriptions.edges.slice(0).reverse().map(({ node: subscription }) => (\n                        <div>\n                          <small>\n                          <Icon name=\"edit\" /> {' '}\n                          { subscription.organizationSubscription.name } <br />\n                          <div className=\"text-muted \">\n                            <small>\n                              { moment(subscription.dateStart).format(dateFormat) } \n                              {(subscription.dateEnd) ? \n                                <span> - {moment(subscription.dateEnd).format(dateFormat)}</span>  \n                                : \"\"\n                              }\n                            </small>\n                          </div>\n                          </small>\n                        </div>\n                      )) \n                      : \"\"\n                    }\n                    {(node.classpasses) ? \n                      // This is a workaround that reserves the array. Not yet figured out how to get the sorting right on subqueries in the backend\n                      node.classpasses.edges.slice(0).reverse().map(({ node: classpass }) => (\n                        <div>\n                          <small>\n                          <Icon name=\"credit-card\" /> {' '}\n                          { classpass.organizationClasspass.name } <br />\n                          <div className=\"text-muted \">\n                            <small>\n                              { moment(classpass.dateStart).format(dateFormat) } {\" - \"}\n                              { moment(classpass.dateEnd).format(dateFormat)} { \" | \" }  \n                              { t(\"general.classes_remaining\") }: { classpass.classesRemainingDisplay }\n                            </small>\n                          </div>\n                          </small>\n                        </div>\n                      )) \n                      : \"\"\n                    }\n                  </Table.Col>\n                  {/* <Table.Col key={v4()}>\n                    {(node.customer) ? <span>\n                        <Badge color=\"primary\" className=\"mb-1\">{t(\"general.customer\")}</Badge> <br />\n                      </span> : null}\n                    {(node.teacher) ? <span>\n                        <Badge color=\"info\" className=\"mb-1\">{t(\"general.teacher\")}</Badge> <br />\n                      </span> : null}\n                    {(node.employee) ? <span>\n                        <Badge color=\"secondary\" className=\"mb-1\">{t(\"general.employee\")}</Badge> <br />\n                      </span> : null}\n                  </Table.Col> */}\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(!node.isActive) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Link to={`/relations/accounts/${node.id}/profile`}>\n                        <Button className='btn-sm' \n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                      </Link>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.deactivate')} \n                      href=\"\"\n                      onClick={() => {\n                        console.log(\"clicked isActive\")\n                        let id = node.id\n                        let isActive \n                        if (localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE) == \"true\") {\n                          isActive = true\n                        } else {\n                          isActive = false\n                        }\n\n                        updateAccountActive({ variables: {\n                          input: {\n                            id,\n                            isActive: !isActive // invert, as we need the opposite from the list currently displayed\n                          }\n                    }, refetchQueries: [\n                        {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (isActive) ? t('relations.accounts.deactivated'): t('relations.accounts.restored'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      {\n                        (node.isActive) ?\n                          <Icon prefix=\"fe\" name=\"trash-2\" /> :\n                          t(\"general.restore\")\n                      }\n                    </button>\n                  </Table.Col>\n                  {\n                    (node.isActive) ? '' :\n                      <Table.Col className=\"text-right\" key={v4()}>\n                        <button className=\"icon btn btn-link btn-sm\" \n                          title={t('general.delete')} \n                          href=\"\"\n                          onClick={() => {\n                            confirm_delete({\n                              t: t,\n                              msgConfirm: t(\"relations.accounts.delete_confirm_msg\"),\n                              msgDescription: <p>{node.first_name} {node.last_name}</p>,\n                              msgSuccess: t('relations.accounts.deleted'),\n                              deleteFunction: deleteAccount,\n                              functionVariables: { variables: {\n                                input: {\n                                  id: node.id\n                                }\n                              }, refetchQueries: [\n                                {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()}\n                              ]}\n                            })\n                        }}>\n                          <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                        </button>\n                      </Table.Col>\n                  }\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </RelationsAccountsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsAccounts))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SCHEMA = Yup.object().shape({\n    firstName: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n    lastName: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n    email: Yup.string()\n      .email(t('yup.email'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nconst RelationsAccountForm = ({ t, history, isSubmitting, errors, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group label={t('general.first_name')}>\n                <Field type=\"text\" \n                        name=\"firstName\" \n                        className={(errors.firstName) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\" />\n                <ErrorMessage name=\"firstName\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n            <Grid.Col>\n              <Form.Group label={t('general.last_name')}>\n                <Field type=\"text\" \n                        name=\"lastName\" \n                        className={(errors.lastName) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\" />\n                <ErrorMessage name=\"lastName\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          </Grid.Row>\n          <Form.Group label={t('general.email')}>\n            <Field type=\"text\" \n                    name=\"email\" \n                    className={(errors.email) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"email\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsAccountForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNTS_QUERY, ADD_ACCOUNT } from './queries'\nimport { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { get_list_query_variables } from \"./tools\"\nimport RelationsAccountForm from \"./RelationsAccountForm\"\nimport RelationsMenu from '../RelationsMenu'\n\nconst returnUrl = \"/relations/accounts\"\n\nfunction RelationsAccountAdd({t, history}) {\n  const [addAccount] = useMutation(ADD_ACCOUNT)\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('relations.title')} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n            <Card>\n              <Card.Header>\n                <Card.Title>{t('relations.accounts.title_add')}</Card.Title>\n              </Card.Header>\n                <Formik\n                    initialValues={{ name: '', code: '' }}\n                    validationSchema={ACCOUNT_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n                        addAccount({ variables: {\n                          input: {\n                            firstName: values.firstName,\n                            lastName: values.lastName,\n                            email: values.email\n                          }\n                        }, refetchQueries: [\n                            {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()}\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            const accountId = data.createAccount.account.id\n                            history.push(`/relations/accounts/${accountId}/profile`)\n                            toast.success((t('relations.accounts.toast_add_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setSubmitting(false)\n                          })\n                    }}\n                    >\n                    {({ isSubmitting, errors }) => (\n                        <RelationsAccountForm\n                          isSubmitting={isSubmitting}\n                          errors={errors}\n                          returnUrl={returnUrl}\n                        />\n                    )}\n                </Formik>\n            </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"account\">\n                <Button color=\"primary btn-block mb-6\"\n                        onClick={() => history.push(returnUrl)}>\n                  <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                </Button>\n              </HasPermissionWrapper>\n              <RelationsMenu activeLink='accounts'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsAccountAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\nimport { GET_ACCOUNT_QUERY } from './queries'\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n\nlet profile_active\nlet memberships_active\nlet subscriptions_active\nlet classpasses_active\nlet classes_active\nlet tickets_active\nlet teacher_profile_active\nlet orders_active\nlet invoices_active\nlet bank_account_active\nlet notes_active\nlet finance_payment_batch_category_item_active\nlet accepted_documents_active\n\nfunction ProfileMenu({t, accountId, activeLink}) {\n    const {loading, error, data} = useQuery(GET_ACCOUNT_QUERY, {\n        variables: {id: accountId}\n    })\n\n    if (loading) return <p>{t('general.loading_with_dots')}</p>\n    // Error\n    if (error) {\n      console.log(error)\n      return <p>{t('general.error_sad_smiley')}</p>\n    }\n    const account = data.account\n    console.log('account in profile menu')\n    console.log(account)\n\n    return (\n      <List.Group transparent={true}>\n        {(activeLink === 'profile') ? profile_active = true: profile_active = false}\n        {(activeLink === 'memberships') ? memberships_active = true: memberships_active = false}\n        {(activeLink === 'subscriptions') ? subscriptions_active = true: subscriptions_active = false}\n        {(activeLink === 'classpasses') ? classpasses_active = true: classpasses_active = false}\n        {(activeLink === 'classes') ? classes_active = true: classes_active = false}\n        {(activeLink === 'tickets') ? tickets_active = true: tickets_active = false}\n        {(activeLink === 'teacher_profile') ? teacher_profile_active = true: teacher_profile_active = false}\n        {(activeLink === 'orders') ? orders_active = true: orders_active = false}\n        {(activeLink === 'invoices') ? invoices_active = true: invoices_active = false}\n        {(activeLink === 'bank_account') ? bank_account_active = true: bank_account_active = false}\n        {(activeLink === 'notes') ? notes_active = true: notes_active = false}\n        {(activeLink === 'finance_payment_batch_category_item') ? \n            finance_payment_batch_category_item_active = true : \n            finance_payment_batch_category_item_active = false }\n        {(activeLink === 'accepted_documents') ? accepted_documents_active = true: accepted_documents_active = false}\n        \n\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/relations/accounts/\" + accountId + \"/profile\"}\n            icon=\"user\"\n            active={profile_active}\n        >\n            {t('relations.accounts.profile')}\n        </List.GroupItem>\n        {/* <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountmembership\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/memberships\"}\n                icon=\"clipboard\"\n                active={memberships_active}\n                >\n            {t('relations.account.memberships.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper> */}\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountsubscription\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/subscriptions\"}\n                icon=\"edit\"\n                active={subscriptions_active}\n                >\n            {t('relations.account.subscriptions.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountclasspass\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/classpasses\"}\n                icon=\"credit-card\"\n                active={classpasses_active}\n                >\n            {t('relations.account.classpasses.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"scheduleitemattendance\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/classes\"}\n                icon=\"book\"\n                active={classes_active}\n                >\n            {t('relations.account.classes.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountscheduleeventticket\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/event_tickets\"}\n                icon=\"clipboard\"\n                active={tickets_active}\n                >\n            {t('relations.account.event_tickets.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"financeorder\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/orders\"}\n                icon=\"file-plus\"\n                active={orders_active}\n                >\n            {t('relations.account.orders.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"financeinvoice\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/invoices\"}\n                icon=\"file-text\"\n                active={invoices_active}\n                >\n            {t('relations.account.invoices.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountbankaccount\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/bank_accounts\"}\n                icon=\"briefcase\"\n                active={bank_account_active}\n                >\n            {t('relations.account.bank_accounts.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountnote\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/notes\"}\n                icon=\"message-square\"\n                active={notes_active}\n                >\n            {t('relations.account.notes.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountfinancepaymentbatchcategoryitem\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/finance_payment_batch_category_items\"}\n                icon=\"list\"\n                active={finance_payment_batch_category_item_active}\n                >\n            {t('relations.account.finance_payment_batch_category_items.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        { (account.teacher) ?\n            <HasPermissionWrapper \n                permission=\"view\"\n                resource=\"accountteacherprofile\">\n                <List.GroupItem\n                    key={v4()}\n                    className=\"d-flex align-items-center\"\n                    to={\"#/relations/accounts/\" + accountId + \"/teacher_profile\"}\n                    icon=\"paperclip\"\n                    active={teacher_profile_active}\n                    >\n                {t('relations.account.teacher_profile.title')}\n                </List.GroupItem>\n            </HasPermissionWrapper>\n        : \"\" }\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountaccepteddocument\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/accepted_documents\"}\n                icon=\"check-square\"\n                active={accepted_documents_active}\n                >\n            {t('relations.account.accepted_documents.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n    </List.Group>\n  )\n}\n\nexport default withTranslation()(ProfileMenu)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Avatar,\n  Card,\n  Icon,\n  List,\n  Media,\n  SocialNetworksList,\n  Tooltip,\n} from \"tabler-react\"\n\nconst ProfileCardSmall = ({ t, value, user, avatarSize='md' }) => (\n  <Card>\n    <Card.Body>\n      {(!user) ? \"\" : \n        <Media>\n          {(user.imageURL) ? \n            <Avatar size={avatarSize + \" mr-5\"} imageURL=\"avatarImageURL\" /> :\n            <Avatar size={avatarSize + \" mr-5\"} icon=\"user\" />\n          }\n          <Media.Body>\n            <h4 className=\"mb-2\">{user.firstName + \" \" + user.lastName}</h4>\n            <div className=\"text-muted mb-0\">\n              <SocialNetworksList className=\"mb-0 mt-2\">\n\n                {\n                  (user.phone) ? \n                    <List.Item inline>\n                      <Tooltip content={user.phone} placement=\"top\">\n                        <span>\n                          <Icon prefix=\"fe\" name=\"phone\" />\n                        </span>\n                      </Tooltip>\n                    </List.Item>\n                  // No phone number found\n                  : \"\"\n                }\n                {\n                  (user.mobile) ?\n                    <List.Item inline>\n                      <Tooltip content={user.mobile} placement=\"top\">\n                        <span>\n                          <Icon prefix=\"fe\" name=\"smartphone\" />\n                        </span>\n                      </Tooltip>\n                    </List.Item> \n                    // No mobile number found\n                    : \"\"\n                }\n\n                <List.Item inline>\n                  <Tooltip content={user.email} placement=\"top\">\n                    <a href={\"mailto:\" + user.email}>\n                      <Icon prefix=\"fe\" name=\"mail\" />\n                    </a>\n                  </Tooltip>\n                </List.Item>\n\n              </SocialNetworksList>\n              {/* items={[\n                <a href={\"mailto:\" + user.email}\n                  title={user.email}>\n                  <Icon prefix=\"fe\" name=\"mail\" />\n                </a>,\n                <span title=\"Phone number here\">\n                  <Icon prefix=\"fe\" name=\"phone\" />\n                </span>,\n                <span title=\"Phone number here\">\n                  <Icon prefix=\"fe\" name=\"mobile\" />\n                </span>,\n                \n              ]}\n            /> */}\n              {/* <Text.Small>\n                <Icon name=\"mail\" />  <a href={\"mailto:\" + user.email}>{user.email}</a> <br/>\n                <Icon name=\"phone\" /> user phone nr here... <br />\n                <Icon name=\"smartphone\" /> user mobile nr here...\n              </Text.Small> */}\n            </div>\n            {/* <SocialNetworksList\n              items={[\n                <a href=\"http://www.twitter.com\">\n                  <Icon prefix=\"fa\" name=\"twitter\" />\n                </a>,\n                <a href=\"http://www.facebook.com\">\n                  <Icon prefix=\"fa\" name=\"facebook\" />\n                </a>,\n              ]}\n            /> */}\n          </Media.Body>\n        </Media>\n      }\n    </Card.Body>\n  </Card>\n)\n\nexport default withTranslation()(ProfileCardSmall)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nconst RelationsAccountsBack = ({ t }) => (\n  <div className=\"page-options d-flex\">\n    <Link to=\"/relations/accounts\" \n          className='btn btn-outline-secondary btn-sm'>\n        <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('relations.accounts.title')}\n    </Link>\n  </div>\n)\n\nexport default withTranslation()(RelationsAccountsBack)","import { t } from 'i18next'\n\nconst ISO_COUNTRY_CODES = [{\"Name\":t(\"countries.Afghanistan\"),\"Code\":\"AF\"},{\"Name\":t(\"countries.Åland_Islands\"),\"Code\":\"AX\"},{\"Name\":t(\"countries.Albania\"),\"Code\":\"AL\"},{\"Name\":t(\"countries.Algeria\"),\"Code\":\"DZ\"},{\"Name\":t(\"countries.American_Samoa\"),\"Code\":\"AS\"},{\"Name\":t(\"countries.Andorra\"),\"Code\":\"AD\"},{\"Name\":t(\"countries.Angola\"),\"Code\":\"AO\"},{\"Name\":t(\"countries.Anguilla\"),\"Code\":\"AI\"},{\"Name\":t(\"countries.Antarctica\"),\"Code\":\"AQ\"},{\"Name\":t(\"countries.Antigua_and_Barbuda\"),\"Code\":\"AG\"},{\"Name\":t(\"countries.Argentina\"),\"Code\":\"AR\"},{\"Name\":t(\"countries.Armenia\"),\"Code\":\"AM\"},{\"Name\":t(\"countries.Aruba\"),\"Code\":\"AW\"},{\"Name\":t(\"countries.Australia\"),\"Code\":\"AU\"},{\"Name\":t(\"countries.Austria\"),\"Code\":\"AT\"},{\"Name\":t(\"countries.Azerbaijan\"),\"Code\":\"AZ\"},{\"Name\":t(\"countries.Bahamas\"),\"Code\":\"BS\"},{\"Name\":t(\"countries.Bahrain\"),\"Code\":\"BH\"},{\"Name\":t(\"countries.Bangladesh\"),\"Code\":\"BD\"},{\"Name\":t(\"countries.Barbados\"),\"Code\":\"BB\"},{\"Name\":t(\"countries.Belarus\"),\"Code\":\"BY\"},{\"Name\":t(\"countries.Belgium\"),\"Code\":\"BE\"},{\"Name\":t(\"countries.Belize\"),\"Code\":\"BZ\"},{\"Name\":t(\"countries.Benin\"),\"Code\":\"BJ\"},{\"Name\":t(\"countries.Bermuda\"),\"Code\":\"BM\"},{\"Name\":t(\"countries.Bhutan\"),\"Code\":\"BT\"},{\"Name\":t(\"countries.Bolivia,_Plurinational_State_of\"),\"Code\":\"BO\"},{\"Name\":t(\"countries.Bonaire,_Sint_Eustatius_and_Saba\"),\"Code\":\"BQ\"},{\"Name\":t(\"countries.Bosnia_and_Herzegovina\"),\"Code\":\"BA\"},{\"Name\":t(\"countries.Botswana\"),\"Code\":\"BW\"},{\"Name\":t(\"countries.Bouvet_Island\"),\"Code\":\"BV\"},{\"Name\":t(\"countries.Brazil\"),\"Code\":\"BR\"},{\"Name\":t(\"countries.British_Indian_Ocean_Territory\"),\"Code\":\"IO\"},{\"Name\":t(\"countries.Brunei_Darussalam\"),\"Code\":\"BN\"},{\"Name\":t(\"countries.Bulgaria\"),\"Code\":\"BG\"},{\"Name\":t(\"countries.Burkina_Faso\"),\"Code\":\"BF\"},{\"Name\":t(\"countries.Burundi\"),\"Code\":\"BI\"},{\"Name\":t(\"countries.Cambodia\"),\"Code\":\"KH\"},{\"Name\":t(\"countries.Cameroon\"),\"Code\":\"CM\"},{\"Name\":t(\"countries.Canada\"),\"Code\":\"CA\"},{\"Name\":t(\"countries.Cape_Verde\"),\"Code\":\"CV\"},{\"Name\":t(\"countries.Cayman_Islands\"),\"Code\":\"KY\"},{\"Name\":t(\"countries.Central_African_Republic\"),\"Code\":\"CF\"},{\"Name\":t(\"countries.Chad\"),\"Code\":\"TD\"},{\"Name\":t(\"countries.Chile\"),\"Code\":\"CL\"},{\"Name\":t(\"countries.China\"),\"Code\":\"CN\"},{\"Name\":t(\"countries.Christmas_Island\"),\"Code\":\"CX\"},{\"Name\":t(\"countries.Cocos_(Keeling)_Islands\"),\"Code\":\"CC\"},{\"Name\":t(\"countries.Colombia\"),\"Code\":\"CO\"},{\"Name\":t(\"countries.Comoros\"),\"Code\":\"KM\"},{\"Name\":t(\"countries.Congo\"),\"Code\":\"CG\"},{\"Name\":t(\"countries.Congo,_the_Democratic_Republic_of_the\"),\"Code\":\"CD\"},{\"Name\":t(\"countries.Cook_Islands\"),\"Code\":\"CK\"},{\"Name\":t(\"countries.Costa_Rica\"),\"Code\":\"CR\"},{\"Name\":t(\"countries.Côte_d'Ivoire\"),\"Code\":\"CI\"},{\"Name\":t(\"countries.Croatia\"),\"Code\":\"HR\"},{\"Name\":t(\"countries.Cuba\"),\"Code\":\"CU\"},{\"Name\":t(\"countries.Curaçao\"),\"Code\":\"CW\"},{\"Name\":t(\"countries.Cyprus\"),\"Code\":\"CY\"},{\"Name\":t(\"countries.Czech_Republic\"),\"Code\":\"CZ\"},{\"Name\":t(\"countries.Denmark\"),\"Code\":\"DK\"},{\"Name\":t(\"countries.Djibouti\"),\"Code\":\"DJ\"},{\"Name\":t(\"countries.Dominica\"),\"Code\":\"DM\"},{\"Name\":t(\"countries.Dominican_Republic\"),\"Code\":\"DO\"},{\"Name\":t(\"countries.Ecuador\"),\"Code\":\"EC\"},{\"Name\":t(\"countries.Egypt\"),\"Code\":\"EG\"},{\"Name\":t(\"countries.El_Salvador\"),\"Code\":\"SV\"},{\"Name\":t(\"countries.Equatorial_Guinea\"),\"Code\":\"GQ\"},{\"Name\":t(\"countries.Eritrea\"),\"Code\":\"ER\"},{\"Name\":t(\"countries.Estonia\"),\"Code\":\"EE\"},{\"Name\":t(\"countries.Ethiopia\"),\"Code\":\"ET\"},{\"Name\":t(\"countries.Falkland_Islands_(Malvinas)\"),\"Code\":\"FK\"},{\"Name\":t(\"countries.Faroe_Islands\"),\"Code\":\"FO\"},{\"Name\":t(\"countries.Fiji\"),\"Code\":\"FJ\"},{\"Name\":t(\"countries.Finland\"),\"Code\":\"FI\"},{\"Name\":t(\"countries.France\"),\"Code\":\"FR\"},{\"Name\":t(\"countries.French_Guiana\"),\"Code\":\"GF\"},{\"Name\":t(\"countries.French_Polynesia\"),\"Code\":\"PF\"},{\"Name\":t(\"countries.French_Southern_Territories\"),\"Code\":\"TF\"},{\"Name\":t(\"countries.Gabon\"),\"Code\":\"GA\"},{\"Name\":t(\"countries.Gambia\"),\"Code\":\"GM\"},{\"Name\":t(\"countries.Georgia\"),\"Code\":\"GE\"},{\"Name\":t(\"countries.Germany\"),\"Code\":\"DE\"},{\"Name\":t(\"countries.Ghana\"),\"Code\":\"GH\"},{\"Name\":t(\"countries.Gibraltar\"),\"Code\":\"GI\"},{\"Name\":t(\"countries.Greece\"),\"Code\":\"GR\"},{\"Name\":t(\"countries.Greenland\"),\"Code\":\"GL\"},{\"Name\":t(\"countries.Grenada\"),\"Code\":\"GD\"},{\"Name\":t(\"countries.Guadeloupe\"),\"Code\":\"GP\"},{\"Name\":t(\"countries.Guam\"),\"Code\":\"GU\"},{\"Name\":t(\"countries.Guatemala\"),\"Code\":\"GT\"},{\"Name\":t(\"countries.Guernsey\"),\"Code\":\"GG\"},{\"Name\":t(\"countries.Guinea\"),\"Code\":\"GN\"},{\"Name\":t(\"countries.Guinea-Bissau\"),\"Code\":\"GW\"},{\"Name\":t(\"countries.Guyana\"),\"Code\":\"GY\"},{\"Name\":t(\"countries.Haiti\"),\"Code\":\"HT\"},{\"Name\":t(\"countries.Heard_Island_and_McDonald_Islands\"),\"Code\":\"HM\"},{\"Name\":t(\"countries.Holy_See_(Vatican_City_State)\"),\"Code\":\"VA\"},{\"Name\":t(\"countries.Honduras\"),\"Code\":\"HN\"},{\"Name\":t(\"countries.Hong_Kong\"),\"Code\":\"HK\"},{\"Name\":t(\"countries.Hungary\"),\"Code\":\"HU\"},{\"Name\":t(\"countries.Iceland\"),\"Code\":\"IS\"},{\"Name\":t(\"countries.India\"),\"Code\":\"IN\"},{\"Name\":t(\"countries.Indonesia\"),\"Code\":\"ID\"},{\"Name\":t(\"countries.Iran,_Islamic_Republic_of\"),\"Code\":\"IR\"},{\"Name\":t(\"countries.Iraq\"),\"Code\":\"IQ\"},{\"Name\":t(\"countries.Ireland\"),\"Code\":\"IE\"},{\"Name\":t(\"countries.Isle_of_Man\"),\"Code\":\"IM\"},{\"Name\":t(\"countries.Israel\"),\"Code\":\"IL\"},{\"Name\":t(\"countries.Italy\"),\"Code\":\"IT\"},{\"Name\":t(\"countries.Jamaica\"),\"Code\":\"JM\"},{\"Name\":t(\"countries.Japan\"),\"Code\":\"JP\"},{\"Name\":t(\"countries.Jersey\"),\"Code\":\"JE\"},{\"Name\":t(\"countries.Jordan\"),\"Code\":\"JO\"},{\"Name\":t(\"countries.Kazakhstan\"),\"Code\":\"KZ\"},{\"Name\":t(\"countries.Kenya\"),\"Code\":\"KE\"},{\"Name\":t(\"countries.Kiribati\"),\"Code\":\"KI\"},{\"Name\":t(\"countries.Korea,_Democratic_People's_Republic_of\"),\"Code\":\"KP\"},{\"Name\":t(\"countries.Korea,_Republic_of\"),\"Code\":\"KR\"},{\"Name\":t(\"countries.Kuwait\"),\"Code\":\"KW\"},{\"Name\":t(\"countries.Kyrgyzstan\"),\"Code\":\"KG\"},{\"Name\":t(\"countries.Lao_People's_Democratic_Republic\"),\"Code\":\"LA\"},{\"Name\":t(\"countries.Latvia\"),\"Code\":\"LV\"},{\"Name\":t(\"countries.Lebanon\"),\"Code\":\"LB\"},{\"Name\":t(\"countries.Lesotho\"),\"Code\":\"LS\"},{\"Name\":t(\"countries.Liberia\"),\"Code\":\"LR\"},{\"Name\":t(\"countries.Libya\"),\"Code\":\"LY\"},{\"Name\":t(\"countries.Liechtenstein\"),\"Code\":\"LI\"},{\"Name\":t(\"countries.Lithuania\"),\"Code\":\"LT\"},{\"Name\":t(\"countries.Luxembourg\"),\"Code\":\"LU\"},{\"Name\":t(\"countries.Macao\"),\"Code\":\"MO\"},{\"Name\":t(\"countries.Macedonia,_the_Former_Yugoslav_Republic_of\"),\"Code\":\"MK\"},{\"Name\":t(\"countries.Madagascar\"),\"Code\":\"MG\"},{\"Name\":t(\"countries.Malawi\"),\"Code\":\"MW\"},{\"Name\":t(\"countries.Malaysia\"),\"Code\":\"MY\"},{\"Name\":t(\"countries.Maldives\"),\"Code\":\"MV\"},{\"Name\":t(\"countries.Mali\"),\"Code\":\"ML\"},{\"Name\":t(\"countries.Malta\"),\"Code\":\"MT\"},{\"Name\":t(\"countries.Marshall_Islands\"),\"Code\":\"MH\"},{\"Name\":t(\"countries.Martinique\"),\"Code\":\"MQ\"},{\"Name\":t(\"countries.Mauritania\"),\"Code\":\"MR\"},{\"Name\":t(\"countries.Mauritius\"),\"Code\":\"MU\"},{\"Name\":t(\"countries.Mayotte\"),\"Code\":\"YT\"},{\"Name\":t(\"countries.Mexico\"),\"Code\":\"MX\"},{\"Name\":t(\"countries.Micronesia,_Federated_States_of\"),\"Code\":\"FM\"},{\"Name\":t(\"countries.Moldova,_Republic_of\"),\"Code\":\"MD\"},{\"Name\":t(\"countries.Monaco\"),\"Code\":\"MC\"},{\"Name\":t(\"countries.Mongolia\"),\"Code\":\"MN\"},{\"Name\":t(\"countries.Montenegro\"),\"Code\":\"ME\"},{\"Name\":t(\"countries.Montserrat\"),\"Code\":\"MS\"},{\"Name\":t(\"countries.Morocco\"),\"Code\":\"MA\"},{\"Name\":t(\"countries.Mozambique\"),\"Code\":\"MZ\"},{\"Name\":t(\"countries.Myanmar\"),\"Code\":\"MM\"},{\"Name\":t(\"countries.Namibia\"),\"Code\":\"NA\"},{\"Name\":t(\"countries.Nauru\"),\"Code\":\"NR\"},{\"Name\":t(\"countries.Nepal\"),\"Code\":\"NP\"},{\"Name\":t(\"countries.Netherlands\"),\"Code\":\"NL\"},{\"Name\":t(\"countries.New_Caledonia\"),\"Code\":\"NC\"},{\"Name\":t(\"countries.New_Zealand\"),\"Code\":\"NZ\"},{\"Name\":t(\"countries.Nicaragua\"),\"Code\":\"NI\"},{\"Name\":t(\"countries.Niger\"),\"Code\":\"NE\"},{\"Name\":t(\"countries.Nigeria\"),\"Code\":\"NG\"},{\"Name\":t(\"countries.Niue\"),\"Code\":\"NU\"},{\"Name\":t(\"countries.Norfolk_Island\"),\"Code\":\"NF\"},{\"Name\":t(\"countries.Northern_Mariana_Islands\"),\"Code\":\"MP\"},{\"Name\":t(\"countries.Norway\"),\"Code\":\"NO\"},{\"Name\":t(\"countries.Oman\"),\"Code\":\"OM\"},{\"Name\":t(\"countries.Pakistan\"),\"Code\":\"PK\"},{\"Name\":t(\"countries.Palau\"),\"Code\":\"PW\"},{\"Name\":t(\"countries.Palestine,_State_of\"),\"Code\":\"PS\"},{\"Name\":t(\"countries.Panama\"),\"Code\":\"PA\"},{\"Name\":t(\"countries.Papua_New_Guinea\"),\"Code\":\"PG\"},{\"Name\":t(\"countries.Paraguay\"),\"Code\":\"PY\"},{\"Name\":t(\"countries.Peru\"),\"Code\":\"PE\"},{\"Name\":t(\"countries.Philippines\"),\"Code\":\"PH\"},{\"Name\":t(\"countries.Pitcairn\"),\"Code\":\"PN\"},{\"Name\":t(\"countries.Poland\"),\"Code\":\"PL\"},{\"Name\":t(\"countries.Portugal\"),\"Code\":\"PT\"},{\"Name\":t(\"countries.Puerto_Rico\"),\"Code\":\"PR\"},{\"Name\":t(\"countries.Qatar\"),\"Code\":\"QA\"},{\"Name\":t(\"countries.Réunion\"),\"Code\":\"RE\"},{\"Name\":t(\"countries.Romania\"),\"Code\":\"RO\"},{\"Name\":t(\"countries.Russian_Federation\"),\"Code\":\"RU\"},{\"Name\":t(\"countries.Rwanda\"),\"Code\":\"RW\"},{\"Name\":t(\"countries.Saint_Barthélemy\"),\"Code\":\"BL\"},{\"Name\":t(\"countries.Saint_Helena,_Ascension_and_Tristan_da_Cunha\"),\"Code\":\"SH\"},{\"Name\":t(\"countries.Saint_Kitts_and_Nevis\"),\"Code\":\"KN\"},{\"Name\":t(\"countries.Saint_Lucia\"),\"Code\":\"LC\"},{\"Name\":t(\"countries.Saint_Martin_(French_part)\"),\"Code\":\"MF\"},{\"Name\":t(\"countries.Saint_Pierre_and_Miquelon\"),\"Code\":\"PM\"},{\"Name\":t(\"countries.Saint_Vincent_and_the_Grenadines\"),\"Code\":\"VC\"},{\"Name\":t(\"countries.Samoa\"),\"Code\":\"WS\"},{\"Name\":t(\"countries.San_Marino\"),\"Code\":\"SM\"},{\"Name\":t(\"countries.Sao_Tome_and_Principe\"),\"Code\":\"ST\"},{\"Name\":t(\"countries.Saudi_Arabia\"),\"Code\":\"SA\"},{\"Name\":t(\"countries.Senegal\"),\"Code\":\"SN\"},{\"Name\":t(\"countries.Serbia\"),\"Code\":\"RS\"},{\"Name\":t(\"countries.Seychelles\"),\"Code\":\"SC\"},{\"Name\":t(\"countries.Sierra_Leone\"),\"Code\":\"SL\"},{\"Name\":t(\"countries.Singapore\"),\"Code\":\"SG\"},{\"Name\":t(\"countries.Sint_Maarten_(Dutch_part)\"),\"Code\":\"SX\"},{\"Name\":t(\"countries.Slovakia\"),\"Code\":\"SK\"},{\"Name\":t(\"countries.Slovenia\"),\"Code\":\"SI\"},{\"Name\":t(\"countries.Solomon_Islands\"),\"Code\":\"SB\"},{\"Name\":t(\"countries.Somalia\"),\"Code\":\"SO\"},{\"Name\":t(\"countries.South_Africa\"),\"Code\":\"ZA\"},{\"Name\":t(\"countries.South_Georgia_and_the_South_Sandwich_Islands\"),\"Code\":\"GS\"},{\"Name\":t(\"countries.South_Sudan\"),\"Code\":\"SS\"},{\"Name\":t(\"countries.Spain\"),\"Code\":\"ES\"},{\"Name\":t(\"countries.Sri_Lanka\"),\"Code\":\"LK\"},{\"Name\":t(\"countries.Sudan\"),\"Code\":\"SD\"},{\"Name\":t(\"countries.Suriname\"),\"Code\":\"SR\"},{\"Name\":t(\"countries.Svalbard_and_Jan_Mayen\"),\"Code\":\"SJ\"},{\"Name\":t(\"countries.Swaziland\"),\"Code\":\"SZ\"},{\"Name\":t(\"countries.Sweden\"),\"Code\":\"SE\"},{\"Name\":t(\"countries.Switzerland\"),\"Code\":\"CH\"},{\"Name\":t(\"countries.Syrian_Arab_Republic\"),\"Code\":\"SY\"},{\"Name\":t(\"countries.Taiwan,_Province_of_China\"),\"Code\":\"TW\"},{\"Name\":t(\"countries.Tajikistan\"),\"Code\":\"TJ\"},{\"Name\":t(\"countries.Tanzania,_United_Republic_of\"),\"Code\":\"TZ\"},{\"Name\":t(\"countries.Thailand\"),\"Code\":\"TH\"},{\"Name\":t(\"countries.Timor-Leste\"),\"Code\":\"TL\"},{\"Name\":t(\"countries.Togo\"),\"Code\":\"TG\"},{\"Name\":t(\"countries.Tokelau\"),\"Code\":\"TK\"},{\"Name\":t(\"countries.Tonga\"),\"Code\":\"TO\"},{\"Name\":t(\"countries.Trinidad_and_Tobago\"),\"Code\":\"TT\"},{\"Name\":t(\"countries.Tunisia\"),\"Code\":\"TN\"},{\"Name\":t(\"countries.Turkey\"),\"Code\":\"TR\"},{\"Name\":t(\"countries.Turkmenistan\"),\"Code\":\"TM\"},{\"Name\":t(\"countries.Turks_and_Caicos_Islands\"),\"Code\":\"TC\"},{\"Name\":t(\"countries.Tuvalu\"),\"Code\":\"TV\"},{\"Name\":t(\"countries.Uganda\"),\"Code\":\"UG\"},{\"Name\":t(\"countries.Ukraine\"),\"Code\":\"UA\"},{\"Name\":t(\"countries.United_Arab_Emirates\"),\"Code\":\"AE\"},{\"Name\":t(\"countries.United_Kingdom\"),\"Code\":\"GB\"},{\"Name\":t(\"countries.United_States\"),\"Code\":\"US\"},{\"Name\":t(\"countries.United_States_Minor_Outlying_Islands\"),\"Code\":\"UM\"},{\"Name\":t(\"countries.Uruguay\"),\"Code\":\"UY\"},{\"Name\":t(\"countries.Uzbekistan\"),\"Code\":\"UZ\"},{\"Name\":t(\"countries.Vanuatu\"),\"Code\":\"VU\"},{\"Name\":t(\"countries.Venezuela,_Bolivarian_Republic_of\"),\"Code\":\"VE\"},{\"Name\":t(\"countries.Viet_Nam\"),\"Code\":\"VN\"},{\"Name\":t(\"countries.Virgin_Islands_British\"),\"Code\":\"VG\"},{\"Name\":t(\"countries.Virgin_Islands_US\"),\"Code\":\"VI\"},{\"Name\":t(\"countries.Wallis_and_Futuna\"),\"Code\":\"WF\"},{\"Name\":t(\"countries.Western_Sahara\"),\"Code\":\"EH\"},{\"Name\":t(\"countries.Yemen\"),\"Code\":\"YE\"},{\"Name\":t(\"countries.Zambia\"),\"Code\":\"ZM\"},{\"Name\":t(\"countries.Zimbabwe\"),\"Code\":\"ZW\"}]\n\nexport default ISO_COUNTRY_CODES","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport ISO_COUNTRY_CODES from \"../../../tools/iso_country_codes\"\nimport { GraphQLID } from 'graphql'\n\n\nconst RelationsAccountProfileForm = ({ t, history, isSubmitting, errors, values, inputData, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"customer\" \n                  checked={values.customer} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('general.customer')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"customer\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"teacher\" \n                  checked={values.teacher} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('general.teacher')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"teacher\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"employee\" \n                  checked={values.employee} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('general.employee')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"employee\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.first_name')}>\n              <Field type=\"text\" \n                      name=\"firstName\" \n                      className={(errors.firstName) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"firstName\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.last_name')}>\n              <Field type=\"text\" \n                      name=\"lastName\" \n                      className={(errors.lastName) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"lastName\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n         <Grid.Col>\n            <Form.Group label={t('general.date_of_birth')}>\n              <CSDatePicker \n                selected={values.dateOfBirth}\n                onChange={(date) => setFieldValue(\"dateOfBirth\", date)}\n                onBlur={() => setFieldTouched(\"dateOfBirth\", true)}\n              />\n              <ErrorMessage name=\"dateOfBirth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.gender')}>\n              <Field component=\"select\" \n                    name=\"gender\" \n                    className={(errors.organizationMembership) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\"></option>\n                <option value=\"F\">{t(\"genders.female\")}</option>\n                <option value=\"M\">{t(\"genders.male\")}</option>\n                <option value=\"X\">{t(\"genders.other\")}</option>\n              </Field>\n              <ErrorMessage name=\"gender\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.email')}>\n              <Field type=\"text\" \n                      name=\"email\" \n                      className={(errors.email) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"email\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('relations.accounts.emergency')}>\n              <Field type=\"text\" \n                     name=\"emergency\" \n                     className={(errors.emergency) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"emergency\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.phone')}>\n              <Field type=\"text\" \n                      name=\"phone\" \n                      className={(errors.phone) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"phone\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.mobile')}>\n              <Field type=\"text\" \n                     name=\"mobile\" \n                     className={(errors.mobile) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"mobile\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.address')}>\n              <Field type=\"text\" \n                      name=\"address\" \n                      className={(errors.address) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"address\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.postcode')}>\n              <Field type=\"text\" \n                     name=\"postcode\" \n                     className={(errors.postcode) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"postcode\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.city')}>\n              <Field type=\"text\" \n                      name=\"city\" \n                      className={(errors.city) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"city\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.country')}>\n              <Field component=\"select\" \n                     name=\"country\" \n                     className={(errors.country) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\">\n                <option value=\"\"></option>\n                { ISO_COUNTRY_CODES.map(\n                    country => <option value={country.Code} key={v4()}>{country.Name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"country\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.discovery')}>\n              <Field component=\"select\" \n                    name=\"organizationDiscovery\" \n                    className={(errors.organizationDiscovery) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.organizationDiscoveries.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationDiscovery\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.language')}>\n              <Field component=\"select\" \n                    name=\"organizationLanguage\" \n                    className={(errors.organizationLanguage) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.organizationLanguages.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLanguage\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row> \n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.key_number')}>\n              <Field type=\"text\" \n                      name=\"keyNumber\" \n                      className={(errors.keyNumber) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"keyNumber\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          \n          {/* <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsAccountProfileForm))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport ProfileCardSmall from \"../../ui/ProfileCardSmall\"\n\nimport RelationsAccountsBack from \"./RelationsAccountsBack\"\nimport ProfileMenu from \"./ProfileMenu\"\n\nfunction RelationsAccountProfileBase({t, match, children, sidebarButton=\"\", activeLink=\"\", user={}}) {\n  const accountId = match.params.account_id\n  let headerTitle = \"\"\n  if (user) {\n    headerTitle = `${user.firstName} ${user.lastName}`\n  }\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={headerTitle}>\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>                                    \n            <Grid.Col md={3}>\n              <ProfileCardSmall user={user}/>\n              {sidebarButton}\n              <ProfileMenu \n                activeLink={activeLink}\n                accountId={accountId}\n              /> \n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsAccountProfileBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNTS_QUERY, GET_ACCOUNT_QUERY, UPDATE_ACCOUNT } from './queries'\nimport { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\nimport ProfileCardSmall from \"../../ui/ProfileCardSmall\"\n\nimport { get_list_query_variables } from \"./tools\"\nimport RelationsAccountsBack from \"./RelationsAccountsBack\"\nimport RelationsAccountProfileForm from \"./RelationsAccountProfileForm\"\n\n// import OrganizationMenu from \"../OrganizationMenu\"\nimport ProfileMenu from \"./ProfileMenu\"\nimport RelationsAccountProfileBase from './RelationsAccountProfileBase'\n\nfunction RelationsAccountProfile({t, match}) {\n  const accountId = match.params.account_id\n  const activeLink = \"profile\"\n  const returnUrl = \"/relations/accounts\"\n\n  const {loading, error, data} = useQuery(GET_ACCOUNT_QUERY, {\n    variables: {id: accountId}\n  })\n  const [updateAccount] = useMutation(UPDATE_ACCOUNT)\n\n  if (loading) return (\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>  \n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      {console.log(error)}\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <p>{t('general.error_sad_smiley')}</p>\n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const account = data.account\n  console.log(account)\n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateOfBirth = null\n  if (account.dateOfBirth) {\n    dateOfBirth = new Date(account.dateOfBirth)\n  }\n\n  let initialValues = { \n    customer: account.customer, \n    teacher: account.teacher, \n    employee: account.employee, \n    firstName: account.firstName, \n    lastName: account.lastName, \n    email: account.email,\n    dateOfBirth: dateOfBirth,\n    gender: account.gender,\n    emergency: account.emergency,\n    phone: account.phone,\n    mobile: account.mobile,\n    address: account.address,\n    postcode: account.postcode,\n    city: account.city,\n    country: account.country,\n    keyNumber: account.keyNumber\n  }\n\n  if (account.organizationDiscovery) {\n    initialValues.organizationDiscovery = account.organizationDiscovery.id\n  }\n\n  if (account.organizationLanguage) {\n    initialValues.organizationLanguage = account.organizationLanguage.id\n  }\n\n  return (\n    <RelationsAccountProfileBase \n      user={account}\n      activeLink={activeLink}\n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n        <Formik\n            initialValues={initialValues}\n            validationSchema={ACCOUNT_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                let input_vars = {\n                  id: accountId,\n                  customer: values.customer,\n                  teacher: values.teacher,\n                  employee: values.employee,\n                  firstName: values.firstName,\n                  lastName: values.lastName,\n                  email: values.email,\n                  gender: values.gender,\n                  emergency: values.emergency,\n                  phone: values.phone,\n                  mobile: values.mobile,\n                  address: values.address,\n                  postcode: values.postcode,\n                  city: values.city,\n                  country: values.country,\n                  keyNumber: values.keyNumber,\n                  organizationDiscovery: values.organizationDiscovery,\n                  organizationLanguage: values.organizationLanguage\n                }\n\n                if (values.dateOfBirth) {\n                  input_vars['dateOfBirth'] = dateToLocalISO(values.dateOfBirth)\n                } \n\n                updateAccount({ variables: {\n                  input: input_vars\n                }, refetchQueries: [\n                    // Refetch list\n                    {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()},\n                    // Refresh local cached results for this account\n                    {query: GET_ACCOUNT_QUERY, variables: {id: accountId}}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    toast.success((t('relations.accounts.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    setSubmitting(false)\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n              <RelationsAccountProfileForm\n                isSubmitting={isSubmitting}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                errors={errors}\n                values={values}\n                inputData={data}\n              />\n            )}\n          </Formik>\n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsAccountProfile))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nconst DocumentType = ({ t, documentType }) => {\n  switch (documentType) {\n    case \"TERMS_AND_CONDITIONS\":  \n      return t('general.terms_and_conditions')\n      break\n    case \"PRIVACY_POLICY\":\n      return t('general.privacy_policy')\n      break\n    default:\n      return t('general.unknown_document_type')\n  }\n}\n\nexport default withTranslation()(DocumentType)\n\n\n\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_ACCEPTED_DOCUMENTS_QUERY = gql`\n  query AccountAcceptedDocuments($after: String, $before: String, $account: ID!) {\n    accountAcceptedDocuments(first: 15, before:$before, after:$after, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          document {\n            id\n            documentType\n            version\n            urlDocument\n          }\n          dateAccepted\n          clientIp\n        }\n      }\n    }\n    account(id:$account) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\nimport DocumentType from \"../../../ui/DocumentType\"\nimport FileDownloadTableButton from \"../../../ui/FileDownloadTableButton\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport { GET_ACCOUNT_ACCEPTED_DOCUMENTS_QUERY } from \"./queries\"\n\nimport moment from 'moment'\n\n\nfunction AccountAcceptedDocuments({ t, history, match }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  const accountId = match.params.account_id\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_ACCEPTED_DOCUMENTS_QUERY, {\n    variables: {\n      account: accountId\n    }\n  })\n\n  // Loading\n  if (loading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (error) {\n    console.log(error)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n\n  console.log(data)\n  \n  const account = data.account\n  const acceptedDocuments = data.accountAcceptedDocuments\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.firstName + \" \" + account.lastName} >\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <ContentCard \n                cardTitle={t('relations.account.accepted_documents.title')}\n                pageInfo={acceptedDocuments.pageInfo}\n                onLoadMore={() => {\n                  fetchMore({\n                    variables: {\n                      after: data.accountAcceptedDocuments.pageInfo.endCursor\n                    },\n                    updateQuery: (previousResult, { fetchMoreResult }) => {\n                      const newEdges = fetchMoreResult.accountAcceptedDocuments.edges\n                      const pageInfo = fetchMoreResult.accountAcceptedDocuments.pageInfo\n\n                      return newEdges.length\n                        ? {\n                            // Put the new acceptedDocuments at the end of the list and update `pageInfo`\n                            // so we have the new `endCursor` and `hasNextPage` values\n                            accountAcceptedDocuments: {\n                              __typename: previousResult.accountAcceptedDocuments.__typename,\n                              edges: [ ...previousResult.accountAcceptedDocuments.edges, ...newEdges ],\n                              pageInfo\n                            }\n                          }\n                        : previousResult\n                    }\n                  })\n                }} \n              >\n                <Table>\n                  <Table.Header>\n                    <Table.Row key={v4()}>\n                      <Table.ColHeader>{t('general.document_type')}</Table.ColHeader>\n                      <Table.ColHeader>{t('general.date_accepted')}</Table.ColHeader>\n                      <Table.ColHeader>{t('relations.account.accepted_documents.accepted_from_address')}</Table.ColHeader>\n                      <Table.ColHeader><span className=\"pull-right\">{t('general.document')}</span></Table.ColHeader>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                      {acceptedDocuments.edges.map(({ node }) => (\n                        <Table.Row key={v4()}>\n                          <Table.Col key={v4()}>\n                            <DocumentType documentType={node.document.documentType} />\n                          </Table.Col>\n                          <Table.Col key={v4()}>\n                            {moment(node.dateAccepted).format(dateFormat)}\n                          </Table.Col>\n                          <Table.Col>\n                            {node.clientIp}\n                          </Table.Col>\n                          <Table.Col key={v4()}>\n                            <FileDownloadTableButton mediaUrl={node.document.urlDocument} className=\"pull-right\" />\n                          </Table.Col>\n                        </Table.Row>\n                      ))}\n                  </Table.Body>\n                </Table>\n              </ContentCard>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              <ProfileMenu \n                activeLink='accepted_documents' \n                accountId={match.params.account_id}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n      \n        \nexport default withTranslation()(withRouter(AccountAcceptedDocuments))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ACCOUNT_BANK_ACCOUNTS_QUERY = gql`\n  query AccountBankAccounts($after: String, $before: String, $account: ID!) {\n    accountBankAccounts(\n      first: 1, \n      before: $before, \n      after: $after, \n      account: $account\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          number\n          holder\n          bic\n          mandates(first: 100) {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n              startCursor\n              endCursor\n            }\n            edges {\n              node {\n                id\n                reference\n                content\n                signatureDate\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n// export const GET_ACCOUNT_QUERY = gql`\n//   query Account($id: ID!) {\n//     account(id:$id) {\n//       id\n//       customer\n//       teacher\n//       employee\n//       firstName\n//       lastName\n//       email\n//       dateOfBirth\n//       gender\n//       address\n//       postcode\n//       city\n//       country\n//       phone\n//       mobile\n//       emergency\n//       isActive\n//     }\n//   }\n// `\n\nexport const UPDATE_ACCOUNT_BANK_ACCOUNT = gql`\n  mutation UpdateAccountBanKAccount($input:UpdateAccountBankAccountInput!) {\n    updateAccountBankAccount(input: $input) {\n      accountBankAccount {\n        id\n        number\n        holder\n        bic\n      }\n    }\n  }\n`\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ACCOUNT_BANK_ACCOUNT_MANDATE_QUERY = gql`\n  query AccountBankAccountMandate($id: ID!) {\n    accountBankAccountMandate(id:$id) {\n      id\n      reference\n      content\n      signatureDate\n    }\n  }\n`\n\n\nexport const CREATE_ACCOUNT_BANK_ACCOUNT_MANDATE = gql`\n  mutation CreateAccountBankAccountMandate($input:CreateAccountBankAccountMandateInput!) {\n    createAccountBankAccountMandate(input: $input) {\n      accountBankAccountMandate {\n        id\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_ACCOUNT_BANK_ACCOUNT_MANDATE = gql`\n  mutation UpdateAccountBankAccountMandate($input:UpdateAccountBankAccountMandateInput!) {\n    updateAccountBankAccountMandate(input: $input) {\n      accountBankAccountMandate {\n        id\n      }\n    }\n  }\n`\n\n\nexport const DELETE_ACCOUNT_BANK_ACCOUNT_MANDATE = gql`\n  mutation DeleteAccountBankAccountMandate($input:DeleteAccountBankAccountMandateInput!) {\n    deleteAccountBankAccountMandate(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport { GET_ACCOUNT_QUERY } from '../queries'\n\nimport {\n  Button,\n  Icon,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\nimport ProfileMenu from \"../ProfileMenu\"\n\n\nfunction RelationsAccountBankAccountBase({ t, match, history, children, bankAccountId=\"\", showBack=false }) {\n  const accountId = match.params.account_id\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_QUERY, {\n    variables: { id: accountId }\n  })\n\n  if (loading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (error) {\n    console.log(error)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n\n  const account = data.account\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.firstName + \" \" + account.lastName}>\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              {((bankAccountId) && !(showBack)) ?\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"accountbankaccountmandate\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/bank_accounts/${bankAccountId}/mandates/add`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.bank_accounts.mandates.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              {(showBack) ?\n                <HasPermissionWrapper permission=\"view\"\n                                      resource=\"accountbankaccount\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/bank_accounts/`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\"\n              }\n              <ProfileMenu \n                activeLink='bank_account'\n                accountId={accountId}\n              /> \n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccountBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nconst RelationsAccountBankAccountForm = ({ t, history, isSubmitting, errors, values, }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.bank_accounts.holder')}>\n              <Field type=\"text\" \n                      name=\"holder\" \n                      className={(errors.holder) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"bic\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.bank_accounts.number')}>\n              <Field type=\"text\" \n                      name=\"number\" \n                      className={(errors.number) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"number\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.bank_accounts.bic')}>\n              <Field type=\"text\" \n                      name=\"bic\" \n                      className={(errors.bic) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"bic\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          \n          {/* <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccountForm))\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport moment from 'moment'\n\nimport { GET_ACCOUNT_BANK_ACCOUNTS_QUERY, UPDATE_ACCOUNT_BANK_ACCOUNT } from './queries'\nimport { DELETE_ACCOUNT_BANK_ACCOUNT_MANDATE } from './mandates/queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card, \n  Grid,\n  Icon\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport RelationsAccountBankAccountBase from \"./RelationsAccountBankAccountBase\"\nimport RelationsAccountBankAccountForm from \"./RelationsAccountBankAccountForm\"\n\n\n\nfunction RelationsAccountBankAccount({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  \n  const accountId = match.params.account_id\n  const returnUrl = \"/relations/accounts\"\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_BANK_ACCOUNTS_QUERY, {\n    variables: { account: accountId }\n  })\n\n  const [ updateAccountBankAccount ] = useMutation(UPDATE_ACCOUNT_BANK_ACCOUNT)\n  const [ deleteAccountBankAccountMandate ] = useMutation(DELETE_ACCOUNT_BANK_ACCOUNT_MANDATE)\n\n  if (loading) return (\n    <RelationsAccountBankAccountBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </RelationsAccountBankAccountBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <RelationsAccountBankAccountBase>\n        <p>{t('general.loading_with_dots')}</p><p>{t('general.error_sad_smiley')}</p>\n      </RelationsAccountBankAccountBase>\n    )\n  }\n\n  const accountBankAccounts = data.accountBankAccounts\n  const accountBankAccount = accountBankAccounts.edges[0].node\n  const mandates = accountBankAccount.mandates\n  console.log(accountBankAccount)\n\n  return (\n    <RelationsAccountBankAccountBase bankAccountId={accountBankAccount.id}>\n      <Card title={t('relations.account.bank_accounts.title')}>\n        <Formik\n          initialValues={{ \n            number: accountBankAccount.number,\n            holder: accountBankAccount.holder,\n            bic: accountBankAccount.bic\n          }}\n          // validationSchema={ACCOUNT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              let input_vars = {\n                id: accountBankAccount.id,\n                number: values.number,\n                holder: values.holder,\n                bic: values.bic              \n              }\n\n              updateAccountBankAccount({ variables: {\n                input: input_vars\n              }, refetchQueries: [\n                  // Refresh local cached results for this account\n                  {query: GET_ACCOUNT_BANK_ACCOUNTS_QUERY, variables: { account: accountId }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('relations.account.bank_accounts.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <RelationsAccountBankAccountForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n            />\n          )}\n        </Formik>\n      </Card>\n      {(mandates.edges.length) ? <h5>{t(\"relations.account.bank_accounts.mandates.title\")}</h5> : \"\"}\n      <Grid.Row>\n      {mandates.edges.map(({ node }) => (\n        <Grid.Col md={6}>\n          <Card title={t(\"general.ID\") + \": \" + node.reference}>\n            <Card.Body>\n              {t(\"relations.account.bank_accounts.mandates.signature_date\")} {moment(node.signatureDate).format(dateFormat)}\n              <div dangerouslySetInnerHTML={{ __html: node.content}} />\n            </Card.Body>\n            <Card.Footer>\n              <Button \n                className=\"pull-right\"\n                color=\"danger\"\n                type=\"button\"\n                onClick={() => {\n                  confirm_delete({\n                    t: t,\n                    msgConfirm: t(\"relations.account.bank_accounts.mandates.delete_confirm_msg\"),\n                    msgDescription: <p>{node.reference}</p>,\n                    msgSuccess: t('relations.account.bank_accounts.mandates.deleted'),\n                    deleteFunction: deleteAccountBankAccountMandate,\n                    functionVariables: { \n                      variables: {\n                        input: {\n                          id: node.id\n                        }\n                      }, \n                      refetchQueries: [\n                        {query: GET_ACCOUNT_BANK_ACCOUNTS_QUERY, variables: { account: accountId} } \n                      ]\n                    }\n                  })\n                }}\n              >\n                <Icon name=\"trash-2\" />\n              </Button>\n              <Link to={`/relations/accounts/${accountId}/bank_accounts/${accountBankAccount.id}/mandates/edit/${node.id}`}>\n                <Button\n                  type=\"button\" \n                  color=\"secondary\" \n                >\n                    {t('general.edit')}\n                </Button>\n              </Link>\n            </Card.Footer>\n          </Card>\n        </Grid.Col>\n      ))}\n      </Grid.Row>\n    </RelationsAccountBankAccountBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccount))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\nimport CSDatePicker from \"../../../../ui/CSDatePicker\"\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../plugin_config/tinymce\"\n\n\nconst RelationsAccountBankAccountMandateForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, returnUrl }) => (\n  <FoForm>\n    <Card.Body>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('relations.account.bank_accounts.mandates.reference')}>\n            <Field type=\"text\" \n                    name=\"reference\" \n                    className={(errors.reference) ? \"form-control is-invalid\" : \"form-control\"}\n                    placeholder={t('relations.account.bank_accounts.mandates.reference_placeholder')}\n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"reference\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('relations.account.bank_accounts.mandates.signature_date')}>\n            <CSDatePicker \n              selected={values.signatureDate}\n              onChange={(date) => setFieldValue(\"signatureDate\", date)}\n              onBlur={() => setFieldTouched(\"signatureDate\", true)}\n            />\n            <ErrorMessage name=\"signatureDate\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('relations.account.bank_accounts.mandates.content')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"content\"\n              initialValue={values.content}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"content\", e.target.getContent())\n                setFieldTouched(\"content\", true, true)\n              }}\n              />\n            <ErrorMessage name=\"content\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button\n            type=\"button\" \n            color=\"link\" \n          >\n              {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccountMandateForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { CREATE_ACCOUNT_BANK_ACCOUNT_MANDATE } from './queries'\nimport { GET_ACCOUNT_BANK_ACCOUNTS_QUERY } from '../queries'\n// import { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport RelationsAccountBankAccountMandateForm from './RelationsAccountBankAccountMandateForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport RelationsAccountBankAccountBase from '../RelationsAccountBankAccountBase'\n\n\nfunction RelationsAccountBankAccountMandateAdd({ t, match, history }) {\n  const accountId = match.params.account_id\n  const bankAccountId = match.params.bank_account_id\n  const returnUrl = `/relations/accounts/${accountId}/bank_accounts`\n\n  const [createAccountBankAccountMandate] = useMutation(CREATE_ACCOUNT_BANK_ACCOUNT_MANDATE) \n \n\n  return (\n    <RelationsAccountBankAccountBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.account.bank_accounts.mandates.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{\n            reference: \"\",\n            content: \"\",\n            signatureDate: new Date()\n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            createAccountBankAccountMandate({ variables: {\n              input: {\n                accountBankAccount: bankAccountId,\n                reference: values.refrence, \n                content: values.content,\n                signatureDate: dateToLocalISO(values.signatureDate)\n              }\n            }, refetchQueries: [\n              {query: GET_ACCOUNT_BANK_ACCOUNTS_QUERY, variables: { account: accountId }}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                history.push(returnUrl)\n                toast.success((t('relations.account.bank_accounts.mandates.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, submitForm, setFieldTouched, setFieldValue }) => (\n            <RelationsAccountBankAccountMandateForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              submitForm={submitForm}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              returnUrl={returnUrl}\n            >\n            </RelationsAccountBankAccountMandateForm>   \n          )}\n        </Formik>\n      </Card>\n    </RelationsAccountBankAccountBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccountMandateAdd))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_BANK_ACCOUNT_MANDATE_QUERY, UPDATE_ACCOUNT_BANK_ACCOUNT_MANDATE } from './queries'\nimport { GET_ACCOUNT_BANK_ACCOUNTS_QUERY } from '../queries'\n// import { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport RelationsAccountBankAccountMandateForm from './RelationsAccountBankAccountMandateForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport RelationsAccountBankAccountBase from '../RelationsAccountBankAccountBase'\n\n\nfunction RelationsAccountBankAccountMandateEdit({ t, match, history }) {\n  const accountId = match.params.account_id\n  const bankAccountId = match.params.bank_account_id\n  const mandateId = match.params.id\n  const returnUrl = `/relations/accounts/${accountId}/bank_accounts`\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_BANK_ACCOUNT_MANDATE_QUERY, {\n    variables: {'id': mandateId},\n  })\n  const [updateAccountBankAccountMandate] = useMutation(UPDATE_ACCOUNT_BANK_ACCOUNT_MANDATE) \n\n  if (loading) return (\n    <RelationsAccountBankAccountBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </RelationsAccountBankAccountBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <RelationsAccountBankAccountBase>\n        <p>{t('general.loading_with_dots')}</p><p>{t('general.error_sad_smiley')}</p>\n      </RelationsAccountBankAccountBase>\n    )\n  }\n\n  const mandate = data.accountBankAccountMandate\n \n\n  return (\n    <RelationsAccountBankAccountBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.account.bank_accounts.mandates.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{\n            reference: mandate.reference,\n            content: mandate.content,\n            signatureDate: mandate.signatureDate\n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateAccountBankAccountMandate({ variables: {\n              input: {\n                id: mandateId,\n                reference: values.refrence, \n                content: values.content,\n                signatureDate: dateToLocalISO(values.signatureDate)\n              }\n            }, refetchQueries: [\n              {query: GET_ACCOUNT_BANK_ACCOUNTS_QUERY, variables: { account: accountId }}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('relations.account.bank_accounts.mandates.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                history.push(returnUrl)\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, submitForm, setFieldTouched, setFieldValue }) => (\n            <RelationsAccountBankAccountMandateForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              submitForm={submitForm}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              returnUrl={returnUrl}\n            >\n            </RelationsAccountBankAccountMandateForm>   \n          )}\n        </Formik>\n      </Card>\n    </RelationsAccountBankAccountBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccountMandateEdit))\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Badge\n} from \"tabler-react\"\n\n\nfunction BadgeBookingStatus({ t, status }) {\n  switch (status) {\n    case \"ATTENDING\":\n      return <Badge color=\"success\">{t('schedule.classes.class.attendance.booking_status.ATTENDING')}</Badge> \n      break\n    case \"BOOKED\":\n      return <Badge color=\"primary\">{t('schedule.classes.class.attendance.booking_status.BOOKED')}</Badge> \n      break\n    case \"CANCELLED\":\n      return <Badge color=\"warning\">{t('schedule.classes.class.attendance.booking_status.CANCELLED')}</Badge> \n      break\n    default:\n      return t(\"schedule.classes.class.attendance.booking_status.invalid_type\")\n  }\n}\n\nexport default withTranslation()(BadgeBookingStatus)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\n\nfunction AccountClassesBase({ t, match, history, children, account={} }) {\n  const accountId = match.params.account_id\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.fullName} >\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n                {/* <HasPermissionWrapper permission=\"view\"\n                                      resource=\"scheduleitemattendance\">\n                  <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classes/add\"}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.classes.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper> */}\n              <ProfileMenu \n                activeLink='classes' \n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountClassesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_CLASSES_QUERY = gql`\n  query ScheduleItemAttendance($account: ID!, $before: String, $after: String) {\n    scheduleItemAttendances(first: 20, before: $before, after: $after, account: $account, accountScheduleEventTicket_Isnull: true) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          attendanceType\n          date\n          bookingStatus\n          scheduleItem {\n            id\n            timeStart\n            timeEnd\n            organizationLocationRoom {\n              name\n              organizationLocation {\n                name\n              }\n            }\n            organizationClasstype {\n              name\n            }\n          }\n        }\n      } \n    }\n    account(id:$account) {\n      id\n      firstName\n      lastName\n      fullName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\n// export const GET_ACCOUNT_CLASSPASS_QUERY = gql`\n//   query AccountClasspass($id: ID!, $accountId: ID!, $after: String, $before: String, $archived: Boolean!) {\n//     accountClasspass(id:$id) {\n//       id\n//       organizationClasspass {\n//         id\n//         name\n//       }\n//       dateStart\n//       dateEnd\n//       note\n//       createdAt\n//     }\n//     organizationClasspasses(first: 100, before: $before, after: $after, archived: $archived) {\n//       pageInfo {\n//         startCursor\n//         endCursor\n//         hasNextPage\n//         hasPreviousPage\n//       }\n//       edges {\n//         node {\n//           id\n//           archived\n//           name\n//         }\n//       }\n//     }\n//     account(id:$accountId) {\n//       id\n//       firstName\n//       lastName\n//       email\n//       phone\n//       mobile\n//       isActive\n//     }\n//   }\n// `\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_CLASS_ATTENDANCE_QUERY = gql`\n  query ScheduleItemAttendances($after: String, $before: String, $scheduleItem: ID!, $date: Date!) {\n    scheduleItemAttendances(first: 100, before: $before, after: $after, scheduleItem: $scheduleItem, date: $date) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }     \n          attendanceType\n          bookingStatus\n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const DELETE_SCHEDULE_CLASS_ATTENDANCE = gql`\n  mutation DeleteScheduleItemAttendance($input: DeleteScheduleItemAttendanceInput!) {\n    deleteScheduleItemAttendance(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const UPDATE_SCHEDULE_ITEM_ATTENDANCE = gql`\n  mutation UpdateScheduleItemAttendance($input: UpdateScheduleItemAttendanceInput!) {\n    updateScheduleItemAttendance(input:$input) {\n      scheduleItemAttendance {\n        id\n      }\n    }\n  }\n`\n\n\n// export const GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY = gql`\n//   query ScheduleItemTeacher($before: String, $after: String, $id: ID!) {\n//     scheduleItemTeacher(id: $id) {\n//       id\n//       account {\n//         id\n//         fullName\n//       }\n//       role\n//       account2 {\n//         id\n//         fullName\n//       }\n//       role2\n//       dateStart\n//       dateEnd       \n//     }\n//     accounts(first: 15, before: $before, after: $after, isActive: true, teacher: true) {\n//       pageInfo {\n//         startCursor\n//         endCursor\n//         hasNextPage\n//         hasPreviousPage\n//       }\n//       edges {\n//         node {\n//           id\n//           fullName\n//         }\n//       }\n//     }\n//   }\n// `\n\n\n// export const GET_INPUT_VALUES_QUERY = gql`\n//   query InputValues($after: String, $before: String) {\n//     accounts(first: 15, before: $before, after: $after, isActive: true, teacher: true) {\n//       pageInfo {\n//         startCursor\n//         endCursor\n//         hasNextPage\n//         hasPreviousPage\n//       }\n//       edges {\n//         node {\n//           id\n//           fullName\n//         }\n//       }\n//     }\n//   }\n// `","import React, { useContext } from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_ACCOUNT_CLASSES_QUERY } from \"./queries\"\nimport { DELETE_SCHEDULE_CLASS_ATTENDANCE } from \"../../../schedule/classes/class/attendance/queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport moment from 'moment'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\"\n\n\nfunction AccountClassDelete({t, match, node, account}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const [deleteScheduleItemAttendance, { data }] = useMutation(DELETE_SCHEDULE_CLASS_ATTENDANCE)\n\n  console.log(\"AccountClassDelete\")\n  console.log(node)\n  console.log(account)\n  console.log(\"---\")\n\n  return (\n    <button className=\"icon btn btn-link btn-sm pull-right\" \n      title={t('general.delete')} \n      href=\"\"\n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.classes.class.attendance.delete_confirm_msg\"),\n          msgDescription: <p>\n            <List>\n              <List.Item>\n                {t(\"general.time\")}: { moment(node.date).format(dateFormat) } { ' ' }\n                {moment(node.date + ' ' + node.scheduleItem.timeStart).format(timeFormat)}\n              </List.Item>\n              <List.Item>\n                {t(\"general.class\")}: {node.scheduleItem.organizationClasstype.name} \n              </List.Item>\n              <List.Item>\n                {t(\"general.location\")}: {node.scheduleItem.organizationLocationRoom.organizationLocation.name} \n              </List.Item>\n            </List>    \n          </p>,\n          msgSuccess: t('schedule.classes.class.attendance.delete_success'),\n          deleteFunction: deleteScheduleItemAttendance,\n          functionVariables: { \n            variables: {\n              input: {\n                id: node.id\n              }\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_CLASSES_QUERY, \n                variables: { account: account.id } },\n            ]\n          }\n        })\n    }}>\n      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountClassDelete))\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Card,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport BadgeBookingStatus from \"../../../ui/BadgeBookingStatus\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport AccountClassesBase from \"./AccountClassesBase\"\nimport AccountClassDelete from \"./AccountClassDelete\"\n\nimport { GET_ACCOUNT_CLASSES_QUERY } from \"./queries\"\n\n\nfunction AccountClasses({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const account_id = match.params.account_id\n  const cardTitle = t('relations.account.classes.title')\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_CLASSES_QUERY, {\n    variables: {'account': account_id},\n    fetchPolicy: \"network-only\"\n  })\n\n  // Loading\n  if (loading) return (\n    <AccountClassesBase>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>\n        </Card.Body>\n      </Card>\n    </AccountClassesBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountClassesBase>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('general.error_sad_smiley')}</p>\n          </Card.Body>\n        </Card>\n      </AccountClassesBase>\n    )\n  }\n\n  console.log(\"AccountClasses data:\")\n  console.log(data)\n  const account = data.account\n  const scheduleItemAttendances = data.scheduleItemAttendances\n  \n  // Empty list\n  if (!scheduleItemAttendances.edges.length) {\n    return (\n      <AccountClassesBase account={account}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('relations.account.classes.empty_list')}</p>\n          </Card.Body>\n        </Card>\n      </AccountClassesBase>\n    )\n  }\n\n  // Return populated list\n  return (\n    <AccountClassesBase account={account}>\n      <ContentCard \n        cardTitle={cardTitle}\n        pageInfo={scheduleItemAttendances.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: scheduleItemAttendances.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.scheduleItemAttendances.edges\n              const pageInfo = fetchMoreResult.scheduleItemAttendances.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new scheduleItemAttendances at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    scheduleItemAttendances: {\n                      __typename: previousResult.scheduleItemAttendances.__typename,\n                      edges: [ ...previousResult.scheduleItemAttendances.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.class')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.booking_status')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>  \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {scheduleItemAttendances.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                { console.log(node) }\n                { console.log(account) }\n                <Table.Col>\n                  { moment(node.date).format(dateFormat) } <br />\n                  <span className=\"text-muted\">\n                    {moment(node.date + ' ' + node.scheduleItem.timeStart).format(timeFormat)}\n                  </span>\n                </Table.Col>\n                <Table.Col>\n                  { node.scheduleItem.organizationClasstype.name }\n                </Table.Col>\n                <Table.Col>\n                  { node.scheduleItem.organizationLocationRoom.organizationLocation.name } <br />\n                  <span className=\"text-muted\">\n                    { node.scheduleItem.organizationLocationRoom.name }\n                  </span> \n                </Table.Col>\n                <Table.Col>\n                  <BadgeBookingStatus status={node.bookingStatus} />\n                </Table.Col>\n                <Table.Col>\n                  <AccountClassDelete account={account} node={node} />\n                </Table.Col>\n                {/* <Table.Col className=\"text-right\" key={v4()}>\n                  <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/edit/\" + node.id}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col> */}\n                {/* <Mutation mutation={DELETE_ACCOUNT_CLASSPASS} key={v4()}>\n                  {(deleteAccountClasspass, { data }) => (\n                    <Table.Col className=\"text-right\" key={v4()}>\n                      <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.delete')} \n                        href=\"\"\n                        onClick={() => {\n                          confirm_delete({\n                            t: t,\n                            msgConfirm: t(\"relations.account.classpasses.delete_confirm_msg\"),\n                            msgDescription: <p>{node.organizationClasspass.name} {node.dateStart}</p>,\n                            msgSuccess: t('relations.account.classpasses.deleted'),\n                            deleteFunction: deleteAccountClasspass,\n                            functionVariables: { variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, refetchQueries: [\n                              {query: GET_ACCOUNT_CLASSPASSES_QUERY, variables: { archived: archived, accountId: match.params.account_id }} \n                            ]}\n                          })\n                      }}>\n                        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                      </button>\n                    </Table.Col>\n                  )}\n                </Mutation> */}\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </AccountClassesBase>\n  )\n}\n\n        \nexport default withTranslation()(withRouter(AccountClasses))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_CLASSPASSES_QUERY = gql`\n  query AccountClasspasses($after: String, $before: String, $accountId: ID!) {\n    accountClasspasses(first: 15, before: $before, after: $after, account: $accountId) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationClasspass {\n            id\n            name\n          }\n          dateStart\n          dateEnd\n          classesRemainingDisplay\n          createdAt\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\nexport const GET_ACCOUNT_CLASSPASS_QUERY = gql`\n  query AccountClasspass($id: ID!, $accountId: ID!, $after: String, $before: String) {\n    accountClasspass(id:$id) {\n      id\n      organizationClasspass {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      note\n      createdAt\n    }\n    organizationClasspasses(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ClasspassInputValues($after: String, $before: String, $accountId: ID!) {\n    organizationClasspasses(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\nexport const CREATE_ACCOUNT_CLASSPASS = gql`\n  mutation CreateAccountClasspass($input: CreateAccountClasspassInput!) {\n    createAccountClasspass(input: $input) {\n      accountClasspass {\n        id\n        account {\n          id\n          firstName\n          lastName\n          email\n        }\n        organizationClasspass {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        note\n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT_CLASSPASS = gql`\nmutation UpdateAccountClasspass($input: UpdateAccountClasspassInput!) {\n  updateAccountClasspass(input: $input) {\n    accountClasspass {\n      id\n      account {\n        id\n        firstName\n        lastName\n        email\n      }\n      organizationClasspass {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      note\n    }\n  }\n}\n`\n\nexport const DELETE_ACCOUNT_CLASSPASS = gql`\n  mutation DeleteAccountClasspass($input: DeleteAccountClasspassInput!) {\n    deleteAccountClasspass(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Icon,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase'\n\nimport { GET_ACCOUNT_CLASSPASSES_QUERY, DELETE_ACCOUNT_CLASSPASS } from \"./queries\"\n\n\nfunction AccountClasspasses({t, match}) {\n  const accountId = match.params.account_id\n  const activeLink = \"classpasses\"\n  const cardTitle = t('relations.account.classpasses.title')\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"add\"\n    resource=\"accountclasspass\">\n      <Link to={`/relations/accounts/${accountId}/classpasses/add`}>\n        <Button color=\"primary btn-block mb-6\">\n          <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.classpasses.add')}\n        </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  const {loading, error, data, fetchMore} = useQuery(GET_ACCOUNT_CLASSPASSES_QUERY, {\n    variables: { accountId: accountId }\n  })\n  const [deleteAccountClasspass] = useMutation(DELETE_ACCOUNT_CLASSPASS)\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const account = data.account\n  const accountClasspasses = data.accountClasspasses\n\n  return (\n    <RelationsAccountProfileBase \n      user={account}\n      activeLink={activeLink}\n      sidebarButton={sidebarButton}\n    >\n      <ContentCard \n        cardTitle={t('relations.account.classpasses.title')}\n        pageInfo={accountClasspasses.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: accountClasspasses.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountClasspasses.edges\n              const pageInfo = fetchMoreResult.accountClasspasses.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountClasspasses at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    accountClasspasses: {\n                      __typename: previousResult.accountClasspasses.__typename,\n                      edges: [ ...previousResult.accountClasspasses.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.classes_remaining')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader> \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {accountClasspasses.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.organizationClasspass.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dateStart}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dateEnd}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.classesRemainingDisplay}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"relations.account.classpasses.delete_confirm_msg\"),\n                          msgDescription: <p>{node.organizationClasspass.name} {node.dateStart}</p>,\n                          msgSuccess: t('relations.account.classpasses.deleted'),\n                          deleteFunction: deleteAccountClasspass,\n                          functionVariables: { variables: {\n                            input: {\n                              id: node.id\n                            }\n                          }, refetchQueries: [\n                            {query: GET_ACCOUNT_CLASSPASSES_QUERY, variables: { accountId: accountId }} \n                          ]}\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>    \n    </RelationsAccountProfileBase>\n  )\n}\n\n        \nexport default withTranslation()(withRouter(AccountClasspasses))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const CLASSPASS_SCHEMA = Yup.object().shape({\n  organizationClasspass: Yup.string()\n    .required(t('yup.field_required')),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .nullable(),\n  note: Yup.string(),\n})\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountClasspassForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, returnUrl }) => (\n  <FoForm>\n    <Card.Body> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.classpass')}>\n            <Field component=\"select\" \n                  name=\"organizationClasspass\" \n                  className={(errors.organizationClasspass) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n              {inputData.organizationClasspasses.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"organizationClasspass\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.date_start')}>\n            <CSDatePicker \n              className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n              selected={values.dateStart}\n              onChange={(date) => {\n                setFieldValue(\"dateStart\", date)\n                setFieldTouched(\"dateEnd\", true)\n              }}\n              onBlur={() => setFieldTouched(\"dateStart\", true)}\n            />\n            <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.date_end')}>\n            <CSDatePicker \n              selected={values.dateEnd}\n              onChange={(date) => {\n                setFieldValue(\"dateEnd\", date)\n                setFieldTouched(\"dateEnd\", true)\n              }}\n              onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              placeholderText={t('schedule.classes.placeholder_enddate')}\n            />\n            <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        </Grid.Row>\n      <Form.Group label={t('general.note')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"note\"\n          initialValue={values.note}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldValue(\"note\", e.target.getContent())\n            setFieldTouched(\"note\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Button\n          type=\"button\" \n          color=\"link\" \n          onClick={() => history.push(returnUrl)}\n        >\n          {t('general.cancel')}\n        </Button>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountClasspassForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_CLASSPASSES_QUERY, GET_INPUT_VALUES_QUERY, CREATE_ACCOUNT_CLASSPASS } from './queries'\nimport { CLASSPASS_SCHEMA } from './yupSchema'\nimport AccountClasspassForm from './AccountClasspassForm'\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase';\n\nimport {\n  Icon,\n  Button,\n  Card,\n} from \"tabler-react\";\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\n\n\nfunction AccountClasspassAdd({t, match, history}) {\n  const accountId = match.params.account_id\n  const activeLink = \"classpasses\"\n  const cardTitle = t('relations.account.classpasses.title_add')\n  const returnUrl = `/relations/accounts/${accountId}/classpasses`\n  \n  const {loading, error, data} = useQuery(GET_INPUT_VALUES_QUERY, { \n    variables: { accountId: accountId }\n  })\n  const [createAccountClasspass] = useMutation(CREATE_ACCOUNT_CLASSPASS)\n\n  const sidebarButton = <Link to={returnUrl}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n  \n  const inputData = data\n  const account = data.account\n\n  return (\n    <RelationsAccountProfileBase\n      activeLink={activeLink}\n      user={account}\n      sidebarButton={sidebarButton} \n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <Formik\n            initialValues={{ \n              organizationClasspass: \"\",\n              dateStart: new Date(),\n              note: \"\",\n            }}\n            validationSchema={CLASSPASS_SCHEMA}\n            onSubmit={(values, { setSubmitting }, errors) => {\n                console.log('submit values:')\n                console.log(values)\n                console.log(errors)\n\n                \n                let dateEnd\n                if (values.dateEnd) {\n                  dateEnd = dateToLocalISO(values.dateEnd)\n                } else {\n                  dateEnd = values.dateEnd\n                }\n\n                createAccountClasspass({ variables: {\n                  input: {\n                    account: accountId, \n                    organizationClasspass: values.organizationClasspass,\n                    dateStart: dateToLocalISO(values.dateStart),\n                    dateEnd: dateEnd,\n                    note: values.note,\n                  }\n                }, refetchQueries: [\n                    {query: GET_ACCOUNT_CLASSPASSES_QUERY, variables: { accountId: accountId}}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    const classpassId = data.createAccountClasspass.accountClasspass.id\n                    history.push(`/relations/accounts/${accountId}/classpasses/edit/${classpassId}`)\n                    toast.success((t('relations.account.classpasses.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n              <AccountClasspassForm\n                inputData={inputData}\n                isSubmitting={isSubmitting}\n                setFieldValue={setFieldValue}\n                setFieldTouched={setFieldTouched}\n                errors={errors}\n                values={values}\n                returnUrl={returnUrl}\n              >\n                {console.log(errors)}\n              </AccountClasspassForm>\n            )}\n          </Formik>\n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  ) \n}\n\nexport default withTranslation()(withRouter(AccountClasspassAdd))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_CLASSPASSES_QUERY, GET_ACCOUNT_CLASSPASS_QUERY, UPDATE_ACCOUNT_CLASSPASS } from './queries'\nimport { CLASSPASS_SCHEMA } from './yupSchema'\nimport AccountClasspassForm from './AccountClasspassForm'\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase';\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport ProfileMenu from \"../ProfileMenu\"\n\n\nfunction AccountClasspassEdit({t, history, match}) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const activeLink = \"classpasses\"\n  const cardTitle = t('relations.account.classpasses.title_edit')\n  const returnUrl = `/relations/accounts/${accountId}/classpasses`\n  \n  const {loading, error, data} = useQuery(GET_ACCOUNT_CLASSPASS_QUERY, {\n    variables: { id: id, accountId: accountId }\n  })\n  const [updateClasspass] = useMutation(UPDATE_ACCOUNT_CLASSPASS)\n\n  const sidebarButton = <Link to={returnUrl}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const inputData = data\n  const account = data.account\n  const initialdata = data.accountClasspass\n\n    // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  let dateEnd = null\n  if (initialdata.dateStart) {\n    dateStart = new Date(initialdata.dateStart)\n  }\n  if (initialdata.dateEnd) {\n    dateEnd = new Date(initialdata.dateEnd)\n  }\n\n  return (\n    <RelationsAccountProfileBase\n      activeLink={activeLink}\n      user={account}\n      sidebarButton={sidebarButton} \n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <Formik\n            initialValues={{ \n              organizationClasspass: initialdata.organizationClasspass.id,\n              dateStart: dateStart,\n              dateEnd: dateEnd,\n              note: initialdata.note,\n            }}\n            validationSchema={CLASSPASS_SCHEMA}\n            onSubmit={(values, { setSubmitting }, errors) => {\n                console.log('submit values:')\n                console.log(values)\n                console.log(errors)\n\n                \n                let dateEnd\n                if (values.dateEnd) {\n                  dateEnd = dateToLocalISO(values.dateEnd)\n                } else {\n                  dateEnd = values.dateEnd\n                }\n\n                updateClasspass({ variables: {\n                  input: {\n                    id: id,\n                    organizationClasspass: values.organizationClasspass,\n                    dateStart: dateToLocalISO(values.dateStart),\n                    dateEnd: dateEnd,\n                    note: values.note,\n                  }\n                }, refetchQueries: [\n                    {query: GET_ACCOUNT_CLASSPASSES_QUERY, variables: { accountId: accountId }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    toast.success((t('relations.account.classpasses.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n              <AccountClasspassForm\n                inputData={inputData}\n                isSubmitting={isSubmitting}\n                setFieldValue={setFieldValue}\n                setFieldTouched={setFieldTouched}\n                errors={errors}\n                values={values}\n                returnUrl={returnUrl}\n              >\n                {console.log(errors)}\n              </AccountClasspassForm>\n            )}\n          </Formik>\n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountClasspassEdit))\n","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport { GET_ACCOUNT_QUERY } from '../queries'\n\n\nfunction AccountFinancePaymentBatchcAtegoryItemsBase({ t, history, match, children, showBack=false }) {\n  const accountId = match.params.account_id\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_QUERY, {\n    variables: { id: accountId }\n  })\n\n  if (loading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (error) {\n    console.log(error)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n\n  const account = data.account\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.firstName + \" \" + account.lastName}>\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              {!(showBack) ?\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"accountfinancepaymentbatchcategoryitem\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/finance_payment_batch_category_items/add`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.finance_payment_batch_category_items.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              {(showBack) ?\n                <HasPermissionWrapper permission=\"view\"\n                                      resource=\"accountfinancepaymentbatchcategoryitem\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/finance_payment_batch_category_items/`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\"\n              }\n              <ProfileMenu \n                activeLink='finance_payment_batch_category_item'\n                accountId={accountId}\n              /> \n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}    \n        \nexport default withTranslation()(withRouter(AccountFinancePaymentBatchcAtegoryItemsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY = gql`\n  query AccountFinancePaymentBatchCategoryItems($after: String, $before: String, $account: ID!) {\n    accountFinancePaymentBatchCategoryItems(first: 15, before: $before, after: $after, account: $account) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          financePaymentBatchCategory {\n            id\n            name\n          }\n          year\n          month\n          amountDisplay\n          description\n        }\n      }\n    }\n  }\n`\n\nexport const GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_QUERY = gql`\n  query AccountFinancePaymentBatchCategoryItem($id: ID!) {\n    accountFinancePaymentBatchCategoryItem(id: $id) {\n      id\n      financePaymentBatchCategory {\n        id\n        name\n      }\n      year\n      month\n      amount\n      description\n    }\n    financePaymentBatchCategories(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          batchCategoryType\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query AccountPaymentBatchCategoryItemInputValues($after: String, $before: String) {\n    financePaymentBatchCategories(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          batchCategoryType\n        }\n      }\n    }\n  }\n`\n\nexport const CREATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM = gql`\n  mutation CreateAccountFinancePaymentBatchCategoryItem($input: CreateAccountFinancePaymentBatchCategoryItemInput!) {\n    createAccountFinancePaymentBatchCategoryItem(input: $input) {\n      accountFinancePaymentBatchCategoryItem {\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM = gql`\n  mutation UpdateAccountFinancePaymentBatchCategoryItem($input: UpdateAccountFinancePaymentBatchCategoryItemInput!) {\n    updateAccountFinancePaymentBatchCategoryItem(input: $input) {\n      accountFinancePaymentBatchCategoryItem {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM = gql`\n  mutation DeleteAccountFinancePaymentBatchCategoryItem($input: DeleteAccountFinancePaymentBatchCategoryItemInput!) {\n    deleteAccountFinancePaymentBatchCategoryItem(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport AccountFinancePaymentBatchCategoryItemsBase from \"./AccountFinancePaymentBatchCategoryItemsBase\"\n\nimport { \n  GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY,\n  DELETE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM\n} from \"./queries\"\n\n\n\nfunction AccountFinancePaymentBatchCategoryItems({ t, history, match }) {\n  const accountId = match.params.account_id\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, {\n    variables: { account: accountId }\n  })\n  const [deleteAccountFinancePaymentBatchCategoryItem] = useMutation(DELETE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM)\n\n  if (loading) return (\n    <AccountFinancePaymentBatchCategoryItemsBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AccountFinancePaymentBatchCategoryItemsBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountFinancePaymentBatchCategoryItemsBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AccountFinancePaymentBatchCategoryItemsBase>\n    )\n  }\n\n  let batchCategoryItems = data.accountFinancePaymentBatchCategoryItems\n\n  return (\n    <AccountFinancePaymentBatchCategoryItemsBase>\n      <ContentCard \n        cardTitle={t('relations.account.finance_payment_batch_category_items.title')}\n        hasCardBody={false}\n        pageInfo={batchCategoryItems.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: batchCategoryItems.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountFinancePaymentBatchCategoryItems.edges\n              const pageInfo = fetchMoreResult.accountFinancePaymentBatchCategoryItems.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountClasspasses at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    batchCategoryItems: {\n                      __typename: previousResult.accountFinancePaymentBatchCategoryItems.__typename,\n                      edges: [ ...previousResult.accountFinancePaymentBatchCategoryItems.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table cards>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.year')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.month')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.amount')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.category')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader> \n              <Table.ColHeader></Table.ColHeader> \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {batchCategoryItems.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.year}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.month}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.amountDisplay}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.financePaymentBatchCategory.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.description.replace(/(.{28})..+/, \"$1...\")}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={`/relations/accounts/${match.params.account_id}/finance_payment_batch_category_items/edit/${node.id}`}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col>\n                    <button \n                      className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"relations.account.finance_payment_batch_category_items.delete_confirm_msg\"),\n                          msgDescription: <p><br />{node.financePaymentBatchCategory.name} {node.amountDisplay} <br/>{node.description}</p>,\n                          msgSuccess: t('relations.account.finance_payment_batch_category_items.deleted'),\n                          deleteFunction: deleteAccountFinancePaymentBatchCategoryItem,\n                          functionVariables: { variables: {\n                            input: {\n                              id: node.id\n                            }\n                          }, refetchQueries: [\n                            {query: GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, variables: { \n                              account: accountId\n                            }} \n                          ]}\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </AccountFinancePaymentBatchCategoryItemsBase>\n  )\n}\n      \n        \nexport default withTranslation()(withRouter(AccountFinancePaymentBatchCategoryItems))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA = Yup.object().shape({\n  financePaymentBatchCategory: Yup.string()\n    .required(t('yup.field_required')),\n  year: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  month: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  amount: Yup.number()\n    .required(t('yup.field_required')),\n  description: Yup.string(),\n})\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\nimport { Link } from \"react-router-dom\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountFinancePaymentBatchCategoryItemsForm = ({ t, history, inputData, isSubmitting, errors, returnUrl }) => (\n  <FoForm>\n    <Card.Body> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.year')} >\n            <Field type=\"text\" \n                  name=\"year\" \n                  className={(errors.year) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"year\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.month')} >\n            <Field type=\"text\" \n                  name=\"month\" \n                  className={(errors.month) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"month\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.amount')} >\n            <Field type=\"text\" \n                  name=\"amount\" \n                  className={(errors.amount) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"amount\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.category')}>\n            <Field component=\"select\" \n                  name=\"financePaymentBatchCategory\" \n                  className={(errors.financePaymentBatchCategory) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n              {inputData.financePaymentBatchCategories.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"financePaymentBatchCategory\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.description')} >\n            <Field type=\"text\" \n                  name=\"description\" \n                  className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button\n            type=\"button\" \n            color=\"link\" \n          >\n            {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountFinancePaymentBatchCategoryItemsForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { \n  GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, \n  CREATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM,\n  GET_INPUT_VALUES_QUERY \n} from './queries'\nimport { ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA } from './yupSchema'\nimport AccountFinancePaymentBatchCategoryItemsForm from './AccountFinancePaymentBatchCategoryItemsForm'\n\nimport {\n  Card,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport AccountFinancePaymentBatchCategoryItemsBase from \"./AccountFinancePaymentBatchCategoryItemsBase\"\n\nfunction AccountFinancePaymentBatchCategoryItemAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const returnUrl = `/relations/accounts/${accountId}/finance_payment_batch_category_items`\n\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES_QUERY)\n  const [addAccountFinancePaymentBatchCategoryItem] = useMutation(\n    CREATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM\n  )\n\n  if (loading) {\n    return (\n      <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n        <Card title={t('relations.account.finance_payment_batch_category_items.title_add')}>\n          <Card.Body>\n            {t(\"general.loading_with_dots\")}\n          </Card.Body>\n        </Card>\n      </AccountFinancePaymentBatchCategoryItemsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n        <Card title={t('relations.account.finance_payment_batch_category_items.title_add')}>\n          <Card.Body>\n            {t(\"relations.account.finance_payment_batch_category_items.error_loading\")}\n          </Card.Body>\n        </Card>\n      </AccountFinancePaymentBatchCategoryItemsBase>\n    )\n  }\n\n  const inputData = data\n\n  return (\n    <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n      <Card title={t('relations.account.finance_payment_batch_category_items.title_add')}>\n        <Formik\n          initialValues={{ \n            financePaymentBatchCategory: \"\",\n            year: new Date().getFullYear(),\n            month: new Date().getMonth() + 1,\n            amount: \"\",\n            description: \"\"\n          }}\n          validationSchema={ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA}\n          onSubmit={(values, { setSubmitting }, errors) => {\n              console.log('submit values:')\n              console.log(values)\n              console.log(errors)\n\n              addAccountFinancePaymentBatchCategoryItem({ variables: {\n                input: {\n                  account: accountId, \n                  amount: values.amount,\n                  year: values.year,\n                  month: values.month,\n                  financePaymentBatchCategory: values.financePaymentBatchCategory,\n                  description: values.description\n                }\n              }, refetchQueries: [\n                  {query: GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, variables: {account: accountId}}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('relations.account.finance_payment_batch_category_items.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <AccountFinancePaymentBatchCategoryItemsForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              errors={errors}\n              returnUrl={returnUrl}\n            >\n              {console.log(errors)}\n            </AccountFinancePaymentBatchCategoryItemsForm>\n          )}\n        </Formik>\n      </Card>\n    </AccountFinancePaymentBatchCategoryItemsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountFinancePaymentBatchCategoryItemAdd))\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { \n  GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, \n  GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_QUERY, \n  UPDATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM\n} from './queries'\nimport { ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA } from './yupSchema'\nimport AccountFinancePaymentBatchCategoryItemsForm from './AccountFinancePaymentBatchCategoryItemsForm'\n\nimport {\n  Card,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport AccountFinancePaymentBatchCategoryItemsBase from \"./AccountFinancePaymentBatchCategoryItemsBase\"\n\nfunction AccountFinancePaymentBatchCategoryItemEdit({ t, history, match }) {\n  const accountId = match.params.account_id\n  const accountFinancePaymentBatchCategoryItemId = match.params.id\n  const returnUrl = `/relations/accounts/${accountId}/finance_payment_batch_category_items`\n  const cardTitle = t('relations.account.finance_payment_batch_category_items.title_edit')\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_QUERY, { variables: {\n    id: accountFinancePaymentBatchCategoryItemId\n  }})\n  const [updateAccountFinancePaymentBatchCategoryItem] = useMutation(\n    UPDATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM\n  )\n\n  if (loading) {\n    return (\n      <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            {t(\"general.loading_with_dots\")}\n          </Card.Body>\n        </Card>\n      </AccountFinancePaymentBatchCategoryItemsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            {t(\"relations.account.finance_payment_batch_category_items.error_loading\")}\n          </Card.Body>\n        </Card>\n      </AccountFinancePaymentBatchCategoryItemsBase>\n    )\n  }\n\n  const inputData = data\n  const initialValues = data.accountFinancePaymentBatchCategoryItem\n\n  return (\n    <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            financePaymentBatchCategory: initialValues.financePaymentBatchCategory.id,\n            year: initialValues.year,\n            month: initialValues.month,\n            amount: initialValues.amount,\n            description: initialValues.description\n          }}\n          validationSchema={ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA}\n          onSubmit={(values, { setSubmitting }, errors) => {\n              console.log('submit values:')\n              console.log(values)\n              console.log(errors)\n\n              updateAccountFinancePaymentBatchCategoryItem({ variables: {\n                input: {\n                  id: accountFinancePaymentBatchCategoryItemId, \n                  amount: values.amount,\n                  year: values.year,\n                  month: values.month,\n                  financePaymentBatchCategory: values.financePaymentBatchCategory,\n                  description: values.description\n                }\n              }, refetchQueries: [\n                  {query: GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, variables: {account: accountId}}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('relations.account.finance_payment_batch_category_items.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <AccountFinancePaymentBatchCategoryItemsForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              errors={errors}\n              returnUrl={returnUrl}\n            >\n              {console.log(errors)}\n            </AccountFinancePaymentBatchCategoryItemsForm>\n          )}\n        </Formik>\n      </Card>\n    </AccountFinancePaymentBatchCategoryItemsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountFinancePaymentBatchCategoryItemEdit))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_INVOICES_QUERY = gql`\n  query FinanceInvoices($after: String, $before: String, $status: String, $accountId: ID!) {\n    financeInvoices(first: 15, before: $before, after: $after, status: $status, account: $accountId) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          invoiceNumber\n          status\n          summary\n          relationCompany\n          relationContactName\n          dateSent\n          dateDue\n          total\n          totalDisplay\n          balance\n          balanceDisplay\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      fullName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\nexport const GET_ACCOUNT_SUBSCRIPTION_QUERY = gql`\n  query AccountSubscription($id: ID!, $accountId: ID!, $after: String, $before: String) {\n    accountSubscription(id:$id) {\n      id\n      organizationSubscription {\n        id\n        name\n      }\n      financePaymentMethod {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      note\n      registrationFeePaid\n      createdAt\n    }\n    organizationSubscriptions(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InvoiceInputValues($after: String, $before: String, $accountId: ID!) {\n    financeInvoiceGroups(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\nexport const CREATE_ACCOUNT_INVOICE = gql`\n  mutation CreateFinanceInvoice($input: CreateFinanceInvoiceInput!) {\n    createFinanceInvoice(input: $input) {\n      financeInvoice {\n        id\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nfunction AccountInvoicesBase({ t, match, history, children, account={} }) {\n  const accountId = match.params.account_id\n  let pageHeader\n  if (account) {\n    pageHeader = account.fullName\n  }\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={pageHeader} >\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financeinvoice\">\n                  <Link to={`/relations/accounts/${accountId}/invoices/add`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.invoices.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              <ProfileMenu \n                activeLink='invoices' \n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountInvoicesBase))\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport moment from 'moment'\n\nimport {\n  Card,\n  Icon,\n  Button,\n  Table,\n  Text\n} from \"tabler-react\";\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport { GET_ACCOUNT_INVOICES_QUERY } from \"./queries\"\nimport CSLS from \"../../../../tools/cs_local_storage\"\nimport { DELETE_FINANCE_INVOICE } from \"../../../finance/invoices/queries\"\nimport FinanceInvoiceStatus from \"../../../ui/FinanceInvoiceStatus\"\nimport AccountInvoicesBase from './AccountInvoicesBase'\n\n\nfunction AccountInvoices({ t, location, match, history }) {\n  const accountId = match.params.account_id\n  const cardTitle = t('relations.account.invoices.title')\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_INVOICES_QUERY, {\n    variables: {accountId: accountId},\n    fetchPolicy: \"network-only\"\n  })\n  const [deleteFinanceInvoice] = useMutation(DELETE_FINANCE_INVOICE)\n\n  // Loading\n  if (loading) return (\n    <AccountInvoicesBase>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>\n        </Card.Body>\n      </Card>\n    </AccountInvoicesBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountInvoicesBase>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('general.error_sad_smiley')}</p>\n          </Card.Body>\n        </Card>\n      </AccountInvoicesBase>\n    )\n  }\n\n  // Set back location for edit invoice\n  localStorage.setItem(CSLS.FINANCE_INVOICES_EDIT_RETURN, location.pathname)\n\n  let financeInvoices = data.financeInvoices\n  const account = data.account\n  \n  return (\n    <AccountInvoicesBase account={account}>\n      <ContentCard \n        cardTitle={cardTitle}\n        pageInfo={financeInvoices.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: financeInvoices.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.financeInvoices.edges\n              const pageInfo = fetchMoreResult.financeInvoices.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new financeInvoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    financeInvoices: {\n                      __typename: previousResult.financeInvoices.__typename,\n                      edges: [ ...previousResult.financeInvoices.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoices.invoice_number')} & {t('finance.invoices.summary')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoices.date')} & {t('finance.invoices.due')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.balance')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {financeInvoices.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    <FinanceInvoiceStatus status={node.status} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.invoiceNumber} <br />\n                    <Text.Small color=\"gray\">{node.summary.trunc(35)}</Text.Small>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {moment(node.dateSent).format('LL')} <br />\n                    <Text.Small color=\"gray\">{moment(node.dateDue).format('LL')}</Text.Small>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.totalDisplay}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.balanceDisplay}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Button className='btn-sm' \n                            onClick={() => history.push(\"/finance/invoices/edit/\" + node.id)}\n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"finance.invoices.delete_confirm_msg\"),\n                          msgDescription: <p>{node.invoiceNumber}</p>,\n                          msgSuccess: t('finance.invoices.deleted'),\n                          deleteFunction: deleteFinanceInvoice,\n                          functionVariables: { \n                            variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, \n                            refetchQueries: [\n                              {query: GET_ACCOUNT_INVOICES_QUERY, variables: {accountId: accountId}},\n                            ]\n                          }\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </AccountInvoicesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountInvoices))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountInvoiceAddForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, return_url }) => (\n  <FoForm>\n    <Card.Body>\n      <Form.Group label={t('general.finance_invoice_group')}>\n        <Field component=\"select\" \n              name=\"financeInvoiceGroup\" \n              className={(errors.financeInvoiceGroup) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\">\n          <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n          {inputData.financeInvoiceGroups.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name}</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"financeInvoiceGroup\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.summary')}>\n        <Field type=\"text\" \n                name=\"summary\" \n                className={(errors.summary) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"summary\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={return_url}>\n          <Button\n            type=\"button\" \n            color=\"link\" \n          >\n              {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountInvoiceAddForm))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const SUBSCRIPTION_SCHEMA = Yup.object().shape({\n  organizationSubscription: Yup.string()\n    .required(t('yup.field_required')),\n  financePaymentMethod: Yup.string(),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .nullable(),\n  registrationFeePaid: Yup.boolean(),\n  note: Yup.string(),\n})\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTIONS_QUERY, GET_INPUT_VALUES_QUERY, CREATE_ACCOUNT_INVOICE } from './queries'\nimport { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport AccountInvoiceAddForm from './AccountInvoiceAddForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport ProfileMenu from \"../ProfileMenu\"\n\n\n\nfunction AccountInvoiceAdd({ t, match, history }) {\n  const account_id = match.params.account_id\n  const return_url = \"/relations/accounts/\" + account_id + '/invoices'\n  const { loading: queryLoading, error: queryError, data: queryData } = useQuery(\n    GET_INPUT_VALUES_QUERY, {\n      variables: {\n        accountId: account_id\n      }\n    }\n  )\n  const [createInvoice, { data }] = useMutation(CREATE_ACCOUNT_INVOICE, {\n    // onCompleted = () => history.push('/finance/invoices/edit/')\n  }) \n\n  // Query\n  // Loading\n  if (queryLoading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (queryError) {\n    console.log(queryError)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n  \n  console.log(queryData)\n  const account = queryData.account\n\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.firstName + \" \" + account.lastName} />\n          <Grid.Row>\n              <Grid.Col md={9}>\n                <Card>\n                  <Card.Header>\n                    <Card.Title>{t('relations.account.invoices.title_add')}</Card.Title>\n                  </Card.Header>\n                  <Formik\n                    initialValues={{\n                      financeInvoiceGroup: \"\",\n                      summary: \"\"\n                    }}\n                    // validationSchema={INVOICE_GROUP_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n                      console.log('submit values:')\n                      console.log(values)\n\n                      createInvoice({ variables: {\n                        input: {\n                          account: account_id, \n                          financeInvoiceGroup: values.financeInvoiceGroup,\n                          summary: values.summary\n                        }\n                      }, refetchQueries: [\n                      ]})\n                      .then(({ data }) => {\n                          console.log('got data', data)\n                          toast.success((t('relations.account.invoices.title_add')), {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          history.push('/finance/invoices/edit/' + data.createFinanceInvoice.financeInvoice.id)\n                          setSubmitting(false)\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error)\n                          setSubmitting(false)\n                        })\n                      }}\n                  >\n                    {({ isSubmitting, errors, values, submitForm, setFieldTouched, setFieldValue }) => (\n                      <AccountInvoiceAddForm\n                        inputData={queryData}\n                        isSubmitting={isSubmitting}\n                        errors={errors}\n                        values={values}\n                        submitForm={submitForm}\n                        setFieldTouched={setFieldTouched}\n                        setFieldValue={setFieldValue}\n                        return_url={return_url}\n                      >\n                      </AccountInvoiceAddForm>   \n                    )}\n                  </Formik>\n                </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"accountsubscription\">\n                  <Link to={return_url}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                <ProfileMenu \n                  activeLink='invoices'\n                  account_id={match.params.account_id}\n                />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountInvoiceAdd))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_MEMBERSHIPS_QUERY = gql`\n  query AccountMemberships($after: String, $before: String, $accountId: ID!) {\n    accountMemberships(first: 15, before: $before, after: $after, account: $accountId) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationMembership {\n            id\n            name\n          }\n          financePaymentMethod {\n            id\n            name\n          }\n          dateStart\n          dateEnd\n          createdAt\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\nexport const GET_ACCOUNT_MEMBERSHIP_QUERY = gql`\n  query AccountMembership($id: ID!, $accountId: ID!, $after: String, $before: String, $archived: Boolean!) {\n    accountMembership(id:$id) {\n      id\n      organizationMembership {\n        id\n        name\n      }\n      financePaymentMethod {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      note\n      createdAt\n    }\n    organizationMemberships(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query MembershipInputValues($after: String, $before: String, $archived: Boolean!, $accountId: ID!) {\n    organizationMemberships(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport { GET_ACCOUNT_MEMBERSHIPS_QUERY } from \"./queries\"\n\nconst DELETE_ACCOUNT_MEMBERSHIP = gql`\n  mutation DeleteAccountMembership($input: DeleteAccountMembershipInput!) {\n    deleteAccountMembership(input: $input) {\n      ok\n    }\n  }\n`\n\n\nconst AccountMemberships = ({ t, history, match, archived=false }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Query query={GET_ACCOUNT_MEMBERSHIPS_QUERY} variables={{ archived: archived, accountId: match.params.account_id }}> \n        {({ loading, error, data, refetch, fetchMore }) => {\n          // Loading\n          if (loading) return <p>{t('general.loading_with_dots')}</p>\n          // Error\n          if (error) {\n            console.log(error)\n            return <p>{t('general.error_sad_smiley')}</p>\n          }\n\n          const account = data.account\n          const accountMemberships = data.accountMemberships\n\n          return (\n            <Container>\n              <Page.Header title={account.firstName + \" \" + account.lastName} >\n                <RelationsAccountsBack />\n              </Page.Header>\n              <Grid.Row>\n                <Grid.Col md={9}>\n                  <ContentCard \n                    cardTitle={t('relations.account.memberships.title')}\n                    pageInfo={accountMemberships.pageInfo}\n                    onLoadMore={() => {\n                      fetchMore({\n                        variables: {\n                          after: accountMemberships.pageInfo.endCursor\n                        },\n                        updateQuery: (previousResult, { fetchMoreResult }) => {\n                          const newEdges = fetchMoreResult.accountMemberships.edges\n                          const pageInfo = fetchMoreResult.accountMemberships.pageInfo\n\n                          return newEdges.length\n                            ? {\n                                // Put the new accountMemberships at the end of the list and update `pageInfo`\n                                // so we have the new `endCursor` and `hasNextPage` values\n                                accountMemberships: {\n                                  __typename: previousResult.accountMemberships.__typename,\n                                  edges: [ ...previousResult.accountMemberships.edges, ...newEdges ],\n                                  pageInfo\n                                }\n                              }\n                            : previousResult\n                        }\n                      })\n                    }} \n                  >\n                    <Table>\n                      <Table.Header>\n                        <Table.Row key={v4()}>\n                          <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                          <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                          <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                          <Table.ColHeader>{t('general.payment_method')}</Table.ColHeader>\n                          <Table.ColHeader></Table.ColHeader> \n                        </Table.Row>\n                      </Table.Header>\n                      <Table.Body>\n                          {accountMemberships.edges.map(({ node }) => (\n                            <Table.Row key={v4()}>\n                              <Table.Col key={v4()}>\n                                {node.organizationMembership.name}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.dateStart}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.dateEnd}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {(node.financePaymentMethod) ? node.financePaymentMethod.name : \"\"}\n                              </Table.Col>\n                              <Table.Col className=\"text-right\" key={v4()}>\n                                <Link to={\"/relations/accounts/\" + match.params.account_id + \"/memberships/edit/\" + node.id}>\n                                  <Button className='btn-sm' \n                                          color=\"secondary\">\n                                    {t('general.edit')}\n                                  </Button>\n                                </Link>\n                              </Table.Col>\n                              <Mutation mutation={DELETE_ACCOUNT_MEMBERSHIP} key={v4()}>\n                                {(deleteAccountMembership, { data }) => (\n                                  <Table.Col className=\"text-right\" key={v4()}>\n                                    <button className=\"icon btn btn-link btn-sm\" \n                                      title={t('general.delete')} \n                                      href=\"\"\n                                      onClick={() => {\n                                        confirm_delete({\n                                          t: t,\n                                          msgConfirm: t(\"relations.account.memberships.delete_confirm_msg\"),\n                                          msgDescription: <p>{node.organizationMembership.name} {node.dateStart}</p>,\n                                          msgSuccess: t('relations.account.memberships.deleted'),\n                                          deleteFunction: deleteAccountMembership,\n                                          functionVariables: { variables: {\n                                            input: {\n                                              id: node.id\n                                            }\n                                          }, refetchQueries: [\n                                            {query: GET_ACCOUNT_MEMBERSHIPS_QUERY, variables: { archived: archived, accountId: match.params.account_id }} \n                                          ]}\n                                        })\n                                    }}>\n                                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                                    </button>\n                                  </Table.Col>\n                                )}\n                              </Mutation>\n                            </Table.Row>\n                          ))}\n                      </Table.Body>\n                    </Table>\n                  </ContentCard>\n                </Grid.Col>\n                <Grid.Col md={3}>\n                  <ProfileCardSmall user={account}/>\n                  <HasPermissionWrapper permission=\"add\"\n                                        resource=\"accountmembership\">\n                    <Link to={\"/relations/accounts/\" + match.params.account_id + \"/memberships/add\"}>\n                      <Button color=\"primary btn-block mb-6\">\n                              {/* //  onClick={() => history.push(\"/organization/memberships/add\")}> */}\n                        <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.memberships.add')}\n                      </Button>\n                    </Link>\n                  </HasPermissionWrapper>\n                  <ProfileMenu \n                    activeLink='memberships' \n                    account_id={match.params.account_id}\n                  />\n                </Grid.Col>\n              </Grid.Row>\n            </Container>\n          )\n        }}\n      </Query>\n    </div>\n  </SiteWrapper>\n)\n      \n        \nexport default withTranslation()(withRouter(AccountMemberships))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const MEMBERSHIP_SCHEMA = Yup.object().shape({\n  organizationMembership: Yup.string()\n    .required(t('yup.field_required')),\n  financePaymentMethod: Yup.string(),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  // dateEnd: Yup.date()\n  //   .nullable(),\n  note: Yup.string(),\n})\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountMembershipForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, return_url }) => (\n  <FoForm>\n    <Card.Body> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.membership')}>\n            <Field component=\"select\" \n                  name=\"organizationMembership\" \n                  className={(errors.organizationMembership) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n              {inputData.organizationMemberships.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"organizationMembership\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.payment_method')}>\n            <Field component=\"select\" \n                  name=\"financePaymentMethod\" \n                  className={(errors.financePaymentMethod) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}></option>\n              {inputData.financePaymentMethods.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"financePaymentMethod\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row> \n      <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={(values.frequencyType == \"SPECIFIC\") ? t('general.date') : t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateEnd\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n            <Grid.Col>\n              <Form.Group label={t('general.date_end')}>\n                <CSDatePicker \n                  selected={values.dateEnd}\n                  onChange={(date) => {\n                    setFieldValue(\"dateEnd\", date)\n                    setFieldTouched(\"dateEnd\", true)\n                  }}\n                  onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                  placeholderText={t('schedule.classes.placeholder_enddate')}\n                />\n                <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          }\n        </Grid.Row>\n      <Form.Group label={t('general.note')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"note\"\n          initialValue={values.note}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldValue(\"note\", e.target.getContent())\n            setFieldTouched(\"note\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Button\n          type=\"button\" \n          color=\"link\" \n          onClick={() => history.push(return_url)}\n        >\n            {t('general.cancel')}\n        </Button>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountMembershipForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_MEMBERSHIPS_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { MEMBERSHIP_SCHEMA } from './yupSchema'\nimport AccountMembershipForm from './AccountMembershipForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport ProfileMenu from \"../ProfileMenu\"\n\n\nconst CREATE_ACCOUNT_MEMBERSHIP = gql`\n  mutation CreateAccountMembership($input: CreateAccountMembershipInput!) {\n    createAccountMembership(input: $input) {\n      accountMembership {\n        id\n        account {\n          id\n          firstName\n          lastName\n          email\n        }\n        organizationMembership {\n          id\n          name\n        }\n        financePaymentMethod {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        note     \n      }\n    }\n  }\n`\n\n\nclass AccountMembershipAdd extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Account membership add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const history = this.props.history\n    const match = this.props.match\n    const account_id = match.params.account_id\n    const return_url = \"/relations/accounts/\" + account_id + \"/memberships\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n        <Query query={GET_INPUT_VALUES_QUERY} variables = {{archived: false, accountId: account_id}} >\n          {({ loading, error, data, refetch }) => {\n            // Loading\n            if (loading) return <p>{t('general.loading_with_dots')}</p>\n            // Error\n            if (error) {\n              console.log(error)\n              return <p>{t('general.error_sad_smiley')}</p>\n            }\n            \n            console.log('query data')\n            console.log(data)\n            const inputData = data\n            const account = data.account\n\n            return (\n              <Container>\n               <Page.Header title={account.firstName + \" \" + account.lastName} />\n               <Grid.Row>\n                  <Grid.Col md={9}>\n                  <Card>\n                    <Card.Header>\n                      <Card.Title>{t('relations.account.memberships.title_add')}</Card.Title>\n                    </Card.Header>\n                      <Mutation mutation={CREATE_ACCOUNT_MEMBERSHIP} onCompleted={() => history.push(return_url)}> \n                      {(createMembership, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                organizationMembership: \"\",\n                                financePaymentMethod: \"\",\n                                dateStart: new Date(),\n                                note: \"\",\n                              }}\n                              validationSchema={MEMBERSHIP_SCHEMA}\n                              onSubmit={(values, { setSubmitting }, errors) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n                                  console.log(errors)\n\n                                  \n                                  let dateEnd\n                                  if (values.dateEnd) {\n                                    dateEnd = dateToLocalISO(values.dateEnd)\n                                  } else {\n                                    dateEnd = values.dateEnd\n                                  }\n\n                                  createMembership({ variables: {\n                                    input: {\n                                      account: account_id, \n                                      organizationMembership: values.organizationMembership,\n                                      financePaymentMethod: values.financePaymentMethod,\n                                      dateStart: dateToLocalISO(values.dateStart),\n                                      dateEnd: dateEnd,\n                                      note: values.note,\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_ACCOUNT_MEMBERSHIPS_QUERY, variables: {archived: false, accountId: account_id}}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('relations.account.memberships.toast_add_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n                                <AccountMembershipForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  setFieldValue={setFieldValue}\n                                  setFieldTouched={setFieldTouched}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                >\n                                  {console.log(errors)}\n                                </AccountMembershipForm>\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                    </Card>\n                  </Grid.Col>\n                  <Grid.Col md={3}>\n                    <HasPermissionWrapper permission=\"add\"\n                                          resource=\"accountmembership\">\n                      <Link to={return_url}>\n                        <Button color=\"primary btn-block mb-6\">\n                          <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                        </Button>\n                      </Link>\n                    </HasPermissionWrapper>\n                    <ProfileMenu account_id={account_id} activeLink='memberships'/>\n                  </Grid.Col>\n                </Grid.Row>\n              </Container>\n            )}}\n          </Query>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(AccountMembershipAdd))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_MEMBERSHIPS_QUERY, GET_ACCOUNT_MEMBERSHIP_QUERY } from './queries'\nimport { MEMBERSHIP_SCHEMA } from './yupSchema'\nimport AccountMembershipForm from './AccountMembershipForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport ProfileMenu from \"../ProfileMenu\"\n\n\nconst UPDATE_ACCOUNT_MEMBERSHIP = gql`\n  mutation UpdateAccountMembership($input: UpdateAccountMembershipInput!) {\n    updateAccountMembership(input: $input) {\n      accountMembership {\n        id\n        account {\n          id\n          firstName\n          lastName\n          email\n        }\n        organizationMembership {\n          id\n          name\n        }\n        financePaymentMethod {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        note\n      }\n    }\n  }\n`\n\n\nclass AccountMembershipEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Account membership add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const history = this.props.history\n    const match = this.props.match\n    const id = match.params.id\n    const account_id = match.params.account_id\n    const return_url = \"/relations/accounts/\" + account_id + \"/memberships\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n        <Query query={GET_ACCOUNT_MEMBERSHIP_QUERY} variables = {{archived: false,  accountId: account_id, id: id}} >\n          {({ loading, error, data, refetch }) => {\n            // Loading\n            if (loading) return <p>{t('general.loading_with_dots')}</p>\n            // Error\n            if (error) {\n              console.log(error)\n              return <p>{t('general.error_sad_smiley')}</p>\n            }\n            \n            console.log('query data')\n            console.log(data)\n            const inputData = data\n            const account = data.account\n            const initialdata = data.accountMembership\n\n            let initialPaymentMethod = \"\"\n            if (initialdata.financePaymentMethod) {\n              initialPaymentMethod = initialdata.financePaymentMethod.id\n            }\n\n            return (\n              <Container>\n               <Page.Header title={account.firstName + \" \" + account.lastName} />\n               <Grid.Row>\n                  <Grid.Col md={9}>\n                  <Card>\n                    <Card.Header>\n                      <Card.Title>{t('relations.account.memberships.title_edit')}</Card.Title>\n                    </Card.Header>\n                      <Mutation mutation={UPDATE_ACCOUNT_MEMBERSHIP} onCompleted={() => history.push(return_url)}> \n                      {(updateMembership, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                organizationMembership: initialdata.organizationMembership.id,\n                                financePaymentMethod: initialPaymentMethod,\n                                dateStart: initialdata.dateStart,\n                                dateEnd: initialdata.dateEnd,\n                                note: initialdata.note,\n                                registrationFeePaid: initialdata.registrationFeePaid\n                              }}\n                              validationSchema={MEMBERSHIP_SCHEMA}\n                              onSubmit={(values, { setSubmitting }, errors) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n                                  console.log(errors)\n\n                                  \n                                  let dateEnd\n                                  if (values.dateEnd) {\n                                    dateEnd = dateToLocalISO(values.dateEnd)\n                                  } else {\n                                    dateEnd = values.dateEnd\n                                  }\n\n                                  updateMembership({ variables: {\n                                    input: {\n                                      id: id,\n                                      organizationMembership: values.organizationMembership,\n                                      financePaymentMethod: values.financePaymentMethod,\n                                      dateStart: dateToLocalISO(values.dateStart),\n                                      dateEnd: dateEnd,\n                                      note: values.note,\n                                      registrationFeePaid: values.registrationFeePaid\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_ACCOUNT_MEMBERSHIPS_QUERY, variables: {archived: false, accountId: account_id}}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('relations.account.memberships.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n                                <AccountMembershipForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  setFieldValue={setFieldValue}\n                                  setFieldTouched={setFieldTouched}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                >\n                                  {console.log(errors)}\n                                </AccountMembershipForm>\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                    </Card>\n                  </Grid.Col>\n                  <Grid.Col md={3}>\n                    <HasPermissionWrapper permission=\"change\"\n                                          resource=\"accountmembership\">\n                      <Link to={return_url}>\n                        <Button color=\"primary btn-block mb-6\">\n                          <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                        </Button>\n                      </Link>\n                    </HasPermissionWrapper>\n                    <ProfileMenu account_id={account_id} activeLink='memberships'/>\n                  </Grid.Col>\n                </Grid.Row>\n              </Container>\n            )}}\n          </Query>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(AccountMembershipEdit))\n","import React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n    Button,\n    Card,\n    Grid,\n  } from \"tabler-react\"\n\n\nclass LoadMoreOnBottomScroll extends Component {\n    componentDidMount() {\n      window.addEventListener(\"scroll\", this.handleOnScroll);\n    }\n  \n    componentWillUnmount() {\n      window.removeEventListener(\"scroll\", this.handleOnScroll);\n    }\n\n    handleOnScroll = () => {\n      // http://stackoverflow.com/questions/9439725/javascript-how-to-detect-if-browser-window-is-scrolled-to-bottom\n      var scrollTop =\n        (document.documentElement && document.documentElement.scrollTop) ||\n        document.body.scrollTop;\n      var scrollHeight =\n        (document.documentElement && document.documentElement.scrollHeight) ||\n        document.body.scrollHeight;\n      var clientHeight =\n        document.documentElement.clientHeight || window.innerHeight;\n      var scrolledToBottom = Math.ceil(scrollTop + clientHeight) >= scrollHeight;\n      if (scrolledToBottom) {\n        const pageInfo = this.props.pageInfo\n        if (pageInfo) {\n          if (pageInfo.hasNextPage) {\n            this.props.onLoadMore()\n          }\n        }\n      }\n    }\n\n    render() {\n      const t = this.props.t\n      const onLoadMore = this.props.onLoadMore \n      const pageInfo = this.props.pageInfo\n      const children = this.props.children\n\n\n      return(\n        <div>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <Card>\n                <Card.Body>\n                  {(!pageInfo) ? '':\n                    (pageInfo.hasNextPage) ? \n                      <Button \n                        link\n                        onClick={onLoadMore} \n                        >\n                        {t('general.load_more')}\n                      </Button>\n                    : t('general.loaded_all')\n                  }\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n        </div>\n      )\n    }\n}\n\nLoadMoreOnBottomScroll.defaultProps = {\n  onLoadMore: f=>f\n}\n  \nexport default withTranslation()(LoadMoreOnBottomScroll)\n","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport { GET_ACCOUNT_QUERY } from '../queries'\n\n\nfunction AccountNotesBase({ t, history, match, children, showBack=false }) {\n  const accountId = match.params.account_id\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_QUERY, {\n    variables: { id: accountId }\n  })\n\n  if (loading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (error) {\n    console.log(error)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n\n  const account = data.account\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.firstName + \" \" + account.lastName}>\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              {!(showBack) ?\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"accountnote\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/notes/add`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.notes.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              {(showBack) ?\n                <HasPermissionWrapper permission=\"view\"\n                                      resource=\"accountnote\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/notes/`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\"\n              }\n              <ProfileMenu \n                activeLink='notes'\n                accountId={accountId}\n              /> \n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}    \n        \nexport default withTranslation()(withRouter(AccountNotesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_NOTES_QUERY = gql`\n  query AccountNotes($after: String, $before: String, $account: ID!, $noteType: String!) {\n    accountNotes(first: 15, before: $before, after: $after, account: $account, noteType: $noteType ) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          note\n          injury\n          noteType\n          noteBy {\n            id\n            fullName\n          }\n          createdAt\n        }\n      }\n    }\n  }\n`\n\nexport const GET_ACCOUNT_NOTE_QUERY = gql`\n  query AccountNote($id: ID!) {\n    accountNote(id: $id) {\n      id\n      note\n      injury\n    }\n  }\n`\n\n\nexport const CREATE_ACCOUNT_NOTE = gql`\n  mutation CreateAccountNote($input: CreateAccountNoteInput!) {\n    createAccountNote(input: $input) {\n      accountNote {\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT_NOTE = gql`\n  mutation UpdateAccountNote($input: UpdateAccountNoteInput!) {\n    updateAccountNote(input: $input) {\n      accountNote {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_ACCOUNT_NOTE = gql`\n  mutation DeleteAccountNote($input: DeleteAccountNoteInput!) {\n    deleteAccountNote(input: $input) {\n      ok\n    }\n  }\n`\n","import CSLS from \"../../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables(accountId) {\n  let queryVars = {\n      account: accountId\n  }\n\n  let noteType = localStorage.getItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE)\n\n  queryVars.noteType = noteType  \n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport CSLS from \"../../../../tools/cs_local_storage\"\n\n\nimport {\n  BlogCard,\n  Button,\n  Badge,\n  Card,\n  Grid,\n  Icon,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport LoadMoreOnBottomScroll from \"../../../general/LoadMoreOnBottomScroll\"\nimport AccountNotesBase from \"./AccountNotesBase\"\n\nimport { \n  GET_ACCOUNT_NOTES_QUERY,\n  DELETE_ACCOUNT_NOTE\n} from \"./queries\"\n\nimport { get_list_query_variables } from \"./tools\"\n\n\n\nfunction AccountNotes({ t, history, match }) {\n  // Set some initial value for noteType, if not found\n  if (!localStorage.getItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE)) {\n    localStorage.setItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE, \"BACKOFFICE\") \n  }\n\n  const appSettings = useContext(AppSettingsContext)\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n\n  const accountId = match.params.account_id\n\n  const { loading, error, data, fetchMore, refetch } = useQuery(GET_ACCOUNT_NOTES_QUERY, {\n    variables: get_list_query_variables(accountId)\n  })\n  const [deleteAccountNote] = useMutation(DELETE_ACCOUNT_NOTE)\n\n  if (loading) return (\n    <AccountNotesBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AccountNotesBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountNotesBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AccountNotesBase>\n    )\n  }\n\n  let notes = data.accountNotes\n\n  return (\n    <AccountNotesBase>\n      <Grid.Row>\n        <Grid.Col>\n          <div className=\"float-right mb-4\">\n            <Button.List>\n              <Button color={(localStorage.getItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE) === \"BACKOFFICE\") ? 'primary': 'secondary'}  \n                      size=\"\"\n                      onClick={() => {\n                        localStorage.setItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE, \"BACKOFFICE\")\n                        refetch(get_list_query_variables(accountId))\n                      }\n              }>\n                {t('relations.account.notes.backoffice')}\n              </Button>\n              <Button color={(localStorage.getItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE) === \"TEACHERS\") ? 'primary': 'secondary'} \n                      size=\"\" \n                      className=\"ml-2\" \n                      onClick={() => {\n                        localStorage.setItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE, \"TEACHERS\")\n                        refetch(get_list_query_variables(accountId))\n                      }\n              }>\n                {t('relations.account.notes.teachers')}\n              </Button>\n            </Button.List>\n          </div>\n        </Grid.Col>\n      </Grid.Row>\n      <LoadMoreOnBottomScroll \n        pageInfo={notes.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: notes.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountNotes.edges\n              const pageInfo = fetchMoreResult.accountNotes.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountClasspasses at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    accountNotes: {\n                      __typename: previousResult.accountNotes.__typename,\n                      edges: [ ...previousResult.accountNotes.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        {notes.edges.map(({ node }) => (\n          <Card>\n            <Card.Body>\n              {(node.injury) ? <Badge color=\"danger\" className=\"float-right\">{t(\"general.injury\")}</Badge> : \"\"}\n              <div dangerouslySetInnerHTML={{__html: node.note}} />\n            </Card.Body>\n            <Card.Footer>\n              <Button \n                color=\"danger\"\n                size=\"sm\"\n                className=\"float-right\"\n                outline\n                onClick={() => {\n                  confirm_delete({\n                    t: t,\n                    msgConfirm: t(\"relations.account.notes.delete_confirm_msg\"),\n                    msgDescription: <p><div dangerouslySetInnerHTML={{__html: node.note}} /></p>,\n                    msgSuccess: t('relations.account.notes.deleted'),\n                    deleteFunction: deleteAccountNote,\n                    functionVariables: { \n                      variables: {\n                        input: {\n                          id: node.id\n                        }\n                      }, \n                      refetchQueries: [\n                        {query: GET_ACCOUNT_NOTES_QUERY, variables: get_list_query_variables(accountId) },\n                      ]\n                    }\n                  })\n                }}\n              >\n                <Icon name=\"trash-2\" />\n              </Button>\n              <Link to={`/relations/accounts/${match.params.account_id}/notes/edit/${node.id}`}>\n                <Button\n                  color=\"secondary\"\n                  size=\"sm\"\n                  className=\"float-right mr-4\"\n                  outline\n                >\n                  {t(\"general.edit\")}\n                </Button>\n              </Link>              \n              <small className=\"text-muted float-right mr-4\">{moment(node.createdAt).format(dateTimeFormatMoment)}</small>\n              {node.noteBy.fullName} <br />\n            </Card.Footer>\n          </Card>\n        ))}\n      </LoadMoreOnBottomScroll>\n    </AccountNotesBase>\n  )\n}\n      \n        \nexport default withTranslation()(withRouter(AccountNotes))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from \"react-router-dom\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountNoteForm = ({ t, history, isSubmitting, values, errors, setFieldTouched, setFieldValue, returnUrl }) => (\n  <FoForm>\n    <Card.Body> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.note')}>\n          <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"note\"\n            initialValue={values.note}\n            init={tinymceBasicConf}\n            onBlur={(e) => { \n              setFieldTouched(\"note\", true)\n              setFieldValue(\"note\", e.target.getContent())\n            }}\n          />\n          <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n                <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"injury\" \n                checked={values.injury} />\n                <span className=\"custom-switch-indicator\" ></span>\n                <span className=\"custom-switch-description\">{t('general.injury')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"injury\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n      </Grid.Row>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button\n            type=\"button\" \n            color=\"link\" \n          >\n            {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountNoteForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../../tools/cs_local_storage\"\n\nimport { \n  GET_ACCOUNT_NOTES_QUERY, \n  CREATE_ACCOUNT_NOTE,\n} from './queries'\n// import { ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA } from './yupSchema'\nimport AccountNoteForm from './AccountNoteForm'\n\nimport {\n  Card,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport AccountNotesBase from \"./AccountNotesBase\"\n\nimport { get_list_query_variables } from \"./tools\"\n\n\nfunction AccountNoteAdd({ t, history, match }) {\n  // Set some initial value for noteType, if not found\n  let noteType = localStorage.getItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE)\n  if (!noteType) {\n    localStorage.setItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE, \"BACKOFFICE\") \n  }\n\n  const accountId = match.params.account_id\n  const returnUrl = `/relations/accounts/${accountId}/notes`\n  const cardTitle = t('relations.account.notes.title_add')\n\n  const [addNote] = useMutation(\n    CREATE_ACCOUNT_NOTE\n  )\n\n  return (\n    <AccountNotesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            injury: false,\n            note: \"\"\n          }}\n          // validationSchema={ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA}\n          onSubmit={(values, { setSubmitting }, errors) => {\n              console.log('submit values:')\n              console.log(values)\n              console.log(errors)\n\n              addNote({ variables: {\n                input: {\n                  account: accountId, \n                  noteType: noteType,\n                  injury: values.injury,\n                  note: values.note\n                }\n              }, refetchQueries: [\n                  {query: GET_ACCOUNT_NOTES_QUERY, variables: get_list_query_variables(accountId)}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('relations.account.notes.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <AccountNoteForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              returnUrl={returnUrl}\n            >\n              {console.log(errors)}\n            </AccountNoteForm>\n          )}\n        </Formik>\n      </Card>\n    </AccountNotesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountNoteAdd))\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { \n  GET_ACCOUNT_NOTE_QUERY, \n  GET_ACCOUNT_NOTES_QUERY, \n  UPDATE_ACCOUNT_NOTE,\n} from './queries'\n// import { ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA } from './yupSchema'\nimport AccountNoteForm from './AccountNoteForm'\n\nimport {\n  Card,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport AccountNotesBase from \"./AccountNotesBase\"\n\nimport { get_list_query_variables } from \"./tools\"\n\n\nfunction AccountNoteEdit({ t, history, match }) {\n  // Set some initial value for noteType, if not found\n\n  const accountId = match.params.account_id\n  const noteId = match.params.id\n  const returnUrl = `/relations/accounts/${accountId}/notes`\n  const cardTitle = t('relations.account.notes.title_edit')\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_NOTE_QUERY, {\n    variables: { id: noteId }\n  })\n  const [updateNote] = useMutation(\n    UPDATE_ACCOUNT_NOTE\n  )\n\n  if (loading) return (\n    <AccountNotesBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AccountNotesBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountNotesBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AccountNotesBase>\n    )\n  }\n\n  const note = data.accountNote\n\n  return (\n    <AccountNotesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            injury: note.injury,\n            note: note.note\n          }}\n          // validationSchema={ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA}\n          onSubmit={(values, { setSubmitting }, errors) => {\n              console.log('submit values:')\n              console.log(values)\n              console.log(errors)\n\n              updateNote({ variables: {\n                input: {\n                  id: noteId,\n                  injury: values.injury,\n                  note: values.note\n                }\n              }, refetchQueries: [\n                  {query: GET_ACCOUNT_NOTES_QUERY, variables: get_list_query_variables(accountId)}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('relations.account.notes.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <AccountNoteForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              returnUrl={returnUrl}\n            >\n              {console.log(errors)}\n            </AccountNoteForm>\n          )}\n        </Formik>\n      </Card>\n    </AccountNotesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountNoteEdit))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\n\nfunction AccountOrdersBase({ t, match, history, children, account={} }) {\n  const accountId = match.params.account_id\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.fullName} >\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              <ProfileMenu \n                activeLink='orders' \n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountOrdersBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_ORDERS_QUERY = gql`\n  query FinanceOrders($after: String, $before: String, $status: String, $account: ID!) {\n    financeOrders(first: 15, before: $before, after: $after, status: $status, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          orderNumber\n          account {\n            id\n            fullName\n          }\n          status\n          createdAt\n          total\n          totalDisplay\n          balanceDisplay\n        }\n      }\n    }\n    account(id:$account) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n","import React, { useContext } from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_ACCOUNT_ORDERS_QUERY } from \"./queries\"\nimport { DELETE_FINANCE_ORDER } from \"../../../finance/orders/queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport moment from 'moment'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\"\n\n\nfunction AccountClassDelete({t, match, node, account}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const [deleteOrder, { data }] = useMutation(DELETE_FINANCE_ORDER)\n\n  console.log(\"AccountOrderDelete\")\n  console.log(node)\n  console.log(account)\n  console.log(\"---\")\n\n  return (\n    <button className=\"icon btn btn-link btn-sm pull-right\" \n      title={t('general.delete')} \n      href=\"\"\n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"relations.account.orders.delete_confirm_msg\"),\n          msgDescription: <p>\n            {t('general.order')}# {node.orderNumber}\n          </p>,\n          msgSuccess: t('relations.account.orders.delete_success'),\n          deleteFunction: deleteOrder,\n          functionVariables: { \n            variables: {\n              input: {\n                id: node.id\n              }\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_ORDERS_QUERY, \n                variables: { account: account.id } },\n            ]\n          }\n        })\n    }}>\n      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountClassDelete))\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceOrderStatus from \"../../../finance/orders/FinanceOrderStatus\"\n\nimport {\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport BadgeBookingStatus from \"../../../ui/BadgeBookingStatus\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport AccountOrdersBase from \"./AccountOrdersBase\"\nimport AccountOrderDelete from \"./AccountOrderDelete\"\n\nimport { GET_ACCOUNT_ORDERS_QUERY } from \"./queries\"\n\n\nfunction AccountOrders({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  // const timeFormat = appSettings.timeFormatMoment\n  const cardTitle = t('relations.account.orders.title')\n  const account_id = match.params.account_id\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_ORDERS_QUERY, {\n    variables: {'account': account_id},\n  })\n\n  // Loading\n  if (loading) return (\n    <AccountOrdersBase>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>\n        </Card.Body>\n      </Card>\n    </AccountOrdersBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountOrdersBase>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('general.error_sad_smiley')}</p>\n          </Card.Body>\n        </Card>\n      </AccountOrdersBase>\n    )\n  }\n\n  console.log(\"AccountClasses data:\")\n  console.log(data)\n  const account = data.account\n  const financeOrders = data.financeOrders\n  \n  // Empty list\n  if (!financeOrders.edges.length) {\n    return (\n      <AccountOrdersBase account={account}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('relations.account.orders.empty_list')}</p>\n          </Card.Body>\n        </Card>\n      </AccountOrdersBase>\n    )\n  }\n\n  // Return populated list\n  return (\n    <AccountOrdersBase account={account}>\n      <ContentCard \n        cardTitle={t('relations.account.orders.title')}\n        pageInfo={financeOrders.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: financeOrders.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.financeOrders.edges\n              const pageInfo = fetchMoreResult.financeOrders.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new financeOrders at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    financeOrders: {\n                      __typename: previousResult.financeOrders.__typename,\n                      edges: [ ...previousResult.financeOrders.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.order_number')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.relation')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.date')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {financeOrders.edges.map(({ node }) => (        \n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    <FinanceOrderStatus status={node.status} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    # {node.orderNumber}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.account.fullName}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {moment(node.createdAt).format('LL')}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.totalDisplay}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <Link to={\"/finance/orders/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <AccountOrderDelete node={node} account={account} />\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </AccountOrdersBase>\n  )\n}\n      \n        \nexport default withTranslation()(withRouter(AccountOrders))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY = gql`\n  query AccountScheduleEventTickets($after: String, $before: String, $account: ID!) {\n    accountScheduleEventTickets(first: 15, before: $before, after: $after, account: $account) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          cancelled\n          infoMailSent\n          scheduleEventTicket {\n            id\n            name\n            scheduleEvent {\n              id\n              name\n              dateStart\n              organizationLocation {\n                name\n              }\n            }\n          }\n          invoiceItems(first:1) {\n            edges {\n              node {\n                financeInvoice {\n                  id\n                  invoiceNumber\n                  status\n                }\n              }\n            }\n          }\n        }\n        \n      }\n    }\n  }\n`\n\nexport const GET_ACCOUNT_CLASSPASS_QUERY = gql`\n  query AccountClasspass($id: ID!, $accountId: ID!, $after: String, $before: String, $archived: Boolean!) {\n    accountClasspass(id:$id) {\n      id\n      organizationClasspass {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      note\n      createdAt\n    }\n    organizationClasspasses(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ClasspassInputValues($after: String, $before: String, $archived: Boolean!, $accountId: ID!) {\n    organizationClasspasses(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT = gql`\n  query Account($accountId: ID!){\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport { GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY } from \"./queries\"\nimport { GET_ACCOUNT } from \"../../../../queries/accounts/get_account\"\nimport ScheduleEventTickets from './AccountScheduleEventTickets'\n\n// const CANCEL_SCHEDULE_EVENT_TICKET = gql`\n//   mutation DeleteAccountClasspass($input: DeleteAccountClasspassInput!) {\n//     deleteAccountClasspass(input: $input) {\n//       ok\n//     }\n//   }\n// `\n\n\nfunction AccountScheduleEventTicketsBase({t, history, match, children}) {\n  const accountId = match.params.account_id\n  const { loading, error, data } = useQuery(GET_ACCOUNT, { variables: {\n    accountId: accountId\n  }})\n\n  if (loading) return (\n    <p>\n      {t(\"general.loading_with_dots\")}\n    </p>\n  )\n  if (error) return (\n    <p>\n      {t(\"relations.account.error_loading\")}\n    </p>\n  )\n\n  console.log(data)\n  const account = data.account\n  console.log(account)\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.firstName + \" \" + account.lastName} >\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              {/* <HasPermissionWrapper permission=\"add\"\n                                    resource=\"accountclasspass\">\n                <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/add\"}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.classpasses.add')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper> */}\n              <ProfileMenu \n                activeLink='tickets' \n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountScheduleEventTicketsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY = gql`\nquery AccountScheduleEventTickets($before:String, $after:String, $scheduleEventTicket:ID!) {\n  accountScheduleEventTickets(first: 100, before: $before, after: $after, scheduleEventTicket:$scheduleEventTicket) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        account {\n          id\n          fullName\n        }\n        cancelled\n        paymentConfirmation\n        infoMailSent\n      }\n    }\n  }\n}\n`\n\nexport const GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM_QUERY = gql`\nquery ScheduleEventTicket($before:String, $after:String, $id:ID!) {\n  scheduleEventTicket(id: $id) {\n    id\n    displayPublic\n    name\n    description\n    price\n    financeTaxRate {\n      id\n      name\n    }\n    financeGlaccount {\n      id\n      name\n    }\n    financeCostcenter {\n      id\n      name\n    }\n  }\n  financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n  financeGlaccounts(first: 100, before: $before, after: $after, archived: false) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n  financeCostcenters(first: 100, before: $before, after: $after, archived: false) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n}\n`\n\nexport const UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET = gql`\n  mutation UpdateAccountScheduleEventTicket($input:UpdateAccountScheduleEventTicketInput!) {\n    updateAccountScheduleEventTicket(input: $input) {\n      accountScheduleEventTicket {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_SCHEDULE_EVENT_TICKET = gql`\n  mutation DeleteScheduleEventTicket($input: DeleteScheduleEventTicketInput!) {\n    deleteScheduleEventTicket(input: $input) {\n      ok\n    }\n  }\n`\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport moment from 'moment'\n\nimport {\n  Badge,\n  Button,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport FinanceInvoicesStatus from \"../../../ui/FinanceInvoiceStatus\"\n\nimport AccountScheduleEventTicketsBase from \"./AccountScheduleEventTicketsBase\"\n\n\nimport { UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET } from \"../../../schedule/events/tickets/customers/queries\"\nimport { GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY } from \"./queries\"\n\n\n\nfunction AccountScheduleEventTickets({t, history, match}) {\n  // const title = t(\"relations.account.event_tickets.title\")\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const accountId = match.params.account_id\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, { variables: {\n    account: accountId\n  }})\n  const [updateAccountScheduleEventTicket] = useMutation(UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET)\n\n\n  if (loading) return (\n    <AccountScheduleEventTicketsBase>\n      {t(\"general.loading_with_dots\")}\n    </AccountScheduleEventTicketsBase>\n  )\n  if (error) return (\n    <AccountScheduleEventTicketsBase>\n      {t(\"shop.classpasses.error_loading\")}\n    </AccountScheduleEventTicketsBase>\n  )\n\n  console.log(data)\n  const accountScheduleEventTickets = data.accountScheduleEventTickets\n  console.log(accountScheduleEventTickets)\n\n\n  return (\n    <AccountScheduleEventTicketsBase>\n      <ContentCard \n        cardTitle={t('relations.account.event_tickets.title')}\n        pageInfo={accountScheduleEventTickets.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: accountScheduleEventTickets.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountScheduleEventTickets.edges\n              const pageInfo = fetchMoreResult.accountScheduleEventTickets.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountScheduleEventTickets at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    accountScheduleEventTickets: {\n                      __typename: previousResult.accountScheduleEventTickets.__typename,\n                      edges: [ ...previousResult.accountScheduleEventTickets.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.ticket')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.invoice')}</Table.ColHeader>\n              <Table.ColHeader>{t('schedule.events.tickets.info_mail_sent')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader> \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {accountScheduleEventTickets.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col>\n                    {node.scheduleEventTicket.scheduleEvent.name} <br />\n                    <Badge>{node.scheduleEventTicket.name}</Badge> {\" \"}\n                    {(node.cancelled) ? <Badge color=\"warning\">{t(\"general.cancelled\")}</Badge> : \"\"}\n                  </Table.Col>\n                  <Table.Col>\n                    {moment(node.scheduleEventTicket.scheduleEvent.dateStart).format(dateFormat)}\n                  </Table.Col>\n                  <Table.Col>\n                    {(node.invoiceItems.edges.length) ? \n                      <span>\n                        <Link to={`/finance/invoices/edit/${node.invoiceItems.edges[0].node.financeInvoice.id}`}>\n                          {node.invoiceItems.edges[0].node.financeInvoice.invoiceNumber}\n                        </Link> <br />\n                        <FinanceInvoicesStatus status={node.invoiceItems.edges[0].node.financeInvoice.status} />\n                        \n                      </span>\n                      : \"\"\n                    }\n                    \n                  </Table.Col>\n                  {/* <Table.Col key={v4()}>\n                    {node.dateStart}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dateEnd}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.classesRemainingDisplay}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col> */}\n                  <Table.Col>\n                    <BadgeBoolean value={node.infoMailSent} />\n                  </Table.Col>\n                  <Table.Col>\n                    {(node.cancelled) ?\n                      <Button \n                        className=\"pull-right\"\n                        color=\"warning\"\n                        onClick={() =>\n                          updateAccountScheduleEventTicket({ variables: {\n                            input: {\n                              id: node.id,\n                              cancelled: false\n                            }\n                          }, refetchQueries: [\n                            { \n                              query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, \n                              variables: { account: accountId }\n                            },\n                          ]})\n                          .then(({ data }) => {\n                              console.log('got data', data);\n                              toast.success((t('schedule.events.tickets.customers.uncancelled')), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error)\n                            }\n                          )\n                        }\n                      >\n                        {t(\"general.uncancel\")}\n                      </Button>\n                    :\n                      <Button \n                        className=\"pull-right\"\n                        color=\"warning\"\n                        onClick={() =>\n                          updateAccountScheduleEventTicket({ variables: {\n                            input: {\n                              id: node.id,\n                              cancelled: true\n                            }\n                          }, refetchQueries: [\n                              { \n                                query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, \n                                variables: { account: accountId }\n                              },\n                          ]})\n                          .then(({ data }) => {\n                              console.log('got data', data);\n                              toast.success((t('schedule.events.tickets.customers.cancelled')), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error)\n                            })\n                          }\n                        >\n                          {t(\"general.cancel\")}\n                        </Button>\n                    }\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </AccountScheduleEventTicketsBase>\n  )\n}\n\n\n\n// const AccountClasspasses = ({ t, history, match, archived=false }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Query query={GET_ACCOUNT_CLASSPASSES_QUERY} variables={{ archived: archived, accountId: match.params.account_id }} \n//         fetchPolicy=\"network-only\"> \n//         {({ loading, error, data, refetch, fetchMore }) => {\n//           // Loading\n//           if (loading) return <p>{t('general.loading_with_dots')}</p>\n//           // Error\n//           if (error) {\n//             console.log(error)\n//             return <p>{t('general.error_sad_smiley')}</p>\n//           }\n\n//           const account = data.account\n//           const accountClasspasses = data.accountClasspasses\n\n//           return (\n//             <Container>\n//               <Page.Header title={account.firstName + \" \" + account.lastName} >\n//                 <RelationsAccountsBack />\n//               </Page.Header>\n//               <Grid.Row>\n//                 <Grid.Col md={9}>\n//                   <ContentCard \n//                     cardTitle={t('relations.account.classpasses.title')}\n//                     pageInfo={accountClasspasses.pageInfo}\n//                     onLoadMore={() => {\n//                       fetchMore({\n//                         variables: {\n//                           after: accountClasspasses.pageInfo.endCursor\n//                         },\n//                         updateQuery: (previousResult, { fetchMoreResult }) => {\n//                           const newEdges = fetchMoreResult.accountClasspasses.edges\n//                           const pageInfo = fetchMoreResult.accountClasspasses.pageInfo\n\n//                           return newEdges.length\n//                             ? {\n//                                 // Put the new accountClasspasses at the end of the list and update `pageInfo`\n//                                 // so we have the new `endCursor` and `hasNextPage` values\n//                                 accountClasspasses: {\n//                                   __typename: previousResult.accountClasspasses.__typename,\n//                                   edges: [ ...previousResult.accountClasspasses.edges, ...newEdges ],\n//                                   pageInfo\n//                                 }\n//                               }\n//                             : previousResult\n//                         }\n//                       })\n//                     }} \n//                   >\n//                     <Table>\n//                       <Table.Header>\n//                         <Table.Row key={v4()}>\n//                           <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                           <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n//                           <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n//                           <Table.ColHeader>{t('general.classes_remaining')}</Table.ColHeader>\n//                           <Table.ColHeader></Table.ColHeader> \n//                         </Table.Row>\n//                       </Table.Header>\n//                       <Table.Body>\n//                           {accountClasspasses.edges.map(({ node }) => (\n//                             <Table.Row key={v4()}>\n//                               <Table.Col key={v4()}>\n//                                 {node.organizationClasspass.name}\n//                               </Table.Col>\n//                               <Table.Col key={v4()}>\n//                                 {node.dateStart}\n//                               </Table.Col>\n//                               <Table.Col key={v4()}>\n//                                 {node.dateEnd}\n//                               </Table.Col>\n//                               <Table.Col key={v4()}>\n//                                 {node.classesRemainingDisplay}\n//                               </Table.Col>\n//                               <Table.Col className=\"text-right\" key={v4()}>\n//                                 <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/edit/\" + node.id}>\n//                                   <Button className='btn-sm' \n//                                           color=\"secondary\">\n//                                     {t('general.edit')}\n//                                   </Button>\n//                                 </Link>\n//                               </Table.Col>\n//                               <Mutation mutation={DELETE_ACCOUNT_CLASSPASS} key={v4()}>\n//                                 {(deleteAccountClasspass, { data }) => (\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     <button className=\"icon btn btn-link btn-sm\" \n//                                       title={t('general.delete')} \n//                                       href=\"\"\n//                                       onClick={() => {\n//                                         confirm_delete({\n//                                           t: t,\n//                                           msgConfirm: t(\"relations.account.classpasses.delete_confirm_msg\"),\n//                                           msgDescription: <p>{node.organizationClasspass.name} {node.dateStart}</p>,\n//                                           msgSuccess: t('relations.account.classpasses.deleted'),\n//                                           deleteFunction: deleteAccountClasspass,\n//                                           functionVariables: { variables: {\n//                                             input: {\n//                                               id: node.id\n//                                             }\n//                                           }, refetchQueries: [\n//                                             {query: GET_ACCOUNT_CLASSPASSES_QUERY, variables: { archived: archived, accountId: match.params.account_id }} \n//                                           ]}\n//                                         })\n//                                     }}>\n//                                       <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n//                                     </button>\n//                                   </Table.Col>\n//                                 )}\n//                               </Mutation>\n//                             </Table.Row>\n//                           ))}\n//                       </Table.Body>\n//                     </Table>\n//                   </ContentCard>\n//                 </Grid.Col>\n//                 <Grid.Col md={3}>\n//                   <ProfileCardSmall user={account}/>\n//                   <HasPermissionWrapper permission=\"add\"\n//                                         resource=\"accountclasspass\">\n//                     <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/add\"}>\n//                       <Button color=\"primary btn-block mb-6\">\n//                               {/* //  onClick={() => history.push(\"/organization/classpasses/add\")}> */}\n//                         <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.classpasses.add')}\n//                       </Button>\n//                     </Link>\n//                   </HasPermissionWrapper>\n//                   <ProfileMenu \n//                     activeLink='classpasses' \n//                     account_id={match.params.account_id}\n//                   />\n//                 </Grid.Col>\n//               </Grid.Row>\n//             </Container>\n//           )\n//         }}\n//       </Query>\n//     </div>\n//   </SiteWrapper>\n// )\n      \n        \nexport default withTranslation()(withRouter(AccountScheduleEventTickets))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SUBSCRIPTIONS_QUERY = gql`\n  query AccountSubscriptions($after: String, $before: String, $accountId: ID!) {\n    accountSubscriptions(first: 15, before: $before, after: $after, account: $accountId) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationSubscription {\n            id\n            name\n          }\n          financePaymentMethod {\n            id\n            name\n          }\n          dateStart\n          dateEnd\n          creditTotal\n          registrationFeePaid\n          createdAt\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\nexport const GET_ACCOUNT_SUBSCRIPTION_QUERY = gql`\n  query AccountSubscription($id: ID!, $accountId: ID!, $after: String, $before: String) {\n    accountSubscription(id:$id) {\n      id\n      organizationSubscription {\n        id\n        name\n      }\n      financePaymentMethod {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      note\n      creditTotal\n      registrationFeePaid\n      createdAt\n    }\n    organizationSubscriptions(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query SubscriptionInputValues($after: String, $before: String, $archived: Boolean!, $accountId: ID!) {\n    organizationSubscriptions(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\n\nexport const GET_ACCOUNT_QUERY = gql`\n  query Account($accountId: ID!) {\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\nexport const CREATE_ACCOUNT_SUBSCRIPTION = gql`\n  mutation CreateAccountSubscription($input: CreateAccountSubscriptionInput!) {\n    createAccountSubscription(input: $input) {\n      accountSubscription {\n        id\n        account {\n          id\n          firstName\n          lastName\n          email\n        }\n        organizationSubscription {\n          id\n          name\n        }\n        financePaymentMethod {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        note\n        registrationFeePaid        \n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT_SUBSCRIPTION = gql`\n  mutation UpdateAccountSubscription($input: UpdateAccountSubscriptionInput!) {\n    updateAccountSubscription(input: $input) {\n      accountSubscription {\n        id\n        account {\n          id\n          firstName\n          lastName\n          email\n        }\n        organizationSubscription {\n          id\n          name\n        }\n        financePaymentMethod {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        note\n        registrationFeePaid        \n      }\n    }\n  }\n`\n\nexport const DELETE_ACCOUNT_SUBSCRIPTION = gql`\n  mutation DeleteAccountSubscription($input: DeleteAccountSubscriptionInput!) {\n    deleteAccountSubscription(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Icon,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase'\n\nimport { GET_ACCOUNT_SUBSCRIPTIONS_QUERY, DELETE_ACCOUNT_SUBSCRIPTION } from \"./queries\"\n\n\nfunction AccountSubscriptions({t, match}) {\n  const accountId = match.params.account_id\n  const cardTitle = t('relations.account.subscriptions.title')\n  const activeLink = \"subscriptions\"\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SUBSCRIPTIONS_QUERY, {\n    variables: {accountId: accountId}\n  })\n  const [deleteAccountSubscription] = useMutation(DELETE_ACCOUNT_SUBSCRIPTION)\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return(\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const account = data.account\n  const accountSubscriptions = data.accountSubscriptions\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"add\"\n    resource=\"accountsubscription\">\n      <Link to={\"/relations/accounts/\" + match.params.account_id + \"/subscriptions/add\"}>\n      <Button color=\"primary btn-block mb-6\">\n      {/* //  onClick={() => history.push(\"/organization/subscriptions/add\")}> */}\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.subscriptions.add')}\n      </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  return (\n    <RelationsAccountProfileBase\n      activeLink={activeLink}\n      user={account}\n      sidebarButton={sidebarButton}\n    >\n      <ContentCard \n        cardTitle={t('relations.account.subscriptions.title')}\n        pageInfo={accountSubscriptions.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: accountSubscriptions.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountSubscriptions.edges\n              const pageInfo = fetchMoreResult.accountSubscriptions.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountSubscriptions at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    accountSubscriptions: {\n                      __typename: previousResult.accountSubscriptions.__typename,\n                      edges: [ ...previousResult.accountSubscriptions.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.payment_method')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.credits')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader> \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {accountSubscriptions.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.organizationSubscription.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dateStart}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dateEnd}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.financePaymentMethod) ? node.financePaymentMethod.name : \"\"}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.creditTotal}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={\"/relations/accounts/\" + match.params.account_id + \"/subscriptions/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"relations.account.subscriptions.delete_confirm_msg\"),\n                          msgDescription: <p>{node.organizationSubscription.name} {node.dateStart}</p>,\n                          msgSuccess: t('relations.account.subscriptions.deleted'),\n                          deleteFunction: deleteAccountSubscription,\n                          functionVariables: { variables: {\n                            input: {\n                              id: node.id\n                            }\n                          }, refetchQueries: [\n                            {query: GET_ACCOUNT_SUBSCRIPTIONS_QUERY, variables: { accountId: accountId }} \n                          ]}\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </RelationsAccountProfileBase>\n  )\n}\n\n        \nexport default withTranslation()(withRouter(AccountSubscriptions))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const SUBSCRIPTION_SCHEMA = Yup.object().shape({\n  organizationSubscription: Yup.string()\n    .required(t('yup.field_required')),\n  financePaymentMethod: Yup.string(),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .nullable(),\n  registrationFeePaid: Yup.boolean(),\n  note: Yup.string(),\n})\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountSubscriptionForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, return_url }) => (\n  <FoForm>\n    <Card.Body> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.subscription')}>\n            <Field component=\"select\" \n                  name=\"organizationSubscription\" \n                  className={(errors.organizationSubscription) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n              {inputData.organizationSubscriptions.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"organizationSubscription\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.payment_method')}>\n            <Field component=\"select\" \n                  name=\"financePaymentMethod\" \n                  className={(errors.financePaymentMethod) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}></option>\n              {inputData.financePaymentMethods.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"financePaymentMethod\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row> \n      <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={(values.frequencyType == \"SPECIFIC\") ? t('general.date') : t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateEnd\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n            <Grid.Col>\n              <Form.Group label={t('general.date_end')}>\n                <CSDatePicker \n                  selected={values.dateEnd}\n                  onChange={(date) => {\n                    setFieldValue(\"dateEnd\", date)\n                    setFieldTouched(\"dateEnd\", true)\n                  }}\n                  onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                  placeholderText={t('schedule.classes.placeholder_enddate')}\n                />\n                <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          }\n        </Grid.Row>\n      <Form.Group label={t('general.note')}>\n        <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"note\"\n            initialValue={values.note}\n            init={tinymceBasicConf}\n            onBlur={(e) => {\n              setFieldValue(\"note\", e.target.getContent())\n              setFieldTouched(\"note\", true, true)\n            }}\n          />\n        <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label className=\"custom-switch\">\n            <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"registrationFeePaid\" \n              checked={values.registrationFeePaid} />\n            <span className=\"custom-switch-indicator\" ></span>\n            <span className=\"custom-switch-description\">{t('relations.account.subscriptions.registration_fee_paid')}</span>\n          </Form.Label>\n        <ErrorMessage name=\"registrationFeePaid\" component=\"div\" />   \n      </Form.Group> \n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Button\n          type=\"button\" \n          color=\"link\" \n          onClick={() => history.push(return_url)}\n        >\n            {t('general.cancel')}\n        </Button>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionForm))","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTIONS_QUERY, GET_INPUT_VALUES_QUERY, CREATE_ACCOUNT_SUBSCRIPTION } from './queries'\nimport { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport AccountSubscriptionForm from './AccountSubscriptionForm'\n\nimport {\n  Icon,\n  Button,\n  Card,\n} from \"tabler-react\";\nimport { dateToLocalISO } from '../../../../tools/date_tools'\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase';\n\n\nfunction AccountSubscriptionAdd({t, history, match}) {\n  const accountId = match.params.account_id\n  const activeLink = \"subscriptions\"\n  const cardTitle = t('relations.account.subscriptions.title_add')\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const {loading, error, data} = useQuery(GET_INPUT_VALUES_QUERY, {\n    variables: { archived: false, accountId: accountId }\n  })\n  const [createAccountSubscription] = useMutation(CREATE_ACCOUNT_SUBSCRIPTION)\n  const sidebarButton = <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const inputData = data\n  const account = data.account\n\n  return (\n    <RelationsAccountProfileBase\n      activeLink={activeLink}\n      user={account}\n      sidebarButton={sidebarButton} \n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <Formik\n            initialValues={{ \n              organizationSubscription: \"\",\n              financePaymentMethod: \"\",\n              dateStart: new Date(),\n              note: \"\",\n              registrationFeePaid: false\n            }}\n            validationSchema={SUBSCRIPTION_SCHEMA}\n            onSubmit={(values, { setSubmitting }, errors) => {\n                console.log('submit values:')\n                console.log(values)\n                console.log(errors)\n\n                \n                let dateEnd\n                if (values.dateEnd) {\n                  dateEnd = dateToLocalISO(values.dateEnd)\n                } else {\n                  dateEnd = values.dateEnd\n                }\n\n                createAccountSubscription({ variables: {\n                  input: {\n                    account: accountId, \n                    organizationSubscription: values.organizationSubscription,\n                    financePaymentMethod: values.financePaymentMethod,\n                    dateStart: dateToLocalISO(values.dateStart),\n                    dateEnd: dateEnd,\n                    note: values.note,\n                    registrationFeePaid: values.registrationFeePaid\n                  }\n                }, refetchQueries: [\n                    {query: GET_ACCOUNT_SUBSCRIPTIONS_QUERY, variables: {accountId: accountId}}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    const subscriptionId = data.createAccountSubscription.accountSubscription.id\n                    history.push(`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}`)\n                    toast.success((t('relations.account.subscriptions.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n              <AccountSubscriptionForm\n                inputData={inputData}\n                isSubmitting={isSubmitting}\n                setFieldValue={setFieldValue}\n                setFieldTouched={setFieldTouched}\n                errors={errors}\n                values={values}\n                returnUrl={returnUrl}\n              >\n                {console.log(errors)}\n              </AccountSubscriptionForm>\n            )}\n          </Formik>\n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n}\n\n\n// class AccountSubscriptionAdd extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Account subscription add props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const history = this.props.history\n//     const match = this.props.match\n//     const accountId = match.params.accountId\n//     const returnUrl = \"/relations/accounts/\" + accountId + \"/subscriptions\"\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//         <Query query={GET_INPUT_VALUES_QUERY} variables = {{archived: false, accountId: accountId}} >\n//           {({ loading, error, data, refetch }) => {\n//             // Loading\n//             if (loading) return <p>{t('general.loading_with_dots')}</p>\n//             // Error\n//             if (error) {\n//               console.log(error)\n//               return <p>{t('general.error_sad_smiley')}</p>\n//             }\n            \n//             console.log('query data')\n//             console.log(data)\n//             const inputData = data\n//             const account = data.account\n\n//             return (\n//               <Container>\n//                <Page.Header title={account.firstName + \" \" + account.lastName} />\n//                <Grid.Row>\n//                   <Grid.Col md={9}>\n//                   <Card>\n//                     <Card.Header>\n//                       <Card.Title>{t('relations.account.subscriptions.title_add')}</Card.Title>\n//                     </Card.Header>\n//                       <Mutation mutation={CREATE_ACCOUNT_SUBSCRIPTION} onCompleted={() => history.push(returnUrl)}> \n//                       {(createSubscription, { data }) => (\n//                           <Formik\n//                               initialValues={{ \n//                                 organizationSubscription: \"\",\n//                                 financePaymentMethod: \"\",\n//                                 dateStart: new Date(),\n//                                 note: \"\",\n//                                 registrationFeePaid: false\n//                               }}\n//                               validationSchema={SUBSCRIPTION_SCHEMA}\n//                               onSubmit={(values, { setSubmitting }, errors) => {\n//                                   console.log('submit values:')\n//                                   console.log(values)\n//                                   console.log(errors)\n\n                                  \n//                                   let dateEnd\n//                                   if (values.dateEnd) {\n//                                     dateEnd = dateToLocalISO(values.dateEnd)\n//                                   } else {\n//                                     dateEnd = values.dateEnd\n//                                   }\n\n//                                   createSubscription({ variables: {\n//                                     input: {\n//                                       account: accountId, \n//                                       organizationSubscription: values.organizationSubscription,\n//                                       financePaymentMethod: values.financePaymentMethod,\n//                                       dateStart: dateToLocalISO(values.dateStart),\n//                                       dateEnd: dateEnd,\n//                                       note: values.note,\n//                                       registrationFeePaid: values.registrationFeePaid\n//                                     }\n//                                   }, refetchQueries: [\n//                                       {query: GET_ACCOUNT_SUBSCRIPTIONS_QUERY, variables: {accountId: accountId}}\n//                                   ]})\n//                                   .then(({ data }) => {\n//                                       console.log('got data', data)\n//                                       toast.success((t('relations.account.subscriptions.toast_add_success')), {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                     }).catch((error) => {\n//                                       toast.error((t('general.toast_server_error')) + ': ' +  error, {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                       console.log('there was an error sending the query', error)\n//                                       setSubmitting(false)\n//                                     })\n//                               }}\n//                               >\n//                               {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n//                                 <AccountSubscriptionForm\n//                                   inputData={inputData}\n//                                   isSubmitting={isSubmitting}\n//                                   setFieldValue={setFieldValue}\n//                                   setFieldTouched={setFieldTouched}\n//                                   errors={errors}\n//                                   values={values}\n//                                   returnUrl={returnUrl}\n//                                 >\n//                                   {console.log(errors)}\n//                                 </AccountSubscriptionForm>\n//                               )}\n//                           </Formik>\n//                       )}\n//                       </Mutation>\n//                     </Card>\n//                   </Grid.Col>\n//                   <Grid.Col md={3}>\n//                     <HasPermissionWrapper permission=\"add\"\n//                                           resource=\"accountsubscription\">\n//                       <Link to={returnUrl}>\n//                         <Button color=\"primary btn-block mb-6\">\n//                           <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n//                         </Button>\n//                       </Link>\n//                     </HasPermissionWrapper>\n//                     <ProfileMenu \n//                       activeLink='subscriptions'\n//                       accountId={match.params.accountId}\n//                     />\n//                   </Grid.Col>\n//                 </Grid.Row>\n//               </Container>\n//             )}}\n//           </Query>\n//         </div>\n//     </SiteWrapper>\n//     )}\n//   }\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionAdd))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\n// position: top or bottom\n// tabs: [[name, title, link], ...]\n// active: active tab name\n\nfunction CardTabs({ t, position=\"top\", tabs, active}) {\n  let class_tabs_position = \"card-tabs-top\"\n  switch(position) {\n    case \"top\":\n      break\n    case \"bottom\":\n      class_tabs_position = \"card-tabs-top\"\n      break\n    default:\n      break\n  }   \n\n  return (\n    <div className={`card-tabs ${class_tabs_position}`}>\n      {\n        tabs.map(({name, title, link}) => (\n          <Link key={v4()} to={link} className={`card-tabs-item ${(name === active) ? \"active\": \"\"}`}>\n            <h3 className=\"card-title\"> {title} </h3>\n          </Link>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default withTranslation()(CardTabs)\n\n\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport CardTabs from \"../../../../ui/CardTabs\"\n\nfunction AccountSubscriptionEditTabs({ t, active, account_id, subscription_id}) {\n\n  return (\n    <CardTabs \n      position=\"top\"\n      tabs={[\n          {\n            name: \"general\", \n            title: t(\"relations.account.subscriptions.menu.general\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}`\n          },\n          {\n            name: \"pauses\", \n            title: t(\"relations.account.subscriptions.menu.pauses\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}/pauses`\n          },\n          {\n            name: \"blocks\", \n            title: t(\"relations.account.subscriptions.menu.blocks\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}/blocks`\n          },\n          {\n            name: \"alt_prices\", \n            title: t(\"relations.account.subscriptions.menu.alt_prices\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}/alt_prices`\n          },\n          {\n            name: \"invoices\", \n            title: t(\"relations.account.subscriptions.menu.invoices\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}/invoices`\n          },\n          {\n            name: \"credits\", \n            title: t(\"relations.account.subscriptions.menu.credits\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}/credits`\n          },\n      ]}\n      active={active}\n    />\n  )\n}\n\nexport default withTranslation()(AccountSubscriptionEditTabs)\n\n\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditTabs from \"./AccountSubscriptionEditTabs\"\n\nimport ProfileCardSmall from \"../../../../ui/ProfileCardSmall\"\nimport ProfileMenu from \"../../ProfileMenu\"\nimport moment from 'moment'\n\n\nfunction AccountSubscriptionEditBaseBase({t, history, match, children, account=null, subscription=null, active_tab}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  \n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = \"/relations/accounts/\" + accountId + \"/subscriptions\"\n  const cardTitle = (subscription) ? \n    <span className=\"text-muted\">\n      - {subscription.organizationSubscription.name + \" \" + moment(subscription.dateStart).format(dateFormat)} - {subscription.creditTotal} {t(\"general.credits\")}\n    </span> : \"\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={(account) ? account.firstName + \" \" + account.lastName : \"\"} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('relations.account.subscriptions.title_edit')} {cardTitle}</Card.Title>\n                </Card.Header>\n                <AccountSubscriptionEditTabs \n                  account_id={accountId}\n                  subscription_id={subscriptionId}\n                  active={active_tab}\n                />\n                {children}\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              <HasPermissionWrapper permission=\"change\"\n                                    resource=\"accountsubscription\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              <ProfileMenu \n                activeLink='subscriptions'\n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBaseBase))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_QUERY } from '../queries'\nimport AccountSubscriptionForm from '../AccountSubscriptionForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\nimport AccountSubscriptionEditTabs from \"./AccountSubscriptionEditTabs\"\nimport AccountSubscriptionEditBaseBase from \"./AccountSubscriptionEditBaseBase\"\n\nimport ProfileMenu from \"../../ProfileMenu\"\n\n\nfunction AccountSubscriptionEditBase({t, history, match, children, active_tab}) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const { loading, error, data } = useQuery(GET_ACCOUNT_SUBSCRIPTION_QUERY, {\n    variables: {\n      accountId: accountId,\n      id: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditBaseBase active_tab={active_tab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditBaseBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditBaseBase active_tab={active_tab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditBaseBase>\n  )\n\n  console.log(data)\n  const account = data.account\n  const subscription = data.accountSubscription\n\n  return (\n    <AccountSubscriptionEditBaseBase active_tab={active_tab} account={account} subscription={subscription}>\n      {children}\n    </AccountSubscriptionEditBaseBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBase))\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTIONS_QUERY, GET_ACCOUNT_SUBSCRIPTION_QUERY, UPDATE_ACCOUNT_SUBSCRIPTION } from '../queries'\nimport { SUBSCRIPTION_SCHEMA } from '../yupSchema'\nimport AccountSubscriptionForm from '../AccountSubscriptionForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\nimport AccountSubscriptionEditBase from \"./AccountSubscriptionEditBase\"\n\nimport ProfileMenu from \"../../ProfileMenu\"\n\n\nfunction AccountSubscriptionEdit({t, match, history}) {\n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"general\"\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_SUBSCRIPTION_QUERY, {\n    variables: {\n      archived: false,\n      accountId: accountId,\n      id: id\n    }\n  })\n\n  const [ updateSubscription ] = useMutation(UPDATE_ACCOUNT_SUBSCRIPTION)\n  \n  if (loading) return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const account = data.account\n  const initialdata = data.accountSubscription\n\n  let initialPaymentMethod = \"\"\n  if (initialdata.financePaymentMethod) {\n    initialPaymentMethod = initialdata.financePaymentMethod.id\n  }\n  \n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  let dateEnd = null\n  if (initialdata.dateStart) {\n    dateStart = new Date(initialdata.dateStart)\n  }\n  if (initialdata.dateEnd) {\n    dateEnd = new Date(initialdata.dateEnd)\n  }\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      <Formik\n        initialValues={{ \n          organizationSubscription: initialdata.organizationSubscription.id,\n          financePaymentMethod: initialPaymentMethod,\n          dateStart: dateStart,\n          dateEnd: dateEnd,\n          note: initialdata.note,\n          registrationFeePaid: initialdata.registrationFeePaid\n        }}\n        validationSchema={SUBSCRIPTION_SCHEMA}\n        onSubmit={(values, { setSubmitting }, errors) => {\n            console.log('submit values:')\n            console.log(values)\n            console.log(errors)\n\n            \n            let dateEnd\n            if (values.dateEnd) {\n              dateEnd = dateToLocalISO(values.dateEnd)\n            } else {\n              dateEnd = values.dateEnd\n            }\n\n            updateSubscription({ variables: {\n              input: {\n                id: id,\n                organizationSubscription: values.organizationSubscription,\n                financePaymentMethod: values.financePaymentMethod,\n                dateStart: dateToLocalISO(values.dateStart),\n                dateEnd: dateEnd,\n                note: values.note,\n                registrationFeePaid: values.registrationFeePaid\n              }\n            }, refetchQueries: [\n                {query: GET_ACCOUNT_SUBSCRIPTIONS_QUERY, variables: {accountId: accountId}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('relations.account.subscriptions.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n          <AccountSubscriptionForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldValue={setFieldValue}\n            setFieldTouched={setFieldTouched}\n            errors={errors}\n            values={values}\n            return_url={returnUrl}\n          >\n            {console.log(errors)}\n          </AccountSubscriptionForm>\n        )}\n      </Formik>\n    </AccountSubscriptionEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEdit))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n} from \"tabler-react\";\n\n\nfunction ButtonAddSecondaryMenu({t, match, history, linkTo}) {\n  return (\n    <Link to={linkTo}>\n      <Button\n        color=\"primary\"\n        size=\"sm\"\n        icon=\"plus-circle\"\n        className=\"float-right\"\n      >\n        {t(\"general.add\")}\n      </Button>\n    </Link>\n  )\n}\n\nexport default withTranslation()(withRouter(ButtonAddSecondaryMenu))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY = gql`\nquery AccountSubscriptionAltPrices($before:String, $after:String, $accountSubscription: ID!) {\n  accountSubscriptionAltPrices(before: $before, after: $after, accountSubscription:$accountSubscription) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        accountSubscription {\n          id\n        }\n        subscriptionYear\n        subscriptionMonth\n        amount\n        amountDisplay\n        description\n        note\n        createdAt\n        updatedAt\n      }\n    }\n  }\n}\n`\n\nexport const GET_ACCOUNT_SUBSCRIPTION_ALT_PRICE_QUERY = gql`\nquery AccountSubscriptionAltPrice($id: ID!) {\n  accountSubscriptionAltPrice(id:$id) {\n    id\n    accountSubscription {\n      id\n    }\n    subscriptionYear\n    subscriptionMonth\n    amount\n    description\n    note\n  }\n}\n`\n\n\nexport const DELETE_ACCOUNT_SUBSCRIPTION_ALT_PRICE = gql`\n  mutation DeleteAccountSubscriptionAltPrice($input: DeleteAccountSubscriptionAltPriceInput!) {\n    deleteAccountSubscriptionAltPrice(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditTabs from \"./AccountSubscriptionEditTabs\"\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport ProfileCardSmall from \"../../../../ui/ProfileCardSmall\"\nimport ProfileMenu from \"../../ProfileMenu\"\nimport moment from 'moment'\n\n\nfunction AccountSubscriptionEditBaseBase({\n  t, \n  history, \n  match, \n  children, \n  account=null, \n  subscription=null, \n  pageInfo, \n  onLoadMore, \n  active_tab}\n  ){\n\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  \n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = \"/relations/accounts/\" + accountId + \"/subscriptions\"\n  const cardTitle = (subscription) ? \n    <span className=\"text-muted\">\n      - {subscription.organizationSubscription.name + \" \" + moment(subscription.dateStart).format(dateFormat)} - {subscription.creditTotal} {t(\"general.credits\")}\n    </span> : \"\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={(account) ? account.firstName + \" \" + account.lastName : \"\"} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <ContentCard \n                cardTitle={<span>{t('relations.account.subscriptions.title_edit')} {cardTitle}</span>}\n                pageInfo={pageInfo}\n                onLoadMore={onLoadMore}\n                cardTabs={<AccountSubscriptionEditTabs \n                  account_id={accountId}\n                  subscription_id={subscriptionId}\n                  active={active_tab} /> }\n              >\n                {children}\n              </ContentCard>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              <HasPermissionWrapper permission=\"change\"\n                                    resource=\"accountsubscription\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              <ProfileMenu \n                activeLink='subscriptions'\n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBaseBase))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_QUERY } from '../queries'\nimport AccountSubscriptionForm from '../AccountSubscriptionForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\nimport AccountSubscriptionEditTabs from \"./AccountSubscriptionEditTabs\"\nimport AccountSubscriptionEditListBaseBase from \"./AccountSubscriptionEditListBaseBase\"\n\nimport ProfileMenu from \"../../ProfileMenu\"\n\n\nfunction AccountSubscriptionEditListBase({t, history, match, children, pageInfo, onLoadMore, active_tab}) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const { loading, error, data } = useQuery(GET_ACCOUNT_SUBSCRIPTION_QUERY, {\n    variables: {\n      accountId: accountId,\n      id: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBaseBase active_tab={active_tab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBaseBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBaseBase active_tab={active_tab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBaseBase>\n  )\n\n  console.log(data)\n  const account = data.account\n  const subscription = data.accountSubscription\n\n  return (\n    <AccountSubscriptionEditListBaseBase \n      active_tab={active_tab} \n      account={account} \n      subscription={subscription}\n      pageInfo={pageInfo}\n      onLoaMore={onLoadMore}\n    >\n      {children}\n    </AccountSubscriptionEditListBaseBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditListBase))\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_ACCOUNT_SUBSCRIPTION_ALT_PRICE, GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction AccountSubscriptionEditAltPriceDelete({t, match, history, id}) {\n  const subscriptionId = match.params.subscription_id\n  const [deleteAccountSubscriptionAltPrice, { data }] = useMutation(DELETE_ACCOUNT_SUBSCRIPTION_ALT_PRICE)\n  const query_vars = {\n    accountSubscription: subscriptionId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"relations.account.subscriptions.alt_prices.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('relations.account.subscriptions.alt_prices.delete_success'),\n          deleteFunction: deleteAccountSubscriptionAltPrice,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPriceDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../../../ui/ButtonAddSecondaryMenu'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditListBase from \"../AccountSubscriptionEditListBase\"\nimport AccountSubscriptionEditAltPriceDelete from \"./AccountSubscriptionEditAltPriceDelete\"\nimport moment from 'moment';\n\n\nfunction AccountSubscriptionEditAltPrices({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  console.log(appSettings)\n  \n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"alt_prices\"\n\n  const buttonAdd = <ButtonAddSecondaryMenu \n                      linkTo={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/alt_prices/add`} />\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY, {\n    variables: {\n      accountSubscription: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const accountSubscriptionAltPrices = data.accountSubscriptionAltPrices\n  const pageInfo = data.accountSubscriptionAltPrices.pageInfo\n\n    // Empty list\n    if (!accountSubscriptionAltPrices.edges.length) { return (\n      <AccountSubscriptionEditListBase active_tab={activeTab}>\n        <div className=\"pull-right\">{buttonAdd}</div>\n        <h5>{t('relations.account.subscriptions.alt_prices.title_list')}</h5>\n        <p>{t('relations.account.subscriptions.alt_prices.empty_list')}</p>\n      </AccountSubscriptionEditListBase>\n    )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: accountSubscriptionAltPrices.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.accountSubscriptionAltPrices.edges\n        const pageInfo = fetchMoreResult.accountSubscriptionAltPrices.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              accountSubscriptionAltPrices: {\n                __typename: previousResult.accountSubscriptionAltPrices.__typename,\n                edges: [ ...previousResult.accountSubscriptionAltPrices.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <AccountSubscriptionEditListBase active_tab={activeTab} pageInfo={pageInfo} onLoadMore={onLoadMore}>\n      <div className=\"pull-right\">{buttonAdd}</div>\n      <h5>{t('relations.account.subscriptions.alt_prices.title_list')}</h5>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.subscription_year')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.subscription_month')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.amount')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {accountSubscriptionAltPrices.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {node.subscriptionYear}\n                </Table.Col>\n                <Table.Col>\n                  {node.subscriptionMonth}\n                </Table.Col>\n                <Table.Col>\n                  {node.amountDisplay}\n                </Table.Col>\n                <Table.Col>\n                <div dangerouslySetInnerHTML={{__html: node.description}} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/alt_prices/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <AccountSubscriptionEditAltPriceDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </AccountSubscriptionEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPrices))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA = Yup.object().shape({\n  subscriptionYear: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  subscriptionMonth: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  amount: Yup.number()\n    .required()\n  })","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport AccountSubscriptionEditBase from \"../AccountSubscriptionEditBase\"\n\n\nfunction AccountSubscriptionEditAltPriceBase({ t, history, match, children}) {\n  const activeTab = \"alt_prices\"\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/alt_prices/`\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {children}\n    </AccountSubscriptionEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPriceBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction AccountSubscriptionEditAltPriceForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  let title\n  if ( formTitle == \"create\" ) {\n    title = t('relations.account.subscriptions.alt_prices.add')\n  } else {\n    title = t('relations.account.subscriptions.alt_prices.edit')\n  }\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <h5>{title}</h5>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_year')}>\n              <Field type=\"number\" \n                      name=\"subscriptionYear\" \n                      className={(errors.subscriptionYear) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionYear\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_month')}>\n              <Field type=\"number\" \n                      name=\"subscriptionMonth\" \n                      className={(errors.subscriptionMonth) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionMonth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.amount')}>\n                <Field type=\"text\" \n                    name=\"amount\" \n                    className={(errors.amount) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n                <ErrorMessage name=\"amount\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Field type=\"text\" \n                    name=\"description\" \n                    className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.note')}>\n            <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"note\"\n                initialValue={values.note}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldValue(\"note\", e.target.getContent())\n                  setFieldTouched(\"note\", true, true)\n                }}\n              />\n            <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPriceForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditAltPriceBase from \"./AccountSubscriptionEditAltPriceBase\"\nimport AccountSubscriptionEditAltPriceForm from \"./AccountSubscriptionEditAltPriceForm\"\n\n\nconst ADD_ACCOUNT_SUBSCRIPTION_ALT_PRICE = gql`\n  mutation CreateAccountSubscriptionAltPrice($input:CreateAccountSubscriptionAltPriceInput!) {\n    createAccountSubscriptionAltPrice(input: $input) {\n      accountSubscriptionAltPrice {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditAltPriceAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/alt_prices/`\n\n\n  const [addSubscriptionAltPrice] = useMutation(ADD_ACCOUNT_SUBSCRIPTION_ALT_PRICE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  return (\n    <AccountSubscriptionEditAltPriceBase>\n      <Formik\n        initialValues={{ \n          subscriptionYear: new Date().getFullYear(),\n          subscriptionMonth: new Date().getMonth() + 1,\n          amount: 0,\n          description: \"\",\n          note: \"\"\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addSubscriptionAltPrice({ variables: {\n            input: {\n              accountSubscription: subscriptionId,\n              subscriptionYear: values.subscriptionYear,\n              subscriptionMonth: values.subscriptionMonth,\n              amount: values.amount,\n              description: values.description,\n              note: values.note,\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.alt_prices.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditAltPriceForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditAltPriceBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPriceAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY, GET_ACCOUNT_SUBSCRIPTION_ALT_PRICE_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA } from './yupSchema'\n\nimport AccountSubscriptionEditAltPriceBase from \"./AccountSubscriptionEditAltPriceBase\"\nimport AccountSubscriptionEditAltPriceForm from \"./AccountSubscriptionEditAltPriceForm\"\n\n\nconst UPDATE_ACCOUNT_SUBSCRIPTION_ALT_PRICE = gql`\n  mutation UpdateAccountSubscriptionAltPrice($input:UpdateAccountSubscriptionAltPriceInput!) {\n    updateAccountSubscriptionAltPrice(input: $input) {\n      accountSubscriptionAltPrice {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditAltPriceEdit({ t, history, match }) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/alt_prices/`\n\n  const { loading, error, data, } = useQuery(GET_ACCOUNT_SUBSCRIPTION_ALT_PRICE_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [updateSubscriptionAltPrice] = useMutation(UPDATE_ACCOUNT_SUBSCRIPTION_ALT_PRICE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  if (loading) return (\n    <AccountSubscriptionEditAltPriceBase>\n        <p>{t('general.loading_with_dots')}</p>\n    </AccountSubscriptionEditAltPriceBase>\n  )\n  // Error\n  if (error) {\n    return (\n      <AccountSubscriptionEditAltPriceBase>\n          { console.log(error) }\n          <p>{t('general.error_sad_smiley')}</p>\n      </AccountSubscriptionEditAltPriceBase>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const accountSubscriptionAltPrice = data.accountSubscriptionAltPrice\n\n\n\n  return (\n    <AccountSubscriptionEditAltPriceBase>\n      <Formik\n        initialValues={{ \n          subscriptionYear: accountSubscriptionAltPrice.subscriptionYear,\n          subscriptionMonth: accountSubscriptionAltPrice.subscriptionMonth,\n          amount: accountSubscriptionAltPrice.amount,\n          description: accountSubscriptionAltPrice.description,\n          note: accountSubscriptionAltPrice.note\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateSubscriptionAltPrice({ variables: {\n            input: {\n              id: id,\n              subscriptionYear: values.subscriptionYear,\n              subscriptionMonth: values.subscriptionMonth,\n              amount: values.amount,\n              description: values.description,\n              note: values.note,\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.alt_prices.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditAltPriceForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"update\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditAltPriceBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPriceEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY = gql`\nquery AccountSubscriptionBlocks($before: String, $after: String, $accountSubscription: ID!) {\n  accountSubscriptionBlocks(first: 20, before: $before, after: $after, accountSubscription: $accountSubscription) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        accountSubscription {\n          id\n        }\n        dateStart\n        dateEnd\n        description\n        createdAt\n      }\n    } \n  }\n}\n`\n\nexport const GET_ACCOUNT_SUBSCRIPTION_BLOCK_QUERY = gql`\nquery AccountSubscriptionBlock($id: ID!) {\n  accountSubscriptionBlock(id:$id) {\n    id\n    accountSubscription {\n      id\n    }\n    dateStart\n    dateEnd\n    description\n  }\n}\n`\n\n\nexport const DELETE_ACCOUNT_SUBSCRIPTION_BLOCK = gql`\n  mutation DeleteAccountSubscriptionBlock($input: DeleteAccountSubscriptionBlockInput!) {\n    deleteAccountSubscriptionBlock(input: $input) {\n      ok\n    }\n  }\n`\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_ACCOUNT_SUBSCRIPTION_BLOCK, GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction AccountSubscriptionEditBlockDelete({t, match, history, id}) {\n  const subscriptionId = match.params.subscription_id\n  const [deleteAccountSubscriptionBlock, { data }] = useMutation(DELETE_ACCOUNT_SUBSCRIPTION_BLOCK)\n  const query_vars = {\n    accountSubscription: subscriptionId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"relations.account.subscriptions.blocks.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('relations.account.subscriptions.blocks.delete_success'),\n          deleteFunction: deleteAccountSubscriptionBlock,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlockDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../../../ui/ButtonAddSecondaryMenu'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditListBase from \"../AccountSubscriptionEditListBase\"\nimport AccountSubscriptionEditBlockDelete from \"./AccountSubscriptionEditBlockDelete\"\nimport moment from 'moment';\n\n\nfunction AccountSubscriptionEditBlocks({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  console.log(appSettings)\n  \n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"blocks\"\n\n  const buttonAdd = <ButtonAddSecondaryMenu \n                      linkTo={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/blocks/add`} />\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY, {\n    variables: {\n      accountSubscription: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const accountSubscriptionBlocks = data.accountSubscriptionBlocks\n  const pageInfo = data.accountSubscriptionBlocks.pageInfo\n\n    // Empty list\n    if (!accountSubscriptionBlocks.edges.length) { return (\n      <AccountSubscriptionEditListBase active_tab={activeTab}>\n        <div className=\"pull-right\">{buttonAdd}</div>\n        <h5>{t('relations.account.subscriptions.blocks.title_list')}</h5>\n        <p>{t('relations.account.subscriptions.blocks.empty_list')}</p>\n      </AccountSubscriptionEditListBase>\n    )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: accountSubscriptionBlocks.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.accountSubscriptionBlocks.edges\n        const pageInfo = fetchMoreResult.accountSubscriptionBlocks.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              accountSubscriptionBlocks: {\n                __typename: previousResult.accountSubscriptionBlocks.__typename,\n                edges: [ ...previousResult.accountSubscriptionBlocks.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <AccountSubscriptionEditListBase active_tab={activeTab} pageInfo={pageInfo} onLoadMore={onLoadMore}>\n      <div className=\"pull-right\">{buttonAdd}</div>\n      <h5>{t('relations.account.subscriptions.blocks.title_list')}</h5>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {accountSubscriptionBlocks.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {moment(node.dateStart).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  {moment(node.dateEnd).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  <div dangerouslySetInnerHTML={{__html: node.description}} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/blocks/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <AccountSubscriptionEditBlockDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </AccountSubscriptionEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlocks))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA = Yup.object().shape({\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .required(t('yup.field_required')),\n  })","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport AccountSubscriptionEditBase from \"../AccountSubscriptionEditBase\"\n\n\nfunction AccountSubscriptionEditBlockBase({ t, history, match, children}) {\n  const activeTab = \"blocks\"\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/blocks/`\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {children}\n    </AccountSubscriptionEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlockBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction AccountSubscriptionEditBlockForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  let title\n  if ( formTitle == \"create\" ) {\n    title = t('relations.account.subscriptions.blocks.add')\n  } else {\n    title = t('relations.account.subscriptions.blocks.edit')\n  }\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <h5>{title}</h5>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => setFieldValue(\"dateStart\", date)}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                className={(errors.dateEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateEnd}\n                onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"description\"\n                initialValue={values.description}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldValue(\"description\", e.target.getContent())\n                  setFieldTouched(\"description\", true, true)\n                }}\n              />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlockForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditBlockBase from \"./AccountSubscriptionEditBlockBase\"\nimport AccountSubscriptionEditBlockForm from \"./AccountSubscriptionEditBlockForm\"\n\n\nconst ADD_ACCOUNT_SUBSCRIPTION_BLOCK = gql`\n  mutation CreateAccountSubscriptionBlock($input:CreateAccountSubscriptionBlockInput!) {\n    createAccountSubscriptionBlock(input: $input) {\n      accountSubscriptionBlock {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditBlockAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/blocks/`\n\n\n  const [addSubscriptionBlock] = useMutation(ADD_ACCOUNT_SUBSCRIPTION_BLOCK, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  return (\n    <AccountSubscriptionEditBlockBase>\n      <Formik\n        initialValues={{ \n          dateStart: new Date() ,\n          description: \"\"\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addSubscriptionBlock({ variables: {\n            input: {\n              accountSubscription: subscriptionId,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.blocks.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditBlockForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditBlockBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlockAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY, GET_ACCOUNT_SUBSCRIPTION_BLOCK_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditBlockBase from \"./AccountSubscriptionEditBlockBase\"\nimport AccountSubscriptionEditBlockForm from \"./AccountSubscriptionEditBlockForm\"\n\n\nconst UPDATE_ACCOUNT_SUBSCRIPTION_BLOCK = gql`\n  mutation UpdateAccountSubscriptionBlock($input:UpdateAccountSubscriptionBlockInput!) {\n    updateAccountSubscriptionBlock(input: $input) {\n      accountSubscriptionBlock {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditBlockEdit({ t, history, match }) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/blocks/`\n\n  const { loading, error, data, } = useQuery(GET_ACCOUNT_SUBSCRIPTION_BLOCK_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [updateSubscriptionBlock] = useMutation(UPDATE_ACCOUNT_SUBSCRIPTION_BLOCK, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  if (loading) return (\n    <AccountSubscriptionEditBlockBase>\n        <p>{t('general.loading_with_dots')}</p>\n    </AccountSubscriptionEditBlockBase>\n  )\n  // Error\n  if (error) {\n    return (\n      <AccountSubscriptionEditBlockBase>\n          { console.log(error) }\n          <p>{t('general.error_sad_smiley')}</p>\n      </AccountSubscriptionEditBlockBase>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const accountSubscriptionBlock = data.accountSubscriptionBlock\n\n\n\n  return (\n    <AccountSubscriptionEditBlockBase>\n      <Formik\n        initialValues={{ \n          dateStart: new Date(accountSubscriptionBlock.dateStart),\n          dateEnd: new Date(accountSubscriptionBlock.dateEnd),\n          description: accountSubscriptionBlock.description\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateSubscriptionBlock({ variables: {\n            input: {\n              id: id,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.blocks.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditBlockForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"update\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditBlockBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlockEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Badge\n} from \"tabler-react\";\n\nfunction SubscriptionCreditsMutationType({ t, mutationType }) {\n  switch (mutationType) {\n    case \"ADD\":  \n      return <Badge color=\"success\">+</Badge>\n      break\n    case \"SUB\":\n      return <Badge color=\"secondary\">-</Badge>\n      break\n    default:\n      return \"\"\n  }\n}\n\nexport default withTranslation()(SubscriptionCreditsMutationType)\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY = gql`\nquery AccountSubscriptionCredits($before: String, $after: String, $accountSubscription: ID!) {\n  accountSubscriptionCredits(first: 20, before: $before, after: $after, accountSubscription: $accountSubscription) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        accountSubscription {\n          id\n        }\n        mutationType\n        mutationAmount\n        description\n        createdAt\n      }\n    } \n  }\n}\n`\n\nexport const GET_ACCOUNT_SUBSCRIPTION_CREDIT_QUERY = gql`\nquery AccountSubscriptionCredit($id: ID!) {\n  accountSubscriptionCredit(id:$id) {\n    id\n    accountSubscription {\n      id\n    }\n    mutationType\n    mutationAmount\n    description\n    createdAt\n  }\n}\n`\n\n\nexport const DELETE_ACCOUNT_SUBSCRIPTION_CREDIT = gql`\n  mutation DeleteAccountSubscriptionCredit($input: DeleteAccountSubscriptionCreditInput!) {\n    deleteAccountSubscriptionCredit(input: $input) {\n      ok\n    }\n  }\n`\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_ACCOUNT_SUBSCRIPTION_QUERY } from \"../../queries\"\nimport { DELETE_ACCOUNT_SUBSCRIPTION_CREDIT, GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction AccountSubscriptionEditCreditDelete({t, match, history, id}) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const [deleteAccountSubscriptionCredit] = useMutation(DELETE_ACCOUNT_SUBSCRIPTION_CREDIT)\n  const query_vars = {\n    accountSubscription: subscriptionId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"relations.account.subscriptions.credits.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('relations.account.subscriptions.credits.delete_success'),\n          deleteFunction: deleteAccountSubscriptionCredit,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY, variables: query_vars },\n              { query: GET_ACCOUNT_SUBSCRIPTION_QUERY, variables: {\n                accountId: accountId,\n                id: subscriptionId\n              }}\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCreditDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport SubscriptionCreditsMutationType from \"../../../../../ui/SubscriptionCreditsMutationType\"\nimport ButtonAddSecondaryMenu from '../../../../../ui/ButtonAddSecondaryMenu'\n\nimport AppSettingsContext from '../../../../../context/AppSettingsContext'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditListBase from \"../AccountSubscriptionEditListBase\"\nimport AccountSubscriptionEditCreditDelete from \"./AccountSubscriptionEditCreditDelete\"\nimport moment from 'moment';\n\n\nfunction AccountSubscriptionEditCredits({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n  console.log(appSettings)\n  \n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"credits\"\n\n  const buttonAdd = <ButtonAddSecondaryMenu \n                     linkTo={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/add`} />\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY, {\n    variables: {\n      accountSubscription: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const accountSubscriptionCredits = data.accountSubscriptionCredits\n  const pageInfo = data.accountSubscriptionCredits.pageInfo\n  // const inputData = data\n  // const account = data.account\n  // const initialdata = data.accountSubscription\n\n  // let initialPaymentMethod = \"\"\n  // if (initialdata.financePaymentMethod) {\n  //   initialPaymentMethod = initialdata.financePaymentMethod.id\n  // }\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: accountSubscriptionCredits.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.accountSubscriptionCredits.edges\n        const pageInfo = fetchMoreResult.accountSubscriptionCredits.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              accountSubscriptionCredits: {\n                __typename: previousResult.accountSubscriptionCredits.__typename,\n                edges: [ ...previousResult.accountSubscriptionCredits.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <AccountSubscriptionEditListBase active_tab={activeTab} pageInfo={pageInfo} onLoadMore={onLoadMore}>\n      <div className=\"pull-right\">{buttonAdd}</div>\n      <h5>{t('relations.account.subscriptions.credits.title_list')}</h5>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.credits')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.mutation')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {accountSubscriptionCredits.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {moment(node.createdAt).format(dateTimeFormatMoment)}\n                </Table.Col>\n                <Table.Col>\n                  <div dangerouslySetInnerHTML={{__html: node.description}} />\n                </Table.Col>\n                <Table.Col>\n                  {node.mutationAmount}\n                </Table.Col>\n                <Table.Col>\n                  <SubscriptionCreditsMutationType mutationType={node.mutationType} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <AccountSubscriptionEditCreditDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </AccountSubscriptionEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCredits))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA = Yup.object().shape({\n  mutationAmount: Yup.number()\n    .required(t('yup.field_required')),\n  })","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport AccountSubscriptionEditBase from \"../AccountSubscriptionEditBase\"\n\n\nfunction AccountSubscriptionEditCreditBase({ t, history, match, children}) {\n  const activeTab = \"credits\"\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/`\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {children}\n    </AccountSubscriptionEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCreditBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction AccountSubscriptionEditCreditForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  let title\n  if ( formTitle == \"create\" ) {\n    title = t('relations.account.subscriptions.credits.add')\n  } else {\n    title = t('relations.account.subscriptions.credits.edit')\n  }\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <h5>{title}</h5>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.credits')}>\n              <Field type=\"number\" \n                      name=\"mutationAmount\" \n                      className={(errors.mutationAmount) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"mutationAmount\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.subscriptions.credits.mutationType')}>\n              <Field component=\"select\" \n                     name=\"mutationType\" \n                     className={(errors.mutationType) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\">\n                <option value=\"ADD\">{t(\"general.add\")}</option>\n                <option value=\"SUB\">{t(\"general.subtract\")}</option>\n              </Field>\n              <ErrorMessage name=\"mutationType\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"description\"\n                initialValue={values.description}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldValue(\"description\", e.target.getContent())\n                  setFieldTouched(\"description\", true, true)\n                }}\n              />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCreditForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_QUERY } from \"../../queries\"\nimport { GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditCreditBase from \"./AccountSubscriptionEditCreditBase\"\nimport AccountSubscriptionEditCreditForm from \"./AccountSubscriptionEditCreditForm\"\n\n\nconst ADD_ACCOUNT_SUBSCRIPTION_CREDIT = gql`\n  mutation CreateAccountSubscriptionCredit($input:CreateAccountSubscriptionCreditInput!) {\n    createAccountSubscriptionCredit(input: $input) {\n      accountSubscriptionCredit {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditCreditAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/`\n\n  const [addSubscriptionCredit] = useMutation(ADD_ACCOUNT_SUBSCRIPTION_CREDIT, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  return (\n    <AccountSubscriptionEditCreditBase>\n      <Formik\n        initialValues={{ \n          mutationType: \"ADD\",\n          mutationAmount: 0,\n          description: \"\"\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addSubscriptionCredit({ variables: {\n            input: {\n              accountSubscription: subscriptionId,\n              mutationType: values.mutationType,\n              mutationAmount: values.mutationAmount,\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n              {query: GET_ACCOUNT_SUBSCRIPTION_QUERY, variables: {\n                accountId: accountId,\n                id: subscriptionId\n              }}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.credits.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditCreditForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditCreditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCreditAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_QUERY } from \"../../queries\"\nimport { GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY, GET_ACCOUNT_SUBSCRIPTION_CREDIT_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditCreditBase from \"./AccountSubscriptionEditCreditBase\"\nimport AccountSubscriptionEditCreditForm from \"./AccountSubscriptionEditCreditForm\"\n\n\nconst UPDATE_ACCOUNT_SUBSCRIPTION_CREDIT = gql`\n  mutation UpdateAccountSubscriptionCredit($input:UpdateAccountSubscriptionCreditInput!) {\n    updateAccountSubscriptionCredit(input: $input) {\n      accountSubscriptionCredit {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditCreditEdit({ t, history, match }) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/`\n\n  const { loading, error, data, } = useQuery(GET_ACCOUNT_SUBSCRIPTION_CREDIT_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [updateSubscriptionCredit] = useMutation(UPDATE_ACCOUNT_SUBSCRIPTION_CREDIT, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  if (loading) return (\n    <AccountSubscriptionEditCreditBase>\n        <p>{t('general.loading_with_dots')}</p>\n    </AccountSubscriptionEditCreditBase>\n  )\n  // Error\n  if (error) {\n    return (\n      <AccountSubscriptionEditCreditBase>\n          { console.log(error) }\n          <p>{t('general.error_sad_smiley')}</p>\n      </AccountSubscriptionEditCreditBase>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const accountSubscriptionCredit = data.accountSubscriptionCredit\n\n\n  return (\n    <AccountSubscriptionEditCreditBase>\n      <Formik\n        initialValues={{ \n          mutationType: accountSubscriptionCredit.mutationType,\n          mutationAmount: accountSubscriptionCredit.mutationAmount,\n          description: accountSubscriptionCredit.description\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateSubscriptionCredit({ variables: {\n            input: {\n              id: id,\n              mutationType: values.mutationType,\n              mutationAmount: values.mutationAmount,\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n              {query: GET_ACCOUNT_SUBSCRIPTION_QUERY, variables: {\n                accountId: accountId,\n                id: subscriptionId\n              }}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.credits.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditCreditForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"update\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditCreditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCreditEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_FINANCE_INVOICE_ITEM_QUERY = gql`\nquery financeInvoiceItem($before: String, $after: String, $accountSubscription: ID!) {\n  financeInvoiceItems(before: $before, after: $after, accountSubscription:$accountSubscription, orderBy: [\"-finance_invoice__date_sent\"]) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        financeInvoice {\n          id\n          invoiceNumber\n          status\n          summary\n          dateSent\n          dateDue\n          total\n          balance\n        }\n        subscriptionYear\n        subscriptionMonth\n      }\n    }\n  }\n}\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InvoiceInputValues($after: String, $before: String) {\n    financeInvoiceGroups(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n// export const GET_ACCOUNT_SUBSCRIPTION_CREDIT_QUERY = gql`\n// query AccountSubscriptionCredit($id: ID!) {\n//   accountSubscriptionCredit(id:$id) {\n//     id\n//     accountSubscription {\n//       id\n//     }\n//     mutationType\n//     mutationAmount\n//     description\n//     createdAt\n//   }\n// }\n// `\n\n\n// export const DELETE_ACCOUNT_SUBSCRIPTION_CREDIT = gql`\n//   mutation DeleteAccountSubscriptionCredit($input: DeleteAccountSubscriptionCreditInput!) {\n//     deleteAccountSubscriptionCredit(input: $input) {\n//       ok\n//     }\n//   }\n// `\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_FINANCE_INVOICE_ITEM_QUERY } from \"./queries\"\nimport { DELETE_FINANCE_INVOICE } from \"../../../../../finance/invoices/queries\"\nimport confirm_delete from \"../../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction AccountSubscriptionEditInvoiceDelete({t, match, history, id}) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const [deleteAccountSubscriptionInvoice] = useMutation(DELETE_FINANCE_INVOICE)\n  const query_vars = {\n    accountSubscription: subscriptionId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"finance.invoices.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('finance.invoices.deleted'),\n          deleteFunction: deleteAccountSubscriptionInvoice,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_FINANCE_INVOICE_ITEM_QUERY, variables: query_vars },\n              // { query: GET_FINANCE_INVOICE_ITEM_QUERY, variables: {\n              //   accountId: accountId,\n              //   id: subscriptionId\n              // }}\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditInvoiceDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport FinanceInvoicesStatus from \"../../../../../ui/FinanceInvoiceStatus\"\nimport ButtonAddSecondaryMenu from '../../../../../ui/ButtonAddSecondaryMenu'\n\nimport AppSettingsContext from '../../../../../context/AppSettingsContext'\n\nimport { GET_FINANCE_INVOICE_ITEM_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n  Text\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport CSLS from \"../../../../../../tools/cs_local_storage\"\nimport AccountSubscriptionEditInvoiceDelete from \"./AccountSubscriptionEditInvoiceDelete\"\nimport AccountSubscriptionEditListBase from \"../AccountSubscriptionEditListBase\"\n// import AccountSubscriptionEditCreditDelete from \"./AccountSubscriptionEditCreditDelete\"\nimport moment from 'moment';\n\n\nfunction AccountSubscriptionEditInvoices({t, location, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n  console.log(appSettings)\n  \n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"invoices\"\n\n  const buttonAdd = <ButtonAddSecondaryMenu \n                     linkTo={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/invoices/add`} />\n\n  const { loading, error, data, fetchMore } = useQuery(GET_FINANCE_INVOICE_ITEM_QUERY, {\n    variables: {\n      accountSubscription: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  // Set back location for edit invoice\n  localStorage.setItem(CSLS.FINANCE_INVOICES_EDIT_RETURN, location.pathname)\n\n  const financeInvoiceItems = data.financeInvoiceItems\n  const pageInfo = data.financeInvoiceItems.pageInfo\n  // const inputData = data\n  // const account = data.account\n  // const initialdata = data.accountSubscription\n\n  // let initialPaymentMethod = \"\"\n  // if (initialdata.financePaymentMethod) {\n  //   initialPaymentMethod = initialdata.financePaymentMethod.id\n  // }\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: financeInvoiceItems.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.financeInvoiceItems.edges\n        const pageInfo = fetchMoreResult.financeInvoiceItems.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              financeInvoiceItems: {\n                __typename: previousResult.financeInvoiceItems.__typename,\n                edges: [ ...previousResult.financeInvoiceItems.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <AccountSubscriptionEditListBase active_tab={activeTab} pageInfo={pageInfo} onLoadMore={onLoadMore}>\n      <div className=\"pull-right\">{buttonAdd}</div>\n      <h5>{t('relations.account.subscriptions.invoices.title_list')}</h5>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n            <Table.ColHeader>{t('finance.invoices.invoice_number')} & {t('finance.invoices.summary')}</Table.ColHeader>\n            <Table.ColHeader>{t('finance.invoices.date')} & {t('finance.invoices.due')}</Table.ColHeader>\n            {/* <Table.ColHeader>{t('finance.invoices.due')}</Table.ColHeader> */}\n            <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.balance')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {financeInvoiceItems.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  <FinanceInvoicesStatus status={node.financeInvoice.status} />\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.financeInvoice.invoiceNumber} <br />\n                  <Text.Small color=\"gray\">{node.financeInvoice.summary.trunc(30)}</Text.Small>\n                </Table.Col>\n\n                <Table.Col key={v4()}>\n                  {moment(node.financeInvoice.dateSent).format('LL')} <br />\n                  {moment(node.financeInvoice.dateDue).format('LL')}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.financeInvoice.totalDisplay}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.financeInvoice.balanceDisplay}\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <Button className='btn-sm' \n                          onClick={() => history.push(\"/finance/invoices/edit/\" + node.financeInvoice.id)}\n                          color=\"secondary\">\n                    {t('general.edit')}\n                  </Button>\n                </Table.Col>\n                <Table.Col>\n                  <AccountSubscriptionEditInvoiceDelete id={node.financeInvoice.id} />\n                </Table.Col>\n                {/* <Table.Col>\n                  {moment(node.createdAt).format(dateTimeFormatMoment)}\n                </Table.Col>\n                <Table.Col>\n                  <div dangerouslySetInnerHTML={{__html: node.description}} />\n                </Table.Col>\n                <Table.Col>\n                  {node.mutationAmount}\n                </Table.Col>\n                <Table.Col>\n                  <SubscriptionCreditsMutationType mutationType={node.mutationType} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <AccountSubscriptionEditCreditDelete id={node.id} />\n                </Table.Col> */}\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </AccountSubscriptionEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditInvoices))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SUBSCRIPTION_INVOICE_SCHEMA = Yup.object().shape({\n  financeInvoiceGroup: Yup.string()\n    .required(t('yup.field_required')),\n  subscriptionYear: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  subscriptionMonth: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  })","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport AccountSubscriptionEditBase from \"../AccountSubscriptionEditBase\"\n\n\nfunction AccountSubscriptionEditInvoiceAddBase({ t, history, match, children}) {\n  const activeTab = \"invoices\"\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/invoices/`\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {children}\n    </AccountSubscriptionEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditInvoiceAddBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction AccountSubscriptionEditInvoiceAddForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  const title = t('relations.account.subscriptions.invoices.add')\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <h5>{title}</h5>\n        <Form.Group label={t('general.finance_invoice_group')}>\n          <Field component=\"select\" \n                name=\"financeInvoiceGroup\" \n                className={(errors.financeInvoiceGroup) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n            {inputData.financeInvoiceGroups.edges.map(({ node }) =>\n              <option value={node.id} key={v4()}>{node.name}</option>\n            )}\n          </Field>\n          <ErrorMessage name=\"financeInvoiceGroup\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Form.Group label={t('general.summary')}>\n          <Field type=\"text\" \n                  name=\"summary\" \n                  className={(errors.summary) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n          <ErrorMessage name=\"summary\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_year')}>\n              <Field type=\"number\" \n                      name=\"subscriptionYear\" \n                      className={(errors.subscriptionYear) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionYear\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_month')}>\n              <Field type=\"number\" \n                      name=\"subscriptionMonth\" \n                      className={(errors.subscriptionMonth) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionMonth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            className=\"pull-right\"\n            color=\"primary\"\n            disabled={isSubmitting}\n            type=\"submit\"\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button\n              type=\"button\" \n              color=\"link\" \n            >\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditInvoiceAddForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n// import { GET_ACCOUNT_SUBSCRIPTION_QUERY } from \"../../queries\"\nimport { GET_FINANCE_INVOICE_ITEM_QUERY, GET_INPUT_VALUES_QUERY } from \"./queries\"\nimport { CREATE_ACCOUNT_INVOICE } from \"../../../invoices/queries\"\nimport { ACCOUNT_SUBSCRIPTION_INVOICE_SCHEMA } from './yupSchema'\n\nimport AccountSubscriptionEditInvoiceAddBase from \"./AccountSubscriptionEditInvoiceAddBase\"\nimport AccountSubscriptionEditInvoiceAddForm from \"./AccountSubscriptionEditInvoiceAddForm\"\n\n\nfunction AccountSubscriptionEditInvoiceAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/invoices/`\n\n  const { loading: queryLoading, error: queryError, data: queryData } = useQuery(GET_INPUT_VALUES_QUERY)\n\n  const [ addFinanceInvoice ] = useMutation(CREATE_ACCOUNT_INVOICE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n    // Loading\n    if (queryLoading) return (\n      <AccountSubscriptionEditInvoiceAddBase>\n        <p>{t('general.loading_with_dots')}</p>\n      </AccountSubscriptionEditInvoiceAddBase>\n    )\n    // Error\n    if (queryError) {\n      console.log(queryError)\n      return (\n        <AccountSubscriptionEditInvoiceAddBase>\n          <p>{t('general.error_sad_smiley')}</p>\n        </AccountSubscriptionEditInvoiceAddBase>\n      )\n    }\n    \n    console.log(queryData)\n\n  return (\n    <AccountSubscriptionEditInvoiceAddBase>\n      <Formik\n        initialValues={{ \n          financeInvoiceGroup: \"\",\n          summary: \"\",\n          subscriptionYear: new Date().getFullYear(), \n          subscriptionMonth: new Date().getMonth() + 1,\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_INVOICE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addFinanceInvoice({ variables: {\n            input: {\n              account: accountId,\n              accountSubscription: subscriptionId,\n              financeInvoiceGroup: values.financeInvoiceGroup,\n              subscriptionYear: values.subscriptionYear,\n              subscriptionMonth: values.subscriptionMonth,\n              summary: values.summary,\n            }\n          }, refetchQueries: [\n              {query: GET_FINANCE_INVOICE_ITEM_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n              // {query: GET_ACCOUNT_SUBSCRIPTION_QUERY, variables: {\n              //   accountId: accountId,\n              //   id: subscriptionId\n              // }}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              const financeInvoiceId = data.createFinanceInvoice.financeInvoice.id\n              history.push(`/finance/invoices/edit/${financeInvoiceId}`)\n              toast.success((t('relations.account.subscriptions.invoices.toast_add_success')), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n              toast.success((t('relations.account.subscriptions.invoices.toast_you_are_now_editing')), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditInvoiceAddForm\n            inputData={queryData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditInvoiceAddBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditInvoiceAdd))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY = gql`\nquery AccountSubscriptionPauses($before: String, $after: String, $accountSubscription: ID!) {\n  accountSubscriptionPauses(first: 20, before: $before, after: $after, accountSubscription: $accountSubscription) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        accountSubscription {\n          id\n        }\n        dateStart\n        dateEnd\n        description\n        createdAt\n      }\n    } \n  }\n}\n`\n\nexport const GET_ACCOUNT_SUBSCRIPTION_PAUSE_QUERY = gql`\nquery AccountSubscriptionPause($id: ID!) {\n  accountSubscriptionPause(id:$id) {\n    id\n    accountSubscription {\n      id\n    }\n    dateStart\n    dateEnd\n    description\n  }\n}\n`\n\n\nexport const DELETE_ACCOUNT_SUBSCRIPTION_PAUSE = gql`\n  mutation DeleteAccountSubscriptionPause($input: DeleteAccountSubscriptionPauseInput!) {\n    deleteAccountSubscriptionPause(input: $input) {\n      ok\n    }\n  }\n`\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_ACCOUNT_SUBSCRIPTION_PAUSE, GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction AccountSubscriptionEditPauseDelete({t, match, history, id}) {\n  const subscriptionId = match.params.subscription_id\n  const [deleteAccountSubscriptionPause, { data }] = useMutation(DELETE_ACCOUNT_SUBSCRIPTION_PAUSE)\n  const query_vars = {\n    accountSubscription: subscriptionId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"relations.account.subscriptions.pauses.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('relations.account.subscriptions.pauses.delete_success'),\n          deleteFunction: deleteAccountSubscriptionPause,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauseDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport ButtonAddSecondaryMenu from '../../../../../ui/ButtonAddSecondaryMenu'\n\nimport AppSettingsContext from '../../../../../context/AppSettingsContext'\n\n\nimport { GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditListBase from \"../AccountSubscriptionEditListBase\"\nimport AccountSubscriptionEditPauseDelete from \"./AccountSubscriptionEditPauseDelete\"\nimport moment from 'moment';\n\n\nfunction AccountSubscriptionEditPauses({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n  console.log(appSettings)\n  \n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"pauses\"\n\n  const buttonAdd = <ButtonAddSecondaryMenu \n                      linkTo={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/pauses/add`} />\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY, {\n    variables: {\n      accountSubscription: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const accountSubscriptionPauses = data.accountSubscriptionPauses\n  const pageInfo = data.accountSubscriptionPauses.pageInfo\n\n    // Empty list\n    if (!accountSubscriptionPauses.edges.length) { return (\n      <AccountSubscriptionEditListBase active_tab={activeTab}>\n        <div className=\"pull-right\">{buttonAdd}</div>\n        <h5>{t('relations.account.subscriptions.pauses.title_list')}</h5>\n        <p>{t('relations.account.subscriptions.pauses.empty_list')}</p>\n      </AccountSubscriptionEditListBase>\n    )}\n  // const inputData = data\n  // const account = data.account\n  // const initialdata = data.accountSubscription\n\n  // let initialPaymentMethod = \"\"\n  // if (initialdata.financePaymentMethod) {\n  //   initialPaymentMethod = initialdata.financePaymentMethod.id\n  // }\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: accountSubscriptionPauses.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.accountSubscriptionPauses.edges\n        const pageInfo = fetchMoreResult.accountSubscriptionPauses.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              accountSubscriptionPauses: {\n                __typename: previousResult.accountSubscriptionPauses.__typename,\n                edges: [ ...previousResult.accountSubscriptionPauses.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <AccountSubscriptionEditListBase active_tab={activeTab} pageInfo={pageInfo} onLoadMore={onLoadMore}>\n      <div className=\"pull-right\">{buttonAdd}</div>\n      <h5>{t('relations.account.subscriptions.pauses.title_list')}</h5>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {accountSubscriptionPauses.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {moment(node.dateStart).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  {moment(node.dateEnd).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                <div dangerouslySetInnerHTML={{__html: node.description}} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/pauses/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <AccountSubscriptionEditPauseDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </AccountSubscriptionEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauses))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA = Yup.object().shape({\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .required(t('yup.field_required')),\n  })","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\n// import { GET_INVOICE_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\n// import { GET_INVOICE_QUERY } from \"../queries\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\n// import ScheduleClassPriceBack from \"./ScheduleClassPriceBack\"\nimport AccountSubscriptionEditBase from \"../AccountSubscriptionEditBase\"\n\n\nfunction AccountSubscriptionEditPauseBase({ t, history, match, children}) {\n  const activeTab = \"pauses\"\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/pauses/`\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {children}\n    </AccountSubscriptionEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauseBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction AccountSubscriptionEditPauseForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  let title\n  if ( formTitle == \"create\" ) {\n    title = t('relations.account.subscriptions.pauses.add')\n  } else {\n    title = t('relations.account.subscriptions.pauses.edit')\n  }\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <h5>{title}</h5>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => setFieldValue(\"dateStart\", date)}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                className={(errors.dateEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateEnd}\n                onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"description\"\n                initialValue={values.description}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldValue(\"description\", e.target.getContent())\n                  setFieldTouched(\"description\", true, true)\n                }}\n              />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauseForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditPauseBase from \"./AccountSubscriptionEditPauseBase\"\nimport AccountSubscriptionEditPauseForm from \"./AccountSubscriptionEditPauseForm\"\n\n\nconst ADD_ACCOUNT_SUBSCRIPTION_PAUSE = gql`\n  mutation CreateAccountSubscriptionPause($input:CreateAccountSubscriptionPauseInput!) {\n    createAccountSubscriptionPause(input: $input) {\n      accountSubscriptionPause {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditPauseAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/pauses/`\n\n  const [addSubscriptionPause] = useMutation(ADD_ACCOUNT_SUBSCRIPTION_PAUSE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  return (\n    <AccountSubscriptionEditPauseBase>\n      <Formik\n        initialValues={{ \n          dateStart: new Date() ,\n          description: \"\"\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addSubscriptionPause({ variables: {\n            input: {\n              accountSubscription: subscriptionId,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.pauses.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditPauseForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditPauseBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauseAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY, GET_ACCOUNT_SUBSCRIPTION_PAUSE_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditPauseBase from \"./AccountSubscriptionEditPauseBase\"\nimport AccountSubscriptionEditPauseForm from \"./AccountSubscriptionEditPauseForm\"\n\n\nconst UPDATE_ACCOUNT_SUBSCRIPTION_PAUSE = gql`\n  mutation UpdateAccountSubscriptionPause($input:UpdateAccountSubscriptionPauseInput!) {\n    updateAccountSubscriptionPause(input: $input) {\n      accountSubscriptionPause {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditPauseEdit({ t, history, match }) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/pauses/`\n\n  const { loading, error, data, } = useQuery(GET_ACCOUNT_SUBSCRIPTION_PAUSE_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [updateSubscriptionPause] = useMutation(UPDATE_ACCOUNT_SUBSCRIPTION_PAUSE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  if (loading) return (\n    <AccountSubscriptionEditPauseBase>\n        <p>{t('general.loading_with_dots')}</p>\n    </AccountSubscriptionEditPauseBase>\n  )\n  // Error\n  if (error) {\n    return (\n      <AccountSubscriptionEditPauseBase>\n          { console.log(error) }\n          <p>{t('general.error_sad_smiley')}</p>\n      </AccountSubscriptionEditPauseBase>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const accountSubscriptionPause = data.accountSubscriptionPause\n\n\n\n  return (\n    <AccountSubscriptionEditPauseBase>\n      <Formik\n        initialValues={{ \n          dateStart: new Date(accountSubscriptionPause.dateStart),\n          dateEnd: new Date(accountSubscriptionPause.dateEnd),\n          description: accountSubscriptionPause.description\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateSubscriptionPause({ variables: {\n            input: {\n              id: id,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.pauses.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditPauseForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"update\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditPauseBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauseEdit))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ACCOUNT_TEACHER_PROFILE_QUERY = gql`\n  query AccountTeacherProfileQuery($id: ID!) {\n    accountTeacherProfiles(account:$id) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          account {\n            id\n          }\n          classes\n          appointments\n          events\n          role\n          education\n          bio\n          urlBio\n          urlWebsite   \n        }\n      }\n    }\n    account(id:$id) {\n      id\n      teacher\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\n\nexport const UPDATE_ACCOUNT_TEACHER_PROFILE = gql`\n  mutation UpdateAccountTeacherProfile($input:UpdateAccountTeacherProfileInput!) {\n    updateAccountTeacherProfile(input: $input) {\n      accountTeacherProfile {\n        id\n      }\n    }\n  }\n`\n\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_TEACHER_PROFILE_SCHEMA = Yup.object().shape({\n  classes: Yup.boolean(),  \n  appointments: Yup.boolean(),  \n  events: Yup.boolean(),  \n  role: Yup.string(),\n  education: Yup.string(),\n  bio: Yup.string(),\n  urlBio: Yup.string()\n    .url(t('yup.url')),\n  urlWebsite: Yup.string()\n    .url(t('yup.url')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n\nconst RelationsAccountTeacherProfileForm = ({ t, history, isSubmitting, errors, values, return_url, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"classes\" \n                  checked={values.classes} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('relations.account.teacher_profile.classes')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"classes\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"events\" \n                  checked={values.events} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('relations.account.teacher_profile.events')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"events\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"appointments\" \n                  checked={values.appointments} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('relations.account.teacher_profile.appointments')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"appointments\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.role')}>\n              <Field type=\"text\" \n                      name=\"role\" \n                      className={(errors.role) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"role\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.education')}>\n          <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"education\"\n              initialValue={values.education}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldTouched(\"education\", true)\n                setFieldValue(\"education\", e.target.getContent())\n              }}\n            />\n          <ErrorMessage name=\"education\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Form.Group label={t('general.bio')}>\n          <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"bio\"\n              initialValue={values.bio}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldTouched(\"bio\", true)\n                setFieldValue(\"bio\", e.target.getContent())\n              }}\n            />\n          <ErrorMessage name=\"bio\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.teacher_profile.url_bio')}>\n              <Field type=\"text\" \n                      name=\"urlBio\" \n                      className={(errors.urlBio) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"urlBio\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.teacher_profile.url_website')}>\n              <Field type=\"text\" \n                      name=\"urlWebsite\" \n                      className={(errors.urlWebsite) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"urlWebsite\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          \n          {/* <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsAccountTeacherProfileForm))\n\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_TEACHER_PROFILE_QUERY, UPDATE_ACCOUNT_TEACHER_PROFILE } from './queries'\nimport { ACCOUNT_TEACHER_PROFILE_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport RelationsAccountProfileForm from \"./RelationsAccountTeacherProfileForm\"\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase'\n\n\nfunction RelationsAccountTeacherProfile({ t, match}) {\n  const accountId = match.params.account_id\n  const activeLink = \"teacher_profile\"\n  const { loading, error, data } = useQuery(GET_ACCOUNT_TEACHER_PROFILE_QUERY, {\n    variables: { id: accountId }\n  })\n  const [updateAccountTeacherProfile] = useMutation(UPDATE_ACCOUNT_TEACHER_PROFILE)\n\n  if (loading) return (\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>  \n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      {console.log(error)}\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <p>{t('general.error_sad_smiley')}</p>\n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const account = data.account\n  const initialData = data.accountTeacherProfiles.edges[0].node\n\n  return (\n    <RelationsAccountProfileBase\n      user={account}\n      activeLink={activeLink}\n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            classes: initialData.classes, \n            appointments: initialData.appointments, \n            events: initialData.events, \n            role: initialData.role, \n            education: initialData.education, \n            bio: initialData.bio,\n            urlBio: initialData.urlBio,\n            urlWebsite: initialData.urlWebsite,\n          }}\n          validationSchema={ACCOUNT_TEACHER_PROFILE_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateAccountTeacherProfile({ variables: {\n                input: {\n                  account: initialData.account.id,\n                  classes: values.classes, \n                  appointments: values.appointments, \n                  events: values.events, \n                  role: values.role, \n                  education: values.education, \n                  bio: values.bio,\n                  urlBio: values.urlBio,\n                  urlWebsite: values.urlWebsite,\n                }\n              }, refetchQueries: [\n                  // Refresh local cached results for this account teacher profile\n                  {query: GET_ACCOUNT_TEACHER_PROFILE_QUERY, variables: {id: accountId}}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('relations.account.teacher_profile.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <RelationsAccountProfileForm\n              isSubmitting={isSubmitting}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              errors={errors}\n              values={values}\n            />\n          )}\n        </Formik>    \n      </Card>\n    </RelationsAccountProfileBase>\n  )\n}\n\n\n// class RelationsAccountTeacherProfile extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Organization profile props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const match = this.props.match\n//     const account_id = match.params.account_id\n//     console.log(account_id)\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//           <Container>\n//             <Query query={GET_ACCOUNT_TEACHER_PROFILE_QUERY} variables={{ id: account_id }} >\n//               {({ loading, error, data, refetch }) => {\n//                   // Loading\n//                   if (loading) return <p>{t('general.loading_with_dots')}</p>\n//                   // Error\n//                   if (error) {\n//                     console.log(error)\n//                     return <p>{t('general.error_sad_smiley')}</p>\n//                   }\n\n//                   console.log('query data')\n//                   console.log(data)\n                  \n//                   const account = data.account\n//                   const initialData = data.accountTeacherProfiles.edges[0].node\n//                   console.log(initialData)\n\n\n//                   return (\n//                     <div>\n//                       <Page.Header title={account.firstName + \" \" + account.lastName}>\n//                         <RelationsAccountsBack />\n//                       </Page.Header>\n//                       <Grid.Row>\n//                         <Grid.Col md={9}>\n//                         <Card>\n//                           <Card.Header>\n//                             <Card.Title>{t('relations.account.teacher_profile.title')}</Card.Title>\n//                             {console.log(match.params.account_id)}\n//                           </Card.Header>\n//                         <Mutation mutation={UPDATE_ACCOUNT_TEACHER_PROFILE}> \n//                          {(updateAccountTeacherProfile, { data }) => (\n//                           <Formik\n//                             initialValues={{ \n//                               classes: initialData.classes, \n//                               appointments: initialData.appointments, \n//                               events: initialData.events, \n//                               role: initialData.role, \n//                               education: initialData.education, \n//                               bio: initialData.bio,\n//                               urlBio: initialData.urlBio,\n//                               urlWebsite: initialData.urlWebsite,\n//                             }}\n//                             validationSchema={ACCOUNT_TEACHER_PROFILE_SCHEMA}\n//                             onSubmit={(values, { setSubmitting }) => {\n//                                 console.log('submit values:')\n//                                 console.log(values)\n\n//                                 updateAccountTeacherProfile({ variables: {\n//                                   input: {\n//                                     account: initialData.account.id,\n//                                     classes: values.classes, \n//                                     appointments: values.appointments, \n//                                     events: values.events, \n//                                     role: values.role, \n//                                     education: values.education, \n//                                     bio: values.bio,\n//                                     urlBio: values.urlBio,\n//                                     urlWebsite: values.urlWebsite,\n//                                   }\n//                                 }, refetchQueries: [\n//                                     // Refresh local cached results for this account teacher profile\n//                                     {query: GET_ACCOUNT_TEACHER_PROFILE_QUERY, variables: {id: account_id}}\n//                                 ]})\n//                                 .then(({ data }) => {\n//                                     console.log('got data', data)\n//                                     toast.success((t('relations.account.teacher_profile.toast_edit_success')), {\n//                                         position: toast.POSITION.BOTTOM_RIGHT\n//                                       })\n//                                     setSubmitting(false)\n//                                   }).catch((error) => {\n//                                     toast.error((t('general.toast_server_error')) + ': ' +  error, {\n//                                         position: toast.POSITION.BOTTOM_RIGHT\n//                                       })\n//                                     console.log('there was an error sending the query', error)\n//                                     setSubmitting(false)\n//                                   })\n//                             }}\n//                             >\n//                             {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n//                               <RelationsAccountProfileForm\n//                                 isSubmitting={isSubmitting}\n//                                 setFieldTouched={setFieldTouched}\n//                                 setFieldValue={setFieldValue}\n//                                 errors={errors}\n//                                 values={values}\n//                               />\n//                             )}\n//                           </Formik>\n//                         )}\n//                       </Mutation>\n//                     </Card>\n//                     </Grid.Col>                                    \n//                     <Grid.Col md={3}>\n//                       <ProfileCardSmall user={account}/>\n//                       <ProfileMenu \n//                         activeLink='teacher_profile'\n//                         account_id={account_id}\n//                       /> \n//                     </Grid.Col>\n//                   </Grid.Row>\n//                 </div>\n//               )}}\n//             </Query>\n//           </Container>\n//         </div>\n//     </SiteWrapper>\n//     )}\n//   }\n\n\nexport default withTranslation()(withRouter(RelationsAccountTeacherProfile))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let queryVars = {}\n\n  let search = localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SEARCH)\n  let showArchived = localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE)\n  \n  if (search) {\n    queryVars.name = search\n  }\n  if (showArchived === \"true\") {\n    queryVars.archived = true\n  } else {\n    queryVars.archived = false\n  }\n  \n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n","\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n    Page,\n    Grid,\n    Icon,\n    Button,\n    Container,\n  } from \"tabler-react\";\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport InputSearch from \"../../general/InputSearch\"\nimport RelationsMenu from \"../RelationsMenu\"\nimport { get_list_query_variables } from \"./tools\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n\nconst RelationsB2BBase = ({t, history, refetch, children }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"relations.title\")}>\n          <div className=\"page-options d-flex\">\n            <InputSearch \n              initialValueKey={CSLS.RELATIONS_BUSINESSES_SEARCH}\n              placeholder=\"Search...\"\n              onChange={(value) => {\n                console.log(value)\n                localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SEARCH, value)\n                refetch(get_list_query_variables())\n              }}\n            />\n          </div>\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            {children}\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"business\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/relations/b2b/add\")}>\n                <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.b2b.add')}\n              </Button>\n            </HasPermissionWrapper>\n            <RelationsMenu activeLink='b2b'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n)\n\n\n  export default withTranslation()(withRouter(RelationsB2BBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_BUSINESSES_QUERY = gql`\n  query Businesses($before:String, $after:String, $name:String, $archived: Boolean!) {\n    businesses(first:15, before:$before, after:$after, b2b:true, name_Icontains:$name, archived:$archived) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          archived\n          b2b\n          supplier\n          vip\n          name\n          address\n          postcode\n          city\n          country\n          phone\n          phone2\n          emailContact\n          emailBilling\n          registration\n          taxRegistration\n          mollieCustomerId\n        }\n      }\n    }\n  }\n`\n\nexport const GET_BUSINESS_QUERY = gql`\n  query Business($id: ID!) {\n    business(id:$id) {\n      id\n      archived\n      vip\n      name\n      address\n      postcode\n      city\n      country\n      phone\n      phone2\n      emailContact\n      emailBilling\n      registration\n      taxRegistration\n      mollieCustomerId\n    }\n  }\n`\n\nexport const UPDATE_BUSINESS = gql`\n  mutation UpdateBusiness($input: UpdateBusinessInput!) {\n    updateBusiness(input: $input) {\n      business {\n        id\n        archived\n      }\n    }\n  }\n`\n\n","import React from 'react'\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\nimport {\n  Icon,\n} from \"tabler-react\";\n\n\nconst confirm_archive = ({t, msgConfirm, msgDescription, msgSuccess, archiveFunction, functionVariables}) => {\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className='custom-ui'>\n            <h1>{t('general.confirm_archive')}</h1>\n            {msgConfirm}\n            {msgDescription}\n            <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_archive_no')}</button>\n            <button\n              className=\"btn btn-warning\"\n              onClick={() => {\n                archiveFunction(functionVariables)\n                  .then(({ data }) => {\n                    console.log('got data', data);\n                    toast.success(\n                      msgSuccess, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                  })\n                onClose()\n              }}\n            >\n              <Icon name=\"inbox\" /> {t('general.confirm_archive_yes')}\n            </button>\n          </div>\n        )\n      }\n    })\n  }\n\nexport default confirm_archive\n","import React from 'react'\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\nimport {\n  Icon,\n} from \"tabler-react\";\n\n\nconst confirm_unarchive = ({t, msgConfirm, msgDescription, msgSuccess, archiveFunction, functionVariables}) => {\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className='custom-ui'>\n            <h1>{t('general.confirm_unarchive')}</h1>\n            {msgConfirm}\n            {msgDescription}\n            <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_unarchive_no')}</button>\n            <button\n              className=\"btn btn-warning\"\n              onClick={() => {\n                archiveFunction(functionVariables)\n                  .then(({ data }) => {\n                    console.log('got data', data);\n                    toast.success(\n                      msgSuccess, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                  })\n                onClose()\n              }}\n            >\n              <Icon name=\"corner-up-left\" /> {t('general.confirm_unarchive_yes')}\n            </button>\n          </div>\n        )\n      }\n    })\n  }\n\nexport default confirm_unarchive\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Badge,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport ContentCard from \"../../general/ContentCard\"\nimport RelationsB2BBase from \"./RelationsB2BBase\"\nimport { GET_BUSINESSES_QUERY, UPDATE_BUSINESS } from \"./queries\"\nimport { get_list_query_variables } from \"./tools\"\nimport confirm_archive from \"../../../tools/confirm_archive\"\nimport confirm_unarchive from \"../../../tools/confirm_unarchive\"\nimport confirm_delete from \"../../../tools/confirm_delete\"\n\n\n\n\nconst DELETE_BUSINESS = gql`\n  mutation DeleteBusiness($input: DeleteBusinessInput!) {\n    deleteBusiness(input: $input) {\n      ok\n    }\n  }\n`\n\n\nfunction RelationsB2B({ t, history }) {\n  // Set some initial value for archived, if not found\n  if (!localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE)) {\n    localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE, false) \n  }\n\n  const { loading, error, data, fetchMore, refetch } = useQuery(GET_BUSINESSES_QUERY, { \n    variables: get_list_query_variables()\n  })\n  const [updateBusiness] = useMutation(UPDATE_BUSINESS)\n  const [deleteBusiness] = useMutation(DELETE_BUSINESS)\n\n  const headerOptions = <Card.Options>\n    <Button color={(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"false\") ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {\n              localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE, false)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.current')}\n    </Button>\n    <Button color={(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"true\") ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {\n              localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE, true)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <RelationsB2BBase refetch={refetch}>\n      <ContentCard>\n        {t(\"general.loading_with_dots\")}\n      </ContentCard>\n    </RelationsB2BBase>\n  )\n  if (error) return (\n    <RelationsB2BBase refetch={refetch}>\n      <ContentCard cardTitle={t('relations.b2b.title')}>\n        <p>{t('relations.b2b.error_loading')}</p>\n      </ContentCard>\n    </RelationsB2BBase>\n  )\n\n  let businesses = data.businesses\n\n  // Empty list\n  if (!businesses.edges.length) { return (\n    <RelationsB2BBase refetch={refetch}>\n      <ContentCard cardTitle={t('relations.b2b.title')}\n                   headerContent={headerOptions}>\n        <p>\n          {(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"true\") ? \n            t('relations.b2b.empty_archive') : \n            t(\"relations.b2b.empty_list\")}\n        </p>\n      </ContentCard>\n    </RelationsB2BBase>\n  )}\n\n  console.log(data)\n\n  \n\n  return (\n    <RelationsB2BBase refetch={refetch}>\n      <ContentCard cardTitle={t('relations.b2b.title')}\n                    headerContent={headerOptions}\n                    pageInfo={businesses.pageInfo}\n                    onLoadMore={() => {\n                      fetchMore({\n                        variables: {\n                          after: businesses.pageInfo.endCursor\n                        },\n                        updateQuery: (previousResult, { fetchMoreResult }) => {\n                          const newEdges = fetchMoreResult.businesses.edges\n                          const pageInfo = fetchMoreResult.businesses.pageInfo \n\n                          return newEdges.length\n                            ? {\n                                // Put the new businesses at the end of the list and update `pageInfo`\n                                // so we have the new `endCursor` and `hasNextPage` values\n                                businesses: {\n                                  __typename: previousResult.businesses.__typename,\n                                  edges: [ ...previousResult.businesses.edges, ...newEdges ],\n                                  pageInfo\n                                }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {data.businesses.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Link to={`/relations/b2b/${node.id}/edit`}>\n                        <Button className='btn-sm' \n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                      </Link>\n                    }\n                  </Table.Col>\n                  {/* Archive / restore buttons */}\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.archive')} \n                      href=\"\"\n                      onClick={() => {\n                        console.log(\"clicked isActive\")\n                        let id = node.id\n                        let show_archive\n                        if (localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) == \"true\") {\n                          show_archive = true\n                        } else {\n                          show_archive = false\n                        }\n\n                        updateBusiness({ variables: {\n                          input: {\n                            id,\n                            archived: !node.archived // invert, as we need the opposite from the list currently displayed\n                          }}, \n                          refetchQueries: [\n                        {query: GET_BUSINESSES_QUERY, variables: get_list_query_variables()}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(\n                            (!show_archive) ? t('relations.b2b.archived'): t('relations.b2b.restored'), {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                      {\n                        (!node.archived) ?\n                          <Icon prefix=\"fa\" name=\"inbox\" /> :\n                          t(\"general.restore\")\n                      }\n                    </button>\n                  </Table.Col>\n\n                  {/* Delete button shown when archived */}\n                    {\n                      (!node.archived) ? '' :\n                        <Table.Col className=\"text-right\" key={v4()}>\n                        <button className=\"icon btn btn-link btn-sm\" \n                          title={t('general.delete')} \n                          href=\"\"\n                          onClick={() => {\n                            confirm_delete({\n                              t: t,\n                              msgConfirm: t(\"relations.b2b.delete_confirm_msg\"),\n                              msgDescription: <span><br /><br /><ul><li>{node.name}</li></ul></span>,\n                              msgSuccess: t('relations.b2b.deleted'),\n                              deleteFunction: deleteBusiness,\n                              functionVariables: { variables: {\n                                input: {\n                                  id: node.id\n                                }\n                              }, refetchQueries: [\n                                {query: GET_BUSINESSES_QUERY, variables: get_list_query_variables()}\n                              ]}\n                            })\n                          }}\n                        >\n                          <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                        </button>\n                      </Table.Col>\n                    }\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>  \n    </RelationsB2BBase>  \n  )\n}\n\n\n// const RelationsB2B = ({ t, history }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Query query={GET_ACCOUNTS_QUERY} variables={get_list_query_variables()} notifyOnNetworkStatusChange>\n//         {({ loading, error, data, refetch, fetchMore, variables}) => {\n//           // Loading\n//           if (loading) return (\n//             <RelationsAccountsBase refetch={refetch}>\n//               <ContentCard cardTitle={t('relations.b2b.title')}>\n//                 <Dimmer active={true}\n//                         loader={true}>\n//                 </Dimmer>\n//               </ContentCard>\n//             </RelationsAccountsBase>\n//           )\n//           // Error\n//           if (error) return (\n//             <RelationsAccountsBase>\n//               <Container>\n//                 <ContentCard cardTitle={t('relations.b2b.title')}>\n//                   <p>{t('relations.b2b.error_loading')}</p>\n//                 </ContentCard>\n//               </Container>\n//             </RelationsAccountsBase>\n//           )\n//           const headerOptions = <Card.Options>\n//             <Button color={(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"true\") ? 'primary': 'secondary'}  \n//                     size=\"sm\"\n//                     onClick={() => {\n//                       localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE, true)\n//                       refetch(get_list_query_variables())\n//                     }\n//             }>\n//               {t('general.active')}\n//             </Button>\n//             <Button color={(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"false\") ? 'primary': 'secondary'} \n//                     size=\"sm\" \n//                     className=\"ml-2\" \n//                     onClick={() => {\n//                       localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE, false)\n//                       refetch(get_list_query_variables())\n//                     }\n//             }>\n//               {t('general.deleted')}\n//             </Button>\n//           </Card.Options>\n          \n//           // Empty list\n//           if (!data.businesses.edges.length) { return (\n//             <RelationsAccountsBase refetch={refetch}>\n//               <ContentCard cardTitle={t('relations.b2b.title')}\n//                             headerContent={headerOptions}>\n//                 <p>\n//                   {(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"true\") ? \n//                     t('relations.b2b.empty_list') : \n//                     t(\"relations.b2b.empty_archive\")}\n//                 </p>\n//               </ContentCard>\n//             </RelationsAccountsBase>\n//           )} else {   \n//           // Life's good! :)\n//           return (\n//             <RelationsAccountsBase refetch={refetch}>\n//               {console.log('query vars:')}\n//               {console.log(variables)}\n//               <ContentCard cardTitle={t('relations.b2b.title')}\n//                            headerContent={headerOptions}\n//                            pageInfo={data.businesses.pageInfo}\n//                            onLoadMore={() => {\n//                              fetchMore({\n//                                variables: {\n//                                  after: data.businesses.pageInfo.endCursor\n//                                },\n//                                updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                  const newEdges = fetchMoreResult.businesses.edges\n//                                  const pageInfo = fetchMoreResult.businesses.pageInfo \n\n//                                  return newEdges.length\n//                                    ? {\n//                                        // Put the new businesses at the end of the list and update `pageInfo`\n//                                        // so we have the new `endCursor` and `hasNextPage` values\n//                                       data: {\n//                                         businesses: {\n//                                           __typename: previousResult.businesses.__typename,\n//                                           edges: [ ...previousResult.businesses.edges, ...newEdges ],\n//                                           pageInfo\n//                                         }\n//                                       }\n//                                     }\n//                                   : previousResult\n//                               }\n//                             })\n//                           }} >\n//                 <Table>\n//                   <Table.Header>\n//                     <Table.Row key={v4()}>\n//                       <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                     </Table.Row>\n//                   </Table.Header>\n//                   <Table.Body>\n//                       {data.businesses.edges.map(({ node }) => (\n//                         <Table.Row key={v4()}>\n//                           <Table.Col key={v4()}>\n//                             {node.name}\n//                           </Table.Col>\n//                           {/* <Table.Col key={v4()}>\n//                             {node.email}\n//                           </Table.Col> */}\n//                           <Table.Col className=\"text-right\" key={v4()}>\n//                             {(!node.archived) ? \n//                               <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n//                               <Button className='btn-sm' \n//                                       onClick={() => history.push(\"/relations/businesses/\" + node.id + \"/edit\")}\n//                                       color=\"secondary\">\n//                                 {t('general.edit')}\n//                               </Button>\n//                             }\n//                           </Table.Col>\n//                           {/* <Mutation mutation={UPDATE_ACCOUNT_ACTIVE} key={v4()}>\n//                             {(updateAccountActive, { data }) => (\n//                               <Table.Col className=\"text-right\" key={v4()}>\n//                                 <button className=\"icon btn btn-link btn-sm\" \n//                                   title={t('general.deactivate')} \n//                                   href=\"\"\n//                                   onClick={() => {\n//                                     console.log(\"clicked archived\")\n//                                     let id = node.id\n//                                     let archived \n//                                     if (localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) == \"true\") {\n//                                       archived = true\n//                                     } else {\n//                                       archived = false\n//                                     }\n\n//                                     updateAccountActive({ variables: {\n//                                       input: {\n//                                         id,\n//                                         archived: !archived // invert, as we need the opposite from the list currently displayed\n//                                       }\n//                                 }, refetchQueries: [\n//                                     {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()}\n//                                 ]}).then(({ data }) => {\n//                                   console.log('got data', data);\n//                                   toast.success(\n//                                     (archived) ? t('relations.b2b.deactivated'): t('relations.b2b.restored')``, {\n//                                       position: toast.POSITION.BOTTOM_RIGHT\n//                                     })\n//                                 }).catch((error) => {\n//                                   toast.error((t('general.toast_server_error')) + ': ' +  error, {\n//                                       position: toast.POSITION.BOTTOM_RIGHT\n//                                     })\n//                                   console.log('there was an error sending the query', error);\n//                                 })\n//                                 }}>\n//                                   {\n//                                     (node.archived) ?\n//                                       <Icon prefix=\"fe\" name=\"trash-2\" /> :\n//                                       t(\"general.restore\")\n//                                   }\n//                                 </button>\n//                               </Table.Col>\n//                             )}\n//                           </Mutation> */}\n//                           {/* {\n//                             (node.archived) ? '' :\n//                               <Mutation mutation={DELETE_ACCOUNT} key={v4()}>\n//                                 {(deleteAccount, { data }) => (\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     <button className=\"icon btn btn-link btn-sm\" \n//                                       title={t('general.delete')} \n//                                       href=\"\"\n//                                       onClick={() => {\n//                                         confirm_delete({\n//                                           t: t,\n//                                           msgConfirm: t(\"relations.b2b.delete_confirm_msg\"),\n//                                           msgDescription: <p>{node.first_name} {node.last_name}</p>,\n//                                           msgSuccess: t('relations.b2b.deleted'),\n//                                           deleteFunction: deleteAccount,\n//                                           functionVariables: { variables: {\n//                                             input: {\n//                                               id: node.id\n//                                             }\n//                                           }, refetchQueries: [\n//                                             {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()}\n//                                           ]}\n//                                         })\n//                                     }}>\n//                                       <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n//                                     </button>\n//                                   </Table.Col>\n//                                 )}\n//                               </Mutation>\n//                           } */}\n//                         </Table.Row>\n//                       ))}\n//                   </Table.Body>\n//                 </Table>\n//               </ContentCard>\n//             </RelationsAccountsBase>\n//           )}}\n//         }\n//       </Query>\n//     </div>\n//   </SiteWrapper>\n// )\n\nexport default withTranslation()(withRouter(RelationsB2B))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nconst RelationsB2BAddFrom = ({ t, history, isSubmitting, errors, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group label={t('general.name')}>\n                <Field type=\"text\" \n                        name=\"name\" \n                        className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\" />\n                <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsB2BAddFrom))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_BUSINESSES_QUERY } from './queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { get_list_query_variables } from \"./tools\"\nimport RelationsB2BAddForm from \"./RelationB2BAddForm\"\nimport RelationsMenu from '../RelationsMenu'\n\n\nconst ADD_BUSINESS = gql`\n  mutation CreateBusiness($input:CreateBusinessInput!) {\n    createBusiness(input: $input) {\n      business {\n        id\n      }\n    }\n  }\n`\n\nconst return_url = \"/relations/b2b\"\n\nfunction RelationsB2BAdd({ t, history }) {\n  const [addBusiness] = useMutation(ADD_BUSINESS)\n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('relations.title')} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n            <Card>\n              <Card.Header>\n                <Card.Title>{t('relations.b2b.title_add')}</Card.Title>\n              </Card.Header>\n                <Formik\n                    initialValues={{ name: '' }}\n                    // validationSchema={B2BADD_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n                        addBusiness({ variables: {\n                          input: {\n                            name: values.name,\n                            b2b: true\n                          }\n                        }, refetchQueries: [\n                            {query: GET_BUSINESSES_QUERY, variables: get_list_query_variables()}\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data)\n                            const businessId = data.createBusiness.business.id\n                            history.push(`/relations/b2b/${businessId}/edit`)\n                            toast.success((t('relations.b2b.toast_add_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setSubmitting(false)\n                          })\n                    }}\n                    >\n                    {({ isSubmitting, errors }) => (\n                        <RelationsB2BAddForm\n                          isSubmitting={isSubmitting}\n                          errors={errors}\n                          return_url={return_url}\n                        />\n                    )}\n                </Formik>\n            </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"business\">\n                <Button color=\"primary btn-block mb-6\"\n                        onClick={() => history.push(return_url)}>\n                  <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                </Button>\n              </HasPermissionWrapper>\n              <RelationsMenu activeLink='accounts'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsB2BAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Button,\n  Icon,\n  Page,\n  Grid,\n  Card,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n// import OrganizationMenu from \"../OrganizationMenu\"\n// import ProfileMenu from \"./ProfileMenu\"\n\n\nfunction RelationsB2BEditBase({ t, match, history, children, cardTitle=\"\" }) {\n  const returnUrl = \"/relations/b2b\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"relations.title\")}>\n            {/* <RelationsAccountsBack /> */}\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n            <Card>\n              <Card.Header>\n                <Card.Title>{cardTitle}</Card.Title>\n              </Card.Header>\n              {children}\n            </Card>\n            </Grid.Col>                                    \n            <Grid.Col md={3}>\n              {/* B2B relation menu goes here */}\n              <HasPermissionWrapper permission=\"change\"\n                                    resource=\"business\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              {/* <RelationsMenu activeLink='b2b'/> */}\n              {/* <ProfileMenu \n                activeLink='profile'\n                account_id={account_id}\n              />  */}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsB2BEditBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport ISO_COUNTRY_CODES from \"../../../tools/iso_country_codes\"\n\n\nfunction RelationsB2BEditForm({ t, history, isSubmitting, errors, values, return_url, setFieldTouched, setFieldValue }) {\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.name')}>\n              <Field type=\"text\" \n                      name=\"name\" \n                      className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.email_contact')}>\n              <Field type=\"text\" \n                      name=\"emailContact\" \n                      className={(errors.emailContact) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"emailContact\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.email_billing')}>\n              <Field type=\"text\" \n                      name=\"emailBilling\" \n                      className={(errors.emailBilling) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"emailBilling\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.phone')}>\n              <Field type=\"text\" \n                      name=\"phone\" \n                      className={(errors.phone) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"phone\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n          <Form.Group label={t('general.phone2')}>\n              <Field type=\"text\" \n                      name=\"phone2\" \n                      className={(errors.phone2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"phone2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.address')}>\n              <Field type=\"text\" \n                      name=\"address\" \n                      className={(errors.address) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"address\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.postcode')}>\n              <Field type=\"text\" \n                      name=\"postcode\" \n                      className={(errors.postcode) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"postcode\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.city')}>\n              <Field type=\"text\" \n                      name=\"city\" \n                      className={(errors.city) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"city\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.country')}>\n              <Field component=\"select\" \n                    name=\"country\" \n                    className={(errors.country) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\"></option>\n                { ISO_COUNTRY_CODES.map(\n                    country => <option value={country.Code} key={v4()}>{country.Name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"country\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('finance.invoices.relation_company_registration')}>\n              <Field type=\"text\" \n                      name=\"registration\" \n                      className={(errors.registration) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"registration\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n          <Form.Group label={t('finance.invoices.relation_company_tax_registration')}>\n              <Field type=\"text\" \n                      name=\"taxRegistration\" \n                      className={(errors.taxRegistration) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"taxRegistration\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          \n          {/* <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button> */}\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsB2BEditForm))\n\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_BUSINESSES_QUERY, GET_BUSINESS_QUERY, UPDATE_BUSINESS } from './queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\n\nimport { get_list_query_variables } from \"./tools\"\nimport RelationsB2BEditBase from './RelationsB2BEditBase'\n// import RelationsAccountsBack from \"./RelationsAccountsBack\"\nimport RelationsB2BEditForm from \"./RelationsB2BEditForm\"\n\n// import OrganizationMenu from \"../OrganizationMenu\"\n// import ProfileMenu from \"./ProfileMenu\"\n\nfunction RelationsB2BEdit({ t, match, history}) {\n  const businessId = match.params.business_id\n  const [updateBusiness] = useMutation(UPDATE_BUSINESS)\n  const { loading, error, data, refetch } = useQuery(GET_BUSINESS_QUERY, {\n    variables: {\n      id: businessId\n    }\n  })\n\n  // Loading\n  if (loading) return <RelationsB2BEditBase>\n      <Card.Body>{t('general.loading_with_dots')}</Card.Body>\n    </RelationsB2BEditBase>\n  // Error\n  if (error) {\n    console.log(error)\n    return <RelationsB2BEditBase>\n      <Card.Body>{t('general.error_sad_smiley')}</Card.Body>\n    </RelationsB2BEditBase>\n  }\n\n  const initialData = data.business\n  console.log(initialData)\n\n  return (\n    <RelationsB2BEditBase cardTitle={t('relations.b2b.title_edit')}>\n      <Formik\n        initialValues={{ \n          name: initialData.name,\n          phone: initialData.phone,\n          phone2: initialData.phone2,\n          address: initialData.address,\n          postcode: initialData.postcode,\n          city: initialData.city,\n          country: initialData.country,\n          emailBilling: initialData.emailBilling,\n          emailContact: initialData.emailContact,\n          registration: initialData.registration,\n          taxRegistration: initialData.taxRegistration\n        }}\n        // validationSchema={ACCOUNT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            let input_vars = {\n              id: businessId,\n              name: values.name,\n              phone: values.phone,\n              phone2: values.phone2,\n              address: values.address,\n              postcode: values.postcode,\n              city: values.city,\n              country: values.country,\n              emailBilling: values.emailBilling,\n              emailContact: values.emailContact,\n              registration: values.registration,\n              taxRegistration: values.taxRegistration\n            }\n\n            updateBusiness({ variables: {\n              input: input_vars\n            }, refetchQueries: [\n                // Refetch list\n                {query: GET_BUSINESSES_QUERY, variables: get_list_query_variables()},\n                // Refresh local cached results for this account\n                {query: GET_BUSINESS_QUERY, variables: {\"id\": businessId}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('relations.b2b.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <RelationsB2BEditForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n          />\n        )}\n      </Formik>\n    </RelationsB2BEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsB2BEdit))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\n\nlet appointments_active\nlet events_active\nlet classes_active\n\nconst ScheduleMenu = ({ t, activeLink }) => (\n  <List.Group transparent={true}>\n    {(activeLink === 'appointments') ? appointments_active = true: appointments_active = false}\n    {(activeLink === 'events') ? events_active = true: events_active = false}\n    {(activeLink === 'classes') ? classes_active = true: classes_active = false}\n    \n\n    <HasPermissionWrapper \n        resource=\"scheduleclass\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to=\"#/schedule/classes\"\n          icon=\"book\"\n          active={classes_active}\n          >\n          {t('schedule.classes.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    <HasPermissionWrapper \n        resource=\"scheduleevent\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to=\"#/schedule/events\"\n          icon=\"clipboard\"\n          active={events_active}\n          >\n          {t('schedule.events.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    {/* <HasPermissionWrapper \n        resource=\"scheduleappointment\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to=\"#/schedule/appointments\"\n          icon=\"calendar\"\n          active={appointments_active}\n          >\n          {t('schedule.appointments.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper> */}\n  </List.Group>\n);\n\nexport default withTranslation()(ScheduleMenu)","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport ScheduleMenu from \"../ScheduleMenu\"\n\n\nclass ScheduleHome extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Schedule home props:\")\n    console.log(props)\n  }\n\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"schedule.title\")} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n                <Grid.Row>\n                  <HasPermissionWrapper\n                    resource=\"scheduleclass\"\n                    permission=\"view\"\n                  >\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/schedule/classes'>\n                        <StampCard header={<small>{t('schedule.classes.title')}</small>} footer={t('')} color=\"blue\" icon=\"book\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                  <HasPermissionWrapper\n                    resource=\"scheduleevent\"\n                    permission=\"view\"\n                  >\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/schedule/events'>\n                        <StampCard header={<small>{t('schedule.events.title')}</small>} footer={t('')} color=\"blue\" icon=\"clipboard\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                  {/* <HasPermissionWrapper\n                    resource=\"scheduleappointment\"\n                    permission=\"view\"\n                  >\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/schedule/appointments')}>\n                        <StampCard header={<small>{t('schedule.appointments.title')}</small>} footer={t('')} color=\"blue\" icon=\"calendar\" />\n                      </div>\n                    </Grid.Col>\n                  </HasPermissionWrapper> */}\n                </Grid.Row>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <ScheduleMenu />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(ScheduleHome))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let orderBy\n  let organizationAppointment\n  let organizationLocation\n\n  let queryVars = {\n    dateFrom: localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM), \n    dateUntil: localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL)\n  }\n\n  orderBy = localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY)\n  if (orderBy) {\n    queryVars.orderBy = orderBy\n  }\n\n  organizationAppointment = localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE)\n  if (organizationAppointment) {\n    queryVars.organizationAppointment = organizationAppointment\n  } else {\n    queryVars.organizationAppointment = \"\"\n  }\n\n  organizationLocation = localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_FILTER_LOCATION)\n  if (organizationLocation) {\n    queryVars.organizationLocation = organizationLocation\n  } else {\n    queryVars.organizationLocation = \"\"\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from './tools'\n\n\nfunction getDefaultValue(value) {\n  let defaultValue = localStorage.getItem(value)\n  if (defaultValue) {\n    return defaultValue\n  } else {\n    return \"\"\n  }\n}\n\n\nfunction updateLocalStorageAndRefetch(key, value, refetch) {\n  localStorage.setItem(key, value)\n  refetch(get_list_query_variables())\n}\n\nconst selectClass = \"form-control mb-2\"\n\n\nconst ScheduleAppointmentsFilter = ({ t, history, data, refetch }) => (\n  <div>\n    {/* Locations */}\n    <select \n      className={selectClass}\n      defaultValue={getDefaultValue(CSLS.SCHEDULE_APPOINTMENTS_FILTER_LOCATION)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.SCHEDULE_APPOINTMENTS_FILTER_LOCATION,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"schedule.appointments.filter_all_locations\")}</option>\n      {data.organizationLocations.edges.map(({ node }) =>\n        <option value={node.id} key={v4()}>{node.name}</option>\n      )}\n    </select>\n    {/* Appointments */}\n    {/* <select \n      className={selectClass}\n      defaultValue={getDefaultValue(CSLS.SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"schedule.appointments.filter_all_appointments\")}</option>\n      {data.organizationAppointments.edges.map(({ node }) =>\n        <option value={node.id} key={v4()}>{node.name}</option>\n      )}\n    </select> */}\n  </div>\n);\n\nexport default withTranslation()(withRouter(ScheduleAppointmentsFilter))","import { gql } from \"@apollo/client\"\n\nexport const GET_APPOINTMENTS_QUERY = gql`\n  query ScheduleAppointments(\n      $dateFrom: Date!, \n      $dateUntil:Date!, \n      $orderBy: String, \n      $organizationLocation: String\n    ){\n    scheduleAppointments(\n        dateFrom:$dateFrom, \n        dateUntil: $dateUntil, \n        orderBy: $orderBy, \n        organizationLocation: $organizationLocation\n    ){\n      date\n      appointments {\n        scheduleItemId\n        frequencyType\n        date\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationAppointment {\n          id\n          name\n        }\n        timeStart\n        timeEnd\n        displayPublic\n      }\n    }\n    user {\n      id\n      isActive\n      email\n      firstName\n      lastName\n      groups {\n        edges {\n          node {\n            id\n            name\n            permissions {\n              edges {\n                node {\n                  id\n                  name\n                  codename\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    organizationLocations(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationAppointments(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_APPOINTMENT_QUERY = gql`\n  query ScheduleItem($id: ID!, $before: String, $after: String, $archived: Boolean!) {\n    scheduleItem(id:$id) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleClassInputValues($after: String, $before: String, $archived: Boolean) {\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n    organizationAppointments(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Badge,\n  Dropdown,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table,\n  Text,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\n\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport ContentCard from \"../../general/ContentCard\"\nimport ScheduleMenu from \"../ScheduleMenu\"\nimport ScheduleAppointmentsFilter from \"./ScheduleAppointmentsFilter\"\n\nimport { GET_APPOINTMENTS_QUERY } from \"./queries\"\nimport { get_list_query_variables } from './tools'\n\nimport moment from 'moment'\n\n\nconst DELETE_SCHEDULE_APPOINTMENT = gql`\n  mutation DeleteScheduleAppointment($input: DeleteScheduleAppointmentInput!) {\n    deleteScheduleAppointment(input: $input) {\n      ok\n    }\n  }\n`\n\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM)) {\n  console.log('date from not found... defaulting to today...')\n  localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM, moment().format('YYYY-MM-DD')) \n  localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL, moment().add(6, 'days').format('YYYY-MM-DD')) \n} \n\n\nconst ScheduleAppointments = ({ t, history }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Query query={GET_APPOINTMENTS_QUERY} variables={get_list_query_variables()}>\n        {({ loading, error, data, refetch }) => {\n          // Loading\n          if (loading) return (\n            <Container>\n              <p>{t('general.loading_with_dots')}</p>\n            </Container>\n          )\n          // Error\n          if (error) {\n            console.log(error)\n            return (\n              <Container>\n                <p>{t('general.error_sad_smiley')}</p>\n              </Container>\n            )\n          }\n          \n          // Empty list\n          if (!data.scheduleAppointments.length) { return (\n            <ContentCard cardTitle={t('schedule.appointments.title')}>\n              <p>\n                {t('schedule.appointments.empty_list')}\n              </p>\n            </ContentCard>\n          )} else {   \n          // Life's good! :)\n          return (\n            <Container>\n              <Page.Header title={t(\"schedule.title\")}>\n                <div className=\"page-options d-flex\">\n                  <span title={t(\"schedule.appointments.tooltip_sort_by_location\")}>\n                    <Button \n                      icon=\"home\"\n                      tooltip=\"text\"\n                      className=\"mr-2\"\n                      color={\n                        ((localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY) === \"location\") || (!localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY))) ?\n                        \"azure\" : \"secondary\"\n                      }\n                      onClick={() => {\n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY, \"location\")\n                        refetch(get_list_query_variables())\n                      }}\n                    />\n                  </span>\n                  <span title={t(\"schedule.appointments.tooltip_sort_by_starttime\")}>\n                    <Button \n                      icon=\"clock\"\n                      className=\"mr-2\"\n                      color={\n                        (localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY) === \"starttime\") ?\n                        \"azure\" : \"secondary\"\n                      }\n                      onClick={() => {\n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY, \"starttime\")\n                        refetch(get_list_query_variables())\n                      }}\n                    />\n                  </span>\n                  <CSDatePicker \n                    className=\"form-control schedule-list-csdatepicker mr-2\"\n                    selected={new Date(localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM))}\n                    isClearable={false}\n                    onChange={(date) => {\n                      let nextWeekFrom = moment(date)\n                      let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n\n                      localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                      localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                      console.log(get_list_query_variables())\n\n                      refetch(get_list_query_variables())\n                    }}\n                    placeholderText={t('schedule.appointments.go_to_date')}\n                  />\n                  <Button.List className=\"schedule-list-page-options-btn-list\">\n                    <Button \n                      icon=\"chevron-left\"\n                      color=\"secondary\"\n                      onClick={ () => {\n                        let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM)).subtract(7, 'days')\n                        let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                        \n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                        refetch(get_list_query_variables())\n                    }} />\n                    <Button \n                      icon=\"sun\"\n                      color=\"secondary\"\n                      onClick={ () => {\n                        let currentWeekFrom = moment()\n                        let currentWeekUntil = moment(currentWeekFrom).add(6, 'days')\n\n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM, currentWeekFrom.format('YYYY-MM-DD')) \n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL, currentWeekUntil.format('YYYY-MM-DD')) \n                        \n                        refetch(get_list_query_variables())\n                    }} />\n                    <Button \n                      icon=\"chevron-right\"\n                      color=\"secondary\"\n                      onClick={ () => {\n                        let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM)).add(7, 'days')\n                        let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                        \n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                        refetch(get_list_query_variables())\n                    }} />\n                  </Button.List> \n                </div>\n              </Page.Header>\n              <Grid.Row>\n                <Grid.Col md={9}>\n                  { data.scheduleAppointments.map(({ date, appointments }) => (\n                    <div key={v4()}>\n                      <Card>\n                        <Card.Header>\n                          <Card.Title>\n                            <b>{moment(date).format(\"dddd\")}</b> {' '}\n                            <span className=\"text-muted\">\n                              {moment(date).format(\"LL\")} \n                            </span>\n                          </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                          {!(appointments.length) ? t('schedule.appointments.empty_list') :\n                            <Table>\n                              <Table.Header>\n                                <Table.Row key={v4()}>\n                                  <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n                                  <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n                                  <Table.ColHeader>{t('general.appointment')}</Table.ColHeader>\n                                  <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                                  <Table.ColHeader></Table.ColHeader>\n                                </Table.Row>\n                              </Table.Header>\n                              <Table.Body>\n                                {appointments.map((\n                                  { scheduleItemId, \n                                    frequencyType,\n                                    date, \n                                    organizationLocationRoom, \n                                    organizationAppointment, \n                                    timeStart, \n                                    timeEnd,\n                                    displayPublic }) => (\n                                  <Table.Row key={v4()}>\n                                    <Table.Col>\n                                      {/* Start & end time */}\n                                      {moment(date + ' ' + timeStart).format('LT')} {' - '}\n                                      {moment(date + ' ' + timeEnd).format('LT')} { ' ' }\n                                      {(frequencyType === 'SPECIFIC') ? <Badge color=\"primary\">{t('general.once')}</Badge> : null }\n                                    </Table.Col>\n                                    <Table.Col>\n                                      {/* Location */}\n                                      {organizationLocationRoom.organizationLocation.name} {' '}\n                                      <span className=\"text-muted\"> &bull; {organizationLocationRoom.name}</span>\n                                    </Table.Col>\n                                    <Table.Col>\n                                      {/* Type */}\n                                      {/* {organizationAppointment.name} <br /> */}\n                                    </Table.Col>\n                                    <Table.Col>\n                                      {/* Public */}\n                                      <BadgeBoolean value={displayPublic} />\n                                    </Table.Col>\n                                    <Table.Col>\n                                      <Dropdown\n                                        key={v4()}\n                                        className=\"pull-right\"\n                                        type=\"button\"\n                                        toggle\n                                        color=\"secondary btn-sm\"\n                                        triggerContent={t(\"general.actions\")}\n                                        items={[\n                                          <Dropdown.Item key={v4()}>Dropdown Link</Dropdown.Item>,\n                                          <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleclass\">\n                                            <Dropdown.ItemDivider key={v4()} />\n                                            <Dropdown.Item\n                                              key={v4()}\n                                              badge={t('schedule.appointments.all_appointments_in_series')}\n                                              badgeType=\"secondary\"\n                                              icon=\"edit-2\"\n                                              onClick={() => history.push('/schedule/appointments/all/edit/' + scheduleItemId)}>\n                                                {t(\"general.edit\")}\n                                            </Dropdown.Item>\n                                          </HasPermissionWrapper>,\n                                          <HasPermissionWrapper key={v4()} permission=\"delete\" resource=\"scheduleclass\">\n                                            <Dropdown.ItemDivider key={v4()} />\n                                            <Mutation mutation={DELETE_SCHEDULE_APPOINTMENT} key={v4()}>\n                                              {(deleteScheduleAppointment, { data }) => (\n                                                  <Dropdown.Item\n                                                    key={v4()}\n                                                    badge={t('schedule.appointments.all_appointments_in_series')}\n                                                    badgeType=\"danger\"\n                                                    icon=\"trash-2\"\n                                                    onClick={() => {\n                                                      confirm_delete({\n                                                        t: t,\n                                                        msgConfirm: t(\"schedule.appointments.delete_confirm_msg\"),\n                                                        msgDescription: <p key={v4()}>\n                                                          {moment(date + ' ' + timeStart).format('LT')} {' - '}\n                                                          {moment(date + ' ' + timeEnd).format('LT')} {' '} @ {' '}\n                                                          {organizationLocationRoom.organizationLocation.name} {' '}\n                                                          {organizationLocationRoom.name}\n                                                          </p>,\n                                                        msgSuccess: t('schedule.appointments.deleted'),\n                                                        deleteFunction: deleteScheduleAppointment,\n                                                        functionVariables: { variables: {\n                                                          input: {\n                                                            id: scheduleItemId\n                                                          }\n                                                        }, refetchQueries: [\n                                                          { query: GET_APPOINTMENTS_QUERY, variables: get_list_query_variables() }\n                                                        ]}\n                                                      })\n                                                  }}>\n                                                  {t(\"general.delete\")}\n                                                  </Dropdown.Item>\n                                              )}\n                                            </Mutation>\n                                          </HasPermissionWrapper>\n                                        ]}\n                                      />\n                                    </Table.Col>\n                                  </Table.Row>\n                                ))}\n                              </Table.Body>\n                            </Table>\n                          }\n                        </Card.Body>\n                      </Card>\n                    </div>\n                    ))}\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"scheduleclass\">\n                  <Button color=\"primary btn-block mb-1\"\n                          onClick={() => history.push(\"/schedule/appointments/add\")}>\n                    <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.appointments.add')}\n                  </Button>\n                </HasPermissionWrapper>\n                <div>\n                  <Button\n                    className=\"pull-right\"\n                    color=\"link\"\n                    size=\"sm\"\n                    onClick={() => {\n                      localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE, \"\")\n                      localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_FILTER_LEVEL, \"\")\n                      localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_FILTER_LOCATION, \"\")\n                      refetch(get_list_query_variables())\n                    }}\n                  >\n                    {t(\"general.clear\")}\n                  </Button>\n                </div>\n                <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n                <ScheduleAppointmentsFilter data={data} refetch={refetch} />\n                <h5>{t(\"general.menu\")}</h5>\n                <ScheduleMenu activeLink='appointments'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      )}}}\n      </Query>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(ScheduleAppointments))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nlet edit_active\nlet teachers_available_active\n\nconst AppointmentEditMenu = ({ t, activeLink, appointmentId }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'edit') ? edit_active = true: edit_active = false}\n        {(activeLink === 'teachers_available') ? teachers_available_active = true: teachers_available_active = false}\n        \n        <HasPermissionWrapper\n          resource=\"scheduleappointment\"\n          permission=\"change\"\n        >        \n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to={\"#/schedule/appointments/all/edit/\" + appointmentId}\n              icon=\"edit-3\"\n              active={edit_active}\n              >\n              {t('general.edit')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper\n          resource=\"scheduleappointment\"\n          permission=\"change\"\n        >     \n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to={\"#/schedule/appointments/all/teachers_available/\" + appointmentId}\n              icon=\"users\"\n              active={teachers_available_active}\n              >\n              {t('general.teachers_available')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n    </List.Group>\n);\n\nexport default withTranslation()(AppointmentEditMenu)","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const APPOINTMENT_SCHEMA = Yup.object().shape({\n    frequencyType: Yup.string()\n      .required(t('yup.field_required')),\n    organizationLocationRoom: Yup.string()\n      .required(t('yup.field_required')),\n    dateStart: Yup.date()\n      .required(t('yup.field_required')),\n    timeStart: Yup.date()\n      .typeError(t('yup.time_required'))\n      .required(t('yup.field_required')),\n    timeEnd: Yup.date()\n      .typeError(t('yup.time_required'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport DatePicker from \"react-datepicker\"\nimport { withTranslation } from 'react-i18next'\n\nconst CSTimePicker = ({t, selected, onChange=f=>f, onBlur=f=>f, className=\"form-control\", clearable=true, placeholderText=\"\"}) =>\n    <DatePicker \n        todayButton={t('general.today')}\n        dateFormat={t('system.datepicker_timeformat')}\n        selected={selected}\n        placeholderText={(placeholderText) ? placeholderText : t('datepicker.placeholder_time')}\n        isClearable={clearable}\n        showTimeSelect\n        showTimeSelectOnly\n        timeIntervals={15}\n        className={className}\n        dropdownMode=\"select\"\n        onChange={(date) => onChange(date)}\n        onBlur={() => onBlur()}\n    />\n\nexport default withTranslation()(CSTimePicker)","import React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport CSTimePicker from \"../../ui/CSTimePicker\"\n\nconst ScheduleAppointmentForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, touched, return_url }) => (\n    <FoForm>\n      <Card.Body>\n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"displayPublic\" \n              checked={values.displayPublic} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('schedule.appointments.public')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n        </Form.Group>  \n        <Form.Group label={t('schedule.appointments.frequencyType')}>\n          <Field component=\"select\" \n                name=\"frequencyType\" \n                className={(errors.frequencyType) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"SPECIFIC\" key={v4()}>{t('schedule.appointments.select_specific')}</option>\n            <option value=\"WEEKLY\" key={v4()}>{t('schedule.appointments.select_weekly')}</option>\n          </Field>\n          <ErrorMessage name=\"frequencyType\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n          <Form.Group label={t('schedule.appointments.frequencyInterval')}>\n            <Field component=\"select\" \n                  name=\"frequencyInterval\" \n                  className={(errors.frequencyInterval) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"1\" key={v4()}>{t('general.monday')}</option>\n              <option value=\"2\" key={v4()}>{t('general.tuesday')}</option>\n              <option value=\"3\" key={v4()}>{t('general.wednesday')}</option>\n              <option value=\"4\" key={v4()}>{t('general.thursday')}</option>\n              <option value=\"5\" key={v4()}>{t('general.friday')}</option>\n              <option value=\"6\" key={v4()}>{t('general.saturday')}</option>\n              <option value=\"7\" key={v4()}>{t('general.sunday')}</option>\n            </Field>\n            <ErrorMessage name=\"frequencyInterval\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        }\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.location')}>\n              <Field component=\"select\" \n                    name=\"organizationLocationRoom\" \n                    className={(errors.organizationLocationRoom) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.please_select\")}</option>\n                {inputData.organizationLocationRooms.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.organizationLocation.name} - {node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLocationRoom\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        {/* <Form.Group label={t('general.appointment')}>\n          <Field component=\"select\" \n                name=\"organizationAppointment\" \n                className={(errors.organizationAppointment) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"\" key={v4()}>{t(\"general.please_select\")}</option>\n            {inputData.organizationAppointments.edges.map(({ node }) =>\n              <option value={node.id} key={v4()}>{node.name}</option>\n            )}\n          </Field>\n          <ErrorMessage name=\"organizationAppointment\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>  */}\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={(values.frequencyType == \"SPECIFIC\") ? t('general.date') : t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateEnd\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n            <Grid.Col>\n              <Form.Group label={t('general.date_end')}>\n                <CSDatePicker \n                  selected={values.dateEnd}\n                  onChange={(date) => {\n                    setFieldValue(\"dateEnd\", date)\n                    setFieldTouched(\"dateEnd\", true)\n                  }}\n                  onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                  placeholderText={t('schedule.appointments.placeholder_enddate')}\n                />\n                <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          }\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n           <Form.Group label={t('general.time_start')}>\n              <CSTimePicker \n                className={(errors.timeStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeStart}\n                onChange={(date) => setFieldValue(\"timeStart\", date)}\n                onBlur={() => setFieldTouched(\"timeStart\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n           <Form.Group label={t('general.time_end')}>\n              <CSTimePicker \n                className={(errors.timeEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeEnd}\n                onChange={(date) => setFieldValue(\"timeEnd\", date)}\n                onBlur={() => setFieldTouched(\"timeEnd\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.note')}>\n          <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"note\"\n              initialValue={values.note}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"note\", e.target.getContent())\n                setFieldTouched(\"note\", true, true)\n              }}\n            />\n          <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n        >\n          {t('general.submit')}\n        </Button>\n        <Button color=\"link\" onClick={() => history.push(return_url)}>\n            {t('general.cancel')}\n        </Button>\n      </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(ScheduleAppointmentForm))","// @flow\n\nimport React, { Component } from 'react'\nimport { Query, Mutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APPOINTMENTS_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { get_list_query_variables } from './tools'\nimport { APPOINTMENT_SCHEMA } from './yupSchema'\nimport ScheduleAppointmentForm from './ScheduleAppointmentForm'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO, dateToLocalISOTime } from '../../../tools/date_tools'\n\nimport ScheduleMenu from '../ScheduleMenu'\n\n\nconst CREATE_APPOINTMENT = gql`\n  mutation CreateScheduleAppointment($input:CreateScheduleAppointmentInput!) {\n    createScheduleAppointment(input: $input) {\n      scheduleItem {\n        id\n        scheduleItemType\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n        displayPublic\n      }\n    }\n  }\n`\n\n\nclass ScheduleAppointmentAdd extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Schedule appointment add add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const history = this.props.history\n    const return_url = \"/schedule/appointments\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n\n          <Query query={GET_INPUT_VALUES_QUERY} variables = {{archived: false}} >\n            {({ loading, error, data, refetch }) => {\n              // Loading\n              if (loading) return (\n                <Container>\n                  <p>{t('general.loading_with_dots')}</p>\n                </Container>\n              )\n              // Error\n              if (error) {\n                console.log(error)\n                return (\n                  <Container>\n                    <p>{t('general.error_sad_smiley')}</p>\n                  </Container>\n                )\n              }\n              \n              console.log('query data')\n              console.log(data)\n              const inputData = data\n\n              return (\n                <Container>\n                  <Page.Header title={t(\"schedule.title\")} />\n                  <Grid.Row>\n                    <Grid.Col md={9}>\n                      <Card>\n                        <Card.Header>\n                          <Card.Title>{t('schedule.appointments.title_add')}</Card.Title>\n                        </Card.Header>\n                        <Mutation mutation={CREATE_APPOINTMENT} onCompleted={() => history.push(return_url)}> \n                  {(createSubscription, { data }) => (\n                    <Formik\n                      initialValues={{ \n                        displayPublic: true,\n                        frequencyType: \"WEEKLY\",\n                        frequencyInterval: 1,\n                        organizationLocationRoom: \"\",\n                        dateStart: new Date(),\n                        timeStart: new Date(),\n                        timeEnd: new Date(),\n                      }}\n                      validationSchema={APPOINTMENT_SCHEMA}\n                      onSubmit={(values, { setSubmitting }) => {\n                          console.log('submit values:')\n                          console.log(values)\n\n                          let frequencyInterval = values.frequencyInterval\n                          if (values.frequencyType == 'SPECIFIC')\n                            frequencyInterval = 0\n\n                          let dateEnd\n                            if (values.dateEnd) {\n                              dateEnd = dateToLocalISO(values.dateEnd)\n                            } else {\n                              dateEnd = values.dateEnd\n                            }\n                          \n                          createSubscription({ variables: {\n                            input: {\n                              displayPublic: values.displayPublic,\n                              frequencyType: values.frequencyType,\n                              frequencyInterval: frequencyInterval,\n                              organizationLocationRoom: values.organizationLocationRoom,\n                              dateStart: dateToLocalISO(values.dateStart),\n                              dateEnd: dateEnd,\n                              timeStart: dateToLocalISOTime(values.timeStart),\n                              timeEnd: dateToLocalISOTime(values.timeEnd)\n                            }\n                          }, refetchQueries: [\n                              {query: GET_APPOINTMENTS_QUERY, variables: get_list_query_variables()}\n                          ]})\n                          .then(({ data }) => {\n                              console.log('got data', data)\n                              toast.success((t('schedule.appointments.toast_add_success')), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error)\n                              setSubmitting(false)\n                            })\n                      }}\n                      >\n                      {({ isSubmitting, setFieldValue, setFieldTouched, errors, values, touched }) => (\n                            <ScheduleAppointmentForm\n                              inputData={inputData}\n                              isSubmitting={isSubmitting}\n                              setFieldValue={setFieldValue}\n                              setFieldTouched={setFieldTouched}\n                              errors={errors}\n                              values={values}\n                              touched={touched}\n                              return_url={return_url}\n                            >\n                              {console.log('########## v & e')}\n                              {console.log(values)}\n                              {console.log(errors)}\n                              {console.log(touched)}\n                            </ScheduleAppointmentForm>\n                          )\n                        }\n                    </Formik>\n                    )}\n                  </Mutation>\n                </Card>\n                    </Grid.Col>\n                      <Grid.Col md={3}>\n                        <HasPermissionWrapper permission=\"add\"\n                                              resource=\"scheduleappointment\">\n                          <Button color=\"primary btn-block mb-6\"\n                                  onClick={() => history.push(return_url)}>\n                            <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                          </Button>\n                        </HasPermissionWrapper>\n                        <ScheduleMenu activeLink='appointments'/>\n                      </Grid.Col>\n                    </Grid.Row>\n                  </Container>\n            )}}\n          </Query>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(ScheduleAppointmentAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nconst AppointmentEditBack = ({ t }) => (\n  <div className=\"page-options d-flex\">\n    <Link to=\"/schedule/appointments\" \n          className='btn btn-outline-secondary btn-sm'>\n        <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('schedule.title')}\n    </Link>\n  </div>\n)\n\nexport default withTranslation()(AppointmentEditBack)","// @flow\n\nimport React, { Component } from 'react'\nimport { t } from 'i18next'\nimport { Query } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container,\n} from \"tabler-react\"\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport { GET_APPOINTMENT_QUERY } from \"../queries\"\n\nimport AppointmentEditMenu from './AppointmentEditMenu'\nimport AppointmentEditBack from './AppointmentEditBack';\nimport { appointment_edit_all_subtitle } from \"./tools\"\n\n\nclass AppointmentEditBase extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Schedule appointment edit add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const appointmentId = match.params.appointment_id\n    const menu_activeLink = this.props.menu_activeLink\n    const default_card = this.props.default_card\n    const sidebar_button = this.props.sidebar_button\n\n    return (\n      <Query query={GET_APPOINTMENT_QUERY} variables = {{id: appointmentId, archived: false}} >\n        {({ loading, error, data, refetch }) => {\n          // Loading\n          if (loading) return (\n            <p>{t('general.loading_with_dots')}</p>\n          )\n          // Error\n          if (error) {\n            console.log(error)\n            return (\n              <p>{t('general.error_sad_smiley')}</p>\n            )\n          }\n          \n          console.log('query data')\n          console.log(data)\n          const initialValues = data.scheduleItem\n\n          const initialTimeStart = TimeStringToJSDateOBJ(initialValues.timeStart)\n          const subtitle = appointment_edit_all_subtitle({\n            t: t,\n            location: initialValues.organizationLocationRoom.organizationLocation.name,\n            locationRoom: initialValues.organizationLocationRoom.name,\n            starttime: initialTimeStart\n          })\n          \n          return (\n            <Container>\n              <Page.Header \n                title={t(\"schedule.title\")} \n                subTitle={subtitle}\n              >\n                <AppointmentEditBack />\n              </Page.Header>\n              <Grid.Row>\n                <Grid.Col md={9}>\n                  {!default_card ? this.props.children :\n                    <Card>\n                      <Card.Header>\n                        <Card.Title>{this.props.card_title}</Card.Title>\n                      </Card.Header>\n                      <Card.Body>\n                        {this.props.children}\n                      </Card.Body>\n                    </Card>\n                  }\n                </Grid.Col>\n                <Grid.Col md={3}>\n                  {sidebar_button}\n                  <h5>{t('general.menu')}</h5>\n                  <AppointmentEditMenu activeLink={menu_activeLink} appointmentId={appointmentId}/>\n                </Grid.Col>\n              </Grid.Row>\n            </Container>\n          )\n        }}\n      </Query>\n)}}\n\nAppointmentEditBase.defaultProps = {\n  default_card: true,\n  sidebar_button: \"\",\n  card_title: t('schedule.appointments.title_edit')\n}\n\nexport default withTranslation()(withRouter(AppointmentEditBase))","import moment from 'moment'\n\nexport function appointment_edit_all_subtitle({t, location, locationRoom, starttime}) {\n  return t('general.appointment') + ': ' + location + ' (' + locationRoom + ') @ ' + moment(starttime).format('LT')\n}\n\n\nexport function represent_teacher_role(t, role) {\n  console.log(role)\n  switch (role) {\n    case \"SUB\":\n      return t('schedule.classes.teacher_roles.sub')\n      break\n    case \"ASSISTANT\":\n      return t('schedule.classes.teacher_roles.assistant')\n      break\n    case \"KARMA\":\n      return t('schedule.classes.teacher_roles.karma')\n      break\n    default:\n      return \"\"\n      break\n  }\n}\n","// @flow\n\nimport React, { Component } from 'react'\nimport { Query, Mutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APPOINTMENTS_QUERY, GET_APPOINTMENT_QUERY } from '../../queries'\nimport { get_list_query_variables } from '../../tools'\nimport { APPOINTMENT_SCHEMA } from '../../yupSchema'\nimport ScheduleAppointmentForm from '../../ScheduleAppointmentForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO, dateToLocalISOTime, TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n\nimport AppointmentEditBase from '../AppointmentEditBase'\n\n\nconst UPDATE_APPOINTMENT = gql`\n  mutation UpdateScheduleAppointment($input:UpdateScheduleAppointmentInput!) {\n    updateScheduleAppointment(input: $input) {\n      scheduleItem {\n        id\n        scheduleItemType\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n        displayPublic\n      }\n    }\n  }\n`\n\n\nclass ScheduleAppointmentEditAll extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Schedule appointment edit add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.appointment_id\n    const return_url = \"/schedule/appointments\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Query query={GET_APPOINTMENT_QUERY} variables = {{id: id, archived: false}} >\n            {({ loading, error, data, refetch }) => {\n              // Loading\n              if (loading) return (\n                <AppointmentEditBase menu_activeLink=\"edit\">\n                  <p>{t('general.loading_with_dots')}</p>\n                </AppointmentEditBase>\n              )\n              // Error\n              if (error) {\n                console.log(error)\n                return (\n                  <AppointmentEditBase menu_activeLink=\"edit\">\n                    <p>{t('general.error_sad_smiley')}</p>\n                  </AppointmentEditBase>\n                )\n              }\n              \n              console.log('query data')\n              console.log(data)\n              const inputData = data\n              const initialValues = data.scheduleItem\n\n              const initialTimeStart = TimeStringToJSDateOBJ(initialValues.timeStart)\n              const initialTimeEnd = TimeStringToJSDateOBJ(initialValues.timeEnd)\n              \n              return (\n                <AppointmentEditBase \n                  menu_activeLink=\"edit\"\n                >\n                  <Mutation mutation={UPDATE_APPOINTMENT} onCompleted={() => history.push(return_url)}> \n                  {(updateScheduleAppointment, { data }) => (\n                    <Formik\n                      initialValues={{ \n                        displayPublic: initialValues.displayPublic,\n                        frequencyType: initialValues.frequencyType,\n                        frequencyInterval: initialValues.frequencyInterval,\n                        organizationLocationRoom: initialValues.organizationLocationRoom.id,\n                        dateStart: initialValues.dateStart,\n                        dateEnd: initialValues.dateEnd,\n                        timeStart: initialTimeStart,\n                        timeEnd: initialTimeEnd,\n                      }}\n                      validationSchema={APPOINTMENT_SCHEMA}\n                      onSubmit={(values, { setSubmitting }) => {\n                          console.log('submit values:')\n                          console.log(values)\n\n                          let frequencyInterval = values.frequencyInterval\n                          if (values.frequencyType == 'SPECIFIC')\n                            frequencyInterval = 0\n\n                          let dateEnd\n                            if (values.dateEnd) {\n                              dateEnd = dateToLocalISO(values.dateEnd)\n                            } else {\n                              dateEnd = values.dateEnd\n                            }  \n\n                          updateScheduleAppointment({ variables: {\n                            input: {\n                              id: id,\n                              displayPublic: values.displayPublic,\n                              frequencyType: values.frequencyType,\n                              frequencyInterval: frequencyInterval,\n                              organizationLocationRoom: values.organizationLocationRoom,\n                              dateStart: dateToLocalISO(values.dateStart),\n                              dateEnd: dateEnd,\n                              timeStart: dateToLocalISOTime(values.timeStart),\n                              timeEnd: dateToLocalISOTime(values.timeEnd)\n                            }\n                          }, refetchQueries: [\n                              {query: GET_APPOINTMENTS_QUERY, variables: get_list_query_variables()}\n                          ]})\n                          .then(({ data }) => {\n                              console.log('got data', data)\n                              toast.success((t('schedule.appointments.toast_edit_success')), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error)\n                              setSubmitting(false)\n                            })\n                      }}\n                      >\n                      {({ isSubmitting, setFieldValue, setFieldTouched, errors, values, touched }) => (\n                        <ScheduleAppointmentForm\n                          inputData={inputData}\n                          isSubmitting={isSubmitting}\n                          setFieldValue={setFieldValue}\n                          setFieldTouched={setFieldTouched}\n                          errors={errors}\n                          values={values}\n                          touched={touched}\n                          return_url={return_url}\n                        >\n                          {console.log('########## v & e')}\n                          {console.log(values)}\n                          {console.log(errors)}\n                          {console.log(touched)}\n                        </ScheduleAppointmentForm>\n                      )}\n                    </Formik>\n                    )}\n                  </Mutation>\n                </AppointmentEditBase>\n            )}}\n           </Query>\n         </div>\n      </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(ScheduleAppointmentEditAll))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\n\nfunction StatusIcon({color=\"\"}) {\n  let className\n\n  switch (color) {\n    case \"success\":\n      className=\"bg-success\"\n      break\n    case \"warning\":\n      className=\"bg-warning\"\n      break\n    case \"danger\":\n      className=\"bg-danger\"\n      break\n    case \"primary\":\n      className=\"bg-primary\"\n      break\n    default:\n      className=\"bg-secondary\"\n  }\n\n  return <span className={\"status-icon \" + className} />\n}\n\n\nexport default withTranslation()(StatusIcon)\n\n\n\n","import React from \"react\"\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport StatusIcon from \"../../ui/StatusIcon\"\n\n\nexport function get_list_query_variables() {\n  let orderBy\n  let organizationClasstype\n  let organizationLevel\n  let organizationLocation\n\n  let queryVars = {\n    attendanceCountType: \"ATTENDING_AND_BOOKED\",\n    dateFrom: localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM), \n    dateUntil: localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL)\n  }\n\n  orderBy = localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY)\n  if (orderBy) {\n    queryVars.orderBy = orderBy\n  }\n\n  organizationClasstype = localStorage.getItem(CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE)\n  if (organizationClasstype) {\n    queryVars.organizationClasstype = organizationClasstype\n  } else {\n    queryVars.organizationClasstype = \"\"\n  }\n\n  organizationLevel = localStorage.getItem(CSLS.SCHEDULE_CLASSES_FILTER_LEVEL)\n  if (organizationLevel) {\n    queryVars.organizationLevel = organizationLevel\n  } else {\n    queryVars.organizationLevel = \"\"\n  }\n\n  organizationLocation = localStorage.getItem(CSLS.SCHEDULE_CLASSES_FILTER_LOCATION)\n  if (organizationLocation) {\n    queryVars.organizationLocation = organizationLocation\n  } else {\n    queryVars.organizationLocation = \"\"\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n\nexport function represent_teacher(name, role) {\n  let textColor = false\n\n  switch (role) {\n    case \"SUB\":\n      textColor = \"text-blue\"\n      break\n    case \"ASSISTANT\":\n      textColor = \"text-green\"\n      break\n    case \"KARMA\":\n      textColor = \"text-orange\"\n      break\n  }\n\n  if (textColor) {\n    return <span className={textColor}>{name}</span>\n  } else {\n    return name\n  }\n}\n\n\nexport function represent_class_status(status) {\n  let color\n\n  switch (status) {\n    case \"SUB\":\n      color = \"primary\"\n      break\n    case \"CANCELLED\":\n      color = \"warning\"\n      break\n    case \"OPEN\":\n      color = \"danger\"\n      break\n    default:\n      color = \"success\"\n  }\n\n  return <StatusIcon color={color} />\n}\n\n\nexport function get_class_messages(t, status, description, holiday, holidayName) {\n  let messages\n  if (holiday) {\n    return <span>{t(\"general.holiday\")} ({holidayName})</span>\n  }\n\n  if (status == 'CANCELED') {\n    return description\n  }\n}","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from './tools'\n\n\nfunction getDefaultValue(value) {\n  let defaultValue = localStorage.getItem(value)\n  if (defaultValue) {\n    return defaultValue\n  } else {\n    return \"\"\n  }\n}\n\n\nfunction updateLocalStorageAndRefetch(key, value, refetch) {\n  localStorage.setItem(key, value)\n  refetch(get_list_query_variables())\n\n}\n\nconst selectClass = \"form-control custom-select mb-2\"\n\n\nconst ScheduleClassesFilter = ({ t, history, data, refetch }) => (\n  <div>\n    {/* Locations */}\n    <select \n      className={selectClass}\n      defaultValue={getDefaultValue(CSLS.SCHEDULE_CLASSES_FILTER_LOCATION)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.SCHEDULE_CLASSES_FILTER_LOCATION,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"schedule.classes.filter_all_locations\")}</option>\n      {data.organizationLocations.edges.map(({ node }) =>\n        <option value={node.id} key={v4()}>{node.name}</option>\n      )}\n    </select>\n    {/* Classtypes */}\n    <select \n      className={selectClass}\n      defaultValue={getDefaultValue(CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"schedule.classes.filter_all_classtypes\")}</option>\n      {data.organizationClasstypes.edges.map(({ node }) =>\n        <option value={node.id} key={v4()}>{node.name}</option>\n      )}\n    </select>\n    {/* Levels */}\n    <select \n      className={selectClass}\n      defaultValue={getDefaultValue(CSLS.SCHEDULE_CLASSES_FILTER_LEVEL)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.SCHEDULE_CLASSES_FILTER_LEVEL,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"schedule.classes.filter_all_levels\")}</option>\n      {data.organizationLevels.edges.map(({ node }) =>\n        <option value={node.id} key={v4()}>{node.name}</option>\n      )}\n    </select>\n  </div>\n);\n\nexport default withTranslation()(withRouter(ScheduleClassesFilter))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport CSDatePicker from \"../../ui/CSDatePicker\"\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport ScheduleMenu from \"../ScheduleMenu\"\nimport ScheduleClassesFilter from \"./ScheduleClassesFilter\"\n\nimport { \n  get_list_query_variables, \n} from './tools'\n\nimport moment from 'moment'\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)) {\n  console.log('date from not found... defaulting to today...')\n  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, moment().format('YYYY-MM-DD')) \n  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, moment().add(6, 'days').format('YYYY-MM-DD')) \n} \n\n\nfunction ScheduleClassesBase ({ t, history, children, data, refetch }) {\n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"schedule.title\")}>\n            <div className=\"page-options d-flex\">\n              <span title={t(\"schedule.classes.tooltip_sort_by_location\")}>\n                <Button \n                  icon=\"home\"\n                  tooltip=\"text\"\n                  className=\"mr-2\"\n                  color={\n                    ((localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY) === \"location\") || (!localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY))) ?\n                    \"azure\" : \"secondary\"\n                  }\n                  onClick={() => {\n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_ORDER_BY, \"location\")\n                    refetch(get_list_query_variables())\n                  }}\n                />\n              </span>\n              <span title={t(\"schedule.classes.tooltip_sort_by_starttime\")}>\n                <Button \n                  icon=\"clock\"\n                  className=\"mr-2\"\n                  color={\n                    (localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY) === \"starttime\") ?\n                    \"azure\" : \"secondary\"\n                  }\n                  onClick={() => {\n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_ORDER_BY, \"starttime\")\n                    refetch(get_list_query_variables())\n                  }}\n                />\n              </span>\n              <CSDatePicker \n                className=\"form-control schedule-list-csdatepicker mr-2\"\n                selected={new Date(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM))}\n                isClearable={false}\n                onChange={(date) => {\n                  let nextWeekFrom = moment(date)\n                  let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n\n                  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                  console.log(get_list_query_variables())\n\n                  refetch(get_list_query_variables())\n                }}\n                placeholderText={t('schedule.classes.go_to_date')}\n              />\n              <Button.List className=\"schedule-list-page-options-btn-list\">\n                <Button \n                  icon=\"chevron-left\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)).subtract(7, 'days')\n                    let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                    \n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                    refetch(get_list_query_variables())\n                }} />\n                <Button \n                  icon=\"sunset\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let currentWeekFrom = moment()\n                    let currentWeekUntil = moment(currentWeekFrom).add(6, 'days')\n\n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, currentWeekFrom.format('YYYY-MM-DD')) \n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, currentWeekUntil.format('YYYY-MM-DD')) \n                    \n                    refetch(get_list_query_variables())\n                }} />\n                <Button \n                  icon=\"chevron-right\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)).add(7, 'days')\n                    let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                    \n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                    refetch(get_list_query_variables())\n                }} />\n              </Button.List> \n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"scheduleclass\">\n                <Button color=\"primary btn-block mb-1\"\n                        onClick={() => history.push(\"/schedule/classes/add\")}>\n                  <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.add')}\n                </Button>\n              </HasPermissionWrapper>\n              {(data) ? \n                <div>\n                  <div>\n                    <Button\n                      className=\"float-right\"\n                      color=\"link\"\n                      size=\"sm\"\n                      onClick={() => {\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE, \"\")\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LEVEL, \"\")\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LOCATION, \"\")\n                        refetch(get_list_query_variables())\n                      }}\n                    >\n                      {t(\"general.clear\")}\n                    </Button>\n                  </div>\n                  <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n                  <ScheduleClassesFilter data={data} refetch={refetch} />\n                </div>\n              : \"\"}\n              <h5>{t(\"general.menu\")}</h5>\n              <ScheduleMenu activeLink='classes'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_CLASSES_QUERY = gql`\n  query ScheduleClasses(\n      $dateFrom: Date!, \n      $dateUntil:Date!, \n      $orderBy: String, \n      $organizationClasstype: String,\n      $organizationLevel: String,\n      $organizationLocation: String,\n      $attendanceCountType: String!\n    ){\n    scheduleClasses(\n        dateFrom:$dateFrom, \n        dateUntil: $dateUntil, \n        orderBy: $orderBy, \n        organizationClasstype: $organizationClasstype,\n        organizationLevel: $organizationLevel,\n        organizationLocation: $organizationLocation,\n        attendanceCountType: $attendanceCountType,\n        publicOnly: false\n    ){\n      date\n      bookingOpenOn\n      classes {\n        scheduleItemId\n        frequencyType\n        date\n        status\n        holiday\n        holidayName\n        description\n        account {\n          id\n          fullName\n        }\n        role\n        account2 {\n          id\n          fullName\n        }\n        role2\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        timeStart\n        timeEnd\n        availableSpacesOnline\n        availableSpacesTotal\n        displayPublic\n        bookingStatus\n      }\n    }\n    organizationLocations(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationClasstypes(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_CLASS_QUERY = gql`\n  query ScheduleItem($id: ID!, $before: String, $after: String) {\n    scheduleItem(id:$id) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      spaces\n      walkInSpaces\n      displayPublic\n      infoMailContent\n    }\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n    organizationClasstypes(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleClassInputValues($after: String, $before: String) {\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n    organizationClasstypes(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const CREATE_CLASS = gql`\n  mutation CreateScheduleClass($input:CreateScheduleClassInput!) {\n    createScheduleClass(input: $input) {\n      scheduleItem {\n        id\n        scheduleItemType\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n        displayPublic\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport {\n  Badge,\n  Dropdown,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table,\n  Text,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\n\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport ContentCard from \"../../general/ContentCard\"\nimport ScheduleMenu from \"../ScheduleMenu\"\nimport ScheduleClassesFilter from \"./ScheduleClassesFilter\"\nimport ScheduleClassesBase from './ScheduleClassesBase'\n\nimport { GET_CLASSES_QUERY } from \"./queries\"\nimport { \n  get_class_messages,\n  get_list_query_variables, \n  represent_class_status,\n  represent_teacher \n} from './tools'\n\nimport moment from 'moment'\n\n\nconst DELETE_SCHEDULE_CLASS = gql`\n  mutation DeleteScheduleClass($input: DeleteScheduleClassInput!) {\n    deleteScheduleClass(input: $input) {\n      ok\n    }\n  }\n`\n\n\nconst confirm_delete = ({t, msgConfirm, msgDescription, msgSuccess, deleteFunction, functionVariables}) => {\n  confirmAlert({\n    customUI: ({ onClose }) => {\n      return (\n        <div key={v4()} className='custom-ui'>\n          <h1>{t('general.confirm_delete')}</h1>\n          {msgConfirm}\n          {msgDescription}\n          <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_delete_no')}</button>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              deleteFunction(functionVariables)\n                .then(({ data }) => {\n                  console.log('got data', data);\n                  toast.success(\n                    msgSuccess, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error);\n                })\n              onClose()\n            }}\n          >\n            <Icon name=\"trash-2\" /> {t('general.confirm_delete_yes')}\n          </button>\n        </div>\n      )\n    }\n  })\n}\n\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)) {\n  console.log('date from not found... defaulting to today...')\n  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, moment().format('YYYY-MM-DD')) \n  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, moment().add(6, 'days').format('YYYY-MM-DD')) \n} \n\n\nfunction ScheduleClasses ({ t, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const {loading, error, data, refetch} = useQuery(GET_CLASSES_QUERY, {\n    variables: get_list_query_variables()\n  })\n  const [deleteScheduleClass] = useMutation(DELETE_SCHEDULE_CLASS)\n\n  if (loading) {\n    return (\n      <ScheduleClassesBase>\n        <p>{t('general.loading_with_dots')}</p>\n      </ScheduleClassesBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <ScheduleClassesBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ScheduleClassesBase>\n    )\n  }\n\n  const classes = data.scheduleClasses\n       \n  // Empty list\n  if (!classes.length) { return (\n    <ScheduleClassesBase>\n      <p>\n        {t('schedule.classes.empty_list')}\n      </p>\n    </ScheduleClassesBase>\n  )} \n\n  return (\n    <ScheduleClassesBase data={data} refetch={refetch}>\n      { data.scheduleClasses.map(({ date, classes }) => (\n        <div key={v4()}>\n          <Card>\n            <Card.Header>\n              <Card.Title>\n                <b>{moment(date).format(\"dddd\")}</b> {' '}\n                <span className=\"text-muted\">\n                  {moment(date).format(\"LL\")} \n                </span>\n              </Card.Title>\n            </Card.Header>\n            {!(classes.length) ? <Card.Body>{t('schedule.classes.empty_list')}</Card.Body> :\n              <Table cards>\n                <Table.Header>\n                  <Table.Row key={v4()}>\n                    <Table.ColHeader /> \n                    <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n                    <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n                    <Table.ColHeader>{t('general.class')}</Table.ColHeader>\n                    <Table.ColHeader>{t('general.teacher')}</Table.ColHeader>\n                    <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                    <Table.ColHeader></Table.ColHeader>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {classes.map((\n                    { scheduleItemId, \n                      frequencyType,\n                      date, \n                      status,\n                      holiday,\n                      holidayName,\n                      description,\n                      account, \n                      role,\n                      account2,\n                      role2,\n                      organizationLocationRoom, \n                      organizationClasstype, \n                      organizationLevel,\n                      timeStart, \n                      timeEnd,\n                      displayPublic }) => (\n                    <Table.Row key={v4()}>\n                      <Table.Col>\n                        {represent_class_status(status)}\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Start & end time */}\n                        {moment(date + ' ' + timeStart).format(timeFormat)} {' - '}\n                        {moment(date + ' ' + timeEnd).format(timeFormat)} { ' ' }\n                        {(frequencyType === 'SPECIFIC') ? <Badge color=\"primary\">{t('general.once')}</Badge> : null } <br />\n                        <small className=\"text-muted\">{get_class_messages(t, status, description, holiday, holidayName)}</small>\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Location */}\n                        {organizationLocationRoom.organizationLocation.name} <br />\n                        <small className=\"text-muted\">{organizationLocationRoom.name}</small>\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Type and level */}\n                        {organizationClasstype.name} <br />\n                        <small className=\"text-muted\">\n                          {(organizationLevel) ? organizationLevel.name: \"\"}\n                        </small>\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Teacher(s) */}\n                        { (account) ? \n                            represent_teacher(account.fullName, role) : \n                            <span className=\"text-red\">{t(\"schedule.classes.no_teacher\")}</span>\n                        } <br />\n                        <small className=\"text-muted\">\n                          {(account2) ? represent_teacher(account2.fullName, role2) : \"\"}\n                        </small>\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Public */}\n                        <BadgeBoolean value={displayPublic} />\n                      </Table.Col>\n                      <Table.Col>\n                        <Dropdown\n                          key={v4()}\n                          className=\"pull-right\"\n                          type=\"button\"\n                          toggle\n                          color=\"secondary btn-sm\"\n                          triggerContent={t(\"general.actions\")}\n                          items={[\n                            <HasPermissionWrapper key={v4()} permission=\"view\" resource=\"scheduleitemattendance\">\n                              <Dropdown.Item\n                                key={v4()}\n                                icon=\"check-circle\"\n                                onClick={() => history.push('/schedule/classes/class/attendance/' + scheduleItemId + '/' + date)}>\n                                  {t(\"general.attendance\")}\n                              </Dropdown.Item>\n                            </HasPermissionWrapper>,\n                            <HasPermissionWrapper key={v4()} permission=\"view\" resource=\"scheduleclassweeklyotc\">\n                              <Dropdown.Item\n                                key={v4()}\n                                icon=\"edit-3\"\n                                onClick={() => history.push('/schedule/classes/class/edit/' + scheduleItemId + '/' + date)}>\n                                  {t(\"general.edit\")}\n                              </Dropdown.Item>\n                            </HasPermissionWrapper>,\n                            <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleclass\">\n                              <Dropdown.ItemDivider key={v4()} />\n                              <Dropdown.Item\n                                key={v4()}\n                                badge={t('schedule.classes.all_classes_in_series')}\n                                badgeType=\"secondary\"\n                                icon=\"edit-3\"\n                                onClick={() => history.push('/schedule/classes/all/edit/' + scheduleItemId)}>\n                                  {t(\"general.edit\")}\n                              </Dropdown.Item>\n                            </HasPermissionWrapper>,\n                            <HasPermissionWrapper key={v4()} permission=\"delete\" resource=\"scheduleclass\">\n                              <Dropdown.ItemDivider key={v4()} />\n                              <Dropdown.Item\n                                key={v4()}\n                                badge={t('schedule.classes.all_classes_in_series')}\n                                badgeType=\"danger\"\n                                icon=\"trash-2\"\n                                onClick={() => {\n                                  confirm_delete({\n                                    t: t,\n                                    msgConfirm: t(\"schedule.classes.delete_confirm_msg\"),\n                                    msgDescription: <p key={v4()}>\n                                      {moment(date + ' ' + timeStart).format('LT')} {' - '}\n                                      {moment(date + ' ' + timeEnd).format('LT')} {' '} @ {' '}\n                                      {organizationLocationRoom.organizationLocation.name} {' '}\n                                      {organizationLocationRoom.name}\n                                      {organizationClasstype.Name}\n                                      </p>,\n                                    msgSuccess: t('schedule.classes.deleted'),\n                                    deleteFunction: deleteScheduleClass,\n                                    functionVariables: { variables: {\n                                      input: {\n                                        id: scheduleItemId\n                                      }\n                                    }, refetchQueries: [\n                                      { query: GET_CLASSES_QUERY, variables: get_list_query_variables() }\n                                    ]}\n                                  })\n                              }}>\n                              {t(\"general.delete\")}\n                              </Dropdown.Item>\n                            </HasPermissionWrapper>\n                          ]}\n                        />\n                      </Table.Col>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            }\n          </Card>\n        </div>\n      ))}\n    </ScheduleClassesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClasses))\n\n//     <SiteWrapper>\n//       <div className=\"my-3 my-md-5\">\n//         <Query query={GET_CLASSES_QUERY} variables={get_list_query_variables()}>\n//           {({ loading, error, data, refetch }) => {\n//             // Loading\n//             if (loading) return (\n//               <Container>\n//                 <p>{t('general.loading_with_dots')}</p>\n//               </Container>\n//             )\n//             // Error\n//             if (error) {\n//               console.log(error)\n//               return (\n//                 <Container>\n//                   <p>{t('general.error_sad_smiley')}</p>\n//                 </Container>\n//               )\n//             }\n//             const headerOptions = <Card.Options>\n//               {/* <Button color={(!archived) ? 'primary': 'secondary'}  \n//                       size=\"sm\"\n//                       onClick={() => {archived=false; refetch({archived});}}>\n//                 {t('general.current')}\n//               </Button>\n//               <Button color={(archived) ? 'primary': 'secondary'} \n//                       size=\"sm\" \n//                       className=\"ml-2\" \n//                       onClick={() => {archived=true; refetch({archived});}}>\n//                 {t('general.archive')}\n//               </Button> */}\n//             </Card.Options>\n            \n//             // Empty list\n//             if (!data.scheduleClasses.length) { return (\n//               <ContentCard cardTitle={t('schedule.classes.title')}\n//                             headerContent={headerOptions}\n//                             hasCardBody={true}>\n//                 <p>\n//                   {t('schedule.classes.empty_list')}\n//                 </p>\n//               </ContentCard>\n//             )} else {   \n\n//             console.log(data)\n//             // Life's good! :)\n//             return (\n//               <Container>\n//                 <Page.Header title={t(\"schedule.title\")}>\n//                   <div className=\"page-options d-flex\">\n//                     <span title={t(\"schedule.classes.tooltip_sort_by_location\")}>\n//                       <Button \n//                         icon=\"home\"\n//                         tooltip=\"text\"\n//                         className=\"mr-2\"\n//                         color={\n//                           ((localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY) === \"location\") || (!localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY))) ?\n//                           \"azure\" : \"secondary\"\n//                         }\n//                         onClick={() => {\n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_ORDER_BY, \"location\")\n//                           refetch(get_list_query_variables())\n//                         }}\n//                       />\n//                     </span>\n//                     <span title={t(\"schedule.classes.tooltip_sort_by_starttime\")}>\n//                       <Button \n//                         icon=\"clock\"\n//                         className=\"mr-2\"\n//                         color={\n//                           (localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY) === \"starttime\") ?\n//                           \"azure\" : \"secondary\"\n//                         }\n//                         onClick={() => {\n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_ORDER_BY, \"starttime\")\n//                           refetch(get_list_query_variables())\n//                         }}\n//                       />\n//                     </span>\n//                     <CSDatePicker \n//                       className=\"form-control schedule-list-csdatepicker mr-2\"\n//                       selected={new Date(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM))}\n//                       isClearable={false}\n//                       onChange={(date) => {\n//                         let nextWeekFrom = moment(date)\n//                         let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n\n//                         localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n//                         localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n//                         console.log(get_list_query_variables())\n\n//                         refetch(get_list_query_variables())\n//                       }}\n//                       placeholderText={t('schedule.classes.go_to_date')}\n//                     />\n//                     <Button.List className=\"schedule-list-page-options-btn-list\">\n//                       <Button \n//                         icon=\"chevron-left\"\n//                         color=\"secondary\"\n//                         onClick={ () => {\n//                           let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)).subtract(7, 'days')\n//                           let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                          \n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n//                           refetch(get_list_query_variables())\n//                       }} />\n//                       <Button \n//                         icon=\"sunset\"\n//                         color=\"secondary\"\n//                         onClick={ () => {\n//                           let currentWeekFrom = moment()\n//                           let currentWeekUntil = moment(currentWeekFrom).add(6, 'days')\n\n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, currentWeekFrom.format('YYYY-MM-DD')) \n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, currentWeekUntil.format('YYYY-MM-DD')) \n                          \n//                           refetch(get_list_query_variables())\n//                       }} />\n//                       <Button \n//                         icon=\"chevron-right\"\n//                         color=\"secondary\"\n//                         onClick={ () => {\n//                           let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)).add(7, 'days')\n//                           let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                          \n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n//                           refetch(get_list_query_variables())\n//                       }} />\n//                     </Button.List> \n//                   </div>\n//                 </Page.Header>\n//                 <Grid.Row>\n//                   <Grid.Col md={9}>\n//                     {\n                      \n//                       ))}\n//                 </Grid.Col>\n//                 <Grid.Col md={3}>\n//                   <HasPermissionWrapper permission=\"add\"\n//                                         resource=\"scheduleclass\">\n//                     <Button color=\"primary btn-block mb-1\"\n//                             onClick={() => history.push(\"/schedule/classes/add\")}>\n//                       <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.add')}\n//                     </Button>\n//                   </HasPermissionWrapper>\n//                   <div>\n//                     <Button\n//                       className=\"pull-right\"\n//                       color=\"link\"\n//                       size=\"sm\"\n//                       onClick={() => {\n//                         localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE, \"\")\n//                         localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LEVEL, \"\")\n//                         localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LOCATION, \"\")\n//                         refetch(get_list_query_variables())\n//                       }}\n//                     >\n//                       {t(\"general.clear\")}\n//                     </Button>\n//                   </div>\n//                   <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n//                   <ScheduleClassesFilter data={data} refetch={refetch} />\n//                   <h5>{t(\"general.menu\")}</h5>\n//                   <ScheduleMenu activeLink='classes'/>\n//               </Grid.Col>\n//             </Grid.Row>\n//           </Container>\n//         )}}}\n//         </Query>\n//       </div>\n//     </SiteWrapper>\n//   )\n// }\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const CLASS_SCHEMA = Yup.object().shape({\n    frequencyType: Yup.string()\n      .required(t('yup.field_required')),\n    organizationLocationRoom: Yup.string()\n      .required(t('yup.field_required')),\n    organizationClasstype: Yup.string()\n      .required(t('yup.field_required')),\n    dateStart: Yup.date()\n      .required(t('yup.field_required')),\n    timeStart: Yup.date()\n      .typeError(t('yup.time_required'))\n      .required(t('yup.field_required')),\n    timeEnd: Yup.date()\n      .typeError(t('yup.time_required'))\n      .required(t('yup.field_required')),\n    spaces: Yup.number(),\n    walkInSpaces: Yup.number(),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport CSTimePicker from \"../../ui/CSTimePicker\"\n\nconst ScheduleClassForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, touched, returnUrl }) => (\n    <FoForm>\n      <Card.Body>\n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"displayPublic\" \n              checked={values.displayPublic} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('schedule.classes.public')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n        </Form.Group>  \n        <Form.Group label={t('schedule.classes.frequencyType')}>\n          <Field component=\"select\" \n                name=\"frequencyType\" \n                className={(errors.frequencyType) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"SPECIFIC\" key={v4()}>{t('schedule.classes.select_specific')}</option>\n            <option value=\"WEEKLY\" key={v4()}>{t('schedule.classes.select_weekly')}</option>\n          </Field>\n          <ErrorMessage name=\"frequencyType\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n          <Form.Group label={t('schedule.classes.frequencyInterval')}>\n            <Field component=\"select\" \n                  name=\"frequencyInterval\" \n                  className={(errors.frequencyInterval) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"1\" key={v4()}>{t('general.monday')}</option>\n              <option value=\"2\" key={v4()}>{t('general.tuesday')}</option>\n              <option value=\"3\" key={v4()}>{t('general.wednesday')}</option>\n              <option value=\"4\" key={v4()}>{t('general.thursday')}</option>\n              <option value=\"5\" key={v4()}>{t('general.friday')}</option>\n              <option value=\"6\" key={v4()}>{t('general.saturday')}</option>\n              <option value=\"7\" key={v4()}>{t('general.sunday')}</option>\n            </Field>\n            <ErrorMessage name=\"frequencyInterval\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        }\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.location')}>\n              <Field component=\"select\" \n                    name=\"organizationLocationRoom\" \n                    className={(errors.organizationLocationRoom) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.please_select\")}</option>\n                {inputData.organizationLocationRooms.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.organizationLocation.name} - {node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLocationRoom\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.level')}>\n              <Field component=\"select\" \n                    name=\"organizationLevel\" \n                    className={(errors.organizationLevels) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"\")}</option>\n                {inputData.organizationLevels.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLevels\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.class')}>\n          <Field component=\"select\" \n                name=\"organizationClasstype\" \n                className={(errors.organizationClasstype) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"\" key={v4()}>{t(\"general.please_select\")}</option>\n            {inputData.organizationClasstypes.edges.map(({ node }) =>\n              <option value={node.id} key={v4()}>{node.name}</option>\n            )}\n          </Field>\n          <ErrorMessage name=\"organizationClasstype\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group> \n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={(values.frequencyType == \"SPECIFIC\") ? t('general.date') : t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateStart\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n            <Grid.Col>\n              <Form.Group label={t('general.date_end')}>\n                <CSDatePicker \n                  selected={values.dateEnd}\n                  onChange={(date) => {\n                    setFieldValue(\"dateEnd\", date)\n                    setFieldTouched(\"dateEnd\", true)\n                  }}\n                  onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                  placeholderText={t('schedule.classes.placeholder_enddate')}\n                />\n                <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          }\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n           <Form.Group label={t('general.time_start')}>\n              <CSTimePicker \n                className={(errors.timeStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeStart}\n                onChange={(date) => setFieldValue(\"timeStart\", date)}\n                onBlur={() => setFieldTouched(\"timeStart\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n           <Form.Group label={t('general.time_end')}>\n              <CSTimePicker \n                className={(errors.timeEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeEnd}\n                onChange={(date) => setFieldValue(\"timeEnd\", date)}\n                onBlur={() => setFieldTouched(\"timeEnd\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.spaces')}>\n              <Field type=\"text\" \n                    name=\"spaces\" \n                    className={(errors.spaces) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"spaces\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.spaces_walk_in')}>\n              <Field type=\"text\" \n                    name=\"walkInSpaces\" \n                    className={(errors.walkInSpaces) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"walkInSpaces\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.note')}>\n          <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"note\"\n              initialValue={values.note}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"note\", e.target.getContent())\n                setFieldTouched(\"note\", true, true)\n              }}\n            />\n          <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Form.Group label={t('general.info_mail')}>\n          <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"infoMailContent\"\n              initialValue={values.infoMailContent}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"infoMailContent\", e.target.getContent())\n                setFieldTouched(\"infoMailContent\", true, true)\n              }}\n            />\n          <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n        >\n        {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button color=\"link\">\n              {t('general.cancel')}\n          </Button>\n        </Link>\n      </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(ScheduleClassForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport ScheduleMenu from '../ScheduleMenu'\n\n\nfunction ScheduleClassAddBase({t, children}) {\n  const returnUrl = \"/schedule/classes\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"schedule.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"scheduleclass\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              <ScheduleMenu activeLink='classes'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassAddBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_CLASSES_QUERY, GET_INPUT_VALUES_QUERY, CREATE_CLASS } from './queries'\nimport { get_list_query_variables } from './tools'\nimport { CLASS_SCHEMA } from './yupSchema'\nimport ScheduleClassForm from './ScheduleClassForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\nimport { dateToLocalISO, dateToLocalISOTime } from '../../../tools/date_tools'\n\nimport ScheduleClassAddBase from './ScheduleClassAddBase'\n\n\nfunction ScheduleClassAdd({t, history}) {\n  const cardTitle = t('schedule.classes.title_add')\n  const returnUrl = \"/schedule/classes\"\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES_QUERY)\n  const [ createScheduleClass ] = useMutation(CREATE_CLASS)\n  \n\n  if (loading) return (\n    <ScheduleClassAddBase>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>\n        </Card.Body>\n      </Card>\n    </ScheduleClassAddBase>\n  )\n\n  if (error) return (\n    <ScheduleClassAddBase>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <p>{t('general.error_sad_smiley')}</p>\n        </Card.Body>\n      </Card>\n    </ScheduleClassAddBase>\n  )\n\n  const inputData = data\n\n  return (\n    <ScheduleClassAddBase>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            displayPublic: true,\n            frequencyType: \"WEEKLY\",\n            frequencyInterval: 1,\n            organizationLocationRoom: \"\",\n            organizationClasstype: \"\",\n            organizationLevel: \"\",\n            dateStart: new Date(),\n            timeStart: new Date(),\n            timeEnd: new Date(),\n            spaces: \"\",\n            walkInSpaces: \"\"\n          }}\n          validationSchema={CLASS_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              let frequencyInterval = values.frequencyInterval\n              if (values.frequencyType == 'SPECIFIC')\n                frequencyInterval = 0\n\n              let dateEnd\n                if (values.dateEnd) {\n                  dateEnd = dateToLocalISO(values.dateEnd)\n                } else {\n                  dateEnd = values.dateEnd\n                }\n              \n              createScheduleClass({ variables: {\n                input: {\n                  displayPublic: values.displayPublic,\n                  frequencyType: values.frequencyType,\n                  frequencyInterval: frequencyInterval,\n                  organizationLocationRoom: values.organizationLocationRoom,\n                  organizationClasstype: values.organizationClasstype,\n                  organizationLevel: values.organizationLevel,\n                  dateStart: dateToLocalISO(values.dateStart),\n                  dateEnd: dateEnd,\n                  timeStart: dateToLocalISOTime(values.timeStart),\n                  timeEnd: dateToLocalISOTime(values.timeEnd),\n                  spaces: values.spaces,\n                  walkInSpaces: values.walkInSpaces\n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSES_QUERY, variables: get_list_query_variables()}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('schedule.classes.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values, touched }) => (\n                <ScheduleClassForm\n                  inputData={inputData}\n                  isSubmitting={isSubmitting}\n                  setFieldValue={setFieldValue}\n                  setFieldTouched={setFieldTouched}\n                  errors={errors}\n                  values={values}\n                  touched={touched}\n                  returnUrl={returnUrl}\n                >\n                </ScheduleClassForm>\n              )\n           }\n        </Formik>\n      </Card>      \n    </ScheduleClassAddBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassAdd))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../HasPermissionWrapper\"\n\nlet edit_active\nlet classpasses_active\nlet subscriptions_active\nlet teachers_active\nlet prices_active\n\nconst ClassEditMenu = ({ t, activeLink, classId }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'edit') ? edit_active = true: edit_active = false}\n        {(activeLink === 'classpasses') ? classpasses_active = true: classpasses_active = false}\n        {(activeLink === 'subscriptions') ? subscriptions_active = true: subscriptions_active = false}\n        {(activeLink === 'teachers') ? teachers_active = true: teachers_active = false}\n        {(activeLink === 'prices') ? prices_active = true: prices_active = false}        \n\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/schedule/classes/all/edit/\" + classId}\n            icon=\"edit-3\"\n            active={edit_active}\n            >\n            {t('general.edit')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/schedule/classes/all/teachers/\" + classId}\n            icon=\"users\"\n            active={teachers_active}\n            >\n            {t('general.teachers')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/schedule/classes/all/prices/\" + classId}\n            icon=\"dollar-sign\"\n            active={prices_active}\n            >\n            {t('general.prices')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/schedule/classes/all/subscriptions/\" + classId}\n            icon=\"edit\"\n            active={subscriptions_active}\n            >\n            {t('general.subscriptions')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/schedule/classes/all/classpasses/\" + classId}\n            icon=\"edit\"\n            active={classpasses_active}\n            >\n            {t('general.classpasses')}\n        </List.GroupItem>\n    </List.Group>\n);\n\nexport default withTranslation()(ClassEditMenu)","import { gql } from \"@apollo/client\"\n\nexport const UPDATE_CLASS = gql`\nmutation UpdateScheduleClass($input:UpdateScheduleClassInput!) {\n  updateScheduleClass(input: $input) {\n    scheduleItem {\n      id\n      scheduleItemType\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n}\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nconst ClassEditBack = ({ t }) => (\n  <div className=\"page-options d-flex\">\n    <Link to=\"/schedule/classes\" \n          className='btn btn-outline-secondary btn-sm'>\n        <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('schedule.title')}\n    </Link>\n  </div>\n)\n\nexport default withTranslation()(ClassEditBack)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../SiteWrapper\"\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\n\nimport ClassEditMenu from './ClassEditMenu'\nimport ClassEditBack from './ClassEditBack';\n\n\nfunction ClassEditBaseBase({t, match, children, subTitle=\"\", cardTitle=\"\", defaultCard=true, menuActiveLink=\"\", sidebarButton=\"\"}) {\n  const classId = match.params.class_id\n  \n  return (\n    <SiteWrapper>\n      <Container>\n        <Page.Header \n          title={t(\"schedule.title\")} \n          subTitle={subTitle}\n        >\n          <ClassEditBack />\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            {(!defaultCard) ? children :\n              <Card title={cardTitle}>\n                <Card.Body>\n                  {children}\n                </Card.Body>\n              </Card>\n            }\n          </Grid.Col>\n          <Grid.Col md={3}>\n            {sidebarButton}\n            <h5>{t('general.menu')}</h5>\n            <ClassEditMenu activeLink={menuActiveLink} classId={classId}/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ClassEditBaseBase))","import moment from 'moment'\n\nexport function class_edit_all_subtitle({t, location, locationRoom, classtype, starttime}) {\n  return t('general.class') + ': ' + location + ' (' + locationRoom + ') - ' + classtype + ' @ ' + moment(starttime).format('LT')\n}\n\n\nexport function represent_teacher_role(t, role) {\n  console.log(role)\n  switch (role) {\n    case \"SUB\":\n      return t('schedule.classes.teacher_roles.sub')\n      break\n    case \"ASSISTANT\":\n      return t('schedule.classes.teacher_roles.assistant')\n      break\n    case \"KARMA\":\n      return t('schedule.classes.teacher_roles.karma')\n      break\n    default:\n      return \"\"\n      break\n  }\n}\n","// @flow\n\nimport React, { Component } from 'react'\nimport { t } from 'i18next'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container,\n} from \"tabler-react\"\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport { GET_CLASS_QUERY } from \"../queries\"\n\nimport ClassEditMenu from './ClassEditMenu'\nimport ClassEditBack from './ClassEditBack'\nimport ClassEditBaseBase from './ClassEditBaseBase'\nimport { class_edit_all_subtitle } from \"./tools\"\n\n\nfunction ClassEditBase({t, match, children, menuActiveLink=\"\", defaultCard=true, sidebarButton=\"\", cardTitle=\"\"}) {\n  const classId = match.params.class_id\n  const { loading, error, data } = useQuery(GET_CLASS_QUERY, { variables: {\n    id: classId\n  }})\n\n  if (!cardTitle) {\n    cardTitle = t('schedule.classes.title_edit')\n  }\n\n  if (loading) return (\n    <ClassEditBaseBase \n      cardTitle={cardTitle}\n      defaultCard={true}\n      sidebarButton={sidebarButton}\n      menuActiveLink={menuActiveLink}\n    >\n      <p>{t('general.loading_with_dots')}</p>\n    </ClassEditBaseBase>\n  )\n\n  if (error) return (\n    <ClassEditBaseBase \n      cardTitle={cardTitle}\n      defaultCard={true}\n      sidebarButton={sidebarButton}\n      menuActiveLink={menuActiveLink}\n    >\n      {console.log(error)}\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBaseBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const initialValues = data.scheduleItem\n\n  const initialTimeStart = TimeStringToJSDateOBJ(initialValues.timeStart)\n  const subTitle = class_edit_all_subtitle({\n    t: t,\n    location: initialValues.organizationLocationRoom.organizationLocation.name,\n    locationRoom: initialValues.organizationLocationRoom.name,\n    classtype: initialValues.organizationClasstype.name,\n    starttime: initialTimeStart\n  })\n\n  return (\n    <ClassEditBaseBase \n      subTitle={subTitle}\n      cardTitle={cardTitle}\n      sidebarButton={sidebarButton}\n      defaultCard={defaultCard}\n      menuActiveLink={menuActiveLink}\n    >\n      {children}\n    </ClassEditBaseBase>\n  )\n\n}\n\nexport default withTranslation()(withRouter(ClassEditBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\n\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_CLASSES_QUERY, GET_CLASS_QUERY } from '../../queries'\nimport { UPDATE_CLASS } from './queries'\n\nimport { get_list_query_variables } from '../../tools'\nimport { CLASS_SCHEMA } from '../../yupSchema'\nimport ScheduleClassForm from '../../ScheduleClassForm'\n\nimport { dateToLocalISO, dateToLocalISOTime, TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\nimport ClassEditBase from '../ClassEditBase'\nimport { Card } from 'tabler-react';\n\n\nfunction ScheduleClassEditAll({t, match}) {\n  const id = match.params.class_id\n  const menuActiveLink = \"edit\"\n  const returnUrl = \"/schedule/classes\"\n  const cardTitle = t('schedule.classes.title_edit')\n  const { loading, error, data } = useQuery(GET_CLASS_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateScheduleClass ] = useMutation(UPDATE_CLASS)\n\n  if (loading) return (\n    <ClassEditBase menu_activeLink={menuActiveLink}>\n      <p>{t('general.loading_with_dots')}</p>\n    </ClassEditBase>\n  )\n\n  if (error) return (\n    <ClassEditBase menu_activeLink={menuActiveLink}>\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const initialValues = data.scheduleItem\n\n  let initialLevelID = \"\"\n  if (initialValues.organizationLevel) {\n    initialLevelID = initialValues.organizationLevel.id\n  }\n\n  const initialTimeStart = TimeStringToJSDateOBJ(initialValues.timeStart)\n  const initialTimeEnd = TimeStringToJSDateOBJ(initialValues.timeEnd)\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  let dateEnd = null\n  if (initialValues.dateStart) {\n    dateStart = new Date(initialValues.dateStart)\n  }\n  if (initialValues.dateEnd) {\n    dateEnd = new Date(initialValues.dateEnd)\n  }\n\n\n  return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink}\n      defaultCard={false}\n    >\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            displayPublic: initialValues.displayPublic,\n            frequencyType: initialValues.frequencyType,\n            frequencyInterval: initialValues.frequencyInterval,\n            organizationLocationRoom: initialValues.organizationLocationRoom.id,\n            organizationClasstype: initialValues.organizationClasstype.id,\n            organizationLevel: initialLevelID,\n            dateStart: dateStart,\n            dateEnd: dateEnd,\n            timeStart: initialTimeStart,\n            timeEnd: initialTimeEnd,\n            spaces: initialValues.spaces,\n            walkInSpaces: initialValues.walkInSpaces,\n            infoMailContent: initialValues.infoMailContent\n          }}\n          validationSchema={CLASS_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              let frequencyInterval = values.frequencyInterval\n              if (values.frequencyType == 'SPECIFIC')\n                frequencyInterval = 0\n\n              let dateEnd\n                if (values.dateEnd) {\n                  dateEnd = dateToLocalISO(values.dateEnd)\n                } else {\n                  dateEnd = values.dateEnd\n                }  \n\n              updateScheduleClass({ variables: {\n                input: {\n                  id: id,\n                  displayPublic: values.displayPublic,\n                  frequencyType: values.frequencyType,\n                  frequencyInterval: frequencyInterval,\n                  organizationLocationRoom: values.organizationLocationRoom,\n                  organizationClasstype: values.organizationClasstype,\n                  organizationLevel: values.organizationLevel,\n                  dateStart: dateToLocalISO(values.dateStart),\n                  dateEnd: dateEnd,\n                  timeStart: dateToLocalISOTime(values.timeStart),\n                  timeEnd: dateToLocalISOTime(values.timeEnd),\n                  spaces: values.spaces,\n                  walkInSpaces: values.walkInSpaces,\n                  infoMailContent: values.infoMailContent\n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSES_QUERY, variables: get_list_query_variables()}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('schedule.classes.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values, touched }) => (\n            <ScheduleClassForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              setFieldValue={setFieldValue}\n              setFieldTouched={setFieldTouched}\n              errors={errors}\n              values={values}\n              touched={touched}\n              returnUrl={returnUrl}\n            />\n          )}\n        </Formik>      \n      </Card>\n    </ClassEditBase>   \n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassEditAll))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\n\n// import {\n//   Badge\n// } from \"tabler-react\"\n\nconst FormHelp = ({ t, message }) => (\n    <span className=\"form-help\" \n          data-toggle=\"popover\" \n          data-placement=\"top\" \n          data-content={message} \n          data-original-title=\"\" \n          title={message} \n          aria-describedby={'popover23432'}>\n        ?\n    </span>\n)\n\nexport default withTranslation()(FormHelp)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Grid,\n  Form,\n  Table,\n  Text\n} from \"tabler-react\"\n\n\nimport FormHelp from \"../../../../ui/FormHelp\"\n\n\nconst ScheduleClassClasspassForm = ({ t, history, match, isSubmitting, submitForm, errors, values, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n    <Dimmer active={isSubmitting} loader={isSubmitting} >\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group className='mb-0'>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"shopBook\" \n                onChange={() => {\n                  setFieldValue('shopBook', !values.shopBook)\n                  setFieldTouched('shopBook', true)\n                  if (!values.shopBook) {\n                    setFieldValue('attend', true)\n                    setFieldTouched('attend', true)\n                  }\n                  setTimeout(() => {submitForm()}, 200)\n                }}\n                checked={values.shopBook} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('schedule.classes.classpasses.shop_book')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"shopBook\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group className='mb-0'>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"attend\" \n                disabled={(values.shopBook)}\n                onChange={() => {\n                  setFieldValue('attend', !values.attend)\n                  setFieldTouched('attend', true)\n                  setTimeout(() => {submitForm()}, 200)\n                }}\n                checked={values.attend} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.attend')}</span>\n            </Form.Label>\n            {/* Show message to inform user they can't disable attend while enroll or shopBook is enabled*/}\n            { (values.shopBook) ? <div>\n                <Text.Small>{t('schedule.classes.classpasses.attend_disabled')}</Text.Small> { ' ' }\n                <FormHelp message={t('schedule.classes.classpasses.attend_disabled_help')} />\n              </div> : \"\" }\n            <ErrorMessage name=\"attend\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n      </Grid.Row>\n    </Dimmer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(ScheduleClassClasspassForm))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_CLASS_CLASSPASS_SCHEMA = Yup.object().shape({\n  shopBook: Yup.boolean(),\n  attend: Yup.boolean(),\n})\n","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_CLASS_CLASSPASSES_QUERY = gql`\n  query ScheduleItemOrganizationClasspassGroups($after: String, $before: String, $scheduleItem: ID!) {\n    scheduleItemOrganizationClasspassGroups(before: $before, after: $after, scheduleItem: $scheduleItem) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          scheduleItem {\n            id\n          }\n          organizationClasspassGroup {\n            id\n            name\n          }\n          shopBook\n          attend\n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const UPDATE_SCHEDULE_CLASS_CLASSPASS = gql`\n  mutation UpdateScheduleItemOrganizationClasspassGroup($input: UpdateScheduleItemOrganizationClasspassGroupInput!) {\n    updateScheduleItemOrganizationClasspassGroup(input:$input) {\n      scheduleItemOrganizationClasspassGroup {\n        id\n      } \n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassClasspassForm from \"./ScheduleClassClasspassForm\"\n\nimport { SCHEDULE_CLASS_CLASSPASS_SCHEMA } from './yupSchema'\nimport { GET_SCHEDULE_CLASS_CLASSPASSES_QUERY, UPDATE_SCHEDULE_CLASS_CLASSPASS } from \"./queries\"\n\n\nfunction ScheduleClassClasspasses({ t, match }) {\n  const classId = match.params.class_id\n  const menuActiveLink = \"classpasses\"\n  const cardTitle = t('schedule.classes.classpasses.title')\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_CLASS_CLASSPASSES_QUERY, { \n    variables: { scheduleItem: classId }\n  })\n  const [ updateScheduleClassClasspass ] = useMutation(UPDATE_SCHEDULE_CLASS_CLASSPASS)\n\n  const sidebarButton = <HasPermissionWrapper permission=\"add\" resource=\"scheduleitemclasspass\">\n    <Link to={\"/schedule/classes/all/classpasses/\" + classId + \"/add\" } >\n      <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.classpasses.add')}\n      </Button>\n    </Link>\n  </HasPermissionWrapper>\n\n  // Loading\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.classpasses.error_loading')}</p>\n    </ClassEditBase>\n  )\n\n  // Empty list\n  if (!data.scheduleItemOrganizationClasspassGroups.edges.length) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.classpasses.empty_list')}</p>\n    </ClassEditBase>\n  )\n\n  return (\n    <ClassEditBase \n      defaultCard={false} \n      menuActiveLink={menuActiveLink} \n      sidebarButton={sidebarButton}\n    >\n    <ContentCard \n      cardTitle={cardTitle}\n      // headerContent={headerOptions}\n      pageInfo={data.scheduleItemOrganizationClasspassGroups.pageInfo}\n      onLoadMore={() => {\n      fetchMore({\n        variables: {\n          after: data.scheduleItemOrganizationClasspassGroups.pageInfo.endCursor\n        },\n        updateQuery: (previousResult, { fetchMoreResult }) => {\n          const newEdges = fetchMoreResult.scheduleItemOrganizationClasspassGroups.edges\n          const pageInfo = fetchMoreResult.scheduleItemOrganizationClasspassGroups.pageInfo\n\n          return newEdges.length\n            ? {\n                // Put the new locations at the end of the list and update `pageInfo`\n                // so we have the new `endCursor` and `hasNextPage` values\n                data: { \n                  scheduleItemOrganizationClasspassGroups: {\n                    __typename: previousResult.scheduleItemOrganizationClasspassGroups.__typename,\n                    edges: [ ...previousResult.scheduleItemOrganizationClasspassGroups.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              }\n            : previousResult\n          }\n        })\n      }} >\n      <div>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t('general.classpass')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {data.scheduleItemOrganizationClasspassGroups.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                {console.log(node)}\n                <Table.Col key={v4()}> \n                  {node.organizationClasspassGroup.name}\n                </Table.Col>\n                <Table.Col>\n                <Formik\n                    initialValues={{  \n                      shopBook: node.shopBook,\n                      attend: node.attend\n                    }}\n                    validationSchema={SCHEDULE_CLASS_CLASSPASS_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n                        console.log(values)\n\n                        updateScheduleClassClasspass({ variables: {\n                            input: {\n                              id: node.id,\n                              shopBook: values.shopBook,\n                              attend: values.attend\n                            }\n                          }, refetchQueries: [\n                            { query: GET_SCHEDULE_CLASS_CLASSPASSES_QUERY,\n                              variables: { scheduleItem: classId }\n                            }\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.classes.classpasses.toast_edit_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setSubmitting(false)\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setSubmitting(false)\n                          })\n                    }}\n                    >\n                    {({ isSubmitting, errors, values, setFieldTouched, setFieldValue, submitForm }) => (\n                      <ScheduleClassClasspassForm\n                        isSubmitting={isSubmitting}\n                        setFieldTouched={setFieldTouched}\n                        setFieldValue={setFieldValue}\n                        errors={errors}\n                        values={values}\n                        submitForm={submitForm}\n                      >\n                        {console.log(errors)}\n                        {console.log(values)}\n                        test\n                      </ScheduleClassClasspassForm>\n                    )}\n                </Formik>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n        </div>\n      </ContentCard>\n    </ClassEditBase>\n  )\n}\n\n\n// class ScheduleClassClasspasses extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Schedule classs classpasses props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const match = this.props.match\n//     const history = this.props.history\n//     const classId = match.params.class_id\n\n//     const ButtonAdd = <HasPermissionWrapper permission=\"add\" resource=\"scheduleitemclasspass\">\n//       <Link to={\"/schedule/classes/all/classpasses/\" + classId + \"/add\" } >\n//         <Button color=\"primary btn-block mb-6\">\n//         <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.classpasses.add')}\n//         </Button>\n//       </Link>\n//     </HasPermissionWrapper>\n\n//     return (\n//       <SiteWrapper>\n//       <div className=\"my-3 my-md-5\">\n//         {console.log('ID here:')}\n//         {console.log(classId)}\n//         <Query query={GET_SCHEDULE_CLASS_CLASSPASSES_QUERY} variables={{ scheduleItem: classId }}>\n//           {({ loading, error, data, refetch, fetchMore }) => {\n  \n//             // Loading\n//             if (loading) return (\n//               <ClassEditBase menu_activeLink=\"classpasses\" card_title={t('schedule.classes.classpasses.title')} sidebar_button={ButtonAdd}>\n//                 <Dimmer active={true} loader={true} />\n//               </ClassEditBase>\n//             )\n//             // Error\n//             if (error) return (\n//               <ClassEditBase menu_activeLink=\"classpasses\" card_title={t('schedule.classes.classpasses.title')} sidebar_button={ButtonAdd}>\n//                 <p>{t('schedule.classes.classpasses.error_loading')}</p>\n//               </ClassEditBase>\n//             )\n  \n//             const initialTimeStart = TimeStringToJSDateOBJ(data.scheduleItem.timeStart)\n//             const subtitle = class_edit_all_subtitle({\n//               t: t,\n//               location: data.scheduleItem.organizationLocationRoom.organizationLocation.name,\n//               locationRoom: data.scheduleItem.organizationLocationRoom.name,\n//               classtype: data.scheduleItem.organizationClasstype.name,\n//               starttime: initialTimeStart\n//             })\n  \n//             // Empty list\n//             if (!data.scheduleItemOrganizationClasspassGroups.edges.length) { return (\n//               <ClassEditBase menu_activeLink=\"classpasses\" card_title={t('schedule.classes.classpasses.title')} sidebar_button={ButtonAdd}>\n//                 <p>{t('schedule.classes.classpasses.empty_list')}</p>\n//               </ClassEditBase>\n//             )} else {   \n//             // Life's good! :)\n//               return (\n//                 <ClassEditBase \n//                   menu_activeLink=\"classpasses\" \n//                   default_card={false} \n//                   subtitle={subtitle}\n//                   sidebar_button={ButtonAdd}\n//                 >\n//                 <ContentCard \n//                   cardTitle={t('schedule.classes.title_edit')}\n//                   // headerContent={headerOptions}\n//                   pageInfo={data.scheduleItemOrganizationClasspassGroups.pageInfo}\n//                   onLoadMore={() => {\n//                   fetchMore({\n//                     variables: {\n//                       after: data.scheduleItemOrganizationClasspassGroups.pageInfo.endCursor\n//                     },\n//                     updateQuery: (previousResult, { fetchMoreResult }) => {\n//                       const newEdges = fetchMoreResult.scheduleItemOrganizationClasspassGroups.edges\n//                       const pageInfo = fetchMoreResult.scheduleItemOrganizationClasspassGroups.pageInfo\n  \n//                       return newEdges.length\n//                         ? {\n//                             // Put the new locations at the end of the list and update `pageInfo`\n//                             // so we have the new `endCursor` and `hasNextPage` values\n//                             data: { \n//                               scheduleItemOrganizationClasspassGroups: {\n//                                 __typename: previousResult.scheduleItemOrganizationClasspassGroups.__typename,\n//                                 edges: [ ...previousResult.scheduleItemOrganizationClasspassGroups.edges, ...newEdges ],\n//                                 pageInfo\n//                               }\n//                             }\n//                           }\n//                         : previousResult\n//                       }\n//                     })\n//                   }} >\n//                   <div>\n//                     <Table>\n//                       <Table.Header>\n//                         <Table.Row>\n//                           <Table.ColHeader>{t('general.classpass')}</Table.ColHeader>\n//                           <Table.ColHeader></Table.ColHeader>\n//                         </Table.Row>\n//                       </Table.Header>\n//                       <Table.Body>\n//                         {data.scheduleItemOrganizationClasspassGroups.edges.map(({ node }) => (\n//                           <Table.Row key={v4()}>\n//                             {console.log(node)}\n//                             <Table.Col key={v4()}> \n//                               {node.organizationClasspassGroup.name}\n//                             </Table.Col>\n//                             <Table.Col>\n//                             <Mutation mutation={UPDATE_SCHEDULE_CLASS_CLASSPASS}> \n//                               {(updateScheduleClassClasspass, { data }) => (\n//                                 <Formik\n//                                     initialValues={{  \n//                                       shopBook: node.shopBook,\n//                                       attend: node.attend\n//                                     }}\n//                                     validationSchema={SCHEDULE_CLASS_CLASSPASS_SCHEMA}\n//                                     onSubmit={(values, { setSubmitting }) => {\n//                                         console.log(values)\n\n//                                         updateScheduleClassClasspass({ variables: {\n//                                           input: {\n//                                             id: node.id,\n//                                             shopBook: values.shopBook,\n//                                             attend: values.attend\n//                                           }\n//                                         }, refetchQueries: [\n//                                             // {query: GET_SCHEDULE_CLASS_TEACHERS_QUERY, variables: { scheduleItem: match.params.class_id }},\n//                                             // {query: GET_CLASSPASSES_QUERY, variables: {\"archived\": false }},\n//                                         ]})\n//                                         .then(({ data }) => {\n//                                             console.log('got data', data);\n//                                             toast.success((t('schedule.classes.classpasses.toast_edit_success')), {\n//                                                 position: toast.POSITION.BOTTOM_RIGHT\n//                                               })\n//                                             setSubmitting(false)\n//                                           }).catch((error) => {\n//                                             toast.error((t('general.toast_server_error')) + ': ' +  error, {\n//                                                 position: toast.POSITION.BOTTOM_RIGHT\n//                                               })\n//                                             console.log('there was an error sending the query', error)\n//                                             setSubmitting(false)\n//                                           })\n//                                     }}\n//                                     >\n//                                     {({ isSubmitting, errors, values, setFieldTouched, setFieldValue, submitForm }) => (\n//                                       <ScheduleClassClasspassForm\n//                                         isSubmitting={isSubmitting}\n//                                         setFieldTouched={setFieldTouched}\n//                                         setFieldValue={setFieldValue}\n//                                         errors={errors}\n//                                         values={values}\n//                                         submitForm={submitForm}\n//                                       >\n//                                         {console.log(errors)}\n//                                         {console.log(values)}\n//                                         test\n//                                       </ScheduleClassClasspassForm>\n//                                     )}\n//                                 </Formik>\n//                               )}\n//                             </Mutation>\n//                             </Table.Col>\n//                           </Table.Row>\n//                         ))}\n//                       </Table.Body>\n//                     </Table>\n//                     </div>\n//                   </ContentCard>\n//                 </ClassEditBase>\n//             )}}\n//           }\n//         </Query>\n//       </div>\n//     </SiteWrapper>\n//     )\n//   }\n\n// };\n\nexport default withTranslation()(withRouter(ScheduleClassClasspasses))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Grid,\n  Form,\n  Table,\n  Text\n} from \"tabler-react\"\n\n\nimport FormHelp from \"../../../../ui/FormHelp\"\n\n\nconst ScheduleClassSubscriptionForm = ({ t, history, match, isSubmitting, submitForm, errors, values, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n    <Dimmer active={isSubmitting} loader={isSubmitting} >\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group className='mb-0'>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"enroll\" \n                onChange={() => {\n                  setFieldValue('enroll', !values.enroll)\n                  setFieldTouched('enroll', true)\n                  if (!values.enroll) {\n                    setFieldValue('attend', true)\n                    setFieldTouched('attend', true)\n                  }\n                  setTimeout(() => {submitForm()}, 200)\n                }}\n                checked={values.enroll} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.enroll')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"enroll\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group className='mb-0'>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"shopBook\" \n                onChange={() => {\n                  setFieldValue('shopBook', !values.shopBook)\n                  setFieldTouched('shopBook', true)\n                  if (!values.shopBook) {\n                    setFieldValue('attend', true)\n                    setFieldTouched('attend', true)\n                  }\n                  setTimeout(() => {submitForm()}, 200)\n                }}\n                checked={values.shopBook} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('schedule.classes.subscriptions.shop_book')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"shopBook\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group className='mb-0'>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"attend\" \n                disabled={((values.shopBook) || (values.enroll))}\n                onChange={() => {\n                  setFieldValue('attend', !values.attend)\n                  setFieldTouched('attend', true)\n                  setTimeout(() => {submitForm()}, 200)\n                }}\n                checked={values.attend} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.attend')}</span>\n            </Form.Label>\n            {/* Show message to inform user they can't disable attend while enroll or shopBook is enabled*/}\n            { ((values.shopBook) || (values.enroll)) ? <div>\n                <Text.Small>{t('schedule.classes.subscriptions.attend_disabled')}</Text.Small> { ' ' }\n                <FormHelp message={t('schedule.classes.subscriptions.attend_disabled_help')} />\n              </div> : \"\" }\n            <ErrorMessage name=\"attend\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n      </Grid.Row>\n    </Dimmer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(ScheduleClassSubscriptionForm))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_CLASS_SUBSCRIPTION_SCHEMA = Yup.object().shape({\n  enroll: Yup.boolean(),\n  shopBook: Yup.boolean(),\n  attend: Yup.boolean(),\n})\n","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_CLASS_SUBSCRIPTIONS_QUERY = gql`\n  query ScheduleItemOrganizationSubscriptionGroups($after: String, $before: String, $scheduleItem: ID!) {\n    scheduleItemOrganizationSubscriptionGroups(first: 100, before: $before, after: $after, scheduleItem:$scheduleItem) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          scheduleItem {\n            id\n          }\n          organizationSubscriptionGroup {\n            id\n            name\n          }\n          enroll\n          shopBook\n          attend\n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const UPDATE_SCHEDULE_CLASS_SUBSCRIPTION = gql`\nmutation UpdateScheduleItemOrganizationSubscriptionGroup($input: UpdateScheduleItemOrganizationSubscriptionGroupInput!) {\n  updateScheduleItemOrganizationSubscriptionGroup(input:$input) {\n    scheduleItemOrganizationSubscriptionGroup {\n      id\n    } \n  }\n}\n`\n","// @flow\n\nimport React, { Component } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassSubscriptionForm from \"./ScheduleClassSubscriptionForm\"\n\nimport { SCHEDULE_CLASS_SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport { GET_SCHEDULE_CLASS_SUBSCRIPTIONS_QUERY, UPDATE_SCHEDULE_CLASS_SUBSCRIPTION } from \"./queries\"\n\n\nfunction ScheduleClassSubscriptions({t, match, history}) {\n  const classId = match.params.class_id\n  const menuActiveLink = \"subscriptions\"\n  const cardTitle = t('schedule.classes.subscriptions.title')\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_CLASS_SUBSCRIPTIONS_QUERY, { \n    variables: { scheduleItem: classId }\n  })\n  const [ updateScheduleClassSubscription ] = useMutation(UPDATE_SCHEDULE_CLASS_SUBSCRIPTION)\n\n  const sidebarButton = <HasPermissionWrapper permission=\"add\" resource=\"scheduleitemsubscription\">\n    <Link to={\"/schedule/classes/all/subscriptions/\" + classId + \"/add\" } >\n      <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.subscriptions.add')}\n      </Button>\n    </Link>\n  </HasPermissionWrapper>\n\n  // Loading\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.subscriptions.error_loading')}</p>\n    </ClassEditBase>\n  )\n\n  // Empty list\n  if (!data.scheduleItemOrganizationSubscriptionGroups.edges.length) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.subscriptions.empty_list')}</p>\n    </ClassEditBase>\n  )\n\n  return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      defaultCard={false} \n      sidebarButton={sidebarButton}\n    >\n      <ContentCard \n        cardTitle={cardTitle}\n        // headerContent={headerOptions}\n        pageInfo={data.scheduleItemOrganizationSubscriptionGroups.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: data.scheduleItemOrganizationSubscriptionGroups.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.scheduleItemOrganizationSubscriptionGroups.edges\n            const pageInfo = fetchMoreResult.scheduleItemOrganizationSubscriptionGroups.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new locations at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  data: { \n                    scheduleItemOrganizationSubscriptionGroups: {\n                      __typename: previousResult.scheduleItemOrganizationSubscriptionGroups.__typename,\n                      edges: [ ...previousResult.scheduleItemOrganizationSubscriptionGroups.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                }\n              : previousResult\n            }\n          })\n        }} >\n        <div>\n          <Table>\n            <Table.Header>\n              <Table.Row>\n                <Table.ColHeader>{t('general.subscription')}</Table.ColHeader>\n                <Table.ColHeader></Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {data.scheduleItemOrganizationSubscriptionGroups.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  {console.log(node)}\n                  <Table.Col key={v4()}> \n                    {node.organizationSubscriptionGroup.name}\n                  </Table.Col>\n                  <Table.Col>\n                    <Formik\n                      initialValues={{  \n                        enroll: node.enroll,\n                        shopBook: node.shopBook,\n                        attend: node.attend\n                      }}\n                      validationSchema={SCHEDULE_CLASS_SUBSCRIPTION_SCHEMA}\n                      onSubmit={(values, { setSubmitting }) => {\n                          console.log(values)\n                          updateScheduleClassSubscription({ \n                            variables: {\n                              input: {\n                                id: node.id,\n                                enroll: values.enroll,\n                                shopBook: values.shopBook,\n                                attend: values.attend\n                              }\n                            }, \n                            refetchQueries: [\n                              { query: GET_SCHEDULE_CLASS_SUBSCRIPTIONS_QUERY, \n                                variables: { scheduleItem: classId }\n                            }\n                          ]})\n                          .then(({ data }) => {\n                              console.log('got data', data);\n                              toast.success((t('schedule.classes.subscriptions.toast_edit_success')), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              setSubmitting(false)\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error)\n                              setSubmitting(false)\n                            })\n                      }}\n                      >\n                      {({ isSubmitting, errors, values, setFieldTouched, setFieldValue, submitForm }) => (\n                        <ScheduleClassSubscriptionForm\n                          isSubmitting={isSubmitting}\n                          setFieldTouched={setFieldTouched}\n                          setFieldValue={setFieldValue}\n                          errors={errors}\n                          values={values}\n                          submitForm={submitForm}\n                        >\n                          {console.log(errors)}\n                          {console.log(values)}\n                        </ScheduleClassSubscriptionForm>\n                      )}\n                    </Formik>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n          </div>\n        </ContentCard>\n      </ClassEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassSubscriptions))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_CLASS_TEACHERS_QUERY = gql`\n  query ScheduleItemTeachers($after: String, $before: String, $scheduleItem: ID!) {\n    scheduleItemTeachers(first: 15, before: $before, after: $after, scheduleItem: $scheduleItem) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          role\n          account2 {\n            id\n            fullName\n          }\n          role2\n          dateStart\n          dateEnd       \n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY = gql`\n  query ScheduleItemTeacher($before: String, $after: String, $id: ID!) {\n    scheduleItemTeacher(id: $id) {\n      id\n      account {\n        id\n        fullName\n      }\n      role\n      account2 {\n        id\n        fullName\n      }\n      role2\n      dateStart\n      dateEnd       \n    }\n    accounts(first: 100, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InputValues($after: String, $before: String) {\n    accounts(first: 15, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n  }\n`\n\n\nexport const ADD_SCHEDULE_CLASS_TEACHER = gql`\nmutation CreateScheduleItemTeacher($input:CreateScheduleItemTeacherInput!) {\n  createScheduleItemTeacher(input:$input) {\n    scheduleItemTeacher {\n      id\n    } \n  }\n}\n`\n\n\nexport const UPDATE_SCHEDULE_CLASS_TEACHER = gql`\nmutation UpdateScheduleItemTeacher($input: UpdateScheduleItemTeacherInput!) {\n  updateScheduleItemTeacher(input:$input) {\n    scheduleItemTeacher {\n      id\n    } \n  }\n}\n`\n\n\nexport const DELETE_SCHEDULE_CLASS_TEACHER = gql`\nmutation DeleteScheduleClassTeacher($input: DeleteScheduleItemTeacherInput!) {\n  deleteScheduleItemTeacher(input: $input) {\n    ok\n  }\n}\n`","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { represent_teacher_role } from \"../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_SCHEDULE_CLASS_TEACHERS_QUERY, DELETE_SCHEDULE_CLASS_TEACHER } from \"./queries\"\n\n\nfunction ScheduleClassTeachers({ t, match, history}) {\n  const classId = match.params.class_id\n  const menuActiveLink = \"teachers\"\n  const cardTitle = t('schedule.classes.teachers.title')\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_CLASS_TEACHERS_QUERY, {\n    variables: {scheduleItem: classId}\n  })\n  const [ deleteScheduleItemTeacher ] = useMutation(DELETE_SCHEDULE_CLASS_TEACHER)\n\n  const ButtonAdd = <HasPermissionWrapper permission=\"add\" resource=\"scheduleitemteacher\">\n    <Link to={`/schedule/classes/all/teachers/${classId}/add` } >\n      <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.teachers.add')}\n      </Button>\n    </Link>\n  </HasPermissionWrapper>\n\n  // Loading\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={ButtonAdd}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={ButtonAdd}\n    >\n      <p>{t('schedule.classes.teachers.error_loading')}</p>\n    </ClassEditBase>\n  )\n\n  // Empty list\n  if (!data.scheduleItemTeachers.edges.length) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={ButtonAdd}\n    >\n      <p>{t('schedule.classes.teachers.empty_list')}</p>\n    </ClassEditBase>\n  )\n\n  return (\n    <ClassEditBase \n    menuActiveLink={menuActiveLink} \n    defaultCard={false}\n    sidebarButton={ButtonAdd}\n    >\n      <ContentCard \n        cardTitle={cardTitle}\n        pageInfo={data.scheduleItemTeachers.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: data.scheduleItemTeachers.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.scheduleItemTeachers.edges\n            const pageInfo = fetchMoreResult.scheduleItemTeachers.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new locations at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  data: { \n                    scheduleItemTeachers: {\n                      __typename: previousResult.scheduleItemTeachers.__typename,\n                      edges: [ ...previousResult.scheduleItemTeachers.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                }\n              : previousResult\n            }\n          })\n        }} >\n        <div>\n          <Table>\n            <Table.Header>\n              <Table.Row>\n                <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.teacher')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.teacher_2')}</Table.ColHeader>\n                <Table.ColHeader></Table.ColHeader>\n                <Table.ColHeader></Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {data.scheduleItemTeachers.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  {console.log(node)}\n                  <Table.Col key={v4()}> \n                    {moment(node.dateStart).format('LL')}\n                  </Table.Col>\n                  <Table.Col key={v4()}> \n                    {(node.dateEnd) ? moment(node.dateEnd).format('LL') : \"\"}\n                  </Table.Col>\n                  <Table.Col>\n                    {node.account.fullName} <br />\n                    <span className=\"text-muted\">\n                      {represent_teacher_role(t, node.role)}\n                    </span>\n                  </Table.Col>\n                  <Table.Col>\n                    {node.account2 ?\n                      <span>\n                        {node.account2.fullName} <br />\n                        <span className=\"text-muted\">\n                          {represent_teacher_role(t, node.role2)}\n                        </span>\n                      </span> : \"\"\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={`/schedule/classes/all/teachers/${classId}/edit/${node.id}`}>\n                      <Button className='btn-sm' \n                              color=\"secondary\"\n                      >\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.delete')} \n                        href=\"\"\n                        onClick={() => {\n                          confirm_delete({\n                            t: t,\n                            msgConfirm: t('schedule.classes.teachers.delete_confirm_msg'),\n                            msgDescription: <p>{t('schedule.classes.teachers.delete_confirm_description')}</p>,\n                            msgSuccess: t('schedule.classes.teachers.deleted'),\n                            deleteFunction: deleteScheduleItemTeacher,\n                            functionVariables: { variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, refetchQueries: [\n                              {query: GET_SCHEDULE_CLASS_TEACHERS_QUERY, variables: { scheduleItem: match.params.class_id }}\n                            ]}\n                        })}}\n                    >\n                      <span className=\"text-red\">\n                        <Icon prefix=\"fe\" name=\"trash-2\" />\n                      </span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n          </div>\n        </ContentCard>      \n    </ClassEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassTeachers))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_CLASS_TEACHER_SCHEMA = Yup.object().shape({\n  account: Yup.string()\n    .required(t('yup.field_required')),\n  role: Yup.string(),\n  account2: Yup.string(),\n  role2: Yup.string(),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  // dateEnd: Yup.date()\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\n\nimport CSDatePicker from \"../../../../ui/CSDatePicker\"\n\nconst ScheduleClassTeacherForm = ({ t, history, match, isSubmitting, errors, values, inputData, returnUrl, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                selected={values.dateStart}\n                onChange={(date) => setFieldValue(\"dateStart\", date)}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                selected={values.dateEnd}\n                onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher')}>\n              <Field component=\"select\" \n                      name=\"account\" \n                      className={(errors.account) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in schedule class teacher add:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher_role')}>\n              <Field component=\"select\" \n                      name=\"role\" \n                      className={(errors.role) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                <option value=\"SUB\" key={v4()}>{t('schedule.classes.teacher_roles.sub')}</option>\n                <option value=\"ASSISTANT\" key={v4()}>{t('schedule.classes.teacher_roles.assistant')}</option>\n                <option value=\"KARMA\" key={v4()}>{t('schedule.classes.teacher_roles.karma')}</option>\n              </Field>\n              <ErrorMessage name=\"role\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher2')}>\n              <Field component=\"select\" \n                      name=\"account2\" \n                      className={(errors.account2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher_role2')}>\n              <Field component=\"select\" \n                      name=\"role2\" \n                      className={(errors.role2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                <option value=\"SUB\" key={v4()}>{t('schedule.classes.teacher_roles.sub')}</option>\n                <option value=\"ASSISTANT\" key={v4()}>{t('schedule.classes.teacher_roles.assistant')}</option>\n                <option value=\"KARMA\" key={v4()}>{t('schedule.classes.teacher_roles.karma')}</option>\n              </Field>\n              <ErrorMessage name=\"role2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(ScheduleClassTeacherForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nconst ScheduleClassTeacherBack = ({ t, classId }) => (\n  <Link to={\"/schedule/classes/all/teachers/\" + classId } >\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(withRouter(ScheduleClassTeacherBack))","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_SCHEDULE_CLASS_TEACHERS_QUERY, GET_INPUT_VALUES_QUERY, ADD_SCHEDULE_CLASS_TEACHER } from './queries'\nimport { SCHEDULE_CLASS_TEACHER_SCHEMA } from './yupSchema'\nimport ScheduleClassTeacherForm from './ScheduleClassTeacherForm'\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassTeacherBack from \"./ScheduleClassTeacherBack\"\n\n\nfunction ScheduleClassTeacherAdd({ t, history, match }) {\n  const classId = match.params.class_id\n  const returnUrl = `/schedule/classes/all/teachers/${classId}`\n  const cardTitle = t('schedule.classes.teachers.title_add')\n  const menuActiveLink = \"teachers\" \n  const sidebarButton = <ScheduleClassTeacherBack classId={classId} />\n\n  const {loading, error, data} = useQuery(GET_INPUT_VALUES_QUERY)\n  const [addScheduleClassTeacher] = useMutation(ADD_SCHEDULE_CLASS_TEACHER)\n\n  if (loading) return (\n    <ClassEditBase\n      cardTitle={cardTitle}\n      menuActiveLink={menuActiveLink}\n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.loading_with_dots')}</p>\n    </ClassEditBase>\n  )\n\n  if (error) return (\n    <ClassEditBase\n      cardTitle={cardTitle}\n      menuActiveLink={menuActiveLink}\n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n\n  return (\n    <ClassEditBase\n      cardTitle={cardTitle}\n      menuActiveLink={menuActiveLink}\n      sidebarButton={sidebarButton}\n    >\n      <Formik\n        initialValues={{ \n          price: \"\", \n          dateStart: new Date() ,\n          account: \"\",\n          role: \"\",\n          account2: \"\",\n          role2: \"\",\n        }}\n        validationSchema={SCHEDULE_CLASS_TEACHER_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n\n            let dateEnd\n            if (values.dateEnd) {\n              dateEnd = dateToLocalISO(values.dateEnd)\n            } else {\n              dateEnd = values.dateEnd\n            }\n\n            addScheduleClassTeacher({ variables: {\n              input: {\n                scheduleItem: match.params.class_id,\n                account: values.account,\n                role: values.role,\n                account2: values.account2,\n                role2: values.role2,\n                dateStart: dateToLocalISO(values.dateStart),\n                dateEnd: dateEnd\n              }\n            }, refetchQueries: [\n                {query: GET_SCHEDULE_CLASS_TEACHERS_QUERY, variables: { scheduleItem: match.params.class_id }},\n                // {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                history.push(returnUrl)\n                toast.success((t('schedule.classes.teachers.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleClassTeacherForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ClassEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassTeacherAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SCHEDULE_CLASS_TEACHERS_QUERY, GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY, UPDATE_SCHEDULE_CLASS_TEACHER } from './queries'\nimport { SCHEDULE_CLASS_TEACHER_SCHEMA } from './yupSchema'\nimport ScheduleClassTeacherForm from './ScheduleClassTeacherForm'\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassTeacherBack from \"./ScheduleClassTeacherBack\"\n\n\nfunction ScheduleClassTeacherEdit({ t, match, history }) {\n  const id = match.params.id\n  const classId = match.params.class_id\n  const returnUrl = `/schedule/classes/all/teachers/${classId}`\n  const cardTitle = t('schedule.classes.teachers.title_edit')\n  const menuActiveLink = \"teachers\"\n  const sidebarButton = <ScheduleClassTeacherBack classId={classId} />\n\n  const {loading, error, data} = useQuery(GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY, {\n    variables: { id: id }\n  })\n  const [updateScheduleClassTeacher] = useMutation(UPDATE_SCHEDULE_CLASS_TEACHER)\n\n  if (loading) return (\n    <ClassEditBase\n      cardTitle={cardTitle}\n      menuActiveLink={menuActiveLink}\n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.loading_with_dots')}</p>\n    </ClassEditBase>\n  )\n\n  if (error) return (\n    <ClassEditBase\n      cardTitle={cardTitle}\n      menuActiveLink={menuActiveLink}\n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const initialData = data.scheduleItemTeacher\n\n  let initialAccount2 = \"\"\n  if (initialData.account2) {\n    initialAccount2 =  initialData.account2.id\n  } \n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  if (initialData.dateStart) {\n    dateStart = new Date(initialData.dateStart)\n  }\n  \n  let dateEnd = null\n  if (initialData.dateEnd) {\n    dateEnd = new Date(initialData.dateEnd)\n  }\n\n  return (\n    <ClassEditBase \n      cardTitle={cardTitle}\n      menuActiveLink=\"teachers\"\n      sidebarButton={sidebarButton}\n    >\n      <Formik\n        initialValues={{  \n          dateStart: dateStart,\n          dateEnd: dateEnd,\n          account: initialData.account.id,\n          role: initialData.role,\n          account2: initialAccount2,\n          role2: initialData.role2,\n        }}\n        validationSchema={SCHEDULE_CLASS_TEACHER_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n\n            let dateEnd\n            if (values.dateEnd) {\n              dateEnd = dateToLocalISO(values.dateEnd)\n            } else {\n              dateEnd = values.dateEnd\n            }\n\n            updateScheduleClassTeacher({ variables: {\n              input: {\n                id: match.params.id,\n                account: values.account,\n                role: values.role,\n                account2: values.account2,\n                role2: values.role2,\n                dateStart: dateToLocalISO(values.dateStart),\n                dateEnd: dateEnd\n              }\n            }, refetchQueries: [\n                {query: GET_SCHEDULE_CLASS_TEACHERS_QUERY, variables: { scheduleItem: match.params.class_id }},\n                // {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('schedule.classes.teachers.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleClassTeacherForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n          >\n            {console.log(errors)}\n          </ScheduleClassTeacherForm>\n        )}\n      </Formik>\n    </ClassEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassTeacherEdit))","import CSLS from \"../../../../../tools/cs_local_storage\"\nimport { withRouter } from \"react-router\"\n\nexport function get_accounts_query_variables() {\n  let queryVars = {\n    teacher: undefined,\n    employee: undefined,\n    searchName: undefined\n  }\n\n  let search = localStorage.getItem(CSLS.SCHEDULE_CLASSES_CLASS_ATTENDANCE_SEARCH)\n  queryVars.searchName = search\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\nexport function get_attendance_list_query_variables(schedule_item_id, date) {\n  return {\n    scheduleItem: schedule_item_id,\n    date: date\n  }\n}\n","import moment from 'moment'\n\nexport function class_subtitle({t, location, locationRoom, classtype, timeStart, date}) {\n  return t('general.class') + ': ' + \n         location + ' (' + locationRoom + ') - ' + \n         classtype + ' @ ' + \n         moment(date).format('LL') + ' ' + moment(timeStart).format('LT')\n}\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nconst ScheduleClassBack = ({ t, classId }) => (\n  <Link to={\"/schedule/classes/\"} >\n    <Button color=\"link mr-2\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(withRouter(ScheduleClassBack))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n\nfunction ClassMenu ({ t, scheduleItemId, class_date, activeLink }) {\n  let attendance_active = false\n  let edit_active = false\n\n  switch (activeLink) {\n    case \"attendance\":\n      attendance_active = true\n      break\n    case \"edit\":\n      edit_active = true\n      break\n  }\n\n  return (\n    <div>\n      <h5>{t(\"general.menu\")}</h5>\n      <List.Group transparent={true}>   \n        <HasPermissionWrapper \n            resource=\"scheduleitemattendance\"\n            permission=\"view\" \n        >\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to={\"#/schedule/classes/class/attendance/\" + scheduleItemId + \"/\" + class_date}\n              icon=\"check-circle\"\n              active={attendance_active}\n              >\n              {t(\"general.attendance\")}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            resource=\"scheduleclassweeklyotc\"\n            permission=\"change\" \n        >\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to={\"#/schedule/classes/class/edit/\" + scheduleItemId + \"/\" + class_date}\n              icon=\"edit-3\"\n              active={edit_active}\n              >\n              {t(\"general.edit\")}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n\n      </List.Group>\n    </div>\n  )\n}\n\nexport default withTranslation()(ClassMenu)","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { get_attendance_list_query_variables } from \"./tools\"\nimport { DELETE_SCHEDULE_CLASS_ATTENDANCE, GET_SCHEDULE_CLASS_ATTENDANCE_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\n\nfunction ScheduleClassAttendanceDelete({t, match, node}) {\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const [deleteScheduleItemAttendance, { data }] = useMutation(DELETE_SCHEDULE_CLASS_ATTENDANCE)\n\n    return (\n      <button className=\"icon btn btn-link btn-sm pull-right\" \n        title={t('general.delete')} \n        href=\"\"\n        onClick={() => {\n          confirm_delete({\n            t: t,\n            msgConfirm: t(\"schedule.classes.class.attendance.delete_confirm_msg\"),\n            msgDescription: <p>{node.account.fullName}</p>,\n            msgSuccess: t('schedule.classes.class.attendance.delete_success'),\n            deleteFunction: deleteScheduleItemAttendance,\n            functionVariables: { \n              variables: {\n                input: {\n                  id: node.id\n                }\n              }, \n              refetchQueries: [\n                { query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, \n                  variables: get_attendance_list_query_variables(schedule_item_id, class_date) },\n              ]\n            }\n          })\n      }}>\n        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n      </button>\n    )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassAttendanceDelete))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNTS_QUERY = gql`\n  query Accounts(\n    $after: String, \n    $before: String, \n    $searchName: String,\n    $teacher: Boolean,\n    $employee: Boolean\n  ) {\n    accounts(\n      first: 25, \n      before: $before, \n      after: $after, \n      isActive: true, \n      fullName_Icontains: $searchName,\n      customer: true,\n      teacher: $teacher,\n      employee: $employee\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          fullName\n          email\n          isActive\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Dropdown,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { get_attendance_list_query_variables } from \"./tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { get_accounts_query_variables } from \"./tools\"\nimport { class_subtitle } from \"../tools\"\n\nimport ScheduleClassBack from \"../ScheduleClassBack\"\nimport ClassMenu from \"../ClassMenu\"\nimport ContentCard from \"../../../../general/ContentCard\"\nimport InputSearch from \"../../../../general/InputSearch\"\nimport BadgeBookingStatus from \"../../../../ui/BadgeBookingStatus\"\nimport ScheduleClassAttendanceDelete from \"./ScheduleClassAttendanceDelete\"\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_ACCOUNTS_QUERY } from \"../../../../../queries/accounts/account_search_queries\"\nimport { GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, UPDATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction setAttendanceStatus({t, match, updateAttendance, node, status}) {\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  updateAttendance({\n    variables: { \n      input: {\n        id: node.id, \n        bookingStatus: status\n      }\n    },\n    refetchQueries: [\n      {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, \n        variables: get_attendance_list_query_variables(schedule_item_id, class_date)}\n    ]\n  }).then(({ data }) => {\n    console.log('got data', data);\n    toast.success(\n      t('schedule.classes.class.attendance.status_saved'), {\n        position: toast.POSITION.BOTTOM_RIGHT\n      })\n  }).catch((error) => {\n    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n        position: toast.POSITION.BOTTOM_RIGHT\n      })\n    console.log('there was an error sending the query', error);\n  })\n}\n\n\nfunction ScheduleClassAttendance({ t, match, history }) {\n  const [showSearch, setShowSearch] = useState(false)\n  const return_url = \"/schedule/classes/\"\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const { refetch: refetchAttendance, loading: queryAttendanceLoading, error: queryAttendanceError, data: queryAttendanceData } = useQuery(\n    GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, {\n      variables: get_attendance_list_query_variables(schedule_item_id, class_date)\n    }\n  )\n  const [ updateAttendance, \n    { loading: mutationAttendanceLoading, error: mutationAttendanceError },\n  ] = useMutation(UPDATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  const [ getAccounts, \n         { refetch: refetchAccounts, \n           fetchMore: fetchMoreAccounts,\n           loading: queryAccountsLoading, \n           error: queryAccountsError, \n           data: queryAccountsData \n         }] = useLazyQuery( GET_ACCOUNTS_QUERY )\n\n  console.log('queryAccountsData')\n  console.log(queryAccountsData)\n\n  // const [createInvoice, { data }] = useMutation(CREATE_ACCOUNT_INVOICE, {\n  //   // onCompleted = () => history.push('/finance/invoices/edit/')\n  // }) \n\n  // Query\n  // Loading\n  if (queryAttendanceLoading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (queryAttendanceError) {\n    console.log(queryAttendanceError)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n  \n  console.log(queryAttendanceData)\n  let checkedInIds = []\n  queryAttendanceData.scheduleItemAttendances.edges.map(({ node }) => (\n    checkedInIds.push(node.account.id)\n  ))\n  console.log(checkedInIds)\n\n  const scheduleItem = queryAttendanceData.scheduleItem\n  const subtitle = class_subtitle({\n    t: t,\n    location: scheduleItem.organizationLocationRoom.organizationLocation.name, \n    locationRoom: scheduleItem.organizationLocationRoom.name,\n    classtype: scheduleItem.organizationClasstype.name, \n    timeStart: TimeStringToJSDateOBJ(scheduleItem.timeStart), \n    date: class_date\n  })\n  \n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('schedule.title')} subTitle={subtitle}>\n            <div className=\"page-options d-flex\">       \n              <ScheduleClassBack />\n              <InputSearch \n                initialValueKey={CSLS.SCHEDULE_CLASSES_CLASS_ATTENDANCE_SEARCH}\n                placeholder=\"Search...\"\n                onChange={(value) => {\n                  console.log(value)\n                  localStorage.setItem(CSLS.SCHEDULE_CLASSES_CLASS_ATTENDANCE_SEARCH, value)\n                  if (value) {\n                    // {console.log('showSearch')}\n                    // {console.log(showSearch)}\n                    setShowSearch(true)\n                    getAccounts({ variables: get_accounts_query_variables()})\n                  } else {\n                    setShowSearch(false)\n                  }\n                }}\n              />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n              <Grid.Col md={9}>\n                {/* Search results */}\n                {(showSearch && (queryAccountsData) && (!queryAccountsLoading) && (!queryAccountsError)) ?\n                  <ContentCard cardTitle={t('general.search_results')}\n                              pageInfo={queryAccountsData.accounts.pageInfo}\n                              onLoadMore={() => {\n                                fetchMoreAccounts({\n                                  variables: {\n                                  after: queryAccountsData.accounts.pageInfo.endCursor\n                                },\n                                updateQuery: (previousResult, { fetchMoreResult }) => {\n                                  const newEdges = fetchMoreResult.accounts.edges\n                                  const pageInfo = fetchMoreResult.accounts.pageInfo \n\n                                  return newEdges.length\n                                    ? {\n                                        // Put the new accounts at the end of the list and update `pageInfo`\n                                        // so we have the new `endCursor` and `hasNextPage` values\n                                        queryAccountsData: {\n                                          accounts: {\n                                            __typename: previousResult.accounts.__typename,\n                                            edges: [ ...previousResult.accounts.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      }\n                                    : previousResult\n                                }\n                              })\n                            }} >\n                    { (!queryAccountsData.accounts.edges.length) ? \n                      t('schedule.classes.class.attendance.search_result_empty') : \n                      <Table>\n                        <Table.Header>\n                          <Table.Row key={v4()}>\n                            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                            <Table.ColHeader>{t('general.email')}</Table.ColHeader>\n                            <Table.ColHeader></Table.ColHeader>\n                          </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                          {queryAccountsData.accounts.edges.map(({ node }) => (\n                            <Table.Row key={v4()}>\n                              <Table.Col key={v4()}>\n                                {node.fullName}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.email}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {(checkedInIds.includes(node.id)) ? \n                                 <span className=\"pull-right\">{t(\"schedule.classes.class.attendance.search_results_already_checked_in\")}</span> :\n                                  <Link to={\"/schedule/classes/class/book/\" + schedule_item_id + \"/\" + class_date + \"/\" + node.id}>\n                                    <Button color=\"secondary pull-right\">\n                                      {t('general.checkin')} <Icon name=\"chevron-right\" />\n                                    </Button>\n                                  </Link>       \n                                }   \n                              </Table.Col>\n                            </Table.Row>\n                          ))}\n                        </Table.Body>\n                      </Table>\n                    }\n                  </ContentCard>\n                  : \"\"\n                }\n                {/* Attendance */}\n                <ContentCard cardTitle={t('general.attendance')}\n                             pageInfo={queryAttendanceData.scheduleItemAttendances.pageInfo}\n                             onLoadMore={() => {\n                                fetchMoreAccounts({\n                                variables: {\n                                  after: queryAttendanceData.scheduleItemAttendances.pageInfo.endCursor\n                                },\n                                updateQuery: (previousResult, { fetchMoreResult }) => {\n                                  const newEdges = fetchMoreResult.scheduleItemAttendances.edges\n                                  const pageInfo = fetchMoreResult.scheduleItemAttendances.pageInfo \n\n                                  return newEdges.length\n                                    ? {\n                                        // Put the new scheduleItemAttendances at the end of the list and update `pageInfo`\n                                        // so we have the new `endCursor` and `hasNextPage` values\n                                        queryAttendanceData: {\n                                          scheduleItemAttendances: {\n                                            __typename: previousResult.scheduleItemAttendances.__typename,\n                                            edges: [ ...previousResult.scheduleItemAttendances.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      }\n                                    : previousResult\n                                }\n                              })\n                            }} >\n                  <Table>\n                    <Table.Header>\n                      <Table.Row key={v4()}>\n                        <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                        <Table.ColHeader>{t('general.booking_status')}</Table.ColHeader>\n                        <Table.ColHeader></Table.ColHeader>\n                      </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                      {queryAttendanceData.scheduleItemAttendances.edges.map(({ node }) => (\n                          <Table.Row key={v4()}>\n                            <Table.Col>\n                              {node.account.fullName}\n                            </Table.Col>\n                            <Table.Col>\n                              <BadgeBookingStatus status={node.bookingStatus} />\n                            </Table.Col>\n                            <Table.Col>\n                              {/* Delete */}\n                              <ScheduleClassAttendanceDelete node={node} />\n                              {/* Status dropdown */}\n                              <Dropdown\n                                key={v4()}\n                                className=\"pull-right\"\n                                type=\"button\"\n                                toggle\n                                color=\"secondary btn-sm\"\n                                triggerContent={t(\"general.status\")}\n                                items={[\n                                  // <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                                  //   <Dropdown.Item\n                                  //     key={v4()}\n                                  //     icon=\"check\"\n                                  //     onClick={() => {\n                                  //       setAttendanceStatus({\n                                  //         t: t, \n                                  //         updateAttendance: updateAttendance,\n                                  //         node: node,\n                                  //         status: 'ATTENDING'\n                                  //       })\n                                  //       refetchAttendance()\n                                  //     }}>\n                                  //       {t('schedule.classes.class.attendance.booking_status.ATTENDING')}\n                                  //   </Dropdown.Item>\n                                  // </HasPermissionWrapper>,\n                                  <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                                    <Dropdown.Item\n                                      key={v4()}\n                                      icon=\"calendar\"\n                                      onClick={() => {\n                                        setAttendanceStatus({\n                                          t: t, \n                                          match: match,\n                                          updateAttendance: updateAttendance,\n                                          node: node,\n                                          status: 'BOOKED'\n                                        })\n                                      }}>\n                                        {t('schedule.classes.class.attendance.booking_status.BOOKED')}\n                                    </Dropdown.Item>\n                                  </HasPermissionWrapper>,\n                                  <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                                    <Dropdown.Item\n                                      key={v4()}\n                                      icon=\"x\"\n                                      onClick={() => {\n                                        setAttendanceStatus({\n                                          t: t, \n                                          match: match,\n                                          updateAttendance: updateAttendance,\n                                          node: node,\n                                          status: 'CANCELLED'\n                                        })\n                                      }}>\n                                        {t('schedule.classes.class.attendance.booking_status.CANCELLED')}\n                                    </Dropdown.Item>\n                                  </HasPermissionWrapper>,\n                                ]}\n                              />\n                              {(node.bookingStatus == \"BOOKED\") ?\n                                <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                                  <Button\n                                    key={v4()}\n                                    className=\"pull-right\"\n                                    color=\"success\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                      setAttendanceStatus({\n                                        t: t, \n                                        match: match,\n                                        updateAttendance: updateAttendance,\n                                        node: node,\n                                        status: 'ATTENDING'\n                                      })\n                                    }}>\n                                      {t('general.checkin')}\n                                  </Button>\n                                </HasPermissionWrapper>  : \"\" }\n                            </Table.Col>\n                          </Table.Row>\n                        ))}\n                    </Table.Body>\n                  </Table>\n                </ContentCard>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <ClassMenu \n                  scheduleItemId={schedule_item_id}\n                  class_date={class_date}\n                  activeLink=\"attendance\"\n                />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassAttendance))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nconst ScheduleClassBookBack = ({ t, classId, date }) => (\n  <Link to={\"/schedule/classes/class/attendance/\" + classId + \"/\" + date} >\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(withRouter(ScheduleClassBookBack))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_BOOKING_OPTIONS_QUERY = gql`\n  query ScheduleClassBookingOptions($account: ID!, $scheduleItem:ID!, $date:Date!, $listType:String!) {\n    scheduleClassBookingOptions(account: $account, scheduleItem: $scheduleItem, date:$date, listType:$listType) {\n      date\n      account {\n        id\n        fullName\n      }\n      alreadyBooked\n      scheduleItem {\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n      }\n    \tscheduleItemPrices {\n        organizationClasspassDropin {\n          id\n          name\n          priceDisplay\n        }\n        organizationClasspassTrial {\n          id\n          name\n          priceDisplay\n        }\n      }\n      classpasses {\n        bookingType \n        allowed\n        accountClasspass {\n          id\n          dateStart\n          dateEnd\n          classesRemainingDisplay\n          organizationClasspass {\n            id\n            name\n          }\n        }\n      }\n      subscriptions {\n        bookingType\n        allowed\n        blocked\n        paused\n        accountSubscription {\n          id\n          dateStart\n          dateEnd\n          organizationSubscription {\n            id\n            name\n          }\n          creditTotal\n        }\n      }\n    }\n  }\n`\n\n\nexport const CREATE_SCHEDULE_ITEM_ATTENDANCE = gql`\n  mutation CreateScheduleItemAttendance($input: CreateScheduleItemAttendanceInput!) {\n    createScheduleItemAttendance(input:$input) {\n      scheduleItemAttendance {\n        id\n      }\n    }\n  }\n`","export function getUrlFromReturnTo({returnTo, schedule_item_id, class_date, locationId}) {\n  let return_url\n\n  if (returnTo == \"schedule_classes\") {\n    return_url = '/schedule/classes/class/attendance/' + schedule_item_id + \"/\" + class_date\n  } else if (returnTo == \"selfcheckin\") {\n    return_url = '/selfcheckin/checkin/' + locationId + \"/\" + schedule_item_id + \"/\" + class_date\n  }\n  \n  return return_url\n}","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button,\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport { get_attendance_list_query_variables } from \"../attendance/tools\"\nimport { GET_SCHEDULE_CLASS_ATTENDANCE_QUERY } from \"../attendance/queries\"\nimport { CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\nimport { getUrlFromReturnTo } from \"./tools\"\n\n\nfunction ClasspassCheckinButton({t, match, history, classpass, returnTo, locationId=null}) {\n  console.log(classpass)\n  const account_id = match.params.account_id\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  const createInput = {\n    \"account\": account_id,\n    \"scheduleItem\": schedule_item_id,\n    \"accountClasspass\": classpass.accountClasspass.id,\n    \"date\": class_date,\n    \"attendanceType\": \"CLASSPASS\",\n    \"bookingStatus\": \"ATTENDING\"\n  }\n\n  const [classCheckin, { data, loading, error, onCompleted }] = useMutation(CREATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loading) {\n    return \"Please wait...\"\n  }\n\n  if (error) {\n    return \"uh oh... error found\"\n  }\n\n  const return_url = getUrlFromReturnTo({\n    returnTo: returnTo,\n    schedule_item_id: schedule_item_id,\n    class_date: class_date,\n    locationId: locationId\n  })\n\n  return (\n    <Button \n      block \n      outline \n      color=\"success\" \n      icon=\"check\"\n      onClick={() => classCheckin({\n        variables: { \"input\": createInput }, \n        refetchQueries: [\n          {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, variables: get_attendance_list_query_variables(schedule_item_id, class_date)},\n        ]})\n        .then(({ data }) => {\n            console.log('got data', data);\n            // redirect back to attendance list\n            history.push(return_url)\n            // show message to user\n            toast.success((t('schedule.classes.class.book.toast_success')), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n          }).catch((error) => {\n            toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            console.log('there was an error sending the query', error)\n          })}\n    >\n      {t(\"general.checkin\")}\n    </Button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ClasspassCheckinButton))\n\n","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  List,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle, represent_teacher_role } from \"../../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ScheduleClassBookBack from \"./ScheduleClassBookBack\"\nimport ClasspassCheckinButton from \"./ScheduleClassBookClasspassBtn\"\n\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_BOOKING_OPTIONS_QUERY, CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ScheduleClassBookClasspasses({ \n  t, \n  match, \n  history, \n  classpasses,  \n  locationId,\n  onClickCheckin=f=>f ,\n  returnTo=\"schedule_classes\"\n}) {\n\n  return (\n    classpasses.map((classpass) =>(\n      <Grid.Col md={3}>\n        <Card \n          statusColor=\"blue\"\n          title={t(\"general.classpass\")} >\n        <Card.Body>\n          <b>{classpass.accountClasspass.organizationClasspass.name}</b><br />\n          <span className=\"text-muted\">\n            {t('general.classes_remaining')}: {classpass.accountClasspass.classesRemainingDisplay} <br />\n            {t('general.valid_until')}: {moment(classpass.accountClasspass.dateEnd).format('LL')} <br />\n          </span>\n        </Card.Body>\n        <Card.Footer>\n          {(!classpass.allowed) ? t('schedule.classes.class.book.classpass_not_allowed') :\n            <ClasspassCheckinButton classpass={classpass} returnTo={returnTo} locationId={locationId} />\n          }\n        </Card.Footer>\n        </Card>\n      </Grid.Col>\n    ))\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBookClasspasses))\n\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport { get_attendance_list_query_variables } from \"../attendance/tools\"\nimport { GET_SCHEDULE_CLASS_ATTENDANCE_QUERY } from \"../attendance/queries\"\nimport { CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\nimport { getUrlFromReturnTo } from \"./tools\"\n\n\nfunction SubscriptionCheckinButton({t, match, history, subscription, returnTo, locationId=null}) {\n  console.log(subscription)\n  const account_id = match.params.account_id\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  const createInput = {\n    \"account\": account_id,\n    \"scheduleItem\": schedule_item_id,\n    \"accountSubscription\": subscription.accountSubscription.id,\n    \"date\": class_date,\n    \"attendanceType\": \"SUBSCRIPTION\",\n    \"bookingStatus\": \"ATTENDING\"\n  }\n\n  const [classCheckin, { data, loading, error, onCompleted }] = useMutation(CREATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loading) {\n    return \"Please wait...\"\n  }\n\n  if (error) {\n    return \"uh oh... error found\"\n  }\n\n  const return_url = getUrlFromReturnTo({\n    returnTo: returnTo,\n    schedule_item_id: schedule_item_id,\n    class_date: class_date,\n    locationId: locationId\n  })\n\n  if (subscription.blocked) {\n    return (\n      <p className=\"text-muted\">\n        <Icon name=\"alert-triangle\" />\n        {t(\"schedule.classes.class.book.subscription_blocked\")}\n      </p>\n    )\n  }\n\n  if (subscription.paused) {\n    return (\n      <p className=\"text-muted\">\n        <Icon name=\"pause\" />\n        {t(\"schedule.classes.class.book.subscription_paused\")}\n      </p>\n    )\n  }\n\n  return (\n    <Button \n      block \n      outline \n      color=\"success\" \n      icon=\"check\"\n      onClick={() => classCheckin({\n        variables: { \"input\": createInput }, \n        refetchQueries: [\n          {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, variables: get_attendance_list_query_variables(schedule_item_id, class_date)},\n        ]})\n        .then(({ data }) => {\n            console.log('got data', data);\n            // redirect back to attendance list\n            history.push(return_url)\n            // show message to user\n            toast.success((t('schedule.classes.class.book.toast_success')), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n          }).catch((error) => {\n            toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            console.log('there was an error sending the query', error)\n          })}\n    >\n      {t(\"general.checkin\")}\n    </Button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SubscriptionCheckinButton))\n\n","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle, represent_teacher_role } from \"../../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ScheduleClassBookBack from \"./ScheduleClassBookBack\"\n// import ClassEditBase from \"../ClassEditBase\"\nimport SubscriptionCheckinButton from \"./ScheduleClassBookSubscriptionBtn\"\n\nimport { GET_BOOKING_OPTIONS_QUERY } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\n\nfunction ScheduleClassBookSubscriptions({ \n  t, \n  match, \n  history, \n  subscriptions, \n  locationId,\n  returnTo=\"schedule_classes\"\n}) {\n\n  return (\n    subscriptions.map((subscription) =>(\n      <Grid.Col md={3}>\n        <Card \n          statusColor=\"blue\"\n          title={t(\"general.subscription\")} >\n        <Card.Body>\n          <b>{subscription.accountSubscription.organizationSubscription.name}</b><br />\n          <span className=\"text-muted\">\n            {t(\"general.credits_remaining\")}: {subscription.accountSubscription.creditTotal}\n          </span>\n        </Card.Body>\n        <Card.Footer>\n          {(!subscription.allowed) ? t('schedule.classes.class.book.subscription_not_allowed') :\n            <SubscriptionCheckinButton subscription={subscription} returnTo={returnTo} locationId={locationId} />\n          }\n        </Card.Footer>\n        </Card>\n      </Grid.Col>\n    ))\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBookSubscriptions))\n\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button,\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport { get_attendance_list_query_variables } from \"../attendance/tools\"\nimport { GET_SCHEDULE_CLASS_ATTENDANCE_QUERY } from \"../attendance/queries\"\nimport { CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport { getUrlFromReturnTo } from \"./tools\"\n\n\nfunction ScheduleClassBookPriceBtn({t, match, history, price, returnTo, locationId=null}) {\n  console.log(price)\n  const account_id = match.params.account_id\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  const createInput = {\n    \"account\": account_id,\n    \"scheduleItem\": schedule_item_id,\n    \"organizationClasspass\": price.id,\n    \"date\": class_date,\n    \"attendanceType\": \"CLASSPASS_BUY_AND_BOOK\",\n    \"bookingStatus\": \"ATTENDING\"\n  }\n\n  const [classCheckin, { data, loading, error, onCompleted }] = useMutation(CREATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loading) {\n    return \"Please wait...\"\n  }\n\n  if (error) {\n    return \"uh oh... error found\"\n  }\n\n  const return_url = getUrlFromReturnTo({\n    returnTo: returnTo,\n    schedule_item_id: schedule_item_id,\n    class_date: class_date,\n    locationId: locationId\n  })\n\n  return (\n    <Button \n      block \n      outline \n      color=\"success\" \n      icon=\"check\"\n      onClick={() => classCheckin({\n        variables: { \"input\": createInput }, \n        refetchQueries: [\n          {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, variables: get_attendance_list_query_variables(schedule_item_id, class_date)},\n        ]})\n        .then(({ data }) => {\n            console.log('got data', data);\n            // redirect back to attendance list\n            history.push(return_url)\n            // show message to user\n            toast.success((t('schedule.classes.class.book.toast_success')), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n          }).catch((error) => {\n            toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            console.log('there was an error sending the query', error)\n          })}\n    >\n      {t(\"general.checkin\")}\n    </Button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBookPriceBtn))\n\n","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  List,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle, represent_teacher_role } from \"../../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ScheduleClassBookBack from \"./ScheduleClassBookBack\"\nimport ScheduleClassBookPriceBtn from \"./ScheduleClassBookPriceBtn\"\n\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_BOOKING_OPTIONS_QUERY, CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ScheduleClassBookPriceDropin({ \n  t, \n  match, \n  history, \n  priceDropin, \n  locationId,\n  onClickCheckin=f=>f,\n  returnTo=\"schedule_classes\"\n}) {\n  console.log('priceDropin')\n  console.log(priceDropin)\n\n  return (\n    <Grid.Col md={3}>\n      <Card \n        statusColor=\"blue\"\n        title={t(\"general.dropin\")} >\n      <Card.Body>\n        <b>{priceDropin.priceDisplay}</b><br />\n        {t(\"schedule.classes.class.book.dropin_pay_and_book\")} <br />\n      </Card.Body>\n      <Card.Footer>\n        <ScheduleClassBookPriceBtn price={priceDropin} returnTo={returnTo} locationID={locationId} />\n      </Card.Footer>\n      </Card>\n    </Grid.Col>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBookPriceDropin))\n\n","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  List,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle, represent_teacher_role } from \"../../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ScheduleClassBookBack from \"./ScheduleClassBookBack\"\nimport ScheduleClassBookPriceBtn from \"./ScheduleClassBookPriceBtn\"\n\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_BOOKING_OPTIONS_QUERY, CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ScheduleClassBookPriceTrial({ \n  t, \n  match, \n  history, \n  priceTrial, \n  locationId,\n  onClickCheckin=f=>f,\n  returnTo=\"schedule_classes\"\n}) {\n  console.log('priceTrial')\n  console.log(priceTrial)\n\n  return (\n    <Grid.Col md={3}>\n      <Card \n        statusColor=\"blue\"\n        title={t(\"general.trial\")} >\n      <Card.Body>\n        <b>{priceTrial.priceDisplay}</b><br />\n        {t(\"schedule.classes.class.book.trial_pay_and_book\")} <br />\n      </Card.Body>\n      <Card.Footer>\n        <ScheduleClassBookPriceBtn price={priceTrial} returnTo={returnTo} locationId={locationId} />\n      </Card.Footer>\n      </Card>\n    </Grid.Col>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBookPriceTrial))\n\n","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle, represent_teacher_role } from \"../../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ScheduleClassBookBack from \"./ScheduleClassBookBack\"\nimport ScheduleClassBookClasspasses from \"./ScheduleClassBookClasspasses\"\nimport ScheduleClassBookSubscriptions from \"./ScheduleClassBookSubscriptions\"\nimport ScheduleClassBookPriceDropin from \"./ScheduleClassBookPriceDropin\"\nimport ScheduleClassBookPriceTrial from \"./ScheduleClassBookPriceTrial\"\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_BOOKING_OPTIONS_QUERY } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ScheduleClassBook({ t, match, history }) {\n  const [showSearch, setShowSearch] = useState(false)\n  const return_url = \"/schedule/classes/\"\n  const account_id = match.params.account_id\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const { loading: queryLoading, error: queryError, data: queryData } = useQuery(\n    GET_BOOKING_OPTIONS_QUERY, {\n      variables: {\n        account: account_id,\n        scheduleItem: schedule_item_id,\n        date: class_date,\n        listType: \"ATTEND\"\n      }\n    }\n  )\n\n  // Query\n  // Loading\n  if (queryLoading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (queryError) {\n    console.log(queryError)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n  \n  console.log(queryData)\n  const account = queryData.scheduleClassBookingOptions.account\n  const classpasses = queryData.scheduleClassBookingOptions.classpasses\n  const subscriptions = queryData.scheduleClassBookingOptions.subscriptions\n  const prices = queryData.scheduleClassBookingOptions.scheduleItemPrices\n  const scheduleItem = queryData.scheduleClassBookingOptions.scheduleItem\n  const subtitle = class_subtitle({\n    t: t,\n    location: scheduleItem.organizationLocationRoom.organizationLocation.name, \n    locationRoom: scheduleItem.organizationLocationRoom.name,\n    classtype: scheduleItem.organizationClasstype.name, \n    timeStart: TimeStringToJSDateOBJ(scheduleItem.timeStart), \n    date: class_date\n  })\n\n  console.log(prices)\n  \n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('schedule.title')} subTitle={subtitle}>\n            <div className=\"page-options d-flex\">   \n              <ScheduleClassBookBack classId={schedule_item_id} date={class_date} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n              <Grid.Col md={12}>\n                <h4>{t('general.booking_options')} {account.fullName}</h4>\n                <div className=\"mt-6\">\n                <Grid.Row cards deck>\n                  <ScheduleClassBookSubscriptions subscriptions={subscriptions} />\n                  <ScheduleClassBookClasspasses classpasses={classpasses} />\n                  {(prices) ?\n                    (prices.organizationClasspassDropin) ? \n                      <ScheduleClassBookPriceDropin priceDropin={prices.organizationClasspassDropin}/> : \"\" \n                    : \"\" }\n                  {(prices) ?\n                    (prices.organizationClasspassTrial) ? \n                      <ScheduleClassBookPriceTrial priceTrial={prices.organizationClasspassTrial}/> : \"\" \n                    : \"\" }\n                </Grid.Row>\n                </div>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBook))\n\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY = gql`\n  query ScheduleClassWeeklyOTCs($scheduleItem: ID!, $date: Date!) {\n    scheduleClassWeeklyOtcs(first:1, scheduleItem: $scheduleItem, date:$date) {\n      edges {\n        node {\n          id \n          date\n          status\n          description\n          account {\n            id\n            fullName\n          }\n          role\n          account2 {\n            id\n            fullName\n          }\n          role2\n          organizationLocationRoom {\n            id\n            name\n          }\n          organizationClasstype {\n            id\n            name\n          }\n          organizationLevel {\n            id\n            name\n          }\n          timeStart\n          timeEnd\n          spaces\n          walkInSpaces\n          infoMailContent\n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n    accounts(first: 100, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n    organizationLocationRooms(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n    organizationClasstypes(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const DELETE_SCHEDULE_CLASS_WEEKLY_OTC = gql`\n  mutation DeleteScheduleClassWeeklyOTC($input: DeleteScheduleClassWeeklyOTCInput!) {\n    deleteScheduleClassWeeklyOtc(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const UPDATE_SCHEDULE_CLASS_WEEKLY_OTC = gql`\n  mutation UpdateScheduleClassWeeklyOTC($input: UpdateScheduleClassWeeklyOTCInput!) {\n    updateScheduleClassWeeklyOtc(input:$input) {\n      scheduleClassWeeklyOtc {\n        id\n      }\n    }\n  }\n`\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_CLASS_EDIT_OTC_SCHEMA = Yup.object().shape({\n  spaces: Yup.number().nullable().notRequired(),\n  walkInSpaces: Yup.number().nullable().notRequired(),\n})\n","import React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../ui/CSDatePicker\"\nimport CSTimePicker from \"../../../../ui/CSTimePicker\"\n\nconst ScheduleClassEditForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, touched, return_url }) => (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.status')}>\n              <Field component=\"select\" \n                      name=\"status\" \n                      className={(errors.status) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t('')}</option>\n                <option value=\"CANCELLED\" key={v4()}>{t('general.cancelled')}</option>\n                <option value=\"OPEN\" key={v4()}>{t('schedule.classes.no_teacher')}</option>\n              </Field>\n              <ErrorMessage name=\"status\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.description')}>\n              <Field type=\"text\" \n                      name=\"description\" \n                      className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher')}>\n              <Field component=\"select\" \n                      name=\"account\" \n                      className={(errors.account) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in schedule class teacher add:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher_role')}>\n              <Field component=\"select\" \n                      name=\"role\" \n                      className={(errors.role) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                <option value=\"SUB\" key={v4()}>{t('schedule.classes.teacher_roles.sub')}</option>\n                <option value=\"ASSISTANT\" key={v4()}>{t('schedule.classes.teacher_roles.assistant')}</option>\n                <option value=\"KARMA\" key={v4()}>{t('schedule.classes.teacher_roles.karma')}</option>\n              </Field>\n              <ErrorMessage name=\"role\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher2')}>\n              <Field component=\"select\" \n                      name=\"account2\" \n                      className={(errors.account2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher_role2')}>\n              <Field component=\"select\" \n                      name=\"role2\" \n                      className={(errors.role2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                <option value=\"SUB\" key={v4()}>{t('schedule.classes.teacher_roles.sub')}</option>\n                <option value=\"ASSISTANT\" key={v4()}>{t('schedule.classes.teacher_roles.assistant')}</option>\n                <option value=\"KARMA\" key={v4()}>{t('schedule.classes.teacher_roles.karma')}</option>\n              </Field>\n              <ErrorMessage name=\"role2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.location')}>\n              <Field component=\"select\" \n                    name=\"organizationLocationRoom\" \n                    className={(errors.organizationLocationRoom) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.no_change\")}</option>\n                {inputData.organizationLocationRooms.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.organizationLocation.name} - {node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLocationRoom\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.level')}>\n              <Field component=\"select\" \n                    name=\"organizationLevel\" \n                    className={(errors.organizationLevels) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.no_change\")}</option>\n                {inputData.organizationLevels.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLevels\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.class')}>\n          <Field component=\"select\" \n                name=\"organizationClasstype\" \n                className={(errors.organizationClasstype) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"\" key={v4()}>{t(\"general.no_change\")}</option>\n            {inputData.organizationClasstypes.edges.map(({ node }) =>\n              <option value={node.id} key={v4()}>{node.name}</option>\n            )}\n          </Field>\n          <ErrorMessage name=\"organizationClasstype\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group> \n        <Grid.Row>\n          <Grid.Col>\n           <Form.Group label={t('general.time_start')}>\n              <CSTimePicker \n                className={(errors.timeStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeStart}\n                onChange={(date) => setFieldValue(\"timeStart\", date)}\n                onBlur={() => setFieldTouched(\"timeStart\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n           <Form.Group label={t('general.time_end')}>\n              <CSTimePicker \n                className={(errors.timeEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeEnd}\n                onChange={(date) => setFieldValue(\"timeEnd\", date)}\n                onBlur={() => setFieldTouched(\"timeEnd\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.spaces')}>\n              <Field type=\"text\" \n                    name=\"spaces\" \n                    className={(errors.spaces) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"spaces\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.spaces_walk_in')}>\n              <Field type=\"text\" \n                    name=\"walkInSpaces\" \n                    className={(errors.walkInSpaces) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"walkInSpaces\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.info_mail')}>\n          <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"infoMailContent\"\n            initialValue={values.infoMailContent}\n            init={tinymceBasicConf}\n            onBlur={(e) => {\n              setFieldValue(\"infoMailContent\", e.target.getContent())\n              setFieldTouched(\"infoMailContent\", true, true)\n            }}\n          />\n          <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n        >\n        {t('general.submit')}\n        </Button>\n        <Button color=\"link\" onClick={() => history.push(return_url)}>\n            {t('general.cancel')}\n        </Button>\n      </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(ScheduleClassEditForm))","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_CLASSES_QUERY } from '../../queries'\nimport { get_list_query_variables } from '../../tools'\nimport { DELETE_SCHEDULE_CLASS_WEEKLY_OTC, GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleClassWeeklyOTCDelete({t, match, history}) {\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const [deleteClassOTC, { data }] = useMutation(DELETE_SCHEDULE_CLASS_WEEKLY_OTC, {\n    onCompleted: () => { history.push(\"/schedule/classes/\") }\n  })\n  const query_vars = {\n    scheduleItem: schedule_item_id,\n    date: class_date\n  }\n\n  return (\n    <button className=\"icon btn-block btn btn-danger mb-3\" \n      title={t('general.delete')} \n      href=\"\"\n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.classes.class.edit.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.classes.class.edit.delete_success'),\n          deleteFunction: deleteClassOTC,\n          functionVariables: { \n            variables: {\n              input: {\n                scheduleItem: schedule_item_id,\n                date: class_date\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY, variables: query_vars },\n              { query: GET_CLASSES_QUERY, variables: get_list_query_variables() },\n            ]\n          }\n        })\n    }}>\n      <span className=\"text-white\"><Icon prefix=\"fe\" name=\"trash-2\" /> {\" \"} {t(\"schedule.classes.class.edit.delete_all_changes\")}</span>\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassWeeklyOTCDelete))\n","// @flow\n\nimport React, { useState } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY, UPDATE_SCHEDULE_CLASS_WEEKLY_OTC } from './queries'\nimport { GET_CLASSES_QUERY } from '../../queries'\nimport { get_list_query_variables } from '../../tools'\nimport { SCHEDULE_CLASS_EDIT_OTC_SCHEMA } from './yupSchema'\nimport ScheduleClassEditForm from './ScheduleClassEditForm'\nimport { TimeStringToJSDateOBJ, dateToLocalISOTime } from '../../../../../tools/date_tools'\n\nimport { class_subtitle } from \"../tools\"\n\n\nimport {\n  Alert,\n  Dropdown,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassWeeklyOTCDelete from './ScheduleClassWeeklyOTCDelete'\nimport ScheduleClassBack from \"../ScheduleClassBack\"\nimport ClassMenu from \"../ClassMenu\"\n\n\nfunction ScheduleClassEdit({ t, match, history }) {\n  let showDelete = false\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  console.log(schedule_item_id)\n  console.log(class_date)\n\n  const query_vars = {\n    scheduleItem: schedule_item_id,\n    date: class_date\n  }\n\n  const { loading: queryLoading, error: queryError, data: queryData } = useQuery(GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY, {\n    variables: query_vars,\n  })\n  const [ updateScheduleClassWeeklyOTC, { data } ] = useMutation(UPDATE_SCHEDULE_CLASS_WEEKLY_OTC)\n\n  if (queryLoading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (queryError) {\n    console.log(queryError)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n\n  console.log('queryData')\n  console.log(queryData)\n\n  const scheduleItem = queryData.scheduleItem\n  const subtitle = class_subtitle({\n    t: t,\n    location: scheduleItem.organizationLocationRoom.organizationLocation.name, \n    locationRoom: scheduleItem.organizationLocationRoom.name,\n    classtype: scheduleItem.organizationClasstype.name, \n    timeStart: TimeStringToJSDateOBJ(scheduleItem.timeStart), \n    date: class_date\n  })\n  \n  let initialData\n  var initialValues = {}\n  if (queryData.scheduleClassWeeklyOtcs.edges.length) {\n    showDelete = true\n\n    initialData = queryData.scheduleClassWeeklyOtcs.edges[0].node\n\n    initialValues.status = initialData.status\n    initialValues.description = initialData.description\n    if (initialData.account) {\n      initialValues.account = initialData.account.id\n    }\n    if (initialData.account2) {\n      initialValues.account2 = initialData.account2.id\n    }\n    initialValues.role = initialData.role || \"\"\n    initialValues.role2 = initialData.role2 || \"\"\n    if (initialData.organizationLocationRoom) {\n      initialValues.organizationLocationRoom = initialData.organizationLocationRoom.id\n    }\n    if (initialData.organizationClasstype) {\n      initialValues.organizationClasstype = initialData.organizationClasstype.id\n    }\n    if (initialData.organizationLevel) {\n      initialValues.organizationLevel = initialData.organizationLevel.id\n    }\n    if (initialData.timeStart) {\n      initialValues.timeStart = TimeStringToJSDateOBJ(initialData.timeStart)\n    }\n    if (initialData.timeEnd) {\n      initialValues.timeEnd = TimeStringToJSDateOBJ(initialData.timeEnd)\n    }\n    if (initialData.spaces) {\n      initialValues.spaces = initialData.spaces\n    }\n    if (initialData.walkInSpaces) {\n      initialValues.walkInSpaces = initialData.walkInSpaces\n    }\n    if (initialData.infoMailContent) {\n      initialValues.infoMailContent = initialData.infoMailContent\n    }\n    \n  } else {\n    console.log('setting initial values')\n    initialValues.status = \"\"\n    initialValues.description = \"\"\n    initialValues.account = \"\"\n    initialValues.role = \"\"\n    initialValues.account2 = \"\"\n    initialValues.role2 = \"\"\n    initialValues.organizationLocationRoom = \"\"\n    initialValues.organizationClasstype = \"\"\n    initialValues.organizationLevel = \"\"\n    initialValues.timeStart = \"\"\n    initialValues.timeEnd = \"\"\n    initialValues.infoMailContent = \"\"\n  }\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('schedule.title')} subTitle={subtitle}>\n            <div className=\"page-options d-flex\">       \n              <ScheduleClassBack />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('general.edit')}</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  <Formik\n                    initialValues={initialValues}\n                    validationSchema={SCHEDULE_CLASS_EDIT_OTC_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n\n                        console.log(\"SUBMIT VALUES\")\n                        console.log(values)\n\n                        let timeStart = undefined\n                        let timeEnd = undefined\n                        if (values.timeStart) {\n                          timeStart = dateToLocalISOTime(values.timeStart)\n                        }\n                        \n                        if (values.timeEnd) {\n                          timeEnd = dateToLocalISOTime(values.timeEnd)  \n                        }\n                        \n\n                        updateScheduleClassWeeklyOTC({ variables: {\n                          input: {\n                            scheduleItem: schedule_item_id,\n                            date: class_date,\n                            status: values.status,\n                            description: values.description,\n                            account: values.account,\n                            role: values.role,\n                            account2: values.account2,\n                            role2: values.role2,\n                            organizationLocationRoom: values.organizationLocationRoom,\n                            organizationClasstype: values.organizationClasstype,\n                            organizationLevel: values.organizationLevel,\n                            timeStart: timeStart,\n                            timeEnd: timeEnd,\n                            spaces: values.spaces,\n                            walkInSpaces: values.walkInSpaces,\n                            infoMailContent: values.infoMailContent\n                          }\n                        }, refetchQueries: [\n                            {query: GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY, variables: query_vars},\n                            {query: GET_CLASSES_QUERY, variables: get_list_query_variables()},\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.classes.class.edit.toast_edit_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setSubmitting(false)\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error)\n                          console.log('there was an error sending the query', error.graphQLErrors)\n                          setSubmitting(false)\n                        })\n                      }\n                    }\n                    >\n                    {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n                      <ScheduleClassEditForm\n                        inputData={queryData}\n                        isSubmitting={isSubmitting}\n                        setFieldTouched={setFieldTouched}\n                        setFieldValue={setFieldValue}\n                        errors={errors}\n                        values={values}\n                      >\n                        {console.log(errors)}\n                      </ScheduleClassEditForm>\n                    )}\n                  </Formik>\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showDelete) ? \n                <ScheduleClassWeeklyOTCDelete /> : \"\"\n              }\n              <ClassMenu \n                scheduleItemId={schedule_item_id}\n                class_date={class_date}\n                activeLink=\"edit\"\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassEdit))","import React from \"react\"\nimport { Link } from 'react-router-dom'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Button,\n  Icon, \n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nfunction ButtonAdd({t, classId}) {\n  return (\n    <HasPermissionWrapper permission=\"add\" resource=\"scheduleitemprice\">\n      <Link to={\"/schedule/classes/all/prices/\" + classId + \"/add\" } >\n        <Button color=\"primary btn-block mb-6\">\n          <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.prices.add')}\n        </Button>\n      </Link>\n    </HasPermissionWrapper>\n  )\n} \n\nexport default withTranslation()(ButtonAdd)","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_ITEM_PRICES_QUERY = gql`\n  query ScheduleItemPrices($after: String, $before: String, $scheduleItem: ID!) {\n    scheduleItemPrices(first: 15, before: $before, after: $after, scheduleItem: $scheduleItem) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationClasspassDropin {\n            id\n            name\n          }\n          organizationClasspassTrial {\n            id\n            name\n          }\n          dateStart\n          dateEnd       \n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const GET_SINGLE_SCHEDULE_ITEM_PRICE_QUERY = gql`\nquery ScheduleItemPrice($before: String, $after: String, $id: ID!) {\n  scheduleItemPrice(id: $id) {\n    id\n    organizationClasspassDropin {\n      id\n      name\n    }\n    organizationClasspassTrial {\n      id\n      name\n    }\n    dateStart\n    dateEnd       \n  }\n  organizationClasspasses(first: 100, before: $before, after: $after, archived: false) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n}\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InputValues($after: String, $before: String) {\n    organizationClasspasses(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const ADD_SCHEDULE_ITEM_PRICE = gql`\n  mutation CreateScheduleItemPrice($input:CreateScheduleItemPriceInput!) {\n    createScheduleItemPrice(input:$input) {\n      scheduleItemPrice {\n        id\n      } \n    }\n  }\n`\n\nexport const UPDATE_SCHEDULE_ITEM_PRICE = gql`\nmutation UpdateScheduleItemPrice($input: UpdateScheduleItemPriceInput!) {\n  updateScheduleItemPrice(input:$input) {\n    scheduleItemPrice {\n      id\n    } \n  }\n}\n`\n\nexport const DELETE_SCHEDULE_ITEM_PRICE = gql`\n  mutation DeleteScheduleItemPrice($input: DeleteScheduleItemPriceInput!) {\n    deleteScheduleItemPrice(input: $input) {\n      ok\n    }\n  }\n`\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_SCHEDULE_ITEM_PRICE, GET_SCHEDULE_ITEM_PRICES_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleClassPriceDelete({t, match, history, id}) {\n  const classId = match.params.class_id\n  const [deleteClassPrice, { data }] = useMutation(DELETE_SCHEDULE_ITEM_PRICE)\n  const query_vars = {\n    scheduleItem: classId\n  }\n\n  return (\n    <button className=\"icon btn btn-danger btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.classes.prices.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.classes.prices.delete_success'),\n          deleteFunction: deleteClassPrice,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_ITEM_PRICES_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <span className=\"text-white\"><Icon prefix=\"fe\" name=\"trash-2\" /> {\" \"} {t(\"\")}</span>\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassPriceDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport moment from 'moment'\n\nimport {\n  Dimmer,\n  Button,\n  Table\n} from \"tabler-react\";\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\nimport ButtonAdd from \"./ButtonAdd\"\nimport { class_edit_all_subtitle } from \"../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassPriceDelete from './ScheduleClassPriceDelete'\n\nimport { GET_SCHEDULE_ITEM_PRICES_QUERY } from \"./queries\"\n\n\nfunction ScheduleClassPrices({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const classId = match.params.class_id\n  const menuActiveLink = \"prices\" \n  const cardTitle = t('schedule.classes.prices.title')\n  const sidebarButton = <ButtonAdd classId={classId}/>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_ITEM_PRICES_QUERY, {\n    variables: { scheduleItem: classId }\n  })\n\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.prices.error_loading')}</p>\n    </ClassEditBase>\n  )\n\n\n  const initialTimeStart = TimeStringToJSDateOBJ(data.scheduleItem.timeStart)\n  const subtitle = class_edit_all_subtitle({\n    t: t,\n    location: data.scheduleItem.organizationLocationRoom.organizationLocation.name,\n    locationRoom: data.scheduleItem.organizationLocationRoom.name,\n    classtype: data.scheduleItem.organizationClasstype.name,\n    starttime: initialTimeStart\n  })\n\n  // Empty list\n  if (!data.scheduleItemPrices.edges.length) { return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.prices.empty_list')}</p>\n    </ClassEditBase>\n  )}\n\n  return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n      defaultCard={false}\n    >\n    <ContentCard \n      cardTitle={t('schedule.classes.title_edit')}\n      // headerContent={headerOptions}\n      pageInfo={data.scheduleItemPrices.pageInfo}\n      onLoadMore={() => {\n      fetchMore({\n        variables: {\n          after: data.scheduleItemPrices.pageInfo.endCursor\n        },\n        updateQuery: (previousResult, { fetchMoreResult }) => {\n          const newEdges = fetchMoreResult.scheduleItemPrices.edges\n          const pageInfo = fetchMoreResult.scheduleItemPrices.pageInfo\n\n          return newEdges.length\n            ? {\n                // Put the new locations at the end of the list and update `pageInfo`\n                // so we have the new `endCursor` and `hasNextPage` values\n                data: { \n                  scheduleItemPrices: {\n                    __typename: previousResult.scheduleItemPrices.__typename,\n                    edges: [ ...previousResult.scheduleItemPrices.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              }\n            : previousResult\n          }\n        })\n      }} >\n      <div>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.dropin')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.trial')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {data.scheduleItemPrices.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                {console.log(node)}\n                <Table.Col key={v4()}> \n                  {moment(node.dateStart).format('LL')}\n                </Table.Col>\n                <Table.Col key={v4()}> \n                  {(node.dateEnd) ? moment(node.dateEnd).format('LL') : \"\"}\n                </Table.Col>\n                <Table.Col>\n                  {node.organizationClasspassDropin.name}\n                </Table.Col>\n                <Table.Col>\n                  {(node.organizationClasspassTrial) ? node.organizationClasspassTrial.name : \"\"}\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <Button className='btn-sm' \n                          onClick={() => history.push(\"/schedule/classes/all/prices/\" + match.params.class_id + '/edit/' + node.id)}\n                          color=\"secondary\">\n                    {t('general.edit')}\n                  </Button>\n                </Table.Col>\n                <Table.Col>\n                  <ScheduleClassPriceDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n        </div>\n      </ContentCard>\n    </ClassEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassPrices))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\n\nimport CSDatePicker from \"../../../../ui/CSDatePicker\"\n\nconst ScheduleClassPriceForm = ({ t, history, match, isSubmitting, errors, values, inputData, returnUrl, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                selected={values.dateStart}\n                onChange={(date) => setFieldValue(\"dateStart\", date)}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                selected={values.dateEnd}\n                onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.classpass_dropin')}>\n              <Field component=\"select\" \n                      name=\"organizationClasspassDropin\" \n                      className={(errors.organizationClasspassDropin) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in schedule class price form:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.organizationClasspasses.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationClasspassDropin\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.classpass_trial')}>\n              <Field component=\"select\" \n                      name=\"organizationClasspassTrial\" \n                      className={(errors.organizationClasspassTrial) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t('')}</option>\n                {inputData.organizationClasspasses.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationClasspassTrial\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(ScheduleClassPriceForm))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_CLASS_TEACHER_SCHEMA = Yup.object().shape({\n  account: Yup.string()\n    .required(t('yup.field_required')),\n  role: Yup.string(),\n  account2: Yup.string(),\n  role2: Yup.string(),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  // dateEnd: Yup.date()\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nconst ScheduleClassPriceBack = ({ t, classId }) => (\n  <Link to={\"/schedule/classes/all/prices/\" + classId } >\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(withRouter(ScheduleClassPriceBack))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Dimmer,\n} from \"tabler-react\";\n\nimport { GET_SCHEDULE_ITEM_PRICES_QUERY, GET_INPUT_VALUES_QUERY, ADD_SCHEDULE_ITEM_PRICE } from './queries'\nimport { SCHEDULE_CLASS_TEACHER_SCHEMA } from './yupSchema'\nimport ScheduleClassPriceForm from './ScheduleClassPriceForm'\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassPriceBack from \"./ScheduleClassPriceBack\"\n\n\nfunction ScheduleClassPriceAdd({ t, history, match }) {\n  const classId = match.params.class_id\n  const returnUrl = `/schedule/classes/all/prices/${classId}`\n  const cardTitle = t('schedule.classes.prices.title_add')\n  const menuActiveLink = \"prices\"\n  const sidebarButton = <ScheduleClassPriceBack classId={classId} />\n  const { loading, error, data, } = useQuery(GET_INPUT_VALUES_QUERY)\n  const [addScheduleClassPrice] = useMutation(ADD_SCHEDULE_ITEM_PRICE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n\n\n  return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Formik\n        initialValues={{ \n          dateStart: new Date() ,\n          organizationClasspassDropin: \"\",\n          organizationClasspassTrial: \"\",\n        }}\n        // validationSchema={SCHEDULE_CLASS_TEACHER_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n\n            let dateEnd\n            if (values.dateEnd) {\n              dateEnd = dateToLocalISO(values.dateEnd)\n            } else {\n              dateEnd = values.dateEnd\n            }\n\n            addScheduleClassPrice({ variables: {\n              input: {\n                scheduleItem: match.params.class_id,\n                dateStart: dateToLocalISO(values.dateStart),\n                dateEnd: dateEnd,\n                organizationClasspassDropin: values.organizationClasspassDropin,\n                organizationClasspassTrial: values.organizationClasspassTrial\n              }\n            }, refetchQueries: [\n                {query: GET_SCHEDULE_ITEM_PRICES_QUERY, variables: { scheduleItem: match.params.class_id }},\n                // {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('schedule.classes.prices.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleClassPriceForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n          />\n        )}\n    </Formik>\n  </ClassEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassPriceAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Dimmer,\n} from \"tabler-react\";\n\nimport { GET_SCHEDULE_ITEM_PRICES_QUERY, GET_SINGLE_SCHEDULE_ITEM_PRICE_QUERY, UPDATE_SCHEDULE_ITEM_PRICE } from './queries'\nimport { SCHEDULE_CLASS_TEACHER_SCHEMA } from './yupSchema'\nimport ScheduleClassPriceForm from './ScheduleClassPriceForm'\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassPriceBack from \"./ScheduleClassPriceBack\"\n\nfunction ScheduleClassPriceEdit({ t, history, match }) {\n  const id = match.params.id\n  const classId = match.params.class_id\n  const returnUrl = `/schedule/classes/all/prices/${classId}`\n  const menuActiveLink = \"prices\"\n  const cardTitle = t('schedule.classes.prices.title_edit')\n  const sidebarButton = <ScheduleClassPriceBack classId={match.params.class_id} />\n  const { loading, error, data, } = useQuery(GET_SINGLE_SCHEDULE_ITEM_PRICE_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n  const [editScheduleClassPrice] = useMutation(UPDATE_SCHEDULE_ITEM_PRICE, {\n    onCompleted: () => history.push(returnUrl)\n  })\n\n\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBase>\n  )\n\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n\n  let initialOrganizationClasspassDropin\n  let initialOrganizationClasspassTrial\n\n  if (inputData.scheduleItemPrice.organizationClasspassDropin) {\n    initialOrganizationClasspassDropin = inputData.scheduleItemPrice.organizationClasspassDropin.id\n  }\n\n  if (inputData.scheduleItemPrice.organizationClasspassTrial) {\n    initialOrganizationClasspassTrial = inputData.scheduleItemPrice.organizationClasspassTrial.id\n  }\n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  let dateEnd = null\n  if (inputData.scheduleItemPrice.dateStart) {\n    dateStart = new Date(inputData.scheduleItemPrice.dateStart)\n  }\n  if (inputData.scheduleItemPrice.dateEnd) {\n    dateEnd = new Date(inputData.scheduleItemPrice.dateEnd)\n  }\n\n\n  return (\n  <ClassEditBase \n    cardTitle={cardTitle}\n    menu_activeLink={menuActiveLink}\n    sidebarButton={sidebarButton}\n  >\n    <Formik\n      initialValues={{ \n        dateStart: dateStart,\n        dateEnd: dateEnd,\n        organizationClasspassDropin: initialOrganizationClasspassDropin,\n        organizationClasspassTrial: initialOrganizationClasspassTrial,\n      }}\n      // validationSchema={SCHEDULE_CLASS_TEACHER_SCHEMA}\n      onSubmit={(values, { setSubmitting }) => {\n\n          let dateEnd\n          if (values.dateEnd) {\n            dateEnd = dateToLocalISO(values.dateEnd)\n          } else {\n            dateEnd = values.dateEnd\n          }\n\n          editScheduleClassPrice({ variables: {\n            input: {\n              id: id,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateEnd,\n              organizationClasspassDropin: values.organizationClasspassDropin,\n              organizationClasspassTrial: values.organizationClasspassTrial\n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_ITEM_PRICES_QUERY, variables: { scheduleItem: match.params.class_id }},\n              // {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('schedule.classes.prices.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n      >\n      {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n        <ScheduleClassPriceForm\n          inputData={inputData}\n          isSubmitting={isSubmitting}\n          setFieldTouched={setFieldTouched}\n          setFieldValue={setFieldValue}\n          errors={errors}\n          values={values}\n          returnUrl={returnUrl + match.params.class_id}\n        />\n      )}\n  </Formik>\n</ClassEditBase>\n  )\n}\n\n\n// class ScheduleClassTeacherEdit extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Schedule class teacher edit props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const match = this.props.match\n//     const history = this.props.history\n//     const id = match.params.id\n//     const class_id = match.params.class_id\n//     const returnUrl = \"/schedule/classes/all/teachers/\" + class_id\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//           <Query query={GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY} variables={{id: id}}>\n//             {({ loading, error, data, refetch }) => {\n//               // Loading\n//               if (loading) return <p>{t('general.loading_with_dots')}</p>\n//               // Error\n//               if (error) {\n//                 console.log(error)\n//                 return <p>{t('general.error_sad_smiley')}</p>\n//               }\n    \n//               console.log('query data')\n//               console.log(data)\n//               const inputData = data\n//               const initialData = data.scheduleItemTeacher\n\n//               let initialAccount2 = \"\"\n//               if (initialData.account2) {\n//                 initialAccount2 =  initialData.account2.id\n//               } \n    \n//               return (\n//                 <ClassEditBase \n//                   card_title={t('schedule.classes.teachers.title_edit')}\n//                   menu_activeLink=\"teachers\"\n//                   sidebar_button={<ScheduleClassTeacherBack classId={class_id} />}\n//                 >\n//                   <Mutation mutation={UPDATE_SCHEDULE_CLASS_TEACHER} onCompleted={() => history.push(returnUrl)}> \n//                     {(addScheduleClassTeacher, { data }) => (\n//                         <Formik\n//                             initialValues={{  \n//                               dateStart: initialData.dateStart,\n//                               dateEnd: initialData.dateEnd,\n//                               account: initialData.account.id,\n//                               role: initialData.role,\n//                               account2: initialAccount2,\n//                               role2: initialData.role2,\n//                             }}\n//                             validationSchema={SCHEDULE_CLASS_TEACHER_SCHEMA}\n//                             onSubmit={(values, { setSubmitting }) => {\n    \n//                                 let dateEnd\n//                                 if (values.dateEnd) {\n//                                   dateEnd = dateToLocalISO(values.dateEnd)\n//                                 } else {\n//                                   dateEnd = values.dateEnd\n//                                 }\n    \n//                                 addScheduleClassTeacher({ variables: {\n//                                   input: {\n//                                     id: match.params.id,\n//                                     account: values.account,\n//                                     role: values.role,\n//                                     account2: values.account2,\n//                                     role2: values.role2,\n//                                     dateStart: dateToLocalISO(values.dateStart),\n//                                     dateEnd: dateEnd\n//                                   }\n//                                 }, refetchQueries: [\n//                                     {query: GET_SCHEDULE_CLASS_TEACHERS_QUERY, variables: { scheduleItem: match.params.class_id }},\n//                                     // {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n//                                 ]})\n//                                 .then(({ data }) => {\n//                                     console.log('got data', data);\n//                                     toast.success((t('schedule.classes.teachers.toast_edit_success')), {\n//                                         position: toast.POSITION.BOTTOM_RIGHT\n//                                       })\n//                                   }).catch((error) => {\n//                                     toast.error((t('general.toast_server_error')) + ': ' +  error, {\n//                                         position: toast.POSITION.BOTTOM_RIGHT\n//                                       })\n//                                     console.log('there was an error sending the query', error)\n//                                     setSubmitting(false)\n//                                   })\n//                             }}\n//                             >\n//                             {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n//                               <ScheduleClassTeacherForm\n//                                 inputData={inputData}\n//                                 isSubmitting={isSubmitting}\n//                                 setFieldTouched={setFieldTouched}\n//                                 setFieldValue={setFieldValue}\n//                                 errors={errors}\n//                                 values={values}\n//                                 returnUrl={returnUrl}\n//                               >\n//                                 {console.log(errors)}\n//                               </ScheduleClassTeacherForm>\n//                             )}\n//                         </Formik>\n//                     )}\n//                   </Mutation>\n//                 </ClassEditBase>\n//               )\n//             }}\n//           </Query>\n//         </div>\n//       </SiteWrapper>\n//     )\n//   }\n// }\n\n\nexport default withTranslation()(withRouter(ScheduleClassPriceEdit))","// @flow\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container,\n  Grid\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport SiteWrapper from \"../../SiteWrapper\"\n// import ShopAccountBack from \"../ShopAccountBack\"\nimport ScheduleMenu from \"../ScheduleMenu\"\n\n\nfunction ScheduleEventsBase({ t, match, history, children, sidebarContent=\"\", displayMenu=true }) {\n  return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"schedule.events.title\")} >\n              <div className=\"page-options d-flex\">\n                {/* Page options can go here... */}\n              </div>\n            </Page.Header>\n            <Grid.Row>\n            <Grid.Col md={9}>\n              { children }\n            </Grid.Col>\n            <Grid.Col md={3}>\n              { sidebarContent }\n                  {/* <div>\n                    <Button\n                      className=\"pull-right\"\n                      color=\"link\"\n                      size=\"sm\"\n                      onClick={() => {\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE, \"\")\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LEVEL, \"\")\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LOCATION, \"\")\n                        refetch(get_list_query_variables())\n                      }}\n                    >\n                      {t(\"general.clear\")}\n                    </Button>\n                  </div> */}\n                  {/* <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n                  <ScheduleClassesFilter data={data} refetch={refetch} /> */}\n              {(displayMenu) ?\n                <span>\n                  <h5>{t(\"general.menu\")}</h5>\n                  <ScheduleMenu activeLink='events'/>\n                </span>\n                : \"\" }\n            </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n      </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventsBase))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_EVENTS_QUERY = gql`\n  query ScheduleEvents($before:String, $after:String, $archived:Boolean!) {\n    scheduleEvents(first: 100, before: $before, after:$after, archived:$archived) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          displayShop\n          autoSendInfoMail\n          organizationLocation {\n            id\n            name\n          }\n          name\n          tagline\n          preview\n          description\n          organizationLevel {\n            id\n            name\n          }\n          teacher {\n            id \n            fullName\n          }\n          teacher2 {\n            id\n            fullName\n          }\n          dateStart\n          dateEnd\n          timeStart\n          timeEnd\n          infoMailContent\n          scheduleItems {\n            edges {\n              node {\n                id\n              }\n            }\n          }\n          createdAt\n          updatedAt\n        }\n      }\n    }\n  }\n`\n\nexport const GET_SCHEDULE_EVENT_QUERY = gql`\n  query ScheduleEvent($id: ID!, $before: String, $after: String) {\n    scheduleEvent(id: $id) {\n      id\n      archived\n      displayPublic\n      displayShop\n      autoSendInfoMail\n      organizationLocation {\n        id\n        name\n      }\n      name\n      tagline\n      preview\n      description\n      organizationLevel {\n        id\n        name\n      }\n      teacher {\n        id \n        fullName\n      }\n      teacher2 {\n        id\n        fullName\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      infoMailContent\n      scheduleItems {\n        edges {\n          node {\n            id\n          }\n        }\n      }\n      createdAt\n      updatedAt\n    }\n    organizationLocations(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    accounts(first: 100, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleEventInputValues($after: String, $before: String) {\n    organizationLocations(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    accounts(first: 100, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n  }\n`\n\nexport const ARCHIVE_SCHEDULE_EVENT = gql`\n  mutation ArchiveScheduleEvent($input: ArchiveScheduleEventInput!) {\n    archiveScheduleEvent(input: $input) {\n      scheduleEvent {\n        id\n      }\n    }\n  }\n`\n","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let archived = localStorage.getItem(CSLS.SCHEDULE_EVENTS_ARCHIVED)\n  if (archived === null) {\n    archived = false\n  }\n\n  let queryVars = {\n    archived: (archived === \"true\") ? true : false,\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { ARCHIVE_SCHEDULE_EVENT, GET_SCHEDULE_EVENTS_QUERY } from \"./queries\"\nimport confirm_archive from \"../../../tools/confirm_archive\"\nimport confirm_unarchive from \"../../../tools/confirm_unarchive\"\n\nimport {\n  Icon\n} from \"tabler-react\"\nimport { get_list_query_variables } from './tools'\n\n\nfunction ScheduleEventArchive({t, match, history, node}) {\n  const [archiveScheduleEvent] = useMutation(ARCHIVE_SCHEDULE_EVENT)\n  const refetchQueries = [\n    { query: GET_SCHEDULE_EVENTS_QUERY, variables: get_list_query_variables() },\n  ]\n\n  if (!node.archived) {\n    return (\n      <button className=\"icon btn btn-warning btn-sm mb-3 pull-right\" \n          title={t('general.unarchive')} \n          onClick={() => {\n            confirm_archive({\n              t: t,\n              msgConfirm: t(\"schedule.events.archive_confirm_msg\"),\n              msgDescription: <p></p>,\n              msgSuccess: t('general.archived'),\n              archiveFunction: archiveScheduleEvent,\n              functionVariables: { \n                variables: {\n                  input: {\n                    id: node.id,\n                    archived: true\n                  },\n                }, \n                refetchQueries: refetchQueries,\n              }\n            })\n        }}>\n        <span className=\"text-white\"><Icon prefix=\"fe\" name=\"inbox\" /> {\" \"} {t(\"\")}</span>\n      </button>\n    )\n\n  } else {\n    return (\n      <button className=\"icon btn btn-warning btn-sm mb-3 pull-right\" \n        title={t('general.archive')} \n        onClick={() => {\n          confirm_unarchive({\n            t: t,\n            msgConfirm: t(\"schedule.events.unarchive_confirm_msg\"),\n            msgDescription: <p></p>,\n            msgSuccess: t('general.unarchived'),\n            archiveFunction: archiveScheduleEvent,\n            functionVariables: { \n              variables: {\n                input: {\n                  id: node.id,\n                  archived: false\n                },\n              }, \n              refetchQueries: refetchQueries,\n            }\n          })\n      }}>\n        <span className=\"text-white\"><Icon prefix=\"fe\" name=\"inbox\" /> {\" \"} {t(\"\")}</span>\n      </button>\n    )\n  }\n}\n\nexport default withTranslation()(withRouter(ScheduleEventArchive))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport moment from 'moment'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\n\nimport ContentCard from \"../../general/ContentCard\"\nimport ScheduleEventsBase from \"./ScheduleEventsBase\"\nimport ScheduleEventArchive from \"./ScheduleEventArchive\"\n\nimport { GET_SCHEDULE_EVENTS_QUERY } from \"./queries\"\nimport { get_list_query_variables } from \"./tools\"\n\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.SCHEDULE_EVENTS_ARCHIVED)) {\n  localStorage.setItem(CSLS.SCHEDULE_EVENTS_ARCHIVED, false) \n} \n\n\nfunction ScheduleEvents({t, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_SCHEDULE_EVENTS_QUERY, {\n    variables: get_list_query_variables()\n  })\n\n  const sidebarContent = <HasPermissionWrapper permission=\"add\" resource=\"scheduleevent\">\n    <Button color=\"primary btn-block mb-1\"\n            onClick={() => history.push(\"/schedule/events/add\")}>\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.events.add')}\n    </Button>\n  </HasPermissionWrapper>\n\n  const cardHeaderContent = <Card.Options>\n    <Button color={(localStorage.getItem(CSLS.SCHEDULE_EVENTS_ARCHIVED) === \"false\") ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {\n              localStorage.setItem(CSLS.SCHEDULE_EVENTS_ARCHIVED, false)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.active')}\n    </Button>\n    <Button color={(localStorage.getItem(CSLS.SCHEDULE_EVENTS_ARCHIVED) === \"true\") ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {\n              localStorage.setItem(CSLS.SCHEDULE_EVENTS_ARCHIVED, true)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) {\n    return (\n      <ScheduleEventsBase sidebarContent={sidebarContent}>\n        <ContentCard \n          cardTitle={t('schedule.events.title')}\n          headerContent={cardHeaderContent}\n        >\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </ContentCard>\n      </ScheduleEventsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <ScheduleEventsBase sidebarContent={sidebarContent}>\n        <ContentCard \n          cardTitle={t('schedule.events.title')}\n          headerContent={cardHeaderContent}\n        >\n          {t(\"schedule.events.error_loading_data\")}\n        </ContentCard>\n      </ScheduleEventsBase>\n    )\n  }\n\n  console.log(data)\n\n  const scheduleEvents = data.scheduleEvents\n\n  return (\n    <ScheduleEventsBase sidebarContent={sidebarContent}>\n      <ContentCard \n        cardTitle={t('schedule.events.title')}\n        headerContent={cardHeaderContent}\n        pageInfo={scheduleEvents.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: scheduleEvents.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.scheduleEvents.edges\n                  const pageInfo = fetchMoreResult.scheduleEvents.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        scheduleEvents: {\n                          __typename: previousResult.scheduleEvents.__typename,\n                          edges: [ ...previousResult.scheduleEvents.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.event')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.teacher')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>  \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            { scheduleEvents.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  { moment(node.date).format(dateFormat) } <br /> \n                </Table.Col>\n                <Table.Col>\n                  <span title={ node.name }>{ node.name.trunc(36) }</span> <br />\n                  <small className=\"text-muted\">\n                    { node.organizationLocation.name }\n                  </small>\n                </Table.Col>\n                <Table.Col>\n                  {\n                    (node.teacher) ? node.teacher.fullName.trunc(30) : \"\"\n                  }\n                </Table.Col>\n                <Table.Col>\n                  <BadgeBoolean value={node.displayShop} />\n                </Table.Col>\n                {/* <Table.Col>\n                  { node.scheduleItem.organizationLocationRoom.organizationLocation.name } <br />\n                  <span className=\"text-muted\">\n                    { node.scheduleItem.organizationLocationRoom.name }\n                  </span> \n                </Table.Col> */}\n                <Table.Col className=\"text-right\" key={v4()}>\n                  {(node.archived) ? \n                    <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                    <Button className='btn-sm' \n                            onClick={() => history.push(\"/schedule/events/edit/\" + node.id)}\n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  }\n                </Table.Col>\n                <Table.Col>\n                  <ScheduleEventArchive node={node} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </ScheduleEventsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEvents))\n\n\n// const ScheduleEvents = ({ t, history, archived=false }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t(\"organization.title\")} />\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//             <Query query={GET_LEVELS_QUERY} variables={{ archived }}>\n//              {({ loading, error, data: {organizationLevels: levels}, refetch, fetchMore }) => {\n//                 // Loading\n//                 if (loading) return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}>\n//                     <Dimmer active={true}\n//                             loader={true}>\n//                     </Dimmer>\n//                   </ContentCard>\n//                 )\n//                 // Error\n//                 if (error) return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}>\n//                     <p>{t('organization.levels.error_loading')}</p>\n//                   </ContentCard>\n//                 )\n//                 const headerOptions = <Card.Options>\n//                   <Button color={(!archived) ? 'primary': 'secondary'}  \n//                           size=\"sm\"\n//                           onClick={() => {archived=false; refetch({archived});}}>\n//                     {t('general.current')}\n//                   </Button>\n//                   <Button color={(archived) ? 'primary': 'secondary'} \n//                           size=\"sm\" \n//                           className=\"ml-2\" \n//                           onClick={() => {archived=true; refetch({archived});}}>\n//                     {t('general.archive')}\n//                   </Button>\n//                 </Card.Options>\n                \n//                 // Empty list\n//                 if (!levels.edges.length) { return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}\n//                                headerContent={headerOptions}>\n//                     <p>\n//                     {(!archived) ? t('organization.levels.empty_list') : t(\"organization.levels.empty_archive\")}\n//                     </p>\n                   \n//                   </ContentCard>\n//                 )} else {   \n//                 // Life's good! :)\n//                 return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}\n//                                headerContent={headerOptions}\n//                                pageInfo={levels.pageInfo}\n//                                onLoadMore={() => {\n//                                 fetchMore({\n//                                   variables: {\n//                                     after: levels.pageInfo.endCursor\n//                                   },\n//                                   updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                     const newEdges = fetchMoreResult.organizationLevels.edges\n//                                     const pageInfo = fetchMoreResult.organizationLevels.pageInfo\n\n//                                     return newEdges.length\n//                                       ? {\n//                                           // Put the new levels at the end of the list and update `pageInfo`\n//                                           // so we have the new `endCursor` and `hasNextPage` values\n//                                           organizationLevels: {\n//                                             __typename: previousResult.organizationLevels.__typename,\n//                                             edges: [ ...previousResult.organizationLevels.edges, ...newEdges ],\n//                                             pageInfo\n//                                           }\n//                                         }\n//                                       : previousResult\n//                                   }\n//                                 })\n//                               }} >\n//                     <Table>\n//                           <Table.Header>\n//                             <Table.Row key={v4()}>\n//                               <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                             </Table.Row>\n//                           </Table.Header>\n//                           <Table.Body>\n//                               {levels.edges.map(({ node }) => (\n//                                 <Table.Row key={v4()}>\n//                                   <Table.Col key={v4()}>\n//                                     {node.name}\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     {(node.archived) ? \n//                                       <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/organization/levels/edit/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('general.edit')}\n//                                       </Button>\n//                                     }\n//                                   </Table.Col>\n//                                   <Mutation mutation={ARCHIVE_LEVEL} key={v4()}>\n//                                     {(archiveCostcenter, { data }) => (\n//                                       <Table.Col className=\"text-right\" key={v4()}>\n//                                         <button className=\"icon btn btn-link btn-sm\" \n//                                            title={t('general.archive')} \n//                                            href=\"\"\n//                                            onClick={() => {\n//                                              console.log(\"clicked archived\")\n//                                              let id = node.id\n//                                              archiveCostcenter({ variables: {\n//                                                input: {\n//                                                 id,\n//                                                 archived: !archived\n//                                                }\n//                                         }, refetchQueries: [\n//                                             {query: GET_LEVELS_QUERY, variables: {\"archived\": archived }}\n//                                         ]}).then(({ data }) => {\n//                                           console.log('got data', data);\n//                                           toast.success(\n//                                             (archived) ? t('general.unarchived'): t('general.archived'), {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                         }).catch((error) => {\n//                                           toast.error((t('general.toast_server_error')) + ': ' +  error, {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                           console.log('there was an error sending the query', error);\n//                                         })\n//                                         }}>\n//                                           <Icon prefix=\"fa\" name=\"inbox\" />\n//                                         </button>\n//                                       </Table.Col>\n//                                     )}\n//                                   </Mutation>\n//                                 </Table.Row>\n//                               ))}\n//                           </Table.Body>\n//                         </Table>\n//                   </ContentCard>\n//                 )}}\n//              }\n//             </Query>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"organizationlevel\">\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(\"/organization/levels/add\")}>\n//                 <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.levels.add')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <OrganizationMenu activeLink='levels'/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// );\n\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_EDIT_SCHEMA = Yup.object().shape({\n  displayPublic: Yup.boolean(),\n  displayShop: Yup.boolean(),\n  autoSendInfoMail: Yup.boolean(),\n  organizationLocation: Yup.string()\n    .required(t('yup.field_required')),\n  organizationLevel: Yup.string(),\n  teacher: Yup.string(),\n  teacher2: Yup.string(),\n  name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  tagline: Yup.string(),\n  preview: Yup.string(),\n  description: Yup.string(),\n  infoMailContent: Yup.string()\n})\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from 'uuid'\nimport { Link } from 'react-router-dom'\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nconst ScheduleEventForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, values, errors, returnUrl }) => (\n  <FoForm>\n    <Card.Body>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n                <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"displayPublic\" \n                  checked={values.displayPublic} />\n                <span className=\"custom-switch-indicator\" ></span>\n                <span className=\"custom-switch-description\">{t('schedule.events.public')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n                <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"displayShop\" \n                checked={values.displayShop} />\n                <span className=\"custom-switch-indicator\" ></span>\n                <span className=\"custom-switch-description\">{t('schedule.events.shop')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"displayShop\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n                <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"autoSendInfoMail\" \n                checked={values.autoSendInfoMail} />\n                <span className=\"custom-switch-indicator\" ></span>\n                <span className=\"custom-switch-description\">{t('schedule.events.auto_send_info_mail')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"autoSendInfoMail\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.location')}>\n            <Field component=\"select\" \n                  name=\"organizationLocation\" \n                  className={(errors.organizationLocation) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t(\"schedule.event.location_please_select\")}</option>\n              {inputData.organizationLocations.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"organizationLocation\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group> \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.level')}>\n            <Field component=\"select\" \n                  name=\"organizationLevel\" \n                  className={(errors.organizationLevel) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}></option>\n              {inputData.organizationLevels.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"organizationLevel\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group> \n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.teacher')}>\n            <Field component=\"select\" \n                  name=\"teacher\" \n                  className={(errors.teacher) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t(\"schedule.event.teacher_please_select\")}</option>\n              {inputData.accounts.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.fullName}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"teacher\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group> \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.teacher2')}>\n            <Field component=\"select\" \n                  name=\"teacher2\" \n                  className={(errors.teacher2) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}></option>\n              {inputData.accounts.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.fullName}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"teacher2\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group> \n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.tagline')}>\n            <Field type=\"text\" \n                    name=\"tagline\" \n                    className={(errors.tagline) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"tagline\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.preview')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"preview\"\n              initialValue={values.preview}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"preview\", e.target.getContent())\n                setFieldTouched(\"preview\", true, true)\n              }}\n              />\n            <ErrorMessage name=\"preview\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"description\"\n              initialValue={values.description}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"description\", e.target.getContent())\n                setFieldTouched(\"description\", true, true)\n              }}\n              />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.infoMailContent')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"infoMailContent\"\n              initialValue={values.infoMailContent}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"infoMailContent\", e.target.getContent())\n                setFieldTouched(\"infoMailContent\", true, true)\n              }}\n              />\n            <ErrorMessage name=\"infoMailContent\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n    </Card.Body>\n    <Card.Footer>\n      <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('general.submit')}\n      </Button>\n      <Link to={returnUrl}>\n        <Button color=\"link\">\n          {t('general.cancel')}\n        </Button>\n      </Link>\n    </Card.Footer>\n  </FoForm>\n)\n  \n  \nexport default withTranslation()(withRouter(ScheduleEventForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Dimmer,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { get_list_query_variables } from \"./tools\"\n\n\nimport { GET_SCHEDULE_EVENTS_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { SCHEDULE_EVENT_EDIT_SCHEMA } from './yupSchema'\nimport ScheduleEventForm from './ScheduleEventForm'\nimport ScheduleEventsBase from './ScheduleEventsBase'\nimport FormatISODateStr from '../../ui/ISODateString';\n\n\nconst CREATE_SCHEDULE_EVENT = gql`\n  mutation CreateScheduleEvent($input:CreateScheduleEventInput!) {\n    createScheduleEvent(input: $input) {\n      scheduleEvent{\n        id\n      }\n    }\n  }\n`\n\nconst return_url = \"/organization/events\"\n\nfunction ScheduleEventAdd({ t, history }) {\n  const returnUrl = \"/schedule/events\"\n  const sidebarContent = <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES_QUERY)\n  const [ createScheduleEvent ] = useMutation(CREATE_SCHEDULE_EVENT)\n\n  if (loading) {\n    return (\n      <ScheduleEventsBase sidebarContent={sidebarContent}>\n        <Card title={t(\"schedule.events.add\")}>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <ScheduleEventsBase sidebarContent={sidebarContent}>\n        <Card title={t(\"schedule.events.add\")}>\n          <Card.Body>\n            {t(\"schedule.events.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventsBase>\n    )\n  }\n\n  console.log(\"CREATE SCHEDULE EVENT INPUT DATA\")\n  console.log(data)\n  const inputData = data\n\n  return (\n    <ScheduleEventsBase sidebarContent={sidebarContent}>\n      <Card title={t(\"schedule.events.add\")}>\n        <Formik\n          initialValues={{ \n            displayPublic: true,\n            displayShop: true,\n            name: \"\",\n            description: \"\",\n          }}\n          validationSchema={SCHEDULE_EVENT_EDIT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              createScheduleEvent({ variables: {\n                input: {\n                  displayPublic: values.displayPublic,\n                  displayShop: values.displayShop,\n                  autoSentInfoMail: values.autoSentInfoMail,\n                  organizationLocation: values.organizationLocation,\n                  organizationLevel: values.organizationLevel,\n                  name: values.name,\n                  tagline: values.tagline,\n                  preview: values.preview,\n                  description: values.description,\n                  teacher: values.teacher,\n                  teacher2: values.teacher2,\n                  infoMailContent: values.infoMailContent,\n                }\n              }, refetchQueries: [\n                  { query: GET_SCHEDULE_EVENTS_QUERY, variables: get_list_query_variables() }\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('schedule.events.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <ScheduleEventForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              setFieldValue={setFieldValue}\n              setFieldTouched={setFieldTouched}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n            />\n          )}\n        </Formik>\n      </Card>\n    </ScheduleEventsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventAdd))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nlet general_active\nlet tickets_active\nlet earlybirds_active\nlet activities_active\nlet media_active\n\nconst ScheduleEventMenu = ({ t, eventId, activeLink }) => (\n  <List.Group transparent={true}>\n    {(activeLink === 'general') ? general_active = true: general_active = false}\n    {(activeLink === 'tickets') ? tickets_active = true: tickets_active = false}\n    {(activeLink === 'earlybirds') ? earlybirds_active = true: earlybirds_active = false}\n    {(activeLink === 'activities') ? activities_active = true: activities_active = false}\n    {(activeLink === 'media') ? media_active = true: media_active = false}\n    \n\n    <HasPermissionWrapper \n        resource=\"scheduleevent\"\n        permission=\"change\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to={`#/schedule/events/edit/${eventId}`}\n          icon=\"edit-2\"\n          active={general_active}\n          >\n          {t('schedule.events.edit.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    <HasPermissionWrapper \n        resource=\"scheduleeventticket\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to={`#/schedule/events/edit/${eventId}/tickets`}\n          icon=\"clipboard\"\n          active={tickets_active}\n          >\n          {t('schedule.events.tickets.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    <HasPermissionWrapper \n        resource=\"scheduleeventearlybird\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to={`#/schedule/events/edit/${eventId}/earlybirds`}\n          icon=\"clock\"\n          active={earlybirds_active}\n          >\n          {t('schedule.events.earlybirds.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    <HasPermissionWrapper \n        resource=\"scheduleevent\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to={`#/schedule/events/edit/${eventId}/activities`}\n          icon=\"calendar\"\n          active={activities_active}\n          >\n          {t('schedule.events.activities.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    <HasPermissionWrapper \n        resource=\"scheduleeventmedia\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to={`#/schedule/events/edit/${eventId}/media`}\n          icon=\"image\"\n          active={media_active}\n          >\n          {t('schedule.events.media.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n  </List.Group>\n);\n\nexport default withTranslation()(ScheduleEventMenu)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nconst ScheduleEventEditBack = ({ t }) => (\n  <div className=\"page-options d-flex\">\n    <Link to=\"/schedule/events\" \n          className='btn btn-link btn-sm mr-2'>\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back_to')} {t('schedule.events.title')}\n    </Link>\n  </div>\n)\n\nexport default withTranslation()(ScheduleEventEditBack)","// @flow\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container,\n  Grid\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport ScheduleEventEditMenu from \"./ScheduleEventEditMenu\"\nimport ScheduleEventEditBack from \"./ScheduleEventEditBack\"\n\n\nfunction ScheduleEventEditBaseBase({ t, match, history, children, pageHeaderOptions, sidebarContent=\"\", activeLink }) {\n  const eventId = match.params.event_id\n\n  return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"schedule.events.title\")} >\n              <div className=\"page-options d-flex\">\n                {/* Page options can go here... */}\n                <ScheduleEventEditBack />\n                { pageHeaderOptions }\n              </div>\n            </Page.Header>\n            <Grid.Row>\n            <Grid.Col md={9}>\n              { children }\n            </Grid.Col>\n            <Grid.Col md={3}>\n              { sidebarContent }\n              <h5>{t(\"general.edit_menu\")}</h5>\n              <ScheduleEventEditMenu activeLink={activeLink} eventId={eventId}/>\n            </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n      </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventEditBaseBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\n// import ScheduleEventEditTabs from \"./ScheduleEventEditTabs\"\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventEditBaseBase from \"./ScheduleEventEditBaseBase\"\n\n\nfunction ScheduleEventEditBase({\n    t, \n    match, \n    history, \n    activeTab, \n    children, \n    activeLink, \n    cardTitle, \n    pageHeaderOptions,\n    sidebarContent, \n    returnUrl=\"/schedule/events\"}) \n  {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const eventId = match.params.event_id\n\n  // Set default card title\n  if (!cardTitle) {\n    cardTitle = t(\"schedule.events.edit.title\")\n  }\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  if (loading) {\n    return (\n      <ScheduleEventEditBaseBase pageHeaderOptions={pageHeaderOptions} sidebarContent={sidebarContent} activeLink={activeLink}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <ScheduleEventEditBaseBase pageHeaderOptions={pageHeaderOptions} sidebarContent={sidebarContent} activeLink={activeLink}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            {t(\"schedule.events.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  const event = data.scheduleEvent\n  const dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\n  const cardSubTitle = (event) ? \n  <span className=\"text-muted\">\n    - {event.name + \" \" + dateStart}\n  </span> : \"\"\n\n  return (\n    <ScheduleEventEditBaseBase cardTitle={cardTitle} pageHeaderOptions={pageHeaderOptions} sidebarContent={sidebarContent} activeLink={activeLink}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle} {cardSubTitle}</Card.Title>\n        </Card.Header>\n        {children}\n      </Card>\n    </ScheduleEventEditBaseBase>\n    )\n  }\n\nexport default withTranslation()(withRouter(ScheduleEventEditBase))","// @flow\n\nimport React from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport { GET_SCHEDULE_EVENTS_QUERY, GET_SCHEDULE_EVENT_QUERY } from '../queries'\nimport { SCHEDULE_EVENT_EDIT_SCHEMA } from '../yupSchema'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventEditBase from \"./ScheduleEventEditBase\"\nimport ScheduleEventForm from \"../ScheduleEventForm\"\nimport { get_list_query_variables } from \"../tools\"\n\n\nconst UPDATE_SCHEDULE_EVENT = gql`\n  mutation UpdateScheduleEvent($input: UpdateScheduleEventInput!) {\n    updateScheduleEvent(input: $input) {\n      scheduleEvent {\n        id\n        name\n      }\n    }\n  }\n`\n\nfunction ScheduleEventEdit({t, match, history}) {\n  const id = match.params.event_id\n  const returnUrl = \"/schedule/events\"\n  const activeLink = \"general\"\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateScheduleEvent ] = useMutation(UPDATE_SCHEDULE_EVENT)\n\n\n  if (loading) {\n    return (\n      <ScheduleEventEditBase activeLink={activeLink}>\n        <Card.Body>\n          <Dimmer loading={true} active={true} />\n        </Card.Body>\n      </ScheduleEventEditBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <ScheduleEventEditBase activeLink={activeLink}>\n        <Card.Body>\n          {t(\"schedule.events.error_loading\")}\n        </Card.Body>\n      </ScheduleEventEditBase>\n    )\n  }\n\n  const initialData = data.scheduleEvent\n  const inputData = data\n\n  let initialOrgranizationlevel = \"\"\n  if (initialData.organizationLevel) {\n    initialOrgranizationlevel = initialData.organizationLevel.id\n  }\n\n  let initialTeacher = \"\"\n  if (initialData.teacher) {\n    initialTeacher = initialData.teacher.id\n  }\n\n  let initialTeacher2 = \"\"\n  if (initialData.teacher2) {\n    initialTeacher2 = initialData.teacher2.id\n  }\n\n  return (\n    <ScheduleEventEditBase activeLink={activeLink}>\n        <Formik\n          initialValues={{ \n            displayPublic: initialData.displayPublic,\n            displayShop: initialData.displayShop,\n            autoSendInfoMail: initialData.autoSendInfoMail,\n            organizationLocation: initialData.organizationLocation.id,\n            organizationLevel: initialOrgranizationlevel,\n            name: initialData.name,\n            tagline: initialData.tagline,\n            preview: initialData.preview,\n            description: initialData.description,\n            teacher: initialTeacher,\n            teacher2: initialTeacher2,\n            infoMailContent: initialData.infoMailContent,\n          }}\n          validationSchema={SCHEDULE_EVENT_EDIT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              let inputValues = {\n                id: id,\n                displayPublic: values.displayPublic,\n                displayShop: values.displayShop,\n                autoSendInfoMail: values.autoSendInfoMail,\n                organizationLocation: values.organizationLocation,\n                organizationLevel: values.organizationLevel,\n                name: values.name,\n                tagline: values.tagline,\n                preview: values.preview,\n                description: values.description,\n                infoMailContent: values.infoMailContent,\n              }\n\n              if (values.teacher) {\n                inputValues['teacher'] = values.teacher\n              }\n\n              if (values.teacher2) {\n                inputValues['teacher2'] = values.teacher2\n              }\n\n              updateScheduleEvent({ variables: {\n                input: inputValues\n              }, refetchQueries: [\n                  { query: GET_SCHEDULE_EVENTS_QUERY, variables: get_list_query_variables() }\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('schedule.events.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <ScheduleEventForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              setFieldValue={setFieldValue}\n              setFieldTouched={setFieldTouched}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n            />\n          )}\n        </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_EVENT_ACTIVITIES_QUERY = gql`\nquery ScheduleItem($before:String, $after:String, $scheduleEvent:ID!) {\n  scheduleItems(first:100, before:$before, after:$after, scheduleEvent:$scheduleEvent) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        displayPublic\n        scheduleEvent {\n          id\n          name\n        }\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        name\n        spaces\n        countAttendance\n        dateStart\n        timeStart\n        timeEnd\n        account {\n          id\n          fullName\n        }\n        account2 {\n          id\n          fullName\n        }\n      }\n    }\n  }\n}\n`\n\n\nexport const GET_SCHEDULE_EVENT_ACTIVITY_QUERY = gql`\nquery ScheduleEventActivity($before:String, $after:String, $id:ID!) {\n  scheduleItem(id: $id) {\n    id\n    displayPublic\n    name\n    spaces\n    dateStart\n    timeStart\n    timeEnd\n    organizationLocationRoom {\n      id\n      name\n      organizationLocation {\n        id\n        name\n      }\n    }\n    account {\n      id\n      fullName\n    }\n    account2 {\n      id\n      fullName\n    }\n  }\n  accounts(first: 100, before: $before, after: $after, isActive:true, teacher: true) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        fullName\n      }\n    }\n  }\n  organizationLocationRooms(first: 100, before: $before, after: $after, archived: false) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        name\n        organizationLocation {\n          id \n          name\n        }\n      }\n    }\n  }\n}\n`\n\n\nexport const DELETE_SCHEDULE_EVENT_ACTIVITY = gql`\n  mutation DeleteScheduleItem($input: DeleteScheduleItemInput!) {\n    deleteScheduleItem(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleEventActivityInputValues($after: String, $before: String) {\n    accounts(first: 100, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ContentCard from \"../../../general/ContentCard\"\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventEditBaseBase from \"./ScheduleEventEditBaseBase\"\n\n\nfunction ScheduleEventEditListBase({t, match, history, activeTab, pageInfo, onLoadMore, activeLink, children, sidebarContent=\"\"}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.edit.title\")\n\n  const eventId = match.params.event_id\n  const returnUrl = \"/schedule/events\"\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n\nif (loading) {\n  return (\n    <ScheduleEventEditBaseBase sidebarContent={sidebarContent} activeLink={activeLink}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <Dimmer loading={true} active={true} />\n        </Card.Body>\n      </Card>\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nif (error) {\n  return (\n    <ScheduleEventEditBaseBase sidebarContent={sidebarContent} activeLink={activeLink}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          {t(\"schedule.events.error_loading\")}\n        </Card.Body>\n      </Card>\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nconst event = data.scheduleEvent\nconst dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\nconst cardSubTitle = (event) ? \n<span className=\"text-muted\">\n  - {event.name + \" \" + dateStart}\n</span> : \"\"\n\nreturn (\n  <ScheduleEventEditBaseBase sidebarContent={sidebarContent} activeLink={activeLink}>\n    <ContentCard \n      cardTitle={<span>{cardTitle} {cardSubTitle}</span>}\n      pageInfo={pageInfo}\n      onLoadMore={onLoadMore}\n    >\n      {children}\n    </ContentCard>\n  </ScheduleEventEditBaseBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventEditListBase))","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_SCHEDULE_EVENT_ACTIVITY, GET_SCHEDULE_EVENT_ACTIVITIES_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventActivityDelete({t, match, history, id}) {\n  const eventId = match.params.event_id\n  const [deleteScheduleEventActivity, { data }] = useMutation(DELETE_SCHEDULE_EVENT_ACTIVITY)\n  const query_vars = {\n    scheduleEvent: eventId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.events.activities.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.events.activities.delete_success'),\n          deleteFunction: deleteScheduleEventActivity,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventActivityDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../ui/ButtonAddSecondaryMenu'\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\n\nimport { GET_SCHEDULE_EVENT_ACTIVITIES_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport ScheduleEventEditListBase from \"../edit/ScheduleEventEditListBase\"\n// import ScheduleEventTicketListBase from \"./ScheduleEventTicketListBase\"\nimport ScheduleEventActivityDelete from \"./ScheduleEventActivityDelete\"\nimport moment from 'moment';\n\n\nfunction ScheduleItems({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  console.log(appSettings)\n  \n  const eventId = match.params.event_id\n  const activeLink = \"activities\"\n\n  const sidebarContent = <Link to={`/schedule/events/edit/${eventId}/activities/add`}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.events.activities.add')}\n    </Button>\n  </Link>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, {\n    variables: {\n      scheduleEvent: eventId\n    }\n  })\n  \n  if (loading) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditListBase>\n  )\n  if (error) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const scheduleItems = data.scheduleItems\n  const pageInfo = data.scheduleItems.pageInfo\n\n  // Empty list\n  if (!scheduleItems.edges.length) { return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('schedule.events.tickets.empty_list')}</p>\n    </ScheduleEventEditListBase>\n  )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: scheduleItems.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.scheduleItems.edges\n        const pageInfo = fetchMoreResult.scheduleItems.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              scheduleItems: {\n                __typename: previousResult.scheduleItems.__typename,\n                edges: [ ...previousResult.scheduleItems.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <ScheduleEventEditListBase activeLink={activeLink} pageInfo={pageInfo} onLoadMore={onLoadMore} sidebarContent={sidebarContent}>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.teacher')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.filled')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {scheduleItems.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {moment(node.dateStart).format(dateFormat)} <br />\n                  {/* Start & end time */}\n                  <small className=\"text-muted\">\n                    {moment(node.dateStart + ' ' + node.timeStart).format(timeFormat)} {' - '}\n                    {moment(node.dateStart + ' ' + node.timeEnd).format(timeFormat)} { ' ' }\n                  </small>\n                </Table.Col>\n                <Table.Col>\n                  {node.name} <br />\n                  <div dangerouslySetInnerHTML={{__html: node.description}} className=\"text-muted\"/>\n                </Table.Col>\n                <Table.Col>\n                  {node.organizationLocationRoom.organizationLocation.name} <br />\n                  <small className=\"text-muted\">{node.organizationLocationRoom.name}</small>\n                </Table.Col>\n                <Table.Col>\n                  {node.account && node.account.fullName} \n                  {(node.account2) ? <span className=\"text-muted\"><br />{node.account2.fullName}</span> : \"\"}\n                </Table.Col>\n                <Table.Col>\n                  {node.countAttendance}/{node.spaces}\n                </Table.Col>\n                <Table.Col>\n                  <BadgeBoolean value={node.displayPublic} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/schedule/events/edit/${eventId}/activities/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <ScheduleEventActivityDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </ScheduleEventEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleItems))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_ACTIVITY_SCHEMA = Yup.object().shape({\n  displayPublic: Yup.boolean(),\n  name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  spaces: Yup.number()\n    .required(t('yup.field_required')),\n  organizationLocationRoom: Yup.string()\n    .required(t('yup.field_required')),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  timeStart: Yup.date()\n    .typeError(t('yup.time_required'))\n    .required(t('yup.field_required')),\n  timeEnd: Yup.date()\n    .typeError(t('yup.time_required'))\n    .required(t('yup.field_required')), \n  account: Yup.string(),\n  account2: Yup.string(),\n})","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventActivityBack({ t, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/activities`\n\n  return (\n    <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventActivityBack))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\nimport CSTimePicker from \"../../../ui/CSTimePicker\"\n\nfunction ScheduleEventActivityForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                    className=\"custom-switch-input\"\n                    type=\"checkbox\" \n                    name=\"displayPublic\" \n                    checked={values.displayPublic} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('schedule.events.activities.public')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.name')}>\n              <Field type=\"text\" \n                      name=\"name\" \n                      className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.location')}>\n              <Field component=\"select\" \n                    name=\"organizationLocationRoom\" \n                    className={(errors.organizationLocationRoom) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.please_select\")}</option>\n                {inputData.organizationLocationRooms.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.organizationLocation.name} - {node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLocationRoom\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.spaces')}>\n                <Field type=\"text\" \n                    name=\"spaces\" \n                    className={(errors.spaces) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n                <ErrorMessage name=\"spaces\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateStart\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n           <Form.Group label={t('general.time_start')}>\n              <CSTimePicker \n                className={(errors.timeStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeStart}\n                onChange={(date) => setFieldValue(\"timeStart\", date)}\n                onBlur={() => setFieldTouched(\"timeStart\", true)}\n                clearable={false}\n              />\n              {/* {errors.timeStart}\n              {errors.timeStart && touched.timeStart ? (\n                <span className=\"invalid-feedback\">{errors.timeStart} - hacky thingy</span>\n              ) : null} */}\n              <ErrorMessage name=\"timeStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n           <Form.Group label={t('general.time_end')}>\n              <CSTimePicker \n                className={(errors.timeEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeEnd}\n                onChange={(date) => setFieldValue(\"timeEnd\", date)}\n                onBlur={() => setFieldTouched(\"timeEnd\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher')}>\n              <Field component=\"select\" \n                      name=\"account\" \n                      className={(errors.account) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in schedule class teacher add:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher2')}>\n              <Field component=\"select\" \n                      name=\"account2\" \n                      className={(errors.account2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventActivityForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { dateToLocalISO, dateToLocalISOTime } from '../../../../tools/date_tools'\n\nimport { GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, GET_INPUT_VALUES_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_ACTIVITY_SCHEMA } from './yupSchema'\n\nimport ScheduleEventActivityBack from \"./ScheduleEventActivityBack\"\nimport ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventActivityForm from \"./ScheduleEventActivityForm\"\n\n\nconst ADD_SCHEDULE_EVENT_ACTIVITY = gql`\n  mutation CreateScheduleItem($input:CreateScheduleItemInput!) {\n    createScheduleItem(input: $input) {\n      scheduleItem {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventActivityAdd({ t, history, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/activities/`\n  const activeLink = 'activities'\n  const cardTitle = t(\"schedule.events.activities.add\")\n\n  const [addScheduleEventTicket] = useMutation(ADD_SCHEDULE_EVENT_ACTIVITY, {\n    onCompleted: () => history.push(returnUrl),\n  })\n  const { loading, error, data, fetchMore } = useQuery(GET_INPUT_VALUES_QUERY)\n\n  const sidebarContent = <ScheduleEventActivityBack />\n\n  if (loading) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditBase>\n  )\n  if (error) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditBase>\n  )\n\n  const inputData = data\n  console.log(inputData)\n\n  return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          displayPublic: true,\n          name: '',\n          spaces: '',\n          organizationLocationRoom: '',\n          dateStart: new Date(),\n          timeStart: '',\n          timeEnd: '',\n          account: '',\n          account2: ''\n        }}\n        validationSchema={SCHEDULE_EVENT_ACTIVITY_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addScheduleEventTicket({ variables: {\n            input: {\n              scheduleEvent: eventId,\n              frequencyType: \"SPECIFIC\",\n              frequencyInterval: 0,\n              scheduleItemType: \"EVENT_ACTIVITY\",\n              displayPublic: values.displayPublic,\n              name: values.name,\n              spaces: values.spaces,\n              organizationLocationRoom: values.organizationLocationRoom,\n              account: values.account,\n              account2: values.account2,\n              dateStart: dateToLocalISO(values.dateStart),\n              timeStart: dateToLocalISOTime(values.timeStart),\n              timeEnd: dateToLocalISOTime(values.timeEnd),\n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, variables: {\n                scheduleEvent: eventId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('schedule.events.activities.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventActivityForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            inputData={inputData}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventActivityAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport CardTabs from \"../../../ui/CardTabs\"\n\nfunction ScheduleEventActivityTabs({ t, active, eventId, scheduleItemId}) {\n  return (\n    <CardTabs \n      position=\"top\"\n      tabs={[\n          {\n            name: \"general\", \n            title: t(\"schedule.events.tickets.edit_menu.general\"), \n            link: `/schedule/events/edit/${eventId}/activities/edit/${scheduleItemId}`\n          },\n          {\n            name: \"attendance\", \n            title: t(\"schedule.events.tickets.edit_menu.attendance\"), \n            link: `/schedule/events/edit/${eventId}/activities/edit/${scheduleItemId}/attendance`\n          },\n      ]}\n      active={active}\n    />\n  )\n}\n\nexport default withTranslation()(ScheduleEventActivityTabs)\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport { GET_SCHEDULE_EVENT_ACTIVITY_QUERY } from './queries'\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventActivityBack from \"./ScheduleEventActivityBack\"\nimport ScheduleEventEditBaseBase from \"../edit/ScheduleEventEditBaseBase\"\nimport ScheduleEventActivityTabs from \"./ScheduleEventActivityTabs\"\n\n\nfunction ScheduleEventActivityEditBase({t, match, history, activeTab, children}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.activities.edit\")\n  const activeLink = \"activities\"\n\n  const eventId = match.params.event_id\n  const scheduleItemId = match.params.id\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  const { loading: loadingActivity, error: errorActivity, data: dataActivity } = useQuery(GET_SCHEDULE_EVENT_ACTIVITY_QUERY, {\n    variables: {\n      id: scheduleItemId\n    }\n  })\n\n  const sidebarContent = <ScheduleEventActivityBack />\n\n  if (loading || loadingActivity) {\n    return (\n      <ScheduleEventEditBaseBase sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  if (error || errorActivity) {\n    return (\n      <ScheduleEventEditBaseBase sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n          <Card.Body>\n            {t(\"schedule.events.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  const event = data.scheduleEvent\n  const scheduleItem = dataActivity.scheduleItem\n  const dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\n  const cardSubTitle = (scheduleItem) ? \n  <span className=\"text-muted\">\n    - {event.name + \" \" + dateStart}\n  </span> : \"\"\n\n  const cardActivitySubtitle = (scheduleItem) ?\n  <span className=\"text-muted\">\n    - {scheduleItem.name}\n  </span> : \"\"\n\n  return (\n    <ScheduleEventEditBaseBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle} {cardSubTitle} {cardActivitySubtitle}</Card.Title>\n        </Card.Header>\n        <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n        {children}\n      </Card>\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventActivityEditBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { dateToLocalISO, dateToLocalISOTime, TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n\nimport { GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, GET_SCHEDULE_EVENT_ACTIVITY_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_ACTIVITY_SCHEMA } from './yupSchema'\n\nimport ScheduleEventActivityBack from \"./ScheduleEventActivityBack\"\nimport ScheduleEventActivityEditBase from \"./ScheduleEventActivityEditBase\"\n// import ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventActivityForm from \"./ScheduleEventActivityForm\"\n\n\nconst UPDATE_SCHEDULE_EVENT_ACTIVITY = gql`\n  mutation UpdateScheduleItem($input:UpdateScheduleItemInput!) {\n    updateScheduleItem(input: $input) {\n      scheduleItem {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventActivityEdit({ t, history, match }) {\n  const eventId = match.params.event_id\n  const scheduleItemId = match.params.id\n  const returnUrl = `/schedule/events/edit/${eventId}/activities/`\n  const activeTab = 'general'\n  const cardTitle = t(\"schedule.events.activities.edit\")\n\n  const [updateScheduleEventTicket] = useMutation(UPDATE_SCHEDULE_EVENT_ACTIVITY)\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_ACTIVITY_QUERY, {\n    variables: {\n      id: scheduleItemId\n  }})\n\n  const sidebarContent = <ScheduleEventActivityBack />\n\n  if (loading) return (\n    <ScheduleEventActivityEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventActivityEditBase>\n  )\n  if (error) return (\n    <ScheduleEventActivityEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventActivityEditBase>\n  )\n\n  const inputData = data\n  const scheduleItem = data.scheduleItem\n  console.log(inputData)\n\n  let initialTimeStart = null\n  if (scheduleItem.timeStart) {\n    initialTimeStart = TimeStringToJSDateOBJ(scheduleItem.timeStart)\n  }\n  let initialTimeEnd = null\n  if (scheduleItem.timeEnd) {\n    initialTimeEnd = TimeStringToJSDateOBJ(scheduleItem.timeEnd)\n  }\n\n\n  return (\n    <ScheduleEventActivityEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          displayPublic: scheduleItem.displayPublic,\n          name: scheduleItem.name,\n          spaces: scheduleItem.spaces,\n          organizationLocationRoom: scheduleItem.organizationLocationRoom.id,\n          dateStart: scheduleItem.dateStart,\n          timeStart: initialTimeStart,\n          timeEnd: initialTimeEnd,\n          account: (scheduleItem.account) ? scheduleItem.account.id : '',\n          account2: (scheduleItem.account2) ? scheduleItem.account2.id : ''\n        }}\n        validationSchema={SCHEDULE_EVENT_ACTIVITY_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateScheduleEventTicket({ variables: {\n            input: {\n              id: scheduleItemId,\n              displayPublic: values.displayPublic,\n              name: values.name,\n              spaces: values.spaces,\n              organizationLocationRoom: values.organizationLocationRoom,\n              account: values.account,\n              account2: values.account2,\n              dateStart: dateToLocalISO(values.dateStart),\n              timeStart: dateToLocalISOTime(values.timeStart),\n              timeEnd: dateToLocalISOTime(values.timeEnd),\n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, variables: {\n                scheduleEvent: eventId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('schedule.events.activities.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventActivityForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            inputData={inputData}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventActivityEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventActivityEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_ITEM_ATTENDANCES_QUERY = gql`\nquery ScheduleItemAttendances($before:String, $after:String, $schedule_item:ID!) {\n  scheduleItemAttendances(first: 100, before: $before, after: $after, scheduleItem:$schedule_item) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        bookingStatus\n        account {\n          id\n          fullName\n        }\n        accountScheduleEventTicket {\n          id\n          scheduleEventTicket {\n            name\n          }\n          cancelled\n        }\n      }\n    }\n  }\n}\n`\n\n// export const GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM_QUERY = gql`\n// query ScheduleEventTicket($before:String, $after:String, $id:ID!) {\n//   scheduleEventTicket(id: $id) {\n//     id\n//     displayPublic\n//     name\n//     description\n//     price\n//     financeTaxRate {\n//       id\n//       name\n//     }\n//     financeGlaccount {\n//       id\n//       name\n//     }\n//     financeCostcenter {\n//       id\n//       name\n//     }\n//   }\n//   financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n//   financeGlaccounts(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n//   financeCostcenters(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n// }\n// `\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport { GET_SCHEDULE_EVENT_ACTIVITY_QUERY } from '../queries'\nimport { GET_SCHEDULE_EVENT_QUERY } from '../../queries'\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport ScheduleEventActivityBack from \"../ScheduleEventActivityBack\"\nimport ScheduleEventEditBaseBase from \"../../edit/ScheduleEventEditBaseBase\"\nimport ScheduleEventActivityTabs from \"../ScheduleEventActivityTabs\"\n\n\nfunction ScheduleEventActivityAttendanceBase({t, match, history, activeTab, onLoadMore, pageInfo, children}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.activities.edit\")\n  const activeLink = \"activities\"\n\n  const eventId = match.params.event_id\n  const scheduleItemId = match.params.id\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  const { loading: loadingActivity, error: errorActivity, data: dataActivity } = useQuery(GET_SCHEDULE_EVENT_ACTIVITY_QUERY, {\n    variables: {\n      id: scheduleItemId\n    }\n  })\n\n  const sidebarContent = <ScheduleEventActivityBack />\n\n  if (loading || loadingActivity) {\n    return (\n      <ScheduleEventEditBaseBase  activeLink={activeLink} sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  if (error || errorActivity) {\n    return (\n      <ScheduleEventEditBaseBase activeLink={activeLink} sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n          <Card.Body>\n            {t(\"schedule.event.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  const event = data.scheduleEvent\n  const scheduleItem = dataActivity.scheduleItem\n  const dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\n  const cardSubTitle = (scheduleItem) ? \n  <span className=\"text-muted\">\n    - {event.name + \" \" + dateStart}\n  </span> : \"\"\n\n  const cardActivitySubtitle = (scheduleItem) ?\n  <span className=\"text-muted\">\n    - {scheduleItem.name}\n  </span> : \"\"\n\n  return (\n    <ScheduleEventEditBaseBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <ContentCard \n        cardTitle={<span>{cardTitle} {cardSubTitle} {cardActivitySubtitle}</span>}\n        cardTabs={<ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>}\n        pageInfo={pageInfo}\n        onLoadMore={onLoadMore}\n      >\n        \n        {children}\n      </ContentCard>\n      {/* <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle} {cardSubTitle} {cardActivitySubtitle}</Card.Title>\n        </Card.Header>\n        <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n        {children}\n      </Card> */}\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventActivityAttendanceBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\n\nimport {\n  Table\n} from \"tabler-react\"\n\n// import { dateToLocalISO, dateToLocalISOTime, TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n\nimport { GET_SCHEDULE_ITEM_ATTENDANCES_QUERY } from \"./queries\"\n// import { SCHEDULE_EVENT_ACTIVITY_SCHEMA } from './yupSchema'\n\nimport ScheduleEventActivityBack from \"../ScheduleEventActivityBack\"\nimport ScheduleEventActivityAttendanceBase from \"./ScheduleEventActivityAttendanceBase\"\n// import ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\n// import ScheduleEventActivityForm from \"./ScheduleEventActivityForm\"\nimport BadgeBookingStatus from \"../../../../ui/BadgeBookingStatus\"\n\n\nfunction ScheduleEventActivityAttendance({ t, history, match }) {\n  const eventId = match.params.event_id\n  const scheduleItemId = match.params.id\n  const returnUrl = `/schedule/events/edit/${eventId}/activities/`\n  const activeTab = 'attendance'\n  const cardTitle = t(\"schedule.events.activities.edit\")\n  const activeLink = \"activities\"\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_ITEM_ATTENDANCES_QUERY, {\n    variables: {\n      schedule_item: scheduleItemId\n    },\n    fetchPolicy: \"network-only\"\n  })\n\n  const sidebarContent = <ScheduleEventActivityBack />\n\n  if (loading) return (\n    <ScheduleEventActivityAttendanceBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventActivityAttendanceBase>\n  )\n  if (error) return (\n    <ScheduleEventActivityAttendanceBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventActivityAttendanceBase>\n  )\n\n  const scheduleItemAttendances = data.scheduleItemAttendances\n  console.log(data)\n  const pageInfo = scheduleItemAttendances.pageInfo\n\n  // Empty list\n  if (!scheduleItemAttendances.edges.length) { return (\n    <ScheduleEventActivityAttendanceBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('schedule.events.activities.attendance.empty_list')}</p>\n    </ScheduleEventActivityAttendanceBase>\n  )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: scheduleItemAttendances.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.scheduleItemAttendances.edges\n        const pageInfo = fetchMoreResult.scheduleItemAttendances.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new attendance items at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              scheduleItemAttendances: {\n                __typename: previousResult.scheduleItemAttendances.__typename,\n                edges: [ ...previousResult.scheduleItemAttendances.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <ScheduleEventActivityAttendanceBase \n      // sidebarContent={sidebarContent} \n      // cardTitle={cardTitle} \n      activeTab={activeTab} \n      pageInfo={pageInfo}\n      onLoadMore={onLoadMore}\n    >\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.booking_status')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {scheduleItemAttendances.edges.map(({ node }) => (\n            <Table.Row key={v4()}>\n              <Table.Col>\n                {node.account.fullName}\n              </Table.Col>\n              <Table.Col>\n                <BadgeBookingStatus status={node.bookingStatus} />\n              </Table.Col>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </ScheduleEventActivityAttendanceBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventActivityAttendance))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY = gql`\n  query ScheduleEventEarlybirds($before:String, $after:String, $scheduleEvent:ID!) {\n    scheduleEventEarlybirds(first: 100, before:$before, after:$after, scheduleEvent:$scheduleEvent) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          scheduleEvent {\n            id\n          }\n          discountPercentage\n          dateStart\n          dateEnd\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_SCHEDULE_EVENT_EARLYBIRD_QUERY = gql`\n  query ScheduleEventEarlybird($id:ID!) {\n    scheduleEventEarlybird(id: $id) {\n      id\n      discountPercentage\n      dateStart\n      dateEnd\n    }\n  }\n`\n\n\nexport const ADD_SCHEDULE_EVENT_EARLYBIRD = gql`\n  mutation CreateScheduleEventEarlybird($input:CreateScheduleEventEarlybirdInput!) {\n    createScheduleEventEarlybird(input: $input) {\n      scheduleEventEarlybird {\n        id\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_SCHEDULE_EVENT_EARLYBIRD = gql`\n  mutation UpdateScheduleEventEarlybird($input:UpdateScheduleEventEarlybirdInput!) {\n    updateScheduleEventEarlybird(input: $input) {\n      scheduleEventEarlybird {\n        id\n      }\n    }\n  }\n`\n\n\nexport const DELETE_SCHEDULE_EVENT_EARLYBIRD   = gql`\n  mutation DeleteScheduleEventEarlybird($input: DeleteScheduleEventEarlybirdInput!) {\n    deleteScheduleEventEarlybird(input: $input) {\n      ok\n    }\n  }\n`\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_SCHEDULE_EVENT_EARLYBIRD, GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventEarlybirdDelete({t, match, history, id}) {\n  const eventId = match.params.event_id\n  const [deleteScheduleEventEarlybird, { data }] = useMutation(DELETE_SCHEDULE_EVENT_EARLYBIRD)\n  const query_vars = {\n    scheduleEvent: eventId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.events.earlybirds.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.events.earlybirds.delete_success'),\n          deleteFunction: deleteScheduleEventEarlybird,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventEarlybirdDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../ui/ButtonAddSecondaryMenu'\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\n\nimport { GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY } from './queries'\n\nimport {\n  Avatar,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport ScheduleEventEditListBase from \"../edit/ScheduleEventEditListBase\"\n// import ScheduleEventTicketListBase from \"./ScheduleEventTicketListBase\"\nimport ScheduleEventEarlybirdDelete from \"./ScheduleEventEarlybirdDelete\"\nimport moment from 'moment';\n\n\nfunction ScheduleEventEarlybirds({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  console.log(appSettings)\n  \n  const eventId = match.params.event_id\n  const activeLink = \"earlybirds\"\n\n  const sidebarContent = <Link to={`/schedule/events/edit/${eventId}/earlybirds/add`}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.events.earlybirds.add')}\n    </Button>\n  </Link>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY, {\n    variables: {\n      scheduleEvent: eventId\n    }\n  })\n  \n  if (loading) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditListBase>\n  )\n  if (error) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const scheduleEventEarlybirds = data.scheduleEventEarlybirds\n  const pageInfo = data.scheduleEventEarlybirds.pageInfo\n\n  // Empty list\n  if (!scheduleEventEarlybirds.edges.length) { return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('schedule.events.earlybirds.empty_list')}</p>\n    </ScheduleEventEditListBase>\n  )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: scheduleEventEarlybirds.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.scheduleEventEarlybirds.edges\n        const pageInfo = fetchMoreResult.scheduleEventEarlybirds.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              scheduleEventEarlybirds: {\n                __typename: previousResult.scheduleEventEarlybirds.__typename,\n                edges: [ ...previousResult.scheduleEventEarlybirds.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <ScheduleEventEditListBase activeLink={activeLink} pageInfo={pageInfo} onLoadMore={onLoadMore} sidebarContent={sidebarContent}>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n            <Table.ColHeader>{t('schedule.events.earlybirds.discountPercentage')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {scheduleEventEarlybirds.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {moment(node.dateStart).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  {moment(node.dateEnd).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  {node.discountPercentage} %\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/schedule/events/edit/${eventId}/earlybirds/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <ScheduleEventEarlybirdDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </ScheduleEventEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventEarlybirds))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_EARLYBIRDS_SCHEMA = Yup.object().shape({\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .required(t('yup.field_required')),\n  discountPercentage: Yup.number()\n  .required(t('yup.field_required')),\n})","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventEarlybirdsBack({ t, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/earlybirds`\n\n  return (\n    <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventEarlybirdsBack))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\nfunction ScheduleEventMediaForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  returnUrl,\n  setFieldTouched,\n  setFieldValue,\n})   \n{\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateStart\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                className={(errors.dateEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateEnd}\n                onChange={(date) => {\n                  setFieldValue(\"dateEnd\", date)\n                  setFieldTouched(\"dateEnd\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('schedule.events.earlybirds.discountPercentage')}>\n              <Field type=\"text\" \n                    name=\"discountPercentage\" \n                    className={(errors.discountPercentage) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"discountPercentage\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\" role=\"button\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventMediaForm))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { ADD_SCHEDULE_EVENT_EARLYBIRD, GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_EARLYBIRDS_SCHEMA } from './yupSchema'\n\nimport ScheduleEventEarlybirdBack from \"./ScheduleEventEarlybirdsBack\"\nimport ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventEarlybirdForm from \"./ScheduleEventEarlybirdForm\"\n\n\nfunction ScheduleEventEarlybirdAdd({ t, history, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/earlybirds/`\n  const activeLink = 'earlybirds'\n  const cardTitle = t(\"schedule.events.earlybirds.add\")\n\n  const [addScheduleEventEarlybird] = useMutation(ADD_SCHEDULE_EVENT_EARLYBIRD)\n\n  const sidebarContent = <ScheduleEventEarlybirdBack />\n\n  return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          dateStart: new Date(),\n          dateEnd: \"\",\n          discountPercentage: 0,\n        }}\n        validationSchema={SCHEDULE_EVENT_EARLYBIRDS_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"Submit values\")\n          console.log(values)\n\n          addScheduleEventEarlybird({ variables: {\n            input: {\n              scheduleEvent: eventId,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              discountPercentage: values.discountPercentage   \n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY, variables: {scheduleEvent: eventId}}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              history.push(returnUrl)\n              toast.success((t('schedule.events.earlybirds.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n      >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventEarlybirdForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventEarlybirdAdd))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { \n  GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY, \n  GET_SCHEDULE_EVENT_EARLYBIRD_QUERY,\n  UPDATE_SCHEDULE_EVENT_EARLYBIRD\n } from \"./queries\"\nimport { SCHEDULE_EVENT_EARLYBIRDS_SCHEMA } from './yupSchema'\n\nimport ScheduleEventEarlybirdBack from \"./ScheduleEventEarlybirdsBack\"\nimport ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventEarlybirdForm from \"./ScheduleEventEarlybirdForm\"\n\n\nfunction ScheduleEventEarlybirdEdit({ t, history, match }) {\n  const eventId = match.params.event_id\n  const scheduleEventEarlybirdId = match.params.id\n  const returnUrl = `/schedule/events/edit/${eventId}/earlybirds/`\n  const activeTab = 'general'\n  const cardTitle = t(\"schedule.events.earlybirds.edit\")\n\n  const [updateScheduleEventEarlybird] = useMutation(UPDATE_SCHEDULE_EVENT_EARLYBIRD)\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_EARLYBIRD_QUERY, {\n    variables: {\n      id: scheduleEventEarlybirdId\n  }})\n\n  const sidebarContent = <ScheduleEventEarlybirdBack />\n\n  if (loading) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditBase>\n  )\n  if (error) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditBase>\n  )\n\n  const inputData = data\n  const scheduleEventEarlybird = data.scheduleEventEarlybird\n  console.log(inputData)\n\n  return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          dateStart: scheduleEventEarlybird.dateStart,\n          dateEnd: scheduleEventEarlybird.dateEnd,\n          discountPercentage: scheduleEventEarlybird.discountPercentage\n        }}\n        validationSchema={SCHEDULE_EVENT_EARLYBIRDS_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"Submit values\")\n          console.log(values)\n\n          updateScheduleEventEarlybird({ variables: {\n            input: {\n              id: scheduleEventEarlybirdId,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              discountPercentage: values.discountPercentage   \n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY, variables: {scheduleEvent: eventId}}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              history.push(returnUrl)\n              toast.success((t('schedule.events.earlybirds.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventEarlybirdForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventEarlybirdEdit))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_EVENT_MEDIAS_QUERY = gql`\n  query ScheduleEventMedias($before:String, $after:String, $scheduleEvent:ID!) {\n    scheduleEventMedias(first: 100, before:$before, after:$after, scheduleEvent:$scheduleEvent) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          scheduleEvent {\n            id\n          }\n          sortOrder\n          description\n          urlImage\n          urlImageThumbnailSmall\n          image\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_SCHEDULE_EVENT_MEDIA_QUERY = gql`\n  query ScheduleEventMedia($id:ID!) {\n    scheduleEventMedia(id: $id) {\n      id\n      sortOrder\n      description\n      image\n    }\n  }\n`\n\n\nexport const DELETE_SCHEDULE_EVENT_MEDIA   = gql`\n  mutation DeleteScheduleEventMedia($input: DeleteScheduleEventMediaInput!) {\n    deleteScheduleEventMedia(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleEventActivityInputValues($after: String, $before: String) {\n    accounts(first: 100, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_SCHEDULE_EVENT_MEDIA, GET_SCHEDULE_EVENT_MEDIAS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventMediaDelete({t, match, history, id}) {\n  const eventId = match.params.event_id\n  const [deleteScheduleEventMedia, { data }] = useMutation(DELETE_SCHEDULE_EVENT_MEDIA)\n  const query_vars = {\n    scheduleEvent: eventId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.events.media.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.events.media.delete_success'),\n          deleteFunction: deleteScheduleEventMedia,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_EVENT_MEDIAS_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventMediaDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../ui/ButtonAddSecondaryMenu'\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\n\nimport { GET_SCHEDULE_EVENT_MEDIAS_QUERY } from './queries'\n\nimport {\n  Avatar,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport ScheduleEventEditListBase from \"../edit/ScheduleEventEditListBase\"\n// import ScheduleEventTicketListBase from \"./ScheduleEventTicketListBase\"\nimport ScheduleEventMediaDelete from \"./ScheduleEventMediaDelete\"\nimport moment from 'moment';\n\n\nfunction ScheduleEventMedia({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  console.log(appSettings)\n  \n  const eventId = match.params.event_id\n  const activeLink = \"media\"\n\n  const sidebarContent = <Link to={`/schedule/events/edit/${eventId}/media/add`}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.events.media.add')}\n    </Button>\n  </Link>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_MEDIAS_QUERY, {\n    variables: {\n      scheduleEvent: eventId\n    }\n  })\n  \n  if (loading) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditListBase>\n  )\n  if (error) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const scheduleEventMedias = data.scheduleEventMedias\n  const pageInfo = data.scheduleEventMedias.pageInfo\n\n  // Empty list\n  if (!scheduleEventMedias.edges.length) { return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('schedule.events.media.empty_list')}</p>\n    </ScheduleEventEditListBase>\n  )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: scheduleEventMedias.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.scheduleEventMedias.edges\n        const pageInfo = fetchMoreResult.scheduleEventMedias.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              scheduleEventMedias: {\n                __typename: previousResult.scheduleEventMedias.__typename,\n                edges: [ ...previousResult.scheduleEventMedias.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <ScheduleEventEditListBase activeLink={activeLink} pageInfo={pageInfo} onLoadMore={onLoadMore} sidebarContent={sidebarContent}>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader></Table.ColHeader> \n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.sort_order')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {scheduleEventMedias.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  <Avatar size=\"lg\" imageURL={node.urlImageThumbnailSmall} />\n                </Table.Col>\n                <Table.Col>\n                  {node.description}\n                </Table.Col>\n                <Table.Col>\n                  {node.sortOrder}\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/schedule/events/edit/${eventId}/media/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <ScheduleEventMediaDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </ScheduleEventEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventMedia))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_MEDIA_SCHEMA = Yup.object().shape({\n  description: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  sortOrder: Yup.number(),\n})","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventMediaBack({ t, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/media`\n\n  return (\n    <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventMediaBack))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\n\nimport { customFileInputLabelStyle } from \"../../../../tools/custom_file_input_label_style\"\n\nfunction ScheduleEventMediaForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  returnUrl,\n  inputFileName, \n  fileInputLabel, \n  handleFileInputChange=f=>f\n})   \n{\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.description')}>\n              <Field type=\"text\" \n                      name=\"description\" \n                      className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.sort_order')}>\n              <Field type=\"text\" \n                    name=\"sortOrder\" \n                    className={(errors.sortOrder) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"sortOrder\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.custom_file_input_label')}>\n              <div className=\"custom-file\">\n                <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                  {fileInputLabel}\n                </label>\n              </div>\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventMediaForm))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { GET_SCHEDULE_EVENT_MEDIAS_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_MEDIA_SCHEMA } from './yupSchema'\n\nimport ScheduleEventMediaBack from \"./ScheduleEventMediaBack\"\nimport ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventMediaForm from \"./ScheduleEventMediaForm\"\n\n\nconst ADD_SCHEDULE_EVENT_MEDIA = gql`\n  mutation CreateScheduleEventMedia($input:CreateScheduleEventMediaInput!) {\n    createScheduleEventMedia(input: $input) {\n      scheduleEventMedia {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventMediaAdd({ t, history, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/media/`\n  const activeLink = 'media'\n  const cardTitle = t(\"schedule.events.media.add\")\n\n  const [addScheduleEventMedia] = useMutation(ADD_SCHEDULE_EVENT_MEDIA, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n\n  const sidebarContent = <ScheduleEventMediaBack />\n\n  return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          description: \"\",\n          sortOrder: 0,\n        }}\n        validationSchema={SCHEDULE_EVENT_MEDIA_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"Submit values\")\n          console.log(values)\n          console.log(fileName)\n\n          let inputVars = {\n            scheduleEvent: eventId,\n            description: values.description,\n            sortOrder: values.sortOrder,\n            imageFileName: fileName,\n          }\n\n          let reader = new FileReader()\n          reader.onload = function(reader_event) {\n            console.log(reader_event.target.result)\n            let b64_enc_file = reader_event.target.result\n            console.log(b64_enc_file)\n            // Add uploaded document b64 encoded blob to input vars\n            inputVars.image = b64_enc_file\n\n            addScheduleEventMedia({ variables: {\n              input: inputVars\n            }, refetchQueries: [\n                {query: GET_SCHEDULE_EVENT_MEDIAS_QUERY, variables: {scheduleEvent: eventId}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('schedule.events.media.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                  setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n          \n          let file = inputFileName.current.files[0]\n          if (file && file.size < 5242880) {\n            reader.readAsDataURL(file)\n          } else if (file && file.size > 5242880) { \n            toast.error(t(\"error_messages.selected_file_exceeds_max_filesize\"), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n            setSubmitting(false)\n          } else {\n            toast.error(t(\"general.please_select_a_file\"), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n            setSubmitting(false)\n          }\n        }}\n      >\n        {({ isSubmitting, errors, values }) => (\n          <ScheduleEventMediaForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            inputFileName={inputFileName}\n            fileInputLabel={fileInputLabel}\n            handleFileInputChange={handleFileInputChange}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventMediaAdd))","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport { GET_SCHEDULE_EVENT_MEDIA_QUERY } from './queries'\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventMediaBack from \"./ScheduleEventMediaBack\"\nimport ScheduleEventEditBaseBase from \"../edit/ScheduleEventEditBaseBase\"\n\n\nfunction ScheduleEventMediaEditBase({t, match, history, activeTab, children}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.media.edit\")\n  const activeLink = \"media\"\n\n  const eventId = match.params.event_id\n  const scheduleEventMediaId = match.params.id\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  const { loading: loadingMedia, error: errorMedia, data: dataMedia } = useQuery(GET_SCHEDULE_EVENT_MEDIA_QUERY, {\n    variables: {\n      id: scheduleEventMediaId\n    }\n  })\n\n  const sidebarContent = <ScheduleEventMediaBack />\n\n  if (loading || loadingMedia) {\n    return (\n      <ScheduleEventEditBaseBase sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  if (error || errorMedia) {\n    return (\n      <ScheduleEventEditBaseBase sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            {t(\"schedule.events.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  const event = data.scheduleEvent\n  const scheduleEventMedia = dataMedia.scheduleEventMedia\n  const dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\n  const cardSubTitle = (scheduleEventMedia) ? \n  <span className=\"text-muted\">\n    - {event.name + \" \" + dateStart}\n  </span> : \"\"\n\n  const cardActivitySubtitle = (scheduleEventMedia) ?\n  <span className=\"text-muted\">\n    - {scheduleEventMedia.description}\n  </span> : \"\"\n\n  return (\n    <ScheduleEventEditBaseBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle} {cardSubTitle} {cardActivitySubtitle}</Card.Title>\n        </Card.Header>\n        {children}\n      </Card>\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventMediaEditBase))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { GET_SCHEDULE_EVENT_MEDIAS_QUERY, GET_SCHEDULE_EVENT_MEDIA_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_MEDIA_SCHEMA } from './yupSchema'\n\nimport ScheduleEventMediaBack from \"./ScheduleEventMediaBack\"\nimport ScheduleEventMediaEditBase from \"./ScheduleEventMediaEditBase\"\nimport ScheduleEventMediaForm from \"./ScheduleEventMediaForm\"\n\n\nconst UPDATE_SCHEDULE_EVENT_MEDIA = gql`\n  mutation UpdateScheduleEventMedia($input:UpdateScheduleEventMediaInput!) {\n    updateScheduleEventMedia(input: $input) {\n      scheduleEventMedia {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventMediaEdit({ t, history, match }) {\n  const eventId = match.params.event_id\n  const scheduleEventMediaId = match.params.id\n  const returnUrl = `/schedule/events/edit/${eventId}/media/`\n  const activeTab = 'general'\n  const cardTitle = t(\"schedule.events.media.edit\")\n\n  const [updateScheduleEventMedia] = useMutation(UPDATE_SCHEDULE_EVENT_MEDIA)\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_MEDIA_QUERY, {\n    variables: {\n      id: scheduleEventMediaId\n  }})\n\n  const sidebarContent = <ScheduleEventMediaBack />\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n\n  if (loading) return (\n    <ScheduleEventMediaEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventMediaEditBase>\n  )\n  if (error) return (\n    <ScheduleEventMediaEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventMediaEditBase>\n  )\n\n  const inputData = data\n  const scheduleEventMedia = data.scheduleEventMedia\n  console.log(inputData)\n\n  return (\n    <ScheduleEventMediaEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          description: scheduleEventMedia.description,\n          sortOrder: scheduleEventMedia.sortOrder\n        }}\n        validationSchema={SCHEDULE_EVENT_MEDIA_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"Submit values\")\n          console.log(values)\n          console.log(fileName)\n\n          let inputVars = {\n            id: scheduleEventMediaId,\n            description: values.description,\n            sortOrder: values.sortOrder\n          }\n\n          function updateMedia() {\n            updateScheduleEventMedia({ variables: {\n              input: inputVars\n            }, refetchQueries: [\n                {query: GET_SCHEDULE_EVENT_MEDIAS_QUERY, variables: {scheduleEvent: eventId}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('schedule.events.media.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                  setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n\n          let reader = new FileReader()\n          reader.onload = function(reader_event) {\n            console.log(reader_event.target.result)\n            let b64_enc_file = reader_event.target.result\n            console.log(b64_enc_file)\n            // Add uploaded document b64 encoded blob to input vars\n            inputVars.image = b64_enc_file\n            inputVars.imageFileName = fileName\n\n            updateMedia()\n          }\n          \n          let file = inputFileName.current.files[0]\n          if (file && file.size < 5242880) {\n            reader.readAsDataURL(file)\n          } else if (file && file.size > 5242880) { \n            toast.error(t(\"error_messages.selected_file_exceeds_max_filesize\"), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n            setSubmitting(false)\n          } else {\n            updateMedia()\n          }\n        }}\n        >\n        {({ isSubmitting, errors, values }) => (\n          <ScheduleEventMediaForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            inputFileName={inputFileName}\n            fileInputLabel={fileInputLabel}\n            handleFileInputChange={handleFileInputChange}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventMediaEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventMediaEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_EVENT_TICKETS_QUERY = gql`\n  query ScheduleEventTickets($before:String, $after:String, $scheduleEvent:ID!) {\n    scheduleEventTickets(first: 100, before:$before, after:$after, scheduleEvent:$scheduleEvent) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          scheduleEvent {\n            id\n          }\n          fullEvent\n          deletable\n          displayPublic\n          name\n          description\n          price\n          priceDisplay\n          isSoldOut\n          financeTaxRate {\n            id\n            name\n          }\n          financeGlaccount {\n            id\n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_SCHEDULE_EVENT_TICKET_QUERY = gql`\n  query ScheduleEventTicket($before:String, $after:String, $id:ID!) {\n    scheduleEventTicket(id: $id) {\n      id\n      displayPublic\n      name\n      description\n      price\n      financeTaxRate {\n        id\n        name\n      }\n      financeGlaccount {\n        id\n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    financeGlaccounts(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    financeCostcenters(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const DELETE_SCHEDULE_EVENT_TICKET = gql`\n  mutation DeleteScheduleEventTicket($input: DeleteScheduleEventTicketInput!) {\n    deleteScheduleEventTicket(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleEventTicketInputValues($after: String, $before: String) {\n    financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    financeGlaccounts(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    financeCostcenters(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventEditListBase from \"../edit/ScheduleEventEditListBase\"\n\n\nfunction ScheduleEventTicketListBase({t, match, history, activeTab, pageInfo, onLoadMore, children}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.edit.title\")\n  const activeLink = \"tickets\"\n\n  const eventId = match.params.event_id\n  const returnUrl = \"/schedule/events\"\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  const sidebarContent = <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n\nif (loading) {\n  return (\n    <ScheduleEventEditListBase sidebarContent={sidebarContent} activeLink={activeLink}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <Dimmer loading={true} active={true} />\n        </Card.Body>\n      </Card>\n    </ScheduleEventEditListBase>\n  )\n}\n\nif (error) {\n  return (\n    <ScheduleEventEditListBase sidebarContent={sidebarContent} activeLink={activeLink}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          {t(\"schedule.events.error_loading\")}\n        </Card.Body>\n      </Card>\n    </ScheduleEventEditListBase>\n  )\n}\n\nconst event = data.scheduleEvent\nconst dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\nconst cardSubTitle = (event) ? \n<span className=\"text-muted\">\n  - {event.name + \" \" + dateStart}\n</span> : \"\"\n\nreturn (\n  <ScheduleEventEditListBase sidebarContent={sidebarContent} activeLink={activeLink}>\n    <ContentCard \n      cardTitle={<span>{cardTitle} {cardSubTitle}</span>}\n      pageInfo={pageInfo}\n      onLoadMore={onLoadMore}\n    >\n      {children}\n    </ContentCard>\n  </ScheduleEventEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventTicketListBase))","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_SCHEDULE_EVENT_TICKET, GET_SCHEDULE_EVENT_TICKETS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventTicketDelete({t, match, history, id}) {\n  const eventId = match.params.event_id\n  const [deleteScheduleEventTicket, { data }] = useMutation(DELETE_SCHEDULE_EVENT_TICKET)\n  const query_vars = {\n    scheduleEvent: eventId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.events.tickets.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.events.tickets.delete_success'),\n          deleteFunction: deleteScheduleEventTicket,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_EVENT_TICKETS_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketDelete))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Badge\n} from \"tabler-react\"\n\n\nfunction BadgeSoldOut({ t }) {\n  return <Badge color=\"warning\">{t('general.sold_out')}</Badge> \n}\n\nexport default withTranslation()(BadgeSoldOut)","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../ui/ButtonAddSecondaryMenu'\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\n\nimport { GET_SCHEDULE_EVENT_TICKETS_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport ScheduleEventEditListBase from \"../edit/ScheduleEventEditListBase\"\nimport ScheduleEventTicketListBase from \"./ScheduleEventTicketListBase\"\nimport ScheduleEventTicketDelete from \"./ScheduleEventTicketDelete\"\nimport moment from 'moment';\nimport BadgeSoldOut from '../../../ui/BadgeSoldOut';\n\n\nfunction ScheduleEventTickets({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  console.log(appSettings)\n  \n  const eventId = match.params.event_id\n  const activeLink = \"tickets\"\n\n  const sidebarContent = <Link to={`/schedule/events/edit/${eventId}/tickets/add`}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.events.tickets.add')}\n    </Button>\n  </Link>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_TICKETS_QUERY, {\n    variables: {\n      scheduleEvent: eventId\n    }\n  })\n  \n  if (loading) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditListBase>\n  )\n  if (error) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const scheduleEventTickets = data.scheduleEventTickets\n  const pageInfo = data.scheduleEventTickets.pageInfo\n\n  // Empty list\n  if (!scheduleEventTickets.edges.length) { return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('schedule.events.tickets.empty_list')}</p>\n    </ScheduleEventEditListBase>\n  )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: scheduleEventTickets.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.scheduleEventTickets.edges\n        const pageInfo = fetchMoreResult.scheduleEventTickets.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              scheduleEventTickets: {\n                __typename: previousResult.scheduleEventTickets.__typename,\n                edges: [ ...previousResult.scheduleEventTickets.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <ScheduleEventEditListBase activeLink={activeLink} pageInfo={pageInfo} onLoadMore={onLoadMore} sidebarContent={sidebarContent}>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.glaccount')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.costcenter')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {scheduleEventTickets.edges.map(({ node }) => (\n            <Table.Row key={v4()}>\n              {/* <Table.Col>\n                {moment(node.dateStart).format(dateFormat)}\n              </Table.Col>\n              <Table.Col>\n                {moment(node.dateEnd).format(dateFormat)}\n              </Table.Col> */}\n              <Table.Col>\n                {node.name} <br />\n                <div dangerouslySetInnerHTML={{__html: node.description}} className=\"text-muted\"/>\n              </Table.Col>\n              <Table.Col>\n                {node.priceDisplay} <br />\n                {(node.isSoldOut) ? <BadgeSoldOut /> : \"\"}\n              </Table.Col>\n              <Table.Col>\n                <BadgeBoolean value={node.displayPublic} />\n              </Table.Col>\n              <Table.Col>\n                {(node.financeGlaccount) ? node.financeGlaccount.name : \"\"}\n              </Table.Col>\n              <Table.Col>\n                {(node.financeCostcenter) ? node.financeCostcenter.name : \"\"}\n              </Table.Col>\n              <Table.Col className=\"text-right\">\n                <Link to={`/schedule/events/edit/${eventId}/tickets/edit/${node.id}`}>\n                  <Button className='btn-sm' \n                          color=\"secondary\">\n                    {t('general.edit')}\n                  </Button>\n                </Link>\n              </Table.Col>\n              <Table.Col className=\"text-right\">\n                {/* Check for fullEvent / deletable before showing delete button */}\n                {(node.deletable) ? <ScheduleEventTicketDelete id={node.id} /> : \"\"}\n              </Table.Col>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </ScheduleEventEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventTickets))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_TICKET_SCHEMA = Yup.object().shape({\n  displayPublic: Yup.boolean(),\n  name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  description: Yup.string(),\n  price: Yup.number(),\n  financeTaxRate: Yup.string(),\n  financeGlaccount: Yup.string(),\n  financeCostcenter: Yup.string(),\n})","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventTicketBack({ t, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/tickets`\n\n  return (\n    <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketBack))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n// import CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction ScheduleEventTicketForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                    className=\"custom-switch-input\"\n                    type=\"checkbox\" \n                    name=\"displayPublic\" \n                    checked={values.displayPublic} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('schedule.events.tickets.public')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.name')}>\n              <Field type=\"text\" \n                      name=\"name\" \n                      className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.price')}>\n                <Field type=\"text\" \n                    name=\"price\" \n                    className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n                <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.taxrate')}>\n              <Field component=\"select\" \n                      name=\"financeTaxRate\" \n                      className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in subscription price add:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.financeTaxRates.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"description\"\n              initialValue={values.description}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"description\", e.target.getContent())\n                setFieldTouched(\"description\", true, true)\n              }}\n            />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.glaccount')}>\n              <Field component=\"select\" \n                    name=\"financeGlaccount\" \n                    className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.financeGlaccounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.costcenter')}>\n              <Field component=\"select\" \n                    name=\"financeCostcenter\" \n                    className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.financeCostcenters.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventTicketForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { GET_SCHEDULE_EVENT_TICKETS_QUERY, GET_INPUT_VALUES_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_TICKET_SCHEMA } from './yupSchema'\n\nimport ScheduleEventTicketBack from \"./ScheduleEventTicketBack\"\nimport ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventTicketForm from \"./ScheduleEventTicketForm\"\n\n\nconst ADD_SCHEDULE_EVENT_TICKET = gql`\n  mutation CreateScheduleEventTicket($input:CreateScheduleEventTicketInput!) {\n    createScheduleEventTicket(input: $input) {\n      scheduleEventTicket {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventTicketAdd({ t, history, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/tickets/`\n  const activeLink = 'tickets'\n  const cardTitle = t(\"schedule.events.tickets.add\")\n\n  const [addScheduleEventTicket] = useMutation(ADD_SCHEDULE_EVENT_TICKET, {\n    onCompleted: () => history.push(returnUrl),\n  })\n  const { loading, error, data, fetchMore } = useQuery(GET_INPUT_VALUES_QUERY)\n\n  const sidebarContent = <ScheduleEventTicketBack />\n\n  if (loading) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditBase>\n  )\n  if (error) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditBase>\n  )\n\n  const inputData = data\n\n  return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          displayPublic: true,\n          name: '',\n          description: '',\n        }}\n        validationSchema={SCHEDULE_EVENT_TICKET_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addScheduleEventTicket({ variables: {\n            input: {\n              scheduleEvent: eventId,\n              displayPublic: values.displayPublic,\n              name: values.name,\n              description: values.description,\n              price: values.price,\n              financeTaxRate: values.financeTaxRate,\n              financeGlaccount: values.financeGlaccount,\n              financeCostcenter: values.financeCostcenter\n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n                scheduleEvent: eventId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('schedule.events.tickets.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventTicketForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            inputData={inputData}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport CardTabs from \"../../../ui/CardTabs\"\n\nfunction ScheduleEventTicketTabs({ t, active, eventId, ticketId}) {\n  return (\n    <CardTabs \n      position=\"top\"\n      tabs={[\n          {\n            name: \"general\", \n            title: t(\"schedule.events.tickets.edit_menu.general\"), \n            link: `/schedule/events/edit/${eventId}/tickets/edit/${ticketId}`\n          },\n          {\n            name: \"activities\", \n            title: t(\"schedule.events.tickets.edit_menu.activities\"), \n            link: `/schedule/events/edit/${eventId}/tickets/edit/${ticketId}/activities`\n          },\n          {\n            name: \"customers\", \n            title: t(\"schedule.events.tickets.edit_menu.customers\"), \n            link: `/schedule/events/edit/${eventId}/tickets/edit/${ticketId}/customers`\n          },\n      ]}\n      active={active}\n    />\n  )\n}\n\nexport default withTranslation()(ScheduleEventTicketTabs)\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport { GET_SCHEDULE_EVENT_TICKET_QUERY } from './queries'\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\nimport ScheduleEventTicketTabs from \"./ScheduleEventTicketTabs\"\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventTicketBack from \"./ScheduleEventTicketBack\"\nimport ScheduleEventEditBaseBase from \"../edit/ScheduleEventEditBaseBase\"\n\n\nfunction ScheduleEventTicketEditBase({t, match, history, activeTab, children, pageHeaderOptions=\"\", searchResults=\"\"}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.tickets.edit\")\n  const activeLink = \"tickets\"\n\n  const eventId = match.params.event_id\n  const ticketId = match.params.id\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  const { loading: loadingTicket, error: errorTicket, data: dataTicket } = useQuery(GET_SCHEDULE_EVENT_TICKET_QUERY, {\n    variables: {\n      id: ticketId\n    }\n  })\n\n  const sidebarContent = <ScheduleEventTicketBack />\n\n  if (loading || loadingTicket) {\n    return (\n      <ScheduleEventEditBaseBase pageHeaderOptions={pageHeaderOptions} sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventTicketTabs active={activeTab} eventId={eventId}  ticketId={ticketId}/>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  if (error || errorTicket) {\n    return (\n      <ScheduleEventEditBaseBase pageHeaderOptions={pageHeaderOptions} sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventTicketTabs active={activeTab} eventId={eventId} ticketId={ticketId}/>\n          <Card.Body>\n            {t(\"schedule.events.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  const event = data.scheduleEvent\n  const ticket = dataTicket.scheduleEventTicket\n  const dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\n  const cardSubTitle = (event) ? \n  <span className=\"text-muted\">\n    - {event.name + \" \" + dateStart}\n  </span> : \"\"\n\n  const cardTicketSubtitle = (ticket) ?\n  <span className=\"text-muted\">\n    - {ticket.name}\n  </span> : \"\"\n\n  return (\n    <ScheduleEventEditBaseBase pageHeaderOptions={pageHeaderOptions} activeLink={activeLink} sidebarContent={sidebarContent}>\n      {searchResults}\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle} {cardSubTitle} {cardTicketSubtitle}</Card.Title>\n        </Card.Header>\n        <ScheduleEventTicketTabs active={activeTab} eventId={eventId} ticketId={ticketId}/>\n        {children}\n      </Card>\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventTicketEditBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SCHEDULE_EVENT_TICKETS_QUERY, GET_SCHEDULE_EVENT_TICKET_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_TICKET_SCHEMA } from './yupSchema'\n\nimport ScheduleEventTicketBack from \"./ScheduleEventTicketBack\"\nimport ScheduleEventTicketEditBase from \"./ScheduleEventTicketEditBase\"\nimport ScheduleEventTicketForm from \"./ScheduleEventTicketForm\"\n\n\nconst UPDATE_SCHEDULE_EVENT_TICKET = gql`\n  mutation UpdateScheduleEventTicket($input:UpdateScheduleEventTicketInput!) {\n    updateScheduleEventTicket(input: $input) {\n      scheduleEventTicket {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventTicketEdit({ t, history, match }) {\n  const id = match.params.id\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/tickets/`\n  const activeTab = \"general\"\n  const activeLink = 'tickets'\n  const sidebarContent = <ScheduleEventTicketBack />\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_TICKET_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [updateScheduleEventTicket] = useMutation(UPDATE_SCHEDULE_EVENT_TICKET)\n\n  if (loading) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventTicketEditBase>\n  )\n  if (error) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventTicketEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const scheduleEventTicket = data.scheduleEventTicket\n\n\n  let initialFinanceTaxRate = \"\"\n  if (scheduleEventTicket.financeTaxRate) {\n    initialFinanceTaxRate = scheduleEventTicket.financeTaxRate.id\n  }\n\n  let initialFinanceGlaccount = \"\"\n  if (scheduleEventTicket.financeGlaccount) {\n    initialFinanceGlaccount = scheduleEventTicket.financeGlaccount.id\n  }\n\n  let initialFinanceCostcenter = \"\"\n  if (scheduleEventTicket.financeCostcenter) {\n    initialFinanceCostcenter = scheduleEventTicket.financeCostcenter.id\n  }\n\n\n  return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          displayPublic: scheduleEventTicket.displayPublic,\n          name: scheduleEventTicket.name,\n          description: scheduleEventTicket.description,\n          price: scheduleEventTicket.price,\n          financeTaxRate: initialFinanceTaxRate,\n          financeGlaccount: initialFinanceGlaccount,\n          financeCostcenter: initialFinanceCostcenter\n        }}\n        validationSchema={SCHEDULE_EVENT_TICKET_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateScheduleEventTicket({ variables: {\n            input: {\n              id: id,\n              displayPublic: values.displayPublic,\n              name: values.name,\n              description: values.description,\n              price: values.price,\n              financeTaxRate: values.financeTaxRate,\n              financeGlaccount: values.financeGlaccount,\n              financeCostcenter: values.financeCostcenter\n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n                scheduleEvent: eventId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('schedule.events.tickets.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventTicketForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            inputData={inputData}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"update\"\n          />\n        )}\n      </Formik>\n    </ScheduleEventTicketEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEMS_QUERY = gql`\nquery ScheduleEventTicketScheduleItem($before:String, $after:String, $scheduleEventTicket:ID!) {\n  scheduleEventTicketScheduleItems(first: 100, before: $before, after: $after, scheduleEventTicket:$scheduleEventTicket) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        scheduleEventTicket {\n          id\n          name\n          fullEvent\n        }\n        scheduleItem {\n          id\n          name\n        }\n        included\n      }\n    }\n  }\n}\n`\n\n// export const GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM_QUERY = gql`\n// query ScheduleEventTicket($before:String, $after:String, $id:ID!) {\n//   scheduleEventTicket(id: $id) {\n//     id\n//     displayPublic\n//     name\n//     description\n//     price\n//     financeTaxRate {\n//       id\n//       name\n//     }\n//     financeGlaccount {\n//       id\n//       name\n//     }\n//     financeCostcenter {\n//       id\n//       name\n//     }\n//   }\n//   financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n//   financeGlaccounts(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n//   financeCostcenters(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n// }\n// `\n\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_TICKET_SCHEDLE_ITEM_SCHEMA = Yup.object().shape({\n  included: Yup.boolean(),\n})","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Dimmer,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\n\nconst ScheduleEventTicketEditActivityForm = ({ t, history, match, disabled, isSubmitting, setSubmitting, submitForm, errors, values, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n    <Dimmer active={isSubmitting} loader={isSubmitting} >\n      <Form.Group className='mb-0'>\n        <Form.Label className=\"custom-switch\">\n          <Field \n            className=\"custom-switch-input\"\n            type=\"checkbox\" \n            name=\"included\" \n            onChange={() => {\n              setFieldValue('included', !values.included)\n              setFieldTouched('included', true)\n              setSubmitting(true)\n              setTimeout(() => {submitForm()}, 200)\n            }}\n            checked={values.included} \n            disabled={disabled} \n          />\n          <span className=\"custom-switch-indicator\" ></span>\n          <span className=\"custom-switch-description\">{t('general.included')}</span>\n        </Form.Label>\n        <ErrorMessage name=\"included\" component=\"div\" />   \n      </Form.Group>  \n    </Dimmer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(ScheduleEventTicketEditActivityForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { v4 } from 'uuid'\n\nimport {\n  Card,\n  Table,\n} from \"tabler-react\";\n\nimport { GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEMS_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_TICKET_SCHEDLE_ITEM_SCHEMA } from \"./yupSchema\"\n\nimport ScheduleEventTicketBack from \"../ScheduleEventTicketBack\"\nimport ScheduleEventTicketEditBase from \"../ScheduleEventTicketEditBase\"\nimport ScheduleEventTicketEditActivityForm from \"./ScheduleEventTicketEditActivityForm\"\n\n\nconst UPDATE_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM = gql`\n  mutation UpdateScheduleEventTicketScheduleItem($input:UpdateScheduleEventTicketScheduleItemInput!) {\n    updateScheduleEventTicketScheduleItem(input: $input) {\n      scheduleEventTicketScheduleItem {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventTicketEditActivities({ t, history, match }) {\n  const id = match.params.id\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/tickets/`\n  const activeTab = \"activities\"\n  const activeLink = 'tickets'\n  const sidebarContent = <ScheduleEventTicketBack />\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEMS_QUERY, {\n    variables: {\n      scheduleEventTicket: id\n    }\n  })\n\n  const [updateScheduleEventTicketScheduleItem] = useMutation(UPDATE_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM)\n\n  if (loading) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventTicketEditBase>\n  )\n  if (error) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventTicketEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const scheduleEventTicketActivities = data.scheduleEventTicketScheduleItems\n  console.log(scheduleEventTicketActivities)\n\n\n  return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Card.Body>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.included')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {scheduleEventTicketActivities.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {node.scheduleItem.name}\n                </Table.Col>  \n                <Table.Col>\n                  <Formik\n                    initialValues={{ \n                      included: node.included,\n                    }}\n                    validationSchema={SCHEDULE_EVENT_TICKET_SCHEDLE_ITEM_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n                      console.log(\"submit values\")\n                      console.log(values)\n\n                      updateScheduleEventTicketScheduleItem({ variables: {\n                        input: {\n                            id: node.id,\n                            included: values.included\n                          }\n                        }, \n                        refetchQueries: [\n                            {query: GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEMS_QUERY, variables: {\n                              scheduleEventTicket: id\n                            }},\n                          ]\n                        })\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.events.tickets.activities.toast_edit_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setSubmitting(false)\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setSubmitting(false)\n                          })\n                    }}\n                    >\n                    {({  isSubmitting, errors, values, setFieldTouched, setFieldValue, submitForm, setSubmitting }) => (\n                      <ScheduleEventTicketEditActivityForm\n                        isSubmitting={isSubmitting}\n                        setFieldTouched={setFieldTouched}\n                        setFieldValue={setFieldValue}\n                        errors={errors}\n                        values={values}\n                        disabled={node.scheduleEventTicket.fullEvent}\n                        setSubmitting={setSubmitting}\n                        submitForm={submitForm}\n                      >\n                        {/* {console.log(errors)}\n                        {console.log(values)} */}\n                      </ScheduleEventTicketEditActivityForm>\n                    )}\n                  </Formik>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Card.Body>\n    </ScheduleEventTicketEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketEditActivities))","import CSLS from \"../../../../../tools/cs_local_storage\"\n\nexport function get_accounts_query_variables() {\n  let queryVars = {\n    teacher: undefined,\n    employee: undefined,\n    searchName: undefined\n  }\n\n  let search = localStorage.getItem(CSLS.SCHEDULE_EVENTS_TICKETS_CUSTOMERS_SEARCH)\n  queryVars.searchName = search\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n// export function get_attendance_list_query_variables(schedule_item_id, date) {\n//   return {\n//     scheduleItem: schedule_item_id,\n//     date: date\n//   }\n// }\n","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport {\n  Badge,\n  Button,\n  Card,\n  Table,\n} from \"tabler-react\";\n\nimport { GET_ACCOUNTS_QUERY } from \"../../../../../queries/accounts/account_search_queries\"\nimport { GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET } from \"./queries\"\n// import { SCHEDULE_EVENT_TICKET_SCHEDLE_ITEM_SCHEMA } from \"./yupSchema\"\nimport { get_accounts_query_variables } from \"./tools\"\n\nimport BadgeBoolean from \"../../../../ui/BadgeBoolean\"\nimport ContentCard from \"../../../../general/ContentCard\"\nimport InputSearch from \"../../../../general/InputSearch\"\nimport ScheduleEventTicketBack from \"../ScheduleEventTicketBack\"\nimport ScheduleEventTicketEditBase from \"../ScheduleEventTicketEditBase\"\n// import ScheduleEventTicketEditActivityForm from \"./ScheduleEventTicketEditActivityForm\"\n\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nconst ADD_ACCOUNT_SCHEDULE_EVENT_TICKET = gql`\nmutation CreateAccountScheduleEventTicket($input:CreateAccountScheduleEventTicketInput!) {\n  createAccountScheduleEventTicket(input: $input) {\n    accountScheduleEventTicket {\n      id\n    }\n  }\n}\n`\n\n\nfunction ScheduleEventTicketEditCustomers({ t, history, match }) {\n  const [showSearch, setShowSearch] = useState(false)\n  const id = match.params.id\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/tickets/`\n  const activeTab = \"customers\"\n  const activeLink = 'tickets'\n  const sidebarContent = <ScheduleEventTicketBack />\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, {\n    variables: {\n      scheduleEventTicket: id\n    }\n  })\n\n  const [addAccountScheduleEventTicket] = useMutation(ADD_ACCOUNT_SCHEDULE_EVENT_TICKET)\n  const [updateAccountScheduleEventTicket] = useMutation(UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET)\n  // const [updateScheduleEventTicketScheduleItem] = useMutation(UPDATE_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM)\n\n\n  const [ getAccounts, \n    { refetch: refetchAccounts, \n      fetchMore: fetchMoreAccounts,\n      loading: queryAccountsLoading, \n      error: queryAccountsError, \n      data: queryAccountsData \n    }] = useLazyQuery( GET_ACCOUNTS_QUERY )\n\n  console.log('queryAccountsData')\n  console.log(queryAccountsData)\n\n  if (loading) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventTicketEditBase>\n  )\n  if (error) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventTicketEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const accountScheduleEventTickets = data.accountScheduleEventTickets\n  console.log(accountScheduleEventTickets)\n\n  let accountIdsWithTickets = []\n  accountScheduleEventTickets.edges.map(({ node }) => (\n    accountIdsWithTickets.push(node.account.id)\n  ))\n  console.log(accountIdsWithTickets)\n\n  const pageHeaderOptions = <InputSearch \n    initialValueKey={CSLS.SCHEDULE_EVENTS_TICKETS_CUSTOMERS_SEARCH}\n    placeholder=\"Search...\"\n    onChange={(value) => {\n      console.log(value)\n      localStorage.setItem(CSLS.SCHEDULE_EVENTS_TICKETS_CUSTOMERS_SEARCH, value)\n      if (value) {\n        // {console.log('showSearch')}\n        // {console.log(showSearch)}\n        setShowSearch(true)\n        getAccounts({ variables: get_accounts_query_variables()})\n      } else {\n        setShowSearch(false)\n      }\n    }}\n  />\n\n  // const searchResults = <div>hello world for search results</div>\n\n  // Search results\n  const searchResults = (showSearch && (queryAccountsData) && (!queryAccountsLoading) && (!queryAccountsError)) ?\n    <ContentCard cardTitle={t('general.search_results')}\n                pageInfo={queryAccountsData.accounts.pageInfo}\n                onLoadMore={() => {\n                  fetchMoreAccounts({\n                    variables: {\n                    after: queryAccountsData.accounts.pageInfo.endCursor\n                  },\n                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                    const newEdges = fetchMoreResult.accounts.edges\n                    const pageInfo = fetchMoreResult.accounts.pageInfo \n\n                    return newEdges.length\n                      ? {\n                          // Put the new accounts at the end of the list and update `pageInfo`\n                          // so we have the new `endCursor` and `hasNextPage` values\n                          queryAccountsData: {\n                            accounts: {\n                              __typename: previousResult.accounts.__typename,\n                              edges: [ ...previousResult.accounts.edges, ...newEdges ],\n                              pageInfo\n                            }\n                          }\n                        }\n                      : previousResult\n                  }\n                })\n              }} >\n      { (!queryAccountsData.accounts.edges.length) ? \n        t('schedule.classes.class.attendance.search_result_empty') : \n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.email')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {queryAccountsData.accounts.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  {node.fullName}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.email}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {(accountIdsWithTickets.includes(node.id)) ? \n                    <span className=\"pull-right\">{t(\"schedule.events.tickets.customers.search_results_already_bought\")}</span> :\n                    <Button \n                      onClick={() =>\n                        addAccountScheduleEventTicket({ variables: {\n                          input: {\n                            account: node.id,\n                            scheduleEventTicket: id\n                          }                            \n                        }, refetchQueries: [\n                            {query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n                              scheduleEventTicket: id\n                            }},\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.events.tickets.customers.toast_add_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setShowSearch(false)\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setShowSearch(false)\n                          })\n                      }\n                    >\n                      {t(\"general.add\")}\n                    </Button>\n                    // <Link to={\"/schedule/classes/class/book/\" + schedule_item_id + \"/\" + class_date + \"/\" + node.id}>\n                    //   <Button color=\"secondary pull-right\">\n                    //     {t('general.checkin')} <Icon name=\"chevron-right\" />\n                    //   </Button>\n                    // </Link>       \n                  }   \n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      }\n    </ContentCard>\n    : \"\"\n\n  // Empty list\n  // if (!accountScheduleEventTickets.edges.length) {\n  //   <ScheduleEventTicketEditBase \n  //     sidebarContent={sidebarContent} \n  //     activeTab={activeTab} \n  //     activeLink={activeLink} \n  //     returnUrl={returnUrl}\n  //     pageHeaderOptions={pageHeaderOptions}\n  //     SearchResults={searchResults}\n  //   >\n  //     <Card.Body>\n  //       <Table>\n  //         <Table.Header>\n  //           <Table.Row>\n  //             <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n  //             <Table.ColHeader>{t('general.included')}</Table.ColHeader>\n  //           </Table.Row>\n  //         </Table.Header>\n  //         <Table.Body>\n  //           {accountScheduleEventTickets.edges.map(({ node }) => (\n  //             <Table.Row key={v4()}>\n  //               <Table.Col>\n  //                 {node.scheduleItem.name}\n  //               </Table.Col>  \n  //             </Table.Row>\n  //           ))}\n  //         </Table.Body>\n  //       </Table>\n  //     </Card.Body>\n  //   </ScheduleEventTicketEditBase>\n  // }\n\n  // Data\n  return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n      pageHeaderOptions={pageHeaderOptions}\n      searchResults={searchResults}\n    >\n      <Card.Body>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.invoice')}</Table.ColHeader>\n              <Table.ColHeader>{t('schedule.events.tickets.info_mail_sent')}</Table.ColHeader> \n              <Table.ColHeader></Table.ColHeader> \n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {accountScheduleEventTickets.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {node.account.fullName} <br />\n                  {(node.cancelled) ? <Badge color=\"warning\">{t(\"general.cancelled\")}</Badge> : \"\"}\n                </Table.Col>  \n                <Table.Col>\n\n                </Table.Col>\n                <Table.Col>\n                  <BadgeBoolean value={node.infoMailSent} /> <br />\n                  {/* TODO: resend link here */}\n                </Table.Col>\n                <Table.Col>\n                  {(node.cancelled) ?\n                    <Button \n                      className=\"pull-right\"\n                      color=\"warning\"\n                      onClick={() =>\n                        updateAccountScheduleEventTicket({ variables: {\n                          input: {\n                            id: node.id,\n                            cancelled: false\n                          }\n                        }, refetchQueries: [\n                            {query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n                              scheduleEventTicket: id\n                            }},\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.events.tickets.customers.uncancelled')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setShowSearch(false)\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setShowSearch(false)\n                          }\n                        )\n                      }\n                    >\n                      {t(\"general.uncancel\")}\n                    </Button>\n                  :\n                    <Button \n                      className=\"pull-right\"\n                      color=\"warning\"\n                      onClick={() =>\n                        updateAccountScheduleEventTicket({ variables: {\n                          input: {\n                            id: node.id,\n                            cancelled: true\n                          }\n                        }, refetchQueries: [\n                            {query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n                              scheduleEventTicket: id\n                            }},\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.events.tickets.customers.cancelled')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setShowSearch(false)\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setShowSearch(false)\n                          })\n                        }\n                      >\n                        {t(\"general.cancel\")}\n                      </Button>\n                  }\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Card.Body>\n    </ScheduleEventTicketEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketEditCustomers))","// @flow\n\nimport * as React from \"react\"\nimport { withTranslation } from 'react-i18next'\nimport { NavLink, withRouter } from \"react-router-dom\"\nimport { useQuery } from \"@apollo/client\"\nimport { ToastContainer, Slide } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport { Link } from 'react-router-dom'\n\nimport GET_USER from \"../queries/system/get_user\"\nimport { get_all_permissions, has_permission } from \"../tools/user_tools\"\n\nimport {\n  Site,\n  Nav,\n  Grid,\n  Button,\n  // Page,\n  RouterContextProvider,\n} from \"tabler-react\";\n\nimport type { NotificationProps } from \"tabler-react\";\n\ntype Props = {|\n  +children: React.Node,\n|};\n\ntype State = {|\n  notificationsObjects: Array<NotificationProps>,\n|};\n\ntype subNavItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +LinkComponent?: React.ElementType,\n|};\n\ntype navItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +active?: boolean,\n  +LinkComponent?: React.ElementType,\n  +subItems?: Array<subNavItem>,\n  +useExact?: boolean,\n|};\n\n\nconst getNavBarItems = (t, user) => {\n  let items: Array<navItem> = []\n  let permissions = get_all_permissions(user)\n\n  items.push({\n    value: t(\"home.title\"),\n    to: \"/\",\n    icon: \"home\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  })\n\n  // Relations\n  if (\n    (has_permission(permissions, 'view', 'account'))\n  ){\n    items.push({\n      value: t(\"relations.title\"),\n      to: \"/relations\",\n      icon: \"users\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Schedule\n  if (\n    (has_permission(permissions, 'view', 'scheduleclass'))\n  ){\n    items.push({\n      value: t(\"schedule.title\"),\n      to: \"/schedule\",\n      icon: \"calendar\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Finance\n  if (\n    (has_permission(permissions, 'view', 'financecostcenter')) ||\n    (has_permission(permissions, 'view', 'financeglaccount')) ||\n    (has_permission(permissions, 'view', 'financetaxrate')) \n  ){\n    items.push({\n      value: t(\"finance.title\"),\n      to: \"/finance\",\n      icon: \"dollar-sign\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Organization\n  if (\n    (has_permission(permissions, 'view', 'organizationclasspass')) || \n    (has_permission(permissions, 'view', 'organizationclasstype')) ||\n    (has_permission(permissions, 'view', 'organizationdiscovery')) ||\n    (has_permission(permissions, 'view', 'organizationlocation')) ||\n    (has_permission(permissions, 'view', 'organizationmembership')) \n   ){\n  items.push({\n    value: t(\"organization.title\"),\n    to: \"/organization\",\n    icon: \"feather\",\n    LinkComponent: withRouter(NavLink),\n  })\n}\n\n\n  return items\n\n}\n\nconst now = new Date()\n\n\nfunction SiteWrapperSelfCheckin({t, match, history, children}) {\n  const { error, loading, data, fetchMore } = useQuery(GET_USER)\n\n  if (loading) return <p>{t('general.loading_with_dots')}</p>;\n  if (error) return <p>{t('system.user.error_loading')}</p>; \n\n  console.log(data)\n\n  return (\n    <Site.Wrapper\n      headerProps={{\n        href: \"/\",\n        alt: \"Costasiella\",\n        imageURL: \"/d/static/logos/stock/logo_stock_backend.png\", // Set logo url here\n        // navItems: (\n        //   <Nav.Item type=\"div\" className=\"d-none d-md-flex\">\n        //     <Link to=\"/settings/general\">\n        //       <Button\n        //         icon=\"settings\"\n        //         outline\n        //         size=\"sm\"\n        //         color=\"primary\"\n        //       >\n        //         {this.props.t('general.settings')}\n        //       </Button>\n        //     </Link>\n        //   </Nav.Item>\n        // ),\n        // notificationsTray: {\n        //   notificationsObjects,\n        //   markAllAsRead: () =>\n        //     this.setState(\n        //       () => ({\n        //         notificationsObjects: this.state.notificationsObjects.map(\n        //           v => ({ ...v, unread: false })\n        //         ),\n        //       }),\n        //       () =>\n        //         setTimeout(\n        //           () =>\n        //             this.setState({\n        //               notificationsObjects: this.state.notificationsObjects.map(\n        //                 v => ({ ...v, unread: true })\n        //               ),\n        //             }),\n        //           5000\n        //         )\n        //     ),\n        //   unread: unreadCount,\n        // },\n        accountDropdown: {\n        avatarURL: \"#\",\n        name: data.user.firstName + ' ' + data.user.lastName,\n        description: \"\",\n        options: [\n          // { icon: \"user\", value: \"Profile\" },\n          { icon: \"lock\", value: \"Change password\", to: \"/#/user/password/change/\" },\n          { isDivider: true },\n          { icon: \"log-out\", value: \"Sign out\", to: \"/#/user/logout/\" },\n        ],\n      },\n      }}\n      // navProps={{ itemsObjects: navBarItems }}\n      // navProps={{ itemsObjects: getNavBarItems(this.props.t, data.user) }}\n      routerContextComponentType={withRouter(RouterContextProvider)}\n      footerProps={{\n        // links: [\n        //   <a href=\"#\">First Link</a>,\n        //   <a href=\"#\">Second Link</a>,\n        //   <a href=\"#\">Third Link</a>,\n        //   <a href=\"#\">Fourth Link</a>,\n        //   <a href=\"#\">Five Link</a>,\n        //   <a href=\"#\">Sixth Link</a>,\n        //   <a href=\"#\">Seventh Link</a>,\n        //   <a href=\"#\">Eigth Link</a>,\n        // ],\n        // note:\n        //   \"Premium and Open Source dashboard template with responsive and high quality UI. For Free!\",\n        copyright: (\n          <React.Fragment>\n            Copyleft © {now.getFullYear()}.\n            <a\n              href=\"https://www.costasiella.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {\" \"}\n              Edwin van de Ven\n            </a>{\". \"}\n            All rights reserved.\n          </React.Fragment>\n        ),\n        nav: (\n          <React.Fragment>\n            <Grid.Col auto={true}>\n              {/* <List className=\"list-inline list-inline-dots mb-0\">\n                <List.Item className=\"list-inline-item\">\n                  <a href=\"./docs/index.html\">Documentation</a>\n                </List.Item>\n                <List.Item className=\"list-inline-item\">\n                  <a href=\"./faq.html\">FAQ</a>\n                </List.Item>\n              </List> */}\n            </Grid.Col>\n            <Grid.Col auto={true}>\n              {/* <Button\n                href=\"https://github.com/tabler/tabler-react\"\n                size=\"sm\"\n                outline\n                color=\"primary\"\n                RootComponent=\"a\"\n              >\n                Source code\n              </Button> */}\n            </Grid.Col>\n          </React.Fragment>\n        ),\n      }}\n    >\n      {children}\n      <ToastContainer \n        autoClose={5000} \n        transition={Slide}\n      />\n    </Site.Wrapper> \n  )\n}\n\n\n// class SiteWrapperSelfCheckin extends React.Component<Props, State> {\n//   state = {}  \n\n//   render(): React.Node {\n//     return (\n//       <Query query={GET_USER} >\n//         {({ loading, error, data }) => {\n//           if (loading) return <p>{this.props.t('general.loading_with_dots')}</p>;\n//           if (error) return <p>{this.props.t('system.user.error_loading')}</p>; \n          \n//           console.log('user data in site wrapper')\n//           console.log(data)\n      \n//           return <Site.Wrapper\n//             headerProps={{\n//                 href: \"/\",\n//                 alt: \"Costasiella\",\n//                 imageURL: \"/d/static/logos/stock/logo_stock_backend.png\", // Set logo url here\n//                 // navItems: (\n//                 //   <Nav.Item type=\"div\" className=\"d-none d-md-flex\">\n//                 //     <Link to=\"/settings/general\">\n//                 //       <Button\n//                 //         icon=\"settings\"\n//                 //         outline\n//                 //         size=\"sm\"\n//                 //         color=\"primary\"\n//                 //       >\n//                 //         {this.props.t('general.settings')}\n//                 //       </Button>\n//                 //     </Link>\n//                 //   </Nav.Item>\n//                 // ),\n//                 // notificationsTray: {\n//                 //   notificationsObjects,\n//                 //   markAllAsRead: () =>\n//                 //     this.setState(\n//                 //       () => ({\n//                 //         notificationsObjects: this.state.notificationsObjects.map(\n//                 //           v => ({ ...v, unread: false })\n//                 //         ),\n//                 //       }),\n//                 //       () =>\n//                 //         setTimeout(\n//                 //           () =>\n//                 //             this.setState({\n//                 //               notificationsObjects: this.state.notificationsObjects.map(\n//                 //                 v => ({ ...v, unread: true })\n//                 //               ),\n//                 //             }),\n//                 //           5000\n//                 //         )\n//                 //     ),\n//                 //   unread: unreadCount,\n//                 // },\n//                 accountDropdown: {\n//                 avatarURL: \"#\",\n//                 name: data.user.firstName + ' ' + data.user.lastName,\n//                 description: \"\",\n//                 options: [\n//                   // { icon: \"user\", value: \"Profile\" },\n//                   { icon: \"lock\", value: \"Change password\", to: \"/#/user/password/change/\" },\n//                   { isDivider: true },\n//                   { icon: \"log-out\", value: \"Sign out\", to: \"/#/user/logout/\" },\n//                 ],\n//               },\n//               }}\n//               // navProps={{ itemsObjects: navBarItems }}\n//               // navProps={{ itemsObjects: getNavBarItems(this.props.t, data.user) }}\n//               routerContextComponentType={withRouter(RouterContextProvider)}\n//               footerProps={{\n//                 // links: [\n//                 //   <a href=\"#\">First Link</a>,\n//                 //   <a href=\"#\">Second Link</a>,\n//                 //   <a href=\"#\">Third Link</a>,\n//                 //   <a href=\"#\">Fourth Link</a>,\n//                 //   <a href=\"#\">Five Link</a>,\n//                 //   <a href=\"#\">Sixth Link</a>,\n//                 //   <a href=\"#\">Seventh Link</a>,\n//                 //   <a href=\"#\">Eigth Link</a>,\n//                 // ],\n//                 // note:\n//                 //   \"Premium and Open Source dashboard template with responsive and high quality UI. For Free!\",\n//                 copyright: (\n//                   <React.Fragment>\n//                     Copyleft © {now.getFullYear()}.\n//                     <a\n//                       href=\"https://www.costasiella.com\"\n//                       target=\"_blank\"\n//                       rel=\"noopener noreferrer\"\n//                     >\n//                       {\" \"}\n//                       Edwin van de Ven\n//                     </a>{\". \"}\n//                     All rights reserved.\n//                   </React.Fragment>\n//                 ),\n//                 nav: (\n//                   <React.Fragment>\n//                     <Grid.Col auto={true}>\n//                       {/* <List className=\"list-inline list-inline-dots mb-0\">\n//                         <List.Item className=\"list-inline-item\">\n//                           <a href=\"./docs/index.html\">Documentation</a>\n//                         </List.Item>\n//                         <List.Item className=\"list-inline-item\">\n//                           <a href=\"./faq.html\">FAQ</a>\n//                         </List.Item>\n//                       </List> */}\n//                     </Grid.Col>\n//                     <Grid.Col auto={true}>\n//                       {/* <Button\n//                         href=\"https://github.com/tabler/tabler-react\"\n//                         size=\"sm\"\n//                         outline\n//                         color=\"primary\"\n//                         RootComponent=\"a\"\n//                       >\n//                         Source code\n//                       </Button> */}\n//                     </Grid.Col>\n//                   </React.Fragment>\n//                 ),\n//               }}\n//             >\n//               {this.props.children}\n//               <ToastContainer \n//                 autoClose={5000} \n//                 transition={Slide}\n//               />\n//             </Site.Wrapper>\n//           }}\n//         </Query>\n//     );\n//   }\n// }\n\nexport default withTranslation()(SiteWrapperSelfCheckin)\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapperSelfCheckin from \"../SiteWrapperSelfCheckin\"\n\n\nfunction SelfCheckinBase({ t, match, history, children, title }) {\n\n  return (\n    <SiteWrapperSelfCheckin>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={title} />\n            <Grid.Row>\n              <Grid.Col md={12}>\n                { children }\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapperSelfCheckin>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SelfCheckinBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNTS_QUERY = gql`\n  query Accounts(\n    $after: String, \n    $before: String, \n    $searchName: String,\n    $teacher: Boolean,\n    $employee: Boolean\n  ) {\n    accounts(\n      first: 25, \n      before: $before, \n      after: $after, \n      isActive: true, \n      fullName_Icontains: $searchName,\n      customer: true,\n      teacher: $teacher,\n      employee: $employee\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          fullName\n          email\n          isActive\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_SCHEDULE_CLASS_ATTENDANCE_QUERY = gql`\n  query ScheduleItemAttendances($after: String, $before: String, $scheduleItem: ID!, $date: Date!) {\n    scheduleItemAttendances(first: 100, before: $before, after: $after, scheduleItem: $scheduleItem, date: $date) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }     \n          attendanceType\n          bookingStatus\n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const DELETE_SCHEDULE_CLASS_ATTENDANCE = gql`\n  mutation DeleteScheduleItemAttendance($input: DeleteScheduleItemAttendanceInput!) {\n    deleteScheduleItemAttendance(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const UPDATE_SCHEDULE_ITEM_ATTENDANCE = gql`\n  mutation UpdateScheduleItemAttendance($input: UpdateScheduleItemAttendanceInput!) {\n    updateScheduleItemAttendance(input:$input) {\n      scheduleItemAttendance {\n        id\n      }\n    }\n  }\n`\n","import CSLS from \"../../../tools/cs_local_storage\"\nimport { withRouter } from \"react-router\"\n\nexport function get_accounts_query_variables() {\n  let queryVars = {\n    teacher: undefined,\n    employee: undefined,\n    searchName: undefined\n  }\n\n  let search = localStorage.getItem(CSLS.SELFCHECKIN_CHECKIN_SEARCH)\n  queryVars.searchName = search\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\nexport function get_attendance_list_query_variables(schedule_item_id, date) {\n  return {\n    scheduleItem: schedule_item_id,\n    date: date\n  }\n}\n","// @flow\n\nimport React, { useContext, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\n\nimport moment from 'moment'\n\nimport {\n  Button,\n  Card,\n  Dropdown,\n  Icon,\n  Table\n} from \"tabler-react\";\nimport SelfCheckinBase from \"../SelfCheckinBase\"\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { GET_ACCOUNTS_QUERY, GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, UPDATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport { get_attendance_list_query_variables, get_accounts_query_variables } from \"./tools\"\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport BadgeBookingStatus from \"../../ui/BadgeBookingStatus\"\nimport ContentCard from \"../../general/ContentCard\"\nimport InputSearch from \"../../general/InputSearch\"\nimport ScheduleClassAttendanceDelete from \"../../schedule/classes/class/attendance/ScheduleClassAttendanceDelete\"\n\n\nfunction setAttendanceStatus({t, updateAttendance, node, status}) {\n  updateAttendance({\n    variables: { \n      input: {\n        id: node.id, \n        bookingStatus: status\n      }\n    }\n  }).then(({ data }) => {\n    console.log('got data', data);\n    toast.success(\n      t('schedule.classes.class.attendance.status_saved'), {\n        position: toast.POSITION.BOTTOM_RIGHT\n      })\n  }).catch((error) => {\n    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n        position: toast.POSITION.BOTTOM_RIGHT\n      })\n    console.log('there was an error sending the query', error);\n  })\n}\n\n\nfunction SelfCheckinCheckin({ t, match, history }) {\n  const [showSearch, setShowSearch] = useState(false)\n  const locationId = match.params.location_id\n  const scheduleItemId = match.params.class_id\n  const class_date = match.params.date\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  // const today = moment().format('YYYY-MM-DD')\n\n  const { \n    refetch: refetchAttendance, \n    loading: queryAttendanceLoading, \n    error: queryAttendanceError, \n    data: queryAttendanceData \n  } = useQuery(\n    GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, {\n      variables: get_attendance_list_query_variables(scheduleItemId, class_date)\n    }\n  )\n\n  const [ updateAttendance, \n    { loading: mutationAttendanceLoading, error: mutationAttendanceError },\n  ] = useMutation(UPDATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  const [ getAccounts, \n    { refetch: refetchAccounts, \n      fetchMore: fetchMoreAccounts,\n      loading: queryAccountsLoading, \n      error: queryAccountsError, \n      data: queryAccountsData \n    }] = useLazyQuery( GET_ACCOUNTS_QUERY )\n\n  console.log('queryAccountsData')\n  console.log(queryAccountsData)\n  \n  if (queryAttendanceLoading) return (\n    <SelfCheckinBase>\n      {t(\"general.loading_with_dots\")}\n    </SelfCheckinBase>\n  )\n  if (queryAttendanceError) return (\n    <SelfCheckinBase>\n      {t(\"selfcheckin.checkin.error_loading\")}\n    </SelfCheckinBase>\n  )\n\n  console.log(queryAttendanceData)\n  let checkedInIds = []\n  queryAttendanceData.scheduleItemAttendances.edges.map(({ node }) => (\n    checkedInIds.push(node.account.id)\n  ))\n  console.log(checkedInIds)\n\n  return (\n    <SelfCheckinBase title={t(\"selfcheckin.classes.title\")}>\n      <ContentCard cardTitle={t('general.attendance')}\n                    pageInfo={queryAttendanceData.scheduleItemAttendances.pageInfo}\n                    onLoadMore={() => {\n                      fetchMoreAccounts({\n                      variables: {\n                        after: queryAttendanceData.scheduleItemAttendances.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.scheduleItemAttendances.edges\n                        const pageInfo = fetchMoreResult.scheduleItemAttendances.pageInfo \n\n                        return newEdges.length\n                          ? {\n                              // Put the new scheduleItemAttendances at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              queryAttendanceData: {\n                                scheduleItemAttendances: {\n                                  __typename: previousResult.scheduleItemAttendances.__typename,\n                                  edges: [ ...previousResult.scheduleItemAttendances.edges, ...newEdges ],\n                                  pageInfo\n                                }\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n        }} >\n          <Table>\n            <Table.Header>\n              <Table.Row key={v4()}>\n                <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.booking_status')}</Table.ColHeader>\n                <Table.ColHeader></Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {queryAttendanceData.scheduleItemAttendances.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      {node.account.fullName}\n                    </Table.Col>\n                    <Table.Col>\n                      <BadgeBookingStatus status={node.bookingStatus} />\n                    </Table.Col>\n                    <Table.Col>\n                      {/* Delete */}\n                      {/* <ScheduleClassAttendanceDelete node={node} /> */}\n                      {/* Status dropdown */}\n                      <Dropdown\n                        key={v4()}\n                        className=\"pull-right\"\n                        type=\"button\"\n                        toggle\n                        color=\"secondary\"\n                        triggerContent={t(\"general.status\")}\n                        items={[\n                          <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                            <Dropdown.Item\n                              key={v4()}\n                              icon=\"check\"\n                              onClick={() => {\n                                setAttendanceStatus({\n                                  t: t, \n                                  updateAttendance: updateAttendance,\n                                  node: node,\n                                  status: 'ATTENDING'\n                                })\n                                refetchAttendance()\n                              }}>\n                                {t('schedule.classes.class.attendance.booking_status.ATTENDING')}\n                            </Dropdown.Item>\n                          </HasPermissionWrapper>,\n                          <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                            <Dropdown.Item\n                              key={v4()}\n                              icon=\"calendar\"\n                              onClick={() => {\n                                setAttendanceStatus({\n                                  t: t, \n                                  updateAttendance: updateAttendance,\n                                  node: node,\n                                  status: 'BOOKED'\n                                })\n                                refetchAttendance()\n                              }}>\n                                {t('schedule.classes.class.attendance.booking_status.BOOKED')}\n                            </Dropdown.Item>\n                          </HasPermissionWrapper>,\n                          <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                            <Dropdown.Item\n                              key={v4()}\n                              icon=\"x\"\n                              onClick={() => {\n                                setAttendanceStatus({\n                                  t: t, \n                                  updateAttendance: updateAttendance,\n                                  node: node,\n                                  status: 'CANCELLED'\n                                })\n                                refetchAttendance()\n                              }}>\n                                {t('schedule.classes.class.attendance.booking_status.CANCELLED')}\n                            </Dropdown.Item>\n                          </HasPermissionWrapper>,\n                        ]}\n                      />\n                      {(node.bookingStatus == \"BOOKED\") ?\n                        <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                          <Button\n                            key={v4()}\n                            className=\"pull-right\"\n                            color=\"success\"\n                            size=\"\"\n                            onClick={() => {\n                              setAttendanceStatus({\n                                t: t, \n                                updateAttendance: updateAttendance,\n                                node: node,\n                                status: 'ATTENDING'\n                              })\n                              refetchAttendance()\n                            }}>\n                              {t('general.checkin')}\n                          </Button>\n                        </HasPermissionWrapper>  : \"\" }\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n            </Table.Body>\n          </Table>\n      </ContentCard>\n      <h3>{t(\"selfcheckin.checkin.title_not_on_list\")}</h3>\n      <InputSearch \n        initialValueKey={CSLS.SELFCHECKIN_CHECKIN_SEARCH}\n        placeholder={t(\"search\")}\n        onChange={(value) => {\n          console.log(value)\n          localStorage.setItem(CSLS.SELFCHECKIN_CHECKIN_SEARCH, value)\n          if (value) {\n            // {console.log('showSearch')}\n            // {console.log(showSearch)}\n            setShowSearch(true)\n            getAccounts({ variables: get_accounts_query_variables()})\n          } else {\n            setShowSearch(false)\n          }\n        }}\n      /> <br />\n      {/* Search results */}\n      {(showSearch && (queryAccountsData) && (!queryAccountsLoading) && (!queryAccountsError)) ?\n        <ContentCard cardTitle={t('general.search_results')}\n                    pageInfo={queryAccountsData.accounts.pageInfo}\n                    onLoadMore={() => {\n                      fetchMoreAccounts({\n                        variables: {\n                        after: queryAccountsData.accounts.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.accounts.edges\n                        const pageInfo = fetchMoreResult.accounts.pageInfo \n\n                        return newEdges.length\n                          ? {\n                              // Put the new accounts at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              queryAccountsData: {\n                                accounts: {\n                                  __typename: previousResult.accounts.__typename,\n                                  edges: [ ...previousResult.accounts.edges, ...newEdges ],\n                                  pageInfo\n                                }\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n          { (!queryAccountsData.accounts.edges.length) ? \n            t('schedule.classes.class.attendance.search_result_empty') : \n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.email')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {queryAccountsData.accounts.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {node.fullName}\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.email}\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {(checkedInIds.includes(node.id)) ? \n                        <span className=\"pull-right\">{t(\"schedule.classes.class.attendance.search_results_already_checked_in\")}</span> :\n                        <Link to={\"/selfcheckin/book/\" + locationId + \"/\" + scheduleItemId + \"/\" + class_date + \"/\" + node.id}>\n                          <Button color=\"secondary pull-right\">\n                            {t('general.checkin')} <Icon name=\"chevron-right\" />\n                          </Button>\n                        </Link>       \n                      }   \n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          }\n        </ContentCard>\n        : \"\"\n      }\n    </SelfCheckinBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SelfCheckinCheckin))\n\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_BOOKING_OPTIONS_QUERY = gql`\n  query ScheduleClassBookingOptions($account: ID!, $scheduleItem:ID!, $date:Date!, $listType:String!) {\n    scheduleClassBookingOptions(account: $account, scheduleItem: $scheduleItem, date:$date, listType:$listType) {\n      date\n      account {\n        id\n        fullName\n      }\n      scheduleItem {\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n      }\n    \tscheduleItemPrices {\n        organizationClasspassDropin {\n          id\n          name\n          priceDisplay\n        }\n        organizationClasspassTrial {\n          id\n          name\n          priceDisplay\n        }\n      }\n      classpasses {\n        bookingType \n        allowed\n        accountClasspass {\n          id\n          dateStart\n          dateEnd\n          classesRemainingDisplay\n          organizationClasspass {\n            id\n            name\n          }\n        }\n      }\n      subscriptions {\n        bookingType\n        allowed\n        accountSubscription {\n          id\n          dateStart\n          dateEnd\n          organizationSubscription {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport const CREATE_SCHEDULE_ITEM_ATTENDANCE = gql`\n  mutation CreateScheduleItemAttendance($input: CreateScheduleItemAttendanceInput!) {\n    createScheduleItemAttendance(input:$input) {\n      scheduleItemAttendance {\n        id\n      }\n    }\n  }\n`","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SelfCheckinBase from \"../SelfCheckinBase\"\n// import HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n// import { class_edit_all_subtitle } from \"../../schedule/classes/tools\"\n// import confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../../schedule/classes/class/tools\"\n\n// import ContentCard from \"../../../../general/ContentCard\"\n// import ScheduleClassBookBack from \"./ScheduleClassBookBack\"\nimport ScheduleClassBookClasspasses from \"../../schedule/classes/class/book/ScheduleClassBookClasspasses\"\n// import ScheduleClassBookClasspasses from \"\"\nimport ScheduleClassBookSubscriptions from \"../../schedule/classes/class/book/ScheduleClassBookSubscriptions\"\nimport ScheduleClassBookPriceDropin from \"../../schedule/classes/class/book/ScheduleClassBookPriceDropin\"\nimport ScheduleClassBookPriceTrial from \"../../schedule/classes/class/book/ScheduleClassBookPriceTrial\"\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_BOOKING_OPTIONS_QUERY } from \"./queries\"\n// import CSLS from \"../../../../tools/cs_local_storage\"\n\nconst DELETE_SCHEDULE_CLASS_TEACHER = gql`\n  mutation DeleteScheduleClassTeacher($input: DeleteScheduleItemTeacherInput!) {\n    deleteScheduleItemTeacher(input: $input) {\n      ok\n    }\n  }\n`\n\n\nfunction SelfCheckinBookingOptions({ t, match, history }) {\n  const [showSearch, setShowSearch] = useState(false)\n  const return_url = \"/schedule/classes/\"\n  const account_id = match.params.account_id\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const locationId = match.params.location_id\n  const { loading: queryLoading, error: queryError, data: queryData } = useQuery(\n    GET_BOOKING_OPTIONS_QUERY, {\n      variables: {\n        account: account_id,\n        scheduleItem: schedule_item_id,\n        date: class_date,\n        listType: \"ATTEND\"\n      }\n    }\n  )\n\n  // Query\n  // Loading\n  if (queryLoading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (queryError) {\n    console.log(queryError)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n  \n  console.log(queryData)\n  const account = queryData.scheduleClassBookingOptions.account\n  const classpasses = queryData.scheduleClassBookingOptions.classpasses\n  const subscriptions = queryData.scheduleClassBookingOptions.subscriptions\n  const prices = queryData.scheduleClassBookingOptions.scheduleItemPrices\n  const scheduleItem = queryData.scheduleClassBookingOptions.scheduleItem\n  const subtitle = class_subtitle({\n    t: t,\n    location: scheduleItem.organizationLocationRoom.organizationLocation.name, \n    locationRoom: scheduleItem.organizationLocationRoom.name,\n    classtype: scheduleItem.organizationClasstype.name, \n    timeStart: TimeStringToJSDateOBJ(scheduleItem.timeStart), \n    date: class_date\n  })\n\n  console.log(prices)\n  \n  \n  return (\n    <SelfCheckinBase title={t(\"selfcheckin.classes.title\")}>\n      <Grid.Row>\n          <Grid.Col md={12}>\n            <h4>{t('general.booking_options')} {account.fullName}</h4>\n            <div className=\"mt-6\">\n            <Grid.Row cards deck>\n              <ScheduleClassBookSubscriptions \n                subscriptions={subscriptions} \n                returnTo=\"selfcheckin\" \n                locationId={locationId}\n              />\n              <ScheduleClassBookClasspasses \n                classpasses={classpasses} \n                returnTo=\"selfcheckin\" \n                locationId={locationId}\n              />\n              {(prices) ?\n                (prices.organizationClasspassDropin) ? \n                  <ScheduleClassBookPriceDropin \n                    priceDropin={prices.organizationClasspassDropin}\n                    returnTo=\"selfcheckin\" \n                    locationId={locationId}\n                  /> : \"\" \n                : \"\" }\n              {(prices) ?\n                (prices.organizationClasspassTrial) ? \n                  <ScheduleClassBookPriceTrial \n                    priceTrial={prices.organizationClasspassTrial}\n                    returnTo=\"selfcheckin\" \n                    locationId={locationId}\n                  /> : \"\" \n                : \"\" }\n            </Grid.Row>\n            </div>\n          </Grid.Col>\n        </Grid.Row>\n    </SelfCheckinBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SelfCheckinBookingOptions))\n\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ORGANIZATION_LOCATIONS_QUERY = gql`\n  query Organizationlocations($after: String, $before: String) {\n    organizationLocations(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          name\n          organizationlocationroomSet(first: 100, archived: false) {\n            edges {\n              node {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\";\nimport SelfCheckinBase from \"../SelfCheckinBase\"\n\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { GET_ORGANIZATION_LOCATIONS_QUERY } from \"./queries\"\n\n\nfunction Locations({ t, match, history }) {\n  const { loading, error, data } = useQuery(GET_ORGANIZATION_LOCATIONS_QUERY);\n\n  if (loading) return (\n    <SelfCheckinBase>\n      {t(\"general.loading_with_dots\")}\n    </SelfCheckinBase>\n  )\n  if (error) return (\n    <SelfCheckinBase>\n      {t(\"selfcheckin.locations.error_loading\")}\n    </SelfCheckinBase>\n  )\n\n\n  return (\n    <SelfCheckinBase title={t(\"selfcheckin.home.title\")}>\n      <h4>{t(\"selfcheckin.locations.please_select\")}</h4>\n        <List.Group>\n          {\n            data.organizationLocations.edges.map(({node}) =>\n              <List.GroupItem action>\n                <Link to={\"/selfcheckin/location/\" + node.id}>\n                  <div>\n                    <span className=\"pull-right\"><Icon name=\"chevron-right\" /></span>\n                    {node.name}\n                  </div>\n                </Link>\n              </List.GroupItem>\n          )}\n        </List.Group>\n\n          {/* //  List location rooms\n          // <div>\n          //   <h3>{node.name}</h3>\n          //   <List.Group>\n          //     {\n          //       node.organizationlocationroomSet.edges.map(({node}) =>\n          //         <List.GroupItem action>\n          //           <Link to={\"/selfcheckin/room/\" + node.id}>\n          //             <div>\n          //               <span className=\"pull-right\"><Icon name=\"chevron-right\" /></span>\n          //               {node.name}\n          //             </div>\n          //           </Link>\n          //         </List.GroupItem>\n          //       )\n          //     }\n          //   </List.Group>\n          //   <br />\n          // </div>\n        // ) */}\n      \n    </SelfCheckinBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(Locations))","import { gql } from \"@apollo/client\"\n\nexport const GET_LOCATION_CLASSES_QUERY = gql`\n  query ScheduleClasses(\n      $dateFrom: Date!, \n      $dateUntil:Date!, \n      $orderBy: String, \n      $organizationClasstype: String,\n      $organizationLevel: String,\n      $organizationLocation: String,\n      $attendanceCountType: String!\n    ){\n    scheduleClasses(\n        dateFrom:$dateFrom, \n        dateUntil: $dateUntil, \n        orderBy: $orderBy, \n        organizationClasstype: $organizationClasstype,\n        organizationLevel: $organizationLevel,\n        organizationLocation: $organizationLocation,\n        attendanceCountType: $attendanceCountType\n    ){\n      date\n      classes {\n        scheduleItemId\n        frequencyType\n        date\n        status\n        description\n        account {\n          id\n          fullName\n        }\n        role\n        account2 {\n          id\n          fullName\n        }\n        role2\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        timeStart\n        timeEnd\n        displayPublic\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport moment from 'moment'\n\nimport {\n  Button,\n  Card,\n  Icon,\n  Table\n} from \"tabler-react\";\nimport SelfCheckinBase from \"../SelfCheckinBase\"\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { GET_LOCATION_CLASSES_QUERY } from \"./queries\"\n\n\nfunction LocationClasses({ t, match, history }) {\n  const locationId = match.params.location_id\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const today = moment().format('YYYY-MM-DD')\n\n  const { loading, error, data } = useQuery(GET_LOCATION_CLASSES_QUERY, {\n    variables: {\n      dateFrom: today,\n      dateUntil: today,\n      organizationLocation: locationId,\n      attendanceCountType: \"ATTENDING_AND_BOOKED\"\n    }\n  })\n\n  if (loading) return (\n    <SelfCheckinBase>\n      {t(\"general.loading_with_dots\")}\n    </SelfCheckinBase>\n  )\n  if (error) return (\n    <SelfCheckinBase>\n      {t(\"selfcheckin.classes.error_loading\")}\n    </SelfCheckinBase>\n  )\n\n  console.log(data)\n\n  return (\n    <SelfCheckinBase title={t(\"selfcheckin.classes.title\")}>\n      <Card>\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.ColHeader>\n              { t(\"general.time\") }\n            </Table.ColHeader>\n            <Table.ColHeader>\n              { t(\"general.room\") }\n            </Table.ColHeader>\n            <Table.ColHeader>\n              { t(\"general.class\") }\n            </Table.ColHeader>\n            <Table.ColHeader>\n              { t(\"general.teacher\") }\n            </Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {\n            data.scheduleClasses.map(({ date, classes }) => \n              classes.map((\n                { scheduleItemId, \n                  frequencyType,\n                  date, \n                  status,\n                  description,\n                  account, \n                  role,\n                  account2,\n                  role2,\n                  organizationLocationRoom, \n                  organizationClasstype, \n                  organizationLevel,\n                  timeStart, \n                  timeEnd,\n                  displayPublic }) => (\n                    // console.log(scheduleItemId)\n                    <Table.Row>\n                      <Table.Col>\n                        {moment(date + ' ' + timeStart).format(timeFormat)} {' - '}\n                        {moment(date + ' ' + timeEnd).format(timeFormat)}\n                      </Table.Col>\n                      <Table.Col>\n                        { organizationLocationRoom.name }\n                      </Table.Col>\n                      <Table.Col>\n                        { organizationClasstype.name }\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Teacher(s) */}\n                        { (account) ? account.fullName : \n                          <span className=\"text-red\">{t(\"schedule.classes.no_teacher\")}</span>\n                        }\n                      </Table.Col>\n                      <Table.Col>\n                        <Link to={\"/selfcheckin/checkin/\" + locationId + \"/\" + scheduleItemId + \"/\" + date}>\n                          <Button color=\"secondary\" className=\"pull-right\">\n                            {t(\"selfcheckin.classes.go_to_checkin\")}\n                            <Icon name=\"chevron-right\" />\n                          </Button>\n                        </Link>\n                      </Table.Col>\n                    </Table.Row>\n                  )\n                )\n            )\n          }\n        </Table.Body>\n      </Table>\n      </Card>\n    </SelfCheckinBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(LocationClasses))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SYSTEM_SETTINGS_QUERY = gql`\n  query SystemSettings($setting: String!) {\n    systemSettings(setting: $setting) {\n      edges {\n        node {\n          id\n          setting\n          value\n        }\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_SYSTEM_SETTING = gql`\n  mutation UpdateSystemSetting($input: UpdateSystemSettingInput!) {\n    updateSystemSetting(input: $input) {\n      systemSetting {\n        id\n      }\n    }\n  }\n`","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport ButtonBack from \"../ui/ButtonBack\"\n\n\nfunction SettingsBack({ t, returnUrl=\"/settings\" }) { \n  return (\n    <ButtonBack returnUrl={returnUrl} />\n  )\n}\n\nexport default withTranslation()(SettingsBack)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../SiteWrapper\"\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\nimport SettingsBack from \"./SettingsBack\"\n\n\nfunction SettingsBase({ t, children, headerSubTitle=\"\", cardTitle, alertBanner=\"\", returnUrl=\"/settings\" }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('settings.title')} subTitle={headerSubTitle}>\n            <div className=\"page-options d-flex\">\n              <SettingsBack returnUrl={returnUrl} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {alertBanner}\n              <Card>\n                <Card.Header>\n                  <Card.Title>{cardTitle}</Card.Title>\n                </Card.Header>\n                {children}\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsBase))","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_SYSTEM_SETTINGS_QUERY } from '../queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../SettingsBase\"\n\n\nfunction SettingsAbout({ t, match, history }) {\n  const headerSubTitle = t('settings.about.title')\n  const cardTitle = t(\"settings.about.about.title\")\n\n  const { \n    loading: loadingVersion, \n    error: errorVersion, \n    data: dataVersion \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"system_version\"\n    }\n  })\n  const { \n    loading: loadingPatch, \n    error: errorPatch, \n    data: dataPatch \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"system_version_patch\"\n    }\n  })\n\n  if ((loadingVersion) || (loadingPatch)) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle} >  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if ((errorVersion) || errorPatch) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle} >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data app settings')\n  console.log(dataVersion)\n  console.log(dataPatch)\n\n  let version = 0\n  let patch = 0\n  if (dataVersion.systemSettings.edges.length){\n    version = dataVersion.systemSettings.edges[0].node.value\n  } \n  if (dataPatch.systemSettings.edges.length){\n    patch = dataPatch.systemSettings.edges[0].node.value\n  } \n    \n\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n    >\n      <Card.Body>\n        <h2>\n          {t(\"settings.about.about.this_is_costasiella\")} {`${version}.${patch}`}\n        </h2>\n        <h3>{t(\"general.license_info\")}</h3>\n        {t(\"settings.about.about.license_version\")} <br /><br />\n        <h3>{t(\"general.license\")}</h3>\nThis program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. <br /><br />\nThis program is distributed in the hope that it will be useful, but <b>WITHOUT ANY WARRANTY</b>; without even the implied warranty of <b>MERCHANTABILITY</b> or <b>FITNESS FOR A PARTICULAR PURPOSE</b>. See the GNU General Public License for more details. <br /><br />\nYou should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. <br />\n<br />\nGNU GENERAL PUBLIC LICENSE<br />\n<br />\nVersion 2, June 1991<br />\n<br />\nCopyright (C) 1989, 1991 Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA<br />\n<br />\nEveryone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. <br />\n<br />\nPreamble<br />\n<br />\nThe licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.) You can apply it to your programs, too.<br />\n<br />\nWhen we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.<br /><br />\n<br />\nTo protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.<br />\n<br />\nFor example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.<br />\n<br />\nWe protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.<br />\n<br />\nAlso, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations.<br />\n<br />\nFinally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all.<br />\n<br />\nThe precise terms and conditions for copying, distribution and modification follow.<br />\n<br />\nTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION<br />\n<br />\n0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The \"Program\", below, refers to any such program or work, and a \"work based on the Program\" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) Each licensee is addressed as \"you\".<br />\n<br />\nActivities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.<br />\n<br />\n1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.<br />\n<br />\nYou may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.<br />\n<br />\n2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:<br />\n<br />\na) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change. b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License. c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.) These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.<br />\n<br />\nThus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.<br />\n<br />\nIn addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.<br />\n<br />\n3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:<br />\n<br />\na) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.) The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.<br />\n<br />\nIf distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.<br />\n<br />\n4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.<br />\n<br />\n5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.<br />\n<br />\n6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.<br />\n<br />\n7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.<br />\n<br />\nIf any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.<br />\n<br />\nIt is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.<br />\n<br />\nThis section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.<br />\n<br />\n8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.<br />\n<br />\n9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.<br />\n<br />\nEach version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.<br />\n<br />\n10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.<br />\n<br />\nNO WARRANTY<br />\n<br />\n11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.<br />\n<br />\n12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.<br />\n<br />\nEND OF TERMS AND CONDITIONS<br />\n<br />\nHow to Apply These Terms to Your New Programs<br />\n<br />\nIf you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.<br />\n<br />\nTo do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.<br />\n<br />\none line to give the program's name and an idea of what it does. Copyright (C) yyyy name of author<br />\n<br />\nThis program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.<br />\n<br />\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.<br />\n<br />\nYou should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. Also add information on how to contact you by electronic and paper mail.<br />\n<br />\nIf the program is interactive, make it output a short notice like this when it starts in an interactive mode:<br />\n<br />\nGnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, the commands you use may be called something other than `show w' and `show c'; they could even be mouse-clicks or menu items--whatever suits your program.<br />\n<br />\nYou should also get your employer (if you work as a programmer) or your school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. Here is a sample; alter the names:<br />\n<br />\nYoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.<br />\n<br />\nsignature of Ty Coon, 1 April 1989 Ty Coon, President of Vice\n      </Card.Body>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsAbout))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsFinanceBankAccountsForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"finance_bank_accounts_iban\" \n              checked={values.finance_bank_accounts_iban} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('settings.finance.bank_accounts.iban')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"finance_bank_accounts_iban\" component=\"div\" />   \n        </Form.Group>  \n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsFinanceBankAccountsForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsFinanceBankAccountsForm from \"./SettingsFinanceBankAccountsForm\"\n\n\nfunction SettingsFinanceIBAN({ t, match, history }) {\n  const headerSubTitle = t('settings.finance.title')\n  const cardTitle = t(\"settings.finance.bank_accounts.title\")\n\n  const { \n    loading: loading, \n    error: error, \n    data: data \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"finance_bank_accounts_iban\"\n    }\n  })\n  const [ updateSettings ] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  if (loading) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >\n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data app settings')\n  console.log(data)\n\n  let initialValues = {\n    iban: false\n  }\n  if (data.systemSettings.edges.length){\n    initialValues['iban'] = data.systemSettings.edges[0].node.value\n  } \n    \n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n    >  \n    <Formik\n      initialValues={{ \n        finance_bank_accounts_iban: initialValues['iban'],\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          const settings = [\n            { setting: \"finance_bank_accounts_iban\", value: values.finance_bank_accounts_iban },\n          ]\n\n          let error = false\n\n          for (let i in settings) {\n\n            console.log(i)\n            console.log(settings[i].setting)\n            console.log(settings[i].value)\n\n            updateSettings({ variables: {\n              input: {\n                setting: settings[i].setting,\n                value: settings[i].value,\n              }\n            }, refetchQueries: [\n                {query: GET_SYSTEM_SETTINGS_QUERY, variables: { setting: i.setting }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('settings.general.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsFinanceBankAccountsForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsFinanceBankAccountsForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsFinanceIBAN))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsFinanceCurrencyForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.finance.currency')}>\n            <Field type=\"text\" \n              name=\"finance_currency\" \n              className={(errors.finance_currency) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"finance_currency\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('settings.finance.currency_symbol')}>\n            <Field type=\"text\" \n              name=\"finance_currency_symbol\" \n              className={(errors.finance_currency_symbol) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"finance_currency_symbol\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsFinanceCurrencyForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsFinanceCurrencyForm from \"./SettingsFinanceCurrencyForm\"\n\n\nfunction SettingsFinanceCurrency({ t, match, history }) {\n  const headerSubTitle = t('settings.finance.title')\n  const cardTitle = t(\"settings.finance.currency.title\")\n  const sidebarActive = \"integration\"\n\n  const { \n    loading: loadingCurrency, \n    error: errorCurrency, \n    data: dataCurrency \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"finance_currency\"\n    }\n  })\n  const { \n    loading: loadingSymbol, \n    error: errorSymbol, \n    data: dataSymbol \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"finance_currency_symbol\"\n    }\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  if ((loadingCurrency) || (loadingSymbol)) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if ((errorCurrency) || errorSymbol) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data app settings')\n  console.log(dataCurrency)\n  console.log(dataSymbol)\n\n  let initialValues = {\n    currency: \"EUR\",\n    symbol: \"€\"\n  }\n  if (dataCurrency.systemSettings.edges.length){\n    initialValues['currency'] = dataCurrency.systemSettings.edges[0].node.value\n  } \n  if (dataSymbol.systemSettings.edges.length){\n    initialValues['symbol'] = dataSymbol.systemSettings.edges[0].node.value\n  } \n    \n\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n      sidebarActive={sidebarActive}\n    >  \n    <Formik\n      initialValues={{ \n        finance_currency: initialValues['currency'],\n        finance_currency_symbol: initialValues['symbol']\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          const settings = [\n            { setting: \"finance_currency\", value: values.finance_currency },\n            { setting: \"finance_currency_symbol\", value: values.finance_currency_symbol },\n          ]\n\n          let error = false\n\n          for (let i in settings) {\n\n            console.log(i)\n            console.log(settings[i].setting)\n            console.log(settings[i].value)\n\n            updateSettings({ variables: {\n              input: {\n                setting: settings[i].setting,\n                value: settings[i].value,\n              }\n            }, refetchQueries: [\n                {query: GET_SYSTEM_SETTINGS_QUERY, variables: { setting: i.setting }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('settings.general.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsFinanceCurrencyForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsFinanceCurrencyForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsFinanceCurrency))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const DATETIME_SCHEMA = Yup.object().shape({\n    dateFormat: Yup.string()\n      .required(t('yup.field_required')),\n    timeFormat: Yup.string()\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsGeneralDateTimeForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.general.date_format')}>\n            <Field component=\"select\" \n                    name=\"dateFormat\" \n                    className={(errors.dateFormat) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"YYYY-MM-DD\" key={v4()}>{t('settings.general.date_formats.YYYY-MM-DD')}</option>\n                <option value=\"MM-DD-YYYY\" key={v4()}>{t('settings.general.date_formats.MM-DD-YYYY')}</option>\n                <option value=\"DD-MM-YYYY\" key={v4()}>{t('settings.general.date_formats.DD-MM-YYYY')}</option>\n            </Field>\n            <ErrorMessage name=\"dateFormat\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('settings.general.time_format')}>\n            <Field component=\"select\" \n                    name=\"timeFormat\" \n                    className={(errors.timeFormat) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"24\" key={v4()}>{t('settings.general.time_formats.24hr')}</option>\n                <option value=\"12\" key={v4()}>{t('settings.general.time_formats.12hr')}</option>\n            </Field>\n            <ErrorMessage name=\"timeFormat\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsGeneralDateTimeForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APP_SETTINGS_QUERY, UPDATE_APP_SETTINGS } from './queries'\nimport { DATETIME_SCHEMA } from './yupSchema'\n\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsGeneralDateTimeForm from \"./SettingsGeneralDateTimeForm\"\n\n\nfunction SettingsGeneralDateTime({ t, match, history }) {\n  const headerSubTitle = t(\"settings.general.datetime\")\n  const cardTitle = t(\"settings.general.datetime\")\n  const sidebarActive = \"general\"\n\n  const { loading, error, data } = useQuery(GET_APP_SETTINGS_QUERY)\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_APP_SETTINGS)\n\n  console.log('query data app settings')\n  console.log(data)\n\n  if (loading) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n      sidebarActive={sidebarActive}\n    >  \n    <Formik\n      initialValues={{ \n        dateFormat: data.appSettings.dateFormat,\n        timeFormat: data.appSettings.timeFormat,\n        note: \"\",\n      }}\n      validationSchema={DATETIME_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          updateSettings({ variables: {\n            input: {\n              dateFormat: values.dateFormat,\n              timeFormat: values.timeFormat,\n            }\n          }, refetchQueries: [\n              {query: GET_APP_SETTINGS_QUERY}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('settings.general.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsGeneralDateTimeForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsGeneralDateTimeForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsGeneralDateTime))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsGeneralSystemForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.general.system.system_hostname')}>\n            <Field type=\"text\" \n              name=\"system_hostname\" \n              className={(errors.system_hostname) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"system_hostname\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsGeneralSystemForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsGeneralSystemForm from \"./SettingsGeneralSystemForm\"\n\n\nfunction SettingsGeneralSystem({ t, match, history }) {\n  const headerSubTitle = t('settings.general.title')\n  const cardTitle = t(\"settings.general.system.title\")\n  const sidebarActive = \"general\"\n  const queryVariables = {\n    setting: \"system_hostname\"\n  }\n\n  const { loading, error, data } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: queryVariables\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  console.log('query data settings')\n  console.log(data)\n\n  if (loading) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  let hostname = \"\"\n  if (data.systemSettings.edges.length) {\n    hostname = data.systemSettings.edges[0].node.value \n  }\n\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n      sidebarActive={sidebarActive}\n    >  \n    <Formik\n      initialValues={{ \n        system_hostname: hostname\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          updateSettings({ variables: {\n            input: {\n              setting: \"system_hostname\",\n              value: values.system_hostname\n            }\n          }, refetchQueries: [\n              { query: GET_SYSTEM_SETTINGS_QUERY, variables: queryVariables }\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('settings.general.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsGeneralSystemForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsGeneralSystemForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsGeneralSystem))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\n\nfunction SettingsHomeItemButton({ t, link, linkTitle=null }) {\n  return (\n    <Link to={link} >\n      <Button \n        outline\n        block\n        color=\"primary\"\n      >\n        {linkTitle ? linkTitle: t(\"settings.home.link_edit\")} <Icon name=\"chevron-right\" />\n      </Button>\n    </Link>\n  )\n}\n\nexport default withTranslation()(withRouter(SettingsHomeItemButton))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Container,\n  Grid,\n  Icon,\n  Page,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport SettingsHomeItemButton from \"./SettingsHomeItemButton\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n// import RelationsMenu from \"../RelationsMenu\"\n\nfunction SettingsHome({ t, match, params }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('settings.title')} />\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.general.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.general.date_time.title\")}</h5>\n                  {t(\"settings.general.date_time.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/general/datetime\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.general.system.title\")}</h5>\n                  {t(\"settings.general.system.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/general/system\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.workflow.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.workflow.class_booking.title\")}</h5>\n                  {t(\"settings.workflow.class_booking.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/workflow/class_booking\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.finance.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.finance.currency.title\")}</h5>\n                  {t(\"settings.finance.currency.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/finance/currency\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.finance.bank_accounts.title\")}</h5>\n                  {t(\"settings.finance.bank_accounts.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/finance/bank_accounts\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.mail.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.mail.templates.title\")}</h5>\n                  {t(\"settings.mail.templates.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/mail/templates\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.shop.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.shop.features.title\")}</h5>\n                  {t(\"settings.shop.features.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/shop/features/\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.integration.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.integration.mollie.title\")}</h5>\n                  {t(\"settings.integration.mollie.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/integration/mollie/\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.about.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.about.about.title\")}</h5>\n                  {t(\"settings.about.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton \n                    link=\"/settings/about\" \n                    linkTitle={t(\"View info\")}\n                  />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(SettingsHome))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsIntegrationMollieForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.integration.mollie.api_key')}>\n            <Field type=\"text\" \n              name=\"mollie_api_key\" \n              className={(errors.mollie_api_key) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"mollie_api_key\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsIntegrationMollieForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Alert,\n  Button,\n  Header,\n  Icon\n} from \"tabler-react\";\n\n\nfunction SettingsIntegrationMollieCreateAccount({ t, match, history, mollieApiKey }) {\n  if (mollieApiKey) {\n    return \"\"\n  }\n\n  return (\n    <Alert type=\"primary\">\n      <Header.H4>{t('settings.integration.mollie.create_account_title')}</Header.H4>\n      <p>\n        {t(\"settings.integration.mollie.create_account_message\")}\n      </p>\n      <a href=\"https://www.mollie.com/dashboard/signup/2488481\" target=\"_blank\">\n        <Button color=\"success\" RootComponent=\"button\">\n          {t(\"settings.integration.mollie.to_mollie\")} <Icon name=\"chevron-right\" />\n        </Button>\n      </a>\n    </Alert>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsIntegrationMollieCreateAccount))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsIntegrationMollieForm from \"./SettingsIntegrationMollieForm\"\nimport SettingsIntegrationMollieCreateAccount from \"./SettingsIntegrationMollieCreateAccount\"\n\n\nfunction SettingsIntegrationMollie({ t, match, history }) {\n  const headerSubTitle = t('settings.integration.title')\n  const cardTitle = t(\"settings.integration.mollie.title\")\n  const sidebarActive = \"integration\"\n\n  const { loading, error, data } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"integration_mollie_api_key\"\n    }\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  console.log('query data app settings')\n  console.log(data)\n\n  if (loading) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  let mollieApiKey = \"\"\n  if (data.systemSettings.edges.length) {\n    mollieApiKey = data.systemSettings.edges[0].node.value\n  }\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n      sidebarActive={sidebarActive}\n      alertBanner={<SettingsIntegrationMollieCreateAccount mollieApiKey={mollieApiKey} />}\n    >\n    <Formik\n      initialValues={{ \n        mollie_api_key: mollieApiKey\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          updateSettings({ variables: {\n            input: {\n              setting: \"integration_mollie_api_key\",\n              value: values.mollie_api_key\n            }\n          }, refetchQueries: [\n              {query: GET_SYSTEM_SETTINGS_QUERY,     variables: {\n                setting: \"integration_mollie_api_key\"\n              }}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('settings.general.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsIntegrationMollieForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsIntegrationMollieForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsIntegrationMollie))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport SettingsBack from \"../SettingsBack\"\n\nfunction SettingsMailTemplatesBase({ t, children, headerSubTitle, }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"settings.mail.templates.title\")} subTitle={headerSubTitle}>\n            <div className=\"page-options d-flex\">\n              <SettingsBack />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(SettingsMailTemplatesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_SYSTEM_MAIL_TEMPLATES_QUERY = gql`\n  query SystemMailTemplates {\n    systemMailTemplates(first:100) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          name\n          subject\n          title\n          description\n          content\n          comments\n        }\n      }\n    }\n  }\n`\n\nexport const GET_SYSTEM_MAIL_TEMPLATE_QUERY = gql`\n  query SystemMailTemplate($id: ID!) {\n    systemMailTemplate(id:$id) {\n      id\n      name\n      subject\n      title\n      description\n      content\n      comments\n    }\n  }\n`\n\nexport const UPDATE_SYSTEM_MAIL_TEMPLATE =  gql`\n  mutation UpdateSystemMailTemplate($input: UpdateSystemMailTemplateInput!) {\n    updateSystemMailTemplate(input: $input) {\n      systemMailTemplate {\n        id\n        name\n        subject\n        title\n        description\n        content\n        comments\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport SettingsMailTemplatesBase from \"./SettingsMailTemplatesBase\"\n\nimport { GET_SYSTEM_MAIL_TEMPLATES_QUERY } from \"./queries\"\n\n\nfunction SystemMailTemplates({ t, match, params }) {\n  const title = t(\"settings.mail.templates.title\")\n  const { loading, error, data, fetchMore } = useQuery(GET_SYSTEM_MAIL_TEMPLATES_QUERY)\n\n  if (loading) return (\n    <SettingsMailTemplatesBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </SettingsMailTemplatesBase>\n  )\n  if (error) return (\n    <SettingsMailTemplatesBase title={title}>\n      {t(\"settings.mail.templates.error_loading\")}\n    </SettingsMailTemplatesBase>\n  )\n\n  console.log(data)\n  const mailTemplates = data.systemMailTemplates\n\n  // TODO: add empty list message and request import\n\n\n\n  return (\n    <SettingsMailTemplatesBase title={title} >\n      <ContentCard \n        cardTitle={t('settings.mail.templates.title')}\n        // headerContent={headerOptions}\n        pageInfo={mailTemplates.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: mailTemplates.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.systemMailTemplates.edges\n              const pageInfo = fetchMoreResult.systemMailTemplates.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new subscriptions at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    systemMailTemplates: {\n                      __typename: previousResult.systemMailTemplates.__typename,\n                      edges: [ ...previousResult.systemMailTemplates.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('settings.mail.templates.name')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n              <Table.Body>\n                  {mailTemplates.edges.map(({ node }) => (\n                    <Table.Row key={v4()}>\n                      <Table.Col>\n                        {node.name}\n                      </Table.Col>\n                      <Table.Col>\n                        <Link to={\"/settings/mail/templates/edit/\" + node.id}>\n                          <Button className='btn-sm pull-right' \n                                  color=\"secondary\">\n                            {t('general.edit')}\n                          </Button>\n                        </Link>\n                      </Table.Col>\n                    </Table.Row>\n                  ))}\n              </Table.Body>\n            </Table>\n      </ContentCard>\n    </SettingsMailTemplatesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(SystemMailTemplates))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\nimport SettingsBack from \"../SettingsBack\"\n\nfunction SettingsMailTemplatesBase({ t, children, headerSubTitle, help={} }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"settings.mail.templates.title\")} subTitle={headerSubTitle}>\n            <div className=\"page-options d-flex\">\n              <SettingsBack returnUrl=\"/settings/mail/templates\" />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={8}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={4}>\n              <Card title={t('general.subject')}>\n                <Card.Body>\n                  {help.subject}\n                </Card.Body>\n              </Card>\n              <Card title={t('general.title')}>\n                <Card.Body>\n                  {help.title}\n                </Card.Body>\n              </Card>\n              <Card title={t('general.description')}>\n                <Card.Body>\n                  {help.description}\n                </Card.Body>\n              </Card>\n              <Card title={t('general.content')}>\n                <Card.Body>\n                  {help.content}\n                </Card.Body>\n              </Card>\n              <Card title={t('general.comments')}>\n                <Card.Body>\n                  {help.comments}\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(SettingsMailTemplatesBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\n\nimport {\n  Button,\n  Card,\n  Form\n} from \"tabler-react\";\n\n\nfunction SettingsMailTemplateEditForm({ t, history, isSubmitting, errors, values, setFieldTouched, setFieldValue, returnUrl, cardTitle }) {\n\n\n  return (\n    <FoForm>\n      <Card title={cardTitle}>\n        <Card.Body>    \n          <Form.Group label={t('general.subject')} >\n            <Field type=\"text\" \n                  name=\"subject\" \n                  className={(errors.subject) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"subject\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.title')} >\n            <Field type=\"text\" \n                  name=\"title\" \n                  className={(errors.title) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"title\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.description')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"description\"\n              initialValue={values.description}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"description\", e.target.getContent())\n                setFieldTouched(\"description\", true, true)\n              }}\n            />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.content')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"content\"\n              initialValue={values.content}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"content\", e.target.getContent())\n                setFieldTouched(\"content\", true, true)\n              }}\n            />\n            <ErrorMessage name=\"content\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.comments')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"comments\"\n              initialValue={values.comments}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"comments\", e.target.getContent())\n                setFieldTouched(\"comments\", true, true)\n              }}\n            />\n            <ErrorMessage name=\"comments\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Card.Body>\n        <Card.Footer>\n            <Button \n              className=\"pull-right\"\n              color=\"primary\"\n              disabled={isSubmitting}\n              type=\"submit\"\n            >\n              {t('general.submit')}\n            </Button>\n            <Link to={returnUrl}>\n              <Button\n                type=\"button\" \n                color=\"link\" \n              >\n                {t('general.cancel')}\n              </Button>\n            </Link>\n        </Card.Footer>\n      </Card>\n    </FoForm>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsMailTemplateEditForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_MAIL_TEMPLATE_QUERY, GET_SYSTEM_MAIL_TEMPLATES_QUERY, UPDATE_SYSTEM_MAIL_TEMPLATE } from './queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { getTemplateInfo } from './tools'\n\nimport SettingsMailTemplateEditBase from \"./SettingsMailTemplateEditBase\"\nimport SettingsMailTemplateEditForm from \"./SettingsMailTemplateEditForm\"\n\n\nfunction SettingsMailTemplateEdit({ t, match, history }) {\n  const id = match.params.id\n  const returnUrl = \"/settings/mail/templates\"\n  const headerSubTitle = t('settings.mail.title')\n  const cardTitle = t(\"settings.mail.templates.edit.title\")\n\n  const { loading, error, data } = useQuery(GET_SYSTEM_MAIL_TEMPLATE_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_MAIL_TEMPLATE)\n\n  console.log('query data app settings')\n  console.log(data)\n\n  if (loading) {\n    return (\n      <SettingsMailTemplateEditBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsMailTemplateEditBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsMailTemplateEditBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsMailTemplateEditBase>\n    )\n  }\n\n  const templateInfo = getTemplateInfo(t, data.systemMailTemplate.name)\n  console.log(data.systemMailTemplate.name)\n  console.log(templateInfo)\n\n\n  return (\n    <SettingsMailTemplateEditBase \n      headerSubTitle={headerSubTitle}\n      help={templateInfo.helpTexts}\n    >  \n    <Formik\n      initialValues={{ \n        subject: data.systemMailTemplate.subject,\n        title: data.systemMailTemplate.title,\n        description: data.systemMailTemplate.description,\n        content: data.systemMailTemplate.content,\n        comments: data.systemMailTemplate.comments        \n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          updateSettings({ variables: {\n            input: {\n              id: id,\n              subject: values.subject,\n              title: values.title,\n              description: values.description,\n              content: values.content,\n              comments: values.comments\n            }\n          }, refetchQueries: [\n              {query: GET_SYSTEM_MAIL_TEMPLATES_QUERY}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('settings.mail.templates.edit.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n    >\n      {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n        <SettingsMailTemplateEditForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n          setFieldTouched={setFieldTouched}\n          setFieldValue={setFieldValue}\n          cardTitle={templateInfo.cardTitle}\n          returnUrl={returnUrl}\n        >\n          {console.log(errors)}\n        </SettingsMailTemplateEditForm>\n      )}\n      </Formik>\n    </SettingsMailTemplateEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsMailTemplateEdit))","import React from \"react\"\n\n\nexport function getTemplateInfo(t, template_name) {\n  let cardTitle\n  let helpTexts\n\n\n  switch(template_name) {\n    case \"class_info_mail\":\n      cardTitle = t(\"settings.mail.templates.class_info_mail.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.class_info_mail.help_subject\"),\n        title: t(\"settings.mail.templates.class_info_mail.help_title\"),\n        description: t(\"settings.mail.templates.class_info_mail.help_description\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        content: t(\"settings.mail.templates.class_info_mail.help_content\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        comments: t(\"settings.mail.templates.class_info_mail.help_comments\"), \n      }\n      break\n    case \"event_info_mail\":\n      cardTitle = t(\"settings.mail.templates.event_info_mail.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.event_info_mail.help_subject\"),\n        title: t(\"settings.mail.templates.event_info_mail.help_title\"),\n        description: t(\"settings.mail.templates.event_info_mail.help_description\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        content: t(\"settings.mail.templates.event_info_mail.help_content\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        comments: t(\"settings.mail.templates.event_info_mail.help_comments\"), \n      }\n      break\n    case \"order_received\":\n      cardTitle = t(\"settings.mail.templates.order_received.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.order_received.help_subject\"),\n        title: t(\"settings.mail.templates.order_received.help_title\"),\n        description: t(\"settings.mail.templates.order_received.help_description\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        content: t(\"settings.mail.templates.order_received.help_content\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        comments: t(\"settings.mail.templates.order_received.help_comments\"), \n      }\n      break\n    case \"recurring_payment_failed\":\n      cardTitle = t(\"settings.mail.templates.recurring_payment_failed.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.recurring_payment_failed.help_subject\"),\n        title: t(\"settings.mail.templates.recurring_payment_failed.help_title\"),\n        description: t(\"settings.mail.templates.recurring_payment_failed.help_description\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        content: t(\"settings.mail.templates.recurring_payment_failed.help_content\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        comments: t(\"settings.mail.templates.recurring_payment_failed.help_comments\"), \n      }\n      break\n      break\n    case \"system_footer\":\n      cardTitle = t(\"settings.mail.templates.system_footer.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.system_footer.help_subject\"),\n        title: t(\"settings.mail.templates.system_footer.help_title\"),\n        description: t(\"settings.mail.templates.system_footer.help_description\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        content: t(\"settings.mail.templates.system_footer.help_content\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        comments: t(\"settings.mail.templates.system_footer.help_comments\"), \n      }\n      break\n    default:\n      cardTitle = t(\"settings.mail.templates.not_found.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.not_found.help_subject\"),\n        title: t(\"settings.mail.templates.not_found.help_title\"),\n        description: t(\"settings.mail.templates.not_found.help_description\"),\n        content: t(\"settings.mail.templates.not_found.help_content\"),\n        comments: t(\"settings.mail.templates.not_found.help_comments\"),\n      }\n  }\n\n\n  return {\n    \"cardTitle\": cardTitle,\n    \"helpTexts\": helpTexts,\n  }\n}\n\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SHOP_FEATURES_QUERY = gql`\n  query SystemFeatureShop {\n    systemFeatureShop(id: \"U3lzdGVtRmVhdHVyZVNob3BOb2RlOjE=\") {\n      memberships\n      subscriptions\n      classpasses\n      classes\n      events\n    }\n  }\n`\n\n\nexport const UPDATE_SHOP_FEATURES = gql`\n  mutation UpdateSystemFeatureShop($input: UpdateSystemFeatureShopInput!) {\n    updateSystemFeatureShop(input: $input) {\n      systemFeatureShop {\n        id\n      }\n    }\n  }\n`","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SHOP_FEATURES_SCHEMA = Yup.object().shape({\n    subscriptions: Yup.boolean(),\n    classpasses: Yup.boolean(),\n    classes: Yup.boolean(),\n    events: Yup.boolean(),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsShopFeaturesForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n        {/* <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"memberships\" \n              checked={values.memberships} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.memberships')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"memberships\" component=\"div\" />   \n        </Form.Group>   */}\n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"subscriptions\" \n              checked={values.subscriptions} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.subscriptions')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"subscriptions\" component=\"div\" />   \n        </Form.Group>  \n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"classpasses\" \n              checked={values.classpasses} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.classpasses')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"classpasses\" component=\"div\" />   \n        </Form.Group>  \n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"classes\" \n              checked={values.classes} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.classes')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"classes\" component=\"div\" />   \n        </Form.Group>  \n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"events\" \n              checked={values.events} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.events')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"events\" component=\"div\" />   \n        </Form.Group>  \n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsShopFeaturesForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SHOP_FEATURES_QUERY, UPDATE_SHOP_FEATURES } from './queries'\nimport { SHOP_FEATURES_SCHEMA } from './yupSchema'\n\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsShopFeaturesForm from \"./SettingsShopFeaturesForm\"\n\n\nfunction SettingsShopFeatures({ t, match, history }) {\n  const headerSubTitle = t(\"settings.shop.features.title\")\n  const cardTitle = t(\"settings.shop.features.title\")\n  const sidebarActive = \"general\"\n\n  const { loading, error, data } = useQuery(GET_SHOP_FEATURES_QUERY)\n  const [ updateSettings ] = useMutation(UPDATE_SHOP_FEATURES)\n\n  console.log('query data app settings')\n  console.log(data)\n\n  if (loading) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  const shopFeatures = data.systemFeatureShop\n  \n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n      sidebarActive={sidebarActive}\n    >  \n    <Formik\n      initialValues={{ \n        memberships: shopFeatures.memberships,\n        subscriptions: shopFeatures.subscriptions,\n        classpasses: shopFeatures.classpasses,\n        classes: shopFeatures.classes,\n        events: shopFeatures.events,\n      }}\n      validationSchema={SHOP_FEATURES_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          updateSettings({ variables: {\n            input: {\n              memberships: values.memberships,\n              subscriptions: values.subscriptions,\n              classpasses: values.classpasses,\n              classes: values.classes,\n              events: values.events\n            }\n          }, refetchQueries: [\n              {query: GET_SHOP_FEATURES_QUERY}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('settings.general.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsShopFeaturesForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsShopFeaturesForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsShopFeatures))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsWorkflowClassBookingForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.workflow.workflow_class_book_days_advance')}>\n            <Field type=\"text\" \n              name=\"workflow_class_book_days_advance\" \n              className={(errors.workflow_class_book_days_advance) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"workflow_class_book_days_advance\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('settings.workflow.workflow_class_cancel_until')}>\n            <Field type=\"text\" \n              name=\"workflow_class_cancel_until\" \n              className={(errors.workflow_class_cancel_until) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"workflow_class_cancel_until\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsWorkflowClassBookingForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsWorkflowClassBookingForm from \"./SettingsWorkflowClassBookingForm\"\n\n\nfunction SettingsWorkflowClassBooking({ t, match, history }) {\n  const headerSubTitle = t('settings.workflow.title')\n  const cardTitle = t(\"settings.workflow.class_booking.title\")\n\n  const { \n    loading: loadingDaysAdvance, \n    error: errorDaysAdvance, \n    data: dataDaysAdvance \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"workflow_class_book_days_advance\"\n    }\n  })\n  const { \n    loading: loadingCancelUntil, \n    error: errorCancelUntil, \n    data: dataCancelUntil \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"workflow_class_cancel_until\"\n    }\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  if ((loadingDaysAdvance) || (loadingCancelUntil)) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if ((errorDaysAdvance) || errorCancelUntil) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data app settings')\n  console.log(dataDaysAdvance)\n  console.log(dataCancelUntil)\n\n  let initialValues = {\n    workflow_class_book_days_advance: \"30\",\n    workflow_class_cancel_until: \"2\"\n  }\n  if (dataDaysAdvance.systemSettings.edges.length){\n    initialValues['workflow_class_book_days_advance'] = dataDaysAdvance.systemSettings.edges[0].node.value\n  } \n  if (dataCancelUntil.systemSettings.edges.length){\n    initialValues['workflow_class_cancel_until'] = dataCancelUntil.systemSettings.edges[0].node.value\n  } \n    \n\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n    >  \n    <Formik\n      initialValues={{ \n        workflow_class_book_days_advance: initialValues['workflow_class_book_days_advance'],\n        workflow_class_cancel_until: initialValues['workflow_class_cancel_until']\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          const settings = [\n            { setting: \"workflow_class_book_days_advance\", value: values.workflow_class_book_days_advance },\n            { setting: \"workflow_class_cancel_until\", value: values.workflow_class_cancel_until },\n          ]\n\n          let error = false\n\n          for (let i in settings) {\n\n            console.log(i)\n            console.log(settings[i].setting)\n            console.log(settings[i].value)\n\n            updateSettings({ variables: {\n              input: {\n                setting: settings[i].setting,\n                value: settings[i].value,\n              }\n            }, refetchQueries: [\n                {query: GET_SYSTEM_SETTINGS_QUERY, variables: { setting: settings[i].setting }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('settings.general.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsWorkflowClassBookingForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsWorkflowClassBookingForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsWorkflowClassBooking))","// @flow\n\nimport * as React from \"react\"\nimport { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { NavLink, withRouter } from \"react-router-dom\"\nimport { useQuery } from \"@apollo/client\"\nimport { ToastContainer, Slide } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport { Link } from 'react-router-dom'\n\nimport { GET_SHOP_FEATURES_QUERY } from \"../components/settings/shop/features/queries\"\nimport OrganizationContext from './context/OrganizationContext'\nimport CSLS from \"../tools/cs_local_storage\"\nimport { get_all_permissions, has_permission } from \"../tools/user_tools\"\n\n\nimport {\n  Site,\n  Nav,\n  Grid,\n  Button,\n  // Page,\n  RouterContextProvider,\n} from \"tabler-react\";\n\nimport type { NotificationProps } from \"tabler-react\";\n\ntype Props = {|\n  +children: React.Node,\n|};\n\ntype State = {|\n  notificationsObjects: Array<NotificationProps>,\n|};\n\ntype subNavItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +LinkComponent?: React.ElementType,\n|};\n\ntype navItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +active?: boolean,\n  +LinkComponent?: React.ElementType,\n  +subItems?: Array<subNavItem>,\n  +useExact?: boolean,\n|};\n\n\nconst getNavBarItems = (t, loading, error, data) => {\n  const shopFeatures = data.systemFeatureShop\n\n  let items: Array<navItem> = []\n  // let permissions = get_all_permissions(user)\n\n  if (loading) {\n    items.push({\n      value: t(\"general.loading_with_dots\"),\n      to: \"/\",\n      icon: \"\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true, \n    })\n\n    return items\n  }\n\n  if (error) {\n    items.push({\n      value: t(\"general.error_sad_smiley\"),\n      to: \"/\",\n      icon: \"\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true, \n    })\n\n    return items\n  }\n\n  items.push({\n    value: t(\"shop.home.title\"),\n    to: \"/\",\n    icon: \"home\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  })\n\n\n  if (shopFeatures.subscriptions) {\n    items.push({\n      value: t(\"shop.subscriptions.title\"),\n      to: \"/shop/subscriptions\",\n      icon: \"edit\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true,\n    })\n  }\n\n  if (shopFeatures.classpasses) {\n    items.push({\n      value: t(\"shop.classpasses.title\"),\n      to: \"/shop/classpasses\",\n      icon: \"credit-card\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true,\n    })\n  }\n\n  if (shopFeatures.classes) {\n    items.push({\n      value: t(\"shop.classes.title\"),\n      to: \"/shop/classes\",\n      icon: \"book\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true,\n    })\n  }\n\n  if (shopFeatures.events) {\n    items.push({\n      value: t(\"shop.events.title\"),\n      to: \"/shop/events\",\n      icon: \"calendar\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true,\n    })\n  }\n\n  items.push({\n    value: t(\"shop.contact.title\"),\n    to: \"/shop/contact\",\n    icon: \"message-square\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  })\n\n  // Check if refresh token is present and if so, hasn't expired\n  const refreshTokenExp = localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN_EXP)\n  let accountTitle = t(\"shop.account.title\")\n  let accountLink = \"/shop/account\"\n  if (new Date() / 1000 >= refreshTokenExp || refreshTokenExp == null ) {\n    accountTitle = t(\"general.sign_in\")\n    accountLink = \"/user/login\"\n  }\n\n  items.push({\n    value: accountTitle,\n    to: accountLink,\n    icon: \"user\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  })\n\n  return items\n}\n\nfunction getHeaderImageUrl(organization) {\n  let imageURL = \"/d/static/logos/stock/logo_stock_backend.png\"\n\n  if (organization) {\n    if (organization.urlLogoShopHeader) {\n      imageURL = organization.urlLogoShopHeader\n    }\n  }\n\n  return imageURL\n}\n\nconst now = new Date()\n\nfunction SiteWrapperShop({t, match, history, children}) {\n  const { loading, error, data } = useQuery(GET_SHOP_FEATURES_QUERY)\n  const organization = useContext(OrganizationContext)\n  console.log(organization)\n  // const { error, loading, data, fetchMore } = useQuery(GET_USER)\n\n  if (loading) return <p>{t('general.loading_with_dots')}</p>;\n  if (error) return <p>{t('system.user.error_loading')}</p>; \n\n  console.log(data)\n\n  const headerImageUrl = getHeaderImageUrl(organization)\n\n  return (\n    <Site.Wrapper\n      headerProps={{\n          href: \"/\",\n          alt: \"Costasiella\",\n          imageURL: headerImageUrl, // Set logo url here\n          navItems: (\n            <Nav.Item type=\"div\" className=\"d-none d-md-flex\">\n              {(data.user) ? (data.user.teacher || data.user.employee) ? <Link to=\"/user/welcome\">\n                <Button\n                  className=\"mr-2\"\n                  icon=\"link\"\n                  outline\n                  size=\"sm\"\n                  color=\"primary\"\n                >\n                  {t('goto.title')}\n                </Button>\n              </Link> : \"\" : \"\"}\n            </Nav.Item>\n          ),\n          \n          // notificationsTray: {\n          //   notificationsObjects,\n          //   markAllAsRead: () =>\n          //     this.setState(\n          //       () => ({\n          //         notificationsObjects: this.state.notificationsObjects.map(\n          //           v => ({ ...v, unread: false })\n          //         ),\n          //       }),\n          //       () =>\n          //         setTimeout(\n          //           () =>\n          //             this.setState({\n          //               notificationsObjects: this.state.notificationsObjects.map(\n          //                 v => ({ ...v, unread: true })\n          //               ),\n          //             }),\n          //           5000\n          //         )\n          //     ),\n          //   unread: unreadCount,\n          // },\n        //   accountDropdown: {\n        //   avatarURL: \"#\",\n        //   name: data.user.firstName + ' ' + data.user.lastName,\n        //   description: \"\",\n        //   options: [\n        //     // { icon: \"user\", value: \"Profile\" },\n        //     { icon: \"lock\", value: \"Change password\", to: \"/#/user/password/change/\" },\n        //     { isDivider: true },\n        //     { icon: \"log-out\", value: \"Sign out\", to: \"/#/user/logout/\" },\n        //   ],\n        // },\n        }}\n        // navProps={{ itemsObjects: navBarItems }}\n        navProps={{ itemsObjects: getNavBarItems(t, loading, error, data) }}\n        routerContextComponentType={withRouter(RouterContextProvider)}\n        footerProps={{\n          // links: [\n          //   <a href=\"#\">First Link</a>,\n          //   <a href=\"#\">Second Link</a>,\n          //   <a href=\"#\">Third Link</a>,\n          //   <a href=\"#\">Fourth Link</a>,\n          //   <a href=\"#\">Five Link</a>,\n          //   <a href=\"#\">Sixth Link</a>,\n          //   <a href=\"#\">Seventh Link</a>,\n          //   <a href=\"#\">Eigth Link</a>,\n          // ],\n          // note:\n          //   \"Premium and Open Source dashboard template with responsive and high quality UI. For Free!\",\n          copyright: (\n            <React.Fragment>\n              Copyleft © {now.getFullYear()}.\n              <a\n                href=\"https://www.costasiella.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {\" \"}\n                Edwin van de Ven\n              </a>{\". \"}\n              All rights reserved.\n            </React.Fragment>\n          ),\n          nav: (\n            <React.Fragment>\n              <Grid.Col auto={true}>\n                {/* <List className=\"list-inline list-inline-dots mb-0\">\n                  <List.Item className=\"list-inline-item\">\n                    <a href=\"./docs/index.html\">Documentation</a>\n                  </List.Item>\n                  <List.Item className=\"list-inline-item\">\n                    <a href=\"./faq.html\">FAQ</a>\n                  </List.Item>\n                </List> */}\n              </Grid.Col>\n              <Grid.Col auto={true}>\n                {/* <Button\n                  href=\"https://github.com/tabler/tabler-react\"\n                  size=\"sm\"\n                  outline\n                  color=\"primary\"\n                  RootComponent=\"a\"\n                >\n                  Source code\n                </Button> */}\n              </Grid.Col>\n            </React.Fragment>\n          ),\n        }}\n      >\n      {children}\n      <ToastContainer \n        autoClose={5000} \n        transition={Slide}\n      />\n    </Site.Wrapper>    \n  )\n}\n\n\nexport default withTranslation()(SiteWrapperShop)\n","import { gql } from \"@apollo/client\"\n\nconst GET_USER_PROFILE = gql`\n  query User {\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n      teacher\n      employee\n    }\n  }\n`\n\nexport default GET_USER_PROFILE","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\n\n\nfunction ShopAccountHomeBase({ t, match, history, children, subTitle=\"\" }) {\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"shop.account.title\")} subTitle={subTitle}/>\n          { children }\n        </Container>\n      </div>\n    </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountHomeBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\n\n\nfunction ShopAccountHomeButton({ t, link, buttonText }) {\n  return (\n    <Link to={link} >\n      <Button \n        outline\n        block\n        color=\"primary\"\n      >\n        {buttonText} <Icon name=\"chevron-right\" />\n      </Button>\n    </Link>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountHomeButton))","// @flow\n\nimport React, {Component } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountHomeBase from \"./ShopAccountHomeBase\"\nimport ShopAccountHomeButton from \"./ShopAccountHomeButton\"\n\n\nfunction ShopAccountHome({t, match, history}) {\n  const { loading, error, data } = useQuery(GET_USER_PROFILE)\n\n  if (loading) return (\n    <ShopAccountHomeBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountHomeBase>\n  )\n  if (error) return (\n    <ShopAccountHomeBase>\n      {t(\"shop.account.error_loading_user_data\")}\n    </ShopAccountHomeBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = data.user\n\n  return (\n    <ShopAccountHomeBase subTitle={user.fullName}>\n      {(user.teacher || user.employee) ?\n        <div>\n          <Grid.Row>\n            <Grid.Col md={4} lg={4}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"goto.title\")}</h5>\n                  {t(\"shop.account.goto.explanation\")}\n                  <br /><br />\n                  <ShopAccountHomeButton link=\"/user/welcome\" buttonText={t(\"shop.account.btn_go_to\")} />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row> \n          <hr />\n        </div>\n        : \"\"\n      } \n      <Grid.Row>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.classes.title\")}</h5>\n              {t(\"shop.account.classes.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/classes\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.subscriptions.title\")}</h5>\n              {t(\"shop.account.subscriptions.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/subscriptions\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.classpasses.title\")}</h5>\n              {t(\"shop.account.classpasses.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/classpasses\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.event_tickets.title\")}</h5>\n              {t(\"shop.account.event_tickets.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/event_tickets\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n      <hr />\n      {/* Administrative stuff below this point, profile, invoices, orders, etc. */}\n      <Grid.Row>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.profile.title\")}</h5>\n              {t(\"shop.account.profile.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/profile\" buttonText={t(\"shop.account.btn_text_profile_edit\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.orders.title\")}</h5>\n              {t(\"shop.account.orders.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/orders\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.invoices.title\")}</h5>\n              {t(\"shop.account.invoices.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/invoices\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.change_password.title\")}</h5>\n              {t(\"shop.account.change_password.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/user/password/change/\" buttonText={t(\"shop.account.btn_text_change_password\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.sign_out.title\")}</h5>\n              {t(\"shop.account.sign_out.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/user/logout/\" buttonText={t(\"shop.account.btn_text_sign_out\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountHomeBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountHome))","import React from 'react'\nimport moment from 'moment'\nimport { TimeStringToJSDateOBJ } from '../../tools/date_tools'\n\n\nexport function DisplayClassInfo({t, classDate, classData, dateFormat, timeFormat }) {\n    return (\n      <div>\n        <b>\n          {moment(classDate).format(dateFormat)} {' '}\n          {moment(TimeStringToJSDateOBJ(classData.scheduleClass.timeStart)).format(timeFormat)} {' - '}\n          {moment(TimeStringToJSDateOBJ(classData.scheduleClass.timeEnd)).format(timeFormat)} <br />  \n        </b>\n        {classData.scheduleClass.organizationClasstype.name + \" \" + t(\"general.at\") + ' ' + \n          classData.scheduleClass.organizationLocationRoom.organizationLocation.name}\n      </div>\n    )\n}","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ACCOUNT_CLASS_QUERY = gql`\n  query ScheduleItemAttendance($scheduleItemId:ID!, $date:Date!, $id: ID!) {\n    scheduleClass(scheduleItemId: $scheduleItemId, date:$date) {\n      scheduleItemId\n      frequencyType\n      date\n      organizationClasstype {\n        name\n      }\n      organizationLocationRoom {\n        organizationLocation {\n          name\n        }\n      }\n          timeStart\n      timeEnd\n      infoMailContent\n    }\n    scheduleItemAttendance(id: $id) {\n      id\n      cancellationPossible\n      attendanceType\n      date\n      bookingStatus\n      scheduleItem {\n        id\n        timeStart\n        timeEnd\n        organizationLocationRoom {\n          name\n          organizationLocation {\n            name\n          }\n        }\n        organizationClasstype {\n          name\n        }\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Container,\n  Icon,\n  Page\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\n\n\nfunction ShopAccountClassCancelBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header \n              title={t(\"shop.account.title\")} \n              subTitle={ accountName }\n            >\n              <div className=\"page-options d-flex\">\n                <Link to={\"/shop/account/classes\"}\n                      className='btn btn-secondary'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')} \n                </Link>\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountClassCancelBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table\n} from \"tabler-react\"\n\nimport { DisplayClassInfo } from \"../../tools\"\nimport { UPDATE_SCHEDULE_ITEM_ATTENDANCE } from \"../../../schedule/classes/class/attendance/queries\"\nimport { GET_ACCOUNT_CLASS_QUERY } from \"./queries\"\n// import { GET_SCHEDULE_CLASS_QUERY } from \"../../checkout/class_info/queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\nimport ShopAccountClassCancelBase from \"./ShopAccountClassCancelBase\"\n\n\n\nfunction ShopAccountClassCancel({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const attendanceId = match.params.attendance_id\n  const scheduleItemId = match.params.class_id\n  const date = match.params.date\n  const { loading: loadingAttendance, error: errorAttendance, data: dataAttendance } = useQuery(GET_ACCOUNT_CLASS_QUERY, {\n    variables: { \n      id: attendanceId,\n      scheduleItemId: scheduleItemId,\n      date: date\n    }\n  })\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const [updateScheduleItemAttendance] = useMutation(UPDATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loadingUser || loadingAttendance) return (\n    <ShopAccountClassCancelBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountClassCancelBase>\n  )\n  if (errorUser || errorAttendance) return (\n    <ShopAccountClassCancelBase>\n      {t(\"shop.account.class_info.error_loading_data\")}\n    </ShopAccountClassCancelBase>\n  )\n\n  const user = dataUser.user\n  console.log(dataUser)\n  console.log(dataAttendance)\n  const scheduleItemAttendance = dataAttendance.scheduleItemAttendance\n\n  // Booking already cancelled\n  if (scheduleItemAttendance.bookingStatus == 'CANCELLED') {\n    return (\n      <ShopAccountClassCancelBase accountName={user.fullName}>\n        <Card title={t(\"shop.account.class_cancel.title_already_cancelled\")}>\n          <Card.Body>\n            <h5>{t(\"shop.account.class_cancel.already_cancelled\")}</h5>\n          </Card.Body>\n        </Card>\n      </ShopAccountClassCancelBase>\n    )\n  }\n\n  // Cancellation no longer possible\n  if (!scheduleItemAttendance.cancellationPossible) {\n    return (\n      <ShopAccountClassCancelBase accountName={user.fullName}>\n        <Card title={t(\"shop.account.class_cancel.title_cancelation_not_possible\")}>\n          <Card.Body>\n            <h5>{t(\"shop.account.class_cancel.cancelation_not_possible\")}</h5>\n          </Card.Body>\n        </Card>\n      </ShopAccountClassCancelBase>\n    )\n  }\n\n  // Show cancel option\n  return (\n    <ShopAccountClassCancelBase accountName={user.fullName}>\n      <Card title={t(\"shop.account.class_cancel.title\")}>\n        <Card.Body>\n          {/* TODO: Check if class already cancelled */}\n          <h5>\n            {t(\"shop.account.class_cancel.confirmation_question\")}\n          </h5>\n            <DisplayClassInfo\n              t={t}\n              classDate={date}\n              classData={dataAttendance}\n              dateFormat={dateFormat}\n              timeFormat={timeFormat}\n            />\n            <br />\n            <Button\n              className=\"mr-4\"\n              color=\"warning\"\n              onClick={() =>\n                updateScheduleItemAttendance({ variables: {\n                  input: {\n                    id: attendanceId,\n                    bookingStatus: \"CANCELLED\"\n                  }\n                }})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(\"/shop/account/classes\")\n                    toast.success((t('shop.account.class_cancel.success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                  })\n                }\n            >\n              {t(\"shop.account.class_cancel.confirm_yes\")}\n            </Button>\n            <Link to={\"/shop/account/classes\"}>\n              {t(\"shop.account.class_cancel.confirm_no\")}\n            </Link>\n        </Card.Body>\n      </Card>\n    </ShopAccountClassCancelBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountClassCancel))\n\n\n{/* <Button \nclassName=\"pull-right\"\ncolor=\"warning\"\nonClick={() =>\n  updateAccountScheduleEventTicket({ variables: {\n    input: {\n      id: node.id,\n      cancelled: true\n    }\n  }, refetchQueries: [\n      {query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n        scheduleEventTicket: id\n      }},\n  ]})\n  .then(({ data }) => {\n      console.log('got data', data);\n      toast.success((t('schedule.events.tickets.customers.cancelled')), {\n          position: toast.POSITION.BOTTOM_RIGHT\n        })\n      setShowSearch(false)\n    }).catch((error) => {\n      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n          position: toast.POSITION.BOTTOM_RIGHT\n        })\n      console.log('there was an error sending the query', error)\n      setShowSearch(false)\n    })\n  }\n>\n  {t(\"general.cancel\")}\n</Button> */}","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_CLASS_QUERY = gql`\n  query ScheduleClass($scheduleItemId:ID!, $date:Date!) {\n    scheduleClass(scheduleItemId: $scheduleItemId, date:$date) {\n      scheduleItemId\n      frequencyType\n      date\n      organizationClasstype {\n        name\n      }\n      organizationLocationRoom {\n        organizationLocation {\n          name\n        }\n      }\n          timeStart\n      timeEnd\n      infoMailContent\n    }\n  }\n`\n\n\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { v4 } from 'uuid'\nimport moment from 'moment'\n\nimport {\n  Card,\n  Icon,\n  Table,\n} from \"tabler-react\";\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport { DisplayClassInfo } from \"../../tools\"\nimport { GET_SCHEDULE_CLASS_QUERY } from \"./queries\"\n\n\nfunction ShopCheckoutClassInfo({ t, scheduleItemId, date, complete=true}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n\n  console.log(scheduleItemId)\n  console.log(date)\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_CLASS_QUERY, {\n    variables: { \n      scheduleItemId: scheduleItemId,\n      date: date\n    }\n  })\n\n  if (loading) return (\n      t(\"general.loading_with_dots\")\n  )\n  if (error) return (\n      t(\"shop.checkout.class_info.error_loading\")\n  )\n\n  console.log(data)\n\n  return (\n    (!loading && !error) ?\n      <div className=\"text-muted\">\n        <h5><Icon name=\"book\" /> {\n          (complete) ? t(\"shop.checkout.class_info.have_been_checked_in\")\n                     : t(\"shop.checkout.class_info.will_be_checked_in\") \n        }</h5>\n        {/* Class display info $ mail content */}\n        <DisplayClassInfo \n          t={t} \n          classDate={date}\n          classData={data} \n          dateFormat={dateFormat} \n          timeFormat={timeFormat}\n        />\n        <br />\n        {(data.scheduleClass.infoMailContent) ? \n          <div>\n            <h5><Icon name=\"info\" /> {t(\"shop.checkout.class_info.info_mail\")}</h5>\n            <div dangerouslySetInnerHTML={{ __html: data.scheduleClass.infoMailContent }} /> \n          </div>\n          : \"\"\n        }\n      </div> \n      : \"\"\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutClassInfo))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Container,\n  Icon,\n  Page\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\n\n\nfunction ShopAccountClassInfoBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header \n              title={t(\"shop.account.title\")} \n              subTitle={ accountName }\n            >\n              <div className=\"page-options d-flex\">\n                <Link to={\"/shop/account/classes\"}\n                      className='btn btn-secondary'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')} \n                </Link>\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountClassInfoBase))","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table\n} from \"tabler-react\"\n\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\nimport ShopCheckoutClassInfo from \"../../checkout/class_info/ShopCheckoutClassInfo\"\nimport ShopAccountClassInfoBase from \"./ShopAccountClassInfoBase\"\n\n\n\nfunction ShopAccountClassInfo({t, match, history}) {\n  const { loading, error, data } = useQuery(GET_USER_PROFILE)\n  const scheduleItemId = match.params.class_id\n  const date = match.params.date \n\n  if (loading) return (\n    <ShopAccountClassInfoBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountClassInfoBase>\n  )\n  if (error) return (\n    <ShopAccountClassInfoBase>\n      {t(\"shop.account.class_info.error_loading_data\")}\n    </ShopAccountClassInfoBase>\n  )\n\n  const user = data.user\n\n  // Populated list\n  return (\n    <ShopAccountClassInfoBase accountName={user.fullName}>\n      <Card title={t(\"shop.account.class_info.title\")}>\n        <Card.Body>\n          <ShopCheckoutClassInfo\n            scheduleItemId={scheduleItemId}\n            date={date}\n            complete={true}\n          />\n        </Card.Body>\n      </Card>\n    </ShopAccountClassInfoBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountClassInfo))\n","import { gql } from \"@apollo/client\"\n\n\nexport const QUERY_ACCOUNT_CLASSPASSES = gql`\n  query AccountClasspass($before: String, $after: String, $account: ID!) {\n    accountClasspasses(first: 100, before: $before, after: $after, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          organizationClasspass {\n            name\n          }\n          dateStart\n          dateEnd\n          classesRemainingDisplay\n        }\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport ButtonBack from \"../../ui/ButtonBack\"\n\n\nfunction ShopAccountBack({ t, returnUrl=\"/shop/account\" }) {\n  \n  return (\n    <ButtonBack returnUrl={returnUrl} />\n  )\n}\n\nexport default withTranslation()(ShopAccountBack)\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountProfileBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n          </Page.Header>\n          { children }\n        </Container>\n      </div>\n    </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountProfileBase))","// @flow\n\nimport React, { useContext} from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport {\n  Card,\n  Grid,\n  Table\n} from \"tabler-react\";\nimport { QUERY_ACCOUNT_CLASSPASSES } from \"./queries\"\n\nimport ShopAccountClasspassesBase from \"./ShopAccountClasspassesBase\"\nimport ContentCard from \"../../../general/ContentCard\"\n\n\nfunction ShopAccountClasspasses({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(QUERY_ACCOUNT_CLASSPASSES, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })\n  \n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountClasspassesBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountClasspassesBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountClasspassesBase>\n      {t(\"shop.account.classpasses.error_loading_data\")}\n    </ShopAccountClasspassesBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = data.user\n  const classpasses = data.accountClasspasses\n\n  // Empty list\n  if (!classpasses.edges.length) {\n    return (\n      <ShopAccountClasspassesBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.classpasses.title')} >\n              <Card.Body>\n                {t('shop.account.classpasses.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountClasspassesBase>\n    )  \n  }\n\n  // Populated list\n  return (\n    <ShopAccountClasspassesBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <ContentCard cardTitle={t('shop.account.classpasses.title')}\n            // headerContent={headerOptions}\n            pageInfo={classpasses.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: classpasses.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.accountClasspasses.edges\n                  const pageInfo = fetchMoreResult.accountClasspasses.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        accountClasspasses: {\n                          __typename: previousResult.accountClasspasses.__typename,\n                          edges: [ ...previousResult.accountClasspasses.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.classes_remaining')}</Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {classpasses.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      {node.organizationClasspass.name}\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateStart).format(dateFormat)}\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateEnd).format(dateFormat)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.classesRemainingDisplay}\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </ContentCard>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountClasspassesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountClasspasses))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../SiteWrapperShop\"\nimport ShopAccountBack from \"./ShopAccountBack\"\n\n\nfunction ShopAccountProfileBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n          </Page.Header>\n          { children }\n        </Container>\n      </div>\n    </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountProfileBase))","// @flow\n\nimport React, { useContext} from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport {\n  Badge,\n  Card,\n  Grid,\n  Table\n} from \"tabler-react\";\nimport { GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY } from \"../../../relations/accounts/schedule_event_tickets/queries\"\n\nimport ShopAccountProfileBase from \"../ShopAccountProfileBase\"\nimport ContentCard from \"../../../general/ContentCard\"\n\n\nfunction ShopAccountEventTickets({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })  \n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountProfileBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountProfileBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountProfileBase>\n      {t(\"shop.account.event_tickets.error_loading_data\")}\n    </ShopAccountProfileBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(dataUser)\n  const user = dataUser.user\n  const eventTickets = data.accountScheduleEventTickets\n\n  // Empty list\n  if (!eventTickets.edges.length) {\n    return (\n      <ShopAccountProfileBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.event_tickets.title')} >\n              <Card.Body>\n                {t('shop.account.event_tickets.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountProfileBase>\n    )  \n  }\n\n  // Populated list\n  return (\n    <ShopAccountProfileBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <ContentCard cardTitle={t('shop.account.event_tickets.title')}\n            // headerContent={headerOptions}\n            pageInfo={eventTickets.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: eventTickets.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.accountScheduleEventTickets.edges\n                  const pageInfo = fetchMoreResult.accountScheduleEventTickets.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new tickets at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        eventTickets: {\n                          __typename: previousResult.accountScheduleEventTickets.__typename,\n                          edges: [ ...previousResult.accountScheduleEventTickets.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.ticket')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.start')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {eventTickets.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      {node.scheduleEventTicket.scheduleEvent.name} <br />\n                      <Badge>{node.scheduleEventTicket.name}</Badge> {\" \"}\n                      {(node.cancelled) ? <Badge color=\"warning\">{t(\"general.cancelled\")}</Badge> : \"\"}\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.scheduleEventTicket.scheduleEvent.dateStart).format(dateFormat)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.scheduleEventTicket.scheduleEvent.organizationLocation.name}\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </ContentCard>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountProfileBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountEventTickets))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_INVOICE_QUERY = gql`\n  query FinanceInvoice($id: ID!) {\n    financeInvoice(id:$id) {\n      id\n      account {\n        id\n        fullName\n      }\n      financePaymentMethod {\n        id\n        name\n      }\n      relationCompany\n      relationCompanyRegistration\n      relationCompanyTaxRegistration\n      relationContactName\n      relationAddress\n      relationPostcode\n      relationCity\n      relationCountry\n      status\n      summary\n      invoiceNumber\n      dateSent\n      dateDue\n      terms\n      footer\n      note\n      subtotalDisplay\n      taxDisplay\n      total\n      totalDisplay\n      paidDisplay\n      balance\n      balanceDisplay\n      creditInvoiceNumber\n      updatedAt\n      items {\n        edges {\n          node {\n            id\n            lineNumber\n            productName\n            description\n            quantity\n            price\n            financeTaxRate {\n              id\n              name\n              percentage\n              rateType\n            }\n            subtotal\n            subtotalDisplay\n            tax\n            taxDisplay\n            total\n            totalDisplay\n            financeGlaccount {\n              id\n              name\n            }\n            financeCostcenter {\n              id\n              name\n            }\n          }\n        }\n      }\n      payments {\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            id\n            amount\n            amountDisplay\n            date\n            financePaymentMethod {\n              id\n              name\n            }\n            note\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const CREATE_PAYMENT_LINK = gql`\nmutation CreateFinanceInvoicePaymentLink($id: ID!) {\n  createFinanceInvoicePaymentLink(id: $id) {\n    financeInvoicePaymentLink {\n      paymentLink\n    }\n  }\n}\n`\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountInvoicePaymentBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack returnUrl=\"/shop/account/invoices\"/>\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountInvoicePaymentBase))","// @flow\n\nimport React, { useContext, useRef, useState } from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceInvoicesStatus from \"../../../ui/FinanceInvoiceStatus\"\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table,\n  Text\n} from \"tabler-react\"\nimport { GET_INVOICE_QUERY, CREATE_PAYMENT_LINK } from \"./queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountInvoicePaymentBase from \"./ShopAccountInvoicePaymentBase\"\n\n\nfunction ShopAccountInvoicePayment({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n  const onlinePaymentsAvailable = appSettings.onlinePaymentsAvailable\n\n  const id = match.params.id\n  const cardTitleLoadingError = t(\"shop.account.invoice_payment.title\")\n\n  const btnPayNow = useRef(null);\n  const initialBtnText = <span><Icon name=\"credit-card\" /> {t('shop.checkout.payment.to_payment')} <Icon name=\"chevron-right\" /></span>\n  const [btn_text, setBtnText] = useState(initialBtnText)\n\n  // Chain queries. First query user data and then query invoices for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(GET_INVOICE_QUERY, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      id: id\n    }\n  })\n\n  const [createPaymentLink] = useMutation(CREATE_PAYMENT_LINK)\n\n  function onClickPay() {\n    btnPayNow.current.setAttribute(\"disabled\", \"disabled\")\n    setBtnText(t(\"shop.checkout.payment.redirecting\"))\n    // btnPayNow.current.setValue(\"redirecting...\")\n    // btnPayNow\n    // btnPayNow.current.removeAttribute(\"disabled\")\n    createPaymentLink({ variables: { id: id } }).then(({ data }) => {\n      console.log('got data', data);\n      const paymentLink = data.createFinanceInvoicePaymentLink.financeInvoicePaymentLink.paymentLink\n      window.location.href = paymentLink\n    }).catch((error) => {\n      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n          position: toast.POSITION.BOTTOM_RIGHT\n        })\n      console.log('there was an error sending the query', error)\n    })\n  }\n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountInvoicePaymentBase>\n      <Card title={cardTitleLoadingError}>\n        <Card.Body>\n          {t(\"general.loading_with_dots\")}\n        </Card.Body>\n      </Card>\n    </ShopAccountInvoicePaymentBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountInvoicePaymentBase>\n      <Card title={cardTitleLoadingError}>\n        <Card.Body>\n          {t(\"shop.account.invoice_payment.error_loading_data\")}\n        </Card.Body>\n      </Card>\n    </ShopAccountInvoicePaymentBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = dataUser.user\n  const invoice = data.financeInvoice\n\n  \n  return (\n    <ShopAccountInvoicePaymentBase accountName={user.fullName}>\n      <Card title={<span>{t(\"general.invoice\")} #{invoice.invoiceNumber}</span>}>\n        <Card.Body>\n          { invoice.items.edges.map(({ node }) => (\n            <Grid.Row>\n              <Grid.Col md={9}>\n                {node.productName} <br />\n                <small className=\"text-muted\">\n                  {node.description}\n                </small>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <span className=\"float-right\">\n                  {node.totalDisplay}\n                </span>\n              </Grid.Col>\n            </Grid.Row>\n          ))}\n          {/* Total */}\n          <Grid.Row>\n            <Grid.Col md={9} className=\"bold\">\n              <br />\n              {t(\"general.total\")}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <span className=\"bold float-right\">\n                <br />\n                {invoice.totalDisplay}\n              </span>\n            </Grid.Col>\n          </Grid.Row>\n        </Card.Body>\n        <Card.Footer>\n          <button\n            className=\"btn float-right btn-success\"\n            ref={btnPayNow}\n            onClick={ onClickPay }\n          >\n            {btn_text}\n          </button>\n        </Card.Footer>\n      </Card>\n    </ShopAccountInvoicePaymentBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountInvoicePayment))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountInvoicePaymentStatusBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              {/* <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div> */}\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountInvoicePaymentStatusBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceInvoicesStatus from \"../../../ui/FinanceInvoiceStatus\"\n\nimport {\n  Alert,\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table,\n  Text\n} from \"tabler-react\"\nimport { GET_INVOICE_QUERY } from \"../invoice_payment/queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountInvoicePaymentStatusBase from \"./ShopAccountInvoicePaymentStatusBase\"\n\n\nfunction ShopAccountInvoicePaymentStatus({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n  const onlinePaymentsAvailable = appSettings.onlinePaymentsAvailable\n\n  const id = match.params.id\n  const cardTitleLoadingError = t(\"shop.account.invoice_payment.title\")\n\n  // Chain queries. First query user data and then query invoices for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(GET_INVOICE_QUERY, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      id: id\n    }\n  })\n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountInvoicePaymentStatusBase>\n      <Card title={cardTitleLoadingError}>\n        <Card.Body>\n          {t(\"general.loading_with_dots\")}\n        </Card.Body>\n      </Card>\n    </ShopAccountInvoicePaymentStatusBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountInvoicePaymentStatusBase>\n      <Card title={cardTitleLoadingError}>\n        <Card.Body>\n          {t(\"shop.account.invoice_payment_status.error_loading_data\")}\n        </Card.Body>\n      </Card>\n    </ShopAccountInvoicePaymentStatusBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = dataUser.user\n  const invoice = data.financeInvoice\n\n  let alert\n  if (invoice.status == \"PAID\") {\n    alert = <Alert type=\"success\" icon=\"check\">\n      {t(\"shop.account.invoice_payment_status.payment_received\")}\n    </Alert>\n  } else {\n    alert = <Alert type=\"primary\" icon=\"help-circle\">\n      {t(\"shop.account.invoice_payment_status.payment_not_confirmed\")}\n    </Alert>\n  }\n\n  \n  return (\n    <ShopAccountInvoicePaymentStatusBase accountName={user.fullName}>\n      {alert}\n      <Card title={<span>{t(\"general.invoice\")} #{invoice.invoiceNumber}</span>}>\n        <Card.Body>\n          { invoice.items.edges.map(({ node }) => (\n            <Grid.Row>\n              <Grid.Col md={9}>\n                {node.productName} <br />\n                <small className=\"text-muted\">\n                  {node.description}\n                </small>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <span className=\"float-right\">\n                  {node.totalDisplay}\n                </span>\n              </Grid.Col>\n            </Grid.Row>\n          ))}\n          {/* Total */}\n          <Grid.Row>\n            <Grid.Col md={9} className=\"bold\">\n              <br />\n              {t(\"general.total\")}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <span className=\"bold float-right\">\n                <br />\n                {invoice.totalDisplay}\n              </span>\n            </Grid.Col>\n          </Grid.Row>\n        </Card.Body>\n        <Card.Footer>\n          <Link to=\"/shop/account/invoices\">\n            <Button \n              color=\"primary\"\n              className=\"float-right\"\n            >\n              {t(\"shop.account.invoice_payment_status.to_profile\")} <Icon name=\"chevron-right\" />\n            </Button>\n          </Link>\n        </Card.Footer>\n      </Card>\n    </ShopAccountInvoicePaymentStatusBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountInvoicePaymentStatus))","import { gql } from \"@apollo/client\"\n\n\nexport const QUERY_ACCOUNT_INVOICES = gql`\n  query FinanceInvoices($after: String, $before: String, $account: ID!) {\n    financeInvoices(first: 15, before: $before, after: $after, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          invoiceNumber\n          status\n          summary\n          relationCompany\n          relationContactName\n          dateSent\n          dateDue\n          total\n          totalDisplay\n          balance\n          balanceDisplay\n        }\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountInvoicesBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountInvoicesBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceInvoicesStatus from \"../../../ui/FinanceInvoiceStatus\"\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table,\n  Text\n} from \"tabler-react\"\nimport { QUERY_ACCOUNT_INVOICES, CREATE_PAYMENT_LINK } from \"./queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountInvoicesBase from \"./ShopAccountInvoicesBase\"\n\n\nfunction ShopAccountInvoices({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n  const onlinePaymentsAvailable = appSettings.onlinePaymentsAvailable\n\n  // Chain queries. First query user data and then query invoices for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(QUERY_ACCOUNT_INVOICES, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })\n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountInvoicesBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountInvoicesBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountInvoicesBase>\n      {t(\"shop.account.classpasses.error_loading_data\")}\n    </ShopAccountInvoicesBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = dataUser.user\n  const invoices = data.financeInvoices\n\n  // Empty list\n  if (!invoices.edges.length) {\n    return (\n      <ShopAccountInvoicesBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.invoices.title')} >\n              <Card.Body>\n                {t('shop.account.invoices.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountInvoicesBase>\n    )  \n  }\n\n  // Populated list\n  return (\n    <ShopAccountInvoicesBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <ContentCard cardTitle={t('shop.account.invoices.title')}\n            // headerContent={headerOptions}\n            pageInfo={invoices.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: invoices.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.financeInvoices.edges\n                  const pageInfo = fetchMoreResult.financeInvoices.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        financeInvoices: {\n                          __typename: previousResult.financeInvoices.__typename,\n                          edges: [ ...previousResult.financeInvoices.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <Table cards responsive>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n                  <Table.ColHeader>{t('finance.invoices.invoice_number')}</Table.ColHeader>\n                  <Table.ColHeader>{t('finance.invoices.date')} & {t('finance.invoices.due')}</Table.ColHeader>\n                  {/* <Table.ColHeader>{t('finance.invoices.due')}</Table.ColHeader> */}\n                  <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.balance')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                { invoices.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      <FinanceInvoicesStatus status={node.status} />\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.invoiceNumber} <br />\n                      <Text.Small muted>\n                        {node.summary.trunc(20)}\n                      </Text.Small>\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {moment(node.dateSent).format('LL')} <br />\n                      {moment(node.dateDue).format('LL')}\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.totalDisplay}\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.balanceDisplay}\n                    </Table.Col>\n                    <Table.Col className=\"text-right\" key={v4()}>\n                        {/* TODO: Add token refresh here within an onClick */}\n                        <Button \n                          RootComponent=\"a\"\n                          href={`/d/export/invoice/pdf/${node.id}`}\n                          color=\"secondary\"\n                          icon=\"printer\"\n                        >\n                          {t('general.pdf')}\n                        </Button>\n                        {(node.status == \"SENT\" && onlinePaymentsAvailable) ?\n                        <Link to={\"/shop/account/invoice_payment/\" + node.id}>\n                          <Button\n                            className=\"\"\n                            color=\"success\"\n                          >\n                            {t('shop.account.invoices.to_payment')} <Icon name=\"chevron-right\" />\n                          </Button>\n                        </Link>\n                      : \"\"}\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </ContentCard>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountInvoicesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountInvoices))","import { gql } from \"@apollo/client\"\n\n\nexport const QUERY_ACCOUNT_ORDERS = gql`\n  query FinanceOrders($after: String, $before: String, $account: ID!) {\n    financeOrders(first: 15, before: $before, after: $after, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          orderNumber\n          account {\n            id\n            fullName\n          }\n          message\n          status\n          total\n          totalDisplay\n          createdAt\n          items(first: 100) {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n              startCursor\n              endCursor\n            }\n            edges {\n              node {\n                id\n                productName\n                description\n                quantity\n                priceDisplay\n                financeTaxRate {\n                  id\n                  name\n                  percentage\n                  rateType\n                }\n                subtotalDisplay\n                taxDisplay\n                totalDisplay                \n              }\n            }\n          }\n        }\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`\n\n\nexport const UPDATE_ORDER = gql`\n  mutation UpdateOrder($input: UpdateFinanceOrderInput!) {\n    updateFinanceOrder(input: $input) {\n      financeOrder {\n        id\n        status\n      }\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountOrdersBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountOrdersBase))","export function get_order_card_status_color(status) {\n    switch(status) {\n        case (\"RECEIVED\"): \n          return \"blue\"\n          break\n        case (\"AWAITING_PAYMENT\"): \n          return \"blue\"\n          break\n        case (\"PAID\"):\n          return \"green\"\n          break\n        case (\"DELIVERED\"):\n          return \"green\"\n          break\n        case \"CANCELLED\":\n          return \"orange\"\n          break\n        default:\n          return \"\"\n      }\n}","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceOrderStatus from \"../../../finance/orders/FinanceOrderStatus\"\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table\n} from \"tabler-react\"\nimport { QUERY_ACCOUNT_ORDERS, UPDATE_ORDER } from \"./queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountOrdersBase from \"./ShopAccountOrdersBase\"\nimport { cancelOrder } from \"./ShopAccountOrderCancel\"\nimport LoadMoreOnBottomScroll from \"../../../general/LoadMoreOnBottomScroll\"\n\nimport { get_order_card_status_color } from \"./tools\"\n\nfunction ShopAccountOrders({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n  const onlinePaymentsAvailable = appSettings.onlinePaymentsAvailable\n\n  // Chain queries. First query user data and then query orders for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(QUERY_ACCOUNT_ORDERS, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })\n  const [ updateOrder ] = useMutation(UPDATE_ORDER)\n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountOrdersBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountOrdersBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountOrdersBase>\n      {t(\"shop.account.classpasses.error_loading_data\")}\n    </ShopAccountOrdersBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = dataUser.user\n  const orders = data.financeOrders\n\n  // Empty list\n  if (!orders.edges.length) {\n    return (\n      <ShopAccountOrdersBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.orders.title')} >\n              <Card.Body>\n                {t('shop.account.orders.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountOrdersBase>\n    )  \n  }\n\n  // Populated list\n  return (\n    <ShopAccountOrdersBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <LoadMoreOnBottomScroll\n            // headerContent={headerOptions}\n            pageInfo={orders.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: orders.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.financeOrders.edges\n                  const pageInfo = fetchMoreResult.financeOrders.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        financeOrders: {\n                          __typename: previousResult.financeOrders.__typename,\n                          edges: [ ...previousResult.financeOrders.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <h4>{t(\"shop.account.orders.title\")}</h4>\n            {orders.edges.map(({ node }) => (\n              <div>\n                <span className=\"pull-right\">\n                  <FinanceOrderStatus status={node.status} />\n                </span>\n                <small className=\"text-muted\">\n                  {moment(node.createdAt).format(dateTimeFormat)}\n                </small>\n                <Card statusColor={get_order_card_status_color(node.status)}>\n                  <Card.Header>\n                    <Card.Title>{t(\"general.order\") + \" #\" + node.orderNumber}</Card.Title>\n                    <Card.Options>\n                      {(node.status == \"RECEIVED\" || node.status == \"AWAITING_PAYMENT\") ?\n                        <Button\n                          outline\n                          color=\"warning\"\n                          size=\"sm\"\n                          onClick={() => cancelOrder({\n                            t: t,\n                            msgConfirm: t('shop.account.orders.msg_cancel_confirm'),\n                            msgDescription: <p>{t('general.order') + \" #\" + node.orderNumber}</p>, \n                            msgSuccess: t('shop.account.orders.order.cancelled'), \n                            cancelFunction: updateOrder, \n                            functionVariables: {\n                              variables: {\n                                input: {\n                                  id: node.id,\n                                  status: 'CANCELLED'\n                                }\n                              }\n                            }\n                          })}\n                        >\n                          {t('general.cancel')}\n                        </Button>\n                      : \"\"}\n                      {(node.status == \"AWAITING_PAYMENT\" && onlinePaymentsAvailable) ?\n                        <Link to={\"/shop/checkout/payment/\" + node.id}>\n                          <Button\n                            className=\"ml-4\"\n                            color=\"success\"\n                            size=\"sm\"\n                          >\n                            {t('shop.account.orders.to_payment')} <Icon name=\"chevron-right\" />\n                          </Button>\n                        </Link>\n                      : \"\"}\n                    </Card.Options>\n                  </Card.Header>\n                  <Table cards>\n                    <Table.Header>\n                      <Table.Row>\n                        <Table.ColHeader>{t(\"general.product\")}</Table.ColHeader>\n                        <Table.ColHeader>{t(\"general.description\")}</Table.ColHeader>\n                        <Table.ColHeader><span className=\"float-right\">{t(\"general.total\")}</span></Table.ColHeader>\n                      </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                      {node.items.edges.map(({ node }) => (\n                        <Table.Row>\n                          <Table.Col>{node.productName}</Table.Col>\n                          <Table.Col>{node.description}</Table.Col>\n                          <Table.Col><span className=\"float-right\">{node.totalDisplay}</span></Table.Col>\n                        </Table.Row>    \n                      ))}\n                      <Table.Row>\n                        <Table.Col></Table.Col>\n                        <Table.Col></Table.Col>\n                        <Table.Col><span className=\"bold float-right\">{node.totalDisplay}</span></Table.Col>\n                      </Table.Row>\n                    </Table.Body>\n                  </Table>\n                </Card>\n              </div>\n            ))}\n          </LoadMoreOnBottomScroll>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountOrdersBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountOrders))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { toast } from 'react-toastify'\nimport { confirmAlert } from 'react-confirm-alert'\nimport { v4 } from 'uuid'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nexport function cancelOrder({t, msgConfirm, msgDescription, msgSuccess, cancelFunction, functionVariables}) {\n  return (\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div key={v4()} className='custom-ui'>\n            <h1>{t('shop.account.orders.confirm_cancel')}</h1>\n            {msgConfirm}\n            {msgDescription}\n            <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('shop.account.orders.confirm_cancel_no')}</button>\n            <button\n              className=\"btn btn-warning btn-sm outline\"\n              onClick={() => {\n                cancelFunction(functionVariables)\n                  .then(({ data }) => {\n                    console.log('got data', data);\n                    toast.success(\n                      msgSuccess, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                  })\n                onClose()\n              }}\n            >\n              {t('shop.account.orders.confirm_cancel_yes')}\n            </button>\n          </div>\n        )\n      }\n    })\n  )\n}\n","import { gql } from \"@apollo/client\"\n\n\nexport const UPDATE_PROFILE = gql`\n  mutation UpdateAccount($input:UpdateAccountInput!) {\n    updateAccount(input: $input) {\n      account {\n        id\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountProfileBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n            <div className=\"page-options d-flex\">\n              <ShopAccountBack />\n            </div>\n          </Page.Header>\n          { children }\n        </Container>\n      </div>\n    </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountProfileBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\nimport ISO_COUNTRY_CODES from \"../../../../tools/iso_country_codes\"\n\n\nconst ShopAccountProfileForm = ({ t, history, isSubmitting, errors, values, returnUrl, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n    <Card title={t(\"shop.accounts.profile.edit\")} >\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.first_name')}>\n              <Field type=\"text\" \n                      name=\"firstName\" \n                      className={(errors.firstName) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"firstName\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.last_name')}>\n              <Field type=\"text\" \n                      name=\"lastName\" \n                      className={(errors.lastName) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"lastName\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n         <Grid.Col>\n            <Form.Group label={t('general.date_of_birth')}>\n              <CSDatePicker \n                selected={values.dateOfBirth}\n                onChange={(date) => setFieldValue(\"dateOfBirth\", date)}\n                onBlur={() => setFieldTouched(\"dateOfBirth\", true)}\n              />\n              <ErrorMessage name=\"dateOfBirth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.gender')}>\n              <Field component=\"select\" \n                    name=\"gender\" \n                    className={(errors.organizationMembership) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\"></option>\n                <option value=\"F\">{t(\"genders.female\")}</option>\n                <option value=\"M\">{t(\"genders.male\")}</option>\n                <option value=\"X\">{t(\"genders.other\")}</option>\n              </Field>\n              <ErrorMessage name=\"gender\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.email')}>\n              <Field type=\"text\" \n                      name=\"email\" \n                      className={(errors.email) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"email\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('relations.accounts.emergency')}>\n              <Field type=\"text\" \n                     name=\"emergency\" \n                     className={(errors.emergency) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"emergency\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.phone')}>\n              <Field type=\"text\" \n                      name=\"phone\" \n                      className={(errors.phone) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"phone\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.mobile')}>\n              <Field type=\"text\" \n                     name=\"mobile\" \n                     className={(errors.mobile) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"mobile\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.address')}>\n              <Field type=\"text\" \n                      name=\"address\" \n                      className={(errors.address) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"address\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.postcode')}>\n              <Field type=\"text\" \n                     name=\"postcode\" \n                     className={(errors.postcode) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"postcode\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.city')}>\n              <Field type=\"text\" \n                      name=\"city\" \n                      className={(errors.city) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"city\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.country')}>\n              <Field component=\"select\" \n                     name=\"country\" \n                     className={(errors.country) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\">\n                <option value=\"\"></option>\n                { ISO_COUNTRY_CODES.map(\n                    country => <option value={country.Code} key={v4()}>{country.Name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"gender\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </Card>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(ShopAccountProfileForm))\n\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SCHEMA = Yup.object().shape({\n    firstName: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n    lastName: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n    email: Yup.string()\n      .email(t('yup.email'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\nimport { UPDATE_PROFILE } from \"./queries\"\n\nimport ShopAccountProfileBase from \"./ShopAccountProfileBase\"\nimport ShopAccountProfileForm from \"./ShopAccountProfileForm\"\n\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport { ACCOUNT_SCHEMA } from \"./yupSchema\"\n\n\nfunction ShopAccountProfile({t, match, history}) {\n  const { loading, error, data } = useQuery(GET_USER_PROFILE)\n  const [ updateProfile ] = useMutation(UPDATE_PROFILE)\n\n  if (loading) return (\n    <ShopAccountProfileBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountProfileBase>\n  )\n  if (error) return (\n    <ShopAccountProfileBase>\n      {t(\"shop.account.profile.error_loading_data\")}\n    </ShopAccountProfileBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = data.user\n\n  let dateOfBirth = null\n  if (user.dateOfBirth) {\n    dateOfBirth = new Date(user.dateOfBirth)\n  }\n\n  return (\n    <ShopAccountProfileBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <Formik\n            initialValues={{ \n              firstName: user.firstName, \n              lastName: user.lastName, \n              email: user.email,\n              dateOfBirth: dateOfBirth,\n              gender: user.gender,\n              emergency: user.emergency,\n              phone: user.phone,\n              mobile: user.mobile,\n              address: user.address,\n              postcode: user.postcode,\n              city: user.city,\n              country: user.country\n            }}\n            validationSchema={ACCOUNT_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                let input_vars = {\n                  id: user.accountId,\n                  firstName: values.firstName,\n                  lastName: values.lastName,\n                  email: values.email,\n                  gender: values.gender,\n                  emergency: values.emergency,\n                  phone: values.phone,\n                  mobile: values.mobile,\n                  address: values.address,\n                  postcode: values.postcode,\n                  city: values.city,\n                  country: values.country\n                }\n\n                if (values.dateOfBirth) {\n                  input_vars['dateOfBirth'] = dateToLocalISO(values.dateOfBirth)\n                } \n\n                updateProfile({ variables: {\n                  input: input_vars\n                }, refetchQueries: [\n                    // // Refetch list\n                    // {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()},\n                    // // Refresh local cached results for this account\n                    // {query: GET_ACCOUNT_QUERY, variables: {\"id\": match.params.account_id}}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    toast.success((t('shop.account.profile.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    setSubmitting(false)\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n              <ShopAccountProfileForm\n                isSubmitting={isSubmitting}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                errors={errors}\n                values={values}\n                returnUrl={\"/shop/account\"}\n              />\n            )}\n          </Formik>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountProfileBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountProfile))","import { gql } from \"@apollo/client\"\n\n\nexport const QUERY_ACCOUNT_SUBSCRIPTIONS = gql`\n  query AccountSubscriptions($before: String, $after: String, $account: ID!) {\n    accountSubscriptions(first: 100, before: $before, after: $after, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          organizationSubscription {\n            name\n          }\n          dateStart\n          dateEnd\n        }\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountProfileBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n          </Page.Header>\n          { children }\n        </Container>\n      </div>\n    </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountProfileBase))","// @flow\n\nimport React, { useContext} from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Card,\n  Grid,\n  Table\n} from \"tabler-react\";\nimport { QUERY_ACCOUNT_SUBSCRIPTIONS } from \"./queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountSubscriptionsBase from \"./ShopAccountSubscriptionsBase\"\nimport ContentCard from \"../../../general/ContentCard\"\n\n\nfunction ShopAccountSubscriptions({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  // Chain queries. First query user data and then query invoices for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(QUERY_ACCOUNT_SUBSCRIPTIONS, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })\n  \n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountSubscriptionsBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountSubscriptionsBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountSubscriptionsBase>\n      {t(\"shop.account.subscriptions.error_loading_data\")}\n    </ShopAccountSubscriptionsBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = data.user\n  const subscriptions = data.accountSubscriptions\n\n  // Empty list\n  if (!subscriptions.edges.length) {\n    return (\n      <ShopAccountSubscriptionsBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.subscriptions.title')} >\n              <Card.Body>\n                {t('shop.account.subscriptions.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountSubscriptionsBase>\n    )  \n  }\n\n  // Populated list\n  return (\n    <ShopAccountSubscriptionsBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <ContentCard cardTitle={t('shop.account.subscriptions.title')}\n            // headerContent={headerOptions}\n            pageInfo={subscriptions.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: subscriptions.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.accountSubscriptions.edges\n                  const pageInfo = fetchMoreResult.accountSubscriptions.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        accountSubscriptions: {\n                          __typename: previousResult.accountSubscriptions.__typename,\n                          edges: [ ...previousResult.accountSubscriptions.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {subscriptions.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      {node.organizationSubscription.name}\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateStart).format(dateFormat)}\n                    </Table.Col>\n                    <Table.Col>\n                      { (node.dateEnd) ? moment(node.dateEnd).format(dateFormat) : \"\" }\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </ContentCard>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountSubscriptionsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountSubscriptions))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nconst ShopClassBookBack = ({ t }) => (\n  <Link to={\"/shop/classes\"} >\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(withRouter(ShopClassBookBack))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Container,\n  Tag,\n} from \"tabler-react\";\n\n\nfunction ShopCheckoutProgress({ t, match, history, checkoutProgress=\"\" }) {\n  let color_order = \"\" \n  let color_payment = \"\"\n  let color_complete = \"\"\n\n  switch(checkoutProgress) {\n    case \"order\":\n      color_order = \"info\"\n      break\n    case \"payment\":\n      color_order = \"success\"\n      color_payment = \"info\"\n      break      \n    case \"complete\":\n      color_order = \"success\"\n      color_payment = \"success\"\n      color_complete = \"success\"\n      break      \n  }\n\n  return (\n    <div className=\"d-flex justify-content-center mb-4\">\n    <Tag.List>\n      <Tag color={color_order} addOn={<Icon name=\"shopping-cart\"/>}>\n        {t(\"shop.checkout_progress.order\")} \n      </Tag>\n      <Tag color={color_payment} addOn={<Icon name=\"credit-card\" />}>\n        {t(\"shop.checkout_progress.payment\")} \n      </Tag>\n      <Tag color={color_complete} addOn={<Icon name=\"check\" />}>\n        {t(\"shop.checkout_progress.complete\")}\n      </Tag>\n    </Tag.List>\n    </div>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutProgress))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../SiteWrapperShop\"\nimport ShopCheckoutProgress from \"./ShopCheckoutProgress\"\n\n\nfunction ShopBase({ t, match, history, children, title, return_url, pageHeaderOptions=\"\", checkoutProgress=false }) {\n\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={title}>\n            <div className=\"page-options d-flex\">\n              {/* Back */}\n              {(return_url) ?\n                <Link to={return_url} \n                      className='btn btn-secondary mr-2'>\n                    <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')} \n                </Link>\n                : \"\"\n              }\n              { pageHeaderOptions }\n            </div>\n          </Page.Header>\n            <Grid.Row>\n              <Grid.Col md={12}>\n                {(checkoutProgress) ?\n                  <ShopCheckoutProgress checkoutProgress={checkoutProgress} />\n                  : \"\" }\n                { children }\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapperShop>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopBase))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../../ShopBase\"\n\nfunction ShopClassBookBase({ t, match, history, children, pageHeaderOptions=\"\" }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")} pageHeaderOptions={pageHeaderOptions}>\n      <h4>{t(\"shop.classes.book.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookBase))","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport { CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"../../../schedule/classes/class/book/queries\"\n// import CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ShopClassBookClasspassBtn({t, match, history, classpass}) {\n  console.log(classpass)\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  const createInput = {\n    \"scheduleItem\": schedule_item_id,\n    \"accountClasspass\": classpass.accountClasspass.id,\n    \"date\": class_date,\n    \"attendanceType\": \"CLASSPASS\",\n    \"onlineBooking\": true,\n    \"bookingStatus\": \"BOOKED\"\n  }\n\n  const [classCheckin, { data, loading, error, onCompleted }] = useMutation(CREATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loading) {\n    return \"Please wait...\"\n  }\n\n  if (error) {\n    return \"uh oh... error found\"\n  }\n\n  return (\n    <Button \n      block \n      outline \n      color=\"primary\" \n      onClick={() => classCheckin({\n        variables: { \"input\": createInput }, \n        refetchQueries: [\n          // {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, variables: get_attendance_list_query_variables(schedule_item_id, class_date)},\n        ]})\n        .then(({ data }) => {\n            console.log('got data', data);\n            // redirect to class booked page\n            console.log(\"Checkin success!\")\n            history.push(`/shop/classes/booked/${schedule_item_id}/${class_date}`)\n\n            // show message to user\n            // toast.success((t('schedule.classes.class.book.toast_success')), {\n            //   position: toast.POSITION.BOTTOM_RIGHT\n            // })\n          }).catch((error) => {\n            toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            console.log('there was an error sending the query', error)\n          })}\n    >\n      {t(\"general.book\")} <Icon name=\"chevron-right\" />\n    </Button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookClasspassBtn))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport moment from 'moment'\n\nimport {\n  Grid,\n  Card,\n} from \"tabler-react\";\n\nimport ShopClassBookClasspassBtn from \"./ShopClassBookClasspassBtn\"\n\n\nfunction ShopClassBookClasspasses({ t, match, history, classpasses }) {\n  console.log(\"CLASSPASSES\")\n  console.log(classpasses)\n\n  return (\n    classpasses.map((classpass) =>(\n      <Grid.Col md={3}>\n        <Card \n          statusColor=\"blue\"\n          title={t(\"general.classpass\")} >\n        <Card.Body>\n          <b>{classpass.accountClasspass.organizationClasspass.name}</b><br />\n          <span className=\"text-muted\">\n            {t('general.classes_remaining')}: {classpass.accountClasspass.classesRemainingDisplay} <br />\n            {t('general.valid_until')}: {moment(classpass.accountClasspass.dateEnd).format('LL')} <br />\n          </span>\n        </Card.Body>\n        <Card.Footer>\n          {(!classpass.allowed) ? t('schedule.classes.class.book.classpass_not_allowed') :\n            <ShopClassBookClasspassBtn classpass={classpass} />\n          }\n        </Card.Footer>\n        </Card>\n      </Grid.Col>\n    ))\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookClasspasses))\n\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport { CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"../../../schedule/classes/class/book/queries\"\n// import CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ShopClassBookSubscriptionBtn({t, match, history, subscription}) {\n  console.log(subscription)\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  const createInput = {\n    \"scheduleItem\": schedule_item_id,\n    \"accountSubscription\": subscription.accountSubscription.id,\n    \"date\": class_date,\n    \"attendanceType\": \"SUBSCRIPTION\",\n    \"onlineBooking\": true,\n    \"bookingStatus\": \"BOOKED\"\n  }\n\n  const [classCheckin, { data, loading, error, onCompleted }] = useMutation(CREATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loading) {\n    return \"Please wait...\"\n  }\n\n  if (error) {\n    return \"uh oh... error found\"\n  }\n\n  return (\n    <Button \n      block \n      outline \n      color=\"primary\" \n      onClick={() => classCheckin({\n        variables: { \"input\": createInput }, \n        refetchQueries: [\n          // {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, variables: get_attendance_list_query_variables(schedule_item_id, class_date)},\n        ]})\n        .then(({ data }) => {\n            console.log('got data', data);\n            // redirect to class booked page\n            console.log(\"Checkin success!\")\n            history.push(`/shop/classes/booked/${schedule_item_id}/${class_date}`)\n\n            // show message to user\n            // toast.success((t('schedule.classes.class.book.toast_success')), {\n            //   position: toast.POSITION.BOTTOM_RIGHT\n            // })\n          }).catch((error) => {\n            toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            console.log('there was an error sending the query', error)\n          })}\n    >\n      {t(\"general.book\")} <Icon name=\"chevron-right\" />\n    </Button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookSubscriptionBtn))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport moment from 'moment'\n\nimport {\n  Grid,\n  Card,\n} from \"tabler-react\";\n\nimport ShopClassBookSubscriptionBtn from \"./ShopClassBookSubscriptionBtn\"\n\n\nfunction ShopClassBookSubscriptions({ t, match, history, subscriptions }) {\n  console.log(\"SUBSCRIPTIONS\")\n  console.log(subscriptions)\n\n  return (\n    subscriptions.map((subscription) =>(\n      <Grid.Col md={3}>\n        <Card \n          statusColor=\"blue\"\n          title={t(\"general.subscription\")} >\n        <Card.Body>\n          <b>{subscription.accountSubscription.organizationSubscription.name}</b><br />\n          <span className=\"text-muted\">\n            {t(\"general.credits_remaining\")}: {subscription.accountSubscription.creditTotal}\n          </span>\n        </Card.Body>\n        <Card.Footer>\n          {(!subscription.allowed) ? t('schedule.classes.class.book.subscription_not_allowed') :\n            <ShopClassBookSubscriptionBtn subscription={subscription} />\n          }\n        </Card.Footer>\n        </Card>\n      </Grid.Col>\n    ))\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookSubscriptions))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\";\n\n\nfunction ShopClassBookPriceBtn({t, match, history, price}) {\n  console.log(price)\n  const classpassId = price.id\n  const scheduleItemId = match.params.class_id\n  const classDate = match.params.date\n\n  return (\n    <Link to={`/shop/classpass/${classpassId}/${scheduleItemId}/${classDate}`}>\n    <Button \n      block \n      outline \n      color=\"primary\" \n    >\n      {t(\"shop.classes.book.pay_and_book\")} <Icon name=\"chevron-right\" />\n    </Button>\n    </Link>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopClassBookPriceBtn))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Grid,\n} from \"tabler-react\";\n\nimport ShopClassBookPriceBtn from './ShopClassBookPriceBtn'\n\nfunction ShopClassBookPriceDropin({ \n  t, \n  match, \n  history, \n  priceDropin\n}) {\n\n  return (\n    <Grid.Col md={3}>\n      <Card \n        statusColor=\"blue\"\n        title={t(\"general.dropin\")} >\n      <Card.Body>\n        <b>{priceDropin.priceDisplay}</b><br />\n        {t(\"shop.classes.book.dropin_pay_and_book\")} <br />\n      </Card.Body>\n      <Card.Footer>\n        <ShopClassBookPriceBtn price={priceDropin} />\n      </Card.Footer>\n      </Card>\n    </Grid.Col>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookPriceDropin))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Grid,\n} from \"tabler-react\";\n\nimport ShopClassBookPriceBtn from './ShopClassBookPriceBtn'\n\nfunction ShopClassBookPriceTrial({ \n  t, \n  match, \n  history, \n  priceTrial\n}) {\n\n  return (\n    <Grid.Col md={3}>\n      <Card \n        statusColor=\"green\"\n        title={t(\"general.trial\")} >\n      <Card.Body>\n        <b>{priceTrial.priceDisplay}</b><br />\n        {t(\"shop.classes.book.trial_pay_and_book\")} <br />\n      </Card.Body>\n      <Card.Footer>\n        <ShopClassBookPriceBtn price={priceTrial} />\n      </Card.Footer>\n      </Card>\n    </Grid.Col>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookPriceTrial))\n\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_BOOKING_OPTIONS_QUERY = gql`\n  query ScheduleClassBookingOptions($scheduleItem:ID!, $date:Date!, $listType:String!) {\n    scheduleClass(scheduleItemId: $scheduleItem, date:$date) {\n      bookingStatus\n    }\n    scheduleClassBookingOptions(scheduleItem: $scheduleItem, date:$date, listType:$listType) {\n      date\n      alreadyBooked\n      account {\n        id\n        fullName\n      }\n      scheduleItem {\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n      }\n    \tscheduleItemPrices {\n        organizationClasspassDropin {\n          id\n          name\n          priceDisplay\n        }\n        organizationClasspassTrial {\n          id\n          name\n          priceDisplay\n        }\n      }\n      classpasses {\n        bookingType \n        allowed\n        accountClasspass {\n          id\n          dateStart\n          dateEnd\n          classesRemainingDisplay\n          organizationClasspass {\n            id\n            name\n          }\n        }\n      }\n      subscriptions {\n        bookingType\n        allowed\n        accountSubscription {\n          id\n          dateStart\n          dateEnd\n          organizationSubscription {\n            id\n            name\n          }\n          creditTotal\n        }\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport { TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport ShopClassBookBack from \"./ShopClassBookBack\"\nimport ShopClassBookBase from \"./ShopClassBookBase\"\nimport ShopClassBookClasspasses from './ShopClassBookClasspasses'\nimport ShopClassBookSubscriptions from \"./ShopClassBookSubscriptions\"\nimport ShopClassBookPriceDropin from \"./ShopClassBookPriceDropin\"\nimport ShopClassBookPriceTrial from \"./ShopClassBookPriceTrial\"\n\nimport { GET_BOOKING_OPTIONS_QUERY } from \"./queries\"\n// import CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ShopClassBook({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const { loading, error, data } = useQuery(\n    GET_BOOKING_OPTIONS_QUERY, {\n      variables: {\n        scheduleItem: schedule_item_id,\n        date: class_date,\n        listType: \"SHOP_BOOK\"\n      }\n    }\n  )\n\n  // Loading\n  if (loading) return (\n    <ShopClassBookBase pageHeaderOptions={<ShopClassBookBack />}>\n      <p>{t('general.loading_with_dots')}</p>\n    </ShopClassBookBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <ShopClassBookBase pageHeaderOptions={<ShopClassBookBack />}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ShopClassBookBase>\n    )\n  }\n  \n  console.log(data)\n  const scheduleClass = data.scheduleClass\n\n  const alreadyBooked = data.scheduleClassBookingOptions.alreadyBooked\n  const account = data.scheduleClassBookingOptions.account\n  const classpasses = data.scheduleClassBookingOptions.classpasses\n  const subscriptions = data.scheduleClassBookingOptions.subscriptions\n  const prices = data.scheduleClassBookingOptions.scheduleItemPrices\n  const scheduleItem = data.scheduleClassBookingOptions.scheduleItem\n\n  const location = scheduleItem.organizationLocationRoom.organizationLocation.name\n  const classType = scheduleItem.organizationClasstype.name\n  const timeStart = moment(TimeStringToJSDateOBJ(scheduleItem.timeStart)).format(timeFormat) \n  const timeEnd = moment(TimeStringToJSDateOBJ(scheduleItem.timeEnd)).format(timeFormat) \n  const date_display = moment(class_date).format(dateFormat)\n  // const subtitle = class_subtitle({\n  //   t: t,\n  //   location: , \n  //   locationRoom: scheduleItem.organizationLocationRoom.name,\n  //   classtype: , \n  //   timeStart: , \n  //   date: class_date\n  // })\n  const class_info = date_display + ' ' + timeStart + ' - ' + timeEnd + ', ' + classType + ' ' + t(\"general.at\") + ' ' + location\n\n  console.log(prices)\n  console.log(\"ALREADY BOOKED\")\n  console.log(alreadyBooked)\n  console.log(scheduleClass.bookingStatus)\n\n  let content\n\n  switch(scheduleClass.bookingStatus) {\n    case \"NOT_YET_OPEN\":\n      const bookingOpenOn = scheduleClass.bookingOpenOn\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.open_on\") + \" \" + moment(bookingOpenOn).format(dateFormat)}\n        </Alert>\n      break\n    case \"CANCELLED\":\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.cancelled\")}\n        </Alert>\n      break\n    case \"HOLIDAY\":\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.cancelled_holiday\")}\n        </Alert>\n      break\n    case \"FINISHED\":\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.finished\")}\n        </Alert>\n      break\n    case \"ONGOING\":\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.ongoing\")}\n        </Alert>\n      break\n      break\n    case \"FULL\":\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.full\")}\n        </Alert>\n      break\n    case \"OK\":\n      content = <Grid.Row cards deck>\n        <ShopClassBookSubscriptions subscriptions={subscriptions} />\n        <ShopClassBookClasspasses classpasses={classpasses} />\n        {(prices) ?\n          (prices.organizationClasspassDropin) ? \n            <ShopClassBookPriceDropin priceDropin={prices.organizationClasspassDropin}/> : \"\" \n        : \"\" }\n        {(prices) ?\n          (prices.organizationClasspassTrial) ? \n            <ShopClassBookPriceTrial priceTrial={prices.organizationClasspassTrial}/> : \"\" \n          : \"\" } \n      </Grid.Row>\n      break\n    default:\n      content = \"\"\n  }\n\n  return (\n    <ShopClassBookBase pageHeaderOptions={<ShopClassBookBack />}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          { class_info }\n          <div className=\"mt-6\">\n            {(alreadyBooked) ?\n              <Alert type=\"primary\" hasExtraSpace>\n                <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n                {t(\"shop.classes.book.already_booked\")}\n              </Alert>\n              : content\n            }\n          </div>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopClassBookBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBook))\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../../ShopBase\"\n\nfunction ShopClassBookedBase({ t, match, history, children, pageHeaderOptions=\"\" }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")} pageHeaderOptions={pageHeaderOptions}>\n      <h4>{t(\"shop.classes.booked.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookedBase))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_CLASS_QUERY = gql`\n  query ScheduleClass($scheduleItemId: ID!, $date: Date!) {\n    scheduleClass(scheduleItemId: $scheduleItemId, date:$date) {\n      scheduleItemId \n      date\n      organizationLocationRoom {\n        organizationLocation {\n          name\n        }\n      }\n      organizationClasstype {\n        name\n      }\n      timeStart\n      timeEnd\n    }\n  }\n`\n\n\nexport const CREATE_ORDER = gql`\n  mutation CreateFinanceOrder($input: CreateFinanceOrderInput!) {\n    createFinanceOrder(input: $input) {\n      financeOrder {\n        id\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon\n} from \"tabler-react\";\nimport { TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\n// import { toast } from 'react-toastify'\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport ShopClassBookedBase from \"./ShopClassBookedBase\"\nimport { GET_CLASS_QUERY } from \"../../queries\"\n// import CSLS from \"../../../../../tools/cs_local_storage\"\n\nimport { DisplayClassInfo } from \"../../tools\"\n\n\nfunction ShopClassBook({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const { loading, error, data } = useQuery(\n    GET_CLASS_QUERY, {\n      variables: {\n        scheduleItemId: schedule_item_id,\n        date: class_date,\n      }\n    }\n  )\n\n  // Loading\n  if (loading) return (\n    <ShopClassBookedBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </ShopClassBookedBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <ShopClassBookedBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ShopClassBookedBase>\n    )\n  }\n  \n  console.log(data)\n  // TODO: display class info in a card\n\n  \n  return (\n    <ShopClassBookedBase>\n      <Grid.Row cards deck>\n        <Grid.Col md={6}>\n          <Card title={t(\"shop.classes.booked.class\")}>\n            <Card.Body>\n              {t(\"shop.classes.booked.class_explanation\")} <br /><br />\n              <DisplayClassInfo \n                t={t} \n                classDate={class_date}\n                classData={data} \n                dateFormat={dateFormat} \n                timeFormat={timeFormat}\n              />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Card title={t(\"shop.classes.booked.class_info\")}>\n            <Card.Body>\n            Other info here...\n            </Card.Body>\n            <Card.Footer>\n              <Link to={\"/shop/account\"}>\n                <Button\n                  outline\n                  block\n                  color=\"success\"\n                >\n                  {t(\"general.continue\")} <Icon name=\"chevron-right\" />\n                </Button>\n              </Link>\n            </Card.Footer>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopClassBookedBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBook))\n\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\";\nimport ShopBase from \"../../ShopBase\"\n\nfunction ShopClassesScheduleBase({ t, match, history, children, pageHeaderOptions=\"\" }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")} pageHeaderOptions={pageHeaderOptions}>\n      <h4>{t(\"shop.classes.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassesScheduleBase))","import CSLS from \"../../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n    let orderBy\n    let organizationClasstype\n    let organizationLevel\n    let organizationLocation\n  \n    let queryVars = {\n      attendanceCountType: \"ATTENDING_AND_BOOKED\",\n      dateFrom: localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM), \n      dateUntil: localStorage.getItem(CSLS.SHOP_CLASSES_DATE_UNTIL),\n    }\n  \n    // orderBy = localStorage.getItem(CSLS.SHOP_CLASSES_ORDER_BY)\n    // if (orderBy) {\n    //   queryVars.orderBy = orderBy\n    // }\n  \n    organizationClasstype = localStorage.getItem(CSLS.SHOP_CLASSES_FILTER_CLASSTYPE)\n    if (organizationClasstype) {\n      queryVars.organizationClasstype = organizationClasstype\n    } else {\n      queryVars.organizationClasstype = \"\"\n    }\n  \n    organizationLevel = localStorage.getItem(CSLS.SHOP_CLASSES_FILTER_LEVEL)\n    if (organizationLevel) {\n      queryVars.organizationLevel = organizationLevel\n    } else {\n      queryVars.organizationLevel = \"\"\n    }\n  \n    organizationLocation = localStorage.getItem(CSLS.SHOP_CLASSES_FILTER_LOCATION)\n    if (organizationLocation) {\n      queryVars.organizationLocation = organizationLocation\n    } else {\n      queryVars.organizationLocation = \"\"\n    }\n  \n    console.log(queryVars)\n  \n    return queryVars\n  }\n  ","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport CSLS from \"../../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from './tools'\n\nimport { \n  Grid,\n} from \"tabler-react\";\n\n\n\nfunction getDefaultValue(value) {\n  let defaultValue = localStorage.getItem(value)\n  if (defaultValue) {\n    return defaultValue\n  } else {\n    return \"\"\n  }\n}\n\n\nfunction updateLocalStorageAndRefetch(key, value, refetch) {\n  localStorage.setItem(key, value)\n  refetch(get_list_query_variables())\n\n}\n\nconst selectClass = \"form-control custom-select mb-2\"\n\nconst ShopClassesScheduleFilter = ({ t, history, data, refetch }) => (\n  <Grid.Row>\n    <Grid.Col md={4}>\n      {/* Locations */}\n      <select \n        className={selectClass}\n        defaultValue={getDefaultValue(CSLS.SHOP_CLASSES_FILTER_LOCATION)}\n        onChange={ (event) => {\n          updateLocalStorageAndRefetch(\n            CSLS.SHOP_CLASSES_FILTER_LOCATION,\n            event.target.value,\n            refetch\n          )\n        }}\n      >\n        <option value=\"\" key={v4()}>{t(\"shop.classes.filter_all_locations\")}</option>\n        {data.organizationLocations.edges.map(({ node }) =>\n          <option value={node.id} key={v4()}>{node.name}</option>\n        )}\n      </select>\n    </Grid.Col>\n    <Grid.Col md={4}>\n      {/* Classtypes */}\n      <select \n        className={selectClass}\n        defaultValue={getDefaultValue(CSLS.SHOP_CLASSES_FILTER_CLASSTYPE)}\n        onChange={ (event) => {\n          updateLocalStorageAndRefetch(\n            CSLS.SHOP_CLASSES_FILTER_CLASSTYPE,\n            event.target.value,\n            refetch\n          )\n        }}\n      >\n        <option value=\"\" key={v4()}>{t(\"shop.classes.filter_all_classtypes\")}</option>\n        {data.organizationClasstypes.edges.map(({ node }) =>\n          <option value={node.id} key={v4()}>{node.name}</option>\n        )}\n      </select>\n    </Grid.Col>\n    <Grid.Col md={4}>\n      {/* Levels */}\n      <select \n        className={selectClass}\n        defaultValue={getDefaultValue(CSLS.SHOP_CLASSES_FILTER_LEVEL)}\n        onChange={ (event) => {\n          updateLocalStorageAndRefetch(\n            CSLS.SHOP_CLASSES_FILTER_LEVEL,\n            event.target.value,\n            refetch\n          )\n        }}\n      >\n        <option value=\"\" key={v4()}>{t(\"shop.classes.filter_all_levels\")}</option>\n        {data.organizationLevels.edges.map(({ node }) =>\n          <option value={node.id} key={v4()}>{node.name}</option>\n        )}\n      </select>\n    </Grid.Col>\n  </Grid.Row>\n);\n\nexport default withTranslation()(withRouter(ShopClassesScheduleFilter))","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport moment from 'moment'\n\nimport CSLS from \"../../../../tools/cs_local_storage\"\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\n\n\nfunction ShopClassesScheduleButtonBook({ t, match, history, scheduleItemId, classDate, bookingOpenOn, bookingStatus }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  let buttonBook\n  // Uncomment the line below when testing the book component statuses. (Development only)\n  // bookingStatus = \"OK\"\n\n  switch(bookingStatus) {\n    case \"NOT_YET_OPEN\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.open_on\") + \" \" + moment(bookingOpenOn).format(dateFormat)}\n        </span>\n      break\n    case \"CANCELLED\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.cancelled\")}\n        </span>\n      break\n    case \"HOLIDAY\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.cancelled_holiday\")}\n        </span>\n      break\n    case \"FINISHED\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.finished\")}\n        </span>\n      break\n    case \"ONGOING\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.ongoing\")}\n        </span>\n      break\n      break\n    case \"FULL\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.full\")}\n        </span>\n      break\n    case \"OK\":\n      buttonBook = <Link to={`/shop/classes/book/${scheduleItemId}/${classDate}`}>\n          <Button className=\"pull-right\" color=\"primary\" outline>\n            {t(\"general.book\")} <Icon name=\"chevron-right\" />\n          </Button>\n        </Link>\n      break\n    \n    default:\n      buttonBook = \"\"\n  }\n  \n  return buttonBook\n}\n\n\nexport default withTranslation()(withRouter(ShopClassesScheduleButtonBook))\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport moment from 'moment'\n\nimport CSLS from \"../../../../tools/cs_local_storage\"\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Button,\n  Card, \n  Grid,\n  Icon,\n  List,\n  Media,\n  Table,\n} from \"tabler-react\";\nimport ShopClassesScheduleBase from \"./ShopClassesScheduleBase\"\nimport ShopClassesScheduleFilter from \"./ShopClassesScheduleFilter\"\nimport ShopClassesScheduleButtonBook from \"./ShopClassesScheduleButtonBook\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\nimport { GET_CLASSES_QUERY } from \"../../../schedule/classes/queries\"\n\nimport { get_list_query_variables } from './tools'\n\n\nfunction capitalize(word) {\n  const lower = word.toLowerCase();\n  return word.charAt(0).toUpperCase() + lower.slice(1);\n}\n\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM)) {\n  console.log('date from not found... defaulting to today...')\n  localStorage.setItem(CSLS.SHOP_CLASSES_DATE_FROM, moment().format('YYYY-MM-DD')) \n  localStorage.setItem(CSLS.SHOP_CLASSES_DATE_UNTIL, moment().add(6, 'days').format('YYYY-MM-DD')) \n} else {\n  const date_from  = moment(localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM))\n  if (date_from.isBefore(moment(), \"day\")) {\n    localStorage.setItem(CSLS.SHOP_CLASSES_DATE_FROM, moment().format('YYYY-MM-DD')) \n    localStorage.setItem(CSLS.SHOP_CLASSES_DATE_UNTIL, moment().add(6, 'days').format('YYYY-MM-DD')) \n  }\n}\n\n\n\nfunction ShopClassesSchedule({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const title = t(\"shop.home.title\")\n  const { loading, error, data, refetch } = useQuery(GET_CLASSES_QUERY, {\n    variables: get_list_query_variables()\n  })\n\n  if (loading) return (\n    <ShopClassesScheduleBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopClassesScheduleBase>\n  )\n  if (error) return (\n    <ShopClassesScheduleBase title={title}>\n      {t(\"shop.classes.error_loading\")}\n    </ShopClassesScheduleBase>\n  )\n\n  console.log(data)\n  console.log(data.scheduleClasses)\n\n  return (\n    <ShopClassesScheduleBase \n      title={title}\n      pageHeaderOptions={\n        <Button.List className=\"schedule-list-page-options-btn-list\">\n          <Button \n            icon=\"chevron-left\"\n            color=\"secondary\"\n            disabled={ (moment(localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM)).subtract(7, 'days').isBefore(moment(), \"day\")) }\n            onClick={ () => {\n              let prevWeekFrom = moment(localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM)).subtract(7, 'days')\n              let prevWeekUntil = moment(prevWeekFrom).add(6, 'days')\n              \n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_FROM, prevWeekFrom.format('YYYY-MM-DD')) \n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_UNTIL, prevWeekUntil.format('YYYY-MM-DD')) \n\n              refetch(get_list_query_variables())\n          }} />\n          <Button \n            color=\"secondary\"\n            onClick={ () => {\n              let currentWeekFrom = moment()\n              let currentWeekUntil = moment(currentWeekFrom).add(6, 'days')\n\n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_FROM, currentWeekFrom.format('YYYY-MM-DD')) \n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_UNTIL, currentWeekUntil.format('YYYY-MM-DD')) \n              \n              refetch(get_list_query_variables())\n          }} > \n            {t(\"general.today\")}\n          </Button>\n          <Button \n            icon=\"chevron-right\"\n            color=\"secondary\"\n            onClick={ () => {\n              let nextWeekFrom = moment(localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM)).add(7, 'days')\n              let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n              \n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n              refetch(get_list_query_variables())\n          }} />\n        </Button.List> \n      }\n    >\n      \n      <ShopClassesScheduleFilter data={data} refetch={refetch} />\n      {data.scheduleClasses.map(({ date, bookingOpenOn, classes }) =>\n        <Grid.Row key={v4()}>\n          <Grid.Col md={12}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>\n                    <b>{capitalize(moment(date).format(\"dddd\"))}</b> {' '}\n                    <span className=\"text-muted\">\n                      {moment(date).format(\"LL\")} \n                    </span>\n                  </Card.Title>\n                </Card.Header>                \n                {!(classes.length) ? \n                  <Card.Body>\n                    <p>{t('schedule.classes.empty_list')}</p>\n                  </Card.Body> :\n                  <Table cards>\n                    <Table.Body>\n                      {classes.map(({ \n                        scheduleItemId, \n                        frequencyType,\n                        date, \n                        status,\n                        holiday,\n                        holidayName,\n                        description,\n                        account, \n                        role,\n                        account2,\n                        role2,\n                        organizationLocationRoom, \n                        organizationClasstype, \n                        organizationLevel,\n                        timeStart, \n                        timeEnd,\n                        displayPublic,\n                        bookingStatus }) => (\n                          <Table.Row>\n                            <Table.Col>\n                            <h4>\n                              {moment(date + ' ' + timeStart).format(timeFormat)} {' - '}\n                              {moment(date + ' ' + timeEnd).format(timeFormat)} { ' ' }\n                            </h4> \n                            { organizationClasstype.name } { (account) ? ' ' + t(\"general.with\") + ' ' + account.fullName : \"\" } <br />\n                            <span className=\"text-muted\">{ organizationLocationRoom.organizationLocation.name }</span>\n                            </Table.Col>\n                            <Table.Col>\n                              <ShopClassesScheduleButtonBook\n                                scheduleItemId={scheduleItemId}\n                                classDate={date}\n                                bookingOpenOn={bookingOpenOn}\n                                bookingStatus={bookingStatus}\n                              />\n                            </Table.Col>\n                          </Table.Row>\n                        )\n                      )}\n                    </Table.Body>\n                  </Table>\n                }\n              </Card>\n          </Grid.Col>\n        </Grid.Row>\n      )}\n\n    </ShopClassesScheduleBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassesSchedule))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopContactBase({ t, match, history, children, pageHeaderOptions=\"\" }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")} pageHeaderOptions={pageHeaderOptions}>\n      <h4>{t(\"shop.contact.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopContactBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport moment from 'moment'\n\n\nimport {\n  Button,\n  Card, \n  Grid,\n  Icon,\n  List,\n  Media,\n  Table,\n} from \"tabler-react\";\nimport ShopContactBase from \"./ShopContactBase\"\n\nimport { GET_ORGANIZATION_QUERY } from \"../../organization/organization/queries\"\n\n\nfunction ShopContact({ t, match, history }) {\n  // The ID is fixed, as there's only one organization supported at the moment... easy peasy.\n  const { loading, error, data, refetch } = useQuery(GET_ORGANIZATION_QUERY, {\n    variables: { id: \"T3JnYW5pemF0aW9uTm9kZToxMDA=\"}\n  })\n\n  if (loading) return (\n    <ShopContactBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopContactBase>\n  )\n  if (error) return (\n    <ShopContactBase>\n      {t(\"shop.classpasses.error_loading\")}\n    </ShopContactBase>\n  )\n\n  console.log(data)\n  console.log(data.organization)\n\n  const organization = data.organization\n\n  return (\n    <ShopContactBase>\n      <Card title={organization.name}>\n        <Card.Body>\n          <div dangerouslySetInnerHTML={{ __html: organization.address}} />\n          <p>{organization.email} <br /> {organization.phone}</p>\n          <p>{organization.registration} <br /> {organization.taxRegistration}</p>\n        </Card.Body>\n      </Card>\n    </ShopContactBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopContact))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\";\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopEventsBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")}>\n      <h4>{t(\"shop.events.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEventsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_EVENTS_QUERY = gql`\n  query ScheduleEvents($before:String, $after:String) {\n    scheduleEvents(first: 100, before: $before, after:$after, archived:false, displayShop:true) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          displayShop\n          autoSendInfoMail\n          organizationLocation {\n            id\n            name\n          }\n          name\n          tagline\n          preview\n          description\n          organizationLevel {\n            id\n            name\n          }\n          teacher {\n            id \n            fullName\n          }\n          teacher2 {\n            id\n            fullName\n          }\n          dateStart\n          dateEnd\n          timeStart\n          timeEnd\n          infoMailContent\n          scheduleItems {\n            edges {\n              node {\n                id\n              }\n            }\n          }\n          media(first: 1) {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n              startCursor\n              endCursor\n            }\n            edges {\n              node {\n                urlImageThumbnailSmall\n                urlImageThumbnailLarge\n              }\n            }\n          }\n          createdAt\n          updatedAt\n        }\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Grid,\n  Icon,\n  List,\n  GalleryCard\n} from \"tabler-react\";\nimport ShopEventsBase from \"./ShopEventsBase\"\n// import ShopClasspassPricingCard from \"../classpass/ShopClasspassPricingCard\"\n\nimport { GET_SCHEDULE_EVENTS_QUERY } from \"./queries\"\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopEvents({ t, match, history }) {\n  const title = t(\"shop.home.title\")\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENTS_QUERY)\n\n  if (loading) return (\n    <ShopEventsBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopEventsBase>\n  )\n  if (error) return (\n    <ShopEventsBase title={title}>\n      {t(\"shop.classpasses.error_loading\")}\n    </ShopEventsBase>\n  )\n\n  console.log(data)\n  const scheduleEvents = data.scheduleEvents\n  console.log(scheduleEvents)\n\n  return (\n    <ShopEventsBase title={title}>\n        <Grid.Row>\n          {scheduleEvents.edges.map(({ node }) => (\n            <Grid.Col xs={12} sm={12} md={6} lg={4} key={v4()}>\n              <GalleryCard>\n                {(node.media.edges.length) ?\n                  <GalleryCard.Image \n                    src={(node.media.edges.length) ? node.media.edges[0].node.urlImageThumbnailLarge: \"\"} \n                    href={`/shop/events/${node.id}`}\n                  /> : \"\" }\n                <GalleryCard.Footer>\n                  <h4>{node.name}</h4>\n                </GalleryCard.Footer>\n                <GalleryCard.Footer>                  \n                  <GalleryCard.Details\n                    fullName={<span className=\"\">{(node.teacher) ? node.teacher.fullName: \"\"}</span>}\n                    dateString={node.organizationLocation.name}\n                  />\n                  <GalleryCard.IconGroup>\n                  <GalleryCard.IconItem \n                    name=\"calendar\"\n                    label={node.dateStart}\n                    right={false}\n                    RootComponent=\"span\"\n                  />\n                  </GalleryCard.IconGroup>\n                </GalleryCard.Footer>\n                <Link to={`/shop/events/${node.id}`}>\n                  <GalleryCard.Footer pt={10}>\n                    <Button\n                      block\n                      color=\"link\"\n                    >\n                      {t(\"shop.events.tell_me_more\")} <Icon name=\"chevron-right\" />\n                    </Button>\n                  </GalleryCard.Footer>\n                </Link>\n              </GalleryCard>\n            </Grid.Col>\n          ))}\n        </Grid.Row>\n\n        \n    </ShopEventsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEvents))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopEventBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      return_url=\"/shop/events\"\n      // checkoutProgress=\"order\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEventBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport moment from 'moment'\n\nimport {\n  Badge,\n  Grid,\n  Icon,\n  List,\n  PricingCard\n} from \"tabler-react\";\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopEventTicketPricingCard({ t, match, eventTicket, showButton=true, active=false }) {\n  // eventTicket should be an object with at least the following values from an organizationClasspass object:\n  // id, name, priceDisplay, \n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  console.log(eventTicket)\n  const ticketScheduleItems = eventTicket.ticketScheduleItems\n\n  const eventId = match.params.event_id\n\n  return (\n    <PricingCard active={active}>\n      <PricingCard.Category>\n        {eventTicket.name}\n        {(eventTicket.isEarlybirdPrice) ? <div><Badge color=\"primary\">{t(\"shop.event.ticket.earlybird_price\")}</Badge></div> : \"\"}\n      </PricingCard.Category>\n      <PricingCard.Price>\n        { (eventTicket.price == 0) ? \n          t(\"shop.event.ticket.free\") :\n          eventTicket.totalPriceDisplay \n        }\n      </PricingCard.Price>\n      <PricingCard.AttributeList>\n        {(eventTicket.isEarlybirdPrice) ? \n          <PricingCard.AttributeItem>\n            {t(\"shop.event.ticket.regular_price\")} {eventTicket.priceDisplay}\n          </PricingCard.AttributeItem>\n          : \"\" \n        }\n        {ticketScheduleItems.edges.map(({ node }) => (\n          <PricingCard.AttributeItem>\n              <Icon name=\"calendar\" /> { \" \" }\n              {moment(node.scheduleItem.dateStart).format(dateFormat)} {\" \"}\n              {/* Start & end time */}\n              {moment(node.scheduleItem.dateStart + ' ' + node.scheduleItem.timeStart).format(timeFormat)} {' - '}\n              {moment(node.scheduleItem.dateStart + ' ' + node.scheduleItem.timeEnd).format(timeFormat)} { ' ' }\n            <br />\n            <small className=\"text-muted\">\n              {node.scheduleItem.name} <Icon name=\"map-pin\" /> {node.scheduleItem.organizationLocationRoom.organizationLocation.name}\n            </small>\n          </PricingCard.AttributeItem>\n        ))}\n      </PricingCard.AttributeList>\n      {(showButton && !eventTicket.isSoldOut) ?\n        <Link to={`/shop/events/${eventId}/ticket/${eventTicket.id}`}>\n          <PricingCard.Button>\n            {t(\"shop.event.ticket.choose\")} <Icon name=\"chevron-right\" />\n          </PricingCard.Button>\n        </Link>\n        : \"\" \n      }\n      {(showButton && eventTicket.isSoldOut) ? \n        <PricingCard.Button \n          className=\"disabled\"\n        >\n          {t('general.sold_out')}\n        </PricingCard.Button> : \"\"}\n    </PricingCard>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEventTicketPricingCard))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_EVENT_QUERY = gql`\nquery ScheduleEvent($id: ID!) {\n  scheduleEvent(id: $id) {\n    id\n    archived\n    displayPublic\n    displayShop\n    autoSendInfoMail\n    organizationLocation {\n      id\n      name\n    }\n    name\n    tagline\n    preview\n    description\n    organizationLevel {\n      id\n      name\n    }\n    teacher {\n      id \n      fullName\n    }\n    teacher2 {\n      id\n      fullName\n    }\n    dateStart\n    dateEnd\n    timeStart\n    timeEnd\n    infoMailContent\n    media(first: 1) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          urlImageThumbnailSmall\n          urlImageThumbnailLarge\n        }\n      }\n    }\n    tickets(first: 100) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          name\n          price\n          priceDisplay\n          totalPrice\n          totalPriceDisplay\n          description\n          isSoldOut\n          isEarlybirdPrice\n          ticketScheduleItems(included: true, orderBy: \"date_start\") {\n           pageInfo{\n            hasNextPage\n            hasPreviousPage\n            startCursor\n            endCursor\n            }\n            edges {\n              node {\n                id\n                included\n                scheduleItem {\n                  name\n                  dateStart\n                  timeStart\n                  timeEnd\n                  organizationLocationRoom {\n                    organizationLocation {\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    createdAt\n    updatedAt\n  }\n}\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport {\n  Card,\n  GalleryCard,\n  Grid,\n  Icon,\n  List\n} from \"tabler-react\"\nimport { TimeStringToJSDateOBJ } from '../../../tools/date_tools'\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport ShopEventBase from \"./ShopEventBase\"\nimport ShopEventTicketPricingCard from \"./ShopEventTicketPricingCard\"\n\nimport { GET_SCHEDULE_EVENT_QUERY } from \"./queries\"\n\n\nfunction ShopEvent({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const title = t(\"shop.home.title\")\n  const eventId = match.params.event_id\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  if (loading) return (\n    <ShopEventBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopEventBase>\n  )\n  if (error) return (\n    <ShopEventBase title={title}>\n      {t(\"shop.event.error_loading\")}\n    </ShopEventBase>\n  )\n\n  console.log(data)\n  const event = data.scheduleEvent\n  const tickets = event.tickets\n  console.log(event)\n\n  return (\n    <ShopEventBase title={title}>\n      <Grid.Row>\n        <Grid.Col xs={12} sm={12} md={12} lg={12}>\n          <h3>{event.name}</h3>\n          <h5>{event.tagline}</h5>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col xs={12} sm={12} md={6} lg={4}>\n          {((event.media.edges.length) ? \n            <GalleryCard>\n              <GalleryCard.Image src={(event.media.edges.length) ? event.media.edges[0].node.urlImageThumbnailLarge : \"\"} />\n              <GalleryCard.Details>\n                {(event.media.edges.length) ? event.media.edges[0].node.description : \"\"}\n              </GalleryCard.Details>\n            </GalleryCard>\n          : \"\" )}\n          <Card title={t(\"general.info\")}>\n            <Card.Body>\n              <h6>{t('general.teacher')}: {(event.teacher) ? event.teacher.fullName: \"\"}</h6>\n              <h6>{t('general.start')}: {(event.dateStart) ? moment(event.dateStart).format(dateFormat): \"\"}</h6>\n              <h6>{t('general.end')}: {(event.dateEnd) ? moment(event.dateEnd).format(dateFormat): \"\"}</h6>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col xs={12} sm={12} md={6} lg={8}>\n          <Card title={t(\"general.description\")}>\n            <Card.Body>\n              <h5>{t('general.description')}</h5>\n              <div dangerouslySetInnerHTML={{ __html: event.description}} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col xs={12} sm={12} md={12} lg={12}>\n          <h3>{t(\"shop.event.tickets\")}</h3>\n        </Grid.Col>\n        {tickets.edges.map(({ node }) => (\n          <Grid.Col xs={12} sm={12} md={6} lg={4}>\n            <ShopEventTicketPricingCard eventID={eventId} eventTicket={node} />\n          </Grid.Col>\n        ))}\n      </Grid.Row>\n    </ShopEventBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEvent))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopEventTicketBase({ t, match, history, children }) {\n  const eventId = match.params.event_id\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      return_url={`/shop/events/${eventId}`}\n      checkoutProgress=\"order\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopEventTicketBase))","const cs_django_links = {\n    EXPORT_TERMS_AND_CONDITIONS: \"/d/export/terms-and-conditions\",\n    EXPORT_PRIVACY_POLICY: \"/d/export/privacy-policy\",\n}\n\nexport default cs_django_links\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport {\n  Button,\n  Form,\n  Icon\n} from \"tabler-react\"\n\nimport cs_django_links from \"../../tools/cs_django_links\"\n\n\nconst ShopClasspassForm = ({ t, isSubmitting, errors }) => (\n    <FoForm>\n      <Form.Group label={t('shop.order.message')}>\n        <Field type=\"text\" \n               component=\"textarea\"\n               name=\"message\" \n               className={(errors.message) ? \"form-control is-invalid\" : \"form-control\"} \n               autoComplete=\"off\" />\n        <ErrorMessage name=\"message\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <small className=\"text-muted\">\n        {t(\"shop.order.by_placing_this_order\")} <br />\n        <ul>\n          <li>{t(\"shop.order.agree_terms\")} {\" \"}\n            <a target=\"_blank\" href={cs_django_links.EXPORT_TERMS_AND_CONDITIONS}>{t(\"general.terms_and_conditions\")}</a>\n          </li>\n          <li>{t(\"shop.order.agree_privacy\")} {\" \"}\n            <a target=\"_blank\" href={cs_django_links.EXPORT_PRIVACY_POLICY}>{t(\"general.privacy_policy\")}</a>\n          </li>\n        </ul>\n      </small>\n      <Button \n        block\n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('shop.place_order')} <Icon name=\"chevron-right\" />\n      </Button>\n    </FoForm>\n)\n\nexport default withTranslation()(withRouter(ShopClasspassForm))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_EVENT_TICKET_QUERY = gql`\n  query ScheduleEventTicket($id: ID!) {\n    scheduleEventTicket(id:$id) {\n      id\n      name\n      price\n      priceDisplay\n      totalPrice\n      totalPriceDisplay\n      description\n      isSoldOut\n      isEarlybirdPrice\n      ticketScheduleItems(included: true, orderBy: \"date_start\") {\n        pageInfo{\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n        }\n        edges {\n          node {\n            id\n            included\n            scheduleItem {\n              name\n              dateStart\n              timeStart\n              timeEnd\n              organizationLocationRoom {\n                organizationLocation {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n      scheduleEvent {\n        id\n        name\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport {\n  Card,\n  Grid,\n  Icon,\n  List\n} from \"tabler-react\"\nimport { TimeStringToJSDateOBJ } from '../../../tools/date_tools'\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport ShopEventTicketBase from \"./ShopEventTicketBase\"\nimport ShopCheckoutForm from \"../ShopCheckoutForm\"\nimport ShopEventTicketPricingCard from \"../event/ShopEventTicketPricingCard\"\n\nimport { GET_SCHEDULE_EVENT_TICKET_QUERY } from \"./queries\"\nimport { CREATE_ORDER } from \"../queries\"\n\n\nfunction ShopEventTicket({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const title = t(\"shop.home.title\")\n  const scheduleEventTicketId = match.params.id\n  const eventId = match.params.event_id\n  const classDate = match.params.date\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_TICKET_QUERY, {\n    variables: { id: scheduleEventTicketId }\n  })\n\n  const [createOrder, { data: createOrderData }] = useMutation(CREATE_ORDER)\n\n\n  if (loading) return (\n    <ShopEventTicketBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopEventTicketBase>\n  )\n  if (error) return (\n    <ShopEventTicketBase title={title}>\n      {t(\"shop.events.ticket.error_loading\")}\n    </ShopEventTicketBase>\n  )\n\n  console.log(data)\n  const eventTicket = data.scheduleEventTicket\n  console.log(eventTicket)\n\n  // Chceck sold out\n  if (eventTicket.isSoldOut) {\n    return (\n      <ShopEventTicketBase title={title}>\n        <Card title={t(\"shop.events.ticket.sold_out_title\")}>\n          <Card.Body>{t(\"shop.events.ticket.sold_out\")}</Card.Body>\n        </Card>\n      </ShopEventTicketBase>\n    )\n  }\n\n  return (\n    <ShopEventTicketBase title={title}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <h3>{eventTicket.scheduleEvent.name}</h3>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col md={4}>\n          <ShopEventTicketPricingCard eventId={eventId} eventTicket={eventTicket} showButton={false} active={true} />\n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"shop.events.ticket.additional_info\")}>\n            <Card.Body>\n              {(eventTicket.description) ?\n                <div dangerouslySetInnerHTML={{ __html: eventTicket.description}} />\n              : t(\"shop.events.ticket.no_additional_info\")}\n            </Card.Body>\n          </Card> \n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"shop.checkout.title\")}>\n            <Card.Body>\n              <Formik\n                initialValues={{ message: \"\" }}\n                // validationSchema={CLASSTYPE_SCHEMA}\n                onSubmit={(values, { setSubmitting }) => {\n\n                    let createOrderInput = {\n                      message: values.message,\n                      scheduleEventTicket: match.params.id,\n                    }\n\n\n                    createOrder({ variables: {\n                      input: createOrderInput,\n                      // file: values.image\n                    }, refetchQueries: [\n                        // {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": false }}\n                    ]})\n                    .then(({ data }) => {\n                        console.log('got data', data)\n                        console.log('good...  now redirect to the payment page')\n                        const orderId = data.createFinanceOrder.financeOrder.id\n                        history.push('/shop/checkout/payment/' + orderId)\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error)\n                        setSubmitting(false)\n                      })\n                }}\n                >\n                {({ isSubmitting, errors, values }) => (\n                  <ShopCheckoutForm \n                    isSubmitting={isSubmitting}\n                    errors={errors}\n                    values={values}\n                  />\n                )}\n              </Formik>\n\n              {/* When a user is not logged in, show a login button to redirect to the login page */}\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopEventTicketBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEventTicket))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { gql } from \"@apollo/client\"\n\nexport const GET_SHOP_ANNOUNCEMENTS_QUERY = gql`\n  query OrganizationAnnouncements($after: String, $before: String) {\n    organizationAnnouncements(first: 100, before: $before, after: $after, displayPublic: true, displayShop: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          displayPublic\n          displayShop\n          title\n          content\n          dateStart\n          dateEnd\n          priority\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n// import { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\n// import {\n//   Icon,\n//   List\n// } from \"tabler-react\";\nimport ShopBase from \"../ShopBase\"\n\n\nfunction ShopHomeBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase title={t(\"shop.home.title\")}>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopHomeBase))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\n\nimport {\n  Card,\n  Grid,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { GET_SHOP_ANNOUNCEMENTS_QUERY } from \"./queries\"\n\nimport ShopHomeBase from \"./ShopHomeBase\"\n\nfunction ShopHome({ t, match, history }) {\n  \n  const { loading, error, data } = useQuery(GET_SHOP_ANNOUNCEMENTS_QUERY);\n\n  if (loading) return (\n    <ShopHomeBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopHomeBase>\n  )\n  if (error) return (\n    <ShopHomeBase>\n      {t(\"shop.home.announcements.error_loading\")}\n    </ShopHomeBase>\n  )\n\n  const announcements = data.organizationAnnouncements\n\n  return (\n    <ShopHomeBase title={t(\"shop.home.title\")}>\n      <Grid.Row cards deck>\n        {(announcements.edges.length) ? announcements.edges.map(({ node }) => (\n          <Grid.Col md={6}>\n            <Card title={node.title}>\n              <Card.Body>\n                <div dangerouslySetInnerHTML={{ __html:node.content }}></div>\n              </Card.Body>\n            </Card> \n          </Grid.Col>\n        )) : \"\"\n        }\n      </Grid.Row>\n    </ShopHomeBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopHome))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../../ShopBase\"\n\nfunction ShopCheckoutPaymentBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      checkoutProgress=\"payment\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutPaymentBase))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ORDER_QUERY = gql`\n  query FinanceOrder($id: ID!) {\n    financeOrder(id: $id) {\n      id\n      orderNumber\n      account {\n        id\n        fullName\n      }\n      message\n      status\n      total\n      totalDisplay\n      createdAt\n      items {\n        edges {\n          node {\n            id\n            productName\n            description\n            quantity\n            totalDisplay\n            scheduleItem {\n              id\n            }\n            attendanceDate\n          }\n        }\n      }\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { v4 } from 'uuid'\n\nimport {\n  Card,\n  Icon,\n  Table,\n} from \"tabler-react\";\n\nimport { GET_ORDER_QUERY } from \"../queries\"\nimport ShopCheckoutClassInfo from \"../class_info/ShopCheckoutClassInfo\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\nimport { DisplayClassInfo } from '../../tools'\n\n\nfunction ShopCheckoutOrderSummary({ t, id, complete=false }) {\n  const { loading, error, data } = useQuery(GET_ORDER_QUERY, {\n    variables: { id: id }\n  })\n\n  if (loading) return (\n      t(\"general.loading_with_dots\")\n  )\n  if (error) return (\n      t(\"shop.checkout.order_summary.error_loading\")\n  )\n\n  console.log(data)\n  const order = data.financeOrder\n  console.log(order)\n  const orderItems = order.items.edges\n  console.log(orderItems)\n\n  let classDate \n  let scheduleItemId\n  let item\n  console.log(\"Start looping\")\n  for (item of orderItems) {\n    let node = item.node\n    console.log(node)\n    if (node.scheduleItem) {\n      classDate = node.attendanceDate\n      scheduleItemId = node.scheduleItem.id\n    }\n  }\n\n  console.log('schedule item found!')\n  console.log(classDate)\n  console.log(scheduleItemId)\n\n\n  return (\n    <Card title={t(\"shop.checkout.payment.order_summary\")}>\n      <div className=\"table-responsive\">\n        <Table cards={true}>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t('general.item')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {orderItems.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {node.productName} <br /> \n                  <span className=\"text-muted\">\n                    {node.description}\n                  </span>\n                </Table.Col>\n                <Table.Col>{node.totalDisplay}</Table.Col>\n              </Table.Row>      \n            ))}\n            <Table.Row className=\"bold\">\n              <Table.Col>\n                {t(\"general.total\")}\n              </Table.Col>\n              <Table.Col>\n                  {order.totalDisplay}\n              </Table.Col>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </div>\n      <Card.Body>\n        {(order.message) ?\n          <span className=\"text-muted\">\n            <h5><Icon name=\"message-square\" /> {t(\"shop.checkout.order_summary.message\")}</h5> \n            {/* Order message */}\n            {order.message}\n            <br /><br />\n          </span> \n          : \"\"\n        }\n        {(scheduleItemId && classDate) ?\n          <ShopCheckoutClassInfo \n            scheduleItemId={scheduleItemId}\n            date={classDate}\n            complete={complete}\n          />\n          : \"\"\n        }\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutOrderSummary))\n","import { gql } from \"@apollo/client\"\n\n\nexport const CREATE_PAYMENT_LINK = gql`\nmutation CreateFinanceOrderPaymentLink($id: ID!) {\n  createFinanceOrderPaymentLink(id: $id) {\n    financeOrderPaymentLink {\n      paymentLink\n    }\n  }\n}\n`","// @flow\n\nimport React, { useContext, useRef, useState } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n} from \"tabler-react\";\nimport ShopCheckoutPaymentBase from \"./ShopCheckoutPaymentBase\"\nimport ShopCheckoutOrderSummary from \"../order_summary/ShopCheckoutOrderSummary\"\n\nimport { GET_ORDER_QUERY } from \"../queries\"\nimport { CREATE_PAYMENT_LINK } from \"./queries\"\n\n\nfunction ShopCheckoutPayment({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const onlinePaymentsAvailable = appSettings.onlinePaymentsAvailable\n  const btnPayNow = useRef(null);\n  const initialBtnText = <span><Icon name=\"credit-card\" /> {t('shop.checkout.payment.to_payment')} <Icon name=\"chevron-right\" /></span>\n  const [btn_text, setBtnText] = useState(initialBtnText)\n  const title = t(\"shop.home.title\")\n  const id = match.params.id\n  const { loading, error, data } = useQuery(GET_ORDER_QUERY, {\n    variables: { id: id }\n  })\n\n  const [createPaymentLink] = useMutation(CREATE_PAYMENT_LINK)\n\n  if (loading) return (\n    <ShopCheckoutPaymentBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopCheckoutPaymentBase>\n  )\n  if (error) return (\n    <ShopCheckoutPaymentBase title={title}>\n      {t(\"shop.classpass.error_loading\")}\n    </ShopCheckoutPaymentBase>\n  )\n\n  console.log(data)\n  const order = data.financeOrder\n  console.log(order)\n  const orderItems = order.items.edges\n  console.log(orderItems)\n\n  function onClickPay() {\n    btnPayNow.current.setAttribute(\"disabled\", \"disabled\")\n    setBtnText(t(\"shop.checkout.payment.redirecting\"))\n    // btnPayNow.current.setValue(\"redirecting...\")\n    // btnPayNow\n    // btnPayNow.current.removeAttribute(\"disabled\")\n    createPaymentLink({ variables: { id: id } }).then(({ data }) => {\n      console.log('got data', data);\n      const paymentLink = data.createFinanceOrderPaymentLink.financeOrderPaymentLink.paymentLink\n      window.location.href = paymentLink\n    }).catch((error) => {\n      toast.error((t('general.toast_server_error')) + ': ' +  error, {\n          position: toast.POSITION.BOTTOM_RIGHT\n        })\n      console.log('there was an error sending the query', error)\n    })\n  }\n\n  let msgNextStep\n  let buttonNext\n  if (onlinePaymentsAvailable) {\n    msgNextStep = t(\"shop.checkout.payment.order_received_to_payment_text\")\n    buttonNext = <button\n      className=\"btn btn-block btn-success\"\n      ref={btnPayNow}\n      onClick={ onClickPay }\n    >\n      {btn_text}\n    </button>\n  } else {\n    msgNextStep = t(\"shop.checkout.payment.order_received_to_profile_text\")\n    buttonNext = <Link to=\"/\">\n      <Button\n        block\n        color=\"success\"\n      >\n        {t(\"shop.checkout.payment.to_profile\")} <Icon name=\"chevron-right\" />\n      </Button>\n    </Link>\n  }\n\n\n  return (\n    <ShopCheckoutPaymentBase title={title}>\n        <Grid.Row>\n          <Grid.Col md={6}>\n            <Card title={t(\"shop.checkout.payment.order_received\")}>\n              <Card.Body>\n                <h5 className={\"mb-4\"}>{t(\"shop.checkout.payment.order_received_subheader\")}</h5>\n                {t(\"shop.checkout.payment.order_received_to_payment_explanation\")} <br />< br />\n                {msgNextStep}\n              </Card.Body>\n              <Card.Footer>\n                {buttonNext}\n              </Card.Footer>\n            </Card>\n          </Grid.Col>\n          <Grid.Col md={6}>\n            <ShopCheckoutOrderSummary id={id} />\n          </Grid.Col>\n        </Grid.Row>\n    </ShopCheckoutPaymentBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopCheckoutPayment))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../../ShopBase\"\n\nfunction ShopCheckoutCompleteBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      checkoutProgress=\"complete\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutCompleteBase))","// @flow\n\nimport React, { useRef, useState } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon\n} from \"tabler-react\";\nimport ShopCheckoutCompleteBase from \"./ShopCheckoutCompleteBase\"\nimport ShopCheckoutOrderSummary from \"../order_summary/ShopCheckoutOrderSummary\"\n\nimport { GET_ORDER_QUERY } from \"../queries\"\n\n\nfunction ShopCheckoutComplete({ t, match, history }) {\n  const btnPayNow = useRef(null);\n  const initialBtnText = <span><Icon name=\"credit-card\" /> {t('shop.checkout.payment.to_payment')} <Icon name=\"chevron-right\" /></span>\n  const [btn_text, setBtnText] = useState(initialBtnText)\n  const title = t(\"shop.home.title\")\n  const id = match.params.id\n  const { loading, error, data } = useQuery(GET_ORDER_QUERY, {\n    variables: { id: id }\n  })\n\n  if (loading) return (\n    <ShopCheckoutCompleteBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopCheckoutCompleteBase>\n  )\n  if (error) return (\n    <ShopCheckoutCompleteBase title={title}>\n      {t(\"shop.classpass.error_loading\")}\n    </ShopCheckoutCompleteBase>\n  )\n\n  console.log(data)\n  const order = data.financeOrder\n  console.log(order)\n  const orderItems = order.items.edges\n  console.log(orderItems)\n\n  // Order not found\n  if (!order) {\n    return (\n      <ShopCheckoutCompleteBase title={title}>\n        {t(\"shop.checkout.complete.order_not_found\")}\n      </ShopCheckoutCompleteBase>\n    )\n  }\n\n  let subHeader = \"\"\n  let contentText = \"\"\n  let paymentText = \"\"\n  let complete = false\n\n  // Success!\n  if (order.status == \"DELIVERED\") {\n    // Thank you message\n    subHeader = t(\"shop.checkout.complete.success_subheader\") \n    // Something to explain the user what's next\n    contentText = t(\"shop.checkout.complete.success_content_text\")\n    complete = true\n\n    // Confirm receiving payment to user\n    if (order.total) {\n      paymentText = t(\"shop.checkout.complete.success_payment_text\")\n    }\n  } else {\n    // Fail...\n    // Looks like something went wrong message\n    subHeader = t(\"shop.checkout.complete.fail_subheader\") \n    // Notify user of ways to contact\n    contentText = t(\"shop.checkout.complete.fail_content_text\")\n\n    // Notify user that payment hasn't been received\n    if (order.total) {\n      paymentText = t(\"shop.checkout.complete.fail_payment_text\")\n    }\n  }\n\n\n  return (\n    <ShopCheckoutCompleteBase title={title}>\n        <Grid.Row>\n          <Grid.Col md={6}>\n            <Card title={t(\"shop.checkout.complete.title\")}>\n              <Card.Body>\n                <h5 className={\"mb-4\"}>{subHeader}</h5>\n                {paymentText} <br />\n                {contentText}\n              </Card.Body>\n              <Card.Footer>\n                <Link to=\"/shop/account/\">\n                  <Button \n                    block\n                    color=\"success\"\n                  >\n                    {t(\"shop.complete.to_account\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </Card.Footer>\n            </Card>\n          </Grid.Col>\n          <Grid.Col md={6}>\n            <ShopCheckoutOrderSummary id={id} complete={complete} />\n          </Grid.Col>\n        </Grid.Row>\n    </ShopCheckoutCompleteBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutComplete))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ACCOUNT_CLASSES_QUERY = gql`\n  query ScheduleItemAttendance($before: String, $after: String, $account: ID!) {\n    scheduleItemAttendances(first: 20, before: $before, after: $after, account: $account, accountScheduleEventTicket_Isnull: true) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          cancellationPossible\n          attendanceType\n          date\n          bookingStatus\n          scheduleItem {\n            id\n            timeStart\n            timeEnd\n            organizationLocationRoom {\n              name\n              organizationLocation {\n                name\n              }\n            }\n            organizationClasstype {\n              name\n            }\n          }\n        }\n      } \n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountClassesBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountClassesBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport BadgeBookingStatus from '../../../ui/BadgeBookingStatus'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table\n} from \"tabler-react\"\nimport { GET_ACCOUNT_CLASSES_QUERY } from \"./queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountClassesBase from \"./ShopAccountClassesBase\"\nimport ContentCard from \"../../../general/ContentCard\"\n\n\nfunction ShopAccountClasses({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n\n  // Chain queries. First query user data and then query class attendance for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_CLASSES_QUERY, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })\n  // TODO: add cancel class button & query\n  // const [ updateOrder ] = useMutation(UPDATE_ORDER)\n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountClassesBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountClassesBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountClassesBase>\n      {t(\"shop.account.classes.error_loading_data\")}\n    </ShopAccountClassesBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  console.log(dataUser)\n  const user = dataUser.user\n  const scheduleItemAttendances = data.scheduleItemAttendances\n\n  // Empty list\n  if (!scheduleItemAttendances.edges.length) {\n    return (\n      <ShopAccountClassesBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.classes.title')} >\n              <Card.Body>\n                {t('shop.account.classes.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountClassesBase>\n    )  \n  }\n\n\n\n  // Populated list\n  return (\n    <ShopAccountClassesBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <ContentCard cardTitle={t('shop.account.classes.title')}\n            // headerContent={headerOptions}\n            pageInfo={scheduleItemAttendances.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: scheduleItemAttendances.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.schduleItemAttendances.edges\n                  const pageInfo = fetchMoreResult.schduleItemAttendances.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        schduleItemAttendances: {\n                          __typename: previousResult.schduleItemAttendances.__typename,\n                          edges: [ ...previousResult.schduleItemAttendances.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.class')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.booking_status')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>  \n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                { scheduleItemAttendances.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      { moment(node.date).format(dateFormat) } <br />\n                      <span className=\"text-muted\">\n                        {moment(node.date + ' ' + node.scheduleItem.timeStart).format(timeFormat)}\n                      </span>\n                    </Table.Col>\n                    <Table.Col>\n                      { node.scheduleItem.organizationClasstype.name }\n                    </Table.Col>\n                    <Table.Col>\n                      { node.scheduleItem.organizationLocationRoom.organizationLocation.name } <br />\n                      <span className=\"text-muted\">\n                        { node.scheduleItem.organizationLocationRoom.name }\n                      </span> \n                    </Table.Col>\n                    <Table.Col>\n                      <BadgeBookingStatus status={node.bookingStatus} />\n                    </Table.Col>\n                    <Table.Col>\n                      {/* TODO: improve this by adding a \"Can be cancelled field to GQL schema\" */}\n                      {((node.bookingStatus != \"CANCELLED\") && node.cancellationPossible) ?  \n                        <div>\n                          <Link to={`/shop/account/class_cancel/${node.scheduleItem.id}/${node.date}/${node.id}`}>\n                            <Button \n                              className=\"pull-right mr-r\"\n                              color=\"warning\"\n                              >\n                              {t(\"general.cancel\")}\n                            </Button>\n                          </Link>\n                          <Link to={`/shop/account/class_info/${node.scheduleItem.id}/${node.date}`}>\n                            <Button\n                              className=\"pull-right\"\n                              color=\"secondary\"\n                              icon=\"info\"\n                            >\n                              {t(\"general.info\")}\n                            </Button>\n                          </Link>\n                        </div> : \"\"\n                      }\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </ContentCard>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountClassesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountClasses))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\";\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopClasspassesBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")}>\n      <h4>{t(\"shop.classpasses.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspassesBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopClasspassBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      return_url=\"/shop/classpasses\"\n      checkoutProgress=\"order\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspassBase))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_CLASSPASS_QUERY = gql`\n  query OrganizationClasspass($id: ID!) {\n    organizationClasspass(id:$id) {\n      id\n      archived\n      displayPublic\n      displayShop\n      trialPass\n      trialTimes\n      name\n      description\n      price\n      priceDisplay\n      financeTaxRate {\n        id\n        name\n      }\n      validity\n      validityUnit\n      validityUnitDisplay\n      classes\n      unlimited\n      organizationMembership {\n        id\n        name\n      }\n      quickStatsAmount\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Grid,\n  Icon,\n  List,\n  PricingCard\n} from \"tabler-react\";\nimport ShopClasspassesBase from \"./ShopClasspassBase\"\n\nimport { GET_ORGANIZATION_CLASSPASS_QUERY } from \"./queries\"\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopClasspassPricingCard({ t, classpass, btnLink, active=false }) {\n  // classpass should be an object with at least the following values from an organizationClasspass object:\n  // id, name, priceDisplay, unlimited, classes, validity, link\n  return (\n    <PricingCard active={active}>\n      <PricingCard.Category>\n        {classpass.name}\n      </PricingCard.Category>\n      <PricingCard.Price>\n        {classpass.priceDisplay}\n      </PricingCard.Price>\n      <PricingCard.AttributeList>\n        <PricingCard.AttributeItem>\n          <b>{(classpass.unlimited) ? t('general.unlimited') : classpass.classes }</b> { \" \" }\n          {((classpass.classes != 1) || (classpass.unlimited))? t('general.classes'): t('general.class')}\n        </PricingCard.AttributeItem>\n        <PricingCard.AttributeItem>\n          {t('general.valid_for')} { \" \" }\n          <b>{classpass.validity}</b> {' '} {classpass.validityUnitDisplay}\n        </PricingCard.AttributeItem>\n      </PricingCard.AttributeList>\n      {(btnLink) ?\n        <Link to={btnLink}>\n          <PricingCard.Button >\n            {t(\"shop.classpasses.choose\")} <Icon name=\"chevron-right\" />\n          </PricingCard.Button>\n        </Link>\n        : \"\"\n      }\n    </PricingCard>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspassPricingCard))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { gql } from \"@apollo/client\"\n\nexport const GET_ORGANIZATION_CLASSPASSES_QUERY = gql`\n  query OrganizationClasspasses($after: String, $before: String) {\n    organizationClasspasses(first: 15, before: $before, after: $after, archived: false, displayShop: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          displayShop\n          trialPass\n          name\n          description\n          price\n          priceDisplay\n          financeTaxRate {\n            id\n            name\n          }\n          validity\n          validityUnit\n          validityUnitDisplay\n          classes\n          unlimited\n          organizationMembership {\n            id\n            name\n          }\n          quickStatsAmount\n          financeGlaccount {\n            id \n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Grid,\n  Icon,\n  List,\n  PricingCard\n} from \"tabler-react\";\nimport ShopClasspassesBase from \"./ShopClasspassesBase\"\nimport ShopClasspassPricingCard from \"../classpass/ShopClasspassPricingCard\"\n\nimport { GET_ORGANIZATION_CLASSPASSES_QUERY } from \"./queries\"\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopClasspasses({ t, match, history }) {\n  const title = t(\"shop.home.title\")\n  const { loading, error, data } = useQuery(GET_ORGANIZATION_CLASSPASSES_QUERY)\n\n  if (loading) return (\n    <ShopClasspassesBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopClasspassesBase>\n  )\n  if (error) return (\n    <ShopClasspassesBase title={title}>\n      {t(\"shop.classpasses.error_loading\")}\n    </ShopClasspassesBase>\n  )\n\n  console.log(data)\n  const classpasses = data.organizationClasspasses\n  console.log(classpasses)\n\n  return (\n    <ShopClasspassesBase title={title}>\n        <Grid.Row>\n          {classpasses.edges.map(({ node }) => (\n            <Grid.Col md={3}>\n              <ShopClasspassPricingCard\n                classpass={node}\n                btnLink={\"/shop/classpass/\" + node.id}\n              />\n              {/* <PricingCard>\n                <PricingCard.Category>\n                  {node.name}\n                </PricingCard.Category>\n                <PricingCard.Price>\n                  {node.priceDisplay}\n                </PricingCard.Price>\n                <PricingCard.AttributeList>\n                  <PricingCard.AttributeItem>\n                    <b>{(node.unlimited) ? t('general.unlimited') : node.classes }</b> { \" \" }\n                    {((node.classes != 1) || (node.unlimited))? t('general.classes'): t('general.class')}\n                  </PricingCard.AttributeItem>\n                  <PricingCard.AttributeItem>\n                    {t('general.valid_for')} { \" \" }\n                    <b>{node.validity}</b> {' '} {node.validityUnitDisplay}\n                  </PricingCard.AttributeItem>\n                </PricingCard.AttributeList>\n                <Link to={\"/shop/classpass/\" + node.id}>\n                  <PricingCard.Button >\n                    {t(\"shop.classpasses.choose\")} <Icon name=\"chevron-right\" />\n                  </PricingCard.Button>\n                </Link>\n              </PricingCard> */}\n            </Grid.Col>\n          ))}\n        </Grid.Row>\n\n        \n    </ShopClasspassesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspasses))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport {\n  Card,\n  Grid,\n  Icon,\n  List\n} from \"tabler-react\"\nimport { TimeStringToJSDateOBJ } from '../../../tools/date_tools'\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport ShopClasspassBase from \"./ShopClasspassBase\"\nimport ShopCheckoutForm from \"../ShopCheckoutForm\"\nimport ShopClasspassesPricingCard from \"./ShopClasspassPricingCard\"\n\nimport { GET_CLASSPASS_QUERY } from \"./queries\"\nimport { GET_CLASS_QUERY } from \"../queries\"\nimport { CREATE_ORDER } from \"../queries\"\n\n\nfunction ShopClasspass({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const title = t(\"shop.home.title\")\n  const id = match.params.id\n  const scheduleItemId = match.params.class_id\n  const classDate = match.params.date\n\n  const { loading, error, data } = useQuery(GET_CLASSPASS_QUERY, {\n    variables: { id: id }\n  })\n\n  const { loading: loadingClass, error: errorClass, data: dataClass } = useQuery(GET_CLASS_QUERY, {\n    variables: { scheduleItemId: scheduleItemId, date: classDate },\n    skip: (!scheduleItemId || !classDate)\n  })\n\n  const [createOrder, { data: createOrderData }] = useMutation(CREATE_ORDER)\n\n\n  if (loading) return (\n    <ShopClasspassBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopClasspassBase>\n  )\n  if (error) return (\n    <ShopClasspassBase title={title}>\n      {t(\"shop.classpass.error_loading\")}\n    </ShopClasspassBase>\n  )\n\n  console.log(data)\n  const classpass = data.organizationClasspass\n  console.log(classpass)\n\n  console.log('DATA CLASS')\n  console.log(dataClass)\n\n  return (\n    <ShopClasspassBase title={title}>\n      <Grid.Row>\n        <Grid.Col md={4}>\n          <ShopClasspassesPricingCard classpass={classpass} active={true} />\n        </Grid.Col>\n        <Grid.Col md={4}>\n          {(dataClass && !loadingClass && !errorClass) ?\n            <Card title={t(\"shop.classpass.class_book_information\")}>\n              <Card.Body>\n                {t(\"shop.classpass.class_book_explanation\")} <br /><br />\n                <b>\n                  {moment(classDate).format(dateFormat)} {' '}\n                  {moment(TimeStringToJSDateOBJ(dataClass.scheduleClass.timeStart)).format(timeFormat)} {' - '}\n                  {moment(TimeStringToJSDateOBJ(dataClass.scheduleClass.timeEnd)).format(timeFormat)} <br />  \n                </b>\n                {dataClass.scheduleClass.organizationClasstype.name + \" \" + t(\"general.at\") + ' ' + \n                  dataClass.scheduleClass.organizationLocationRoom.organizationLocation.name}\n\n              </Card.Body>\n            </Card>\n            : \"\" \n          }\n          <Card title={t(\"shop.classpass.additional_information\")}>\n            <Card.Body>\n              <div dangerouslySetInnerHTML={{__html:classpass.description}}></div>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"shop.checkout.title\")}>\n            <Card.Body>\n              <Formik\n                initialValues={{ message: \"\" }}\n                // validationSchema={CLASSTYPE_SCHEMA}\n                onSubmit={(values, { setSubmitting }) => {\n\n                    let createOrderInput = {\n                      message: values.message,\n                      organizationClasspass: match.params.id,\n                    }\n\n                    if (scheduleItemId && classDate) {\n                      createOrderInput.attendanceDate = classDate\n                      createOrderInput.scheduleItem = scheduleItemId\n                    }\n\n                    createOrder({ variables: {\n                      input: createOrderInput,\n                      // file: values.image\n                    }, refetchQueries: [\n                        // {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": false }}\n                    ]})\n                    .then(({ data }) => {\n                        console.log('got data', data)\n                        console.log('good...  now redirect to the payment page')\n                        const orderId = data.createFinanceOrder.financeOrder.id\n                        history.push('/shop/checkout/payment/' + orderId)\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error)\n                        setSubmitting(false)\n                      })\n                }}\n                >\n                {({ isSubmitting, errors, values }) => (\n                  <ShopCheckoutForm \n                    isSubmitting={isSubmitting}\n                    errors={errors}\n                    values={values}\n                  />\n                )}\n              </Formik>\n\n              {/* When a user is not logged in, show a login button to redirect to the login page */}\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopClasspassBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspass))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\";\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopSubscriptionsBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")}>\n      <h4>{t(\"shop.subscriptions.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopSubscriptionsBase))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Grid,\n  Icon,\n  List,\n  PricingCard\n} from \"tabler-react\";\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopClasspassPricingCard({ t, subscription, btnLink, active=false }) {\n  // classpass should be an object with at least the following values from an organizationClasspass object:\n  // id, name, priceDisplay, unlimited, classes, validity, link\n  return (\n    <PricingCard active={active}>\n      <PricingCard.Category>\n        {subscription.name}\n      </PricingCard.Category>\n      <PricingCard.Price>\n        {subscription.priceTodayDisplay}\n      </PricingCard.Price>\n      <PricingCard.AttributeList>\n        <PricingCard.AttributeItem>\n          <b>{(subscription.unlimited) ? t('general.unlimited') : subscription.classes }</b> { \" \" }\n          {((subscription.classes != 1) || (subscription.unlimited))? t('general.classes'): t('general.class')} / {t('general.month')}\n        </PricingCard.AttributeItem>\n        <PricingCard.AttributeItem>\n          {t('general.min_duration')} { \" \" }\n          <b>{subscription.minDuration}</b> \n        </PricingCard.AttributeItem>\n      </PricingCard.AttributeList>\n      {(btnLink) ?\n        <Link to={btnLink}>\n          <PricingCard.Button >\n            {t(\"shop.subscriptions.choose\")} <Icon name=\"chevron-right\" />\n          </PricingCard.Button>\n        </Link>\n        : \"\"\n      }\n    </PricingCard>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspassPricingCard))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { gql } from \"@apollo/client\"\n\nexport const GET_ORGANIZATION_SUBSCRIPTIONS_QUERY = gql`\n  query OrganizationSubscriptions($after: String, $before: String) {\n    organizationSubscriptions(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          priceTodayDisplay\n          displayPublic\n          displayShop\n          name\n          description\n          sortOrder\n          minDuration\n          classes\n          subscriptionUnit\n          subscriptionUnitDisplay\n          reconciliationClasses\n          creditValidity\n          unlimited\n          termsAndConditions\n          registrationFee\n          organizationMembership {\n            id\n            name\n          }\n          quickStatsAmount\n          financeGlaccount {\n            id \n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Grid,\n} from \"tabler-react\";\nimport ShopSubscriptionsBase from \"./ShopSubscriptionsBase\"\nimport ShopSubscriptionPricingCard from \"../subscription/ShopSubscriptionPricingCard\"\n\nimport { GET_ORGANIZATION_SUBSCRIPTIONS_QUERY } from \"./queries\"\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopSubscriptions({ t, match, history }) {\n  const title = t(\"shop.home.title\")\n  const { loading, error, data } = useQuery(GET_ORGANIZATION_SUBSCRIPTIONS_QUERY)\n\n  if (loading) return (\n    <ShopSubscriptionsBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopSubscriptionsBase>\n  )\n  if (error) return (\n    <ShopSubscriptionsBase title={title}>\n      {t(\"shop.subscriptions.error_loading\")}\n    </ShopSubscriptionsBase>\n  )\n\n  console.log(data)\n  const subscriptions = data.organizationSubscriptions\n  console.log(subscriptions)\n\n  return (\n    <ShopSubscriptionsBase title={title}>\n        <Grid.Row>\n          {subscriptions.edges.map(({ node }) => (\n            <Grid.Col md={3}>\n              <ShopSubscriptionPricingCard\n                subscription={node}\n                btnLink={\"/shop/subscription/\" + node.id}\n              />\n            </Grid.Col>\n          ))}\n        </Grid.Row>\n\n        \n    </ShopSubscriptionsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopSubscriptions))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopSubscriptionBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      return_url=\"/shop/subscripitons\"\n      checkoutProgress=\"order\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopSubscriptionBase))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SUBSCRIPTION_QUERY = gql`\n  query OrganizationSubscription($id: ID!) {\n    organizationSubscription(id:$id) {\n      id\n      archived\n      priceTodayDisplay\n      displayPublic\n      displayShop\n      name\n      description\n      sortOrder\n      minDuration\n      classes\n      subscriptionUnit\n      subscriptionUnitDisplay\n      reconciliationClasses\n      creditValidity\n      unlimited\n      termsAndConditions\n      registrationFee\n      organizationMembership {\n        id\n        name\n      }\n      quickStatsAmount\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport {\n  Card,\n  Grid,\n  Icon,\n  List\n} from \"tabler-react\"\nimport { TimeStringToJSDateOBJ } from '../../../tools/date_tools'\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport ShopSubscriptionBase from \"./ShopSubscriptionBase\"\nimport ShopCheckoutForm from \"../ShopCheckoutForm\"\nimport ShopSubscriptionPricingCard from \"./ShopSubscriptionPricingCard\"\n\nimport { GET_SUBSCRIPTION_QUERY } from \"./queries\"\n// import { GET_CLASS_QUERY } from \"../queries\"\nimport { CREATE_ORDER } from \"../queries\"\n\n\nfunction ShopSubscription({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const title = t(\"shop.home.title\")\n  const id = match.params.id\n  // const scheduleItemId = match.params.class_id\n  // const classDate = match.params.date\n\n  const { loading, error, data } = useQuery(GET_SUBSCRIPTION_QUERY, {\n    variables: { id: id }\n  })\n\n  // const { loading: loadingClass, error: errorClass, data: dataClass } = useQuery(GET_CLASS_QUERY, {\n  //   variables: { scheduleItemId: scheduleItemId, date: classDate },\n  //   skip: (!scheduleItemId || !classDate)\n  // })\n\n  const [createOrder, { data: createOrderData }] = useMutation(CREATE_ORDER)\n\n\n  if (loading) return (\n    <ShopSubscriptionBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopSubscriptionBase>\n  )\n  if (error) return (\n    <ShopSubscriptionBase title={title}>\n      {t(\"shop.subscription.error_loading\")}\n    </ShopSubscriptionBase>\n  )\n\n  console.log(data)\n  const subscription = data.organizationSubscription\n  console.log(subscription)\n\n\n  return (\n    <ShopSubscriptionBase title={title}>\n      <Grid.Row>\n        <Grid.Col md={4}>\n          <ShopSubscriptionPricingCard subscription={subscription} active={true} />\n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"shop.subscription.additional_information\")}>\n            <Card.Body>\n              <div dangerouslySetInnerHTML={{__html:subscription.description}}></div>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"shop.checkout.title\")}>\n            <Card.Body>\n              <Formik\n                initialValues={{ message: \"\" }}\n                // validationSchema={CLASSTYPE_SCHEMA}\n                onSubmit={(values, { setSubmitting }) => {\n\n                    let createOrderInput = {\n                      message: values.message,\n                      organizationSubscription: match.params.id,\n                    }\n\n                    createOrder({ variables: {\n                      input: createOrderInput,\n                      // file: values.image\n                    }, refetchQueries: [\n                        // {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": false }}\n                    ]})\n                    .then(({ data }) => {\n                        console.log('got data', data)\n                        console.log('good...  now redirect to the payment page')\n                        const orderId = data.createFinanceOrder.financeOrder.id\n                        history.push('/shop/checkout/payment/' + orderId)\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error)\n                        setSubmitting(false)\n                      })\n                }}\n                >\n                {({ isSubmitting, errors, values }) => (\n                  <ShopCheckoutForm \n                    isSubmitting={isSubmitting}\n                    errors={errors}\n                    values={values}\n                  />\n                )}\n              </Formik>\n              {/* When a user is not logged in, show a login button to redirect to the login page */}\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopSubscriptionBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopSubscription))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const PASSWORD_CHANGE_SCHEMA = Yup.object().shape({\n    passwordCurrent: Yup.string()\n      .required(t('yup.field_required')),\n    passwordNew: Yup.string()\n      .required(t('yup.field_required'))\n      .min(2, t('yup.min_len_9')),\n    passwordNew2: Yup.string()\n      .oneOf([Yup.ref('passwordNew'), null], t('yup.passwords_must_match')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\n// import CSDatePicker from \"../../ui/CSDatePicker\"\n// import ISO_COUNTRY_CODES from \"../../../tools/iso_country_codes\"\n\n\nconst UserPasswordChangeForm = ({ t, history, isSubmitting, errors, values, return_url, setFieldTouched, setFieldValue }) => (\n  <FoForm className=\"card\" autoComplete=\"off\">\n    <Card.Body className=\"p-6\">\n      <Card.Title>\n        {t('user.change_password.title')}\n      </Card.Title>\n      <Form.Group label={t('user.change_password.password_current')}>\n        <Field type=\"password\" \n                name=\"passwordCurrent\" \n                className={(errors.passwordCurrent) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"passwordCurrent\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('user.change_password.password_new')}>\n        <Field type=\"password\" \n                name=\"passwordNew\" \n                className={(errors.passwordNew) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"passwordNew\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('user.change_password.password_new_repeat')}>\n        <Field type=\"password\" \n                name=\"passwordNew2\" \n                className={(errors.passwordNew2) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"passwordNew2\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Footer>\n        <Button \n          block\n          loading={isSubmitting}\n          color=\"primary\"\n          type=\"submit\" \n          disabled={isSubmitting}\n        >\n          {t('user.change_password.title')}\n        </Button>\n      </Form.Footer>\n    </Card.Body>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(UserPasswordChangeForm))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport { ToastContainer, Slide } from 'react-toastify'\n\nimport {\n  Container,\n  Grid,\n  Page\n} from \"tabler-react\"\n\n\nfunction CSStandalonePage({ t, urlLogo=\"\", children}) {\n\n  return (\n    <Page>\n      <div className=\"page-single\">\n        <Container>\n          <Grid.Row>\n            <div className=\"col col-login mx-auto\">            \n              <div className=\"text-center mb-5\">\n                { (urlLogo) ? <img src={urlLogo} className=\"h-9\" alt=\"logo\" /> : \"\" }\n              </div>\n              {children}\n              <ToastContainer \n                autoClose={5000} \n                transition={Slide}\n              />\n            </div>\n          </Grid.Row>\n        </Container>\n      </div>\n    </Page>\n  )\n}\n\nexport default withTranslation()(CSStandalonePage)\n\n\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { PASSWORD_CHANGE_SCHEMA } from './yupSchema'\nimport OrganizationContext from '../../context/OrganizationContext'\n\nimport {\n  Button,\n  Card,\n  Icon,\n  List,\n  StandaloneFormPage,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { UPDATE_ACCOUNT_PASSWORD } from \"../../../queries/system/auth\"\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport UserPasswordChangeForm from './UserPasswordChangeForm';\n\nimport CSStandaloneFormPage from \"../../ui/CSStandaloneFormPage\"\n\n\nfunction UserChangePassword({t, match, history}) {\n  const organization = useContext(OrganizationContext)\n  console.log(organization)\n\n  let errorMessage\n  const [updatePassword, { data }] = useMutation(UPDATE_ACCOUNT_PASSWORD)\n\n  return (\n    <CSStandaloneFormPage urlLogo={organization.urlLogoLogin} >\n      {/* TODO: point imageURL to logo */}\n      <Formik\n        initialValues={{ \n          passwordCurrent: \"\",\n          passwordNew: \"\",\n          passwordNew2: \"\"\n        }}\n        validationSchema={PASSWORD_CHANGE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            let vars = {\n              input: {\n                passwordCurrent: values.passwordCurrent,\n                passwordNew: values.passwordNew\n              }\n            }\n\n            updatePassword({ variables: vars })\n              .then(({ data }) => {\n                console.log('got data', data)\n                setTimeout(() => toast.success((t('user.change_password.success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                }), 300)\n                window.history.back()\n              }).catch((error) => {\n                console.log('#############')\n                console.log(error.messages)\n                console.log(error.graphQLErrors)\n                console.log(Object.keys(error))\n\n                if (error.graphQLErrors) {\n                  let i\n                  for (i = 0; i < error.graphQLErrors.length; i++) {\n                    toast.error(error.graphQLErrors[0].message\n                        .replace(/'/g, \"\")\n                        .replace(/,/g, \"\")\n                        .replace(/\\[/g, \"\")\n                        .replace(/\\]/g, \"\"), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  }\n                } else {\n                  // Show general error message\n                  toast.error((t('general.toast_server_error')) + ': ' +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                }\n                \n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <UserPasswordChangeForm\n            isSubmitting={isSubmitting}\n            etFieldValue={setFieldValue}\n            esetFieldTouched={setFieldTouched}\n            errors={errors}\n            values={values}\n          />\n        )}\n      </Formik>    \n      <h5>{t('user.change_password.requirements')}</h5>\n      <List>\n        <List.Item>{t('user.change_password.requirement_not_a_digit')}</List.Item>\n        <List.Item>{t('user.change_password.requirement_not_common')}</List.Item>\n        <List.Item>{t('user.change_password.requirement_min_length')}</List.Item>\n        <List.Item>{t('user.change_password.requirement_not_similar_account')}</List.Item>\n      </List>\n      {/* Cancel button below form */}\n      <Button \n        block\n        color=\"link\"\n        onClick={(event) => {\n          event.preventDefault()  \n          window.history.back()\n        }}\n      >\n        {t('general.cancel')}\n      </Button>\n    </CSStandaloneFormPage>\n  )\n}\n\n\nexport default withTranslation()(withRouter(UserChangePassword))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\n// import CSDatePicker from \"../../ui/CSDatePicker\"\n// import ISO_COUNTRY_CODES from \"../../../tools/iso_country_codes\"\n\n\nconst UserLoginForm = ({ t, history, isSubmitting, errors }) => (\n  <FoForm className=\"card\" autoComplete=\"off\">\n    <Card.Body className=\"p-6\">\n      <Card.Title>\n        {t('user.login.title')}\n      </Card.Title>\n      <Form.Group label={t('user.login.email')}>\n        <Field type=\"text\" \n                name=\"email\" \n                placeholder={t('user.login.email_placeholder')}\n                className={(errors.email) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"email\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.password')}>\n        <Field type=\"password\" \n                name=\"password\" \n                placeholder={t('user.login.password_placeholder')}\n                className={(errors.password) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"password\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Footer>\n        <Grid.Row>\n          <Grid.Col md={6}>\n            <Button \n              block\n              loading={isSubmitting}\n              color=\"primary\"\n              type=\"submit\" \n              disabled={isSubmitting}\n            >\n              {t('general.login')}\n            </Button>\n          </Grid.Col>\n          <Grid.Col md={6}>\n            <Button \n              color=\"link\"\n              RootComponent=\"a\"\n              href={(window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\") ? \n                \"http://localhost:8000/d/accounts/password/reset/\" :\n                \"/d/accounts/password/reset/\"\n              } \n            >\n              {t('user.register.reset_password')}\n            </Button>\n          </Grid.Col>\n        </Grid.Row>\n      </Form.Footer>\n    </Card.Body>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(UserLoginForm))\n\n","import React, { useContext } from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationContext from '../../context/OrganizationContext'\n\nimport { TOKEN_AUTH, TOKEN_REFRESH } from \"../../../queries/system/auth\"\nimport { CSAuth } from \"../../../tools/authentication\"\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport UserLoginForm from \"./UserLoginForm\"\nimport CSStandaloneFormPage from \"../../ui/CSStandaloneFormPage\"\n\n\nfunction UserLogin({t, match, history}) {\n  const organization = useContext(OrganizationContext)\n  console.log(organization)\n\n  let errorMessage\n  const [ doTokenAuth ] = useMutation(TOKEN_AUTH)\n  const [ doTokenRefresh ] = useMutation(TOKEN_REFRESH)\n\n  return (\n    <CSStandaloneFormPage urlLogo={organization.urlLogoLogin} >\n      <div className=\"text-center text-muted mb-1\">\n        {organization ? organization.name : \"\"}\n      </div>\n      <Formik\n        initialValues={{ \n          email: \"\",\n          password: \"\"\n        }}\n        // validationSchema={ACCOUNT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n            let vars = {\n              username: values.email,\n              password: values.password,\n            }\n\n            doTokenAuth({ variables: vars,\n              refetchQueries: [\n                // // Refetch list\n                // {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()},\n                // // Refresh local cached results for this account\n                // {query: GET_ACCOUNT_QUERY, variables: {\"id\": match.params.account_id}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                // TODO: Add link to \"feature switcher\" here\n                const next = localStorage.getItem(CSLS.AUTH_LOGIN_NEXT) || \"/user/welcome\"\n                CSAuth.login(data.tokenAuth)\n                setTimeout(() => history.push(next), 500)\n            })\n        }}\n        >\n        {({ isSubmitting, errors }) => (\n          <UserLoginForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n          />\n        )}\n      </Formik>    \n      <div className=\"text-center\">\n        <h5>{t('user.register.create_account')}</h5>\n        {t('user.register.create_account_msg')} <br />\n        {t('user.register.create_account_msg_click_below')} <br />\n      </div>\n      <Button \n        block\n        color=\"link\"\n        RootComponent=\"a\"\n        href={(window.location.hostname === \"localhost\" || window.location.hostname === \"dev.costasiella.com\") ? \n          \"http://localhost:8000/d/accounts/signup/\" :\n          \"/d/accounts/signup/\"\n        } \n      >\n        {t('user.register.create_account')} <Icon name=\"chevron-right\" />\n      </Button>\n    </CSStandaloneFormPage>\n  )\n}\n\n\nexport default withTranslation()(withRouter(UserLogin))","// @flow\n\nimport React, { useContext, useState } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { ToastContainer, Slide} from 'react-toastify'\nimport { toast } from 'react-toastify'\n\n// import { GET_ACCOUNTS_QUERY, GET_ACCOUNT_QUERY } from './queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Button,\n  Icon,\n  StandaloneFormPage,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n// import OrganizationContext from '../../context/OrganizationContext'\nimport { CSAuth } from \"../../../tools/authentication\"\nimport CSStandaloneFormPage from \"../../ui/CSStandaloneFormPage\"\n\nfunction UserLoginRequired({t, match, history}) {\n  // const organization = useContext(OrganizationContext)\n  // console.log(organization)\n\n  const [active, setActive] = useState(false);\n\n  return (\n    <CSStandaloneFormPage>\n      {/* TODO: point imageURL to logo */}\n      <Card>\n        <Card.Body>\n          <Card.Title>\n            {t('user.login_required.title')}\n          </Card.Title>\n          {t('user.login_required.message')} <br /><br />\n          <Button \n            block\n            loading={active}\n            disabled={active}\n            color=\"primary\"\n            type=\"button\" \n            onClick={() => {\n              setActive(true)\n              setTimeout(() => history.push('/user/login'), 250)\n            }}\n          >\n            {t('user.login_required.go_to_login')} <Icon name=\"chevron-right\" />\n          </Button>\n        </Card.Body>\n      </Card>\n      <ToastContainer \n          autoClose={5000} \n          transition={Slide}\n      />\n    </CSStandaloneFormPage>\n  )\n}\n\nexport default withTranslation()(withRouter(UserLoginRequired))","// @flow\n\nimport React, { useContext, useState } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n// import { GET_ACCOUNTS_QUERY, GET_ACCOUNT_QUERY } from './queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport OrganizationContext from '../../context/OrganizationContext'\n\nimport {\n  Card,\n  Button,\n  StandaloneFormPage,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { CSAuth } from \"../../../tools/authentication\"\nimport { TOKEN_COOKIE_DELETE, TOKEN_REFRESH_COOKIE_DELETE } from \"../../../queries/system/auth\"\n\nimport CSStandaloneFormPage from \"../../ui/CSStandaloneFormPage\"\n\n\nfunction UserLogout({t, match, history}) {\n  const [ deleteCookie ] = useMutation(TOKEN_COOKIE_DELETE)\n  const [ deleteRefreshCookie ] = useMutation(TOKEN_REFRESH_COOKIE_DELETE)\n  const [active, setActive] = useState(false)\n\n  const organization = useContext(OrganizationContext)\n  console.log(organization)\n\n  return (\n    <CSStandaloneFormPage urlLogo={organization.urlLogoLogin}>\n      {/* TODO: point imageURL to logo */}\n      <Card>\n        <Card.Body>\n          <Card.Title>\n            {t('user.logout.title')}\n          </Card.Title>\n          {t('user.logout.confirmation_message')} <br /><br />\n          <Button \n            block\n            loading={active}\n            disabled={active}\n            color=\"primary\"\n            type=\"button\" \n            onClick={() => {\n              setActive(true)\n              CSAuth.logout()\n              deleteCookie().then(({ data }) => {\n                console.log('got data', data)\n                })\n              .catch((error) => {\n                console.log(error)\n              })\n              deleteRefreshCookie().then(({ data }) => {\n                console.log('got data', data)\n                })\n              .catch((error) => {\n                console.log(error)\n              })\n              setTimeout(() => toast.info(t('user.logout.success'), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              }), 350)\n              setTimeout(() => history.push('/'), 250)\n            }}\n          >\n            {t('general.logout')}\n          </Button>\n        </Card.Body>\n      </Card>\n      <Button \n        block\n        color=\"link\"\n        onClick={(event) => {\n          event.preventDefault()  \n          window.history.back()\n        }}\n      >\n        {t('general.cancel')}\n      </Button>\n    </CSStandaloneFormPage>\n  )\n}\n\nexport default withTranslation()(withRouter(UserLogout))","// @flow\n\nimport React, { useContext, useState } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { ToastContainer } from 'react-toastify'\nimport { toast } from 'react-toastify'\n\n// import { GET_ACCOUNTS_QUERY, GET_ACCOUNT_QUERY } from './queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Button,\n  Icon,\n  StandaloneFormPage,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n// import OrganizationContext from '../../context/OrganizationContext'\nimport { CSAuth } from \"../../../tools/authentication\"\nimport CSStandaloneFormPage from \"../../ui/CSStandaloneFormPage\"\n\nfunction UserSessionExpired({t, match, history}) {\n  // const organization = useContext(OrganizationContext)\n  // console.log(organization)\n\n  const [active, setActive] = useState(false);\n\n  return (\n    <CSStandaloneFormPage>\n      {/* TODO: point imageURL to logo */}\n      <Card>\n        <Card.Body>\n          <Card.Title>\n            {t('user.session_expired.title')}\n          </Card.Title>\n          {t('user.session_expired.message')} <br /><br />\n          <Button \n            block\n            loading={active}\n            disabled={active}\n            color=\"primary\"\n            type=\"button\" \n            onClick={() => {\n              setActive(true)\n              setTimeout(() => history.push('/user/login'), 250)\n            }}\n          >\n            {t('user.session_expired.go_to_login')} <Icon name=\"chevron-right\" />\n          </Button>\n        </Card.Body>\n      </Card>\n      <ToastContainer autoClose={5000}/>\n    </CSStandaloneFormPage>\n  )\n}\n\nexport default withTranslation()(withRouter(UserSessionExpired))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport { ToastContainer, Slide } from 'react-toastify'\n\nimport {\n  Container,\n  Grid,\n  Page\n} from \"tabler-react\"\n\n\nfunction CSStandalonePageWide({ t, urlLogo=\"\", children}) {\n\n  return (\n    <Page>\n      <div className=\"page-single\">\n        <Container>\n          <Grid.Row>\n            <div className=\"col mx-auto\">            \n              <div className=\"text-center mb-5\">\n                { (urlLogo) ? <img src={urlLogo} className=\"h-9\" alt=\"logo\" /> : \"\" }\n              </div>\n              {children}\n              <ToastContainer \n                autoClose={5000} \n                transition={Slide}\n              />\n            </div>\n          </Grid.Row>\n        </Container>\n      </div>\n    </Page>\n  )\n}\n\nexport default withTranslation()(CSStandalonePageWide)\n\n\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport GET_USER_PROFILE from \"../../../queries/system/get_user_profile\"\n\n\nimport OrganizationContext from '../../context/OrganizationContext'\n\nimport {\n  Card,\n  Button,\n  Grid,\n  Icon\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport CSStandalonePageWide from \"../../ui/CSStandalonePageWide\"\n\n\nfunction Welcome({t, match, history}) {\n  const organization = useContext(OrganizationContext)\n  console.log(organization)\n  const { loading, error, data } = useQuery(GET_USER_PROFILE)\n\n  if (loading) return (\n    <CSStandalonePageWide urlLogo={organization.urlLogoLogin}>\n      {t(\"general.loading_with_dots\")}\n    </CSStandalonePageWide>\n  )\n  if (error) return (\n    <CSStandalonePageWide urlLogo={organization.urlLogoLogin}>\n      {t(\"shop.account.class_info.error_loading_data\")}\n    </CSStandalonePageWide>\n  )\n\n  const user = data.user\n  console.log(user)\n\n  if (!user.employee && !user.teacher) {\n    history.push(\"/\")\n  } \n\n\n  return (\n    <CSStandalonePageWide urlLogo={organization.urlLogoLogin}>\n      <div className=\"text-center mb-5\">\n        <h2>{t(\"general.welcome\")} {user.firstName}</h2>\n        <h5>{t(\"user.welcome.where_next_question\")}</h5>\n      </div>\n      <Grid.Row>\n        <Grid.Col md={3} offsetMd={3}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.title\")}</h5>\n              {t(\"user.welcome.shop_explanation\")} <br /><br />\n              <Link to=\"/\">\n                <Button \n                  block\n                  outline\n                  color=\"primary\"\n                >\n                  {t(\"user.welcome.shop_to\")} <Icon name=\"chevron-right\" />\n                </Button>\n              </Link>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={3}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"general.backend\")}</h5>\n              {t(\"user.welcome.backend_explantion\")} <br /><br />\n              <Link to=\"/backend\">\n                <Button \n                  block\n                  outline\n                  color=\"primary\"\n                >\n                  {t(\"user.welcome.backend_to\")} <Icon name=\"chevron-right\" />\n                </Button>\n              </Link>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <HasPermissionWrapper resource=\"selfcheckin\" permission=\"view\">\n          <Grid.Col md={3} offsetMd={3}>\n            <Card>\n              <Card.Body>\n                <h5>{t(\"selfcheckin.home.title\")}</h5>\n                {t(\"user.welcome.selfcheckin_explantion\")} <br /><br />\n                <Link to=\"/selfcheckin\">\n                  <Button \n                    block\n                    outline\n                    color=\"primary\"\n                  >\n                    {t(\"user.welcome.selfcheckin_to\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </HasPermissionWrapper>\n      </Grid.Row>\n    </CSStandalonePageWide>\n  )\n}\n\nexport default withTranslation()(withRouter(Welcome))","// @flow\n\nimport * as React from \"react\";\n\nimport { Error404Page } from \"tabler-react\";\n\ntype Props = {||}\n\nfunction Error404(props: Props): React.Node {\n  return <Error404Page />\n}\n\nexport default Error404\n","// import React, { Component } from 'react';\n// import logo from './logo.svg';\n\nimport React, { Component } from 'react'\nimport {\n  Route, \n  Switch, \n  HashRouter,\n  Redirect\n} from 'react-router-dom'\nimport { withTranslation } from 'react-i18next'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { toast } from 'react-toastify'\n\nimport { GET_APP_SETTINGS_QUERY } from \"./components/settings/general/date_time/queries\"\nimport { GET_ORGANIZATION_QUERY } from \"./components/organization/organization/queries\"\nimport { TOKEN_REFRESH } from \"./queries/system/auth\"\n\n// Import moment locale\nimport moment from 'moment'\nimport 'moment/locale/nl'\n\nimport { AppSettingsProvider } from \"./components/context/AppSettingsContext\"\nimport { OrganizationProvider } from \"./components/context/OrganizationContext\"\n\nimport HomeHome from './components/home/home/HomeHome'\n\nimport AutomationHome from './components/automation/home/AutomationHome'\nimport AutomationAccountSubscriptionCredits from './components/automation/account/subscription/credits/AutomationAccountSubscriptionCredits'\nimport AutomationAccountSubscriptionInvoices from './components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoices'\nimport AutomationAccountSubscriptionInvoicesAdd from './components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoicesAdd'\nimport AutomationAccountSubscriptionCreditAdd from './components/automation/account/subscription/credits/AutomationAccountSubscriptionCreditAdd'\nimport AutomationAccountSubscriptionMollieCollections \n  from './components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollections'\nimport AutomationAccountSubscriptionMollieCollectionAdd\n  from './components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollectionAdd'\n\nimport FinanceHome from './components/finance/home/FinanceHome'\nimport FinanceCostCenters from './components/finance/costcenters/FinanceCostCenters'\nimport FinanceCostCenterAdd from './components/finance/costcenters/FinanceCostCenterAdd'\nimport FinanceCostCenterEdit from './components/finance/costcenters/FinanceCostCenterEdit'\nimport FinanceGLAccounts from './components/finance/glaccounts/FinanceGLAccounts'\nimport FinanceGLAccountAdd from './components/finance/glaccounts/FinanceGLAccountAdd'\nimport FinanceGLAccountEdit from './components/finance/glaccounts/FinanceGLAccountEdit'\nimport FinanceInvoices from './components/finance/invoices/FinanceInvoices'\nimport FinanceInvoiceEdit from './components/finance/invoices/edit/FinanceInvoiceEdit'\nimport FinanceInvoiceGroups from './components/finance/invoices/groups/FinanceInvoiceGroups'\nimport FinanceInvoiceGroupAdd from './components/finance/invoices/groups/FinanceInvoiceGroupAdd'\nimport FinanceInvoiceGroupEdit from './components/finance/invoices/groups/FinanceInvoiceGroupEdit'\nimport FinanceInvoiceGroupDefaults from './components/finance/invoices/groups/defaults/FinanceInvoiceGroupDefaults'\nimport FinanceInvoicePaymentAdd from './components/finance/invoices/payments/FinanceInvoicePaymentAdd'\nimport FinanceInvoicePaymentEdit from './components/finance/invoices/payments/FinanceInvoicePaymentEdit'\nimport FinanceOrders from './components/finance/orders/FinanceOrders'\nimport FinancePaymentBatches from './components/finance/payment_batches/FinancePaymentBatches'\nimport FinancePaymentBatchAddWhat from './components/finance/payment_batches/FinancePaymentBatchAddWhat'\nimport FinancePaymentBatchView from './components/finance/payment_batches/FinancePaymentBatchView'\nimport FinancePaymentCollectionBatchAdd from './components/finance/payment_batches/FinancePaymentCollectionBatchAdd'\nimport FinancePaymentCollectionBatchEdit from './components/finance/payment_batches/FinancePaymentCollectionBatchEdit'\nimport FinancePaymentBatchCategories from './components/finance/payment_batch_categories/FinancePaymentBatchCategories'\nimport FinancePaymentBatchCategoryAdd from './components/finance/payment_batch_categories/FinancePaymentBatchCategoryAdd'\nimport FinancePaymentBatchCategoryEdit from './components/finance/payment_batch_categories/FinancePaymentBatchCategoryEdit'\nimport FinanceOrderEdit from './components/finance/orders/edit/FinanceOrderEdit'\nimport FinancePaymentMethods from './components/finance/payment_methods/FinancePaymentMethods'\nimport FinancePaymentMethodAdd from './components/finance/payment_methods/FinancePaymentMethodAdd'\nimport FinancePaymentMethodEdit from './components/finance/payment_methods/FinancePaymentMethodEdit'\nimport FinanceTaxRates from './components/finance/taxrates/FinanceTaxRates'\nimport FinanceTaxRatesAdd from './components/finance/taxrates/FinanceTaxRateAdd'\nimport FinanceTaxRatesEdit from './components/finance/taxrates/FinanceTaxRateEdit'\n\nimport InsightHome from './components/insight/home/InsightHome'\nimport InsightClasspasses from './components/insight/classpasses/InsightClasspasses'\nimport InsightSubscriptions from './components/insight/subscriptions/InsightSubscriptions'\n\nimport OrganizationHome from './components/organization/home/OrganizationHome'\nimport OrganizationEdit from './components/organization/organization/OrganizationEdit'\nimport OrganizationBranding from './components/organization/organization/branding/OrganizationBranding'\nimport OrganizationBrandingEdit from './components/organization/organization/branding/OrganizationBrandingEdit'\nimport OrganizationAnnouncements from './components/organization/announcements/OrganizationAnnouncements'\nimport OrganizationAnnouncementAdd from './components/organization/announcements/OrganizationAnnouncementAdd'\nimport OrganizationAnnouncementEdit from './components/organization/announcements/OrganizationAnnouncementEdit'\nimport OrganizationAppointments from './components/organization/appointment_categories/appointments/OrganizationAppointments'\nimport OrganizationAppointmentAdd from './components/organization/appointment_categories/appointments/OrganizationAppointmentAdd'\nimport OrganizationAppointmentEdit from './components/organization/appointment_categories/appointments/OrganizationAppointmentEdit'\nimport OrganizationAppointmentCategories from './components/organization/appointment_categories/OrganizationAppointmentCategories'\nimport OrganizationAppointmentCategoryAdd from './components/organization/appointment_categories/OrganizationAppointmentCategoryAdd'\nimport OrganizationAppointmentCategoryEdit from './components/organization/appointment_categories/OrganizationAppointmentCategoryEdit'\nimport OrganizationAppointmentPrices from './components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPrices'\nimport OrganizationAppointmentPriceAdd from './components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPriceAdd'\nimport OrganizationAppointmentPriceEdit from './components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPriceEdit'\nimport OrganizationClasspasses from './components/organization/classpasses/OrganizationClasspasses'\nimport OrganizationClasspassAdd from './components/organization/classpasses/OrganizationClasspassAdd'\nimport OrganizationClasspassEdit from './components/organization/classpasses/OrganizationClasspassEdit'\nimport OrganizationClasspassesGroups from './components/organization/classpasses_groups/OrganizationClasspassesGroups'\nimport OrganizationClasspassesGroupAdd from './components/organization/classpasses_groups/OrganizationClasspassesGroupAdd'\nimport OrganizationClasspassesGroupEdit from './components/organization/classpasses_groups/OrganizationClasspassesGroupEdit'\nimport OrganizationClasspassesGroupEditPasses from './components/organization/classpasses_groups/OrganizationClasspassesGroupEditPasses'\nimport OrganizationClasstypes from './components/organization/classtypes/OrganizationClasstypes'\nimport OrganizationClasstypeAdd from './components/organization/classtypes/OrganizationClasstypeAdd'\nimport OrganizationClasstypeEdit from './components/organization/classtypes/OrganizationClasstypeEdit'\nimport OrganizationClasstypeEditImage from './components/organization/classtypes/OrganizationClasstypeEditImage'\nimport OrganizationDiscoveries from './components/organization/discovery/OrganizationDiscoveries'\nimport OrganizationDiscoveryAdd from './components/organization/discovery/OrganizationDiscoveryAdd'\nimport OrganizationDiscoveryEdit from './components/organization/discovery/OrganizationDiscoveryEdit'\nimport OrganizationDocuments from './components/organization/documents/OrganizationDocuments'\nimport OrganizationListDocuments from './components/organization/documents/OrganizationListDocuments'\nimport OrganizationDocumentAdd from './components/organization/documents/OrganizationDocumentAdd'\nimport OrganizationDocumentEdit from './components/organization/documents/OrganizationDocumentEdit'\nimport OrganizationHolidays from './components/organization/holidays/OrganizationHolidays'\nimport OrganizationHolidayAdd from './components/organization/holidays/OrganizationHolidayAdd'\nimport OrganizationHolidayEdit from './components/organization/holidays/OrganizationHolidayEdit'\nimport OrganizationHolidayEditLocations from './components/organization/holidays/OrganizationHolidayEditLocations'\nimport OrganizationLanguages from './components/organization/languages/OrganizationLanguages'\nimport OrganizationLanguageAdd from './components/organization/languages/OrganizationLanguageAdd'\nimport OrganizationLanguageEdit from './components/organization/languages/OrganizationLanguageEdit'\nimport OrganizationLocations from './components/organization/locations/OrganizationLocations'\nimport OrganizationLocationAdd from './components/organization/locations/OrganizationLocationAdd'\nimport OrganizationLocationEdit from './components/organization/locations/OrganizationLocationEdit'\nimport OrganizationLocationRooms from './components/organization/locations/rooms/OrganizationLocationRooms'\nimport OrganizationLocationRoomAdd from './components/organization/locations/rooms/OrganizationLocationRoomAdd'\nimport OrganizationLocationRoomEdit from './components/organization/locations/rooms/OrganizationLocationRoomEdit'\nimport OrganizationLevels from './components/organization/levels/OrganizationLevels'\nimport OrganizationLevelAdd from './components/organization/levels/OrganizationLevelAdd'\nimport OrganizationLevelEdit from './components/organization/levels/OrganizationLevelEdit'\nimport OrganizationMemberships from './components/organization/memberships/OrganizationMemberships'\nimport OrganizationMembershipAdd from './components/organization/memberships/OrganizationMembershipAdd'\nimport OrganizationMembershipEdit from './components/organization/memberships/OrganizationMembershipEdit'\nimport OrganizationSubscriptions from './components/organization/subscriptions/OrganizationSubscriptions'\nimport OrganizationSubscriptionAdd from './components/organization/subscriptions/OrganizationSubscriptionAdd'\nimport OrganizationSubscriptionEdit from './components/organization/subscriptions/OrganizationSubscriptionEdit'\nimport OrganizationSubscriptionsGroups from './components/organization/subscriptions_groups/OrganizationSubscriptionsGroups'\nimport OrganizationSubscriptionsGroupAdd from './components/organization/subscriptions_groups/OrganizationSubscriptionsGroupAdd'\nimport OrganizationSubscriptionsGroupEdit from './components/organization/subscriptions_groups/OrganizationSubscriptionsGroupEdit'\nimport OrganizationSubscriptionsGroupEditSubscriptions from './components/organization/subscriptions_groups/OrganizationSubscriptionsGroupEditSubscriptions'\nimport OrganizationSubscriptionsPrices from './components/organization/subscriptions/prices/OrganizationSubscriptionsPrices'\nimport OrganizationSubscriptionPriceAdd from './components/organization/subscriptions/prices/OrganizationSubscriptionPriceAdd'\nimport OrganizationSubscriptionPriceEdit from './components/organization/subscriptions/prices/OrganizationSubscriptionPriceEdit'\n\nimport RelationsHome from './components/relations/home/RelationsHome'\nimport RelationsAccounts from './components/relations/accounts/RelationsAccounts'\nimport RelationsAccountAdd from './components/relations/accounts/RelationsAccountAdd'\nimport RelationsAccountProfile from './components/relations/accounts/RelationsAccountProfile'\nimport AccountAcceptedDocuments from './components/relations/accounts/accepted_documents/AcceptedDocuments.jsx'\nimport RelationsAccountBankAccount from './components/relations/accounts/bank_accounts/RelationsAccountBankAccount'\nimport RelationsAccountBankAccountMandateAdd from './components/relations/accounts/bank_accounts/mandates/RelationsAccountBankAccountMandateAdd'\nimport RelationsAccountBankAccountMandateEdit from './components/relations/accounts/bank_accounts/mandates/RelationsAccountBankAccountMandateEdit'\nimport RelationsAccountClasses from './components/relations/accounts/classes/AccountClasses'\nimport AccountClasspasses from './components/relations/accounts/classpasses/AccountClasspasses'\nimport AccountClasspassAdd from './components/relations/accounts/classpasses/AccountClasspassAdd'\nimport AccountClasspassEdit from './components/relations/accounts/classpasses/AccountClasspassEdit'\nimport AccountFinancePaymentBatchCategoryItems from \n  './components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItems'\nimport AccountFinancePaymentBatchCategoryItemAdd from \n'./components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemAdd'\nimport AccountFinancePaymentBatchCategoryItemEdit from \n'./components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemEdit'\nimport AccountInvoices from './components/relations/accounts/invoices/AccountInvoices'\nimport AccountInvoiceAdd from './components/relations/accounts/invoices/AccountInvoiceAdd'\nimport AccountMemberships from './components/relations/accounts/memberships/AccountMemberships'\nimport AccountMembershipAdd from './components/relations/accounts/memberships/AccountMembershipAdd'\nimport AccountMembershipEdit from './components/relations/accounts/memberships/AccountMembershipEdit'\nimport AccountNotes from './components/relations/accounts/notes/AccountNotes.jsx'\nimport AccountNoteAdd from './components/relations/accounts/notes/AccountNoteAdd.jsx'\nimport AccountNoteEdit from './components/relations/accounts/notes/AccountNoteEdit.jsx'\nimport AccountOrders from './components/relations/accounts/orders/AccountOrders'\nimport AccountScheduleEventTickets from './components/relations/accounts/schedule_event_tickets/AccountScheduleEventTickets'\nimport AccountSubscriptions from './components/relations/accounts/subscriptions/AccountSubscriptions'\nimport AccountSubscriptionAdd from './components/relations/accounts/subscriptions/AccountSubscriptionAdd'\nimport AccountSubscriptionEdit from './components/relations/accounts/subscriptions/edit/AccountSubscriptionEdit'\nimport AccountSubscriptionEditAltPrices from './components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPrices'\nimport AccountSubscriptionEditAltPriceAdd from './components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceAdd'\nimport AccountSubscriptionEditAltPriceEdit from './components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceEdit'\nimport AccountSubscriptionEditBlocks from './components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlocks'\nimport AccountSubscriptionEditBlockAdd from './components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockAdd'\nimport AccountSubscriptionEditBlockEdit from './components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockEdit'\nimport AccountSubscriptionEditCredits from './components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCredits'\nimport AccountSubscriptionEditCreditAdd from './components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditAdd'\nimport AccountSubscriptionEditCreditEdit from './components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditEdit'\nimport AccountSubscriptionEditInvoices from './components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoices'\nimport AccountSubscriptionEditInvoiceAdd from './components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoiceAdd'\nimport AccountSubscriptionEditPauses from './components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauses'\nimport AccountSubscriptionEditPauseAdd from './components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseAdd'\nimport AccountSubscriptionEditPauseEdit from './components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseEdit'\nimport RelationsAccountTeacherProfile from './components/relations/accounts/teacher_profile/RelationsAccountTeacherProfile'\nimport RelationsB2B from './components/relations/b2b/RelationsB2B'\nimport RelationsB2BAdd from './components/relations/b2b/RelationsB2BAdd.jsx'\nimport RelationsB2BEdit from './components/relations/b2b/RelationsB2BEdit.jsx'\n\nimport ScheduleHome from './components/schedule/home/ScheduleHome'\nimport ScheduleAppointments from './components/schedule/appointments/ScheduleAppointments'\nimport ScheduleAppointmentAdd from './components/schedule/appointments/ScheduleAppointmentAdd'\nimport ScheduleAppointmentEditAll from './components/schedule/appointments/all/edit/ScheduleAppointmentEditAll'\nimport ScheduleClasses from './components/schedule/classes/ScheduleClasses'\nimport ScheduleClassAdd from './components/schedule/classes/ScheduleClassAdd'\nimport ScheduleClassEditAll from './components/schedule/classes/all/edit/ScheduleClassEditAll'\nimport ScheduleClassClasspasses from './components/schedule/classes/all/classpasses/ScheduleClassClasspasses'\nimport ScheduleClassSubscriptions from './components/schedule/classes/all/subscriptions/ScheduleClassSubscriptions'\nimport ScheduleClassTeachers from './components/schedule/classes/all/teachers/ScheduleClassTeachers'\nimport ScheduleClassTeacherAdd from './components/schedule/classes/all/teachers/ScheduleClassTeacherAdd'\nimport ScheduleClassTeacherEdit from './components/schedule/classes/all/teachers/ScheduleClassTeacherEdit'\nimport ScheduleClassAttendance from './components/schedule/classes/class/attendance/ScheduleClassAttendance'\nimport ScheduleClassBook from './components/schedule/classes/class/book/ScheduleClassBook'\nimport ScheduleClassEdit from './components/schedule/classes/class/edit/ScheduleClassEdit'\nimport ScheduleClassPrices from './components/schedule/classes/all/prices/ScheduleClassPrices'\nimport ScheduleClassPriceAdd from './components/schedule/classes/all/prices/ScheduleClassPriceAdd'\nimport ScheduleClassPriceEdit from './components/schedule/classes/all/prices/ScheduleClassPriceEdit'\nimport ScheduleEvents from './components/schedule/events/ScheduleEvents'\nimport ScheduleEventAdd from './components/schedule/events/ScheduleEventAdd'\nimport ScheduleEventEdit from './components/schedule/events/edit/ScheduleEventEdit'\nimport ScheduleEventActivities from './components/schedule/events/activities/ScheduleEventActivities'\nimport ScheduleEventActivityAdd from './components/schedule/events/activities/ScheduleEventActivityAdd'\nimport ScheduleEventActivityEdit from './components/schedule/events/activities/ScheduleEventActivityEdit'\nimport ScheduleEventActivityAttendance from './components/schedule/events/activities/attendance/ScheduleEventActivityAttendance'\nimport ScheduleEventEarlybirds from './components/schedule/events/earlybirds/ScheduleEventEarlybirds'\nimport ScheduleEventEarlybirdAdd from './components/schedule/events/earlybirds/ScheduleEventEarlybirdAdd'\nimport ScheduleEventEarlybirdEdit from './components/schedule/events/earlybirds/ScheduleEventEarlybirdEdit'\nimport ScheduleEventMedia from './components/schedule/events/media/ScheduleEventMedia'\nimport ScheduleEventMediaAdd from './components/schedule/events/media/ScheduleEventMediaAdd'\nimport ScheduleEventMediaEdit from './components/schedule/events/media/ScheduleEventMediaEdit'\nimport ScheduleEventTickets from './components/schedule/events/tickets/ScheduleEventTickets'\nimport ScheduleEventTicketAdd from './components/schedule/events/tickets/ScheduleEventTicketAdd'\nimport ScheduleEventTicketEdit from './components/schedule/events/tickets/ScheduleEventTicketEdit'\nimport ScheduleEventTicketEditActivities from './components/schedule/events/tickets/activities/ScheduleEventTicketEditActivities'\nimport ScheduleEventTicketEditCustomers from './components/schedule/events/tickets/customers/ScheduleEventTicketEditCustomers'\n\nimport SelfCheckinCheckin from './components/selfcheckin/Checkin/Checkin'\nimport SelfCheckinBookingOptions from './components/selfcheckin/BookingOptions/BookingOptions'\nimport SelfCheckinLocations from './components/selfcheckin/Locations/Locations'\nimport SelfCheckinLocationClasses from './components/selfcheckin/LocationClasses/LocationClasses'\n\nimport SettingsAbout from './components/settings/about/SettingsAbout'\nimport SettingsFinanceBankAccounts from './components/settings/finance/bank_accounts/SettingsFinanceBankAccounts'\nimport SettingsFinanceCurrency from './components/settings/finance/currency/SettingsFinanceCurrency'\nimport SettingsGeneralDateTime from './components/settings/general/date_time/SettingsGeneralDateTime'\nimport SettingsGeneralSystem from './components/settings/general/system/SettingsGeneralSystem'\nimport SettingsHome from './components/settings/home/SettingsHome'\nimport SettingsIntegrationMollie from './components/settings/integration/mollie/SettingsIntegrationMollie'\nimport SettingsMailTemplates from './components/settings/mail/SettingsMailTemplates'\nimport SettingsMailTemplateEdit from './components/settings/mail/SettingsMailTemplateEdit'\nimport SettingsShopFeatures from './components/settings/shop/features/SettingsShopFeatures'\nimport SettingsWorkflowClassBooking from './components/settings/workflow/class_booking/SettingsWorkflowClassBooking'\n\nimport ShopAccountHome from './components/shop/account/home/ShopAccountHome'\nimport ShopAccountClassCancel from './components/shop/account/class_cancel/ShopAccountClassCancel'\nimport ShopAccountClassInfo from './components/shop/account/class_info/ShopAccountClassInfo'\nimport ShopAccountClasspasses from './components/shop/account/classpasses/ShopAccountClasspasses'\nimport ShopAccountEventTickets from './components/shop/account/event_tickets/ShopAccountEventTickets'\nimport ShopAccountInvoicePayment from './components/shop/account/invoice_payment/ShopAccountInvoicePayment'\nimport ShopAccountInvoicePaymentStatus from './components/shop/account/invoice_payment_status/ShopAccountInvoicePaymentStatus'\nimport ShopAccountInvoices from './components/shop/account/invoices/ShopAccountInvoices'\nimport ShopAccountOrders from './components/shop/account/orders/ShopAccountOrders'\nimport ShopAccountProfile from './components/shop/account/profile/ShopAccountProfile'\nimport ShopAccountSubscriptions from './components/shop/account/subscriptions/ShopAccountSubscriptions'\nimport ShopClassBook from './components/shop/classes/book/ShopClassBook'\nimport ShopClassBooked from './components/shop/classes/booked/ShopClassBooked'\nimport ShopClassesSchedule from './components/shop/classes/schedule/ShopClassesSchedule'\nimport ShopContact from './components/shop/contact/ShopContact'\nimport ShopEvents from './components/shop/events/ShopEvents'\nimport ShopEvent from './components/shop/event/ShopEvent'\nimport ShopEventTicket from './components/shop/event_ticket/ShopEventTicket'\nimport ShopHome from './components/shop/home/ShopHome'\nimport ShopCheckoutPayment from './components/shop/checkout/payment/ShopCheckoutPayment'\nimport ShopCheckoutComplete from './components/shop/checkout/complete/ShopCheckoutComplete'\nimport ShopClasses from './components/shop/account/classes/ShopAccountClasses'\nimport ShopClasspasses from './components/shop/classpasses/ShopClasspasses'\nimport ShopClasspass from './components/shop/classpass/ShopClasspass'\nimport ShopSubscriptions from './components/shop/subscriptions/ShopSubscriptions'\nimport ShopSubscription from './components/shop/subscription/ShopSubscription'\n\nimport UserChangePassword from './components/user/password/UserPasswordChange'\nimport UserLogin from './components/user/login/UserLogin'\nimport UserLoginRequired from './components/user/login/UserLoginRequired'\nimport UserLogout from './components/user/login/UserLogout'\nimport UserSessionExpired from './components/user/session/UserSessionExpired'\nimport UserWelcome from './components/user/welcome/UserWelcome'\n\n\nimport Error404 from \"./components/Error404\"\n\nimport CSLS from \"./tools/cs_local_storage\"\nimport { CSAuth } from './tools/authentication'\n\n\nfunction SetCurrentUrlAsNext() {\n  console.log(\"Storing current location as next in local storage\")\n  const currentUrl = window.location.href\n  const next = currentUrl.split(\"#\")[1]\n  console.log(next)\n  localStorage.setItem(CSLS.AUTH_LOGIN_NEXT, next)\n}\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n  let authTokenExpired = false\n  console.log(rest.path)\n\n  const ContinueAsYouAre = <Route {...rest} render={(props) => ( <Component {...props} /> )} />\n  const LoginRequired = <Route {...rest} render={(props) => ( <Redirect to='/user/login/required' /> )} />\n  const SessionExpired = <Route {...rest} render={(props) => ( <Redirect to='/user/session/expired' /> )} />\n  \n  // Check expiration\n  const tokenExp = localStorage.getItem(CSLS.AUTH_TOKEN_EXP)\n  if ((new Date() / 1000) >= tokenExp) {\n    authTokenExpired = true\n  }\n\n  if (authTokenExpired) {\n    const refreshTokenExp = localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN_EXP)\n    if (refreshTokenExp == null) {\n      console.log(\"refresh token not found\")\n      SetCurrentUrlAsNext()\n      \n      return LoginRequired\n    } else if ((new Date() / 1000) >= refreshTokenExp) {\n      console.log(\"refresh token expired\")\n      console.log(new Date() / 1000)\n      console.log(refreshTokenExp)\n      SetCurrentUrlAsNext()\n\n      return SessionExpired\n    } else {\n      // Refresh token\n      console.log(\"auth token expired\")\n      console.log(new Date() / 1000)\n      console.log(refreshTokenExp)\n\n      const refreshToken = localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN)\n      doTokenRefresh({ variables: { refreshToken: refreshToken }}).then(({ data }) => {\n        console.log('got refresh data', data)\n        CSAuth.updateTokenInfo(data.refreshToken)\n        return ContinueAsYouAre\n      }).catch((error) => {\n        toast.error('general.toast_server_error' + ': ' +  error, {\n          position: toast.POSITION.BOTTOM_RIGHT\n        })\n        console.log('there was an error refreshing the token', error) \n        SetCurrentUrlAsNext()\n        console.log(\"REDIRECT BACK TO LOGIN\")\n        window.location.href = \"/#/user/login\"\n        window.location.reload()\n      })\n    }\n  } else {\n    return ContinueAsYouAre\n  }\n  return null\n}\n\n\nfunction AppRoot({ t }) {\n  const { loading: loadingAppSettings, error: errorAppSettings, data: dataAppSettings } = useQuery(GET_APP_SETTINGS_QUERY)\n  const { loading: loadingOrganization, error: errorOrganization, data: dataOrganization } = useQuery(GET_ORGANIZATION_QUERY, {\n    variables: {id: \"T3JnYW5pemF0aW9uTm9kZToxMDA=\"}\n  })\n\n  if (loadingAppSettings || loadingOrganization) return t('general.loading_with_dots')\n  if (errorAppSettings || errorOrganization) {\n    if (errorAppSettings.message == \"Signature has expired\")  {\n      return \"\"\n    } else {\n      return (\n        <div>\n          { t('settings.error_loading') } <br />\n          { errorAppSettings.message } <br />\n          { errorOrganization.message}\n        </div>\n      )\n    }\n  }\n\n  // Register \"US\" locale for moment\n  // moment.locale('en-US')\n  let appSettings = dataAppSettings.appSettings\n  console.log(appSettings)\n  let organization = dataOrganization.organization\n  console.log(organization)\n\n  return (\n    <AppSettingsProvider value={appSettings}>\n      <OrganizationProvider value={organization}>\n        <HashRouter>\n          <Switch>\n            {/* BACKEND HOME */}\n            <PrivateRoute exact path=\"/backend\" component={HomeHome} />\n\n            {/* AUTOMATION */}\n            <PrivateRoute exact path=\"/automation\" component={AutomationHome} />\n            <PrivateRoute exact path=\"/automation/account/subscriptions/credits\" \n                                component={AutomationAccountSubscriptionCredits} />\n            <PrivateRoute exact path=\"/automation/account/subscriptions/credits/add\" \n                                component={AutomationAccountSubscriptionCreditAdd} />\n            <PrivateRoute exact path=\"/automation/account/subscriptions/invoices\" \n                                component={AutomationAccountSubscriptionInvoices} />    \n            <PrivateRoute exact path=\"/automation/account/subscriptions/invoices/add\" \n                                component={AutomationAccountSubscriptionInvoicesAdd} />    \n            <PrivateRoute exact path=\"/automation/account/subscriptions/mollie_collections\" \n                                component={AutomationAccountSubscriptionMollieCollections} />\n            <PrivateRoute exact path=\"/automation/account/subscriptions/mollie_collections/add\" \n                                component={AutomationAccountSubscriptionMollieCollectionAdd} />\n\n            \n            {/* FINANCE */}\n            <PrivateRoute exact path=\"/finance\" component={FinanceHome} />\n            <PrivateRoute exact path=\"/finance/costcenters\" component={FinanceCostCenters} />\n            <PrivateRoute exact path=\"/finance/costcenters/add\" component={FinanceCostCenterAdd} />\n            <PrivateRoute exact path=\"/finance/costcenters/edit/:id\" component={FinanceCostCenterEdit} />\n            <PrivateRoute exact path=\"/finance/invoices\" component={FinanceInvoices} />\n            <PrivateRoute exact path=\"/finance/invoices/edit/:id\" component={FinanceInvoiceEdit} />\n            <PrivateRoute exact path=\"/finance/invoices/groups\" component={FinanceInvoiceGroups} />\n            <PrivateRoute exact path=\"/finance/invoices/groups/add\" component={FinanceInvoiceGroupAdd} />\n            <PrivateRoute exact path=\"/finance/invoices/groups/edit/:id\" component={FinanceInvoiceGroupEdit} />\n            <PrivateRoute exact path=\"/finance/invoices/groups/defaults\" component={FinanceInvoiceGroupDefaults} />\n            <PrivateRoute exact path=\"/finance/invoices/:invoice_id/payment/add\" component={FinanceInvoicePaymentAdd} />\n            <PrivateRoute exact path=\"/finance/invoices/:invoice_id/payment/edit/:id\" component={FinanceInvoicePaymentEdit} />\n            <PrivateRoute exact path=\"/finance/glaccounts\" component={FinanceGLAccounts} />\n            <PrivateRoute exact path=\"/finance/glaccounts/add\" component={FinanceGLAccountAdd} />\n            <PrivateRoute exact path=\"/finance/glaccounts/edit/:id\" component={FinanceGLAccountEdit} />\n            <PrivateRoute exact path=\"/finance/orders\" component={FinanceOrders} />\n            <PrivateRoute exact path=\"/finance/orders/edit/:id\" component={FinanceOrderEdit} />\n            <PrivateRoute exact path=\"/finance/paymentbatches/:batch_type\" component={FinancePaymentBatches} />\n            <PrivateRoute exact path=\"/finance/paymentbatches/:batch_type/add_what\" component={FinancePaymentBatchAddWhat} />\n            <PrivateRoute exact path=\"/finance/paymentbatches/:batch_type/view/:id\" component={FinancePaymentBatchView} />\n            <PrivateRoute exact path=\"/finance/paymentbatches/:batch_type/add/:category_type\" component={FinancePaymentCollectionBatchAdd} />\n            <PrivateRoute exact path=\"/finance/paymentbatches/:batch_type/edit/:id\" component={FinancePaymentCollectionBatchEdit} />\n            <PrivateRoute exact path=\"/finance/paymentbatchcategories\" component={FinancePaymentBatchCategories} />\n            <PrivateRoute exact path=\"/finance/paymentbatchcategories/add\" component={FinancePaymentBatchCategoryAdd} />\n            <PrivateRoute exact path=\"/finance/paymentbatchcategories/edit/:id\" component={FinancePaymentBatchCategoryEdit} />\n            <PrivateRoute exact path=\"/finance/paymentmethods\" component={FinancePaymentMethods} />\n            <PrivateRoute exact path=\"/finance/paymentmethods/add\" component={FinancePaymentMethodAdd} />\n            <PrivateRoute exact path=\"/finance/paymentmethods/edit/:id\" component={FinancePaymentMethodEdit} />\n            <PrivateRoute exact path=\"/finance/taxrates\" component={FinanceTaxRates} />\n            <PrivateRoute exact path=\"/finance/taxrates/add\" component={FinanceTaxRatesAdd} />\n            <PrivateRoute exact path=\"/finance/taxrates/edit/:id\" component={FinanceTaxRatesEdit} />\n            \n            {/* ORGANIZATION */}\n            <PrivateRoute exact path=\"/organization\" component={OrganizationHome} />\n            <PrivateRoute exact path=\"/organization/edit/:id\" component={OrganizationEdit} />\n            <PrivateRoute exact path=\"/organization/edit/:id/branding\" component={OrganizationBranding} />\n            <PrivateRoute exact path=\"/organization/edit/:id/branding/:update_field\" component={OrganizationBrandingEdit} />\n            <PrivateRoute exact path=\"/organization/documents/:organization_id\" component={OrganizationDocuments} />\n            <PrivateRoute exact path=\"/organization/documents/:organization_id/:document_type\" component={OrganizationListDocuments} />\n            <PrivateRoute exact path=\"/organization/documents/:organization_id/:document_type/add\" component={OrganizationDocumentAdd} />\n            <PrivateRoute exact path=\"/organization/documents/:organization_id/:document_type/edit/:id\" component={OrganizationDocumentEdit} />\n            <PrivateRoute exact path=\"/organization/announcements\" component={OrganizationAnnouncements} />\n            <PrivateRoute exact path=\"/organization/announcements/add\" component={OrganizationAnnouncementAdd} />\n            <PrivateRoute exact path=\"/organization/announcements/edit/:id\" component={OrganizationAnnouncementEdit} />\n            <PrivateRoute exact path=\"/organization/appointment_categories\" component={OrganizationAppointmentCategories} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/add\" component={OrganizationAppointmentCategoryAdd} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/edit/:id\" component={OrganizationAppointmentCategoryEdit} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments\" component={OrganizationAppointments} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments/add/\" component={OrganizationAppointmentAdd} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments/edit/:id\" component={OrganizationAppointmentEdit} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments/prices/:appointment_id\" \n                  component={OrganizationAppointmentPrices} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments/prices/:appointment_id/add\" \n                  component={OrganizationAppointmentPriceAdd} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments/prices/:appointment_id/edit/:id\" \n                  component={OrganizationAppointmentPriceEdit} />\n            <PrivateRoute exact path=\"/organization/classpasses\" component={OrganizationClasspasses} />\n            <PrivateRoute exact path=\"/organization/classpasses/add\" component={OrganizationClasspassAdd} />\n            <PrivateRoute exact path=\"/organization/classpasses/edit/:id\" component={OrganizationClasspassEdit} />    \n            <PrivateRoute exact path=\"/organization/classpasses/groups\" component={OrganizationClasspassesGroups} />\n            <PrivateRoute exact path=\"/organization/classpasses/groups/add\" component={OrganizationClasspassesGroupAdd} />\n            <PrivateRoute exact path=\"/organization/classpasses/groups/edit/:id\" component={OrganizationClasspassesGroupEdit} />\n            <PrivateRoute exact path=\"/organization/classpasses/groups/edit/passes/:id\" component={OrganizationClasspassesGroupEditPasses} />\n            <PrivateRoute exact path=\"/organization/classtypes\" component={OrganizationClasstypes} />\n            <PrivateRoute exact path=\"/organization/classtypes/add\" component={OrganizationClasstypeAdd} />\n            <PrivateRoute exact path=\"/organization/classtypes/edit/:id\" component={OrganizationClasstypeEdit} />\n            <PrivateRoute exact path=\"/organization/classtypes/edit_image/:id\" component={OrganizationClasstypeEditImage} />\n            <PrivateRoute exact path=\"/organization/discoveries\" component={OrganizationDiscoveries} />\n            <PrivateRoute exact path=\"/organization/discoveries/add\" component={OrganizationDiscoveryAdd} /> \n            <PrivateRoute exact path=\"/organization/discoveries/edit/:id\" component={OrganizationDiscoveryEdit} /> \n            <PrivateRoute exact path=\"/organization/holidays\" component={OrganizationHolidays} />\n            <PrivateRoute exact path=\"/organization/holidays/add\" component={OrganizationHolidayAdd} />\n            <PrivateRoute exact path=\"/organization/holidays/edit/:id\" component={OrganizationHolidayEdit} />\n            <PrivateRoute exact path=\"/organization/holidays/edit/:id/locations\" component={OrganizationHolidayEditLocations} />\n            <PrivateRoute exact path=\"/organization/languages\" component={OrganizationLanguages} />\n            <PrivateRoute exact path=\"/organization/languages/add\" component={OrganizationLanguageAdd} />\n            <PrivateRoute exact path=\"/organization/languages/edit/:id\" component={OrganizationLanguageEdit} />\n            <PrivateRoute exact path=\"/organization/levels\" component={OrganizationLevels} />\n            <PrivateRoute exact path=\"/organization/levels/add\" component={OrganizationLevelAdd} />\n            <PrivateRoute exact path=\"/organization/levels/edit/:id\" component={OrganizationLevelEdit} />\n            <PrivateRoute exact path=\"/organization/locations\" component={OrganizationLocations} />\n            <PrivateRoute exact path=\"/organization/locations/add\" component={OrganizationLocationAdd} />\n            <PrivateRoute exact path=\"/organization/locations/edit/:id\" component={OrganizationLocationEdit} />\n            <PrivateRoute exact path=\"/organization/locations/rooms/:location_id\" component={OrganizationLocationRooms} />\n            <PrivateRoute exact path=\"/organization/locations/rooms/add/:location_id\" component={OrganizationLocationRoomAdd} />\n            <PrivateRoute exact path=\"/organization/locations/rooms/edit/:location_id/:id\" component={OrganizationLocationRoomEdit} />\n            <PrivateRoute exact path=\"/organization/memberships\" component={OrganizationMemberships} />\n            <PrivateRoute exact path=\"/organization/memberships/add\" component={OrganizationMembershipAdd} />\n            <PrivateRoute exact path=\"/organization/memberships/edit/:id\" component={OrganizationMembershipEdit} /> \n            <PrivateRoute exact path=\"/organization/subscriptions\" component={OrganizationSubscriptions} />\n            <PrivateRoute exact path=\"/organization/subscriptions/add\" component={OrganizationSubscriptionAdd} />\n            <PrivateRoute exact path=\"/organization/subscriptions/edit/:id\" component={OrganizationSubscriptionEdit} />\n            <PrivateRoute exact path=\"/organization/subscriptions/groups\" component={OrganizationSubscriptionsGroups} />\n            <PrivateRoute exact path=\"/organization/subscriptions/groups/add\" component={OrganizationSubscriptionsGroupAdd} />\n            <PrivateRoute exact path=\"/organization/subscriptions/groups/edit/:id\" component={OrganizationSubscriptionsGroupEdit} />\n            <PrivateRoute exact path=\"/organization/subscriptions/groups/edit/subscriptions/:id\" component={OrganizationSubscriptionsGroupEditSubscriptions} />\n            <PrivateRoute exact path=\"/organization/subscriptions/prices/:subscription_id\" component={OrganizationSubscriptionsPrices} />\n            <PrivateRoute exact path=\"/organization/subscriptions/prices/add/:subscription_id\" component={OrganizationSubscriptionPriceAdd} />\n            <PrivateRoute exact path=\"/organization/subscriptions/prices/edit/:subscription_id/:id\" component={OrganizationSubscriptionPriceEdit} />\n\n            {/* RELATIONS */}\n            <PrivateRoute exact path=\"/relations\" component={RelationsHome} />\n            <PrivateRoute exact path=\"/relations/accounts\" component={RelationsAccounts} />\n            <PrivateRoute exact path=\"/relations/accounts/add\" component={RelationsAccountAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/profile\" component={RelationsAccountProfile} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/accepted_documents\" component={AccountAcceptedDocuments} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/bank_accounts\" component={RelationsAccountBankAccount} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/bank_accounts/:bank_account_id/mandates/add\" \n                          component={RelationsAccountBankAccountMandateAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/bank_accounts/:bank_account_id/mandates/edit/:id\" \n                          component={RelationsAccountBankAccountMandateEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/classes\" component={RelationsAccountClasses} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/classpasses\" component={AccountClasspasses} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/classpasses/add\" component={AccountClasspassAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/classpasses/edit/:id\" component={AccountClasspassEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/finance_payment_batch_category_items\" \n                          component={AccountFinancePaymentBatchCategoryItems} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/finance_payment_batch_category_items/add\" \n                          component={AccountFinancePaymentBatchCategoryItemAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/finance_payment_batch_category_items/edit/:id\" \n                          component={AccountFinancePaymentBatchCategoryItemEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/invoices\" component={AccountInvoices} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/invoices/add\" component={AccountInvoiceAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/memberships\" component={AccountMemberships} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/memberships/add\" component={AccountMembershipAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/memberships/edit/:id\" component={AccountMembershipEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/notes\" component={AccountNotes} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/notes/add\" component={AccountNoteAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/notes/edit/:id\" component={AccountNoteEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/orders\" component={AccountOrders} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/event_tickets\" component={AccountScheduleEventTickets} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions\" component={AccountSubscriptions} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/add\" component={AccountSubscriptionAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id\" \n                          component={AccountSubscriptionEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/alt_prices\" \n                          component={AccountSubscriptionEditAltPrices} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/alt_prices/add\" \n                          component={AccountSubscriptionEditAltPriceAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/alt_prices/edit/:id\" \n                          component={AccountSubscriptionEditAltPriceEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/blocks\" component={AccountSubscriptionEditBlocks} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/blocks/add\" component={AccountSubscriptionEditBlockAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/blocks/edit/:id\" \n                          component={AccountSubscriptionEditBlockEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/credits\" component={AccountSubscriptionEditCredits} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/credits/add\" component={AccountSubscriptionEditCreditAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/credits/edit/:id\" \n                          component={AccountSubscriptionEditCreditEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/invoices\" \n              component={AccountSubscriptionEditInvoices} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/invoices/add\" \n              component={AccountSubscriptionEditInvoiceAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/pauses\" component={AccountSubscriptionEditPauses} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/pauses/add\" component={AccountSubscriptionEditPauseAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/pauses/edit/:id\" \n                          component={AccountSubscriptionEditPauseEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/teacher_profile\" component={RelationsAccountTeacherProfile} />\n            <PrivateRoute exact path=\"/relations/b2b\" component={RelationsB2B} />\n            <PrivateRoute exact path=\"/relations/b2b/add\" component={RelationsB2BAdd} />\n            <PrivateRoute exact path=\"/relations/b2b/:business_id/edit\" component={RelationsB2BEdit} />\n\n            {/* SCHEDULE */}\n            <PrivateRoute exact path=\"/schedule\" component={ScheduleHome} />\n            <PrivateRoute exact path=\"/schedule/appointments\" component={ScheduleAppointments} />\n            <PrivateRoute exact path=\"/schedule/appointments/add\" component={ScheduleAppointmentAdd} />\n            <PrivateRoute exact path=\"/schedule/appointments/all/edit/:appointment_id\" component={ScheduleAppointmentEditAll} />\n            <PrivateRoute exact path=\"/schedule/classes\" component={ScheduleClasses} />\n            <PrivateRoute exact path=\"/schedule/classes/add/\" component={ScheduleClassAdd} />\n            <PrivateRoute exact path=\"/schedule/classes/all/edit/:class_id/\" component={ScheduleClassEditAll} />\n            <PrivateRoute exact path=\"/schedule/classes/all/classpasses/:class_id/\" component={ScheduleClassClasspasses} />\n            <PrivateRoute exact path=\"/schedule/classes/all/prices/:class_id/\" component={ScheduleClassPrices} />\n            <PrivateRoute exact path=\"/schedule/classes/all/prices/:class_id/add\" component={ScheduleClassPriceAdd} />\n            <PrivateRoute exact path=\"/schedule/classes/all/prices/:class_id/edit/:id\" component={ScheduleClassPriceEdit} />\n            <PrivateRoute exact path=\"/schedule/classes/all/subscriptions/:class_id/\" component={ScheduleClassSubscriptions} />\n            <PrivateRoute exact path=\"/schedule/classes/all/teachers/:class_id/\" component={ScheduleClassTeachers} />\n            <PrivateRoute exact path=\"/schedule/classes/all/teachers/:class_id/add\" component={ScheduleClassTeacherAdd} />\n            <PrivateRoute exact path=\"/schedule/classes/all/teachers/:class_id/edit/:id\" component={ScheduleClassTeacherEdit} />\n            <PrivateRoute exact path=\"/schedule/classes/class/attendance/:class_id/:date\" component={ScheduleClassAttendance} />\n            <PrivateRoute exact path=\"/schedule/classes/class/book/:class_id/:date/:account_id\" component={ScheduleClassBook} />\n            <PrivateRoute exact path=\"/schedule/classes/class/edit/:class_id/:date\" component={ScheduleClassEdit} />\n            <PrivateRoute exact path=\"/schedule/events\" component={ScheduleEvents} />\n            <PrivateRoute exact path=\"/schedule/events/add\" component={ScheduleEventAdd} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id\" component={ScheduleEventEdit} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/activities\" component={ScheduleEventActivities} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/activities/add\" component={ScheduleEventActivityAdd} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/activities/edit/:id\" component={ScheduleEventActivityEdit} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/activities/edit/:id/attendance\" \n                          component={ScheduleEventActivityAttendance} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/earlybirds\" component={ScheduleEventEarlybirds} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/earlybirds/add\" component={ScheduleEventEarlybirdAdd} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/earlybirds/edit/:id\" component={ScheduleEventEarlybirdEdit} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/media\" component={ScheduleEventMedia} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/media/add\" component={ScheduleEventMediaAdd} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/media/edit/:id\" component={ScheduleEventMediaEdit} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/tickets\" component={ScheduleEventTickets} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/tickets/add\" component={ScheduleEventTicketAdd} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/tickets/edit/:id\" component={ScheduleEventTicketEdit} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/tickets/edit/:id/activities\" component={ScheduleEventTicketEditActivities} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/tickets/edit/:id/customers\" component={ScheduleEventTicketEditCustomers} />\n\n            {/* Insight */}\n            <PrivateRoute exact path=\"/insight\" component={InsightHome} />\n            <PrivateRoute exact path=\"/insight/classpasses\" component={InsightClasspasses} />\n            <PrivateRoute exact path=\"/insight/subscriptions\" component={InsightSubscriptions} />\n\n            {/* Self Check-in */}\n            <PrivateRoute exact path=\"/selfcheckin/checkin/:location_id/:class_id/:date\" component={SelfCheckinCheckin} />\n            <PrivateRoute exact path=\"/selfcheckin/book/:location_id/:class_id/:date/:account_id\" \n                                component={SelfCheckinBookingOptions} />\n            <PrivateRoute exact path=\"/selfcheckin\" component={SelfCheckinLocations} />\n            <PrivateRoute exact path=\"/selfcheckin/location/:location_id\" component={SelfCheckinLocationClasses} />\n\n            {/* Shop */}\n            <Route exact path = \"/\" component={ShopHome} />\n            <PrivateRoute exact path = \"/shop/account\" component={ShopAccountHome} />\n            <PrivateRoute exact path = \"/shop/account/class_cancel/:class_id/:date/:attendance_id\" \n                                component={ShopAccountClassCancel} />\n            <PrivateRoute exact path = \"/shop/account/class_info/:class_id/:date\" component={ShopAccountClassInfo} />\n            <PrivateRoute exact path = \"/shop/account/classes\" component={ShopClasses} />\n            <PrivateRoute exact path = \"/shop/account/classpasses\" component={ShopAccountClasspasses} />\n            <PrivateRoute exact path = \"/shop/account/event_tickets\" component={ShopAccountEventTickets} />\n            <PrivateRoute exact path = \"/shop/account/invoice_payment/:id\" component={ShopAccountInvoicePayment} />\n            <PrivateRoute exact path = \"/shop/account/invoice_payment_status/:id\" component={ShopAccountInvoicePaymentStatus} />\n            <PrivateRoute exact path = \"/shop/account/invoices\" component={ShopAccountInvoices} />\n            <PrivateRoute exact path = \"/shop/account/orders\" component={ShopAccountOrders} />\n            <PrivateRoute exact path = \"/shop/account/profile\" component={ShopAccountProfile} />\n            <PrivateRoute exact path = \"/shop/account/subscriptions\" component={ShopAccountSubscriptions} />\n            <PrivateRoute exact path = \"/shop/checkout/payment/:id\" component={ShopCheckoutPayment} />\n            <PrivateRoute exact path = \"/shop/checkout/complete/:id\" component={ShopCheckoutComplete} />\n            <Route exact path = \"/shop/classes\" component={ShopClassesSchedule} />\n            <PrivateRoute exact path = \"/shop/classes/book/:class_id/:date\" component={ShopClassBook} />\n            <PrivateRoute exact path = \"/shop/classes/booked/:class_id/:date\" component={ShopClassBooked} />\n            <Route exact path = \"/shop/classpasses\" component={ShopClasspasses} />\n            <Route exact path = \"/shop/classpass/:id\" component={ShopClasspass} />\n            <Route exact path = \"/shop/classpass/:id/:class_id/:date\" component={ShopClasspass} />\n            <Route exact path = \"/shop/contact\" component={ShopContact} />\n            <Route exact path = \"/shop/events\" component={ShopEvents} />\n            <Route exact path = \"/shop/events/:event_id\" component={ShopEvent} />\n            <Route exact path = \"/shop/events/:event_id/ticket/:id\" component={ShopEventTicket} />\n            <Route exact path = \"/shop/subscriptions\" component={ShopSubscriptions} />\n            <Route exact path = \"/shop/subscription/:id\" component={ShopSubscription} />\n\n            {/* Settings */}\n            <PrivateRoute exact path=\"/settings\" component={SettingsHome} />\n            <PrivateRoute exact path=\"/settings/about\" component={SettingsAbout} />\n            <PrivateRoute exact path=\"/settings/finance/bank_accounts\" component={SettingsFinanceBankAccounts} />\n            <PrivateRoute exact path=\"/settings/finance/currency\" component={SettingsFinanceCurrency} />\n            <PrivateRoute exact path=\"/settings/general/datetime\" component={SettingsGeneralDateTime} />\n            <PrivateRoute exact path=\"/settings/general/system\" component={SettingsGeneralSystem} />\n            <PrivateRoute exact path=\"/settings/integration/mollie\" component={SettingsIntegrationMollie} />\n            <PrivateRoute exact path=\"/settings/mail/templates\" component={SettingsMailTemplates} />\n            <PrivateRoute exact path=\"/settings/mail/templates/edit/:id\" component={SettingsMailTemplateEdit} />\n            <PrivateRoute exact path=\"/settings/shop/features\" component={SettingsShopFeatures} />\n            <PrivateRoute exact path=\"/settings/workflow/class_booking\" component={SettingsWorkflowClassBooking} />\n\n            {/* User */}\n            <PrivateRoute exact path=\"/user/password/change\" component={UserChangePassword} />\n            <Route exact path=\"/user/login\" component={UserLogin} />\n            <Route exact path=\"/user/login/required\" component={UserLoginRequired} />\n            <Route exact path=\"/user/logout\" component={UserLogout} />\n            <Route exact path=\"/user/session/expired\" component={UserSessionExpired} />\n            <Route exact path=\"/user/welcome\" component={UserWelcome} />\n            \n            <Route component={Error404} />\n          </Switch>\n        </HashRouter>\n      </OrganizationProvider>\n    </AppSettingsProvider>\n  )\n}\n\nexport default withTranslation()(AppRoot)\n\n","import React from 'react'\nimport {\n  ApolloClient,\n  from,\n  createHttpLink,\n  InMemoryCache,\n  ApolloProvider,\n  Observable,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { setContext } from '@apollo/client/link/context';\n// import ApolloClient from \"react\"\n\nimport { TOKEN_REFRESH } from \"./queries/system/auth\"\n// Import moment locale\n// import moment from 'moment'\n// import 'moment/locale/nl'\n\nimport CSLS from \"./tools/cs_local_storage\"\nimport CSEC from \"./tools/cs_error_codes\"\nimport { CSAuth } from './tools/authentication'\n\n// Main app\nimport AppRoot from \"./AppRoot\"\n\n// Tabler css \nimport \"tabler-react/dist/Tabler.css\"\n// React-datepicker css\nimport \"react-datepicker/dist/react-datepicker.css\"\n// App css\nimport './App.css'\n\n// Register \"nl\" locale for react-datepicker\n// https://reactdatepicker.com/#example-17\n// import { registerLocale } from \"react-datepicker\"\n// import nl from 'date-fns/locale/nl';\n// registerLocale('nl', nl);\n\n// This allows <string>.trunc(x)\nString.prototype.trunc = \n  function(n){\n      return this.substr(0, n-1) + (this.length > n ? '...' : '')\n  }\n\nfunction SetCurrentUrlAsNext() {\n  console.log(\"Storing current location as next in local storage\")\n  const currentUrl = window.location.href\n  const next = currentUrl.split(\"#\")[1]\n  console.log(next)\n  if ((next != \"/user/login\") && (next != \"/user/session/expired\") && (next != \"/user/login/required\") && (next)) {\n    // This is a dirty hack to work around the following, a user refreshes the page but has an expired refreshtoken.\n    // This will produce an error on the orinal component, setting the correct next URL in localStorage. However, \n    // the code below will move the user to /user/login, which will also error at first, thus /user/login always\n    // gets set... we don't want that. This flow can be refactored at some point, but it works for now. \n    localStorage.setItem(CSLS.AUTH_LOGIN_NEXT, next)\n  } \n}\n  \n\nconst errorLink = onError(({ graphQLErrors, networkError, operation, forward, response }) => {\n  if (graphQLErrors)\n    graphQLErrors.forEach(({ message, locations, path }) => {\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n      )\n    });\n\n  if (networkError) console.log(`[Network error]: ${networkError}`);\n\n  // request size check\n  if (graphQLErrors && graphQLErrors[0].message == \"Request body exceeded settings.DATA_UPLOAD_MAX_MEMORY_SIZE.\") {\n    console.error('CHOSEN FILE EXCEEDS SIZE LIMIT')\n  }\n\n  // Token refresh check\n  if (graphQLErrors && graphQLErrors[0].message == \"Signature has expired\") {\n    console.log(graphQLErrors[0])\n    console.log('Time to refresh the token')\n\n    let authTokenExpired = false\n    let refreshTokenExpired = false\n    const tokenExp = localStorage.getItem(CSLS.AUTH_TOKEN_EXP)\n    const refreshTokenExp = localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN_EXP)\n\n    if ((new Date() / 1000) >= tokenExp) {\n      authTokenExpired = true\n      \n      if ((new Date() / 1000) >= refreshTokenExp) {\n        refreshTokenExpired = true\n        // Remove any remaining token data\n        CSAuth.cleanup()\n        // Store current location, user has to login again\n        SetCurrentUrlAsNext()\n      }\n    }\n    \n    if (authTokenExpired && !refreshTokenExpired) {\n      console.log(\"refresh token... somehow...\")\n      console.log(localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN))\n\n      return new Observable(observer => {\n        client.mutate({\n          mutation: TOKEN_REFRESH,\n          variables: {\n            refreshToken: localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN)\n          }\n        })\n          .then(({ data }) => { \n            console.log(data)\n            CSAuth.updateTokenInfo(data.refreshToken)\n          })\n          .then(() => {\n            const subscriber = {\n              next: observer.next.bind(observer),\n              error: observer.error.bind(observer),\n              complete: observer.complete.bind(observer)\n            };\n\n            // Retry last failed request\n            forward(operation).subscribe(subscriber);\n          })\n          .catch(error => {\n            // No refresh or client token available, we force user to login\n            console.log(\"Failed to refresh the token, onwards to the login page\")\n            observer.error(error);\n            window.location.href = \"/#/user/login\"\n            window.location.reload()\n          });\n      })\n    } else if (refreshTokenExpired) {\n      window.location.href = \"#/user/session/expired\"\n      window.location.reload()\n    } else {\n      window.location.href = \"#/user/login/required\"\n      window.location.reload()\n    }\n  }\n})\n    \n\nconst httpLink = createHttpLink({\n  uri: '/d/graphql/',\n  credentials: 'same-origin',\n});\n\nconst authLink = setContext(async (request, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(CSLS.AUTH_TOKEN)\n  console.log(token)\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      Authorization: token ? `JWT ${token}`: ''\n    }\n  }\n});\n\n// set up ApolloClient\nconst client = new ApolloClient({\n  link: from([errorLink, authLink, httpLink]),\n  cache: new InMemoryCache(),\n})\n\n\nfunction App() {\n  // Register \"NL\" locale for moment\n  // moment.locale('en-US')\n\n  return (\n    <ApolloProvider client={client}>\n      <AppRoot />\n    </ApolloProvider>\n  )\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './i18n'\nimport './index.css'\nimport \"./c3jscustom.css\"\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}