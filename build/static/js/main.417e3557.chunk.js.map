{"version":3,"sources":["i18n.js","queries/system/auth.js","tools/cs_local_storage.js","tools/authentication.js","components/settings/general/date_time/queries.js","components/organization/organization/queries.js","components/context/AppSettingsContext.js","components/context/OrganizationContext.js","queries/system/get_user.js","tools/user_tools.js","components/HasPermissionWrapper.js","components/home/home/queries.js","components/SiteWrapper.js","components/home/home/HomeHomeBase.jsx","components/home/home/HomeHome.jsx","components/automation/home/AutomationHomeItemButton.jsx","components/automation/home/AutomationHome.jsx","components/general/ContentCard.jsx","components/automation/queries.js","components/ui/ButtonBack.jsx","components/automation/AutomationBack.jsx","components/automation/account/subscription/credits/AutomationAccountSubscriptionCreditsBase.jsx","components/automation/AutomationTaskResultStatus.jsx","components/automation/account/subscription/credits/AutomationAccountSubscriptionCredits.jsx","components/automation/account/subscription/credits/yupSchema.js","components/automation/account/subscription/credits/AutomationAccountSubscriptionCreditForm.jsx","components/automation/account/subscription/credits/AutomationAccountSubscriptionCreditAdd.jsx","components/automation/account/subscription/credits_expiration/AutomationAccountSubscriptionCreditExpirationBase.jsx","components/automation/account/subscription/credits_expiration/AutomationAccountSubscriptionCreditExpiration.jsx","components/automation/account/subscription/credits_expiration/AutomationAccountSubscriptionCreditExpirationAdd.jsx","components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoicesBase.jsx","components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoices.jsx","components/automation/account/subscription/invoices/yupSchema.js","components/ui/CSDatePicker.jsx","components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoicesForm.jsx","components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoicesAdd.jsx","components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollectionBase.jsx","components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollections.jsx","components/automation/account/subscription/mollie_collection/yupSchema.js","components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollectionForm.jsx","components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollectionAdd.jsx","components/finance/FinanceMenu.jsx","components/finance/home/FinanceHome.jsx","components/finance/costcenters/queries.js","components/finance/costcenters/FinanceCostCentersBase.jsx","components/finance/costcenters/FinanceCostCenters.jsx","components/finance/costcenters/yupSchema.js","components/finance/costcenters/FinanceCostCenterAdd.jsx","components/finance/costcenters/FinanceCostCenterEdit.jsx","components/finance/glaccounts/queries.js","components/finance/glaccounts/FinanceGLAccountsBase.jsx","components/finance/glaccounts/FinanceGLAccounts.jsx","components/finance/glaccounts/yupSchema.js","components/finance/glaccounts/FinanceGLAccountAdd.jsx","components/finance/glaccounts/FinanceGLAccountEdit.jsx","components/finance/invoices/tools.js","components/finance/invoices/FinanceInvoicesFilter.jsx","components/finance/invoices/FinanceInvoicesBase.jsx","components/ui/FinanceInvoiceStatus.jsx","components/finance/invoices/queries.js","tools/confirm_delete.js","components/finance/invoices/FinanceInvoices.jsx","tools/refresh_token_and_open_export_link.js","components/finance/invoices/edit/FinanceInvoiceEditBase.jsx","components/finance/invoices/edit/FinanceInvoiceItemAdd.jsx","components/finance/invoices/edit/FinanceInvoiceItemDelete.jsx","components/finance/invoices/edit/FinanceInvoiceItemEditForm.jsx","components/finance/invoices/edit/FinanceInvoiceItemEdit.jsx","components/finance/invoices/edit/FinanceInvoiceEditItems.jsx","plugin_config/tinymce.js","components/finance/invoices/edit/FinanceInvoiceEditTermsForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditFooterForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditNoteForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditAdditional.jsx","components/finance/invoices/edit/FinanceInvoiceEditBalance.jsx","tools/date_tools.js","components/finance/invoices/edit/FinanceInvoiceEditOptionsForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditOptions.jsx","components/finance/invoices/edit/FinanceInvoiceEditOrganization.jsx","components/finance/invoices/edit/FinanceInvoiceEditSummaryForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditSummary.jsx","components/finance/invoices/edit/FinanceInvoiceEditToForm.jsx","components/finance/invoices/edit/FinanceInvoiceEditTo.jsx","components/finance/invoices/edit/FinanceInvoiceEditPaymentDelete.jsx","components/finance/invoices/edit/FinanceInvoiceEditPayments.jsx","components/finance/invoices/edit/FinanceInvoiceEdit.jsx","components/ui/BadgeBoolean.jsx","components/finance/invoices/groups/queries.js","components/finance/invoices/groups/FinanceInvoiceGroupsBase.jsx","components/finance/invoices/groups/FinanceInvoiceGroups.jsx","components/finance/invoices/groups/yupSchema.js","components/finance/invoices/groups/FinanceInvoiceGroupForm.jsx","components/finance/invoices/groups/FinanceInvoiceGroupAdd.jsx","components/finance/invoices/groups/FinanceInvoiceGroupEdit.jsx","components/finance/invoices/groups/defaults/FinanceInvoiceGroupDefaultForm.jsx","components/finance/invoices/groups/defaults/yupSchema.js","components/finance/invoices/groups/defaults/queries.js","components/finance/invoices/groups/defaults/FinanceInvoiceGroupDefaults.jsx","components/finance/invoices/payments/queries.js","components/finance/invoices/payments/yupSchema.js","components/finance/invoices/payments/FinanceInvoicePaymentBase.jsx","components/finance/invoices/payments/FinanceInvoicePaymentForm.jsx","components/finance/invoices/payments/FinanceInvoicePaymentAdd.jsx","components/finance/invoices/payments/FinanceInvoicePaymentEdit.jsx","components/finance/orders/tools.js","components/finance/orders/FinanceOrdersFilter.jsx","components/finance/orders/FinanceOrdersBase.jsx","components/finance/orders/FinanceOrderStatus.jsx","components/finance/orders/queries.js","components/finance/orders/FinanceOrderDelete.jsx","components/finance/orders/FinanceOrders.jsx","components/finance/payment_batches/tools.js","components/ui/BadgeFinancePaymentBatchStatus.jsx","components/finance/payment_batches/FinancePaymentBatchesBase.jsx","components/finance/payment_batches/queries.js","components/finance/payment_batches/FinancePaymentBatches.jsx","components/ui/FinancePaymentBatchCategory.jsx","components/finance/payment_batches/FinancePaymentBatchAddWhat.jsx","components/finance/payment_batches/FinancePaymentBatchViewBase.jsx","components/finance/payment_batches/FinancePaymentCollectionBatchForm.jsx","components/finance/payment_batches/FinancePaymentBatchView.jsx","components/finance/payment_batches/yupSchema.js","components/finance/payment_batches/FinancePaymentCollectionBatchAdd.jsx","components/finance/payment_batches/FinancePaymentCollectionBatchEdit.jsx","components/finance/payment_batch_categories/tools.js","components/finance/payment_batch_categories/FinancePaymentBatchCategoriesBase.jsx","components/finance/payment_batch_categories/queries.js","components/finance/payment_batch_categories/FinancePaymentBatchCategories.jsx","components/finance/payment_batch_categories/yupSchema.js","components/finance/payment_batch_categories/FinancePaymentBatchCategoryForm.jsx","components/finance/payment_batch_categories/FinancePaymentBatchCategoryAdd.jsx","components/finance/payment_batch_categories/FinancePaymentBatchCategoryEdit.jsx","components/finance/orders/edit/queries.js","components/finance/orders/edit/FinanceOrderEditForm.jsx","components/finance/orders/edit/FinanceOrderEditBase.jsx","components/finance/orders/edit/FinanceOrderEdit.jsx","components/finance/payment_methods/FinancePaymentMethodsBase.jsx","components/finance/payment_methods/queries.js","components/finance/payment_methods/FinancePaymentMethods.jsx","components/finance/payment_methods/yupSchema.js","components/finance/payment_methods/FinancePaymentMethodForm.jsx","components/finance/payment_methods/FinancePaymentMethodAdd.jsx","components/finance/payment_methods/FinancePaymentMethodEdit.jsx","components/finance/taxrates/FinanceTaxRatesBase.jsx","components/finance/taxrates/queries.js","components/finance/taxrates/FinanceTaxRates.jsx","components/finance/taxrates/yupSchema.js","components/finance/taxrates/FinanceTaxRateAdd.jsx","components/finance/taxrates/FinanceTaxRateEdit.jsx","components/insight/InsightMenu.jsx","components/insight/home/InsightHome.jsx","components/insight/classpasses/queries.js","components/insight/InsightBackHome.jsx","components/insight/classpasses/InsightClasspassesBase.jsx","components/insight/classpasses/InsightClasspasses.jsx","components/insight/subscriptions/queries.js","components/insight/subscriptions/InsightSubscriptionsBase.jsx","components/insight/subscriptions/InsightSubscriptions.jsx","components/organization/OrganizationMenu.jsx","components/organization/home/OrganizationHome.jsx","components/organization/organization/yupSchema.js","tools/custom_file_input_label_style.js","components/organization/organization/OrganizationForm.jsx","components/organization/organization/OrganizationEditBase.jsx","components/organization/organization/OrganizationEdit.jsx","components/organization/organization/branding/OrganizationBrandingBase.jsx","components/organization/organization/branding/OrganizationBranding.jsx","components/organization/organization/branding/OrganizationBrandingEditForm.jsx","components/organization/organization/branding/OrganizationBrandingEdit.jsx","components/organization/announcements/OrganizationAnnouncementsBase.jsx","components/organization/announcements/queries.js","components/organization/announcements/OrganizationAnnouncements.jsx","components/organization/announcements/yupSchema.js","components/organization/announcements/OrganizationAnnouncementForm.jsx","components/organization/announcements/OrganizationAnnouncementAdd.jsx","components/organization/announcements/OrganizationAnnouncementEdit.jsx","components/organization/appointment_categories/appointments/queries.js","components/organization/appointment_categories/appointments/OrganizationAppointments.jsx","components/organization/appointment_categories/appointments/yupSchema.js","components/organization/appointment_categories/appointments/OrganizationAppointmentForm.jsx","components/organization/appointment_categories/appointments/OrganizationAppointmentAdd.jsx","components/organization/appointment_categories/appointments/OrganizationAppointmentEdit.jsx","components/organization/appointment_categories/queries.js","components/organization/appointment_categories/OrganizationAppointmentCategories.jsx","components/organization/appointment_categories/yupSchema.js","components/organization/appointment_categories/OrganizationAppointmentCategoryForm.jsx","components/organization/appointment_categories/OrganizationAppointmentCategoryAdd.jsx","components/organization/appointment_categories/OrganizationAppointmentCategoryEdit.jsx","components/organization/appointment_categories/appointments/prices/queries.js","components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPrices.jsx","components/organization/appointment_categories/appointments/prices/yupSchema.js","components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPriceForm.jsx","components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPriceAdd.jsx","components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPriceEdit.jsx","components/organization/classpasses/OrganizationClasspassesBase.jsx","components/organization/classpasses/queries.js","components/organization/classpasses/OrganizationClasspasses.jsx","components/organization/classpasses/yupSchema.js","components/organization/classpasses/OrganizationClasspassForm.jsx","components/organization/classpasses/OrganizationClasspassAdd.jsx","components/organization/classpasses/OrganizationClasspassEdit.jsx","components/organization/classpasses_groups/OrganizationClasspassesGroupsBase.jsx","components/organization/classpasses_groups/queries.js","components/organization/classpasses_groups/OrganizationClasspassesGroups.jsx","components/organization/classpasses_groups/yupSchema.js","components/organization/classpasses_groups/OrganizationClasspassesGroupAdd.jsx","components/organization/classpasses_groups/OrganizationClasspassesGroupEdit.jsx","components/organization/classpasses_groups/OrganizationClasspassesGroupEditPasses.jsx","components/organization/classtypes/tools.js","components/organization/classtypes/queries.js","components/organization/classtypes/OrganizationClasstypesBase.jsx","components/organization/classtypes/OrganizationClasstypes.jsx","components/organization/classtypes/yupSchema.js","components/organization/classtypes/OrganizationClasstypeAdd.jsx","components/organization/classtypes/OrganizationClasstypeEdit.jsx","components/organization/classtypes/OrganizationClasstypeEditImage.jsx","components/organization/discovery/queries.js","components/organization/discovery/OrganizationDiscoveriesBase.jsx","components/organization/discovery/OrganizationDiscoveries.jsx","components/organization/discovery/yupSchema.js","components/organization/discovery/OrganizationDiscoveryAdd.jsx","components/organization/discovery/OrganizationDiscoveryEdit.jsx","components/organization/documents/OrganizationDocuments.jsx","components/ui/ISODateString.jsx","components/ui/FileDownloadTableButton.jsx","components/organization/documents/OrganizationDocumentsBase.jsx","components/organization/documents/queries.js","components/organization/documents/OrganizationDocumentDelete.jsx","components/organization/documents/tools.js","components/organization/documents/OrganizationListDocuments.jsx","components/organization/documents/OrganizationDocumentAdd.jsx","components/organization/documents/yupSchema.js","components/organization/documents/OrganizationDocumentEdit.jsx","components/organization/holidays/OrganizationHolidaysBase.jsx","components/organization/holidays/queries.js","components/organization/holidays/OrganizationHolidays.jsx","components/organization/holidays/yupSchema.js","components/organization/holidays/OrganizationHolidayForm.jsx","components/organization/holidays/OrganizationHolidayAdd.jsx","components/organization/holidays/OrganizationHolidayEdit.jsx","components/organization/holidays/OrganizationHolidayEditLocations.jsx","components/organization/languages/OrganizationLanguagesBase.jsx","components/organization/languages/queries.js","components/organization/languages/OrganizationLanguages.jsx","components/organization/languages/yupSchema.js","components/organization/languages/OrganizationLanguageForm.jsx","components/organization/languages/OrganizationLanguageAdd.jsx","components/organization/languages/OrganizationLanguageEdit.jsx","components/organization/locations/queries.js","components/organization/locations/OrganizationLocationsBase.jsx","components/organization/locations/OrganizationLocations.jsx","components/organization/locations/yupSchema.js","components/organization/locations/OrganizationLocationAdd.jsx","components/organization/locations/OrganizationLocationEdit.jsx","components/organization/locations/rooms/queries.js","components/organization/locations/rooms/OrganizationLocationRoomsBase.jsx","components/organization/locations/rooms/OrganizationLocationRooms.jsx","components/organization/locations/rooms/yupSchema.js","components/organization/locations/rooms/OrganizationLocationRoomForm.jsx","components/organization/locations/rooms/OrganizationLocationRoomAdd.jsx","components/organization/locations/rooms/OrganizationLocationRoomEdit.jsx","components/organization/levels/OrganizationLevelsBase.jsx","components/organization/levels/queries.js","components/organization/levels/OrganizationLevels.jsx","components/organization/levels/yupSchema.js","components/organization/levels/OrganizationLevelForm.jsx","components/organization/levels/OrganizationLevelAdd.jsx","components/organization/levels/OrganizationLevelEdit.jsx","components/ui/Validity.jsx","components/organization/memberships/queries.js","components/organization/memberships/OrganizationMemberships.jsx","components/organization/memberships/yupSchema.js","components/organization/memberships/OrganizationMembershipAdd.jsx","components/organization/memberships/OrganizationMembershipEdit.jsx","components/organization/subscriptions/OrganizationSubscriptionsBase.jsx","components/organization/subscriptions/queries.js","components/organization/subscriptions/OrganizationSubscriptions.jsx","components/organization/subscriptions/yupSchema.js","components/organization/subscriptions/OrganizationSubscriptionForm.jsx","components/organization/subscriptions/OrganizationSubscriptionAdd.jsx","components/organization/subscriptions/OrganizationSubscriptionEdit.jsx","components/organization/subscriptions_groups/OrganizationSubscriptionsGroupsBase.jsx","components/organization/subscriptions_groups/queries.js","components/organization/subscriptions_groups/OrganizationSubscriptionsGroups.jsx","components/organization/subscriptions_groups/yupSchema.js","components/organization/subscriptions_groups/OrganizationSubscriptionsGroupForm.jsx","components/organization/subscriptions_groups/OrganizationSubscriptionsGroupAdd.jsx","components/organization/subscriptions_groups/OrganizationSubscriptionsGroupEdit.jsx","components/organization/subscriptions_groups/OrganizationSubscriptionsGroupEditSubscriptions.jsx","components/ui/AlertInfo.jsx","components/organization/subscriptions/prices/queries.js","components/organization/subscriptions/prices/OrganizationSubscriptionsPrices.jsx","components/relations/RelationsMenu.jsx","components/organization/subscriptions/prices/yupSchema.js","components/organization/subscriptions/prices/OrganizationSubscriptionPriceForm.jsx","components/organization/subscriptions/prices/OrganizationSubscriptionPriceAdd.jsx","components/organization/subscriptions/prices/OrganizationSubscriptionPriceEdit.jsx","components/relations/home/RelationsHome.jsx","components/general/InputSearch.jsx","components/relations/accounts/tools.js","components/relations/accounts/RelationsAccountsBase.jsx","components/relations/accounts/queries.js","components/relations/accounts/RelationsAccounts.jsx","components/relations/accounts/yupSchema.js","components/relations/accounts/RelationsAccountForm.jsx","components/relations/accounts/RelationsAccountAdd.jsx","components/ui/ProfileCardSmall.jsx","components/relations/accounts/ProfileMenu.jsx","components/relations/accounts/RelationsAccountsBack.jsx","tools/iso_country_codes.js","components/relations/accounts/RelationsAccountProfileForm.jsx","components/relations/accounts/RelationsAccountProfileBase.jsx","components/relations/accounts/RelationsAccountProfile.jsx","components/relations/accounts/RelationsAccountProfileImageForm.jsx","components/relations/accounts/RelationsAccountProfileImage.jsx","components/ui/DocumentType.jsx","components/relations/accounts/accepted_documents/queries.js","components/relations/accounts/accepted_documents/AcceptedDocuments.jsx","components/relations/accounts/bank_accounts/queries.js","components/relations/accounts/bank_accounts/mandates/queries.js","components/relations/accounts/bank_accounts/RelationsAccountBankAccountBase.jsx","components/relations/accounts/bank_accounts/RelationsAccountBankAccountForm.jsx","components/relations/accounts/bank_accounts/RelationsAccountBankAccount.jsx","components/relations/accounts/bank_accounts/mandates/RelationsAccountBankAccountMandateForm.jsx","components/relations/accounts/bank_accounts/mandates/RelationsAccountBankAccountMandateAdd.jsx","components/relations/accounts/bank_accounts/mandates/RelationsAccountBankAccountMandateEdit.jsx","components/ui/BadgeBookingStatus.jsx","components/relations/accounts/classes/AccountClassesBase.jsx","components/relations/accounts/classes/queries.js","components/schedule/classes/class/attendance/queries.js","components/relations/accounts/classes/AccountClassDelete.jsx","components/relations/accounts/classes/AccountClasses.jsx","components/relations/accounts/classpasses/queries.js","components/relations/accounts/classpasses/AccountClasspasses.jsx","components/relations/accounts/classpasses/yupSchema.js","components/relations/accounts/classpasses/AccountClasspassForm.jsx","components/relations/accounts/classpasses/AccountClasspassAdd.jsx","components/relations/accounts/classpasses/AccountClasspassEdit.jsx","components/relations/accounts/documents/queries.js","components/ui/FileProtectedDownloadTableButton.jsx","components/relations/accounts/documents/AccountDocuments.jsx","components/relations/accounts/documents/AccountDocumentForm.jsx","components/relations/accounts/documents/AccountDocumentAdd.jsx","components/relations/accounts/documents/yupSchema.js","components/relations/accounts/documents/AccountDocumentFormEdit.jsx","components/relations/accounts/documents/AccountDocumentEdit.jsx","components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemsBase.jsx","components/relations/accounts/finance_payment_batch_category_items/queries.js","components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItems.jsx","components/relations/accounts/finance_payment_batch_category_items/yupSchema.js","components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemsForm.jsx","components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemAdd.jsx","components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemEdit.jsx","components/relations/accounts/invoices/queries.js","components/relations/accounts/invoices/AccountInvoicesBase.jsx","components/relations/accounts/invoices/AccountInvoices.jsx","components/relations/accounts/invoices/AccountInvoiceAddForm.jsx","components/relations/accounts/invoices/yupSchema.js","components/relations/accounts/invoices/AccountInvoiceAdd.jsx","components/relations/accounts/memberships/queries.js","components/relations/accounts/memberships/AccountMemberships.jsx","components/relations/accounts/memberships/yupSchema.js","components/relations/accounts/memberships/AccountMembershipForm.jsx","components/relations/accounts/memberships/AccountMembershipAdd.jsx","components/relations/accounts/memberships/AccountMembershipEdit.jsx","components/general/LoadMoreOnBottomScroll.jsx","components/relations/accounts/notes/AccountNotesBase.jsx","components/relations/accounts/notes/queries.js","components/relations/accounts/notes/tools.js","components/relations/accounts/notes/AccountNotes.jsx","components/relations/accounts/notes/AccountNoteForm.jsx","components/relations/accounts/notes/AccountNoteAdd.jsx","components/relations/accounts/notes/AccountNoteEdit.jsx","components/relations/accounts/orders/AccountOrdersBase.jsx","components/relations/accounts/orders/queries.js","components/relations/accounts/orders/AccountOrderDelete.jsx","components/relations/accounts/orders/AccountOrders.jsx","components/relations/accounts/schedule_event_tickets/queries.js","queries/accounts/get_account.js","components/relations/accounts/schedule_event_tickets/AccountScheduleEventTicketsBase.jsx","components/schedule/events/tickets/customers/queries.js","components/relations/accounts/schedule_event_tickets/AccountScheduleEventTickets.jsx","components/relations/accounts/subscriptions/queries.js","components/relations/accounts/subscriptions/AccountSubscriptions.jsx","components/relations/accounts/subscriptions/yupSchema.js","components/relations/accounts/subscriptions/AccountSubscriptionForm.jsx","components/relations/accounts/subscriptions/AccountSubscriptionAdd.jsx","components/ui/CardTabs.jsx","components/relations/accounts/subscriptions/edit/AccountSubscriptionEditTabs.jsx","components/relations/accounts/subscriptions/edit/AccountSubscriptionEditBaseBase.jsx","components/relations/accounts/subscriptions/edit/AccountSubscriptionEditBase.jsx","components/relations/accounts/subscriptions/edit/AccountSubscriptionEdit.jsx","components/ui/ButtonAddSecondaryMenu.jsx","components/relations/accounts/subscriptions/edit/alt_prices/queries.js","components/relations/accounts/subscriptions/edit/AccountSubscriptionEditListBaseBase.jsx","components/relations/accounts/subscriptions/edit/AccountSubscriptionEditListBase.jsx","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceDelete.jsx","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPrices.jsx","components/relations/accounts/subscriptions/edit/alt_prices/yupSchema.js","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceBase.jsx","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceForm.jsx","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceAdd.jsx","components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceEdit.jsx","components/relations/accounts/subscriptions/edit/blocks/queries.js","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockDelete.jsx","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlocks.jsx","components/relations/accounts/subscriptions/edit/blocks/yupSchema.js","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockBase.jsx","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockForm.jsx","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockAdd.jsx","components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockEdit.jsx","components/ui/SubscriptionCreditsMutationType.jsx","components/relations/accounts/subscriptions/edit/credits/queries.js","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditDelete.jsx","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCredits.jsx","components/relations/accounts/subscriptions/edit/credits/yupSchema.js","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditBase.jsx","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditForm.jsx","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditAdd.jsx","components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditEdit.jsx","components/relations/accounts/subscriptions/edit/invoices/queries.js","components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoiceDelete.jsx","components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoices.jsx","components/relations/accounts/subscriptions/edit/invoices/yupSchema.js","components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoiceAddBase.jsx","components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoiceAddForm.jsx","components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoiceAdd.jsx","components/relations/accounts/subscriptions/edit/pauses/queries.js","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseDelete.jsx","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauses.jsx","components/relations/accounts/subscriptions/edit/pauses/yupSchema.js","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseBase.jsx","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseForm.jsx","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseAdd.jsx","components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseEdit.jsx","components/relations/accounts/teacher_profile/queries.js","components/relations/accounts/teacher_profile/yupSchema.js","components/relations/accounts/teacher_profile/RelationsAccountTeacherProfileForm.jsx","components/relations/accounts/teacher_profile/RelationsAccountTeacherProfile.jsx","components/relations/b2b/tools.js","components/relations/b2b/RelationsB2BBase.jsx","components/relations/b2b/queries.js","tools/confirm_archive.js","tools/confirm_unarchive.js","components/relations/b2b/RelationsB2B.jsx","components/relations/b2b/RelationB2BAddForm.jsx","components/relations/b2b/RelationsB2BAdd.jsx","components/relations/b2b/RelationsB2BEditBase.jsx","components/relations/b2b/RelationsB2BEditForm.jsx","components/relations/b2b/RelationsB2BEdit.jsx","components/schedule/ScheduleMenu.jsx","components/schedule/home/ScheduleHome.jsx","components/schedule/appointments/tools.js","components/schedule/appointments/ScheduleAppointmentsFilter.jsx","components/schedule/appointments/queries.js","components/schedule/appointments/ScheduleAppointments.jsx","components/schedule/appointments/all/AppointmentEditMenu.jsx","components/schedule/appointments/yupSchema.js","components/ui/CSTimePicker.jsx","components/schedule/appointments/ScheduleAppointmentForm.jsx","components/schedule/appointments/ScheduleAppointmentAdd.jsx","components/schedule/appointments/all/AppointmentEditBack.jsx","components/schedule/appointments/all/AppointmentEditBase.jsx","components/schedule/appointments/all/tools.js","components/schedule/appointments/all/edit/ScheduleAppointmentEditAll.jsx","components/ui/StatusIcon.jsx","components/schedule/classes/tools.js","components/schedule/classes/ScheduleClassesFilter.jsx","components/schedule/classes/ScheduleClassesBase.jsx","components/schedule/classes/queries.js","components/schedule/classes/ScheduleClasses.jsx","components/schedule/classes/yupSchema.js","components/schedule/classes/ScheduleClassForm.jsx","components/schedule/classes/ScheduleClassAddBase.jsx","components/schedule/classes/ScheduleClassAdd.jsx","components/schedule/classes/all/ClassEditMenu.jsx","components/schedule/classes/all/edit/queries.js","components/schedule/classes/all/ClassEditBack.jsx","components/schedule/classes/all/ClassEditBaseBase.jsx","components/schedule/classes/all/tools.js","components/schedule/classes/all/ClassEditBase.jsx","components/schedule/classes/all/edit/ScheduleClassEditAll.jsx","components/ui/FormHelp.jsx","components/schedule/classes/all/classpasses/ScheduleClassClasspassForm.jsx","components/schedule/classes/all/classpasses/yupSchema.js","components/schedule/classes/all/classpasses/queries.js","components/schedule/classes/all/classpasses/ScheduleClassClasspasses.jsx","components/schedule/classes/all/subscriptions/ScheduleClassSubscriptionForm.jsx","components/schedule/classes/all/subscriptions/yupSchema.js","components/schedule/classes/all/subscriptions/queries.js","components/schedule/classes/all/subscriptions/ScheduleClassSubscriptions.jsx","components/schedule/classes/all/teachers/queries.js","components/schedule/classes/all/teachers/ScheduleClassTeachers.jsx","components/schedule/classes/all/teachers/yupSchema.js","components/schedule/classes/all/teachers/ScheduleClassTeacherForm.jsx","components/schedule/classes/all/teachers/ScheduleClassTeacherBack.jsx","components/schedule/classes/all/teachers/ScheduleClassTeacherAdd.jsx","components/schedule/classes/all/teachers/ScheduleClassTeacherEdit.jsx","components/schedule/classes/class/attendance/tools.js","components/schedule/classes/class/tools.js","components/schedule/classes/class/ScheduleClassBack.jsx","components/schedule/classes/class/ClassMenu.jsx","components/schedule/classes/class/attendance/ScheduleClassAttendanceDelete.jsx","queries/accounts/account_search_queries.js","components/schedule/classes/class/attendance/ScheduleClassAttendance.jsx","components/schedule/classes/class/book/ScheduleClassBookBack.jsx","components/schedule/classes/class/book/queries.js","components/schedule/classes/class/book/tools.js","components/schedule/classes/class/book/ScheduleClassBookClasspassBtn.jsx","components/schedule/classes/class/book/ScheduleClassBookClasspasses.jsx","components/schedule/classes/class/book/ScheduleClassBookSubscriptionBtn.jsx","components/schedule/classes/class/book/ScheduleClassBookSubscriptions.jsx","components/schedule/classes/class/book/ScheduleClassBookPriceBtn.jsx","components/schedule/classes/class/book/ScheduleClassBookPriceDropin.jsx","components/schedule/classes/class/book/ScheduleClassBookPriceTrial.jsx","components/schedule/classes/class/book/ScheduleClassBook.jsx","components/schedule/classes/class/edit/queries.js","components/schedule/classes/class/edit/yupSchema.js","components/schedule/classes/class/edit/ScheduleClassEditForm.jsx","components/schedule/classes/class/edit/ScheduleClassWeeklyOTCDelete.jsx","components/schedule/classes/class/edit/ScheduleClassEdit.jsx","components/schedule/classes/all/prices/ButtonAdd.jsx","components/schedule/classes/all/prices/queries.js","components/schedule/classes/all/prices/ScheduleClassPriceDelete.jsx","components/schedule/classes/all/prices/ScheduleClassPrices.jsx","components/schedule/classes/all/prices/ScheduleClassPriceForm.jsx","components/schedule/classes/all/prices/yupSchema.js","components/schedule/classes/all/prices/ScheduleClassPriceBack.jsx","components/schedule/classes/all/prices/ScheduleClassPriceAdd.jsx","components/schedule/classes/all/prices/ScheduleClassPriceEdit.jsx","components/schedule/events/ScheduleEventsBase.jsx","components/schedule/events/queries.js","components/schedule/events/tools.js","components/schedule/events/ScheduleEventArchive.jsx","components/schedule/events/ScheduleEvents.jsx","components/schedule/events/yupSchema.js","components/schedule/events/ScheduleEventForm.jsx","components/schedule/events/ScheduleEventAdd.jsx","components/schedule/events/edit/ScheduleEventEditMenu.jsx","components/schedule/events/edit/ScheduleEventEditBack.jsx","components/schedule/events/edit/ScheduleEventEditBaseBase.jsx","components/schedule/events/edit/ScheduleEventEditBase.jsx","components/schedule/events/edit/ScheduleEventEdit.jsx","components/schedule/events/activities/queries.js","components/schedule/events/edit/ScheduleEventEditListBase.jsx","components/schedule/events/activities/ScheduleEventActivityDelete.jsx","components/schedule/events/activities/ScheduleEventActivities.jsx","components/schedule/events/activities/yupSchema.js","components/schedule/events/activities/ScheduleEventActivityBack.jsx","components/schedule/events/activities/ScheduleEventActivityForm.jsx","components/schedule/events/activities/ScheduleEventActivityAdd.jsx","components/schedule/events/activities/ScheduleEventActivityTabs.jsx","components/schedule/events/activities/ScheduleEventActivityEditBase.jsx","components/schedule/events/activities/ScheduleEventActivityEdit.jsx","components/schedule/events/activities/attendance/queries.js","components/schedule/events/activities/attendance/ScheduleEventActivityAttendanceBase.jsx","components/schedule/events/activities/attendance/ScheduleEventActivityAttendance.jsx","components/schedule/events/earlybirds/queries.js","components/schedule/events/earlybirds/ScheduleEventEarlybirdDelete.jsx","components/schedule/events/earlybirds/ScheduleEventEarlybirds.jsx","components/schedule/events/earlybirds/yupSchema.js","components/schedule/events/earlybirds/ScheduleEventEarlybirdsBack.jsx","components/schedule/events/earlybirds/ScheduleEventEarlybirdForm.jsx","components/schedule/events/earlybirds/ScheduleEventEarlybirdAdd.jsx","components/schedule/events/earlybirds/ScheduleEventEarlybirdEdit.jsx","components/schedule/events/media/queries.js","components/schedule/events/media/ScheduleEventMediaDelete.jsx","components/schedule/events/media/ScheduleEventMedia.jsx","components/schedule/events/media/yupSchema.js","components/schedule/events/media/ScheduleEventMediaBack.jsx","components/schedule/events/media/ScheduleEventMediaForm.jsx","components/schedule/events/media/ScheduleEventMediaAdd.jsx","components/schedule/events/media/ScheduleEventMediaEditBase.jsx","components/schedule/events/media/ScheduleEventMediaEdit.jsx","components/schedule/events/tickets/queries.js","components/schedule/events/tickets/ScheduleEventTicketListBase.jsx","components/schedule/events/tickets/ScheduleEventTicketDelete.jsx","components/ui/BadgeSoldOut.jsx","components/schedule/events/tickets/ScheduleEventTickets.jsx","components/schedule/events/tickets/yupSchema.js","components/schedule/events/tickets/ScheduleEventTicketBack.jsx","components/schedule/events/tickets/ScheduleEventTicketForm.jsx","components/schedule/events/tickets/ScheduleEventTicketAdd.jsx","components/schedule/events/tickets/ScheduleEventTicketTabs.jsx","components/schedule/events/tickets/ScheduleEventTicketEditBase.jsx","components/schedule/events/tickets/ScheduleEventTicketEdit.jsx","components/schedule/events/tickets/activities/queries.js","components/schedule/events/tickets/activities/yupSchema.js","components/schedule/events/tickets/activities/ScheduleEventTicketEditActivityForm.jsx","components/schedule/events/tickets/activities/ScheduleEventTicketEditActivities.jsx","components/schedule/events/tickets/customers/tools.js","components/schedule/events/tickets/customers/ScheduleEventTicketEditCustomers.jsx","components/SiteWrapperSelfCheckin.js","components/selfcheckin/SelfCheckinBase.jsx","components/selfcheckin/Checkin/queries.js","components/selfcheckin/Checkin/tools.js","components/selfcheckin/Checkin/Checkin.jsx","components/selfcheckin/BookingOptions/queries.js","components/selfcheckin/BookingOptions/BookingOptions.jsx","components/selfcheckin/Locations/queries.js","components/selfcheckin/Locations/Locations.jsx","components/selfcheckin/LocationClasses/queries.js","components/selfcheckin/LocationClasses/LocationClasses.jsx","components/settings/queries.js","components/settings/SettingsBack.jsx","components/settings/SettingsBase.jsx","components/settings/about/SettingsAbout.jsx","components/settings/finance/bank_accounts/SettingsFinanceBankAccountsForm.jsx","components/settings/finance/bank_accounts/SettingsFinanceBankAccounts.jsx","components/settings/finance/currency/SettingsFinanceCurrencyForm.jsx","components/settings/finance/currency/SettingsFinanceCurrency.jsx","components/settings/general/date_time/yupSchema.js","components/settings/general/date_time/SettingsGeneralDateTimeForm.jsx","components/settings/general/date_time/SettingsGeneralDateTime.jsx","components/settings/general/system/SettingsGeneralSystemForm.jsx","components/settings/general/system/SettingsGeneralSystem.jsx","components/settings/home/SettingsHomeItemButton.jsx","components/settings/home/SettingsHome.jsx","components/settings/integration/mollie/SettingsIntegrationMollieForm.jsx","components/settings/integration/mollie/SettingsIntegrationMollieCreateAccount.jsx","components/settings/integration/mollie/SettingsIntegrationMollie.jsx","components/settings/mail/SettingsMailTemplatesBase.jsx","components/settings/mail/queries.js","components/settings/mail/SettingsMailTemplates.jsx","components/settings/mail/SettingsMailTemplateEditBase.jsx","components/settings/mail/SettingsMailTemplateEditForm.jsx","components/settings/mail/SettingsMailTemplateEdit.jsx","components/settings/mail/tools.js","components/settings/shop/features/queries.js","components/settings/shop/features/yupSchema.js","components/settings/shop/features/SettingsShopFeaturesForm.jsx","components/settings/shop/features/SettingsShopFeatures.jsx","components/settings/workflow/class_booking/SettingsWorkflowClassBookingForm.jsx","components/settings/workflow/class_booking/SettingsWorkflowClassBooking.jsx","components/settings/workflow/subscription_pauses/SettingsWorkflowSubscriptionPausesForm.jsx","components/settings/workflow/subscription_pauses/SettingsWorkflowSubscriptionPauses.jsx","components/settings/workflow/trial/SettingsWorkflowTrialForm.jsx","components/settings/workflow/trial/SettingsWorkflowTrial.jsx","components/SiteWrapperShop.js","queries/system/get_user_profile.js","components/shop/account/home/ShopAccountHomeBase.jsx","components/shop/account/home/ShopAccountHomeButton.jsx","components/shop/account/home/ShopAccountHome.jsx","components/shop/tools.js","components/shop/account/class_cancel/queries.js","components/shop/account/class_cancel/ShopAccountClassCancelBase.jsx","components/shop/account/class_cancel/ShopAccountClassCancel.jsx","components/shop/checkout/class_info/queries.js","components/shop/checkout/class_info/ShopCheckoutClassInfo.jsx","components/shop/account/class_info/ShopAccountClassInfoBase.jsx","components/shop/account/class_info/ShopAccountClassInfo.jsx","components/shop/account/classpasses/queries.js","components/shop/account/ShopAccountBack.jsx","components/shop/account/classpasses/ShopAccountClasspassesBase.jsx","components/shop/account/classpasses/ShopAccountClasspasses.jsx","components/shop/account/ShopAccountProfileBase.jsx","components/shop/account/event_tickets/ShopAccountEventTickets.jsx","components/shop/account/invoice_payment/queries.js","components/shop/account/invoice_payment/ShopAccountInvoicePaymentBase.jsx","components/shop/account/invoice_payment/ShopAccountInvoicePayment.jsx","components/shop/account/invoice_payment_status/ShopAccountInvoicePaymentStatusBase.jsx","components/shop/account/invoice_payment_status/ShopAccountInvoicePaymentStatus.jsx","components/shop/account/invoices/queries.js","components/shop/account/invoices/ShopAccountInvoicesBase.jsx","components/shop/account/invoices/ShopAccountInvoices.jsx","components/shop/account/orders/queries.js","components/shop/account/orders/ShopAccountOrdersBase.jsx","components/shop/account/orders/tools.js","components/shop/account/orders/ShopAccountOrders.jsx","components/shop/account/orders/ShopAccountOrderCancel.jsx","components/shop/account/profile/queries.js","components/shop/account/profile/ShopAccountProfileBtnDownloadData.jsx","components/shop/account/profile/ShopAccountProfileBase.jsx","components/shop/account/profile/ShopAccountProfileForm.jsx","components/shop/account/profile/yupSchema.js","components/shop/account/profile/ShopAccountProfile.jsx","components/shop/account/subscriptions/queries.js","components/shop/account/subscriptions/ShopAccountSubscriptionsBase.jsx","components/shop/account/subscriptions/ShopAccountSubscriptions.jsx","components/shop/classes/book/ShopClassBookBack.jsx","components/shop/ShopCheckoutProgress.jsx","components/shop/ShopBase.jsx","components/shop/classes/book/ShopClassBookBase.jsx","components/shop/classes/book/ShopClassBookClasspassBtn.jsx","components/shop/classes/book/ShopClassBookClasspasses.jsx","components/shop/classes/book/ShopClassBookSubscriptionBtn.jsx","components/shop/classes/book/ShopClassBookSubscriptions.jsx","components/shop/classes/book/ShopClassBookPriceBtn.jsx","components/shop/classes/book/ShopClassBookPriceDropin.jsx","components/shop/classes/book/ShopClassBookPriceTrial.jsx","components/shop/classes/book/queries.js","components/shop/classes/book/ShopClassBook.jsx","components/shop/classes/booked/ShopClassBookedBase.jsx","components/shop/queries.js","components/shop/classes/booked/ShopClassBooked.jsx","components/shop/classes/schedule/ShopClassesScheduleBase.jsx","components/shop/classes/schedule/tools.js","components/shop/classes/schedule/ShopClassesScheduleFilter.jsx","components/shop/classes/schedule/ShopClassesScheduleButtonBook.jsx","components/shop/classes/schedule/ShopClassesSchedule.jsx","components/shop/contact/ShopContactBase.jsx","components/shop/contact/ShopContact.jsx","components/shop/events/ShopEventsBase.jsx","components/shop/events/queries.js","components/shop/events/ShopEvents.jsx","components/shop/event/ShopEventBase.jsx","components/shop/event/ShopEventTicketPricingCard.jsx","components/shop/event/queries.js","components/shop/event/ShopEvent.jsx","components/shop/event_ticket/ShopEventTicketBase.jsx","tools/cs_django_links.js","components/shop/ShopCheckoutForm.jsx","components/shop/event_ticket/queries.js","components/shop/event_ticket/ShopEventTicket.jsx","components/shop/home/queries.js","components/shop/home/ShopHomeBase.jsx","components/shop/home/ShopHome.jsx","components/shop/checkout/payment/ShopCheckoutPaymentBase.jsx","components/shop/checkout/queries.js","components/shop/checkout/order_summary/ShopCheckoutOrderSummary.jsx","components/shop/checkout/payment/queries.js","components/shop/checkout/payment/ShopCheckoutPayment.jsx","components/shop/checkout/complete/ShopCheckoutCompleteBase.jsx","components/shop/checkout/complete/ShopCheckoutComplete.jsx","components/shop/account/classes/queries.js","components/shop/account/classes/ShopAccountClassesBase.jsx","components/shop/account/classes/ShopAccountClasses.jsx","components/shop/classpasses/ShopClasspassesBase.jsx","components/shop/classpass/ShopClasspassBase.jsx","components/shop/classpass/queries.js","components/shop/classpass/ShopClasspassPricingCard.jsx","components/shop/classpasses/queries.js","components/shop/classpasses/ShopClasspasses.jsx","components/shop/classpass/ShopClasspass.jsx","components/shop/subscriptions/ShopSubscriptionsBase.jsx","components/shop/subscription/ShopSubscriptionPricingCard.jsx","components/shop/subscriptions/queries.js","components/shop/subscriptions/ShopSubscriptions.jsx","components/shop/subscription/ShopSubscriptionBase.jsx","components/shop/subscription/queries.js","components/shop/subscription/ShopSubscription.jsx","components/user/password/yupSchema.js","components/user/password/UserPasswordChangeForm.jsx","components/ui/CSStandaloneFormPage.jsx","components/user/password/UserPasswordChange.jsx","components/user/login/UserLoginForm.jsx","components/user/login/UserLogin.jsx","components/user/login/UserLoginRequired.jsx","components/user/login/UserLogout.jsx","components/user/session/UserSessionExpired.jsx","components/ui/CSStandalonePageWide.jsx","components/user/welcome/UserWelcome.jsx","components/Error404.js","AppRoot.js","App.js","serviceWorker.js","index.js"],"names":["resources","en_US","common","console","log","i18n","use","LanguageDetector","initReactI18next","init","lng","fallbackLng","ns","defaultNS","debug","keySeparator","interpolation","escapeValue","TOKEN_AUTH","gql","TOKEN_REFRESH","TOKEN_COOKIE_DELETE","TOKEN_REFRESH_COOKIE_DELETE","UPDATE_ACCOUNT_PASSWORD","cs_local_storage_keys","AUTH_TOKEN","AUTH_TOKEN_EXP","AUTH_TOKEN_ORIGIAT","AUTH_REFRESH_TOKEN","AUTH_REFRESH_TOKEN_EXP","AUTH_LOGIN_NEXT","FINANCE_INVOICES_FILTER_STATUS","FINANCE_INVOICES_EDIT_RETURN","FINANCE_ORDERS_FILTER_STATUS","FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE","INSIGHT_CLASSPASSES_YEAR","INSIGHT_SUBSCRIPTIONS_YEAR","ORGANIZATION_CLASSTYPES_ARCHIVED","RELATIONS_ACCOUNTS_FILTER_TYPE","RELATIONS_ACCOUNTS_SEARCH","RELATIONS_ACCOUNTS_IS_ACTIVE","RELATIONS_ACCOUNT_NOTES_NOTE_TYPE","RELATIONS_BUSINESSES_SHOW_ARCHIVE","RELATIONS_BUSINESSES_SEARCH","SCHEDULE_APPOINTMENTS_DATE_FROM","SCHEDULE_APPOINTMENTS_DATE_UNTIL","SCHEDULE_APPOINTMENTS_ORDER_BY","SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE","SCHEDULE_APPOINTMENTS_FILTER_LOCATION","SCHEDULE_CLASSES_DATE_FROM","SCHEDULE_CLASSES_DATE_UNTIL","SCHEDULE_CLASSES_ORDER_BY","SCHEDULE_CLASSES_FILTER_CLASSTYPE","SCHEDULE_CLASSES_FILTER_LEVEL","SCHEDULE_CLASSES_FILTER_LOCATION","SCHEDULE_CLASSES_CLASS_ATTENDANCE_SEARCH","SCHEDULE_EVENTS_ARCHIVED","SCHEDULE_EVENTS_TICKETS_CUSTOMERS_SEARCH","SHOP_CLASSES_DATE_FROM","SHOP_CLASSES_DATE_UNTIL","SHOP_CLASSES_ORDER_BY","SHOP_CLASSES_FILTER_CLASSTYPE","SHOP_CLASSES_FILTER_LEVEL","SHOP_CLASSES_FILTER_LOCATION","CSAuth","login","tokenData","localStorage","setItem","CSLS","token","payload","exp","origIat","refreshToken","refreshExpiresIn","removeItem","updateTokenInfo","refreshTokenData","cleanup","logout","expired","this","GET_APP_SETTINGS_QUERY","UPDATE_APP_SETTINGS","GET_ORGANIZATION_QUERY","AppSettingsContext","React","createContext","AppSettingsProvider","Provider","Consumer","OrganizationContext","OrganizationProvider","GET_USER","get_all_permissions","user","permissions","groups","edges","edge_index","group_edge","node","group_node","permission_index","permission_edge","codename_split","codename","split","Set","add","has_permission","permission","resource","you_shall_not_pass","has","HasPermissionWrapper","children","useQuery","loading","error","data","check_permission","GET_BACKEND_ANNOUNCEMENTS_QUERY","getNavBarItems","t","items","push","value","to","icon","LinkComponent","withRouter","NavLink","useExact","now","Date","withTranslation","match","history","fetchMore","avatarURL","urlImageThumbnailSmall","Wrapper","headerProps","href","alt","imageURL","navItems","Item","type","className","outline","size","color","accountDropdown","name","firstName","lastName","description","options","isDivider","navProps","itemsObjects","routerContextComponentType","RouterContextProvider","footerProps","copyright","getFullYear","target","rel","nav","Col","auto","autoClose","transition","Slide","Header","title","announcements","organizationAnnouncements","length","Row","cards","deck","map","md","Body","dangerouslySetInnerHTML","__html","content","link","linkTitle","block","params","AutomationHomeItemButton","ContentCard","handleOnScroll","scrollTop","document","documentElement","body","scrollHeight","clientHeight","window","innerHeight","Math","ceil","pageInfo","props","hasNextPage","onLoadMore","addEventListener","removeEventListener","cardTitle","headerContent","cardTabs","hasCardBody","Title","Footer","onClick","Component","defaultProps","f","GET_TASK_RESULT_QUERY","returnUrl","status","dateTimeFormatMoment","useContext","variables","taskName","headerOptions","Options","taskResults","djangoCeleryResultTaskResults","after","endCursor","updateQuery","previousResult","fetchMoreResult","newEdges","__typename","ColHeader","v4","moment","dateDone","format","taskKwargs","result","AUTOMATION_ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA","Yup","shape","subscriptionYear","required","positive","min","max","subscriptionMonth","isSubmitting","errors","Group","label","autoComplete","component","disabled","ADD_TASK","useMutation","addTask","initialValues","getMonth","validationSchema","onSubmit","values","setSubmitting","input","month","year","refetchQueries","query","then","toast","success","position","POSITION","BOTTOM_RIGHT","catch","useState","AUTOMATION_ACCOUNT_SUBSCRIPTION_INVOICES_SCHEMA","invoiceDate","dateFormat","selected","onChange","onBlur","isClearable","placeholderText","todayButton","showMonthDropdown","showYearDropdown","dropdownMode","date","AUTOMATION_ACCOUNT_SUBSCRIPTION_MOLLIE_COLLECTION_SCHEMA","invoices_active","orders_active","costcenters_active","glaccounts_active","taxrates_active","payment_methods_active","payment_batch_collections_active","payment_batch_payments_active","payment_batch_categories_active","activeLink","transparent","GroupItem","active","FinanceHome","id","lg","header","footer","GET_COSTCENTERS_QUERY","GET_COSTCENTER_QUERY","ADD_COSTCENTER","UPDATE_COSTCENTER","ARCHIVE_COSTCENTER","showBack","prefix","archived","setArchived","refetch","archiveCostcenter","loader","costcenters","financeCostcenters","code","COSTCENTER_SCHEMA","addCostcenter","updateCostcenter","initialData","financeCostcenter","GET_GLACCOUNTS_QUERY","GET_GLACCOUNT_QUERY","ADD_GLACCOUNT","UPDATE_GLACCOUNT","ARCHIVE_GLACCOUNT","archiveGlaccount","glaccounts","financeGlaccounts","GLACCOUNT_SCHEMA","addGlaccount","updateGlaccount","financeGlaccount","get_list_query_variables","queryVars","getItem","undefined","getDefaultValue","defaultValue","event","key","updateLocalStorageAndRefetch","FinanceInvoicesStatus","GET_INVOICES_QUERY","GET_INVOICE_QUERY","UPDATE_INVOICE","CANCEL_AND_CREATE_CREDIT_INVOICE","DELETE_FINANCE_INVOICE","CREATE_INVOICE_ITEM","UPDATE_INVOICE_ITEM","DELETE_INVOICE_ITEM","DELETE_INVOICE_PAYMENT","confirm_delete","msgConfirm","msgDescription","msgSuccess","deleteFunction","functionVariables","confirmAlert","customUI","onClose","location","pathname","fetchPolicy","deleteFinanceInvoice","invoices","financeInvoices","invoiceNumber","account","relationCompany","relationContactName","Small","summary","trunc","dateSent","dateDue","totalDisplay","balanceDisplay","refreshTokenAndOpenExportLinkInNewTab","doTokenRefresh","exportUrl","url","open","addInvoiceItem","financeInvoice","deleteInvoiceItem","productName","touched","handleChange","setFieldTouched","inputData","e","quantity","price","financeTaxRate","financeTaxRates","percentage","rateType","Object","keys","updateInvoiceItem","setTouched","refetchInvoice","updateItem","updating","setUpdating","onDragEnd","useCallback","draggableId","destination","source","reason","droppableId","index","updateLineNumber","node_id","line_number","lineNumber","setTimeout","statusColor","provided","snapshot","ref","innerRef","droppableProps","idx","draggableProps","dragHandleProps","placeholder","tinymceBasicConf","resize","menubar","plugins","statusbar","toolbar","setFieldValue","tinymceScriptSrc","textareaName","initialValue","terms","getContent","submitForm","note","updateInvoice","initialTab","subtotalDisplay","taxDisplay","paidDisplay","dateToLocalISO","slice","getDate","dateToLocalISOTime","getHours","getMinutes","TimeStringToJSDateOBJ","time_string","date_obj","time_split","setHours","setMinutes","financePaymentMethod","financePaymentMethods","initialPaymentMethod","organization","address","phone","email","registration","taxRegistration","creditInvoiceNumber","relationCompanyRegistration","relationCompanyTaxRegistration","relationAddress","relationPostcode","relationCity","relationCountry","deleteInvoicePayment","amountDisplay","paymentAddUrl","payments","onlinePaymentId","cancelAndCreateCreditInvoice","return_url","export_url","payment_add_url","toggle","triggerContent","creditInvoiceId","cancelAndCreateCreditFinanceInvoice","ml","GET_INVOICE_GROUPS_QUERY","GET_INVOICE_GROUP_QUERY","UPDATE_INVOICE_GROUP","ADD_INVOICE_GROUP","ARCHIVE_INVOICE_GROUP","archiveInvoiceGroup","invoiceGroups","financeInvoiceGroups","nextId","dueAfterDays","prefixYear","autoResetPrefixYear","displayPublic","INVOICE_GROUP_SCHEMA","moreThan","edit","Label","checked","addInvoiceGroup","updateInvoiceGroup","financeInvoiceGroup","INVOICE_GROUP_DEFAULT_SCHEMA","GET_INVOICE_GROUPS_DEFAULTS_QUERY","UPDATE_INVOICE_GROUP_DEFAULT","fetch_default_type_name","itemType","invoice_group_defaults","financeInvoiceGroupDefaults","mutation","updateDefault","GET_INVOICE_PAYMENT_QUERY","UPDATE_FINANCE_INVOICE_PAYMENT","form_type","invoiceId","invoice_id","queryLoading","queryError","invoice_number","padding","fullName","amount","role","ADD_FINANCE_INVOICE_PAYMENT","onCompleted","addInvoicePayment","mutationData","mutationLoading","mutationError","balance","invoiceQueryLoading","invoiceQueryError","invoiceData","paymentQueryLoading","paymentQueryError","paymentData","updateInvoicePayment","financeInvoicePayment","initialDate","FinanceOrderStatus","GET_ORDERS_QUERY","DELETE_FINANCE_ORDER","deleteOrder","orderNumber","orders","financeOrders","createdAt","batchType","toUpperCase","showAdd","batch_type","GET_PAYMENT_BATCHES_QUERY","GET_PAYMENT_BATCH_QUERY","GET_INPUT_VALUES","ADD_PAYMENT_BATCH","UPDATE_PAYMENT_BATCH","DELETE_PAYMENT_BATCH","msgEmptyList","deletePaymentBatch","financePaymentBatches","executionDate","financePaymentBatchCategory","FinancePaymentBatchCategory","categoryType","unstyled","get_add_options_collection","get_add_options_payment","batchId","setDisabled","updateFinancePaymentBatch","sentToBankColor","approvedColor","awaitingApprovalColor","rejectedColor","onClickStatusButton","newStatus","subTitle","List","create","category","financePaymentBatchCategories","includeZeroAmounts","appSettings","dateTimeFormat","timeFormatMoment","financePaymentBatch","countItems","exports","accountHolder","accountNumber","accountBic","currency","PAYMENT_BATCH_INVOICES_SCHEMA","PAYMENT_BATCH_CATEGORY_SCHEMA","PAYMENT_BATCH_EDIT_SCHEMA","batchCategoryType","category_type","addFinancePaymentBatch","yupSchema","createFinancePaymentBatch","inputValues","showArchive","GET_PAYMENT_BATCH_CATEGORIES_QUERY","GET_PAYMENT_BATCH_CATEGORY_QUERY","ARCHIVE_PAYMENT_BATCH_CATEGORY","archivePaymentBatchCategory","payment_batch_categories","ADD_PAYMENT_BATCH_CATEGORY","addFinancePaymentBatchCategory","UPDATE_PAYMENT_BATCH_CATEGORY","paymentBatchCategoryId","updateFinancePaymentBatchCategory","GET_FINANCE_ORDER_QUERY","UPDATE_ORDER","updateOrder","order","financeOrder","priceDisplay","message","GET_PAYMENT_METHODS_QUERY","GET_PAYMENT_METHOD_QUERY","ADD_PAYMENT_METHOD","UPDATE_PAYMENT_METHOD","ARCHIVE_PAYMENT_METHOD","archivePaymentMethod","paymentMethods","systemMethod","PAYMENT_METHOD_SCHEMA","addPaymentMethod","updatePaymentMethod","GET_TAXRATES_QUERY","GET_TAXRATE_QUERY","ADD_TAXRATE","UPDATE_TAXRATE","ARCHIVE_TAXRATE","archiveTaxrate","taxrates","TAX_RATE_SCHEMA","typeError","addFinanceTaxrate","classpasses_active","subscriptions_active","updateTaxrate","InsightHome","GET_CLASSPASSES_SOLD_QUERY","GET_CLASSPASSES_ACTIVE_QUERY","refetchData","previousYear","parseInt","currentYear","nextYear","export_url_active","export_url_sold","loadingSold","errorSold","dataSold","refetchSold","loadingActive","errorActive","dataActive","refetchActive","data_sold_label","chart_data_sold","insightAccountClasspassesSold","data_active_label","chart_data_active","insightAccountClasspassesActive","style","height","x","columns","colors","sold","names","axis","y","bottom","show","left","right","tooltip","point","RootComponent","GET_SUBSCRIPTIONS_SOLD_QUERY","GET_SUBSCRIPTIONS_ACTIVE_QUERY","classtypes_active","discoveries_active","documents_active","languages_active","locations_active","levels_active","holidays_active","organization_active","organization_branding_active","announcements_active","insightAccountSubscriptionsSold","insightAccountSubscriptionsActive","OrganizationHome","ORGANIZATION_SCHEMA","customFileInputLabelStyle","whiteSpace","display","overflow","UPDATE_ORGANIZATION","updateOrganization","Image","src","urlLogoLogin","Details","urlLogoInvoice","urlLogoEmail","urlLogoShopHeader","urlLogoSelfCheckin","formTitle","inputFileName","fileInputLabel","handleFileInputChange","updateField","update_field","fileName","setFileName","useRef","files","inputVars","reader","FileReader","onload","reader_event","b64_enc_file","logoLoginFileName","logoLogin","logoInvoiceFileName","logoInvoice","logoEmailFileName","logoEmail","logoShopHeaderFileName","logoShopHeader","logoSelfCheckinFileName","logoSelfCheckin","file","current","readAsDataURL","showEditBack","GET_ANNOUNCEMENTS_QUERY","GET_ANNOUNCEMENT_QUERY","ADD_ANNOUNCEMENT","UPDATE_ANNOUNCEMENT","DELETE_ANNOUNCEMENT","deleteAnnouncement","displayShop","displayBackend","dateStart","dateEnd","priority","ANNOUNCEMENT_SCHEMA","addAnnouncement","announcementId","updateAnnouncement","organizationAnnouncement","GET_APPOINTMENTS_QUERY","GET_APPOINTMENT_QUERY","GET_INPUT_VALUES_QUERY","ARCHIVE_APPOINTMENT","organizationAppointmentCategory","category_id","appointments","organizationAppointments","organizationAppointmentPrices","archiveAppointmentCategorysRoom","APPOINTMENT_SCHEMA","ADD_APPOINTMENT","addAppointment","UPDATE_APPOINTMENT","OrganizationAppointmentEdit","organizationAppointment","initialGlaccount","initialCostcenter","updateLocation","GET_APPOINTMENT_CATEGORIES_QUERY","GET_APPOINTMENT_CATEGORY_QUERY","ARCHIVE_APPOINTMENT_CATEGORY","appointment_categories","organizationAppointmentCategories","archiveLocation","APPOINTMENT_CATEGORY_SCHEMA","ADD_ORGANIZATION_APPOINTMENT_CATEGORY","addAppointmentCategory","UPDATE_APPOINTMENT_CATEGORY","OrganizationAppointmentCategoryEdit","updateAppointmentCategory","GET_APPOINTMENT_PRICES_QUERY","GET_APPOINTMENT_PRICE_QUERY","DELETE_APPOINTMENT_PRICE","appointment_id","prices","deleteAppointmentPrice","APPOINTMENT_PRICE_SCHEMA","accountTeacherProfiles","ADD_APPOINTMENT_PRICE","OrganizationAppointmentPriceForm","UPDATE_APPOINTMENT_PRICE","OrganizationAppointmentPriceEdit","organizationAppointmentPrice","initialAccount","initialFinanceTaxRate","GET_CLASSPASSES_QUERY","GET_CLASSPASS_QUERY","CREATE_CLASSPASS","UPDATE_CLASSPASS","ARCHIVE_CLASSPASS","archiveClasspass","classpasses","organizationClasspasses","trialPass","unlimited","classes","validity","validityUnitDisplay","CLASSPASS_SCHEMA","validityUnit","quickStatsAmount","OrganizationClasspassForm","unlimied","createClasspass","organizationMembership","updateClasspass","initialMembership","organizationClasspass","GET_CLASSPASS_GROUPS_QUERY","GET_CLASSPASS_GROUP_QUERY","GET_CLASSPASS_GROUP_PASSES_QUERY","ADD_CLASSPASS_GROUP","UPDATE_CLASSPASS_GROUP","DELETE_CLASSPASS_GROUP","ADD_CARD_TO_GROUP","DELETE_CARD_FROM_GROUP","deleteClasspassGroup","classpass_groups","organizationClasspassGroups","substring","CLASSPASS_GROUP_SCHEMA","addClasspassGroup","hasExtraSpace","updateClasspassGroup","organizationClasspassGroup","groupId","addCardToGroup","deleteCardFromGroup","passes","group","group_passes","pass_id","GET_CLASSTYPES_QUERY","GET_CLASSTYPE_QUERY","ADD_CLASSTYPE","UPDATE_CLASSTYPE","UPDATE_CLASSTYPE_IMAGE","ARCHIVE_CLASSTYPE","archiveClasstype","classtypes","organizationClasstypes","CLASSTYPE_SCHEMA","urlWebsite","addClasstype","image","updateClasstype","organizationClasstype","classtypeId","uploadImage","imageFileName","GET_DISCOVERIES_QUERY","GET_DISCOVERY_QUERY","ADD_DISCOVERY","UPDATE_DISCOVERY","ARCHIVE_DISCOVERY","archiveDiscovery","discoveries","organizationDiscoveries","DISCOVERY_SCHEMA","addDiscovery","updateDiscovery","organizationDiscovery","organizationId","organization_id","docTypes","docType","FormatISODateStr","ISODateStr","mediaUrl","headerLinks","sidebarButton","GET_DOCUMENTS_QUERY","GET_DOCUMENT_QUERY","ADD_DOCUMENT","UPDATE_DOCUMENT","DELETE_DOCUMENT","deleteOrganizationDocument","confirmDelete","version","documentType","getSubtitle","document_type","back","organizationDocuments","ISODateString","urlDocument","addDocument","documentFileName","updateDocument","organizationDocument","GET_HOLIDAYS_QUERY","GET_HOLIDAY_QUERY","ADD_HOLIDAY","UPDATE_HOLIDAY","DELETE_HOLIDAY","GET_HOLIDAY_LOCATIONS_QUERY","ADD_LOCATION_TO_HOLIDAY","DELETE_LOCATION_FROM_HOLIDAY","deleteHoliday","holidays","organizationHolidays","organizationLocations","HOLIDAY_SCHEMA","addHoliday","updateHoliday","organizationHoliday","holidayId","addLocationToHoliday","deleteLocationFromHoliday","locations","holiday","holiday_locations","locationId","organizationLocation","GET_LANGUAGES_QUERY","GET_LANGUAGE_QUERY","ADD_LANGUAGE","UPDATE_LANGUAGE","ARCHIVE_LANGUAGE","archiveLanguage","languages","organizationLanguages","LANGUAGE_SCHEMA","addLanguage","updateLanguage","organizationLanguage","GET_LOCATIONS_QUERY","GET_LOCATION_QUERY","ADD_LOCATION","UPDATE_LOCATION","ARCHIVE_LOCATION","LOCATION_SCHEMA","addLocation","GET_LOCATION_ROOMS_QUERY","GET_LOCATION_ROOM_QUERY","ADD_LOCATION_ROOM","UPDATE_LOCATION_ROOM","ARCHIVE_LOCATION_ROOM","location_id","organizationLocationId","archiveLocationRoom","locationRooms","organizationLocationRooms","organizationLocationsRooms","LOCATION_ROOM_SCHEMA","addLocationRoom","updateLocationRoom","organizationLocationRoom","GET_LEVELS_QUERY","GET_LEVEL_QUERY","ADD_LEVEL","UPDATE_LEVEL","ARCHIVE_LEVEL","archiveLevel","levels","organizationLevels","LEVEL_SCHEMA","addLevel","updateLevel","organizationLevel","Validity","GET_MEMBERSHIPS_QUERY","GET_MEMBERSHIP_QUERY","ARCHIVE_MEMBERSHIP","memberships","organizationMemberships","archiveMembership","MEMBERSHIP_SCHEMA","CREATE_MEMBERSHIP","OrganizationMembershipAdd","createMembership","termsAndConditions","UPDATE_MEMBERSHIP","OrganizationMembershipEdit","GET_SUBSCRIPTIONS_QUERY","GET_SUBSCRIPTION_QUERY","CREATE_SUBSCRIPTION","UPDATE_SUBSCRIPTION","ARCHIVE_SUBSCRIPTION","archiveSubscription","subscriptions","organizationSubscriptions","subscriptionUnitDisplay","priceTodayDisplay","SUBSCRIPTION_SCHEMA","sortOrder","minDuration","subscriptionUnit","creditValidity","createSubscription","reconciliationClasses","updateSubscription","organizationSubscription","GET_SUBSCRIPTION_GROUPS_QUERY","GET_SUBSCRIPTION_GROUP_QUERY","GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY","ADD_SUBSCRIPTION_GROUP","UPDATE_SUBSCRIPTION_GROUP","DELETE_SUBSCRIPTION_GROUP","deleteSubscriptionGroup","subscription_groups","organizationSubscriptionGroups","SUBSCRIPTION_GROUP_SCHEMA","addSubscriptionGroup","updateSubscriptionGroup","organizationSubscriptionGroup","group_subscriptions","GET_SUBSCRIPTION_PRICES_QUERY","GET_SUBSCRIPTION_PRICE_QUERY","DELETE_SUBSCRIPTION_PRICE","accounts_active","b2b_active","subscription_id","subscription_prices","organizationSubscriptionPrices","subscription","organizationSubscriptionsPrices","deleteSubscriptionPrice","SUBSCRIPTION_PRICE_SCHEMA","ADD_SUBSCRIPTION_PRICE","addSubscription","UPDATE_SUBSCRIPTION_PRICE","OrganizationSubscriptionPriceEdit","organizationSubscriptionPrice","updateSubscriptionPrice","RelationsHome","InputSearch","inputValue","createRef","initialValueKey","state","submitValue","doneTypingInterval","typingTimer","focus","clearTimeout","setState","onKeyUp","onInputKeyUp","bind","onInputChange","onClear","isActive","customer","teacher","employee","search","searchName","Select","GET_ACCOUNTS_QUERY","GET_ACCOUNT_QUERY","ADD_ACCOUNT","UPDATE_ACCOUNT","UPDATE_ACCOUNT_ACTIVE","DELETE_ACCOUNT","updateAccountActive","deleteAccount","accounts","reverse","classpass","classesRemainingDisplay","first_name","last_name","ACCOUNT_SCHEMA","addAccount","accountId","createAccount","profile_active","classes_active","tickets_active","teacher_profile_active","bank_account_active","notes_active","finance_payment_batch_category_item_active","accepted_documents_active","avatarSize","inline","placement","mobile","ISO_COUNTRY_CODES","dateOfBirth","emergency","postcode","city","country","Code","Name","keyNumber","account_id","headerTitle","updateAccount","gender","input_vars","updateImage","GET_ACCOUNT_ACCEPTED_DOCUMENTS_QUERY","acceptedDocuments","accountAcceptedDocuments","dateAccepted","clientIp","GET_ACCOUNT_BANK_ACCOUNTS_QUERY","UPDATE_ACCOUNT_BANK_ACCOUNT","GET_ACCOUNT_BANK_ACCOUNT_MANDATE_QUERY","CREATE_ACCOUNT_BANK_ACCOUNT_MANDATE","UPDATE_ACCOUNT_BANK_ACCOUNT_MANDATE","DELETE_ACCOUNT_BANK_ACCOUNT_MANDATE","bankAccountId","holder","number","bic","updateAccountBankAccount","deleteAccountBankAccountMandate","accountBankAccount","accountBankAccounts","mandates","reference","signatureDate","bank_account_id","createAccountBankAccountMandate","refrence","mandateId","updateAccountBankAccountMandate","mandate","accountBankAccountMandate","signDate","GET_ACCOUNT_CLASSES_QUERY","GET_SCHEDULE_CLASS_ATTENDANCE_QUERY","DELETE_SCHEDULE_CLASS_ATTENDANCE","UPDATE_SCHEDULE_ITEM_ATTENDANCE","timeFormat","deleteScheduleItemAttendance","scheduleItem","timeStart","scheduleItemAttendances","bookingStatus","GET_ACCOUNT_CLASSPASSES_QUERY","GET_ACCOUNT_CLASSPASS_QUERY","CREATE_ACCOUNT_CLASSPASS","UPDATE_ACCOUNT_CLASSPASS","DELETE_ACCOUNT_CLASSPASS","deleteAccountClasspass","accountClasspasses","nullable","createAccountClasspass","classpassId","accountClasspass","initialdata","protectedMediaUrl","deleteAccountDocument","accountDocuments","urlProtectedDocument","addAccountDocument","DOCUMENT_SCHEMA","accountDocument","GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY","GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_QUERY","CREATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM","UPDATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM","DELETE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM","deleteAccountFinancePaymentBatchCategoryItem","AccountFinancePaymentBatchCategoryItemsBase","batchCategoryItems","accountFinancePaymentBatchCategoryItems","replace","ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA","addAccountFinancePaymentBatchCategoryItem","accountFinancePaymentBatchCategoryItemId","updateAccountFinancePaymentBatchCategoryItem","accountFinancePaymentBatchCategoryItem","GET_ACCOUNT_INVOICES_QUERY","CREATE_ACCOUNT_INVOICE","pageHeader","FinanceInvoiceStatus","registrationFeePaid","createInvoice","createFinanceInvoice","GET_ACCOUNT_MEMBERSHIPS_QUERY","GET_ACCOUNT_MEMBERSHIP_QUERY","DELETE_ACCOUNT_MEMBERSHIP","accountMemberships","deleteAccountMembership","frequencyType","CREATE_ACCOUNT_MEMBERSHIP","AccountMembershipAdd","UPDATE_ACCOUNT_MEMBERSHIP","AccountMembershipEdit","accountMembership","updateMembership","LoadMoreOnBottomScroll","GET_ACCOUNT_NOTES_QUERY","GET_ACCOUNT_NOTE_QUERY","CREATE_ACCOUNT_NOTE","UPDATE_ACCOUNT_NOTE","DELETE_ACCOUNT_NOTE","noteType","deleteAccountNote","notes","accountNotes","injury","noteBy","addNote","noteId","updateNote","accountNote","GET_ACCOUNT_ORDERS_QUERY","AccountOrderDelete","GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY","GET_ACCOUNT","UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET","updateAccountScheduleEventTicket","accountScheduleEventTickets","scheduleEventTicket","scheduleEvent","cancelled","invoiceItems","infoMailSent","GET_ACCOUNT_SUBSCRIPTIONS_QUERY","GET_ACCOUNT_SUBSCRIPTION_QUERY","CREATE_ACCOUNT_SUBSCRIPTION","UPDATE_ACCOUNT_SUBSCRIPTION","DELETE_ACCOUNT_SUBSCRIPTION","deleteAccountSubscription","accountSubscriptions","creditTotal","createAccountSubscription","subscriptionId","accountSubscription","tabs","class_tabs_position","active_tab","activeTab","linkTo","GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY","GET_ACCOUNT_SUBSCRIPTION_ALT_PRICE_QUERY","DELETE_ACCOUNT_SUBSCRIPTION_ALT_PRICE","AccountSubscriptionEditListBaseBase","onLoaMore","deleteAccountSubscriptionAltPrice","query_vars","buttonAdd","accountSubscriptionAltPrices","ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA","ADD_ACCOUNT_SUBSCRIPTION_ALT_PRICE","addSubscriptionAltPrice","UPDATE_ACCOUNT_SUBSCRIPTION_ALT_PRICE","updateSubscriptionAltPrice","accountSubscriptionAltPrice","GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY","GET_ACCOUNT_SUBSCRIPTION_BLOCK_QUERY","DELETE_ACCOUNT_SUBSCRIPTION_BLOCK","deleteAccountSubscriptionBlock","accountSubscriptionBlocks","ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA","ADD_ACCOUNT_SUBSCRIPTION_BLOCK","addSubscriptionBlock","UPDATE_ACCOUNT_SUBSCRIPTION_BLOCK","updateSubscriptionBlock","accountSubscriptionBlock","mutationType","GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY","GET_ACCOUNT_SUBSCRIPTION_CREDIT_QUERY","DELETE_ACCOUNT_SUBSCRIPTION_CREDIT","deleteAccountSubscriptionCredit","accountSubscriptionCredits","mutationAmount","ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA","ADD_ACCOUNT_SUBSCRIPTION_CREDIT","addSubscriptionCredit","UPDATE_ACCOUNT_SUBSCRIPTION_CREDIT","updateSubscriptionCredit","accountSubscriptionCredit","GET_FINANCE_INVOICE_ITEM_QUERY","deleteAccountSubscriptionInvoice","financeInvoiceItems","ACCOUNT_SUBSCRIPTION_INVOICE_SCHEMA","queryData","addFinanceInvoice","financeInvoiceId","GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY","GET_ACCOUNT_SUBSCRIPTION_PAUSE_QUERY","DELETE_ACCOUNT_SUBSCRIPTION_PAUSE","deleteAccountSubscriptionPause","accountSubscriptionPauses","ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA","ADD_ACCOUNT_SUBSCRIPTION_PAUSE","addSubscriptionPause","UPDATE_ACCOUNT_SUBSCRIPTION_PAUSE","updateSubscriptionPause","accountSubscriptionPause","GET_ACCOUNT_TEACHER_PROFILE_QUERY","UPDATE_ACCOUNT_TEACHER_PROFILE","ACCOUNT_TEACHER_PROFILE_SCHEMA","events","education","bio","urlBio","updateAccountTeacherProfile","showArchived","GET_BUSINESSES_QUERY","GET_BUSINESS_QUERY","UPDATE_BUSINESS","confirm_archive","archiveFunction","confirm_unarchive","DELETE_BUSINESS","updateBusiness","deleteBusiness","businesses","show_archive","ADD_BUSINESS","addBusiness","b2b","businessId","createBusiness","business","emailContact","emailBilling","phone2","events_active","business_id","ScheduleHome","orderBy","dateFrom","dateUntil","DELETE_SCHEDULE_APPOINTMENT","edit_active","teachers_available_active","scheduleAppointments","nextWeekFrom","nextWeekUntil","subtract","currentWeekFrom","currentWeekUntil","scheduleItemId","timeEnd","ItemDivider","badge","badgeType","deleteScheduleAppointment","SCHEDULE_APPOINTMENTS_FILTER_LEVEL","clearable","showTimeSelect","showTimeSelectOnly","timeIntervals","frequencyInterval","CREATE_APPOINTMENT","ScheduleAppointmentAdd","appointmentId","AppointmentEditBase","menu_activeLink","default_card","sidebar_button","initialTimeStart","subtitle","locationRoom","starttime","appointment_edit_all_subtitle","card_title","ScheduleAppointmentEditAll","initialTimeEnd","updateScheduleAppointment","attendanceCountType","represent_teacher","textColor","represent_class_status","get_class_messages","holidayName","selectClass","GET_CLASSES_QUERY","GET_CLASS_QUERY","CREATE_CLASS","DELETE_SCHEDULE_CLASS","deleteScheduleClass","scheduleClasses","account2","role2","CLASS_SCHEMA","spaces","walkInSpaces","infoMailContent","teachers_active","prices_active","createScheduleClass","UPDATE_CLASS","classId","defaultCard","menuActiveLink","class_id","class_edit_all_subtitle","classtype","represent_teacher_role","updateScheduleClass","initialLevelID","shopBook","attend","SCHEDULE_CLASS_CLASSPASS_SCHEMA","GET_SCHEDULE_CLASS_CLASSPASSES_QUERY","UPDATE_SCHEDULE_CLASS_CLASSPASS","updateScheduleClassClasspass","scheduleItemOrganizationClasspassGroups","enroll","SCHEDULE_CLASS_SUBSCRIPTION_SCHEMA","GET_SCHEDULE_CLASS_SUBSCRIPTIONS_QUERY","UPDATE_SCHEDULE_CLASS_SUBSCRIPTION","updateScheduleClassSubscription","scheduleItemOrganizationSubscriptionGroups","GET_SCHEDULE_CLASS_TEACHERS_QUERY","GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY","ADD_SCHEDULE_CLASS_TEACHER","UPDATE_SCHEDULE_CLASS_TEACHER","DELETE_SCHEDULE_CLASS_TEACHER","deleteScheduleItemTeacher","ButtonAdd","scheduleItemTeachers","SCHEDULE_CLASS_TEACHER_SCHEMA","addScheduleClassTeacher","updateScheduleClassTeacher","scheduleItemTeacher","initialAccount2","get_accounts_query_variables","get_attendance_list_query_variables","schedule_item_id","class_subtitle","class_date","attendance_active","setAttendanceStatus","updateAttendance","showSearch","setShowSearch","queryAttendanceLoading","queryAttendanceError","queryAttendanceData","useLazyQuery","getAccounts","fetchMoreAccounts","queryAccountsLoading","queryAccountsError","queryAccountsData","checkedInIds","includes","GET_BOOKING_OPTIONS_QUERY","CREATE_SCHEDULE_ITEM_ATTENDANCE","getUrlFromReturnTo","returnTo","createInput","classCheckin","onClickCheckin","allowed","blocked","paused","priceDropin","locationID","priceTrial","listType","scheduleClassBookingOptions","scheduleItemPrices","organizationClasspassDropin","organizationClasspassTrial","hasReachedTrialLimit","GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY","DELETE_SCHEDULE_CLASS_WEEKLY_OTC","UPDATE_SCHEDULE_CLASS_WEEKLY_OTC","SCHEDULE_CLASS_EDIT_OTC_SCHEMA","notRequired","deleteClassOTC","showDelete","updateScheduleClassWeeklyOTC","scheduleClassWeeklyOtcs","graphQLErrors","GET_SCHEDULE_ITEM_PRICES_QUERY","GET_SINGLE_SCHEDULE_ITEM_PRICE_QUERY","ADD_SCHEDULE_ITEM_PRICE","UPDATE_SCHEDULE_ITEM_PRICE","DELETE_SCHEDULE_ITEM_PRICE","deleteClassPrice","addScheduleClassPrice","editScheduleClassPrice","initialOrganizationClasspassDropin","initialOrganizationClasspassTrial","scheduleItemPrice","sidebarContent","displayMenu","GET_SCHEDULE_EVENTS_QUERY","GET_SCHEDULE_EVENT_QUERY","ARCHIVE_SCHEDULE_EVENT","archiveScheduleEvent","cardHeaderContent","scheduleEvents","SCHEDULE_EVENT_EDIT_SCHEMA","autoSendInfoMail","teacher2","tagline","preview","CREATE_SCHEDULE_EVENT","general_active","earlybirds_active","activities_active","media_active","createScheduleEvent","autoSentInfoMail","eventId","pageHeaderOptions","event_id","ScheduleEventEditMenu","cardSubTitle","UPDATE_SCHEDULE_EVENT","updateScheduleEvent","initialOrgranizationlevel","initialTeacher","initialTeacher2","GET_SCHEDULE_EVENT_ACTIVITIES_QUERY","GET_SCHEDULE_EVENT_ACTIVITY_QUERY","DELETE_SCHEDULE_EVENT_ACTIVITY","deleteScheduleEventActivity","scheduleItems","countAttendance","SCHEDULE_EVENT_ACTIVITY_SCHEMA","ADD_SCHEDULE_EVENT_ACTIVITY","addScheduleEventTicket","scheduleItemType","loadingActivity","errorActivity","dataActivity","cardActivitySubtitle","UPDATE_SCHEDULE_EVENT_ACTIVITY","updateScheduleEventTicket","GET_SCHEDULE_ITEM_ATTENDANCES_QUERY","schedule_item","GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY","GET_SCHEDULE_EVENT_EARLYBIRD_QUERY","ADD_SCHEDULE_EVENT_EARLYBIRD","UPDATE_SCHEDULE_EVENT_EARLYBIRD","DELETE_SCHEDULE_EVENT_EARLYBIRD","deleteScheduleEventEarlybird","scheduleEventEarlybirds","discountPercentage","SCHEDULE_EVENT_EARLYBIRDS_SCHEMA","addScheduleEventEarlybird","ScheduleEventEarlybirdForm","scheduleEventEarlybirdId","updateScheduleEventEarlybird","scheduleEventEarlybird","GET_SCHEDULE_EVENT_MEDIAS_QUERY","GET_SCHEDULE_EVENT_MEDIA_QUERY","DELETE_SCHEDULE_EVENT_MEDIA","deleteScheduleEventMedia","scheduleEventMedias","SCHEDULE_EVENT_MEDIA_SCHEMA","ADD_SCHEDULE_EVENT_MEDIA","addScheduleEventMedia","scheduleEventMediaId","loadingMedia","errorMedia","dataMedia","scheduleEventMedia","UPDATE_SCHEDULE_EVENT_MEDIA","updateScheduleEventMedia","updateMedia","GET_SCHEDULE_EVENT_TICKETS_QUERY","GET_SCHEDULE_EVENT_TICKET_QUERY","DELETE_SCHEDULE_EVENT_TICKET","deleteScheduleEventTicket","scheduleEventTickets","isSoldOut","deletable","SCHEDULE_EVENT_TICKET_SCHEMA","ADD_SCHEDULE_EVENT_TICKET","ticketId","searchResults","loadingTicket","errorTicket","dataTicket","ticket","cardTicketSubtitle","UPDATE_SCHEDULE_EVENT_TICKET","initialFinanceGlaccount","initialFinanceCostcenter","GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEMS_QUERY","SCHEDULE_EVENT_TICKET_SCHEDLE_ITEM_SCHEMA","included","UPDATE_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM","updateScheduleEventTicketScheduleItem","scheduleEventTicketActivities","scheduleEventTicketScheduleItems","fullEvent","ADD_ACCOUNT_SCHEDULE_EVENT_TICKET","addAccountScheduleEventTicket","accountIdsWithTickets","SELFCHECKIN_CHECKIN_SEARCH","refetchAttendance","GET_ORGANIZATION_LOCATIONS_QUERY","action","GET_LOCATION_CLASSES_QUERY","today","GET_SYSTEM_SETTINGS_QUERY","UPDATE_SYSTEM_SETTING","headerSubTitle","alertBanner","setting","loadingVersion","errorVersion","dataVersion","loadingPatch","errorPatch","dataPatch","patch","systemSettings","finance_bank_accounts_iban","updateSettings","iban","settings","i","finance_currency","finance_currency_symbol","sidebarActive","loadingCurrency","errorCurrency","dataCurrency","loadingSymbol","errorSymbol","dataSymbol","symbol","DATETIME_SCHEMA","system_hostname","queryVariables","hostname","mollie_api_key","mollieApiKey","H4","GET_SYSTEM_MAIL_TEMPLATES_QUERY","GET_SYSTEM_MAIL_TEMPLATE_QUERY","UPDATE_SYSTEM_MAIL_TEMPLATE","mailTemplates","systemMailTemplates","help","subject","comments","SettingsMailTemplateEditBase","templateInfo","template_name","helpTexts","suffix","getTemplateInfo","systemMailTemplate","GET_SHOP_FEATURES_QUERY","UPDATE_SHOP_FEATURES","SHOP_FEATURES_SCHEMA","shopFeatures","systemFeatureShop","workflow_class_book_days_advance","workflow_class_cancel_until","loadingDaysAdvance","errorDaysAdvance","dataDaysAdvance","loadingCancelUntil","errorCancelUntil","dataCancelUntil","workflow_subscription_pauses_min_duration_in_days","workflow_subscription_pauses_max_pauses_in_year","loadingMinDuration","errorMinDuration","dataMinDuration","loadingMaxPauses","errorMaxPauses","dataMaxPauses","workflow_trial_pass_limit","loadingTrialClassLimit","errorTrialClassLimit","dataTrialClassLimit","refreshTokenExp","accountTitle","accountLink","headerImageUrl","getHeaderImageUrl","GET_USER_PROFILE","buttonText","DisplayClassInfo","classDate","classData","scheduleClass","GET_ACCOUNT_CLASS_QUERY","accountName","attendanceId","attendance_id","loadingAttendance","errorAttendance","dataAttendance","loadingUser","errorUser","dataUser","updateScheduleItemAttendance","scheduleItemAttendance","cancellationPossible","GET_SCHEDULE_CLASS_QUERY","complete","QUERY_ACCOUNT_CLASSPASSES","skip","ShopAccountClasspassesBase","eventTickets","CREATE_PAYMENT_LINK","onlinePaymentsAvailable","cardTitleLoadingError","btnPayNow","initialBtnText","btn_text","setBtnText","createPaymentLink","invoice","setAttribute","paymentLink","createFinanceInvoicePaymentLink","financeInvoicePaymentLink","alert","QUERY_ACCOUNT_INVOICES","responsive","muted","QUERY_ACCOUNT_ORDERS","get_order_card_status_color","cancelFunction","cancelOrder","UPDATE_PROFILE","updateProfile","QUERY_ACCOUNT_SUBSCRIPTIONS","ShopAccountSubscriptionsBase","checkoutProgress","color_order","color_payment","color_complete","addOn","alreadyBooked","classType","class_info","bookingOpenOn","CREATE_ORDER","buttonBook","capitalize","word","lower","toLowerCase","charAt","isBefore","prevWeekFrom","prevWeekUntil","xs","sm","media","urlImageThumbnailLarge","dateString","IconGroup","IconItem","pt","eventTicket","showButton","ticketScheduleItems","Category","isEarlybirdPrice","Price","totalPriceDisplay","AttributeList","AttributeItem","Button","tickets","eventID","cs_django_links","EXPORT_TERMS_AND_CONDITIONS","EXPORT_PRIVACY_POLICY","scheduleEventTicketId","createOrder","createOrderInput","orderId","createFinanceOrder","ShopCheckoutForm","GET_SHOP_ANNOUNCEMENTS_QUERY","GET_ORDER_QUERY","orderItems","attendanceDate","msgNextStep","buttonNext","createFinanceOrderPaymentLink","financeOrderPaymentLink","subHeader","contentText","paymentText","total","schduleItemAttendances","btnLink","GET_ORGANIZATION_CLASSPASSES_QUERY","loadingClass","errorClass","dataClass","GET_ORGANIZATION_SUBSCRIPTIONS_QUERY","ShopSubscriptionPricingCard","PASSWORD_CHANGE_SCHEMA","passwordCurrent","passwordNew","passwordNew2","oneOf","urlLogo","updatePassword","CSStandaloneFormPage","vars","messages","etFieldValue","esetFieldTouched","preventDefault","password","doTokenAuth","username","next","tokenAuth","setActive","deleteCookie","deleteRefreshCookie","info","offsetMd","Error404","SetCurrentUrlAsNext","PrivateRoute","rest","authTokenExpired","path","ContinueAsYouAre","render","LoginRequired","SessionExpired","tokenExp","reload","loadingAppSettings","errorAppSettings","dataAppSettings","loadingOrganization","errorOrganization","dataOrganization","exact","HomeHome","AutomationHome","AutomationAccountSubscriptionCredits","AutomationAccountSubscriptionCreditAdd","AutomationAccountSubscriptionCreditExpiration","AutomationAccountSubscriptionCreditExpirationAdd","AutomationAccountSubscriptionInvoices","AutomationAccountSubscriptionInvoicesAdd","AutomationAccountSubscriptionMollieCollections","AutomationAccountSubscriptionMollieCollectionAdd","FinanceCostCenters","FinanceCostCenterAdd","FinanceCostCenterEdit","FinanceInvoices","FinanceInvoiceEdit","FinanceInvoiceGroups","FinanceInvoiceGroupAdd","FinanceInvoiceGroupEdit","FinanceInvoiceGroupDefaults","FinanceInvoicePaymentAdd","FinanceInvoicePaymentEdit","FinanceGLAccounts","FinanceGLAccountAdd","FinanceGLAccountEdit","FinanceOrders","FinanceOrderEdit","FinancePaymentBatches","FinancePaymentBatchAddWhat","FinancePaymentBatchView","FinancePaymentCollectionBatchAdd","FinancePaymentCollectionBatchEdit","FinancePaymentBatchCategories","FinancePaymentBatchCategoryAdd","FinancePaymentBatchCategoryEdit","FinancePaymentMethods","FinancePaymentMethodAdd","FinancePaymentMethodEdit","FinanceTaxRates","FinanceTaxRatesAdd","FinanceTaxRatesEdit","OrganizationEdit","OrganizationBranding","OrganizationBrandingEdit","OrganizationDocuments","OrganizationListDocuments","OrganizationDocumentAdd","OrganizationDocumentEdit","OrganizationAnnouncements","OrganizationAnnouncementAdd","OrganizationAnnouncementEdit","OrganizationAppointmentCategories","OrganizationAppointmentCategoryAdd","OrganizationAppointments","OrganizationAppointmentAdd","OrganizationAppointmentPrices","OrganizationAppointmentPriceAdd","OrganizationClasspasses","OrganizationClasspassAdd","OrganizationClasspassEdit","OrganizationClasspassesGroups","OrganizationClasspassesGroupAdd","OrganizationClasspassesGroupEdit","OrganizationClasspassesGroupEditPasses","OrganizationClasstypes","OrganizationClasstypeAdd","OrganizationClasstypeEdit","OrganizationClasstypeEditImage","OrganizationDiscoveries","OrganizationDiscoveryAdd","OrganizationDiscoveryEdit","OrganizationHolidays","OrganizationHolidayAdd","OrganizationHolidayEdit","OrganizationHolidayEditLocations","OrganizationLanguages","OrganizationLanguageAdd","OrganizationLanguageEdit","OrganizationLevels","OrganizationLevelAdd","OrganizationLevelEdit","OrganizationLocations","OrganizationLocationAdd","OrganizationLocationEdit","OrganizationLocationRooms","OrganizationLocationRoomAdd","OrganizationLocationRoomEdit","OrganizationMemberships","OrganizationSubscriptions","OrganizationSubscriptionAdd","OrganizationSubscriptionEdit","OrganizationSubscriptionsGroups","OrganizationSubscriptionsGroupAdd","OrganizationSubscriptionsGroupEdit","OrganizationSubscriptionsGroupEditSubscriptions","OrganizationSubscriptionsPrices","OrganizationSubscriptionPriceAdd","RelationsAccounts","RelationsAccountAdd","RelationsAccountProfile","RelationsAccountProfileImage","AccountAcceptedDocuments","RelationsAccountBankAccount","RelationsAccountBankAccountMandateAdd","RelationsAccountBankAccountMandateEdit","RelationsAccountClasses","AccountClasspasses","AccountClasspassAdd","AccountClasspassEdit","AccountDocuments","AccountDocumentAdd","AccountDocumentEdit","AccountFinancePaymentBatchCategoryItems","AccountFinancePaymentBatchCategoryItemAdd","AccountFinancePaymentBatchCategoryItemEdit","AccountInvoices","AccountInvoiceAdd","AccountMemberships","AccountNotes","AccountNoteAdd","AccountNoteEdit","AccountOrders","AccountScheduleEventTickets","AccountSubscriptions","AccountSubscriptionAdd","AccountSubscriptionEdit","AccountSubscriptionEditAltPrices","AccountSubscriptionEditAltPriceAdd","AccountSubscriptionEditAltPriceEdit","AccountSubscriptionEditBlocks","AccountSubscriptionEditBlockAdd","AccountSubscriptionEditBlockEdit","AccountSubscriptionEditCredits","AccountSubscriptionEditCreditAdd","AccountSubscriptionEditCreditEdit","AccountSubscriptionEditInvoices","AccountSubscriptionEditInvoiceAdd","AccountSubscriptionEditPauses","AccountSubscriptionEditPauseAdd","AccountSubscriptionEditPauseEdit","RelationsAccountTeacherProfile","RelationsB2B","RelationsB2BAdd","RelationsB2BEdit","ScheduleAppointments","ScheduleClasses","ScheduleClassAdd","ScheduleClassEditAll","ScheduleClassClasspasses","ScheduleClassPrices","ScheduleClassPriceAdd","ScheduleClassPriceEdit","ScheduleClassSubscriptions","ScheduleClassTeachers","ScheduleClassTeacherAdd","ScheduleClassTeacherEdit","ScheduleClassAttendance","ScheduleClassBook","ScheduleClassEdit","ScheduleEvents","ScheduleEventAdd","ScheduleEventEdit","ScheduleEventActivities","ScheduleEventActivityAdd","ScheduleEventActivityEdit","ScheduleEventActivityAttendance","ScheduleEventEarlybirds","ScheduleEventEarlybirdAdd","ScheduleEventEarlybirdEdit","ScheduleEventMedia","ScheduleEventMediaAdd","ScheduleEventMediaEdit","ScheduleEventTickets","ScheduleEventTicketAdd","ScheduleEventTicketEdit","ScheduleEventTicketEditActivities","ScheduleEventTicketEditCustomers","InsightClasspasses","InsightSubscriptions","SelfCheckinCheckin","SelfCheckinBookingOptions","SelfCheckinLocations","SelfCheckinLocationClasses","ShopHome","ShopAccountHome","ShopAccountClassCancel","ShopAccountClassInfo","ShopClasses","ShopAccountClasspasses","ShopAccountEventTickets","ShopAccountInvoicePayment","ShopAccountInvoicePaymentStatus","ShopAccountInvoices","ShopAccountOrders","ShopAccountProfile","ShopAccountSubscriptions","ShopCheckoutPayment","ShopCheckoutComplete","ShopClassesSchedule","ShopClassBook","ShopClassBooked","ShopClasspasses","ShopClasspass","ShopContact","ShopEvents","ShopEvent","ShopEventTicket","ShopSubscriptions","ShopSubscription","SettingsHome","SettingsAbout","SettingsFinanceBankAccounts","SettingsFinanceCurrency","SettingsGeneralDateTime","SettingsGeneralSystem","SettingsIntegrationMollie","SettingsMailTemplates","SettingsMailTemplateEdit","SettingsShopFeatures","SettingsWorkflowClassBooking","SettingsWorkflowSubscriptionPauses","SettingsWorkflowTrial","UserChangePassword","UserLogin","UserLoginRequired","UserLogout","UserSessionExpired","UserWelcome","String","prototype","n","substr","errorLink","onError","networkError","operation","forward","response","forEach","refreshTokenExpired","Observable","observer","client","mutate","subscriber","subscribe","httpLink","createHttpLink","uri","credentials","authLink","setContext","request","a","headers","Authorization","ApolloClient","from","cache","InMemoryCache","App","ApolloProvider","Boolean","ReactDOM","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.417e3557.chunk.js","sourcesContent":["import i18n from \"i18next\"\nimport { initReactI18next } from \"react-i18next\"\n// import Backend from 'i18next-xhr-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\n// the translations\n// (tip move them in a JSON file and import them)\n// const resources = {\n//   en: {\n//     translations: {\n//         school: \"School\"\n//     }\n//   }\n// }\n\nimport en_US_common from \"./i18n/en_US/common\"\nconst resources = {\n    en_US: {\n        common: en_US_common\n    },\n}\n\nconsole.log(resources)\n\n\ni18n\n  // load translation using xhr -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  //   .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    resources,\n    lng: \"en_US\",\n    fallbackLng: \"en_US\",\n    ns: [\"common\"],\n    defaultNS: \"common\",\n    debug: true,\n\n    // keySeparator: false, // we do not use keys in form messages.welcome\n    keySeparator: '.', // we use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    }\n  })\n\n  export default i18n","import { gql } from \"@apollo/client\"\n\n\nexport const TOKEN_AUTH = gql`\n  mutation TokenAuth($username: String!, $password: String!) {\n    tokenAuth(username: $username, password: $password) {\n      token\n      payload\n      refreshToken\n      refreshExpiresIn\n    }\n  } \n`\n\n\nexport const TOKEN_VERIFY = gql`\n  mutation VerifyToken($token: String!) {\n    verifyToken(token: $token) {\n      payload\n    }\n  }\n`\n\n\nexport const TOKEN_REFRESH = gql`\n  mutation RefreshToken($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      token\n      payload\n      refreshToken\n      refreshExpiresIn\n    }\n  }\n`\n\n\nexport const TOKEN_REVOKE = gql`\n  mutation RevokeToken($refreshToken: String!) {\n    revokeToken(refreshToken: $refreshToken) {\n      revoked\n    }\n  }\n`\n\n\nexport const TOKEN_COOKIE_DELETE = gql`\n  mutation {\n    deleteTokenCookie {\n      deleted\n    }\n  }\n`\n\n\nexport const TOKEN_REFRESH_COOKIE_DELETE = gql`\n  mutation {\n    deleteRefreshTokenCookie {\n      deleted\n    }\n  }\n`\n\n\nexport const UPDATE_ACCOUNT_PASSWORD = gql`\n  mutation UpdateAccountPassword($input: UpdateAccountPasswordInput!) {\n    updateAccountPassword(input: $input) {\n      ok\n    }\n  }\n`","const cs_local_storage_keys = {\n    AUTH_TOKEN: 'costasiella:authToken',\n    AUTH_TOKEN_EXP: 'costasiella:authTokenExp',\n    AUTH_TOKEN_ORIGIAT: 'costasiella:authTokenorigIat',\n    AUTH_REFRESH_TOKEN: 'costasiella:authRefreshToken', \n    AUTH_REFRESH_TOKEN_EXP: 'costasiella:refreshTokenExp',\n    AUTH_LOGIN_NEXT: 'costasiella:authLoginNext',\n    FINANCE_INVOICES_FILTER_STATUS: 'costasiella:financeInvoicesFilterStatus',\n    FINANCE_INVOICES_EDIT_RETURN: 'costasiella:financeInvoiceEditReturn',\n    FINANCE_ORDERS_FILTER_STATUS: 'costasiella:financeOrdersFilterStatus',\n    FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE: 'costasiella:financePaymentBatchCategoriesShowArchive',\n    INSIGHT_CLASSPASSES_YEAR: 'costasiella:insightClasspassesYear',\n    INSIGHT_SUBSCRIPTIONS_YEAR: 'costasiella:insightSubscriptionsYear',\n    ORGANIZATION_CLASSTYPES_ARCHIVED: 'costasiella:organizationClasstypesArchived',\n    RELATIONS_ACCOUNTS_FILTER_TYPE: 'costasiella:relationsAccountsFilterType',\n    RELATIONS_ACCOUNTS_SEARCH: 'costasiella:relationsAccountsSearch',\n    RELATIONS_ACCOUNTS_IS_ACTIVE: 'costasiella:relationsAccountsIsActive',\n    RELATIONS_ACCOUNT_NOTES_NOTE_TYPE: 'costasiella:relationsAccountNotesNoteType',\n    RELATIONS_BUSINESSES_SHOW_ARCHIVE: 'costasiella:relationsBusinessesShowArchive',\n    RELATIONS_BUSINESSES_SEARCH: 'costasiella:relationsBusinessesSeach',\n    SCHEDULE_APPOINTMENTS_DATE_FROM: 'costasiella:scheduleAppointmentsDateFrom',\n    SCHEDULE_APPOINTMENTS_DATE_UNTIL: 'costasiella:scheduleAppointmentsDateUntil',\n    SCHEDULE_APPOINTMENTS_ORDER_BY: 'costasiella:scheduleAppointmentsOrderBy',\n    SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE: 'costasiella:scheduleAppointmentsFilterClasstype',\n    SCHEDULE_APPOINTMENTS_FILTER_LOCATION: 'costasiella:scheduleAppointmentsFilterLocation',\n    SCHEDULE_CLASSES_DATE_FROM: 'costasiella:scheduleClassesDateFrom',\n    SCHEDULE_CLASSES_DATE_UNTIL: 'costasiella:scheduleClassesDateUntil',\n    SCHEDULE_CLASSES_ORDER_BY: 'costasiella:scheduleClassesOrderBy',\n    SCHEDULE_CLASSES_FILTER_CLASSTYPE: 'costasiella:scheduleClassesFilterClasstype',\n    SCHEDULE_CLASSES_FILTER_LEVEL: 'costasiella:scheduleClassesFilterLevel',\n    SCHEDULE_CLASSES_FILTER_LOCATION: 'costasiella:scheduleClassesFilterLocation',\n    SCHEDULE_CLASSES_CLASS_ATTENDANCE_SEARCH: 'costasiella:scheduleClassesClassAttendanceSearch',\n    SCHEDULE_EVENTS_ARCHIVED: 'costasiella:scheduleEventsArchived',\n    SCHEDULE_EVENTS_TICKETS_CUSTOMERS_SEARCH: 'costasiella:scheduleEventsTicketsCustomersSearch',\n    SHOP_CLASSES_DATE_FROM: 'costasiella:shopClassesDateFrom',\n    SHOP_CLASSES_DATE_UNTIL: 'costasiella:shopClassesDateUntil',\n    SHOP_CLASSES_ORDER_BY: 'costasiella:shopClassesOrderBy',\n    SHOP_CLASSES_FILTER_CLASSTYPE: 'costasiella:shopClassesFilterClasstype',\n    SHOP_CLASSES_FILTER_LEVEL: 'costasiella:shopClassesFilterLevel',\n    SHOP_CLASSES_FILTER_LOCATION: 'costasiella:shopClassesFilterLocation',\n}\n\nexport default cs_local_storage_keys\n","import CSLS from \"./cs_local_storage\"\n\n\nexport const CSAuth = {\n    login(tokenData) {\n        localStorage.setItem(CSLS.AUTH_TOKEN, tokenData.token)\n        localStorage.setItem(CSLS.AUTH_TOKEN_EXP, tokenData.payload.exp)\n        localStorage.setItem(CSLS.AUTH_TOKEN_ORIGIAT, tokenData.payload.origIat)\n        localStorage.setItem(CSLS.AUTH_REFRESH_TOKEN, tokenData.refreshToken)\n        localStorage.setItem(CSLS.AUTH_REFRESH_TOKEN_EXP, tokenData.refreshExpiresIn)\n        localStorage.removeItem(CSLS.AUTH_LOGIN_NEXT)\n    },\n    updateTokenInfo(refreshTokenData) {\n        console.log(\"Token payload:\")\n        console.log(refreshTokenData)\n        localStorage.setItem(CSLS.AUTH_TOKEN, refreshTokenData.token)\n        localStorage.setItem(CSLS.AUTH_TOKEN_EXP, refreshTokenData.payload.exp)\n        localStorage.setItem(CSLS.AUTH_TOKEN_ORIGIAT, refreshTokenData.payload.origIat)\n        localStorage.setItem(CSLS.AUTH_REFRESH_TOKEN, refreshTokenData.refreshToken)\n        localStorage.setItem(CSLS.AUTH_REFRESH_TOKEN_EXP, refreshTokenData.refreshExpiresIn)\n    },\n    cleanup() {\n        // Like logging out, but don't unset next url. \n        // This function is used when a refreshToken has expired\n        localStorage.removeItem(CSLS.AUTH_TOKEN)\n        localStorage.removeItem(CSLS.AUTH_TOKEN_EXP)\n        localStorage.removeItem(CSLS.AUTH_TOKEN_ORIGIAT)\n        localStorage.removeItem(CSLS.AUTH_REFRESH_TOKEN)\n        localStorage.removeItem(CSLS.AUTH_REFRESH_TOKEN_EXP)\n    },\n    logout(expired=false) {\n        if (!expired) {\n            // Manual logout, remove everything\n            this.cleanup()\n            localStorage.removeItem(CSLS.AUTH_LOGIN_NEXT)\n        }        \n    }\n}\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_APP_SETTINGS_QUERY = gql`\n  query AppSettings {\n    appSettings(id: \"QXBwU2V0dGluZ3NOb2RlOjE=\") {\n      dateFormat\n      timeFormat\n      timeFormatMoment\n      dateTimeFormatMoment\n      onlinePaymentsAvailable\n    }\n  }\n`\n\n\nexport const UPDATE_APP_SETTINGS = gql`\n  mutation UpdateAppSettings($input: UpdateAppSettingsInput!) {\n    updateAppSettings(input: $input) {\n      appSettings {\n        id\n      }\n    }\n  }\n`","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ORGANIZATION_QUERY = gql`\n  query Organization($id: ID!) {\n    organization(id:$id) {\n      id\n      name\n      address\n      phone\n      email\n      registration\n      taxRegistration\n      urlLogoLogin\n      urlLogoInvoice\n      urlLogoEmail\n      urlLogoShopHeader\n      urlLogoSelfCheckin\n    }\n  }\n`","import React from 'react'\n\nconst AppSettingsContext = React.createContext({})\n\nexport const AppSettingsProvider = AppSettingsContext.Provider\nexport const AppSettingsConsumer = AppSettingsContext.Consumer\n\nexport default AppSettingsContext","import React from 'react'\n\nconst OrganizationContext = React.createContext({})\n\nexport const OrganizationProvider = OrganizationContext.Provider\nexport const OrganizationConsumer = OrganizationContext.Consumer\n\nexport default OrganizationContext","import { gql } from \"@apollo/client\"\n\nconst GET_USER = gql`\n  query User($before: String, $after: String)  {\n    user {\n      id\n      isActive\n      email\n      firstName\n      lastName\n      employee\n      teacher\n      urlImageThumbnailSmall\n      groups {\n        edges {\n          node {\n            id\n            name\n            permissions(first: 1000, before: $before, after: $after) {\n              pageInfo {\n                hasNextPage\n                hasPreviousPage\n                startCursor\n                endCursor                \n              }\n              edges {\n                node {\n                  id\n                  name\n                  codename\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default GET_USER","export function get_all_permissions(user) {\n    const permissions = {}\n    const groups = user.groups\n    if (groups.edges) {\n      for (let edge_index in groups.edges) {\n        let group_edge = groups.edges[edge_index]\n        if (group_edge.node) {\n          let group_node = group_edge.node \n          if (group_node.permissions.edges) {\n            for (let permission_index in group_node.permissions.edges) {\n              let permission_edge = group_node.permissions.edges[permission_index] \n              if (permission_edge.node) {\n                  let permission_node = permission_edge.node\n                  let codename = permission_node.codename\n                  let codename_split = codename.split('_')\n                  // If code name is not in permissions, create a new set\n                  if (!(codename_split[1] in permissions)) {\n                  permissions[codename_split[1]] = new Set()\n                  }\n                  // Add permission name to set\n                  permissions[codename_split[1]].add(codename_split[0])\n              }\n            }\n          }\n        }\n      }\n    }\n    \n    return permissions\n}\n\n\nexport const has_permission = (permissions, permission, resource) => {\n  let you_shall_not_pass = true\n\n  if (resource in permissions) {\n    if (permissions[resource].has(permission)) {\n      console.log('found permission')\n      you_shall_not_pass = false\n    }\n  }\n  \n  return !you_shall_not_pass\n}\n","import React from 'react'\nimport { useQuery } from \"@apollo/client\"\n\nimport GET_USER from '../queries/system/get_user'\nimport { get_all_permissions } from \"../tools/user_tools\"\n\n\nfunction check_permission(permissions, permission, resource) {\n  let you_shall_not_pass = true\n\n  if (resource in permissions) {\n    if (permissions[resource].has(permission)) {\n      you_shall_not_pass = false\n    }\n  }\n  \n  return !you_shall_not_pass\n}\n\nfunction HasPermissionWrapper({permission, resource, children}) {\n  const {loading, error, data} = useQuery(GET_USER)\n  \n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error loading user... :(</p>\n\n  const permissions = get_all_permissions(data.user)\n\n  if (check_permission(permissions, permission, resource)) {\n    return children\n  } else {\n    return ''\n  }\n}\n  \nexport default HasPermissionWrapper","import { gql } from \"@apollo/client\"\n\nexport const GET_BACKEND_ANNOUNCEMENTS_QUERY = gql`\n  query OrganizationAnnouncements($after: String, $before: String) {\n    organizationAnnouncements(first: 100, before: $before, after: $after, displayPublic: true, displayBackend: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          displayPublic\n          displayBackend\n          title\n          content\n          dateStart\n          dateEnd\n          priority\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport * as React from \"react\"\nimport { withTranslation } from 'react-i18next'\nimport { NavLink, withRouter } from \"react-router-dom\"\nimport { useQuery } from \"@apollo/client\"\nimport { ToastContainer, Slide } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport { Link } from 'react-router-dom'\n\nimport GET_USER from \"../queries/system/get_user\"\nimport { get_all_permissions, has_permission } from \"../tools/user_tools\"\n\nimport {\n  Site,\n  Nav,\n  Grid,\n  Button,\n  // Page,\n  RouterContextProvider,\n} from \"tabler-react\";\n\nimport type { NotificationProps } from \"tabler-react\";\n\ntype Props = {|\n  +children: React.Node,\n|};\n\ntype State = {|\n  notificationsObjects: Array<NotificationProps>,\n|};\n\ntype subNavItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +LinkComponent?: React.ElementType,\n|};\n\ntype navItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +active?: boolean,\n  +LinkComponent?: React.ElementType,\n  +subItems?: Array<subNavItem>,\n  +useExact?: boolean,\n|};\n\n\nconst getNavBarItems = (t, user) => {\n  let items: Array<navItem> = []\n  let permissions = get_all_permissions(user)\n\n  items.push({\n    value: t(\"home.title\"),\n    to: \"/backend\",\n    icon: \"home\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  })\n\n  // Relations\n  if (\n    (has_permission(permissions, 'view', 'account'))\n  ){\n    items.push({\n      value: t(\"relations.title\"),\n      to: \"/relations\",\n      icon: \"users\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Schedule\n  if (\n    (has_permission(permissions, 'view', 'scheduleclass')) ||\n    (has_permission(permissions, 'view', 'scheduleevent'))\n  ){\n    items.push({\n      value: t(\"schedule.title\"),\n      to: \"/schedule\",\n      icon: \"calendar\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Finance\n  if (\n    (has_permission(permissions, 'view', 'financecostcenter')) ||\n    (has_permission(permissions, 'view', 'financeglaccount')) ||\n    (has_permission(permissions, 'view', 'financetaxrate')) \n  ){\n    items.push({\n      value: t(\"finance.title\"),\n      to: \"/finance\",\n      icon: \"dollar-sign\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Organization\n  if (\n    (has_permission(permissions, 'view', 'organizationclasspass')) || \n    (has_permission(permissions, 'view', 'organizationclasstype')) ||\n    (has_permission(permissions, 'view', 'organizationdiscovery')) ||\n    (has_permission(permissions, 'view', 'organizationlocation')) ||\n    (has_permission(permissions, 'view', 'organizationmembership')) ||  \n    (has_permission(permissions, 'view', 'organization')) \n   ){\n   items.push({\n      value: t(\"organization.title\"),\n      to: \"/organization\",\n      icon: \"feather\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Insight\n  if (\n    (has_permission(permissions, 'view', 'insight'))\n   ){\n    items.push({\n      value: t(\"insight.title\"),\n      to: \"/insight\",\n      icon: \"bar-chart-2\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Automation\n  if (\n    (has_permission(permissions, 'view', 'automation'))\n   ){\n    items.push({\n      value: t(\"automation.title\"),\n      to: \"/automation\",\n      icon: \"loader\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // let goToSubItems = []\n  // if (has_permission(permissions, 'view', 'selfcheckin')) {\n  //   goToSubItems.push(\n  //     { value: t(\"selfcheckin.home.title\"), to: \"/selfcheckin\", LinkComponent: withRouter(NavLink) }\n  //   )\n  // }\n  // goToSubItems.push(\n  //   { value: t(\"shop.title\"), to: \"/shop\", LinkComponent: withRouter(NavLink) }\n  // )\n\n  // // Go to\n  // if (\n  //   (has_permission(permissions, 'view', 'selfcheckin'))\n  //  ){\n  //   items.push({\n  //     value: t(\"goto.title\"),\n  //     icon: \"link\",\n  //     subItems: goToSubItems,\n  //   })\n  // }\n\n\n  return items\n\n}\n\nconst now = new Date()\n\nfunction SiteWrapper({t, match, history, children}) {\n  const { error, loading, data, fetchMore } = useQuery(GET_USER)\n\n  if (loading) return <p>{t('general.loading_with_dots')}</p>;\n  if (error) return <p>{t('system.user.error_loading')}</p>; \n\n  console.log(data)\n\n  let avatarURL = \"#\"\n  if (data.user.urlImageThumbnailSmall) {\n    avatarURL = data.user.urlImageThumbnailSmall\n  }\n\n  return (\n    <Site.Wrapper\n      headerProps={{\n          href: \"/\",\n          alt: \"Costasiella\",\n          imageURL: \"/d/static/logos/stock/logo_stock_backend.png\", // Set logo url here\n          navItems: (\n            <Nav.Item type=\"div\" className=\"d-none d-md-flex\">\n              <Link to=\"/settings\">\n                <Button\n                  className=\"mr-2\"\n                  icon=\"settings\"\n                  outline\n                  size=\"sm\"\n                  color=\"primary\"\n                >\n                  {t('general.settings')}\n                </Button>\n              </Link>\n              <Link to=\"/user/welcome\">\n                <Button\n                  className=\"mr-2\"\n                  icon=\"link\"\n                  outline\n                  size=\"sm\"\n                  color=\"primary\"\n                >\n                  {t('goto.title')}\n                </Button>\n              </Link>\n            </Nav.Item>\n          ),\n          // notificationsTray: {\n          //   notificationsObjects,\n          //   markAllAsRead: () =>\n          //     this.setState(\n          //       () => ({\n          //         notificationsObjects: this.state.notificationsObjects.map(\n          //           v => ({ ...v, unread: false })\n          //         ),\n          //       }),\n          //       () =>\n          //         setTimeout(\n          //           () =>\n          //             this.setState({\n          //               notificationsObjects: this.state.notificationsObjects.map(\n          //                 v => ({ ...v, unread: true })\n          //               ),\n          //             }),\n          //           5000\n          //         )\n          //     ),\n          //   unread: unreadCount,\n          // },\n          accountDropdown: {\n          avatarURL: avatarURL,\n          name: data.user.firstName + ' ' + data.user.lastName,\n          description: \"\",\n          options: [\n            // { icon: \"user\", value: \"Profile\" },\n            { icon: \"lock\", value: t(\"user.change_password.title\"), to: \"/#/user/password/change/\" },\n            { isDivider: true },\n            { icon: \"user\", value: t(\"shop.account.title\"), to: \"/#/shop/account/\" },\n            { isDivider: true },\n            { icon: \"log-out\", value: t(\"user.logout.title\"), to: \"/#/user/logout/\" },\n          ],\n        },\n        }}\n        // navProps={{ itemsObjects: navBarItems }}\n        navProps={{ itemsObjects: getNavBarItems(t, data.user) }}\n        routerContextComponentType={withRouter(RouterContextProvider)}\n        footerProps={{\n          // links: [\n          //   <a href=\"#\">First Link</a>,\n          //   <a href=\"#\">Second Link</a>,\n          //   <a href=\"#\">Third Link</a>,\n          //   <a href=\"#\">Fourth Link</a>,\n          //   <a href=\"#\">Five Link</a>,\n          //   <a href=\"#\">Sixth Link</a>,\n          //   <a href=\"#\">Seventh Link</a>,\n          //   <a href=\"#\">Eigth Link</a>,\n          // ],\n          // note:\n          //   \"Premium and Open Source dashboard template with responsive and high quality UI. For Free!\",\n          copyright: (\n            <React.Fragment>\n              Copyleft © {now.getFullYear()}.\n              <a\n                href=\"https://www.costasiella.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {\" \"}\n                Edwin van de Ven\n              </a>{\". \"}\n              All rights reserved.\n            </React.Fragment>\n          ),\n          nav: (\n            <React.Fragment>\n              <Grid.Col auto={true}>\n                {/* <List className=\"list-inline list-inline-dots mb-0\">\n                  <List.Item className=\"list-inline-item\">\n                    <a href=\"./docs/index.html\">Documentation</a>\n                  </List.Item>\n                  <List.Item className=\"list-inline-item\">\n                    <a href=\"./faq.html\">FAQ</a>\n                  </List.Item>\n                </List> */}\n              </Grid.Col>\n              <Grid.Col auto={true}>\n                {/* <Button\n                  href=\"https://github.com/tabler/tabler-react\"\n                  size=\"sm\"\n                  outline\n                  color=\"primary\"\n                  RootComponent=\"a\"\n                >\n                  Source code\n                </Button> */}\n              </Grid.Col>\n            </React.Fragment>\n          ),\n        }}\n      >\n        {children}\n        <ToastContainer \n          autoClose={5000} \n          transition={Slide}\n        />\n      </Site.Wrapper>\n  )\n}\n\nexport default withTranslation()(SiteWrapper)\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Container,\n  Page\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\n\n\nfunction HomeHomeBase({ t, match, history, children }) {\n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.announcements.title\")} />\n          {children}\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(HomeHomeBase))","// @flow\n\nimport React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { GET_BACKEND_ANNOUNCEMENTS_QUERY } from \"./queries\"\n\nimport HomeHomeBase from './HomeHomeBase';\n\n\nfunction HomeHome({ t, match }) {\n  const { loading, error, data } = useQuery(GET_BACKEND_ANNOUNCEMENTS_QUERY);\n\n  if (loading) return (\n    <HomeHomeBase>\n      {t(\"general.loading_with_dots\")}\n    </HomeHomeBase>\n  )\n  if (error) return (\n    <HomeHomeBase>\n      {t(\"home.home.announcements.error_loading\")}\n    </HomeHomeBase>\n  )\n\n  console.log(\"%%%%%%%%%%%%%%%%%%%%%\")\n  console.log(data)\n\n  const announcements = data.organizationAnnouncements\n\n  // Empty list\n  if (!announcements.edges.length) return (\n    <HomeHomeBase>\n      {t(\"home.home.announcements_empty_list\")}\n    </HomeHomeBase>\n  )\n\n  // Data\n  return (\n    <HomeHomeBase>\n      <Grid.Row cards deck>\n        {(announcements.edges.length) ? announcements.edges.map(({ node }) => (\n          <Grid.Col md={6}>\n            <Card title={node.title}>\n              <Card.Body>\n                <div dangerouslySetInnerHTML={{ __html:node.content }}></div>\n              </Card.Body>\n            </Card> \n          </Grid.Col>\n        )) : \"\"\n        }\n      </Grid.Row>\n    </HomeHomeBase>\n  )\n}\n\n\n// class HomeHome extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Home home props:\")\n//     console.log(props)\n//   }\n\n\n//   render() {\n//     const t = this.props.t\n//     const match = this.props.match\n//     const history = this.props.history\n//     const id = match.params.id\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//           <Container>\n//             <Page.Header title={t(\"home.title\")} />\n//             <Grid.Row>\n//               <Grid.Col md={9}>\n//               <Card>\n//                 <Card.Header>\n//                   <Card.Title>{t('home.title')}</Card.Title>\n//                 </Card.Header>\n//                 <Card.Body>\n//                     Hello world!\n//                 </Card.Body>\n//               </Card>\n//               </Grid.Col>\n//             </Grid.Row>\n//           </Container>\n//         </div>\n//     </SiteWrapper>\n//     )}\n//   }\n\n\nexport default withTranslation()(withRouter(HomeHome))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\n\nfunction SettingsHomeItemButton({ t, link, linkTitle=null }) {\n  return (\n    <Link to={link} >\n      <Button \n        outline\n        block\n        color=\"primary\"\n      >\n        {linkTitle ? linkTitle: t(\"automation.home.link_edit\")} <Icon name=\"chevron-right\" />\n      </Button>\n    </Link>\n  )\n}\n\nexport default withTranslation()(withRouter(SettingsHomeItemButton))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Container,\n  Grid,\n  Icon,\n  Page,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport AutomationHomeItemButton from \"./AutomationHomeItemButton\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n\nfunction AutomationHome({ t, match, params }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('automation.title')} />\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"automation.account.subscriptions.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"automation.account.subscriptions.invoices.title\")}</h5>\n                  {t(\"automation.account.subscriptions.invoices.explanation\")}\n                  <br /><br />\n                  <AutomationHomeItemButton link=\"/automation/account/subscriptions/invoices\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"automation.account.subscriptions.credits.title\")}</h5>\n                  {t(\"automation.account.subscriptions.credits.explanation\")}\n                  <br /><br />\n                  <AutomationHomeItemButton link=\"/automation/account/subscriptions/credits\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"automation.account.subscriptions.credits_expiration.title\")}</h5>\n                  {t(\"automation.account.subscriptions.credits_expiration.explanation\")}\n                  <br /><br />\n                  <AutomationHomeItemButton link=\"/automation/account/subscriptions/credits_expiration\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"automation.account.subscriptions.mollie_collection.title\")}</h5>\n                  {t(\"automation.account.subscriptions.mollie_collection.explanation\")}\n                  <br /><br />\n                  <AutomationHomeItemButton link=\"/automation/account/subscriptions/mollie_collections\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationHome))","import React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n    Button,\n    Card,\n  } from \"tabler-react\"\n\n\nclass ContentCard extends Component {\n    componentDidMount() {\n      window.addEventListener(\"scroll\", this.handleOnScroll);\n    }\n  \n    componentWillUnmount() {\n      window.removeEventListener(\"scroll\", this.handleOnScroll);\n    }\n\n    handleOnScroll = () => {\n      // http://stackoverflow.com/questions/9439725/javascript-how-to-detect-if-browser-window-is-scrolled-to-bottom\n      var scrollTop =\n        (document.documentElement && document.documentElement.scrollTop) ||\n        document.body.scrollTop;\n      var scrollHeight =\n        (document.documentElement && document.documentElement.scrollHeight) ||\n        document.body.scrollHeight;\n      var clientHeight =\n        document.documentElement.clientHeight || window.innerHeight;\n      var scrolledToBottom = Math.ceil(scrollTop + clientHeight) >= scrollHeight;\n      if (scrolledToBottom) {\n        const pageInfo = this.props.pageInfo\n        if (pageInfo) {\n          if (pageInfo.hasNextPage) {\n            this.props.onLoadMore()\n          }\n        }\n      }\n    }\n\n    render() {\n      const t = this.props.t\n      const cardTitle = this.props.cardTitle\n      const headerContent = this.props.headerContent\n      const onLoadMore = this.props.onLoadMore \n      const pageInfo = this.props.pageInfo\n      const children = this.props.children\n      const cardTabs = this.props.cardTabs\n      const hasCardBody = this.props.hasCardBody \n\n\n      return(\n        <Card>\n          <Card.Header>\n            <Card.Title>{cardTitle}</Card.Title>\n            {headerContent}\n          </Card.Header>\n          {cardTabs}\n          {(hasCardBody) ? \n            <Card.Body>{children}</Card.Body> :\n            children\n          }\n          <Card.Footer>\n            {(!pageInfo) ? '':\n              (pageInfo.hasNextPage) ? \n                <Button \n                  link\n                  onClick={onLoadMore} \n                  >\n                  {t('general.load_more')}\n                </Button>\n               : t('general.loaded_all')\n            }\n          </Card.Footer>\n        </Card>\n      )\n    }\n}\n\nContentCard.defaultProps = {\n  onLoadMore: f=>f,\n  hasCardBody: true\n}\n  \nexport default withTranslation()(ContentCard)\n","import { gql } from \"@apollo/client\"\n\nexport const GET_TASK_RESULT_QUERY = gql`\nquery TaskResults($before: String, $after: String, $taskName:String) {\n  djangoCeleryResultTaskResults(first: 100, before: $before, after: $after, taskName: $taskName) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        taskId\n        taskName\n        taskArgs\n        taskKwargs\n        status\n        contentType\n        contentEncoding\n        result\n        dateDone\n        traceback\n        meta\n      }\n    }\n  }\n}\n`\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Button\n} from \"tabler-react\"\n\nconst ButtonBack = ({ t, returnUrl }) => (\n  <Link to={returnUrl}>\n    <Button\n      color=\"secondary\"\n      icon=\"arrow-left\">\n        {t(\"general.back\")}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(ButtonBack)\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport ButtonBack from \"../ui/ButtonBack\"\n\n\nfunction AutomationBack({ t, returnUrl=\"/automation\" }) { \n  return (\n    <ButtonBack returnUrl={returnUrl} />\n  )\n}\n\nexport default withTranslation()(AutomationBack)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AutomationBack from \"../../../AutomationBack\"\n\nfunction AutomationAccountSubscriptionCreditsBase({t, history, match, children, returnUrl=\"/automation\"}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('automation.title')} >\n            <div className=\"page-options d-flex\">\n              <AutomationBack returnUrl={returnUrl} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditsBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Badge,\n} from \"tabler-react\";\n\n// Status reference\n// https://docs.celeryproject.org/en/stable/userguide/tasks.html\n\nfunction AutomationTaskResultStatus({t, history, match, status}) {\n  switch(status) {\n    case \"PENDING\":\n      return <Badge color=\"secondary\">{t(\"automation.tasks.result_statuses.pending\")}</Badge>\n      break\n    case \"STARTED\":\n      return <Badge color=\"primary\">{t(\"automation.tasks.result_statuses.started\")}</Badge>\n      break\n    case \"SUCCESS\":\n      return <Badge color=\"success\">{t(\"automation.tasks.result_statuses.success\")}</Badge>\n      break\n    case \"FAILURE\":\n      return <Badge color=\"danger\">{t(\"automation.tasks.result_statuses.failure\")}</Badge>\n      break\n    case \"RETRY\":\n      return <Badge color=\"warning\">{t(\"automation.tasks.result_statuses.retry\")}</Badge>\n      break\n    case \"REVOKED\":\n      return <Badge color=\"warning\">{t(\"automation.tasks.result_statuses.revoked\")}</Badge>\n      break\n    default:\n      return \"status unknown\"\n  }\n}\n\nexport default withTranslation()(withRouter(AutomationTaskResultStatus))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport AutomationAccountSubscriptionCreditsBase from './AutomationAccountSubscriptionCreditsBase'\nimport AutomationTaskResultStatus from \"../../../AutomationTaskResultStatus\"\n\n// const ARCHIVE_LEVEL = gql`\n//   mutation ArchiveOrganizationLevel($input: ArchiveOrganizationLevelInput!) {\n//     archiveOrganizationLevel(input: $input) {\n//       organizationLevel {\n//         id\n//         archived\n//       }\n//     }\n//   }\n// `\n\nfunction AutomationAccountSubscriptionCredits({t, history, match}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n\n  const { error, loading, data, fetchMore } = useQuery(GET_TASK_RESULT_QUERY, {\n    variables: {\n      taskName: \"costasiella.tasks.account.subscription.credits.tasks.account_subscription_credits_add_for_month\"\n    }\n  })\n\n  const headerOptions = <Card.Options>\n    <Link to={\"/automation/account/subscriptions/credits/add\"}>\n      <Button color=\"primary\" \n              size=\"sm\"\n      >\n      {t('general.new_task')}\n      </Button>\n    </Link>\n  </Card.Options>\n\n\n  // Loading\n  if (loading) return (\n    <AutomationAccountSubscriptionCreditsBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AutomationAccountSubscriptionCreditsBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AutomationAccountSubscriptionCreditsBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AutomationAccountSubscriptionCreditsBase>\n    )\n  }\n\n  console.log(\"Automation credits data:\")\n  console.log(data)\n  const taskResults = data.djangoCeleryResultTaskResults\n  // const account = data.account\n  // const scheduleItemAttendances = data.scheduleItemAttendances\n  \n\n  return (\n    <AutomationAccountSubscriptionCreditsBase>\n      <ContentCard \n        cardTitle={t('automation.account.subscriptions.credits.title_card')}\n        pageInfo={taskResults.pageInfo}\n        headerContent={headerOptions}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: taskResults.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.djangoCeleryResultTaskResults.edges\n              const pageInfo = fetchMoreResult.djangoCeleryResultTaskResults.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new invoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    djangoCeleryResultTaskResults: {\n                      __typename: previousResult.djangoCeleryResultTaskResults.__typename,\n                      edges: [ ...previousResult.djangoCeleryResultTaskResults.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n              }\n            })\n          }} \n        >\n          { (!taskResults.edges.length) ? \n            // Empty list\n            <p>{t('automation.account.subscriptions.credits.empty_list')}</p>\n            :\n            // Content\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('automation.general.status.title')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.time_completed')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_kwargs')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_result')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {taskResults.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      <AutomationTaskResultStatus status={node.status} />\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateDone).format(dateTimeFormatMoment)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.taskKwargs}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.result}\n                    </Table.Col>\n                    <Table.Col>\n\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          }\n        </ContentCard>\n    </AutomationAccountSubscriptionCreditsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCredits))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const AUTOMATION_ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA = Yup.object().shape({\n  subscriptionYear: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  subscriptionMonth: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid,\n    Icon\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nfunction AutomationAccountSubscriptionCreditForm({ t, history, isSubmitting, errors, returnUrl}) {\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_year')}>\n              <Field type=\"number\" \n                      name=\"subscriptionYear\" \n                      className={(errors.subscriptionYear) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionYear\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_month')}>\n              <Field type=\"number\" \n                      name=\"subscriptionMonth\" \n                      className={(errors.subscriptionMonth) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionMonth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n         color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n          >\n          {t('general.new_task')} <Icon name=\"chevron-right\" />\n        </Button>\n        <Link to={returnUrl}>\n          <Button color=\"link\">\n            {t('general.cancel')}\n          </Button>\n        </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n  \nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport { AUTOMATION_ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA } from './yupSchema'\nimport AutomationAccountSubscriptionCreditForm from './AutomationAccountSubscriptionCreditForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n// import SiteWrapper from \"../../SiteWrapper\"\n// import HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport AutomationAccountSubscriptionCreditsBase from './AutomationAccountSubscriptionCreditsBase'\n\n\nconst ADD_TASK = gql`\n  mutation CreateAccountSubscriptionCreditForMonth($input:CreateAccountSubscriptionCreditForMonthInput!) {\n    createAccountSubscriptionCreditForMonth(input: $input) {\n      ok\n    }\n  }\n`\n\n\nfunction AutomationAccountSubscriptionCreditAdd({ t, history }) {\n  const [addTask] = useMutation(ADD_TASK)\n  const returnUrl = \"/automation/account/subscriptions/credits\"\n\n  return (\n    <AutomationAccountSubscriptionCreditsBase returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('automation.account.subscriptions.credits.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            subscriptionYear: new Date().getFullYear(), \n            subscriptionMonth: new Date().getMonth() + 1 }}\n          validationSchema={AUTOMATION_ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addTask({ variables: {\n                input: {\n                  month: values.subscriptionMonth,\n                  year: values.subscriptionYear\n                }\n              }, refetchQueries: [\n                  {query: GET_TASK_RESULT_QUERY, \n                    variables: {\n                      taskName: \"costasiella.tasks.account.subscription.credits.tasks.account_subscription_credits_add_for_month\"\n                  }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('automation.account.subscriptions.credits.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <AutomationAccountSubscriptionCreditForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </AutomationAccountSubscriptionCreditsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AutomationBack from \"../../../AutomationBack\"\n\nfunction AutomationAccountSubscriptionCreditExpirationBase({t, history, match, children, returnUrl=\"/automation\"}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('automation.title')} >\n            <div className=\"page-options d-flex\">\n              <AutomationBack returnUrl={returnUrl} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditExpirationBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\n\nimport {\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport AutomationAccountSubscriptionCreditExpirationBase from './AutomationAccountSubscriptionCreditExpirationBase'\nimport AutomationTaskResultStatus from \"../../../AutomationTaskResultStatus\"\n\nfunction AutomationAccountSubscriptionCreditExpiration({t, history, match}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n\n  const { error, loading, data, fetchMore } = useQuery(GET_TASK_RESULT_QUERY, {\n    variables: {\n      taskName: \"costasiella.tasks.account.subscription.credits.tasks.account_subscription_credits_expire\"\n    }\n  })\n\n  const headerOptions = <Card.Options>\n    <Link to={\"/automation/account/subscriptions/credits_expiration/add\"}>\n      <Button color=\"primary\" \n              size=\"sm\"\n      >\n      {t('general.new_task')}\n      </Button>\n    </Link>\n  </Card.Options>\n\n\n  // Loading\n  if (loading) return (\n    <AutomationAccountSubscriptionCreditExpirationBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AutomationAccountSubscriptionCreditExpirationBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AutomationAccountSubscriptionCreditExpirationBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AutomationAccountSubscriptionCreditExpirationBase>\n    )\n  }\n\n  console.log(\"Automation credits data:\")\n  console.log(data)\n  const taskResults = data.djangoCeleryResultTaskResults\n  \n\n  return (\n    <AutomationAccountSubscriptionCreditExpirationBase>\n      <ContentCard \n        cardTitle={t('automation.account.subscriptions.credits_expiration.title_card')}\n        pageInfo={taskResults.pageInfo}\n        headerContent={headerOptions}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: taskResults.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.djangoCeleryResultTaskResults.edges\n              const pageInfo = fetchMoreResult.djangoCeleryResultTaskResults.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new invoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    djangoCeleryResultTaskResults: {\n                      __typename: previousResult.djangoCeleryResultTaskResults.__typename,\n                      edges: [ ...previousResult.djangoCeleryResultTaskResults.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n              }\n            })\n          }} \n        >\n          { (!taskResults.edges.length) ? \n            // Empty list\n            <p>{t('automation.account.subscriptions.credits.empty_list')}</p>\n            :\n            // Content\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('automation.general.status.title')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.time_completed')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_kwargs')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_result')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {taskResults.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      <AutomationTaskResultStatus status={node.status} />\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateDone).format(dateTimeFormatMoment)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.taskKwargs}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.result}\n                    </Table.Col>\n                    <Table.Col>\n\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          }\n        </ContentCard>\n    </AutomationAccountSubscriptionCreditExpirationBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditExpiration))","// @flow\n\nimport React, {useState} from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon\n} from \"tabler-react\"\n// import SiteWrapper from \"../../SiteWrapper\"\n// import HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport AutomationAccountSubscriptionCreditExpirationBase from './AutomationAccountSubscriptionCreditExpirationBase'\n\n\nconst ADD_TASK = gql`\n  mutation ExpireAccountSubscriptionCredit($input: ExpireAccountSubscriptionCreditInput!) {\n    expireAccountSubscriptionCredit(input:$input) {\n      ok\n    }\n  }\n`\n\n\nfunction AutomationAccountSubscriptionCreditExpirationAdd({ t, history }) {\n  const [addTask] = useMutation(ADD_TASK)\n  let [isSubmitting, setSubmitting] = useState(false)\n  const returnUrl = \"/automation/account/subscriptions/credits_expiration\"\n\n  return (\n    <AutomationAccountSubscriptionCreditExpirationBase returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('automation.account.subscriptions.credits_expiration.title_add')}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <Grid.Row>\n            <Grid.Col>\n              {t(\"automation.account.subscriptions.credits_expiration.explanation_new_expiration\")}\n            </Grid.Col>\n          </Grid.Row>\n        </Card.Body>\n        <Card.Footer>\n          <Button \n          color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n            onClick={() => {\n              setSubmitting(true)\n              addTask({ variables: {\n                input: {}\n              }, refetchQueries: [\n                {query: GET_TASK_RESULT_QUERY, \n                  variables: {\n                    taskName: \"costasiella.tasks.account.subscription.credits.tasks.account_subscription_credits_expire\"\n                }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('automation.account.subscriptions.credits_expiration.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n            }}\n          >\n            {t('general.new_task')} <Icon name=\"chevron-right\" />\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\">\n              {t('general.cancel')}\n            </Button>\n          </Link>\n        </Card.Footer>\n      </Card>\n    </AutomationAccountSubscriptionCreditExpirationBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditExpirationAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AutomationBack from \"../../../AutomationBack\"\n\nfunction AutomationAccountSubscriptionInvoicesBase({t, history, match, children, returnUrl=\"/automation\"}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('automation.title')} >\n            <div className=\"page-options d-flex\">\n              <AutomationBack returnUrl={returnUrl} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionInvoicesBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport AutomationAccountSubscriptionInvoicesBase from './AutomationAccountSubscriptionInvoicesBase'\nimport AutomationTaskResultStatus from \"../../../AutomationTaskResultStatus\"\n\n// const ARCHIVE_LEVEL = gql`h\n//   mutation ArchiveOrganizationLevel($input: ArchiveOrganizationLevelInput!) {\n//     archiveOrganizationLevel(input: $input) {\n//       organizationLevel {\n//         id\n//         archived\n//       }\n//     }\n//   }\n// `\n\nfunction AutomationAccountSubscriptionInvoices({t, history, match}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n\n  const { error, loading, data, fetchMore } = useQuery(GET_TASK_RESULT_QUERY, {\n    variables: {\n      taskName: \"costasiella.tasks.account.subscription.invoices.tasks.account_subscription_invoices_add_for_month\"\n    }\n  })\n\n  const headerOptions = <Card.Options>\n    <Link to={\"/automation/account/subscriptions/invoices/add\"}>\n      <Button color=\"primary\" \n              size=\"sm\"\n      >\n      {t('general.new_task')}\n      </Button>\n    </Link>\n  </Card.Options>\n\n\n  // Loading\n  if (loading) return (\n    <AutomationAccountSubscriptionInvoicesBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AutomationAccountSubscriptionInvoicesBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AutomationAccountSubscriptionInvoicesBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AutomationAccountSubscriptionInvoicesBase>\n    )\n  }\n\n  console.log(\"Automation invoices data:\")\n  console.log(data)\n  const taskResults = data.djangoCeleryResultTaskResults\n  // const account = data.account\n  // const scheduleItemAttendances = data.scheduleItemAttendances\n  \n\n  return (\n    <AutomationAccountSubscriptionInvoicesBase>\n      <ContentCard \n        cardTitle={t('automation.account.subscriptions.invoices.title_card')}\n        pageInfo={taskResults.pageInfo}\n        headerContent={headerOptions}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: taskResults.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.djangoCeleryResultTaskResults.edges\n              const pageInfo = fetchMoreResult.djangoCeleryResultTaskResults.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new invoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    djangoCeleryResultTaskResults: {\n                      __typename: previousResult.djangoCeleryResultTaskResults.__typename,\n                      edges: [ ...previousResult.djangoCeleryResultTaskResults.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n              }\n            })\n          }} \n        >\n          { (!taskResults.edges.length) ? \n            // Empty list\n            <p>{t('automation.account.subscriptions.invoices.empty_list')}</p>\n            :\n            // Content\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('automation.general.status.title')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.time_completed')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_kwargs')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_result')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {taskResults.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      <AutomationTaskResultStatus status={node.status} />\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateDone).format(dateTimeFormatMoment)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.taskKwargs}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.result}\n                    </Table.Col>\n                    <Table.Col>\n\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          }\n        </ContentCard>\n    </AutomationAccountSubscriptionInvoicesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionInvoices))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const AUTOMATION_ACCOUNT_SUBSCRIPTION_INVOICES_SCHEMA = Yup.object().shape({\n  subscriptionYear: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  subscriptionMonth: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  invoiceDate: Yup.string()\n    .required(),\n  })\n","import React, { useContext } from 'react'\nimport DatePicker from \"react-datepicker\"\nimport { withTranslation } from 'react-i18next'\n\nimport AppSettingsContext from \"../context/AppSettingsContext\"\n\n\nfunction CSDatePicker ({t, selected, onChange=f=>f, onBlur=f=>f, className=\"form-control\", isClearable=true, placeholderText=\"\"}) {\n  const appSettings = useContext(AppSettingsContext)\n  const sysDateFormat = appSettings.dateFormat\n  let dateFormat\n\n  switch (sysDateFormat) {\n    case \"MM-DD-YYYY\":\n      dateFormat = \"MM-dd-yyyy\"\n      break\n    case \"DD-MM-YYYY\":\n      dateFormat = \"dd-MM-yyyy\"\n      break\n    default:\n      dateFormat = \"yyyy-MM-dd\"\n  }\n\n\n  return (\n    <DatePicker \n        todayButton={t('general.today')}\n        dateFormat={dateFormat}\n        selected={selected}\n        placeholderText={(placeholderText) ? placeholderText : t('datepicker.placeholder')}\n        isClearable={isClearable}\n        className={className}\n        showMonthDropdown\n        showYearDropdown\n        dropdownMode=\"select\"\n        onChange={(date) => onChange(date)}\n        onBlur={() => onBlur()}\n    />\n  )\n}\n\nexport default withTranslation()(CSDatePicker)","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { v4 } from \"uuid\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid,\n    Icon\n  } from \"tabler-react\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport CSDatePicker from \"../../../../ui/CSDatePicker\"\n\n\nfunction AutomationAccountSubscriptionInvoicesForm({ t, history, isSubmitting, errors, returnUrl}) {\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_year')}>\n              <Field type=\"number\" \n                      name=\"subscriptionYear\" \n                      className={(errors.subscriptionYear) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionYear\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_month')}>\n              <Field type=\"number\" \n                      name=\"subscriptionMonth\" \n                      className={(errors.subscriptionMonth) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionMonth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('automation.account.subscriptions.invoices.invoice_date')}>\n              <Field component=\"select\" \n                    name=\"invoiceDate\" \n                    className={(errors.invoiceDate) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"today\" key={v4()}>{t('automation.account.subscriptions.invoices.today')}</option>\n                <option value=\"first_of_month\" key={v4()}>{t('automation.account.subscriptions.invoices.invoice_date_first_day_month')}</option>                \n              </Field>\n              <ErrorMessage name=\"invoiceDate\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.description')}>\n              <Field type=\"text\" \n                      name=\"description\" \n                      className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n         color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n          >\n          {t('general.new_task')} <Icon name=\"chevron-right\" />\n        </Button>\n        <Link to={returnUrl}>\n          <Button color=\"link\">\n            {t('general.cancel')}\n          </Button>\n        </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n  \nexport default withTranslation()(withRouter(AutomationAccountSubscriptionInvoicesForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport { AUTOMATION_ACCOUNT_SUBSCRIPTION_INVOICES_SCHEMA } from './yupSchema'\nimport AutomationAccountSubscriptionInvoicesForm from './AutomationAccountSubscriptionInvoicesForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n// import SiteWrapper from \"../../SiteWrapper\"\n// import HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport AutomationAccountSubscriptionInvoicesBase from './AutomationAccountSubscriptionInvoicesBase'\n\n\nconst ADD_TASK = gql`\n  mutation CreateAccountSubscriptionInvoicesForMonth($input:CreateAccountSubscriptionInvoicesForMonthInput!) {\n    createAccountSubscriptionInvoicesForMonth(input: $input) {\n      ok\n    }\n  }\n`\n\n\nfunction AutomationAccountSubscriptionCreditAdd({ t, history }) {\n  const [addTask] = useMutation(ADD_TASK)\n  const returnUrl = \"/automation/account/subscriptions/invoices\"\n\n  return (\n    <AutomationAccountSubscriptionInvoicesBase returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('automation.account.subscriptions.invoices.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            subscriptionYear: new Date().getFullYear(), \n            subscriptionMonth: new Date().getMonth() + 1 ,\n            description: '',\n            invoiceDate: 'today'\n          }}\n          validationSchema={AUTOMATION_ACCOUNT_SUBSCRIPTION_INVOICES_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addTask({ variables: {\n                input: {\n                  month: values.subscriptionMonth,\n                  year: values.subscriptionYear,\n                  description: values.description,\n                  invoiceDate: values.invoiceDate\n                }\n              }, refetchQueries: [\n                  {query: GET_TASK_RESULT_QUERY, \n                    variables: {\n                      taskName: \"costasiella.tasks.account.subscription.invoices.tasks.account_subscription_invoices_add_for_month\"\n                  }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('automation.account.subscriptions.invoices.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <AutomationAccountSubscriptionInvoicesForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </AutomationAccountSubscriptionInvoicesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionCreditAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AutomationBack from \"../../../AutomationBack\"\n\nfunction AutomationAccountSubscriptionMollieCollectionBase({t, history, match, children, returnUrl=\"/automation\"}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('automation.title')} >\n            <div className=\"page-options d-flex\">\n              <AutomationBack returnUrl={returnUrl} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionMollieCollectionBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport AutomationAccountSubscriptionMollieCollectionBase from './AutomationAccountSubscriptionMollieCollectionBase'\nimport AutomationTaskResultStatus from \"../../../AutomationTaskResultStatus\"\n\n\nfunction AutomationAccountSubscriptionMollieCollections({t, history, match}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n\n  const { error, loading, data, fetchMore } = useQuery(GET_TASK_RESULT_QUERY, {\n    variables: {\n      taskName: \"costasiella.tasks.account.subscription.invoices.tasks.account_subscription_invoices_add_for_month_mollie_collection\"\n    }\n  })\n\n  const headerOptions = <Card.Options>\n    <Link to={\"/automation/account/subscriptions/mollie_collections/add\"}>\n      <Button color=\"primary\" \n              size=\"sm\"\n      >\n      {t('general.new_task')}\n      </Button>\n    </Link>\n  </Card.Options>\n\n\n  // Loading\n  if (loading) return (\n    <AutomationAccountSubscriptionMollieCollectionBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AutomationAccountSubscriptionMollieCollectionBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AutomationAccountSubscriptionMollieCollectionBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AutomationAccountSubscriptionMollieCollectionBase>\n    )\n  }\n\n  console.log(\"Automation mollie collection data:\")\n  console.log(data)\n  const taskResults = data.djangoCeleryResultTaskResults\n  // const account = data.account\n  // const scheduleItemAttendances = data.scheduleItemAttendances\n  \n  return (\n    <AutomationAccountSubscriptionMollieCollectionBase>\n      <ContentCard \n        cardTitle={t('automation.account.subscriptions.mollie_collection.title_card')}\n        pageInfo={taskResults.pageInfo}\n        headerContent={headerOptions}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: taskResults.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.djangoCeleryResultTaskResults.edges\n              const pageInfo = fetchMoreResult.djangoCeleryResultTaskResults.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new invoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    djangoCeleryResultTaskResults: {\n                      __typename: previousResult.djangoCeleryResultTaskResults.__typename,\n                      edges: [ ...previousResult.djangoCeleryResultTaskResults.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n              }\n            })\n          }} \n        >\n          {(!taskResults.edges.length) ? \n            // Empty list\n            <p>{t('automation.account.subscriptions.mollie_collection.empty_list')}</p>\n            :\n            // Content\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('automation.general.status.title')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.time_completed')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_kwargs')}</Table.ColHeader>\n                  <Table.ColHeader>{t('automation.general.task_result')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {taskResults.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      <AutomationTaskResultStatus status={node.status} />\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateDone).format(dateTimeFormatMoment)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.taskKwargs}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.result}\n                    </Table.Col>\n                    <Table.Col>\n\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          }\n        </ContentCard>\n    </AutomationAccountSubscriptionMollieCollectionBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionMollieCollections))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const AUTOMATION_ACCOUNT_SUBSCRIPTION_MOLLIE_COLLECTION_SCHEMA = Yup.object().shape({\n  subscriptionYear: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  subscriptionMonth: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid,\n    Icon\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nfunction AutomationAccountSubscriptionMollieCollectionForm({ t, history, isSubmitting, errors, returnUrl}) {\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_year')}>\n              <Field type=\"number\" \n                      name=\"subscriptionYear\" \n                      className={(errors.subscriptionYear) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionYear\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_month')}>\n              <Field type=\"number\" \n                      name=\"subscriptionMonth\" \n                      className={(errors.subscriptionMonth) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionMonth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n         color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n          >\n          {t('general.new_task')} <Icon name=\"chevron-right\" />\n        </Button>\n        <Link to={returnUrl}>\n          <Button color=\"link\">\n            {t('general.cancel')}\n          </Button>\n        </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n  \nexport default withTranslation()(withRouter(AutomationAccountSubscriptionMollieCollectionForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_TASK_RESULT_QUERY } from \"../../../queries\"\nimport { AUTOMATION_ACCOUNT_SUBSCRIPTION_MOLLIE_COLLECTION_SCHEMA } from './yupSchema'\nimport AutomationAccountSubscriptionMollieCollectionForm from './AutomationAccountSubscriptionMollieCollectionForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n// import SiteWrapper from \"../../SiteWrapper\"\n// import HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport AutomationAccountSubscriptionCreditsBase from './AutomationAccountSubscriptionMollieCollectionBase'\n\n\nconst ADD_TASK = gql`\n  mutation CreateAccountSubscriptionInvoicesMollieCollectionForMonth(\n    $input:CreateAccountSubscriptionInvoicesMollieCollectionForMonthInput!\n  ) {\n    createAccountSubscriptionInvoicesMollieCollectionForMonth(input: $input) {\n      ok\n    }\n  }\n`\n\n\nfunction AutomationAccountSubscriptionMollieCollectionAdd({ t, history }) {\n  const [addTask] = useMutation(ADD_TASK)\n  const returnUrl = \"/automation/account/subscriptions/mollie_collections\"\n\n  return (\n    <AutomationAccountSubscriptionCreditsBase returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('automation.account.subscriptions.mollie_collection.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            subscriptionYear: new Date().getFullYear(), \n            subscriptionMonth: new Date().getMonth() + 1 }}\n          validationSchema={AUTOMATION_ACCOUNT_SUBSCRIPTION_MOLLIE_COLLECTION_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addTask({ variables: {\n                input: {\n                  month: values.subscriptionMonth,\n                  year: values.subscriptionYear\n                }\n              }, refetchQueries: [\n                  {query: GET_TASK_RESULT_QUERY, \n                    variables: {\n                      taskName: \"costasiella.tasks.account.subscription.mollie_collection.tasks.account_subscription_credits_add_for_month\"\n                  }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('automation.account.subscriptions.mollie_collection.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <AutomationAccountSubscriptionMollieCollectionForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </AutomationAccountSubscriptionCreditsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AutomationAccountSubscriptionMollieCollectionAdd))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\n\nlet invoices_active\nlet orders_active\nlet costcenters_active\nlet glaccounts_active\nlet taxrates_active\nlet payment_methods_active\nlet payment_batch_collections_active\nlet payment_batch_payments_active\nlet payment_batch_categories_active\n\nconst FinanceMenu = ({ t, activeLink }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'invoices') ? invoices_active = true: invoices_active = false}\n        {(activeLink === 'orders') ? orders_active = true: orders_active = false}\n        {(activeLink === 'costcenters') ? costcenters_active = true: costcenters_active = false}\n        {(activeLink === 'glaccounts') ? glaccounts_active = true: glaccounts_active = false}\n        {(activeLink === 'taxrates') ? taxrates_active = true: taxrates_active = false}\n        {(activeLink === 'payment_methods') ? payment_methods_active = true: payment_methods_active = false}\n        {(activeLink === 'payment_batch_collections') ? payment_batch_collections_active = true: payment_batch_collections_active = false}\n        {(activeLink === 'payment_batch_payments') ? payment_batch_payments_active = true: payment_batch_payments_active = false}\n        {(activeLink === 'payment_batch_categories') ? payment_batch_categories_active = true: payment_batch_categories_active = false}\n        \n\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/invoices\"\n            icon=\"file-text\"\n            active={invoices_active}\n            >\n            {t('finance.invoices.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/orders\"\n            icon=\"file-plus\"\n            active={orders_active}\n            >\n            {t('finance.orders.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/glaccounts\"\n            icon=\"book\"\n            active={glaccounts_active}\n            >\n            {t('finance.glaccounts.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/costcenters\"\n            icon=\"compass\"\n            active={costcenters_active}\n            >\n            {t('finance.costcenters.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/taxrates\"\n            icon=\"briefcase\"\n            active={taxrates_active}\n            >\n            {t('finance.taxrates.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/finance/paymentmethods\"\n            icon=\"credit-card\"\n            active={payment_methods_active}\n            >\n            {t('finance.payment_methods.title')}\n        </List.GroupItem>\n        <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatch\">\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to=\"#/finance/paymentbatches/collection\"\n              icon=\"download\"\n              active={payment_batch_collections_active}\n              >\n              {t('finance.payment_batch_collections.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatch\">\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to=\"#/finance/paymentbatches/payment\"\n              icon=\"upload\"\n              active={payment_batch_payments_active}\n              >\n              {t('finance.payment_batch_payments.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatchcategory\">\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to=\"#/finance/paymentbatchcategories\"\n              icon=\"list\"\n              active={payment_batch_categories_active}\n              >\n              {t('finance.payment_batch_categories.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n    </List.Group>\n);\n\nexport default withTranslation()(FinanceMenu)","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nclass FinanceHome extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Finance home props:\")\n    console.log(props)\n  }\n\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"finance.title\")} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n                <Grid.Row>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/invoices'>\n                      <StampCard header={<small>{t('finance.invoices.title')}</small>} footer={t('')} color=\"blue\" icon=\"file-text\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/orders'>\n                      <StampCard header={<small>{t('finance.orders.title')}</small>} footer={t('')} color=\"blue\" icon=\"file-plus\" />\n                      </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/glaccounts'>\n                      <StampCard header={<small>{t('finance.glaccounts.title')}</small>} footer={t('')} color=\"blue\" icon=\"book\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/costcenters'>\n                      <StampCard header={<small>{t('finance.costcenters.title')}</small>} footer={t('')} color=\"blue\" icon=\"compass\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/taxrates'>\n                      <StampCard header={<small>{t('finance.taxrates.title')}</small>} footer={t('')} color=\"blue\" icon=\"briefcase\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/finance/paymentmethods'>\n                      <StampCard header={<small>{t('finance.payment_methods.title')}</small>} footer={t('')} color=\"blue\" icon=\"credit-card\" />\n                    </Link>\n                  </Grid.Col>\n                  <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatch\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to={'/finance/paymentbatches/collection'}>\n                        <StampCard header={<small>{t('finance.payment_batch_collections.title')}</small>} footer={t('')} color=\"blue\" icon=\"download\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                  <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatch\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to={'/finance/paymentbatches/payment'}>\n                        <StampCard header={<small>{t('finance.payment_batch_payments.title')}</small>} footer={t('')} color=\"blue\" icon=\"upload\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                  <HasPermissionWrapper permission=\"view\"\n                              resource=\"financepaymentbatchcategory\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to={'/finance/paymentbatchcategories'}>\n                        <StampCard header={<small>{t('finance.payment_batch_categories.title')}</small>} footer={t('')} color=\"blue\" icon=\"list\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                </Grid.Row>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <FinanceMenu />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(FinanceHome))","import { gql } from \"@apollo/client\"\n\nexport const GET_COSTCENTERS_QUERY = gql`\n  query FinanceCostCenters($after: String, $before: String, $archived: Boolean) {\n    financeCostcenters(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id,\n          archived,\n          name,\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_COSTCENTER_QUERY = gql`\n  query FinanceCostcenter($id: ID!) {\n    financeCostcenter(id:$id) {\n      id\n      name\n      code\n      archived\n    }\n  }\n`\n\nexport const ADD_COSTCENTER = gql`\nmutation CreateFinanceCostCenter($input:CreateFinanceCostCenterInput!) {\n  createFinanceCostcenter(input: $input) {\n    financeCostcenter{\n      id\n      archived\n      name\n      code\n    }\n  }\n}\n`\n\nexport const UPDATE_COSTCENTER = gql`\nmutation UpdateFinanceCostCenter($input: UpdateFinanceCostCenterInput!) {\n  updateFinanceCostcenter(input: $input) {\n    financeCostcenter {\n      id\n      name\n      code\n    }\n  }\n}\n`\n\nexport const ARCHIVE_COSTCENTER = gql`\nmutation ArchiveFinanceCostCenter($input: ArchiveFinanceCostCenterInput!) {\n  archiveFinanceCostcenter(input: $input) {\n    financeCostcenter {\n      id\n      archived\n    }\n  }\n}\n`","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinanceCostCentersBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to={\"/finance/costcenters\"}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financeglaccount\">\n                  <Link to={\"/finance/costcenters/add\"}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.costcenters.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <FinanceMenu activeLink='costcenters'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceCostCentersBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\n\nimport { GET_COSTCENTERS_QUERY, ARCHIVE_COSTCENTER } from \"./queries\"\nimport FinanceCostCentersBase from './FinanceCostCentersBase'\n\n\nfunction FinanceCostCenters({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('finance.costcenters.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_COSTCENTERS_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveCostcenter ] = useMutation(ARCHIVE_COSTCENTER)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <FinanceCostCentersBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )\n\n  if (error) return (\n    <FinanceCostCentersBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.costcenters.error_loading')}</p>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )\n\n  const costcenters = data.financeCostcenters\n\n  // Empty list\n  if (!costcenters.edges.length) { return (\n    <FinanceCostCentersBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('finance.costcenters.empty_list') : t(\"finance.costcenters.empty_archive\")}\n        </p>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )}\n\n  return (\n    <FinanceCostCentersBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}\n                    pageInfo={costcenters.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: costcenters.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.financeCostcenters.edges\n                        const pageInfo = fetchMoreResult.financeCostcenters.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new costcenters at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              financeCostcenters: {\n                                __typename: previousResult.financeCostcenters.__typename,\n                                edges: [ ...previousResult.financeCostcenters.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} \n        >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {costcenters.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.code}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/finance/costcenters/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveCostcenter({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_COSTCENTERS_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceCostCenters))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const COSTCENTER_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_COSTCENTERS_QUERY, ADD_COSTCENTER } from './queries'\nimport { COSTCENTER_SCHEMA } from './yupSchema'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceCostCentersBase from './FinanceCostCentersBase';\n\n\nfunction FinanceCostCenterAdd({ t, history }) {\n  const returnUrl = \"/finance/costcenters\"\n  const [ addCostcenter ] = useMutation(ADD_COSTCENTER)\n\n  return (\n    <FinanceCostCentersBase showBack={true}>\n      <Card title={t('finance.costcenters.title_add')}>\n        <Formik\n            initialValues={{ name: '', code: '' }}\n            validationSchema={COSTCENTER_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                addCostcenter({ variables: {\n                  input: {\n                    name: values.name, \n                    code: values.code\n                  }\n                }, refetchQueries: [\n                    {query: GET_COSTCENTERS_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data);\n                    history.push(returnUrl)\n                    toast.success((t('finance.costcenters.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n                <FoForm>\n                    <Card.Body>\n                        <Form.Group label={t('general.name')}>\n                          <Field type=\"text\" \n                                  name=\"name\" \n                                  className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                  autoComplete=\"off\" />\n                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                        <Form.Group label={t('finance.code')}>\n                          <Field type=\"text\" \n                                  name=\"code\" \n                                  className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                                  autoComplete=\"off\" />\n                          <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          color=\"primary\"\n                          className=\"pull-right\" \n                          type=\"submit\" \n                          disabled={isSubmitting}\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button color=\"link\">\n                            {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </FinanceCostCentersBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceCostCenterAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_COSTCENTERS_QUERY, GET_COSTCENTER_QUERY, UPDATE_COSTCENTER } from './queries'\nimport { COSTCENTER_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceCostCentersBase from './FinanceCostCentersBase';\n\n\nfunction FinanceCostCenterEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('finance.costcenters.title_edit')\n  const returnUrl = \"/finance/costcenters\"\n  const { loading, error, data } = useQuery(GET_COSTCENTER_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateCostcenter ] = useMutation(UPDATE_COSTCENTER)\n\n  if (loading) return (\n    <FinanceCostCentersBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )\n\n  if (error) return (\n    <FinanceCostCentersBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </FinanceCostCentersBase>\n  )\n\n  const initialData = data.financeCostcenter;\n\n  return (\n    <FinanceCostCentersBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n              code: initialData.code\n            }}\n            validationSchema={COSTCENTER_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateCostcenter({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                    code: values.code\n                  }\n                }, refetchQueries: [\n                    {query: GET_COSTCENTERS_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('finance.costcenters.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values }) => (\n                <FoForm>\n                    <Card.Body>\n                      <Form.Group label={t('general.name')}>\n                        <Field type=\"text\" \n                                name=\"name\" \n                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.code')}>\n                        <Field type=\"text\" \n                                name=\"code\" \n                                className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          className=\"pull-right\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          type=\"submit\"\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button\n                            type=\"button\" \n                            color=\"link\" \n                          >\n                              {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </FinanceCostCentersBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceCostCenterEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_GLACCOUNTS_QUERY = gql`\n  query FinanceGLAccounts($after: String, $before: String, $archived: Boolean) {\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id,\n          archived,\n          name,\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_GLACCOUNT_QUERY = gql`\n  query FinanceGLAccount($id: ID!) {\n    financeGlaccount(id:$id) {\n      id\n      name\n      code\n      archived\n    }\n  }\n`\n\nexport const ADD_GLACCOUNT = gql`\nmutation CreateFinanceGLAccount($input:CreateFinanceGLAccountInput!) {\n  createFinanceGlaccount(input: $input) {\n    financeGlaccount{\n      id\n      archived\n      name\n      code\n    }\n  }\n}\n`\n\nexport const UPDATE_GLACCOUNT = gql`\nmutation UpdateFinanceGLAccount($input: UpdateFinanceGLAccountInput!) {\n  updateFinanceGlaccount(input: $input) {\n    financeGlaccount {\n      id\n      name\n      code\n    }\n  }\n}\n`\n\nexport const ARCHIVE_GLACCOUNT = gql`\nmutation ArchiveFinanceGLAccount($input: ArchiveFinanceGLAccountInput!) {\n  archiveFinanceGlaccount(input: $input) {\n    financeGlaccount {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinanceGLAccountsBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/finance/glaccounts\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financeglaccount\">\n                  <Link to=\"/finance/glaccounts/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.glaccounts.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <FinanceMenu activeLink='glaccounts'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceGLAccountsBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\n\nimport { GET_GLACCOUNTS_QUERY, ARCHIVE_GLACCOUNT } from \"./queries\"\nimport FinanceGLAccountsBase from './FinanceGLAccountsBase'\n\n\nfunction FinanceGLAccounts({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t(\"finance.glaccounts.title\")\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_GLACCOUNTS_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveGlaccount ] = useMutation(ARCHIVE_GLACCOUNT)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )\n\n  if (error) return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.glaccounts.error_loading')}</p>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )\n\n  const glaccounts = data.financeGlaccounts\n   \n  // Empty list\n  if (!glaccounts.edges.length) { return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}\n                   headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('finance.glaccounts.empty_list') : t(\"finance.glaccounts.empty_archive\")}\n        </p>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )} \n\n  return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}\n                headerContent={headerOptions}\n                pageInfo={glaccounts.pageInfo}\n                onLoadMore={() => {\n                fetchMore({\n                  variables: {\n                    after: glaccounts.pageInfo.endCursor\n                  },\n                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                    const newEdges = fetchMoreResult.financeGlaccounts.edges\n                    const pageInfo = fetchMoreResult.financeGlaccounts.pageInfo\n\n                    return newEdges.length\n                      ? {\n                          // Put the new glaccounts at the end of the list and update `pageInfo`\n                          // so we have the new `endCursor` and `hasNextPage` values\n                          financeGlaccounts: {\n                            __typename: previousResult.financeGlaccounts.__typename,\n                            edges: [ ...previousResult.financeGlaccounts.edges, ...newEdges ],\n                            pageInfo\n                          }\n                        }\n                      : previousResult\n                  }\n                })\n              }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {glaccounts.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.code}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/finance/glaccounts/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveGlaccount({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_GLACCOUNTS_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceGLAccounts))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const GLACCOUNT_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from \"react-router-dom\"\n\nimport { GET_GLACCOUNTS_QUERY, ADD_GLACCOUNT } from './queries'\nimport { GLACCOUNT_SCHEMA } from './yupSchema'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport FinanceGLAccountsBase from './FinanceGLAccountsBase'\n\n\nfunction FinanceGLAccountAdd({t, history}) {\n  const returnUrl = \"/finance/glaccounts\"\n  const [ addGlaccount ] = useMutation(ADD_GLACCOUNT)\n\n  return (\n    <FinanceGLAccountsBase>\n      <Card title={t('finance.glaccounts.title_add')}>\n        <Formik\n          initialValues={{ name: '', code: '' }}\n          validationSchema={GLACCOUNT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addGlaccount({ variables: {\n                input: {\n                  name: values.name, \n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_GLACCOUNTS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('finance.glaccounts.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n            <FoForm>\n                <Card.Body>\n                    <Form.Group label={t('general.name')}>\n                      <Field type=\"text\" \n                              name=\"name\" \n                              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                      <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                    <Form.Group label={t('finance.code')}>\n                      <Field type=\"text\" \n                              name=\"code\" \n                              className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                      <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                </Card.Body>\n                <Card.Footer>\n                    <Button \n                      color=\"primary\"\n                      className=\"pull-right\" \n                      type=\"submit\" \n                      disabled={isSubmitting}\n                    >\n                      {t('general.submit')}\n                    </Button>\n                    <Link to={returnUrl}>\n                      <Button color=\"link\">\n                          {t('general.cancel')}\n                      </Button>\n                    </Link>\n                </Card.Footer>\n            </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </FinanceGLAccountsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceGLAccountAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql, useMutation, useQuery } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_GLACCOUNTS_QUERY, GET_GLACCOUNT_QUERY, UPDATE_GLACCOUNT } from './queries'\nimport { GLACCOUNT_SCHEMA } from './yupSchema'\n\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceGLAccountsBase from './FinanceGLAccountsBase'\n\n\nfunction FinanceGLAccountEdit({t, history, match}) {\n  const id = match.params.id\n  const returnUrl = \"/finance/glaccounts\"\n  const cardTitle = t('finance.glaccounts.title_edit')\n  const { loading, error, data } = useQuery(GET_GLACCOUNT_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateGlaccount ] = useMutation(UPDATE_GLACCOUNT)\n\n  if (loading) return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )\n\n  if (error) return (\n    <FinanceGLAccountsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </FinanceGLAccountsBase>\n  )\n\n  const initialData = data.financeGlaccount;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <FinanceGLAccountsBase>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            code: initialData.code\n          }}\n          validationSchema={GLACCOUNT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateGlaccount({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name,\n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_GLACCOUNTS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('finance.glaccounts.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <FoForm>\n                <Card.Body>\n                  <Form.Group label={t('general.name')}>\n                    <Field type=\"text\" \n                            name=\"name\" \n                            className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                            autoComplete=\"off\" />\n                    <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                  <Form.Group label={t('finance.code')}>\n                    <Field type=\"text\" \n                            name=\"code\" \n                            className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                            autoComplete=\"off\" />\n                    <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Card.Body>\n                <Card.Footer>\n                    <Button \n                      className=\"pull-right\"\n                      color=\"primary\"\n                      disabled={isSubmitting}\n                      type=\"submit\"\n                    >\n                      {t('general.submit')}\n                    </Button>\n                    <Link to={returnUrl}>\n                      <Button\n                        type=\"button\" \n                        color=\"link\" \n                      >\n                          {t('general.cancel')}\n                      </Button>\n                    </Link>\n                </Card.Footer>\n            </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </FinanceGLAccountsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceGLAccountEdit))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let queryVars = {}\n\n  let status = localStorage.getItem(CSLS.FINANCE_INVOICES_FILTER_STATUS)\n  if (status) {\n    queryVars.status = status\n  } else {\n    queryVars.status = undefined\n  }\n  \n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from './tools'\n\n\nfunction getDefaultValue(value) {\n  let defaultValue = localStorage.getItem(value)\n  console.log(defaultValue)\n\n  if (defaultValue) {\n    return defaultValue\n  } else {\n    console.log('return empty default')\n    return \"\"\n  }\n}\n\n\nfunction updateLocalStorageAndRefetch(key, value, refetch) {\n  localStorage.setItem(key, value)\n  refetch(get_list_query_variables())\n\n}\n\nconst selectClass = \"form-control mb-2\"\n\n\nconst FinanceInvoicesFilter = ({ t, history, data, refetch }) => (\n  <div>\n    {/* Status */}\n    <select \n      className={selectClass}\n      value={getDefaultValue(CSLS.FINANCE_INVOICES_FILTER_STATUS)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.FINANCE_INVOICES_FILTER_STATUS,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"finance.invoices.statuses.all\")}</option>\n      <option value=\"DRAFT\" key={v4()}>{t('finance.invoices.statuses.draft')}</option>\n      <option value=\"SENT\" key={v4()}>{t('finance.invoices.statuses.sent')}</option>\n      <option value=\"PAID\" key={v4()}>{t('finance.invoices.statuses.paid')}</option>\n      <option value=\"CANCELLED\" key={v4()}>{t('finance.invoices.statuses.cancelled')}</option>\n    </select>\n  </div>\n);\n\nexport default withTranslation()(withRouter(FinanceInvoicesFilter))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Container,\n  Grid,\n  Icon,\n  Page\n} from \"tabler-react\";\n\nimport SiteWrapper from '../../SiteWrapper'\nimport FinanceInvoicesFilter from \"./FinanceInvoicesFilter\"\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinanceInvoicesBase ({ t, history, children, refetch }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/finance/invoices/groups\" \n                    className='btn btn-outline-secondary btn-sm'>\n                <Icon prefix=\"fe\" name=\"folder\" /> {t('general.groups')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n              <FinanceInvoicesFilter refetch={refetch}/>\n              <h5>{t(\"general.menu\")}</h5>\n              <FinanceMenu activeLink='invoices'/>\n            </Grid.Col>\n          </Grid.Row>\n          </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceInvoicesBase))","// @flow\n\nimport React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Badge\n} from \"tabler-react\";\n\n\nclass FinanceInvoicesStatus extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"finance costcenter edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const history = this.props.history\n    const status = this.props.status\n\n    switch (status) {\n      case \"DRAFT\":\n        return <Badge color=\"secondary\">{t('finance.invoices.status.DRAFT')}</Badge>\n        break\n      case \"SENT\":\n        return <Badge color=\"primary\">{t('finance.invoices.status.SENT')}</Badge>\n        break\n      case \"PAID\":\n        return <Badge color=\"success\">{t('finance.invoices.status.PAID')}</Badge>\n        break\n      case \"CANCELLED\":\n        return <Badge color=\"warning\">{t('finance.invoices.status.CANCELLED')}</Badge>\n        break\n      default:\n        return t('finance.invoices.status.NOT_FOUND') \n    }\n  }\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoicesStatus))","import { gql } from \"@apollo/client\"\n\nexport const GET_INVOICES_QUERY = gql`\n  query FinanceInvoices($after: String, $before: String, $status: String) {\n    financeInvoices(first: 15, before: $before, after: $after, status: $status) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          invoiceNumber\n          status\n          summary\n          relationCompany\n          relationContactName\n          dateSent\n          dateDue\n          total\n          totalDisplay\n          balance\n          balanceDisplay\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INVOICE_QUERY = gql`\n  query FinanceInvoice($id: ID!, $before: String, $after: String) {\n    financeInvoice(id:$id) {\n      id\n      account {\n        id\n        fullName\n      }\n      financePaymentMethod {\n        id\n        name\n      }\n      relationCompany\n      relationCompanyRegistration\n      relationCompanyTaxRegistration\n      relationContactName\n      relationAddress\n      relationPostcode\n      relationCity\n      relationCountry\n      status\n      summary\n      invoiceNumber\n      dateSent\n      dateDue\n      terms\n      footer\n      note\n      subtotalDisplay\n      taxDisplay\n      total\n      totalDisplay\n      paidDisplay\n      balance\n      balanceDisplay\n      creditInvoiceNumber\n      updatedAt\n      items {\n        edges {\n          node {\n            id\n            lineNumber\n            productName\n            description\n            quantity\n            price\n            financeTaxRate {\n              id\n              name\n              percentage\n              rateType\n            }\n            subtotal\n            subtotalDisplay\n            tax\n            taxDisplay\n            total\n            totalDisplay\n            financeGlaccount {\n              id\n              name\n            }\n            financeCostcenter {\n              id\n              name\n            }\n          }\n        }\n      }\n      payments {\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            id\n            amount\n            amountDisplay\n            date\n            financePaymentMethod {\n              id\n              name\n            }\n            note\n            onlinePaymentId\n          }\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    organization(id:\"T3JnYW5pemF0aW9uTm9kZToxMDA=\") {\n      id\n      name\n      address\n      phone\n      email\n      registration\n      taxRegistration\n    }\n  }\n`\n\n\nexport const UPDATE_INVOICE = gql`\n  mutation UpdateFinanceInvoice($input: UpdateFinanceInvoiceInput!) {\n    updateFinanceInvoice(input: $input) {\n      financeInvoice {\n        id\n        summary\n      }\n    }\n  }\n`\n\n\nexport const CANCEL_AND_CREATE_CREDIT_INVOICE = gql`\n  mutation CancelAndCreateCreditFinanceInvoice($input: CancelAndCreateCreditFinanceInvoiceInput!) {\n    cancelAndCreateCreditFinanceInvoice(input: $input) {\n      financeInvoice {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_FINANCE_INVOICE = gql`\n  mutation DeleteFinanceInvoice($input: DeleteFinanceInvoiceInput!) {\n    deleteFinanceInvoice(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const CREATE_INVOICE_ITEM = gql`\n  mutation CreateFinanceInvoiceItem($input: CreateFinanceInvoiceItemInput!) {\n    createFinanceInvoiceItem(input: $input) {\n      financeInvoiceItem {\n        id\n        productName\n        description\n        quantity\n        price\n        financeTaxRate {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_INVOICE_ITEM = gql`\n  mutation UpdateFinanceInvoiceItem($input: UpdateFinanceInvoiceItemInput!) {\n    updateFinanceInvoiceItem(input: $input) {\n      financeInvoiceItem {\n        id\n        productName\n        description\n        quantity\n        price\n        financeTaxRate {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const DELETE_INVOICE_ITEM = gql`\n  mutation DeleteFinanceInvoiceItem($input: DeleteFinanceInvoiceItemInput!) {\n    deleteFinanceInvoiceItem(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const DELETE_INVOICE_PAYMENT = gql`\n  mutation DeleteFinanceInvoicePayment($input: DeleteFinanceInvoicePaymentInput!) {\n    deleteFinanceInvoicePayment(input: $input) {\n      ok\n    }\n  }\n`","import React from 'react'\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\nimport {\n  Icon,\n} from \"tabler-react\";\n\n\nconst confirm_delete = ({t, msgConfirm, msgDescription, msgSuccess, deleteFunction, functionVariables}) => {\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className='custom-ui'>\n            <h1>{t('general.confirm_delete')}</h1>\n            {msgConfirm}\n            {msgDescription}\n            <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_delete_no')}</button>\n            <button\n              className=\"btn btn-danger\"\n              onClick={() => {\n                deleteFunction(functionVariables)\n                  .then(({ data }) => {\n                    console.log('got data', data);\n                    toast.success(\n                      msgSuccess, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                  })\n                onClose()\n              }}\n            >\n              <Icon name=\"trash-2\" /> {t('general.confirm_delete_yes')}\n            </button>\n          </div>\n        )\n      }\n    })\n  }\n\nexport default confirm_delete\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Table, \n  Text\n} from \"tabler-react\";\n\nimport { get_list_query_variables } from \"./tools\"\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceInvoicesBase from \"./FinanceInvoicesBase\"\nimport FinanceInvoicesStatus from \"../../ui/FinanceInvoiceStatus\"\n\nimport { GET_INVOICES_QUERY, DELETE_FINANCE_INVOICE } from \"./queries\"\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport moment from 'moment'\n\n\nfunction FinanceInvoices({ t, location, history }) {\n  // Set back location for edit invoice\n  localStorage.setItem(CSLS.FINANCE_INVOICES_EDIT_RETURN, location.pathname)\n  // Fetch data\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_INVOICES_QUERY, {\n    variables: get_list_query_variables(),\n    fetchPolicy: \"network-only\"\n  })\n  const [ deleteFinanceInvoice ] = useMutation(DELETE_FINANCE_INVOICE)\n\n  if (loading) return (\n    <FinanceInvoicesBase refetch={refetch}>\n      <ContentCard cardTitle={t('finance.invoices.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceInvoicesBase>\n  )\n  // Error\n  if (error) return (\n    <FinanceInvoicesBase refetch={refetch}>\n      <ContentCard cardTitle={t('finance.invoices.title')}>\n        <p>{t('finance.invoices.error_loading')}</p>\n      </ContentCard>\n    </FinanceInvoicesBase>\n  )\n\n  const invoices = data.financeInvoices\n\n  // Empty list\n  if (!invoices.edges.length) { return (\n    <FinanceInvoicesBase refetch={refetch}>\n      <ContentCard cardTitle={t('finance.invoices.title')}>\n        <p>\n          {t('finance.invoices.empty_list')}\n        </p>\n      </ContentCard>\n    </FinanceInvoicesBase>\n  )}\n\n  return (\n    <FinanceInvoicesBase refetch={refetch}>\n      <ContentCard cardTitle={t('finance.invoices.title')}\n                  pageInfo={invoices.pageInfo}\n                  onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: invoices.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.financeInvoices.edges\n                        const pageInfo = fetchMoreResult.financeInvoices.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new invoices at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              financeInvoices: {\n                                __typename: previousResult.financeInvoices.__typename,\n                                edges: [ ...previousResult.financeInvoices.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} \n        >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoices.invoice_number')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoices.relation')} & {t('finance.invoices.summary')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoices.date')} & {t('finance.invoices.due')}</Table.ColHeader>\n              {/* <Table.ColHeader>{t('finance.invoices.due')}</Table.ColHeader> */}\n              <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.balance')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {invoices.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    <FinanceInvoicesStatus status={node.status} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <Link to={\"/finance/invoices/edit/\" + node.id}>\n                      {node.invoiceNumber}\n                    </Link>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.account) ? \n                      <Link to={\"/relations/accounts/\" + node.account.id + \"/profile\"}>\n                        {(node.relationCompany) ? node.relationCompany: node.relationContactName}\n                      </Link> :\n                      (node.relationCompany) ? node.relationCompany: node.relationContactName\n                    }\n                    <br />\n                    <Text.Small color=\"gray\">{node.summary.trunc(20)}</Text.Small>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {moment(node.dateSent).format('LL')} <br />\n                    {moment(node.dateDue).format('LL')}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.totalDisplay}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.balanceDisplay}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={\"/finance/invoices/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"finance.invoices.delete_confirm_msg\"),\n                          msgDescription: <p>{node.invoiceNumber}</p>,\n                          msgSuccess: t('finance.invoices.deleted'),\n                          deleteFunction: deleteFinanceInvoice,\n                          functionVariables: { \n                            variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, \n                            refetchQueries: [\n                              {query: GET_INVOICES_QUERY, variables: get_list_query_variables() } \n                            ]\n                          }\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceInvoicesBase>\n  )\n} \n\nexport default withTranslation()(withRouter(FinanceInvoices))","import CSLS from './cs_local_storage'\nimport { CSAuth } from './authentication';\n\nexport function refreshTokenAndOpenExportLinkInNewTab(doTokenRefresh, history, exportUrl) {  \n  const refreshToken = localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN)\n\n  doTokenRefresh({ variables: { refreshToken: refreshToken }})\n    .then(({data}) => {\n      CSAuth.updateTokenInfo(data.refreshToken)\n      const token = data.refreshToken.token\n      //Add authentication headers in URL\n      var url = `${exportUrl}/${token}`;\n\n      window.open(url, \"_blank\")\n      // history.push(export_url)\n    }).catch((error) => {\n      console.log(error)\n      history.push(\"/#/user/login\")\n    })\n}\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\n\n\nfunction FinanceInvoiceEditBase({t, match, history, children}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n          <Container>\n            {children}\n          </Container>\n      </div>\n    </SiteWrapper>\n  ) \n}\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditBase))","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { get_list_query_variables } from \"../tools\"\nimport { CREATE_INVOICE_ITEM, GET_INVOICES_QUERY, GET_INVOICE_QUERY } from \"../queries\"\nimport { toast } from 'react-toastify'\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction FinanceInvoiceItemAdd({t, match}) {\n  const [addInvoiceItem, { data }] = useMutation(CREATE_INVOICE_ITEM)\n\n    return (\n      <button className=\"btn btn-primary btn-sm\" \n        title={t('general.delete')} \n        href=\"\"\n        onClick={() => {\n          addInvoiceItem({ variables: {\n            input: {\n              financeInvoice: match.params.id              \n            }\n          }, refetchQueries: [\n              {query: GET_INVOICE_QUERY, variables: {id: match.params.id}}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('finance.invoice.toast_add_item_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              // setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              // setSubmitting(false)\n            })\n      }}>\n        <Icon prefix=\"fe\" name=\"plus\" /> { ' ' }\n        {t('finance.invoice.item_add')}\n      </button>\n    )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceItemAdd))\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { get_list_query_variables } from \"../tools\"\nimport { DELETE_INVOICE_ITEM, GET_INVOICES_QUERY, GET_INVOICE_QUERY } from \"../queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\n\nfunction FinanceInvoiceItemDelete({t, match, node}) {\n  const [deleteInvoiceItem, { data }] = useMutation(DELETE_INVOICE_ITEM)\n\n    return (\n      <button className=\"icon btn btn-link btn-sm\" \n        title={t('general.delete')} \n        href=\"\"\n        onClick={() => {\n          confirm_delete({\n            t: t,\n            msgConfirm: t(\"finance.invoices.item_delete_confirm_msg\"),\n            msgDescription: <p>{node.productName} <br /> {node.description}</p>,\n            msgSuccess: t('finance.invoices.item_deleted'),\n            deleteFunction: deleteInvoiceItem,\n            functionVariables: { \n              variables: {\n                input: {\n                  id: node.id\n                }\n              }, \n              refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables() },\n                {query: GET_INVOICE_QUERY, variables: {id: match.params.id} },\n              ]\n            }\n          })\n      }}>\n        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n      </button>\n    )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceItemDelete))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n  Grid,\n  Icon\n} from \"tabler-react\"\n\nimport FinanceInvoiceItemDelete from './FinanceInvoiceItemDelete'\n\n\nconst FinanceInvoiceItemEditForm = ({ t, isSubmitting, errors, node, touched, handleChange, setFieldTouched, inputData }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Grid.Row>\n      {/* <Icon name=\"more-vertical\" /> */}\n        <Grid.Col md={3} className=\"cs-grid-table-cell\">\n          <Form.Group>\n            <Field type=\"text\" \n                    name=\"productName\" \n                    className={(errors.productName) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"productName\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"productName\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={3} className=\"cs-grid-table-cell\">\n          <Form.Group>\n            <Field type=\"text\" \n                    name=\"description\" \n                    className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    component=\"textarea\"\n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"description\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={2} className=\"cs-grid-table-cell\">\n          <Form.Group>\n            <Field type=\"text\" \n                   name=\"quantity\" \n                   className={(errors.quantity) ? \"form-control is-invalid\" : \"form-control\"} \n                   autoComplete=\"off\" \n                   onChange={(e) => {\n                    handleChange(e)\n                    setFieldTouched(\"quantity\", true, true)\n                  }}\n            />\n            <ErrorMessage name=\"quantity\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group>\n            <Field type=\"text\" \n                    name=\"price\" \n                    className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"price\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={2} className=\"cs-grid-table-cell\">\n          <Form.Group>\n            <Field component=\"select\" \n                  name=\"financeTaxRate\" \n                  className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\"\n                  onChange={(e) => {\n                    handleChange(e)\n                    setFieldTouched(\"financeTaxRate\", true, true)\n                  }}\n            >\n              {console.log(\"query data in form finance tax rate:\")}\n              {console.log(inputData)}\n              <option value=\"\" key={v4()}></option>\n              {inputData.financeTaxRates.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={1} className=\"cs-grid-table-cell\">\n          <span className=\"float-right\">{node.totalDisplay}</span> <br /><br />\n          {(Object.keys(touched).length === 0) ? \"\" :\n            <Button \n              color=\"primary\"\n              className=\"pull-right\" \n              type=\"submit\" \n              disabled={isSubmitting}\n            >\n              {t('general.submit')}\n            </Button>\n          }\n        </Grid.Col>\n        <Grid.Col md={1} className=\"cs-grid-table-cell\">\n          <span className=\"float-right\"><FinanceInvoiceItemDelete node={node}/></span>\n        </Grid.Col>\n      </Grid.Row>\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceItemEditForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { UPDATE_INVOICE_ITEM } from \"../queries\"\nimport FinanceInvoiceItemEditForm from './FinanceInvoiceItemEditForm'\n\n\nfunction FinanceInvoiceItemEdit({t, initialValues, node, inputData}) {\n  const [updateInvoiceItem, { data }] = useMutation(UPDATE_INVOICE_ITEM)\n\n    return (\n      <Formik\n        initialValues={{\n          productName: initialValues.productName,\n          description: initialValues.description,\n          price: initialValues.price,\n          quantity: initialValues.quantity,\n          financeTaxRate: (initialValues.financeTaxRate) ? initialValues.financeTaxRate.id : null\n        }}\n        // validationSchema={INVOICE_GROUP_SCHEMA}\n        onSubmit={(values, { setSubmitting, setTouched }) => {\n          console.log('submit values:')\n          console.log(values)\n\n          updateInvoiceItem({ variables: {\n            input: {\n              id: initialValues.id,\n              productName: values.productName, \n              description: values.description,\n              price: values.price,\n              quantity: values.quantity,\n              financeTaxRate: values.financeTaxRate\n            }\n          }, refetchQueries: [\n              // {query: GET_INVOICES_QUERY, variables: get_list_query_variables()}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('finance.invoice.item.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n              setTouched({})\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n          }}\n      >\n        {({ isSubmitting, errors, values, touched, handleChange, setFieldTouched }) => (\n          <FinanceInvoiceItemEditForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            touched={touched}\n            handleChange={handleChange}\n            setFieldTouched={setFieldTouched}\n            node={node}\n            inputData={inputData}\n          >\n          </FinanceInvoiceItemEditForm>   \n        )}\n      </Formik>\n    )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceItemEdit))","// @flow\n\nimport React, { useCallback, useState } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport { toast } from 'react-toastify'\n\nimport {\n  Card,\n  Dimmer, \n  Grid, \n} from \"tabler-react\"\n\nimport FinanceInvoiceItemAdd from \"./FinanceInvoiceItemAdd\"\nimport { GET_INVOICE_QUERY } from '../queries'\n\nimport FinanceInvoiceItemEdit from './FinanceInvoiceItemEdit'\n\n\nexport const UPDATE_INVOICE_ITEM = gql`\n  mutation UpdateFinanceInvoiceItem($input: UpdateFinanceInvoiceItemInput!) {\n    updateFinanceInvoiceItem(input: $input) {\n      financeInvoiceItem {\n        id\n      }\n    }\n  }\n`\n\nfunction FinanceInvoiceEditItems ({ t, history, match, refetchInvoice, inputData }) {\n  const [updateItem, { data }] = useMutation(UPDATE_INVOICE_ITEM)\n  const [ updating, setUpdating ] = useState(false)\n\n  const onDragEnd = useCallback((result) => {\n    // the only one that is required\n    console.log('onDragEnd triggered...')\n    console.log(result)\n    const { draggableId, destination, source, reason } = result\n    console.log(source)\n    console.log(destination)\n    console.log(reason)\n\n    // Nothing to do, nowhere to go...\n    console.log(\"drop cancelled...\")\n    if (!destination || reason === 'CANCEL') {\n      return\n    }\n\n    // Moved back to the same spot\n    console.log(\"dropped to the same spot\")\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return\n    }\n\n    updateLineNumber({\n      node_id: draggableId,\n      line_number: destination.index\n    })\n\n  }, []);\n\n\n  const updateLineNumber = ({ node_id, line_number }) => {\n    setUpdating(true)\n    updateItem({ \n      variables: { \n        input: {\n          id: node_id,\n          lineNumber: line_number\n        } \n      },\n      refetchQueries: [\n        { query: GET_INVOICE_QUERY, variables: { id: inputData.financeInvoice.id }}\n      ]\n    }).then(({ data }) => {\n      console.log('got data', data)\n      toast.success((t('finance.invoice.saved_item_sorting')), {\n          position: toast.POSITION.BOTTOM_RIGHT\n      })\n      setTimeout(() => setUpdating(false), 125)\n    }).catch((error) => {\n      toast.error((t('general.toast_server_error')) +  error, {\n          position: toast.POSITION.BOTTOM_RIGHT\n      })\n      console.log('there was an error sending the query', error)\n      setTimeout(() => setUpdating(false), 125)\n    })\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd} >\n      <Card statusColor=\"blue\">\n        <Card.Header>\n          <Card.Title>{t('general.items')}</Card.Title>\n          <Card.Options>\n            <FinanceInvoiceItemAdd />\n          </Card.Options>\n        </Card.Header>\n        <Card.Body>\n          <Dimmer active={updating} loader={updating}>\n              <Grid.Row className=\"cs-grid-table-header\">\n                <Grid.Col md={3} className=\"cs-grid-table-cell\">{t(\"general.product\")}</Grid.Col>\n                <Grid.Col md={3} className=\"cs-grid-table-cell\">{t(\"general.description\")}</Grid.Col>\n                <Grid.Col md={2} className=\"cs-grid-table-cell\">{t(\"general.quantity_short_and_price\")}</Grid.Col>\n                <Grid.Col md={2} className=\"cs-grid-table-cell\">{t(\"general.tax\")}</Grid.Col>\n                <Grid.Col md={1} className=\"cs-grid-table-cell\"><span className=\"float-right\">{t(\"general.total\")}</span></Grid.Col>\n                <Grid.Col md={1} className=\"cs-grid-table-cell\"></Grid.Col>\n              </Grid.Row>\n              <Droppable droppableId=\"invoice_items\">\n                {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef} \n                      {...provided.droppableProps} \n                    >\n                      {inputData.financeInvoice.items.edges.map(({ node }, idx) => (\n                        <Draggable \n                          draggableId={node.id}\n                          index={idx}\n                          key={node.id}\n                        >\n                          {(provided, snapshot) => (\n                              <div \n                                ref={provided.innerRef}\n                                index={node.lineNumber}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                >\n                                <FinanceInvoiceItemEdit initialValues={node} inputData={inputData} node={node} />\n                              </div>\n                          )}\n                        </Draggable>\n                      ))}\n                      {provided.placeholder}\n                    </div>\n                )}\n              </Droppable>\n          </Dimmer>\n        </Card.Body>\n      </Card>\n    </DragDropContext>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditItems))","export const tinymceBasicConf = {\n    resize: true,\n    menubar: false,\n    plugins: 'link image code lists paste fullscreen',\n    statusbar: false,\n    toolbar: ' undo redo | formatselect | bold italic strikethrough | bullist numlist | alignleft aligncenter alignright | link image | pastetext code | fullscreen',    \n}\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n\n// Use editor as controlled component:\n// https://github.com/tinymce/tinymce-react/blob/master/README.md\n\nconst FinanceInvoiceEditTermsForm = ({ t, isSubmitting, values, errors, touched, handleChange, setFieldTouched, setFieldValue }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group label={t('general.terms_and_conditions')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"terms\"\n          initialValue={values.terms}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldValue(\"terms\", e.target.getContent())\n            setFieldTouched(\"terms\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"terms\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('general.submit')}\n      </Button>\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditTermsForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n\n// Use editor as controlled component:\n// https://github.com/tinymce/tinymce-react/blob/master/README.md\n\nconst FinanceInvoiceEditFooterForm = ({ t, isSubmitting, values, errors, touched, handleChange, setFieldTouched, setFieldValue }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group label={t('general.footer')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"footer\"\n          initialValue={values.footer}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldValue(\"footer\", e.target.getContent())\n            setFieldTouched(\"footer\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"footer\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('general.submit')}\n      </Button>\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditFooterForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n// Use editor as controlled component:\n// https://github.com/tinymce/tinymce-react/blob/master/README.md\n\nconst FinanceInvoiceEditNoteForm = ({ t, isSubmitting, values, errors, handleChange, submitForm, setFieldTouched, setFieldValue }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group label={t('general.note')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"note\"\n          initialValue={values.note}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldValue(\"note\", e.target.getContent())\n            setFieldTouched(\"note\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('general.submit')}\n      </Button>\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditNoteForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport {\n  Tab,\n  TabbedCard\n} from \"tabler-react\"\n\n\nimport { get_list_query_variables } from \"../tools\"\nimport { UPDATE_INVOICE, GET_INVOICE_QUERY } from \"../queries\"\nimport FinanceInvoiceEditTermsForm from \"./FinanceInvoiceEditTermsForm\"\nimport FinanceInvoiceEditFooterForm from \"./FinanceInvoiceEditFooterForm\"\nimport FinanceInvoiceEditNoteForm from \"./FinanceInvoiceEditNoteForm\"\n\n\nfunction FinanceInvoiceEditAdditional({t, history, match, initialData}) {\n  const id = match.params.id\n  const [ updateInvoice ] = useMutation(UPDATE_INVOICE)\n\n  return (\n    <TabbedCard initialTab={t('general.terms_and_conditions')}>\n      <Tab title={t('general.terms_and_conditions')}>\n        <Formik\n          initialValues={{ \n            terms: initialData.financeInvoice.terms, \n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                terms: values.terms, \n              }\n            }, refetchQueries: [\n                {query: GET_INVOICE_QUERY, variables: {id: id}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_terms_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, handleChange, setFieldTouched, setFieldValue }) => (\n            <FinanceInvoiceEditTermsForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              touched={touched}\n              handleChange={handleChange}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n            >\n            </FinanceInvoiceEditTermsForm>\n          )}\n        </Formik>\n      </Tab>\n      <Tab title={t('general.footer')}>\n        <Formik\n          initialValues={{ \n            footer: initialData.financeInvoice.footer, \n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                footer: values.footer, \n              }\n            }, refetchQueries: [\n              {query: GET_INVOICE_QUERY, variables: {id: id}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_footer_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, handleChange, setFieldTouched, setFieldValue }) => (\n            <FinanceInvoiceEditFooterForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              handleChange={handleChange}\n              touched={touched}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n            >\n            </FinanceInvoiceEditFooterForm>\n          )}\n        </Formik>\n      </Tab>\n      <Tab title={t('general.note')}>\n        <Formik\n          initialValues={{ \n            note: initialData.financeInvoice.note, \n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                note: values.note, \n              }\n            }, refetchQueries: [\n              {query: GET_INVOICE_QUERY, variables: {id: id}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_note_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, handleChange, setFieldTouched, setFieldValue }) => (\n            <FinanceInvoiceEditNoteForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              touched={touched}\n              handleChange={handleChange}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n            >\n            </FinanceInvoiceEditNoteForm>\n          )}\n        </Formik>\n      </Tab>\n    </TabbedCard>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditAdditional))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Card\n} from \"tabler-react\";\n\n\nconst FinanceInvoiceEditBalance = ({ t, history, financeInvoice }) => (\n  <Card statusColor=\"blue\">\n    <Card.Header>\n      <Card.Title>{t('general.balance')}</Card.Title>\n    </Card.Header>\n    <Card.Body>\n      <div>\n        <span className=\"pull-left bold\">\n          {t('general.subtotal')}\n        </span>\n        <span className=\"pull-right\">\n          {financeInvoice.subtotalDisplay}\n        </span>\n      </div><br />\n      <div>\n        <span className=\"pull-left bold\">\n          {t('general.tax')}\n        </span>\n        <span className=\"pull-right\">\n          {financeInvoice.taxDisplay}\n        </span>\n      </div><br />\n      <div>\n        <span className=\"pull-left bold\">\n          {t('general.total')}\n        </span>\n        <span className=\"pull-right\">\n          {financeInvoice.totalDisplay}\n        </span>\n      </div><br />\n      <div>\n        <span className=\"pull-left bold\">\n          {t('general.paid')}\n        </span>\n        <span className=\"pull-right\">\n          {financeInvoice.paidDisplay}\n        </span>\n      </div><br />\n      <div>\n        <span className=\"pull-left bold\">\n          {t('general.balance')}\n        </span>\n        <span className=\"pull-right\">\n          {financeInvoice.balanceDisplay}\n        </span>\n      </div>\n    </Card.Body>\n  </Card>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditBalance))","export function dateToLocalISO(date) {\n    if (date instanceof Date) {\n        return date.getFullYear() + '-' + \n               (\"0\" + (date.getMonth() + 1)).slice(-2) + '-' +\n               (\"0\" + date.getDate()).slice(-2)\n    } else {\n        return date\n    }\n}\n\nexport function dateToLocalISOTime(date) {\n    if (date instanceof Date) {\n        return date.getHours() + ':' + \n               ('0' + date.getMinutes()).slice(-2)\n    } else {\n        return date\n    }\n}\n\n\nexport function TimeStringToJSDateOBJ(time_string) {\n    // time_string is Expected to be \"HH:MM:SS\"\n    let date_obj = new Date()\n    let time_split = time_string.split(':')\n    date_obj.setHours(time_split[0])\n    date_obj.setMinutes(time_split[1])\n\n    return date_obj\n}","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n} from \"tabler-react\"\n\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nconst FinanceInvoiceEditOptionsForm = ({ t, isSubmitting, values, errors, handleChange, touched, setFieldValue, setFieldTouched, inputData }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group label={t('finance.invoices.invoice_number')}>\n        <Field type=\"text\" \n                name=\"invoiceNumber\" \n                className={(errors.invoiceNumber) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" \n                onChange={(e) => {\n                  handleChange(e)\n                  setFieldTouched(\"invoiceNumber\", true, true)\n                }}           \n        />\n        <ErrorMessage name=\"invoiceNumber\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('finance.invoices.date')}>\n        <CSDatePicker \n          className={(errors.dateSent) ? \"form-control is-invalid\" : \"form-control\"} \n          selected={values.dateSent}\n          onChange={(date) => {\n            setFieldValue(\"dateSent\", date)\n            setFieldTouched(\"dateSent\", true)\n          }}\n        />\n        <ErrorMessage name=\"dateSent\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('finance.invoices.due')}>\n        <CSDatePicker \n          className={(errors.dateDue) ? \"form-control is-invalid\" : \"form-control\"} \n          selected={values.dateDue}\n          onChange={(date) => {\n            setFieldValue(\"dateDue\", date)\n            setFieldTouched(\"dateDue\", true)\n          }}\n        />\n        <ErrorMessage name=\"dateDue\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.status')}>\n        <Field component=\"select\" \n              name=\"status\" \n              className={(errors.status) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\"\n              onChange={(e) => {\n                handleChange(e)\n                setFieldTouched(\"status\", true, true)\n              }}\n        >\n          <option value=\"DRAFT\">{t('finance.invoices.status.DRAFT')}</option>\n          <option value=\"SENT\">{t('finance.invoices.status.SENT')}</option>\n          <option value=\"PAID\">{t('finance.invoices.status.PAID')}</option>\n          <option value=\"CANCELLED\">{t('finance.invoices.status.CANCELLED')}</option>\n        </Field>\n        <ErrorMessage name=\"status\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.payment_method')}>\n        <Field component=\"select\" \n              name=\"financePaymentMethod\" \n              className={(errors.financePaymentMethod) ? \"form-control is-invalid\" : \"form-control\"} \n              onChange={(e) => {\n                handleChange(e)\n                setFieldTouched(\"financePaymentMethod\", true, true)\n              }}\n              autoComplete=\"off\">\n          <option value=\"\" key={v4()}></option>\n          {inputData.financePaymentMethods.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name}</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"financePaymentMethod\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>  \n      {(Object.keys(touched).length === 0) ? \"\" :\n        <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n        >\n          {t('general.submit')}\n        </Button>\n      }\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditOptionsForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Card, \n} from \"tabler-react\"\n\nimport { dateToLocalISO } from '../../../../tools/date_tools'\nimport { get_list_query_variables } from \"../tools\"\nimport { UPDATE_INVOICE, GET_INVOICES_QUERY } from \"../queries\"\nimport FinanceInvoiceEditOptionsForm from \"./FinanceInvoiceEditOptionsForm\"\n\n\nfunction FinanceInvoiceEditOptions({t, match, initialData}) {\n  const [ updateInvoice ] = useMutation(UPDATE_INVOICE)\n  \n  let initialPaymentMethod = \"\"\n  if (initialData.financeInvoice.financePaymentMethod) {\n    initialPaymentMethod = initialData.financeInvoice.financePaymentMethod.id\n  }\n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateSent = null\n  if (initialData.financeInvoice.dateSent) {\n    dateSent = new Date(initialData.financeInvoice.dateSent)\n  }\n  let dateDue = null\n  if (initialData.financeInvoice.dateDue) {\n    dateDue = new Date(initialData.financeInvoice.dateDue)\n  }\n\n  \n  console.log(\"########\")\n  console.log(initialData)\n  console.log(dateSent)\n  console.log(dateDue)\n\n\n  return (\n    <Card title={t('general.options')} statusColor=\"blue\">\n      <Card.Body>\n        <Formik\n          initialValues={{ \n            invoiceNumber: initialData.financeInvoice.invoiceNumber, \n            dateSent: dateSent,\n            dateDue: dateDue,\n            status: initialData.financeInvoice.status,\n            financePaymentMethod: initialPaymentMethod\n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting, setTouched }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                invoiceNumber: values.invoiceNumber, \n                dateSent: dateToLocalISO(values.dateSent),\n                dateDue: dateToLocalISO(values.dateDue),\n                status: values.status,\n                financePaymentMethod: values.financePaymentMethod,\n              }\n            }, refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables()}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_options_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n                setTouched({})\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, handleChange, submitForm, setFieldTouched, setFieldValue }) => (\n            <FinanceInvoiceEditOptionsForm\n              inputData={initialData}\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              touched={touched}\n              handleChange={handleChange}\n              setFieldValue={setFieldValue}\n              setFieldTouched={setFieldTouched}\n            >\n            </FinanceInvoiceEditOptionsForm>\n          )}\n        </Formik>\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditOptions))","// @flow\n\nimport React, { Fragment } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Card\n} from \"tabler-react\";\n\n\nconst FinanceInvoiceEditOrganization = ({ t, history, organization }) => (\n  <Card statusColor=\"blue\">\n    <Card.Header>\n      <Card.Title>{t('general.from')}</Card.Title>\n    </Card.Header>\n    <Card.Body>\n      <div className=\"bold\">\n        {organization.name}\n      </div>\n      {(organization.address) ?\n        <div dangerouslySetInnerHTML={{ __html: organization.address}} />\n        : \"\"\n      }      \n      <div>\n        {organization.phone}\n      </div>\n      <div>\n        {organization.email}\n      </div>\n      <div>\n        {organization.registration}\n      </div>\n      <div>\n        {organization.taxRegistration}\n      </div>\n    </Card.Body>\n  </Card>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditOrganization))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n} from \"tabler-react\"\n\n\nlet summaryFormTypingTimer\nconst formSubmitTimeout = 750\n\n\nconst FinanceInvoiceEditSummaryForm = ({ t, isSubmitting, errors, touched, setFieldTouched, handleChange }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group>\n        <Field \n          type=\"text\" \n          name=\"summary\" \n          className={(errors.summary) ? \"form-control is-invalid\" : \"form-control\"} \n          autoComplete=\"off\" \n          onChange={(e) => {\n            handleChange(e)\n            setFieldTouched(\"summary\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"summary\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      {(Object.keys(touched).length === 0) ? \"\" :\n        <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n        >\n          {t('general.submit')}\n        </Button>\n      }\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditSummaryForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Card\n} from \"tabler-react\"\n\nimport { get_list_query_variables } from \"../tools\"\nimport { UPDATE_INVOICE, GET_INVOICES_QUERY } from \"../queries\"\nimport FinanceInvoiceEditSummaryForm from \"./FinanceInvoiceEditSummaryForm\"\n\n\nfunction FinanceInvoiceEditSummary({t, history, match, initialData}) {\n  const [ updateInvoice ] = useMutation(UPDATE_INVOICE)\n\n  return (\n    <Card statusColor=\"blue\">\n      <Card.Header>\n        <Card.Title>{t('general.summary')}</Card.Title>\n      </Card.Header>\n      <Card.Body>\n        <Formik\n          initialValues={{ \n            summary: initialData.financeInvoice.summary, \n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting, setTouched }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                summary: values.summary, \n              }\n            }, refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables()}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_summary_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n                setTouched({})\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, setFieldTouched, handleChange }) => (\n            <FinanceInvoiceEditSummaryForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              touched={touched}\n              handleChange={handleChange}\n              setFieldTouched={setFieldTouched}\n            >\n            </FinanceInvoiceEditSummaryForm>\n          )}\n        </Formik>\n        {console.log(initialData)}\n        {(initialData.financeInvoice.creditInvoiceNumber) ?\n          t(\"finance.invoice.credit_invoice_for\") + \": \" + initialData.financeInvoice.creditInvoiceNumber\n        : \"\"}\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditSummary))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Dimmer,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\n\nconst FinanceInvoiceEditToForm = ({ t, isSubmitting, errors, touched, handleChange, setFieldTouched }) => (\n  <Dimmer loader={isSubmitting} active={isSubmitting}>\n    <FoForm>\n      <Form.Group label={t(\"finance.invoices.relation_company\")}>\n        <Field type=\"text\" \n                name=\"relationCompany\" \n                className={(errors.relationCompany) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" \n                onChange={(e) => {\n                  handleChange(e)\n                  setFieldTouched(\"relationCompany\", true, true)\n                }}           \n        />\n        <ErrorMessage name=\"relationCompany\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_company_registration\")}>\n            <Field type=\"text\" \n                    name=\"relationCompanyRegistration\" \n                    className={(errors.relationCompanyRegistration) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationCompanyRegistartion\", true, true)\n                    }} \n            />\n            <ErrorMessage name=\"relationCompanyRegistration\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_company_tax_registration\")}>\n            <Field type=\"text\" \n                    name=\"relationCompanyTaxRegistration\" \n                    className={(errors.relationCompanyTaxRegistration) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationCompanyTaxRegistration\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"relationCompanyTaxRegistration\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Form.Group label={t(\"finance.invoices.relation_contact_name\")}>\n        <Field type=\"text\" \n                name=\"relationContactName\" \n                className={(errors.relationContactName) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" \n                onChange={(e) => {\n                  handleChange(e)\n                  setFieldTouched(\"relationContactName\", true, true)\n                }}\n        />\n        <ErrorMessage name=\"relationContactName\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_address\")}>\n            <Field type=\"text\" \n                    name=\"relationAddress\" \n                    className={(errors.relationAddress) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationAddress\", true, true)\n                    }} \n            />\n            <ErrorMessage name=\"relationAddress\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_postcode\")}>\n            <Field type=\"text\" \n                    name=\"relationPostcode\" \n                    className={(errors.relationPostcode) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationPostcode\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"relationPostcode\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_city\")}>\n            <Field type=\"text\" \n                    name=\"relationCity\" \n                    className={(errors.relationCity) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationCity\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"relationCity\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Form.Group label={t(\"finance.invoices.relation_country\")}>\n            <Field type=\"text\" \n                    name=\"relationCountry\" \n                    className={(errors.relationCountry) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" \n                    onChange={(e) => {\n                      handleChange(e)\n                      setFieldTouched(\"relationCountry\", true, true)\n                    }}\n            />\n            <ErrorMessage name=\"relationCountry\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          {(Object.keys(touched).length === 0) ? \"\" :\n            <Button \n              color=\"primary\"\n              className=\"pull-right\" \n              type=\"submit\" \n              disabled={isSubmitting}\n            >\n              {t('general.submit')}\n            </Button>\n          }\n        </Grid.Col>\n      </Grid.Row>\n    </FoForm>\n  </Dimmer>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditToForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport {\n  Card\n} from \"tabler-react\"\n\n\nimport { get_list_query_variables } from \"../tools\"\nimport { UPDATE_INVOICE, GET_INVOICES_QUERY } from \"../queries\"\nimport FinanceInvoiceEditToForm from \"./FinanceInvoiceEditToForm\"\n\n\nfunction FinanceInvoiceEditTo({ t, history, match, initialData }) {\n  const [ updateInvoice ] = useMutation(UPDATE_INVOICE)\n\n  return (\n    <Card title={t('general.to')} statusColor=\"blue\">\n      <Card.Body>\n        <Formik\n          initialValues={{ \n            relationCompany: initialData.financeInvoice.relationCompany, \n            relationCompanyRegistration: initialData.financeInvoice.relationCompanyRegistration, \n            relationCompanyTaxRegistration: initialData.financeInvoice.relationCompanyTaxRegistration, \n            relationContactName: initialData.financeInvoice.relationContactName, \n            relationAddress: initialData.financeInvoice.relationAddress, \n            relationPostcode: initialData.financeInvoice.relationPostcode, \n            relationCity: initialData.financeInvoice.relationCity, \n            relationCountry: initialData.financeInvoice.relationCountry, \n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting, setTouched }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateInvoice({ variables: {\n              input: {\n                id: match.params.id,\n                relationCompany: values.relationCompany,\n                relationCompanyRegistration: values.relationCompanyRegistration,\n                relationCompanyTaxRegistration: values.relationCompanyTaxRegistration,\n                relationContactName: values.relationContactName,\n                relationAddress: values.relationAddress,\n                relationPostcode: values.relationPostcode,\n                relationCity: values.relationCity,\n                relationCountry: values.relationCountry\n              }\n            }, refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables()}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('finance.invoice.toast_edit_to_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n                setTouched({})\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, touched, handleChange, setFieldTouched }) => (\n            <FinanceInvoiceEditToForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              touched={touched}\n              handleChange={handleChange}\n              setFieldTouched={setFieldTouched}\n            >\n            </FinanceInvoiceEditToForm>\n          )}\n        </Formik>\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditTo))","import React, { useContext } from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n// import { get_list_query_variables } from \"../tools\"\nimport { DELETE_INVOICE_PAYMENT, GET_INVOICES_QUERY, GET_INVOICE_QUERY } from \"../queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\nimport moment from 'moment'\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport { get_list_query_variables } from \"../tools\"\n\n\nfunction FinanceInvoiceEditPaymentDelete({t, match, node}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const [deleteInvoicePayment, { data }] = useMutation(DELETE_INVOICE_PAYMENT)\n\n    return (\n      <button className=\"icon btn btn-link btn-sm\" \n        title={t('general.delete')} \n        href=\"\"\n        onClick={() => {\n          confirm_delete({\n            t: t,\n            msgConfirm: t(\"finance.invoices.payment_delete_confirm_msg\"),\n            msgDescription: <p>{ moment(node.date).format(dateFormat) } - {node.amountDisplay}</p>,\n            msgSuccess: t('finance.invoices.payment_deleted'),\n            deleteFunction: deleteInvoicePayment,\n            functionVariables: { \n              variables: {\n                input: {\n                  id: node.id\n                }\n              }, \n              refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables() },\n                {query: GET_INVOICE_QUERY, variables: {id: match.params.id} },\n              ]\n            }\n          })\n      }}>\n        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n      </button>\n    )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditPaymentDelete))\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Button,\n  Card,\n  Icon, \n  Table\n} from \"tabler-react\"\n\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceInvoiceEditPaymentDelete from \"./FinanceInvoiceEditPaymentDelete\"\n\n\nfunction FinanceInvoiceEditPayments ({ t, history, match, refetchInvoice, inputData }) {\n  const id = match.params.id\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const paymentAddUrl = `/finance/invoices/${id}/payment/add`\n\n  return (\n    <Card statusColor=\"blue\">\n      <Card.Header>\n        <Card.Title>{t('general.payments')}</Card.Title>\n        <Card.Options>\n          {/* <FinanceInvoiceItemAdd /> */}\n          <Link to={paymentAddUrl}>\n            <Button className=\"btn-sm\" color=\"primary\">\n              <Icon prefix=\"fe\" name=\"plus\" /> {t('finance.invoice.payments.add')} \n            </Button>\n          </Link>\n        </Card.Options>\n      </Card.Header>\n        <Table cards>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t(\"general.date\")}</Table.ColHeader>\n              <Table.ColHeader>{t(\"general.amount\")}</Table.ColHeader>\n              <Table.ColHeader>{t(\"general.payment_method\")}</Table.ColHeader>\n              <Table.ColHeader>{t(\"general.note\")}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {inputData.financeInvoice.payments.edges.map(({ node }) => (\n              <Table.Row key={\"payment_\" + node.id}>\n                <Table.Col>\n                  { moment(node.date).format(dateFormat) }\n                </Table.Col>\n                <Table.Col>\n                  { node.amountDisplay }\n                </Table.Col>\n                <Table.Col>\n                  { (node.financePaymentMethod) ? node.financePaymentMethod.name : \"\" }\n                  { (node.onlinePaymentId) ? <div><small className=\"text-muted\">{node.onlinePaymentId}</small></div> : \"\" }\n                </Table.Col>\n                <Table.Col>\n                  <div dangerouslySetInnerHTML={{ __html:node.note }}></div>\n                </Table.Col>\n                <Table.Col>\n                  <span className=\"pull-right\">\n                    <Link to={ \"/finance/invoices/\" + inputData.financeInvoice.id + \"/payment/edit/\" + node.id } \n                          className='btn btn-secondary btn-sm mr-2'\n                    >\n                      {t('general.edit')}\n                    </Link>\n                    <FinanceInvoiceEditPaymentDelete node={node} />\n                  </span>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Card>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceInvoiceEditPayments))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport { toast } from 'react-toastify'\n\nimport { GET_INVOICES_QUERY, GET_INVOICE_QUERY, CANCEL_AND_CREATE_CREDIT_INVOICE } from '../queries'\nimport { TOKEN_REFRESH } from \"../../../../queries/system/auth\"\nimport { refreshTokenAndOpenExportLinkInNewTab } from \"../../../../tools/refresh_token_and_open_export_link\"\n\nimport {\n  Dropdown,\n  Page,\n  Grid,\n  Icon,\n  Button,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n\nimport CSLS from \"../../../../tools/cs_local_storage\"\n\nimport FinanceInvoiceEditBase from \"./FinanceInvoiceEditBase\"\nimport FinanceInvoiceEditItems from \"./FinanceInvoiceEditItems\"\nimport FinanceInvoiceEditAdditional from \"./FinanceInvoiceEditAdditional\"\nimport FinanceInvoiceEditBalance from \"./FinanceInvoiceEditBalance\"\nimport FinanceInvoiceEditOptions from \"./FinanceInvoiceEditOptions\"\nimport FinanceInvoiceEditOrganization from \"./FinanceInvoiceEditOrganization\"\nimport FinanceInvoiceEditSummary from \"./FinanceInvoiceEditSummary\"\nimport FinanceInvoiceEditTo from \"./FinanceInvoiceEditTo\"\nimport FinanceInvoiceEditPayments from \"./FinanceInvoiceEditPayments\"\n\nfunction FinanceInvoiceEdit({t, match, history}) {\n  const id = match.params.id\n  const { loading, error, data, refetch } = useQuery(GET_INVOICE_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n  const [cancelAndCreateCreditInvoice] = useMutation(CANCEL_AND_CREATE_CREDIT_INVOICE)\n  \n  // Loading\n  if (loading) return <FinanceInvoiceEditBase>{t('general.loading_with_dots')}</FinanceInvoiceEditBase>\n  // Error\n  if (error) {\n    console.log(error)\n    return <FinanceInvoiceEditBase>{t('general.error_sad_smiley')}</FinanceInvoiceEditBase>\n  }\n\n  console.log(data)\n  // Fetch back location from localStorage, if no value set, default back to /finance/invoices\n  let return_url = localStorage.getItem(CSLS.FINANCE_INVOICES_EDIT_RETURN)\n  if (!return_url) {\n    return_url = \"/finance/invoices\"\n  }\n  const export_url = \"/d/export/invoice/pdf/\" + id\n  const payment_add_url = `/finance/invoices/${id}/payment/add`\n\n  return (\n    <FinanceInvoiceEditBase>\n      <Page.Header title={t('finance.invoice.title') + ' #' + data.financeInvoice.invoiceNumber}>\n        <div className=\"page-options d-flex\">\n          {/* Back */}\n          <Link to={return_url} \n                className='btn btn-secondary mr-2'>\n              <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')} \n          </Link>\n          {/* Add payment */}\n          <Link to={payment_add_url} \n              className='btn btn-secondary mr-2'>\n              <Icon prefix=\"fe\" name=\"dollar-sign\" /> {t('finance.invoice.payments.add')} \n          </Link>\n          {/* Export as PDF */}\n          <Button\n            color=\"secondary\"\n            icon=\"printer\"\n            className=\"mr-2\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url\n            )}\n          >\n            {t('general.pdf')} \n          </Button>\n          {/* Tools */}\n          <Dropdown\n            className=\"\"\n            type=\"button\"\n            toggle\n            icon=\"tool\"\n            color=\"secondary\"\n            triggerContent={t(\"general.tools\")}\n            items={[\n              <HasPermissionWrapper permission=\"change\" resource=\"financeinvoice\">\n                <Dropdown.Item\n                  key={v4()}\n                  icon=\"slash\"\n                  onClick={() => {\n                    cancelAndCreateCreditInvoice({ variables: {\n                      input: {\n                        id: id,\n                      }\n                    }, refetchQueries: []\n                    })\n                    .then(({ data }) => {\n                        console.log('got data', data)\n                        const creditInvoiceId = data.cancelAndCreateCreditFinanceInvoice.financeInvoice.id\n                        history.push(`/finance/invoices/edit/${creditInvoiceId}`)\n                        toast.success((t('finance.invoice.now_editing_credit_invoice')), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error)\n                      })\n                  }}>\n                    {t('finance.invoice.cancel_and_create_credit_invoice')}\n                </Dropdown.Item>\n              </HasPermissionWrapper>\n            ]}>\n          </Dropdown>\n        </div>\n      </Page.Header>\n      <Grid.Row>\n        <Grid.Col md={9}>\n          <FinanceInvoiceEditSummary \n            initialData={data}\n          />\n          <Grid.Row>\n            <Grid.Col md={6} ml={0}>\n              <FinanceInvoiceEditOrganization organization={data.organization} />\n            </Grid.Col>\n            <Grid.Col md={6} ml={0}>\n              <FinanceInvoiceEditTo initialData={data} />\n            </Grid.Col>\n          </Grid.Row>\n        </Grid.Col>\n        <Grid.Col md={3}>\n          <FinanceInvoiceEditBalance financeInvoice={data.financeInvoice} />\n          <FinanceInvoiceEditOptions\n            initialData={data}\n          />\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <FinanceInvoiceEditItems inputData={data} refetchInvoice={refetch} />\n          <FinanceInvoiceEditAdditional initialData={data} />\n          <FinanceInvoiceEditPayments inputData={data} />\n        </Grid.Col>\n      </Grid.Row>\n    </FinanceInvoiceEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Badge\n} from \"tabler-react\"\n\n\nconst BadgeBoolean = ({ t, value }) => (\n    (value) ?\n        <Badge color=\"success\">{t('general.yes')}</Badge> :\n        <Badge color=\"danger\">{t('general.no')}</Badge> \n)\n\nexport default withTranslation()(BadgeBoolean)","import { gql } from \"@apollo/client\"\n\nexport const GET_INVOICE_GROUPS_QUERY = gql`\n  query FinanceInvoiceGroupsQuery($archived: Boolean!) {\n    financeInvoiceGroups(archived: $archived) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          name\n          nextId\n          dueAfterDays\n          prefix\n          prefixYear\n          autoResetPrefixYear\n          terms\n          footer\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INVOICE_GROUP_QUERY = gql`\n  query FinanceInvoiceGroup($id: ID!) {\n    financeInvoiceGroup(id:$id) {\n      id\n      archived\n      displayPublic\n      name\n      nextId\n      dueAfterDays\n      prefix\n      prefixYear\n      autoResetPrefixYear\n      terms\n      footer\n      code\n    }\n  }\n`\n\nexport const UPDATE_INVOICE_GROUP = gql`\nmutation UpdateFinanceInvoiceGroup($input: UpdateFinanceInvoiceGroupInput!) {\n  updateFinanceInvoiceGroup(input: $input) {\n    financeInvoiceGroup {\n      id\n      name\n      code\n    }\n  }\n}\n`\n\nexport const ADD_INVOICE_GROUP = gql`\nmutation CreateFinanceInvoiceGroup($input:CreateFinanceInvoiceGroupInput!) {\n  createFinanceInvoiceGroup(input: $input) {\n    financeInvoiceGroup{\n      id\n      archived\n      displayPublic\n      name\n      nextId\n      dueAfterDays\n      prefix\n      prefixYear\n      autoResetPrefixYear\n      terms\n      footer\n      code\n    }\n  }\n}\n`\n\nexport const ARCHIVE_INVOICE_GROUP = gql`\nmutation ArchiveFinanceInvoiceGroup($input: ArchiveFinanceInvoiceGroupInput!) {\n  archiveFinanceInvoiceGroup(input: $input) {\n    financeInvoiceGroup {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  Text\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport ContentCard from \"../../../general/ContentCard\"\nimport FinanceMenu from \"../../FinanceMenu\"\n\nimport { GET_INVOICE_GROUPS_QUERY, ARCHIVE_INVOICE_GROUP } from \"./queries\"\n\n\nfunction FinanceInvoiceGroupsBase({t, history, children, showBack=true}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/finance/invoices\" \n                    className='btn btn-outline-secondary btn-sm mr-2'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('finance.invoices.title')}\n              </Link>\n              <Link to=\"/finance/invoices/groups/defaults\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"settings\" /> {t('finance.invoice_groups_defaults.title')}\n              </Link> \n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/finance/invoices/groups\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financeinvoicegroup\">\n                  <Link to=\"/finance/invoices/groups/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.invoice_groups.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <FinanceMenu activeLink='invoices'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nconst FinanceInvoiceGroups = ({ t, history, archived=false }) => (\n\n            <Query query={GET_INVOICE_GROUPS_QUERY} variables={{ archived }}>\n             {({ loading, error, data: {financeInvoiceGroups: invoice_groups}, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('finance.invoice_groups.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('finance.invoice_groups.title')}>\n                    <p>{t('finance.invoice_groups.error_loading')}</p>\n                  </ContentCard>\n                )\n                const headerOptions = <Card.Options>\n                  <Button color={(!archived) ? 'primary': 'secondary'}  \n                          size=\"sm\"\n                          onClick={() => {archived=false; refetch({archived});}}>\n                    {t('general.current')}\n                  </Button>\n                  <Button color={(archived) ? 'primary': 'secondary'} \n                          size=\"sm\" \n                          className=\"ml-2\" \n                          onClick={() => {archived=true; refetch({archived});}}>\n                    {t('general.archive')}\n                  </Button>\n                </Card.Options>\n                \n                // Empty list\n                if (!invoice_groups.edges.length) { return (\n                  <ContentCard cardTitle={t('finance.invoice_groups.title')}\n                               headerContent={headerOptions}>\n                    <p>\n                    {(!archived) ? t('finance.invoice_groups.empty_list') : t(\"finance.invoice_groups.empty_archive\")}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('finance.invoice_groups.title')}\n                               headerContent={headerOptions}\n                               pageInfo={invoice_groups.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: invoice_groups.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.financeInvoiceGroups.edges\n                                    const pageInfo = fetchMoreResult.financeInvoiceGroups.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new invoice_groups at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          financeInvoiceGroups: {\n                                            __typename: previousResult.financeInvoiceGroups.__typename,\n                                            edges: [ ...previousResult.financeInvoiceGroups.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} \n                    >\n                    <Table>\n                      <Table.Header>\n                        <Table.Row key={v4()}>\n                          <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                          <Table.ColHeader>{t('finance.invoice_groups.next_id')}</Table.ColHeader>\n                          <Table.ColHeader>{t('finance.invoice_groups.due_after_days')}</Table.ColHeader>\n                          <Table.ColHeader>{t('general.prefix')}</Table.ColHeader>\n                          <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                          <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n                        </Table.Row>\n                      </Table.Header>\n                      <Table.Body>\n                          {invoice_groups.edges.map(({ node }) => (\n                            <Table.Row key={v4()}>\n                              <Table.Col key={v4()}>\n                                {node.name}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.nextId}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.dueAfterDays}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.prefix} \n                                {(node.prefixYear) ? <span>[{t('general.year')}]<br /></span>: ''}\n                                {(node.autoResetPrefixYear) ? <Text.Small color=\"gray\">\n                                  {t('finance.invoice_groups.auto_reset_prefix_year')}\n                                </Text.Small>: ''}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                <BadgeBoolean value={node.displayPublic} />\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.code}\n                              </Table.Col>\n                              <Table.Col className=\"text-right\" key={v4()}>\n                                {(node.archived) ? \n                                  <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                  <Button className='btn-sm' \n                                          onClick={() => history.push(\"/finance/invoices/groups/edit/\" + node.id)}\n                                          color=\"secondary\">\n                                    {t('general.edit')}\n                                  </Button>\n                                }\n                              </Table.Col>\n                              <Mutation mutation={ARCHIVE_INVOICE_GROUP} key={v4()}>\n                                {(archiveInvoiceGroup, { data }) => (\n                                  <Table.Col className=\"text-right\" key={v4()}>\n                                    <button className=\"icon btn btn-link btn-sm\" \n                                        title={t('general.archive')} \n                                        href=\"\"\n                                        onClick={() => {\n                                          console.log(\"clicked archived\")\n                                          let id = node.id\n                                          archiveInvoiceGroup({ variables: {\n                                            input: {\n                                            id,\n                                            archived: !archived\n                                            }\n                                    }, refetchQueries: [\n                                        {query: GET_INVOICE_GROUPS_QUERY, variables: {\"archived\": archived }}\n                                    ]}).then(({ data }) => {\n                                      console.log('got data', data);\n                                      toast.success(\n                                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error);\n                                    })\n                                    }}>\n                                      <Icon prefix=\"fa\" name=\"inbox\" />\n                                    </button>\n                                  </Table.Col>\n                                )}\n                              </Mutation>\n                            </Table.Row>\n                          ))}\n                      </Table.Body>\n                    </Table>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n\n);\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupsBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table,\n  Text\n} from \"tabler-react\";\n\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport { GET_INVOICE_GROUPS_QUERY, ARCHIVE_INVOICE_GROUP } from \"./queries\"\nimport FinanceInvoiceGroupsBase from './FinanceInvoiceGroupsBase'\n\n\nfunction FinanceInvoiceGroups({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('finance.invoice_groups.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_INVOICE_GROUPS_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveInvoiceGroup ] = useMutation(ARCHIVE_INVOICE_GROUP)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <FinanceInvoiceGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceInvoiceGroupsBase>\n  )\n\n  if (error) return (\n    <FinanceInvoiceGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.invoice_groups.error_loading')}</p>\n      </ContentCard>\n    </FinanceInvoiceGroupsBase>\n  )\n\n  const invoiceGroups = data.financeInvoiceGroups\n\n  return (\n    <FinanceInvoiceGroupsBase>\n      <ContentCard cardTitle={t('finance.invoice_groups.title')}\n                   headerContent={headerOptions}\n                   pageInfo={invoiceGroups.pageInfo}\n                   onLoadMore={() => {\n                   fetchMore({\n                     variables: {\n                       after: invoiceGroups.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.financeInvoiceGroups.edges\n                        const pageInfo = fetchMoreResult.financeInvoiceGroups.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new invoiceGroups at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              financeInvoiceGroups: {\n                                __typename: previousResult.financeInvoiceGroups.__typename,\n                                edges: [ ...previousResult.financeInvoiceGroups.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} \n        >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoice_groups.next_id')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoice_groups.due_after_days')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.prefix')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {invoiceGroups.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.nextId}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dueAfterDays}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.prefix} \n                    {(node.prefixYear) ? <span>[{t('general.year')}]<br /></span>: ''}\n                    {(node.autoResetPrefixYear) ? <Text.Small color=\"gray\">\n                      {t('finance.invoice_groups.auto_reset_prefix_year')}\n                    </Text.Small>: ''}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <BadgeBoolean value={node.displayPublic} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.code}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/finance/invoices/groups/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveInvoiceGroup({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_INVOICE_GROUPS_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceInvoiceGroupsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroups))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const INVOICE_GROUP_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    dueAfterDays: Yup.number()\n      .moreThan(0, t('yup.field_above_0'))\n      .required(t('yup.field_required')),\n    nextId: Yup.number(),\n    prefix: Yup.string(),\n    prefixYear: Yup.boolean(),\n    autoResetPrefixYear: Yup.boolean(),\n    terms: Yup.string(),\n    footer: Yup.string(),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n\n\nconst FinanceInvoiceGroupForm = ({ t, history, isSubmitting, setFieldTouched, setFieldValue, errors, values, returnUrl, edit=false }) => (\n  <FoForm>\n    <Card.Body>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"displayPublic\" \n                checked={values.displayPublic} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('finance.invoice_groups.public')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n          </Form.Group>    \n        </Grid.Col>\n      </Grid.Row>\n      <Form.Group label={t('general.name')}>\n        <Field type=\"text\" \n                name=\"name\" \n                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Grid.Row>\n        {(edit) ?\n        <Grid.Col>\n          <Form.Group label={t('finance.invoice_groups.next_id')}>\n            <Field type=\"text\" \n                    name=\"nextId\" \n                    className={(errors.nextId) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"nextId\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col> : \"\"}\n        <Grid.Col>\n          <Form.Group label={t('finance.invoice_groups.due_after_days')}>\n            <Field type=\"text\" \n                    name=\"dueAfterDays\" \n                    className={(errors.dueAfterDays) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"dueAfterDays\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Form.Group label={t('general.prefix')}>\n        <Field type=\"text\" \n                name=\"prefix\" \n                className={(errors.prefix) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"prefix\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"prefixYear\" \n                checked={values.prefixYear} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('finance.invoice_groups.prefix_year')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"prefixYear\" component=\"div\" />   \n          </Form.Group>   \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"autoResetPrefixYear\" \n                checked={values.autoResetPrefixYear} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('finance.invoice_groups.auto_reset_prefix_year')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"autoResetPrefixYear\" component=\"div\" />   \n          </Form.Group>   \n        </Grid.Col>\n      </Grid.Row>\n      <Form.Group label={t('general.terms')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"terms\"\n          initialValue={values.terms}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldTouched(\"terms\", true, true)\n            setFieldValue(\"terms\", e.target.getContent())\n          }}\n        />\n        <ErrorMessage name=\"terms\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.footer')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"footer\"\n          initialValue={values.footer}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldTouched(\"footer\", true, true)\n            setFieldValue(\"footer\", e.target.getContent())\n          }}\n        />\n        <ErrorMessage name=\"footer\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('finance.code')}>\n        <Field type=\"text\" \n                name=\"code\" \n                className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button \n            type=\"button\" \n            color=\"link\">\n              {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupForm))","import React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_INVOICE_GROUPS_QUERY, ADD_INVOICE_GROUP } from './queries'\nimport { INVOICE_GROUP_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport FinanceInvoiceGroupsBase from './FinanceInvoiceGroupsBase';\nimport FinanceInvoiceGroupForm from './FinanceInvoiceGroupForm'\n\n\nfunction FinanceInvoiceGroupAdd({ t, history }) {\n  const returnUrl = \"/finance/invoices/groups\"\n  const [addInvoiceGroup] = useMutation(ADD_INVOICE_GROUP)\n\n  return (\n    <FinanceInvoiceGroupsBase showBack={true}>\n      <Card title={t('finance.invoice_groups.title_add')}>\n        <Formik\n          initialValues={{ \n            name: '', \n            displayPublic: true,\n            dueAfterDays: 30,\n            prefix: 'INV',\n            prefixYear: true,\n            autoResetPrefixYear: true,\n            terms: '',\n            footer: '',\n            code: '' \n          }}\n          validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addInvoiceGroup({ variables: {\n                input: {\n                  name: values.name, \n                  displayPublic: values.displayPublic,\n                  dueAfterDays: values.dueAfterDays,\n                  prefix: values.prefix,\n                  prefixYear: values.prefixYear,\n                  autoResetPrefixYear: values.autoResetPrefixYear,\n                  terms: values.terms,\n                  footer: values.footer,\n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_INVOICE_GROUPS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('finance.invoice_groups.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, values, errors, setFieldValue, setFieldTouched }) => (\n            <FinanceInvoiceGroupForm \n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n            />\n          )}\n        </Formik>\n      </Card>\n    </FinanceInvoiceGroupsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_INVOICE_GROUPS_QUERY, GET_INVOICE_GROUP_QUERY, UPDATE_INVOICE_GROUP } from './queries'\nimport { INVOICE_GROUP_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport FinanceInvoiceGroupForm from './FinanceInvoiceGroupForm'\nimport FinanceInvoiceGroupsBase from './FinanceInvoiceGroupsBase';\n\n\nfunction FinanceInvoiceGroupEdit({t, history, match}) {\n  const id = match.params.id\n  const returnUrl = \"/finance/invoices/groups\"\n  const cardTitle = t('finance.invoice_groups.title_edit')\n  const { loading, error, data } = useQuery(GET_INVOICE_GROUP_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateInvoiceGroup ] = useMutation(UPDATE_INVOICE_GROUP)\n\n  if (loading) return (\n    <FinanceInvoiceGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceInvoiceGroupsBase>\n  )\n\n  if (error) return (\n    <FinanceInvoiceGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.invoice_groups.error_loading')}</p>\n      </ContentCard>\n    </FinanceInvoiceGroupsBase>\n  )\n                    \n  const initialData = data.financeInvoiceGroup;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <FinanceInvoiceGroupsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            displayPublic: initialData.displayPublic,\n            dueAfterDays: initialData.dueAfterDays,\n            nextId: initialData.nextId,\n            prefix: initialData.prefix,\n            prefixYear: initialData.prefixYear,\n            autoResetPrefixYear: initialData.autoResetPrefixYear,\n            terms: initialData.terms,\n            footer: initialData.footer,\n            code: initialData.code\n          }}\n          validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateInvoiceGroup({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name, \n                  displayPublic: values.displayPublic,\n                  nextId: values.nextId,\n                  dueAfterDays: values.dueAfterDays,\n                  prefix: values.prefix,\n                  prefixYear: values.prefixYear,\n                  autoResetPrefixYear: values.autoResetPrefixYear,\n                  terms: values.terms,\n                  footer: values.footer,\n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_INVOICE_GROUPS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('finance.invoice_groups.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <FinanceInvoiceGroupForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              edit={true}\n            />\n          )}\n        </Formik>\n      </Card>\n    </FinanceInvoiceGroupsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport {\n  Dimmer,\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\n\nconst FinanceInvoiceGroupDefaultForm = ({ t, history, inputData, isSubmitting, setFieldTouched, setFieldValue, errors, values, submitForm }) => (\n  <FoForm>\n    <Dimmer active={isSubmitting} loader={isSubmitting} >\n      <Form.Group>\n        <Field component=\"select\" \n              name=\"financeInvoiceGroup\" \n              className={(errors.financeInvoiceGroup) ? \"form-control is-invalid\" : \"form-control\"} \n              onChange={(e) => {\n                setFieldValue('financeInvoiceGroup', e.target.value)\n                setFieldTouched('financeInvoiceGroup', true)\n                setTimeout(() => {submitForm()}, 200)\n              }}\n              autoComplete=\"off\">\n          {inputData.financeInvoiceGroups.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name}</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"financeInvoiceGroup\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>  \n    </Dimmer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupDefaultForm))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const INVOICE_GROUP_DEFAULT_SCHEMA = Yup.object().shape({\n    financeInvoiceGroup: Yup.string(),\n  })\n","import { gql } from \"@apollo/client\"\n\nexport const GET_INVOICE_GROUPS_DEFAULTS_QUERY = gql`\nquery FinanceInvoiceGroupDefaults {\n  financeInvoiceGroupDefaults(first: 100) {\n    edges {\n      node {\n        id\n        itemType\n        financeInvoiceGroup {\n          id\n          name\n        }\n      }\n    }\n  }\n}\n`\n\nexport const GET_INVOICE_GROUP_QUERY = gql`\n  query FinanceInvoiceGroup($id: ID!) {\n    financeInvoiceGroup(id:$id) {\n      id\n      archived\n      displayPublic\n      name\n      nextId\n      dueAfterDays\n      prefix\n      prefixYear\n      autoResetPrefixYear\n      terms\n      footer\n      code\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { Formik } from 'formik'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  Text\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport FinanceMenu from \"../../../FinanceMenu\"\nimport FinanceInvoiceGroupDefaultForm from './FinanceInvoiceGroupDefaultForm'\n\nimport { INVOICE_GROUP_DEFAULT_SCHEMA } from \"./yupSchema\"\nimport { GET_INVOICE_GROUPS_QUERY } from \"../queries\"\nimport { GET_INVOICE_GROUPS_DEFAULTS_QUERY } from \"./queries\"\n\n\nconst UPDATE_INVOICE_GROUP_DEFAULT = gql`\n  mutation UpdateFinanceInvoiceGroupDefault($input: UpdateFinanceInvoiceGroupDefaultInput!) {\n    updateFinanceInvoiceGroupDefault(input: $input) {\n      financeInvoiceGroupDefault {\n        id\n        itemType\n        financeInvoiceGroup {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nconst fetch_default_type_name = (t, itemType) => {\n  switch(itemType) {\n    case \"MEMBERSHIPS\":\n      return t('finance.invoice_groups_defaults.MEMBERSHIPS')\n      break\n    case \"SUBSCRIPTIONS\":\n      return t('finance.invoice_groups_defaults.SUBSCRIPTIONS')\n      break\n    case \"CLASSPASSES\":\n      return t('finance.invoice_groups_defaults.CLASSPASSES')\n      break\n    case \"DROPINCLASSES\":\n      return t('finance.invoice_groups_defaults.DROPINCLASSES')\n      break\n    case \"TRIALCLASSES\":\n      return t('finance.invoice_groups_defaults.TRIALCLASSES')\n      break\n    case \"EVENT_TICKETS\":\n      return t('finance.invoice_groups_defaults.EVENT_TICKETS')\n      break\n    case \"SHOP_SALES\":\n      return t('finance.invoice_groups_defaults.SHOP_SALES')\n      break\n    case \"TEACHER_PAYMENTS\":\n      return t('finance.invoice_groups_defaults.TEACHER_PAYMENTS')\n      break\n    case \"EMPLOYEE_EXPENSES\":\n      return t('finance.invoice_groups_defaults.EMPLOYEE_EXPENSES')\n      break\n    default:\n      return t('finance.invoice_groups_defaults.TYPE_NOT_FOUND')\n  }\n}\n\n\n\nconst FinanceInvoiceGroupsDefaults = ({ t, history }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"finance.title\")}>\n          <div className=\"page-options d-flex\">\n            <Link to=\"/finance/invoices/groups\" \n                  className='btn btn-outline-secondary btn-sm'>\n                <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('finance.invoice_groups.title')}\n            </Link>\n          </div>\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            <Query query={GET_INVOICE_GROUPS_DEFAULTS_QUERY} variables={{}}>\n             {({ loading, error, data: {financeInvoiceGroupDefaults: invoice_group_defaults}, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('finance.invoice_groups_defaults.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('finance.invoice_groups_defaults.title')}>\n                    <p>{t('finance.invoice_groups_defaults.error_loading')}</p>\n                  </ContentCard>\n                )\n                \n                // Empty list\n                if (!invoice_group_defaults.edges.length) { return (\n                  <ContentCard cardTitle={t('finance.invoice_groups_defaults.title')}>\n                    <p>\n                      {t('finance.invoice_groups_defaults.empty_list')}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('finance.invoice_groups_defaults.title')}\n                               pageInfo={invoice_group_defaults.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: invoice_group_defaults.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.financeInvoiceGroups.edges\n                                    const pageInfo = fetchMoreResult.financeInvoiceGroups.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new invoice_groups_defaults at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          financeInvoiceGroups: {\n                                            __typename: previousResult.financeInvoiceGroups.__typename,\n                                            edges: [ ...previousResult.financeInvoiceGroups.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} \n                    >\n                    <Table>\n                      <Table.Header>\n                        <Table.Row key={v4()}>\n                          <Table.ColHeader>{t('finance.invoice_groups_defaults.item_type')}</Table.ColHeader>\n                          <Table.ColHeader>{t('finance.invoice_groups_defaults.invoice_group')}</Table.ColHeader>\n                        </Table.Row>\n                      </Table.Header>\n                      <Table.Body>\n                          {invoice_group_defaults.edges.map(({ node }) => (\n                            <Table.Row key={v4()}>\n                              <Table.Col key={v4()}>\n                                { fetch_default_type_name(t, node.itemType) }\n                              </Table.Col>\n                              <Table.Col>\n                                <Query query={GET_INVOICE_GROUPS_QUERY} variables={{archived: false}}>\n                                  {({ loading, error, data, refetch, fetchMore }) => {\n                                    // Loading\n                                    if (loading) return ( \"Loading...\")\n                                    // Error\n                                    if (error) return ( \"error loading\" )\n\n                                    const inputData = data\n\n                                    return (\n                                      <Mutation mutation={UPDATE_INVOICE_GROUP_DEFAULT} key={v4()}>\n                                        {(updateDefault, { data }) => (\n                                          <Formik\n                                            initialValues={{ \n                                              financeInvoiceGroup:node.financeInvoiceGroup.id\n                                            }}\n                                            validationSchema={INVOICE_GROUP_DEFAULT_SCHEMA}\n                                            onSubmit={(values, { setSubmitting }) => {\n                                                console.log('submit values:')\n                                                console.log(values)\n\n                                                updateDefault({ variables: {\n                                                  input: {\n                                                    id: node.id,\n                                                    financeInvoiceGroup: values.financeInvoiceGroup\n                                                  }\n                                                }, refetchQueries: [\n                                                    // {query: GET_INVOICE_GROUPS_QUERY, variables: {\"archived\": false }}\n                                                ]})\n                                                .then(({ data }) => {\n                                                    console.log('got data', data)\n                                                    toast.success((t('finance.invoice_groups.toast_edit_success')), {\n                                                        position: toast.POSITION.BOTTOM_RIGHT\n                                                      })\n                                                  }).catch((error) => {\n                                                    toast.error((t('general.toast_server_error')) +  error, {\n                                                        position: toast.POSITION.BOTTOM_RIGHT\n                                                      })\n                                                    console.log('there was an error sending the query', error)\n                                                    setSubmitting(false)\n                                                  })\n                                            }}\n                                            >\n                                            {({ isSubmitting, errors, values, setFieldTouched, setFieldValue, submitForm }) => (\n                                              <FinanceInvoiceGroupDefaultForm\n                                                inputData={inputData}\n                                                isSubmitting={isSubmitting}\n                                                errors={errors}\n                                                values={values}\n                                                setFieldTouched={setFieldTouched}\n                                                setFieldValue={setFieldValue}\n                                                submitForm={submitForm}\n                                              />\n                                            )}\n                                        </Formik>\n                                        )}\n                                      </Mutation>\n                                    )}}\n                                  </Query>\n                                </Table.Col>\n                            </Table.Row>\n                          ))}\n                      </Table.Body>\n                    </Table>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <h5>{t(\"general.menu\")}</h5>\n            <FinanceMenu activeLink='invoices'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(FinanceInvoiceGroupsDefaults))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_INVOICE_PAYMENT_QUERY = gql`\n  query FinanceInvoicePayment($id: ID!) {\n    financeInvoicePayment(id:$id) {\n      id\n      date\n      amount\n      financePaymentMethod {\n        id\n        name\n      }\n      note\n      onlinePaymentId\n    }\n  }\n`\n\nexport const UPDATE_FINANCE_INVOICE_PAYMENT = gql`\n  mutation UpdateFinanceInvoicePayment($input:UpdateFinanceInvoicePaymentInput!) {\n    updateFinanceInvoicePayment(input:$input) {\n      financeInvoicePayment {\n        id\n      } \n    }\n  }\n`\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const FINANCE_INVOICE_PAYMENT_SCHEMA = Yup.object().shape({\n  // account: Yup.string()\n  //   .required(t('yup.field_required')),\n  // role: Yup.string(),\n  // account2: Yup.string(),\n  // role2: Yup.string(),\n  // dateStart: Yup.date()\n  //   .required(t('yup.field_required')),\n  // // dateEnd: Yup.date()\n  })\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\n// import { GET_INVOICE_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { GET_INVOICE_QUERY } from \"../queries\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\n// import ScheduleClassPriceBack from \"./ScheduleClassPriceBack\"\nimport FinanceInvoiceEditBalance from \"../edit/FinanceInvoiceEditBalance\"\n\n\nfunction FinanceInvoicePaymentBase({ t, history, match, children, form_type=\"create\" }) {\n  const invoiceId = match.params.invoice_id\n  const return_url = \"/finance/invoices/edit/\" + invoiceId\n  const { loading: queryLoading, error: queryError, data, } = useQuery(GET_INVOICE_QUERY, {\n    variables: {\n      id: invoiceId\n    }\n  })\n\n  if (queryLoading) return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <p>{t('general.loading_with_dots')}</p>\n      </div>\n    </SiteWrapper>\n  )\n  // Error\n  if (queryError) {\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          { console.log(queryError) }\n          <p>{t('general.error_sad_smiley')}</p>\n        </div>\n      </SiteWrapper>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const invoice_number = inputData.financeInvoice.invoiceNumber\n\n  let title\n  if ( form_type == \"create\" ) {\n    title = t('finance.invoice.payments.add')\n  } else {\n    title = t('finance.invoice.payments.edit')\n  }\n\n  title = title + \" #\" + invoice_number\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={ title }>\n            <div className=\"page-options d-flex\">\n              {/* Back */}\n              <Link to={return_url} \n                    className='btn btn-secondary mr-2'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')} \n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={8}>\n              {/* Form can go here */}\n              {children} \n            </Grid.Col>\n            <Grid.Col md={4}>\n            <Card statusColor=\"blue\">\n              <Card.Header>\n                <Card.Title>{t('general.info')}</Card.Title>\n              </Card.Header>\n              <Card.Body padding={0}>\n                <h4> #{ invoice_number } </h4>\n                { inputData.financeInvoice.account.fullName } <br />\n                { inputData.financeInvoice.summary }\n              </Card.Body>\n            </Card>\n            <FinanceInvoiceEditBalance financeInvoice={inputData.financeInvoice} />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoicePaymentBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\nconst FinanceInvoicePaymentForm = ({ t, history, match, isSubmitting, errors, values, inputData, return_url, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n    <Card statusColor=\"blue\">\n      <Card.Header>\n        <Card.Title>{t('general.details')}</Card.Title>\n      </Card.Header>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date')}>\n              <CSDatePicker \n                selected={values.date}\n                onChange={(date) => setFieldValue(\"date\", date)}\n                onBlur={() => setFieldTouched(\"date\", true)}\n              />\n              <ErrorMessage name=\"date\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.amount')}>\n              <Field type=\"text\" \n                      name=\"amount\" \n                      className={(errors.amount) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"amount\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.payment_method')}>\n              <Field component=\"select\" \n                      name=\"financePaymentMethod\" \n                      className={(errors.financePaymentMethod) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in finance payment form:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('')}</option>\n                {inputData.financePaymentMethods.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financePaymentMethod\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.note')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"note\"\n                initialValue={values.note}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldValue(\"note\", e.target.getContent())\n                  setFieldTouched(\"note\", true)\n                }}\n              />\n            <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(return_url)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </Card>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(FinanceInvoicePaymentForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n\n\nimport { get_list_query_variables } from \"../tools\"\n\nimport { GET_INVOICE_QUERY, GET_INVOICES_QUERY } from \"../queries\"\nimport { GET_INPUT_VALUES_QUERY } from './queries'\nimport { FINANCE_INVOICE_PAYMENT_SCHEMA } from './yupSchema'\n// import ScheduleClassPriceForm from './ScheduleClassPriceForm'\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport SiteWrapper from \"../../../SiteWrapper\"\n\nimport FinanceInvoicePaymentBase from \"./FinanceInvoicePaymentBase\"\nimport FinanceInvoicePaymentForm from \"./FinanceInvoicePaymentForm\"\n\n\nconst ADD_FINANCE_INVOICE_PAYMENT = gql`\n  mutation CreateFinanceInvoicePayment($input:CreateFinanceInvoicePaymentInput!) {\n    createFinanceInvoicePayment(input:$input) {\n      financeInvoicePayment {\n        id\n      } \n    }\n  }\n`\n\n\nfunction FinanceInvoicePaymentAdd({ t, history, match }) {\n  const invoiceId = match.params.invoice_id\n  const return_url = \"/finance/invoices/edit/\" + invoiceId\n  const { loading: queryLoading, error: queryError, data, } = useQuery(GET_INVOICE_QUERY, {\n    variables: {\n      id: invoiceId\n    }\n  })\n  const [addInvoicePayment, { mutationData, mutationLoading, mutationError, onCompleted }] = useMutation(ADD_FINANCE_INVOICE_PAYMENT, {\n    onCompleted: () => history.push(return_url),\n  })\n\n  if (queryLoading) return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <p>{t('general.loading_with_dots')}</p>\n      </div>\n    </SiteWrapper>\n  )\n  // Error\n  if (queryError) {\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          { console.log(queryError) }\n          <p>{t('general.error_sad_smiley')}</p>\n        </div>\n      </SiteWrapper>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n\n\n  return (\n    <FinanceInvoicePaymentBase form_type={\"create\"}>\n      <Formik\n        initialValues={{ \n          date: new Date() ,\n          amount: inputData.financeInvoice.balance,\n          financePaymentMethod: \"\",\n          note: \"\"\n        }}\n        // validationSchema={FINANCE_INVOICE_PAYMENT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n            addInvoicePayment({ variables: {\n              input: {\n                financeInvoice: invoiceId,\n                date: dateToLocalISO(values.date),\n                amount: values.amount,\n                financePaymentMethod: values.financePaymentMethod,\n                note: values.note\n              }\n            }, refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables() },\n                {query: GET_INVOICE_QUERY, variables: { id: invoiceId }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('finance.invoice.payments.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <FinanceInvoicePaymentForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            return_url={return_url}\n          />\n        )}\n      </Formik>\n    </FinanceInvoicePaymentBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoicePaymentAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport { get_list_query_variables } from \"../tools\"\n\nimport { GET_INVOICE_QUERY, GET_INVOICES_QUERY } from \"../queries\"\nimport { GET_INVOICE_PAYMENT_QUERY, UPDATE_FINANCE_INVOICE_PAYMENT } from './queries'\nimport { FINANCE_INVOICE_PAYMENT_SCHEMA } from './yupSchema'\n// import ScheduleClassPriceForm from './ScheduleClassPriceForm'\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport SiteWrapper from \"../../../SiteWrapper\"\n\nimport FinanceInvoicePaymentBase from \"./FinanceInvoicePaymentBase\"\nimport FinanceInvoicePaymentForm from \"./FinanceInvoicePaymentForm\"\n\n\n\nfunction FinanceInvoicePaymentEdit({ t, history, match }) {\n  const invoiceId = match.params.invoice_id\n  const id = match.params.id\n  console.log(invoiceId)\n  console.log(id)\n\n  const return_url = \"/finance/invoices/edit/\" + invoiceId\n  const { loading: invoiceQueryLoading, error: invoiceQueryError, data: invoiceData, } = useQuery(GET_INVOICE_QUERY, {\n    variables: {\n      id: invoiceId\n    }\n  })\n  const { loading: paymentQueryLoading, error: paymentQueryError, data: paymentData, } = useQuery(GET_INVOICE_PAYMENT_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n  const [updateInvoicePayment, { mutationData, mutationLoading, mutationError, onCompleted }] = useMutation(UPDATE_FINANCE_INVOICE_PAYMENT, {\n    onCompleted: () => history.push(return_url),\n  })\n\n  if (invoiceQueryLoading || paymentQueryLoading) return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <p>{t('general.loading_with_dots')}</p>\n      </div>\n    </SiteWrapper>\n  )\n  // Error\n  if (invoiceQueryError) {\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          { console.log(invoiceQueryError) }\n          <p>{t('general.error_sad_smiley')}</p>\n        </div>\n      </SiteWrapper>\n    )\n  }\n  // Error\n  if (paymentQueryError) {\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          { console.log(paymentQueryError) }\n          <p>{t('general.error_sad_smiley')}</p>\n        </div>\n      </SiteWrapper>\n    )\n  }\n\n  console.log('query data')\n  console.log(invoiceData)\n  console.log(paymentData)\n  const inputData = invoiceData\n  const initialValues = paymentData.financeInvoicePayment\n\n  let initialPaymentMethod\n  if (initialValues.financePaymentMethod) {\n    initialPaymentMethod = initialValues.financePaymentMethod.id\n  }\n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let initialDate = null\n  if (initialValues.date) {\n    initialDate = new Date(initialValues.date)\n  }\n\n  return (\n    <FinanceInvoicePaymentBase form_type={\"update\"}>\n      <Formik\n        initialValues={{ \n          date: initialDate,\n          amount: initialValues.amount,\n          financePaymentMethod: initialPaymentMethod,\n          note: initialValues.note\n        }}\n        // validationSchema={FINANCE_INVOICE_PAYMENT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n            updateInvoicePayment({ variables: {\n              input: {\n                id: id,\n                date: dateToLocalISO(values.date),\n                amount: values.amount,\n                financePaymentMethod: values.financePaymentMethod,\n                note: values.note\n              }\n            }, refetchQueries: [\n                {query: GET_INVOICES_QUERY, variables: get_list_query_variables() },\n                {query: GET_INVOICE_QUERY, variables: { id: invoiceId }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('finance.invoice.payments.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n        }\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <FinanceInvoicePaymentForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            return_url={return_url}\n          />\n        )}\n      </Formik>\n    </FinanceInvoicePaymentBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceInvoicePaymentEdit))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let queryVars = {}\n\n  let status = localStorage.getItem(CSLS.FINANCE_ORDERS_FILTER_STATUS)\n  if (status) {\n    queryVars.status = status\n  } else {\n    queryVars.status = undefined\n  }\n  \n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from './tools'\n\n\nfunction getDefaultValue(value) {\n  let defaultValue = localStorage.getItem(value)\n  console.log(defaultValue)\n\n  if (defaultValue) {\n    return defaultValue\n  } else {\n    console.log('return empty default')\n    return \"\"\n  }\n}\n\n\nfunction updateLocalStorageAndRefetch(key, value, refetch) {\n  localStorage.setItem(key, value)\n  refetch(get_list_query_variables())\n\n}\n\nconst selectClass = \"form-control mb-2\"\n\n\nconst FinanceOrdersFilter = ({ t, history, data, refetch }) => (\n  <div>\n    {/* Status */}\n    <select \n      className={selectClass}\n      value={getDefaultValue(CSLS.FINANCE_ORDERS_FILTER_STATUS)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.FINANCE_ORDERS_FILTER_STATUS,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t('finance.orders.statuses.all')}</option>\n      <option value=\"RECEIVED\" key={v4()}>{t('finance.orders.statuses.RECEIVED')}</option>\n      <option value=\"AWAITING_PAYMENT\" key={v4()}>{t('finance.orders.statuses.AWAITING_PAYMENT')}</option>\n      <option value=\"PAID\" key={v4()}>{t('finance.orders.statuses.PAID')}</option>\n      <option value=\"DELIVERED\" key={v4()}>{t('finance.orders.statuses.DELIVERED')}</option>\n      <option value=\"CANCELLED\" key={v4()}>{t('finance.orders.statuses.CANCELLED')}</option>\n    </select>\n  </div>\n);\n\nexport default withTranslation()(withRouter(FinanceOrdersFilter))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Container,\n  Grid,\n  Page\n} from \"tabler-react\";\n\nimport SiteWrapper from \"../../SiteWrapper\"\n\nimport FinanceOrdersFilter from \"./FinanceOrdersFilter\"\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nconst FinanceOrdersBase = ({ t, history, children, refetch }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"finance.title\")}>\n          <div className=\"page-options d-flex\">\n          </div>\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            {children}\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n            <FinanceOrdersFilter refetch={refetch}/>\n            <h5>{t(\"general.menu\")}</h5>\n            <FinanceMenu activeLink='orders'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n)\n\nexport default withTranslation()(withRouter(FinanceOrdersBase))","// @flow\n\nimport React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Badge\n} from \"tabler-react\";\n\n\nclass FinanceOrderStatus extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"finance order status props:\")\n    console.log(props)\n  }\n\n  // ('RECEIVED', _(\"Received\")),\n  // ('AWAITING_PAYMENT', _(\"Awaiting payment\")),\n  // ('PAID', _(\"Paid\")),\n  // ('DELIVERED', _(\"Delivered\")),\n  // ('CANCELLED', _(\"Cancelled\")),\n\n  render() {\n    const t = this.props.t\n    const history = this.props.history\n    const status = this.props.status\n\n    switch (status) {\n      case \"RECEIVED\":\n        return <Badge color=\"secondary\">{t('finance.orders.statuses.RECEIVED')}</Badge>\n        break\n      case \"AWAITING_PAYMENT\":\n        return <Badge color=\"primary\">{t('finance.orders.statuses.AWAITING_PAYMENT')}</Badge>\n        break\n      case \"PAID\":\n        return <Badge color=\"success\">{t('finance.orders.statuses.PAID')}</Badge>\n        break\n      case \"DELIVERED\":\n        return <Badge color=\"success\">{t('finance.orders.statuses.DELIVERED')}</Badge>\n        break\n      case \"CANCELLED\":\n        return <Badge color=\"warning\">{t('finance.orders.statuses.CANCELLED')}</Badge>\n        break\n      default:\n        return t('finance.orders.statuses.NOT_FOUND') \n    }\n  }\n}\n\n\nexport default withTranslation()(withRouter(FinanceOrderStatus))","import { gql } from \"@apollo/client\"\n\nexport const GET_ORDERS_QUERY = gql`\n  query FinanceOrders($after: String, $before: String, $status: String) {\n    financeOrders(first: 15, before: $before, after: $after, status: $status) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          orderNumber\n          account {\n            id\n            fullName\n          }\n          message\n          status\n          total\n          totalDisplay\n          createdAt\n        }\n      }\n    }\n  }\n`\n\nexport const GET_ORDER_QUERY = gql`\n  query FinanceOrder($id: ID!) {\n    financeOrder(id: $id) {\n      id\n      orderNumber\n      account {\n        id\n        fullName\n      }\n      message\n      status\n      total\n      totalDisplay\n      createdAt\n      items {\n        edges {\n          node {\n            id\n            productName\n          }\n        }\n      }\n      \n    }\n  }\n`\n\n\nexport const UPDATE_FINANCE_ORDER = gql`\n  mutation UpdateFinanceOrder($input: UpdateFinanceOrderInput!) {\n    updateFinanceOrder(input: $input) {\n      financeOrder {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_FINANCE_ORDER = gql`\n  mutation DeleteFinanceOrder($input: DeleteFinanceOrderInput!) {\n    deleteFinanceOrder(input: $input) {\n      ok\n    }\n  }\n`\n","import React, { useContext } from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n// import { get_list_query_variables } from \"../tools\"\nimport { DELETE_FINANCE_ORDER, GET_ORDERS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\nimport moment from 'moment'\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport { get_list_query_variables } from \"./tools\"\n\n\nfunction FinanceOrderDelete({t, match, node}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const [deleteOrder, { data }] = useMutation(DELETE_FINANCE_ORDER)\n\n    return (\n      <button className=\"icon btn btn-link btn-sm\" \n        title={t('general.delete')} \n        href=\"\"\n        onClick={() => {\n          confirm_delete({\n            t: t,\n            msgConfirm: t(\"finance.orders.delete_confirm_msg\"),\n            msgDescription: <p>{t(\"general.order\")} # { node.orderNumber }</p>,\n            msgSuccess: t('finance.orders.deleted'),\n            deleteFunction: deleteOrder,\n            functionVariables: { \n              variables: {\n                input: {\n                  id: node.id\n                }\n              }, \n              refetchQueries: [\n                {query: GET_ORDERS_QUERY, variables: get_list_query_variables() },\n              ]\n            }\n          })\n      }}>\n        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n      </button>\n    )\n}\n\n\nexport default withTranslation()(withRouter(FinanceOrderDelete))\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table, \n  Text\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport { get_list_query_variables } from \"./tools\"\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceOrdersBase from './FinanceOrdersBase'\nimport FinanceOrderStatus from \"./FinanceOrderStatus\"\nimport FinanceOrderDelete from \"./FinanceOrderDelete\"\n\nimport { GET_ORDERS_QUERY, DELETE_FINANCE_ORDER } from \"./queries\"\n\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport moment from 'moment'\n\n\n\nfunction FinanceOrders({t, match, history}) {\n  const title = t(\"shop.home.title\")\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_ORDERS_QUERY, {\n    variables: {get_list_query_variables},\n    fetchPolicy: \"network-only\"\n  })\n\n  if (loading) return (\n    <FinanceOrdersBase title={title}>\n      {t(\"general.loading_with_dots\")}\n    </FinanceOrdersBase>\n  )\n\n  if (error) return (\n    <FinanceOrdersBase title={title}>\n      {t(\"finance.orders.error_loading\")}\n    </FinanceOrdersBase>\n  )\n\n  console.log(data)\n  const orders = data.financeOrders\n  console.log(orders)\n\n  // Empty list\n  if (!orders.edges.length) { return (\n    <FinanceOrdersBase refetch={refetch}>\n      <ContentCard cardTitle={t('finance.orders.title')}>\n        <p>\n          {t('finance.orders.empty_list')}\n        </p>\n      </ContentCard>\n    </FinanceOrdersBase>\n  )}\n\n  return (\n    <FinanceOrdersBase title={title} refetch={refetch}>\n      <ContentCard \n        cardTitle={t('finance.orders.title')} \n        pageInfo={orders.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: orders.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.financeOrders.edges\n              const pageInfo = fetchMoreResult.financeOrders.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new invoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    financeOrders: {\n                      __typename: previousResult.financeOrders.__typename,\n                      edges: [ ...previousResult.financeOrders.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.order_number')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.relation')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.date')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {orders.edges.map(({ node }) => (        \n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    <FinanceOrderStatus status={node.status} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    # {node.orderNumber}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.account && node.account.fullName}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {moment(node.createdAt).format('LL')}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.totalDisplay}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <Link to={\"/finance/orders/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <FinanceOrderDelete node={node}/>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceOrdersBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceOrders))","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\"\n\n\nexport function get_list_query_variables(batchType) {\n  let queryVars = {\n    batchType: batchType.toUpperCase()\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n\nexport function get_add_options_collection(t, batchType) {\n  return (\n    <List unstyled>\n      <List.Item>\n        <Link to={`/finance/paymentbatches/${batchType}/add/invoices`}>\n          <b>{t(\"finance.payment_batch_collections.invoices_batch\")} <Icon name=\"chevron-right\" /></b>\n        </Link><br />\n        <p>{t(\"finance.payment_batch_collections.invoices_batch_description\")}</p>\n      </List.Item>\n      <List.Item>\n        <Link to={`/finance/paymentbatches/${batchType}/add/category`}>\n          <b>{t(\"finance.payment_batch_collections.category_batch\")} <Icon name=\"chevron-right\" /></b>\n        </Link><br />\n        <p>{t(\"finance.payment_batch_collections.category_batch_description\")}</p>\n      </List.Item>\n    </List>\n  )\n}\n\n\nexport function get_add_options_payment(t, batchType) {\n  return (\n    <List unstyled>\n      <List.Item>\n        <Link to={`/finance/paymentbatches/${batchType}/add/category`}>\n          <b>{t(\"finance.payment_batch_payments.category_batch\")} <Icon name=\"chevron-right\" /></b>\n        </Link><br />\n        <p>{t(\"finance.payment_batch_payments.category_batch_description\")}</p>\n      </List.Item>\n    </List>\n  )\n}","import React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Badge\n} from \"tabler-react\"\n\n\nfunction BadgeFinancePaymentBatchStatus({ t, status }) {\n  switch (status) {\n    case \"SENT_TO_BANK\":\n      return <Badge color=\"success\">{t('finance.payment_batches.status.SENT_TO_BANK')}</Badge> \n      break\n    case \"APPROVED\":\n      return <Badge color=\"success\">{t('finance.payment_batches.status.APPROVED')}</Badge> \n      break\n    case \"AWAITING_APPROVAL\":\n      return <Badge color=\"primary\">{t('finance.payment_batches.status.AWAITING_APPROVAL')}</Badge> \n      break\n    case \"REJECTED\":\n      return <Badge color=\"danger\">{t('finance.payment_batches.status.REJECTED')}</Badge> \n      break\n    default:\n      return t(\"finance.payment_batches.status.invalid_type\")\n  }\n}\n\nexport default withTranslation()(BadgeFinancePaymentBatchStatus)\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinancePaymentBatchesBase({t, history, match, children, showAdd=false, showBack=false, returnUrl=\"\"}) {\n  const batchType = match.params.batch_type\n\n  let activeLink\n  if (batchType == 'collection') {\n    activeLink = 'payment_batch_collections'\n  } else {\n    activeLink = 'payment_batch_payments'\n  }\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showAdd) ?\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financepaymentbatch\">\n                  <Link to={`/finance/paymentbatches/${batchType}/add_what`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.payment_batches.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              {(showBack) ?\n                <HasPermissionWrapper permission=\"view\"\n                                      resource=\"financepaymentbatch\">\n                  <Link to={returnUrl}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              <FinanceMenu activeLink={activeLink} />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_PAYMENT_BATCHES_QUERY = gql`\n  query FinancePaymentBatches($after: String, $before: String, $batchType: String!) {\n    financePaymentBatches(first: 15, before: $before, after: $after, batchType: $batchType) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          status\n          financePaymentBatchCategory {\n            id\n            name\n          }\n          description\n          batchType\n          year\n          month\n          includeZeroAmounts\n          note\n        }\n      }\n    }\n  }\n`\n\nexport const GET_PAYMENT_BATCH_QUERY = gql`\n  query FinancePaymentBatch($id: ID!) {\n    financePaymentBatch(id:$id) {\n      id\n      name\n      status\n      financePaymentBatchCategory {\n        id\n        name\n      }\n      description\n      batchType\n      year\n      month\n      includeZeroAmounts\n      note\n      totalDisplay\n      countItems\n      items {\n        pageInfo {\n          startCursor\n          endCursor\n          hasNextPage\n          hasPreviousPage\n        }\n        edges {\n          node {\n            id\n            account {\n              id\n              fullName\n            }\n            financeInvoice {\n              id\n              invoiceNumber\n            }\n            accountHolder\n            accountNumber\n            accountBic\n            mandateReference\n            mandateSignatureDate\n            amount\n            amountDisplay\n            currency\n            description\n          }\n        }\n      }\n      exports {\n        pageInfo {\n          startCursor\n          endCursor\n          hasNextPage\n          hasPreviousPage\n        }\n        edges {\n          node {\n            id\n            account {\n              id\n              fullName\n            }\n            createdAt\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES = gql`\n  query InputValues($after: String, $before: String, $batchCategoryType: String!) {\n    financePaymentBatchCategories(first: 1000, before:$before, after:$after, archived:false, batchCategoryType: $batchCategoryType) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const ADD_PAYMENT_BATCH = gql`\n  mutation CreateFinancePaymentBatch($input:CreateFinancePaymentBatchInput!) {\n    createFinancePaymentBatch(input: $input) {\n      financePaymentBatch {\n        id\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_PAYMENT_BATCH = gql`\n  mutation UpdateFinancePaymentBatch($input:UpdateFinancePaymentBatchInput!) {\n    updateFinancePaymentBatch(input: $input) {\n      financePaymentBatch {\n        id\n      }\n    }\n  }\n`\n\n\nexport const DELETE_PAYMENT_BATCH = gql`\n  mutation DeleteFinancePaymentBatch($input: DeleteFinancePaymentBatchInput!) {\n    deleteFinancePaymentBatch(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport { get_list_query_variables } from \"./tools\"\n\n// import FinancePaymentBatchCategory from \"../../ui/FinancePaymentBatchCategory\"\nimport BadgeFinancePaymentBatchStatus from \"../../ui/BadgeFinancePaymentBatchStatus\"\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceMenu from \"../FinanceMenu\"\nimport FinancePaymentBatchesBase from \"./FinancePaymentBatchesBase\"\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport confirm_delete from \"../../../tools/confirm_delete\"\n\nimport { GET_PAYMENT_BATCHES_QUERY, DELETE_PAYMENT_BATCH } from \"./queries\"\nimport moment from 'moment'\n\nfunction FinancePaymentBatches({t, history, match }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const batchType = match.params.batch_type\n\n  const { loading, error, data, fetchMore, refetch } = useQuery(GET_PAYMENT_BATCHES_QUERY, {\n    variables: get_list_query_variables(batchType),\n  })\n  const [deletePaymentBatch] = useMutation(DELETE_PAYMENT_BATCH)\n\n  let cardTitle\n  let msgEmptyList\n  if (batchType == \"collection\") {\n    cardTitle = t('finance.payment_batch_collections.title')\n    msgEmptyList = t('finance.payment_batch_collections.empty_list')\n  } else {\n    cardTitle = t('finance.payment_batch_payments.title')\n    msgEmptyList = t('finance.payment_batch_payments.empty_list')\n  }\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinancePaymentBatchesBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.payment_batches.error_loading')}</p>\n      </ContentCard>\n      </FinancePaymentBatchesBase>\n  )\n\n  let financePaymentBatches = data.financePaymentBatches\n  // Empty list\n  if (!financePaymentBatches.edges.length) { return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <ContentCard cardTitle={cardTitle} >\n        <p>{msgEmptyList}</p>\n      </ContentCard>\n    </FinancePaymentBatchesBase>\n  )}\n\n  return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <ContentCard cardTitle={cardTitle}\n        pageInfo={financePaymentBatches.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: financePaymentBatches.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.financePaymentBatches.edges\n            const pageInfo = fetchMoreResult.financePaymentBatches.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new payment_methods at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  financePaymentBatches: {\n                    __typename: previousResult.financePaymentBatches.__typename,\n                    edges: [ ...previousResult.financePaymentBatches.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n            }\n        })\n      }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.payment_batches.execution_date')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.payment_batches.batch_category')}</Table.ColHeader>             \n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {financePaymentBatches.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  <BadgeFinancePaymentBatchStatus status={node.status} />\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.name}\n                </Table.Col>\n                <Table.Col>\n                  {moment(node.executionDate).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  {(node.financePaymentBatchCategory) ? node.financePaymentBatchCategory.name : t(\"general.invoices\")}\n                  {(node.year) ? <div><small className=\"text-muted\">{node.year} - {node.month}</small></div> : \"\"}\n                </Table.Col>\n                <Table.Col>\n                  <Link to={`/finance/paymentbatches/${batchType}/view/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.view')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <button className=\"icon btn btn-link btn-sm\" \n                    title={t('general.delete')} \n                    href=\"\"\n                    onClick={() => {\n                      confirm_delete({\n                        t: t,\n                        msgConfirm: t(\"finance.payment_batches.delete_confirm_msg\"),\n                        msgDescription: <p>{node.name}</p>,\n                        msgSuccess: t('finance.payment_batches.deleted'),\n                        deleteFunction: deletePaymentBatch,\n                        functionVariables: { variables: {\n                          input: {\n                            id: node.id\n                          }\n                        }, refetchQueries: [\n                          {query: GET_PAYMENT_BATCHES_QUERY, variables: get_list_query_variables(batchType) } \n                        ]}\n                      })\n                  }}>\n                    <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                  </button>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinancePaymentBatchesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatches))","// @flow\n\nimport React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Badge\n} from \"tabler-react\";\n\n\nclass FinancePaymentBatchCategory extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"finance payment batch category props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const categoryType = this.props.categoryType\n\n    switch (categoryType) {\n      case \"COLLECTION\":\n        return <Badge color=\"success\">{t('finance.payment_batch_categories.payment_batch_category_type.COLLECTION')}</Badge>\n        break\n      case \"PAYMENT\":\n        return <Badge color=\"warning\">{t('finance.payment_batch_categories.payment_batch_category_type.PAYMENT')}</Badge>\n        break\n      default:\n        return t('finance.payment_batch_categories.payment_batch_category_type.NOT_FOUND') \n    }\n  }\n}\n\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategory))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport FinancePaymentBatchCategory from \"../../ui/FinancePaymentBatchCategory\"\nimport ContentCard from \"../../general/ContentCard\"\nimport FinancePaymentBatchesBase from \"./FinancePaymentBatchesBase\"\n\nimport { get_add_options_collection, get_add_options_payment } from './tools'\n\n\nfunction FinancePaymentBatchAddWhat({t, history, match }) {\n  const batchType = match.params.batch_type\n  const returnUrl = `/finance/paymentbatches/${batchType}`\n\n  let cardTitle\n  let options\n  if (batchType == \"collection\") {\n    cardTitle = t('finance.payment_batch_collections.title_add_what')\n    options = get_add_options_collection(t, batchType)\n  } else {\n    cardTitle = t('finance.payment_batch_payments.title_add_what')\n    options = get_add_options_payment(t, batchType)\n  }\n\n  return (\n    <FinancePaymentBatchesBase showBack={true} returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          {options}\n        </Card.Body>\n      </Card>\n    </FinancePaymentBatchesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchAddWhat))","// @flow\n\nimport React, {useState} from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { useMutation } from \"@apollo/client\"\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { toast } from 'react-toastify'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { UPDATE_PAYMENT_BATCH, GET_PAYMENT_BATCHES_QUERY } from \"./queries\"\nimport { get_list_query_variables } from \"./tools\"\n\n\nfunction FinancePaymentBatchViewBase({t, history, match, children, status}) {\n  const batchId = match.params.id\n  const batchType = match.params.batch_type\n  const returnUrl = `/finance/paymentbatches/${batchType}`\n  const exportUrl = `/d/export/finance_payment_batch/csv/${batchId}`\n  const [disabled, setDisabled] = useState(false)\n\n  const [updateFinancePaymentBatch] = useMutation(UPDATE_PAYMENT_BATCH)\n\n  let sentToBankColor = \"secondary\"\n  let approvedColor = \"secondary\"\n  let awaitingApprovalColor = \"secondary\"\n  let rejectedColor = \"secondary\"\n\n  switch (status) {\n    case \"SENT_TO_BANK\":\n      sentToBankColor = \"success\"\n      break\n    case \"APPROVED\":\n      approvedColor = \"success\"\n      break\n    case \"AWAITING_APPROVAL\":\n      awaitingApprovalColor = \"primary\"\n      break\n    case \"REJECTED\":\n      rejectedColor = \"danger\"\n      break\n    default:\n      break\n  }\n\n  function onClickStatusButton(newStatus) {\n    setDisabled(true)\n\n    updateFinancePaymentBatch({ \n      variables: { input: {id: batchId, status: newStatus} }, \n      refetchQueries: [\n        {query: GET_PAYMENT_BATCHES_QUERY, variables: get_list_query_variables(batchType)}\n    ]})\n    .then(({ data }) => {\n        console.log('got data', data);\n        toast.success((t('finance.payment_batches.toast_edit_status_success')), {\n            position: toast.POSITION.BOTTOM_RIGHT\n          })\n        if (status != \"SENT_TO_BANK\") {\n          console.log(status)\n          setDisabled(false)\n        }\n      }).catch((error) => {\n        toast.error((t('general.toast_server_error')) +  error, {\n            position: toast.POSITION.BOTTOM_RIGHT\n          })\n        console.log('there was an error sending the query', error)\n        if (status != \"SENT_TO_BANK\") {\n          console.log(status)\n          setDisabled(false)\n        }\n      })\n  }\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} subTitle={t('finance.payment_batch.title_view')}>\n            <div className=\"page-options d-flex\">\n                <Link to={returnUrl} \n                      className='btn btn-secondary mr-2'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')}\n                </Link>\n                {/* Export as PDF */}\n                <a href={exportUrl} \n                    className='btn btn-secondary mr-2'>\n                    <Icon prefix=\"fe\" name=\"download\" /> {t('general.export')} \n                </a>\n                <Link to={`/finance/paymentbatches/${batchType}/edit/${batchId}`} \n                      className='btn btn-secondary mr-2'>\n                  <Icon name=\"edit-2\" /> {t('general.edit')}\n                </Link>\n                {(status) ? \n                  (status == \"SENT_TO_BANK\") ?\n                    <Button.List>\n                      <Button \n                        icon=\"mail\"\n                        disabled={true}\n                        color={sentToBankColor}\n                        onClick={() => onClickStatusButton(\"SENT_TO_BANK\")}\n                      >\n                        {t('finance.payment_batch.status.SENT_TO_BANK')}\n                      </Button>\n                    </Button.List>\n                  :\n                    <Button.List>\n                      <Button \n                        icon=\"mail\"\n                        disabled={disabled}\n                        color={sentToBankColor}\n                        onClick={() => onClickStatusButton(\"SENT_TO_BANK\")}\n                      >\n                        {t('finance.payment_batch.status.SENT_TO_BANK')}\n                      </Button>\n                      <Button \n                        icon=\"check\"\n                        disabled={disabled}\n                        color={approvedColor}\n                        onClick={() => onClickStatusButton(\"APPROVED\")}\n                      >\n                        {t('finance.payment_batch.status.APPROVED')}\n                      </Button>\n                      <Button \n                        icon=\"clock\"\n                        disabled={disabled}\n                        color={awaitingApprovalColor}\n                        onClick={() => onClickStatusButton(\"AWAITING_APPROVAL\")}\n                      >\n                        {t('finance.payment_batch.status.AWAITING_APPROVAL')}\n                      </Button>\n                      <Button \n                        icon=\"x\"\n                        disabled={disabled}\n                        color={rejectedColor}\n                        onClick={() => onClickStatusButton(\"REJECTED\")}\n                      >\n                        {t('finance.payment_batch.status.REJECTED')}\n                      </Button>\n                    </Button.List>\n                  : \"\"\n                }\n            </div>\n          </Page.Header>\n          {children}\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchViewBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\nimport CSDatePicker from \"../../ui/CSDatePicker\"\n\n\nconst FinancePaymentCollectionBatchForm = (\n  { t, history, isSubmitting, setFieldTouched, setFieldValue, errors, values, inputData, returnUrl, create=false, category=false }\n  ) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.name')}>\n              <Field type=\"text\" \n                      name=\"name\" \n                      className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          {(create) ? \n            <Grid.Col>\n              <Form.Group label={t('finance.payment_batches.execution_date')}>\n                <CSDatePicker \n                  selected={values.executionDate}\n                  onChange={(executionDate) => {\n                    setFieldValue(\"executionDate\", executionDate)\n                    setFieldTouched(\"executionDate\", true)\n                  }}\n                  onBlur={() => setFieldTouched(\"executionDate\", true)}\n                  placeholderText={t('')}\n                />\n                <ErrorMessage name=\"executionDate\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n            : \"\" \n          }\n        </Grid.Row>\n        {(create && category) ?\n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group label={t('general.category')}>\n                <Field component=\"select\" \n                        name=\"financePaymentBatchCategory\" \n                        className={(errors.financePaymentBatchCategory) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\">\n                  <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                  {inputData.financePaymentBatchCategories.edges.map(({ node }) =>\n                    <option value={node.id} key={v4()}>{node.name}</option>\n                  )}\n                </Field>\n                <ErrorMessage name=\"financePaymentBatchCategory\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n            <Grid.Col>\n              <Form.Group label={t('general.year')} >\n                <Field type=\"text\" \n                      name=\"year\" \n                      className={(errors.year) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n                <ErrorMessage name=\"year\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n            <Grid.Col>\n              <Form.Group label={t('general.month')} >\n                <Field type=\"text\" \n                      name=\"month\" \n                      className={(errors.month) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n                <ErrorMessage name=\"month\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          </Grid.Row> \n          : \"\"\n        }\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.note')}>\n              <Field type=\"textarea\"\n                     component=\"textarea\" \n                     name=\"note\" \n                     className={(errors.note) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        {(create) ? \n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group>\n                <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"includeZeroAmounts\" \n                  checked={values.includeZeroAmounts} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('finance.payment_batches.include_zero_amounts')}</span>\n                </Form.Label>\n                <ErrorMessage name=\"includeZeroAmounts\" component=\"div\" />   \n              </Form.Group>  \n            </Grid.Col>\n          </Grid.Row>\n          : \"\" \n        }\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(FinancePaymentCollectionBatchForm))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport { GET_PAYMENT_BATCHES_QUERY, GET_PAYMENT_BATCH_QUERY } from './queries'\n// import { PAYMENT_BATCH_CATEGORY_SCHEMA } from './yupSchema'\nimport { get_list_query_variables } from \"./tools\"\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n  List,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\nimport BooleanBadge from \"../../ui/BadgeBoolean\"\nimport FinancePaymentBatchCategory from \"../../ui/FinancePaymentBatchCategory\"\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport FinanceMenu from '../FinanceMenu'\nimport FinancePaymentBatchViewBase from './FinancePaymentBatchViewBase'\nimport FinancePaymentCollectionBatchForm from './FinancePaymentCollectionBatchForm'\nimport BadgeBoolean from '../../ui/BadgeBoolean';\n\nfunction FinancePaymentBatchView({ t, history, match }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n  const batchType = match.params.batch_type\n  const batchId = match.params.id\n  const returnUrl = `/finance/paymentbatches/${batchType}`\n\n  const { loading, error, data } = useQuery(GET_PAYMENT_BATCH_QUERY, {\n    variables: { id: batchId }\n  })\n  // const [updateFinancePaymentBatch] = useMutation(UPDATE_PAYMENT_BATCH)\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchViewBase>\n      <p>{t(\"general.loading_with_dots\")}</p>\n    </FinancePaymentBatchViewBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchViewBase>\n      <p>{t('finance.payment_batch.error_loading')}</p>\n    </FinancePaymentBatchViewBase>\n  )\n\n  const financePaymentBatch = data.financePaymentBatch\n  console.log(financePaymentBatch)\n\n  return (\n    <FinancePaymentBatchViewBase status={financePaymentBatch.status}>\n      <Grid.Row>\n        <Grid.Col md={4}>\n          <Card title={t(\"finance.payment_batch.title_batch_info\")}>\n            <Table cards>\n              <Table.Body>\n                <Table.Row>\n                  <Table.Col>\n                    {t(\"general.name\")}\n                  </Table.Col>\n                  <Table.Col>\n                    {financePaymentBatch.name}\n                  </Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Col>\n                    {t('finance.payment_batch_categories.batch_category_type')}\n                  </Table.Col>\n                  <Table.Col>\n                    <FinancePaymentBatchCategory categoryType={financePaymentBatch.batchType} />\n                  </Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Col>\n                    {t('finance.payment_batches.batch_category')}\n                  </Table.Col>\n                  <Table.Col>\n                    {\n                      (financePaymentBatch.financePaymentBatchCategory) ? \n                        <div>\n                          {financePaymentBatch.financePaymentBatchCategory.name}\n                          <div><small className=\"text-muted\">{financePaymentBatch.year} - {financePaymentBatch.month}</small></div>\n                        </div> : \n                        t(\"general.invoices\")\n                    }\n                  </Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Col>\n                    {t('finance.payment_batches.execution_date')}\n                  </Table.Col>\n                  <Table.Col>\n                    {moment(financePaymentBatch.executionDate).format(dateFormat)}\n                  </Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Col>\n                    {t('finance.payment_batches.include_zero_amounts')}\n                  </Table.Col>\n                  <Table.Col>\n                    <BadgeBoolean value={financePaymentBatch.includeZeroAmounts} />\n                  </Table.Col>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"finance.payment_batch.title_batch_totals\")}>\n            <Table cards>\n              <Table.Row>\n                <Table.Col>\n                  {t('general.total')}\n                </Table.Col>\n                <Table.Col>\n                  {financePaymentBatch.totalDisplay}\n                </Table.Col>\n              </Table.Row>\n              <Table.Row>\n                <Table.Col>\n                  {t('general.items')}\n                </Table.Col>\n                <Table.Col>\n                  {financePaymentBatch.countItems}\n                </Table.Col>\n              </Table.Row>\n            </Table>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"finance.payment_batch.title_batch_exports\")}>\n            <Card.Body>\n              <List unstyled>\n              {financePaymentBatch.exports.edges.map(({ node }) => (\n                <List.Item>\n                  {moment(node.createdAt).format(dateTimeFormat)} <br /> \n                  <small>{node.account.fullName}</small>\n                </List.Item>\n              ))}\n              </List>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n      {(financePaymentBatch.note) ?\n        <Grid.Row>\n          <Grid.Col md={12}>\n              <Card title={t(\"finance.payment_batch.title_batch_note\")}>\n                <Card.Body>\n                  {financePaymentBatch.note}\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n      : \"\" }\n      <Grid.Row>\n        <Grid.Col>\n          <Card title={t(\"finance.payment_batch.title_batch_items\")}>\n            <small>\n              <Table cards >\n                <Table.Header>\n                  <Table.Row>\n                    <Table.ColHeader>\n                      {t(\"general.line\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"general.account\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"relations.account.bank_accounts.holder\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"relations.account.bank_accounts.number\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"general.description\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"settings.finance.currency.title\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"general.amount\")}\n                    </Table.ColHeader>\n                    <Table.ColHeader>\n                      {t(\"finance.invoices.invoice_number\")}\n                    </Table.ColHeader>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {financePaymentBatch.items.edges.map(({ node }, index) => (\n                    <Table.Row>\n                      <Table.Col>{index + 1}</Table.Col>\n                      <Table.Col>\n                        <Link to={`/relations/accounts/${node.account.id}/profile`}>\n                          {node.account.fullName}\n                        </Link>\n                      </Table.Col>\n                      <Table.Col>\n                        {node.accountHolder}\n                      </Table.Col>\n                      <Table.Col>\n                        {node.accountNumber} {(node.accountBic) ? <div>{node.accountBic}</div> : \"\"}\n                      </Table.Col>\n                      <Table.Col>\n                        {node.description}\n                      </Table.Col>\n                      <Table.Col>\n                        {node.currency}\n                      </Table.Col>\n                      <Table.Col>\n                        {node.amountDisplay}\n                      </Table.Col>\n                      <Table.Col>\n                        {(node.financeInvoice) ?\n                          <Link to={`/finance/invoices/edit/${node.financeInvoice.id}`}>\n                            {node.financeInvoice.invoiceNumber}\n                          </Link> : \"\" }\n                      </Table.Col>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </small>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n      {/* <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: '', description: '', executionDate: new Date() }}\n          // validationSchema={PAYMENT_BATCH_CATEGORY_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            let input = {\n                batchType: batchType.toUpperCase(),\n                name: values.name, \n                executionDate: dateToLocalISO(values.executionDate),\n                description: values.description,\n                note: values.note,\n                includeZeroAmounts: values.includeZeroAmounts\n            }\n\n            if (categoryType == \"category\") {\n              input.year = values.year\n              input.month = values.month\n              input.financePaymentBatchCategory = values.financePaymentBatchCategory\n            }\n\n            addFinancePaymentBatch({ \n              variables: { input: input }, \n              refetchQueries: [\n                {query: GET_PAYMENT_BATCHES_QUERY, variables: get_list_query_variables(batchType)}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('finance.payment_batches.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldValue, setFieldTouched }) => (\n              <FinancePaymentCollectionBatchForm\n                inputValues={inputValues}\n                create={true}\n                invoices={invoices}\n                category={category}\n                isSubmitting={isSubmitting}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                values={values}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card> */}\n    </FinancePaymentBatchViewBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchView))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const PAYMENT_BATCH_INVOICES_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    executionDate: Yup.date()\n      .required(t('yup.field_required')),\n    note: Yup.string(),\n    includeZeroAmounts: Yup.boolean()\n  })\n\nexport const PAYMENT_BATCH_CATEGORY_SCHEMA = Yup.object().shape({\n  name: Yup.string()\n    .min(3, t('yup.min_len_3'))\n    .required(t('yup.field_required')),\n  executionDate: Yup.date()\n    .required(t('yup.field_required')),\n  financePaymentBatchCategory: Yup.string()\n  .required(t('yup.field_required')),\n  year: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  month: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  note: Yup.string(),\n  includeZeroAmounts: Yup.boolean()\n  })\n\nexport const PAYMENT_BATCH_EDIT_SCHEMA = Yup.object().shape({\n  name: Yup.string()\n    .min(3, t('yup.min_len_3'))\n    .required(t('yup.field_required')),\n})","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { ADD_PAYMENT_BATCH, GET_PAYMENT_BATCHES_QUERY, GET_INPUT_VALUES } from './queries'\nimport { PAYMENT_BATCH_INVOICES_SCHEMA, PAYMENT_BATCH_CATEGORY_SCHEMA } from './yupSchema'\nimport { get_list_query_variables } from \"./tools\"\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\n\nimport FinanceMenu from '../FinanceMenu'\nimport FinancePaymentBatchesBase from './FinancePaymentBatchesBase'\nimport FinancePaymentCollectionBatchForm from './FinancePaymentCollectionBatchForm'\n\n\nfunction FinancePaymentCollectionBatchAdd({ t, history, match }) {\n  const batchType = match.params.batch_type\n  const returnUrl = `/finance/paymentbatches/${batchType}`\n  const categoryType = match.params.category_type\n  const cardTitle = t('finance.payment_batch.title_add')\n\n\n  let invoices = false\n  let category = false\n  switch (categoryType) {\n    case \"invoices\":\n      invoices = true\n      break\n    case \"category\":\n      category = true\n      break\n    default:\n      break\n  }\n\n  let batchCategoryType\n  switch (batchType) {\n    case \"collection\":\n      batchCategoryType = \"COLLECTION\"\n      break\n    case \"payment\":\n      batchCategoryType = \"PAYMENT\"\n      break\n    default:\n      break\n  }\n\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES, { variables: {\n    batchCategoryType: batchCategoryType\n  }})\n  const [addFinancePaymentBatch] = useMutation(ADD_PAYMENT_BATCH)\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <Card cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </Card>\n    </FinancePaymentBatchesBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchesBase showAdd={true}>\n      <Card cardTitle={cardTitle}>\n        <p>{t('finance.payment_batches.error_loading_input_values')}</p>\n      </Card>\n      </FinancePaymentBatchesBase>\n  )\n\n  const inputData = data\n\n  let initialValues = { name: '', description: '', executionDate: new Date() }\n  let yupSchema\n  if (categoryType == \"category\") {\n    initialValues.year = new Date().getFullYear()\n    initialValues.month = new Date().getMonth() + 1\n    yupSchema = PAYMENT_BATCH_CATEGORY_SCHEMA\n  } else {\n    yupSchema = PAYMENT_BATCH_INVOICES_SCHEMA\n  }\n\n  return (\n    <FinancePaymentBatchesBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={yupSchema}\n          onSubmit={(values, { setSubmitting }) => {\n            let input = {\n                batchType: batchType.toUpperCase(),\n                name: values.name, \n                executionDate: dateToLocalISO(values.executionDate),\n                description: values.description,\n                note: values.note,\n                includeZeroAmounts: values.includeZeroAmounts\n            }\n\n            if (categoryType == \"category\") {\n              input.year = values.year\n              input.month = values.month\n              input.financePaymentBatchCategory = values.financePaymentBatchCategory\n            }\n\n            addFinancePaymentBatch({ \n              variables: { input: input }, \n              refetchQueries: [\n                {query: GET_PAYMENT_BATCHES_QUERY, variables: get_list_query_variables(batchType)}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                const id = data.createFinancePaymentBatch.financePaymentBatch.id\n                history.push(`/finance/paymentbatches/${batchType}/view/${id}`)\n                toast.success((t('finance.payment_batches.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldValue, setFieldTouched }) => (\n              <FinancePaymentCollectionBatchForm\n                inputData={inputData}\n                create={true}\n                invoices={invoices}\n                category={category}\n                isSubmitting={isSubmitting}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                values={values}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </FinancePaymentBatchesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentCollectionBatchAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { UPDATE_PAYMENT_BATCH, GET_PAYMENT_BATCH_QUERY, GET_PAYMENT_BATCHES_QUERY } from './queries'\nimport { PAYMENT_BATCH_EDIT_SCHEMA } from './yupSchema'\nimport { get_list_query_variables } from \"./tools\"\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\n\nimport FinanceMenu from '../FinanceMenu'\nimport FinancePaymentBatchesBase from './FinancePaymentBatchesBase'\nimport FinancePaymentCollectionBatchForm from './FinancePaymentCollectionBatchForm'\n\n\nfunction FinancePaymentCollectionBatchEdit({ t, history, match }) {\n  const batchType = match.params.batch_type\n  const batchId = match.params.id\n  const returnUrl = `/finance/paymentbatches/${batchType}/view/${batchId}`\n  const cardTitle = t('finance.payment_batch.title_edit')\n\n\n  const { loading, error, data } = useQuery(GET_PAYMENT_BATCH_QUERY, {\n    variables: { id: batchId }\n  })\n  const [updateFinancePaymentBatch] = useMutation(UPDATE_PAYMENT_BATCH)\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchesBase showAdd={false} returnUrl={returnUrl}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <Dimmer active={true} loader={true} />\n        </Card.Body>\n      </Card>\n    </FinancePaymentBatchesBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchesBase showAdd={true} returnUrl={returnUrl}>\n      <Card title={cardTitle}>\n        <p>{t('finance.payment_batches.error_loading_input_values')}</p>\n      </Card>\n      </FinancePaymentBatchesBase>\n  )\n\n  const inputValues = data.financePaymentBatch\n\n  return (\n    <FinancePaymentBatchesBase showBack={true} returnUrl={returnUrl}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: inputValues.name , note: inputValues.note }}\n          validationSchema={PAYMENT_BATCH_EDIT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            let input = {\n                id: batchId,\n                name: values.name, \n                note: values.note,\n            }\n\n            updateFinancePaymentBatch({ \n              variables: { input: input }, \n              refetchQueries: [\n                {query: GET_PAYMENT_BATCHES_QUERY, variables: get_list_query_variables(batchType)}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('finance.payment_batches.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldValue, setFieldTouched }) => (\n              <FinancePaymentCollectionBatchForm\n                create={false}\n                isSubmitting={isSubmitting}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                values={values}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </FinancePaymentBatchesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentCollectionBatchEdit))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let showArchive = localStorage.getItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE)\n  if (showArchive === null) {\n    showArchive = \"false\"\n  }\n\n  let queryVars = {\n    archived: (showArchive === \"true\") ? true : false,\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinancePaymentBatchCategoriesBase({t, history, children, showAdd=false, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showAdd) ?\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financepaymentbatchcategory\">\n                  <Link to={\"/finance/paymentbatchcategories/add\"}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.payment_batch_categories.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              {(showBack) ?\n                <HasPermissionWrapper permission=\"view\"\n                                      resource=\"financepaymentbatchcategory\">\n                  <Link to=\"/finance/paymentbatchcategories\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              <FinanceMenu activeLink='payment_batch_categories'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategoriesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_PAYMENT_BATCH_CATEGORIES_QUERY = gql`\n  query FinancePaymentBatchCategories($after: String, $before: String, $archived: Boolean) {\n    financePaymentBatchCategories(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          description\n          batchCategoryType\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_PAYMENT_BATCH_CATEGORY_QUERY = gql`\n  query FinancePaymentBatchCategory($id: ID!) {\n    financePaymentBatchCategory(id:$id) {\n      id\n      name\n      description\n      archived\n    }\n  }\n`\n\n\nexport const ARCHIVE_PAYMENT_BATCH_CATEGORY = gql`\n  mutation ArchiveFinancePaymentBatchCategory($input: ArchiveFinancePaymentBatchCategoryInput!) {\n    archiveFinancePaymentBatchCategory(input: $input) {\n      financePaymentBatchCategory {\n        id\n        archived\n      }\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport { get_list_query_variables } from \"./tools\"\n\nimport FinancePaymentBatchCategory from \"../../ui/FinancePaymentBatchCategory\"\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceMenu from \"../FinanceMenu\"\nimport FinancePaymentBatchCategoriesBase from \"./FinancePaymentBatchCategoriesBase\"\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport { GET_PAYMENT_BATCH_CATEGORIES_QUERY, ARCHIVE_PAYMENT_BATCH_CATEGORY } from \"./queries\"\n\nfunction FinancePaymentBatchCategories({t, history}) {\n  const { loading, error, data, fetchMore, refetch } = useQuery(GET_PAYMENT_BATCH_CATEGORIES_QUERY, {\n    variables: get_list_query_variables(),\n  })\n  const [archivePaymentBatchCategory] = useMutation(ARCHIVE_PAYMENT_BATCH_CATEGORY)\n\n  // TODO: use local storage for archive buttons\n  const headerOptions = <Card.Options>\n    <Button color={(localStorage.getItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE) != \"true\") ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {\n              localStorage.setItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE, false)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.current')}\n    </Button>\n    <Button color={(localStorage.getItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE) === \"true\") ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {\n              localStorage.setItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE, true)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchCategoriesBase showAdd={true}>\n      <ContentCard cardTitle={t('finance.payment_batch_categories.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinancePaymentBatchCategoriesBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchCategoriesBase showAdd={true}>\n      <ContentCard cardTitle={t('finance.payment_batch_categories.title')}>\n        <p>{t('finance.payment_batch_categories.error_loading')}</p>\n      </ContentCard>\n      </FinancePaymentBatchCategoriesBase>\n  )\n\n  let payment_batch_categories = data.financePaymentBatchCategories\n  // Empty list\n  if (!payment_batch_categories.edges.length) { return (\n    <FinancePaymentBatchCategoriesBase showAdd={true}>\n      <ContentCard cardTitle={t('finance.payment_batch_categories.title')}\n                    headerContent={headerOptions}>\n        <p>\n          { (localStorage.getItem(CSLS.FINANCE_PAYMENT_BATCH_CATEGORIES_SHOW_ARCHIVE === \"true\")) ? \n              t(\"finance.payment_batch_categories.empty_archive\") :\n              t('finance.payment_batch_categories.empty_list')\n          }\n        </p>\n      </ContentCard>\n    </FinancePaymentBatchCategoriesBase>\n  )}\n\n  return (\n    <FinancePaymentBatchCategoriesBase showAdd={true}>\n      <ContentCard cardTitle={t('finance.payment_batch_categories.title')}\n        headerContent={headerOptions}\n        pageInfo={payment_batch_categories.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: payment_batch_categories.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.financePaymentBatchCategories.edges\n            const pageInfo = fetchMoreResult.financePaymentBatchCategories.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new payment_methods at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  financePaymentBatchCategories: {\n                    __typename: previousResult.financePaymentBatchCategories.__typename,\n                    edges: [ ...previousResult.financePaymentBatchCategories.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n            }\n        })\n      }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.payment_batch_categories.batch_category_type')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {payment_batch_categories.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  {node.name}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  <FinancePaymentBatchCategory categoryType={node.batchCategoryType} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/finance/paymentbatchcategories/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.archive')} \n                      onClick={() => {\n                        console.log(\"clicked archived\")\n                        let id = node.id\n                        archivePaymentBatchCategory({ variables: {\n                          input: {\n                          id,\n                          archived: !node.archived\n                        }\n                      }, refetchQueries: [\n                          {query: GET_PAYMENT_BATCH_CATEGORIES_QUERY, variables: get_list_query_variables()}\n                      ]}).then(({ data }) => {\n                        console.log('got data', data);\n                        toast.success(\n                          (node.archived) ? t('general.unarchived'): t('general.archived'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error);\n                        })\n                      }}>\n                    <Icon prefix=\"fa\" name=\"inbox\" />\n                  </button>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinancePaymentBatchCategoriesBase>\n  )\n}\n\n\n\n// const FinancePaymentMethods = ({ t, history, archived=false }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t(\"finance.title\")} />\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//             <Query query={GET_PAYMENT_METHODS_QUERY} variables={{ archived }}>\n//              {({ loading, error, data: {financePaymentMethods: payment_methods}, refetch, fetchMore }) => {\n//                 // Loading\n//                 if (loading) return (\n//                   <ContentCard cardTitle={t('finance.payment_methods.title')}>\n//                     <Dimmer active={true}\n//                             loader={true}>\n//                     </Dimmer>\n//                   </ContentCard>\n//                 )\n//                 // Error\n//                 if (error) return (\n//                   <ContentCard cardTitle={t('finance.payment_methods.title')}>\n//                     <p>{t('finance.payment_methods.error_loading')}</p>\n//                   </ContentCard>\n//                 )\n//                 const headerOptions = <Card.Options>\n//                   <Button color={(!archived) ? 'primary': 'secondary'}  \n//                           size=\"sm\"\n//                           onClick={() => {archived=false; refetch({archived});}}>\n//                     {t('general.current')}\n//                   </Button>\n//                   <Button color={(archived) ? 'primary': 'secondary'} \n//                           size=\"sm\" \n//                           className=\"ml-2\" \n//                           onClick={() => {archived=true; refetch({archived});}}>\n//                     {t('general.archive')}\n//                   </Button>\n//                 </Card.Options>\n                \n//                 // Empty list\n//                 if (!payment_methods.edges.length) { return (\n//                   <ContentCard cardTitle={t('finance.payment_methods.title')}\n//                                headerContent={headerOptions}>\n//                     <p>\n//                     {(!archived) ? t('finance.payment_methods.empty_list') : t(\"finance.payment_methods.empty_archive\")}\n//                     </p>\n                   \n//                   </ContentCard>\n//                 )} else {   \n//                 // Life's good! :)\n//                 return (\n//                   <ContentCard cardTitle={t('finance.payment_methods.title')}\n//                                headerContent={headerOptions}\n//                                pageInfo={payment_methods.pageInfo}\n//                                onLoadMore={() => {\n//                                 fetchMore({\n//                                   variables: {\n//                                     after: payment_methods.pageInfo.endCursor\n//                                   },\n//                                   updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                     const newEdges = fetchMoreResult.financePaymentMethods.edges\n//                                     const pageInfo = fetchMoreResult.financePaymentMethods.pageInfo\n\n//                                     return newEdges.length\n//                                       ? {\n//                                           // Put the new payment_methods at the end of the list and update `pageInfo`\n//                                           // so we have the new `endCursor` and `hasNextPage` values\n//                                           financePaymentMethods: {\n//                                             __typename: previousResult.financePaymentMethods.__typename,\n//                                             edges: [ ...previousResult.financePaymentMethods.edges, ...newEdges ],\n//                                             pageInfo\n//                                           }\n//                                         }\n//                                       : previousResult\n//                                   }\n//                                 })\n//                               }} >\n//                     <Table>\n//                           <Table.Header>\n//                             <Table.Row key={v4()}>\n//                               <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n//                             </Table.Row>\n//                           </Table.Header>\n//                           <Table.Body>\n//                               {payment_methods.edges.map(({ node }) => (\n//                                 <Table.Row key={v4()}>\n//                                   <Table.Col key={v4()}>\n//                                     {node.name}\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     {node.code}\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     {(node.archived) ? \n//                                       <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/finance/paymentmethods/edit/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('general.edit')}\n//                                       </Button>\n//                                     }\n//                                   </Table.Col>\n//                                   {(node.systemMethod) ? \n//                                     <Table.Col></Table.Col> :\n//                                     <Mutation mutation={ARCHIVE_PAYMENT_METHOD} key={v4()}>\n//                                       {(archivePaymentMethod, { data }) => (\n//                                         <Table.Col className=\"text-right\" key={v4()}>\n//                                           <button className=\"icon btn btn-link btn-sm\" \n//                                             title={t('general.archive')} \n//                                             href=\"\"\n//                                             onClick={() => {\n//                                               console.log(\"clicked archived\")\n//                                               let id = node.id\n//                                               archivePaymentMethod({ variables: {\n//                                                 input: {\n//                                                   id,\n//                                                   archived: !archived\n//                                                 }\n//                                           }, refetchQueries: [\n//                                               {query: GET_PAYMENT_METHODS_QUERY, variables: {\"archived\": archived }}\n//                                           ]}).then(({ data }) => {\n//                                             console.log('got data', data);\n//                                             toast.success(\n//                                               (archived) ? t('general.unarchived'): t('general.archived'), {\n//                                                 position: toast.POSITION.BOTTOM_RIGHT\n//                                               })\n//                                           }).catch((error) => {\n//                                             toast.error((t('general.toast_server_error')) +  error, {\n//                                                 position: toast.POSITION.BOTTOM_RIGHT\n//                                               })\n//                                             console.log('there was an error sending the query', error);\n//                                           })\n//                                           }}>\n//                                             <Icon prefix=\"fa\" name=\"inbox\" />\n//                                           </button>\n//                                         </Table.Col>\n//                                       )}\n//                                     </Mutation>\n//                                   }\n//                                 </Table.Row>\n//                               ))}\n//                           </Table.Body>\n//                         </Table>\n//                   </ContentCard>\n//                 )}}\n//              }\n//             </Query>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"financepaymentmethod\">\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(\"/finance/paymentmethods/add\")}>\n//                 <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.payment_methods.add')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <FinanceMenu activeLink='payment_methods'/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// );\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategories))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const PAYMENT_BATCH_CATEGORY_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    description: Yup.string()\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\n\nconst FinancePaymentBatchCategoryForm = ({ t, history, isSubmitting, errors, values, returnUrl, create=false }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.name')}>\n              <Field type=\"text\" \n                      name=\"name\" \n                      className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        {(create) ?\n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group label={t('finance.payment_batch_categories.batch_category_type')}>\n                <Field component=\"select\" \n                        name=\"batchCategoryType\" \n                        className={(errors.batchCategoryType) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\">\n                  <option value=\"COLLECTION\" key={v4()}>{t('general.collection')}</option>\n                  <option value=\"PAYMENT\" key={v4()}>{t('general.payment')}</option>\n                </Field>\n                <ErrorMessage name=\"batchCategoryType\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          </Grid.Row> \n          : \"\"\n        }\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.description')}>\n              <Field type=\"text\" \n                      name=\"description\" \n                      className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategoryForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_PAYMENT_BATCH_CATEGORIES_QUERY } from './queries'\nimport { PAYMENT_BATCH_CATEGORY_SCHEMA } from './yupSchema'\nimport { get_list_query_variables } from \"./tools\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinanceMenu from '../FinanceMenu'\nimport FinancePaymentBatchCategoriesBase from './FinancePaymentBatchCategoriesBase'\nimport FinancePaymentBatchCategoryForm from './FinancePaymentBatchCategoryForm'\n\nconst ADD_PAYMENT_BATCH_CATEGORY = gql`\n  mutation CreateFinancePaymentBatchCategory($input:CreateFinancePaymentBatchCategoryInput!) {\n    createFinancePaymentBatchCategory(input: $input) {\n      financePaymentBatchCategory {\n        id\n      }\n    }\n  }\n`\n\nfunction FinancePaymentBatchCategoryAdd({ t, history }) {\n  const returnUrl = \"/finance/paymentbatchcategories\"\n  const [addFinancePaymentBatchCategory] = useMutation(ADD_PAYMENT_BATCH_CATEGORY, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  return (\n    <FinancePaymentBatchCategoriesBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('finance.payment_batch_categories.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: '', batchCategoryType: \"COLLECTION\", description: '' }}\n          validationSchema={PAYMENT_BATCH_CATEGORY_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            addFinancePaymentBatchCategory({ variables: {\n              input: {\n                name: values.name, \n                batchCategoryType: values.batchCategoryType,\n                description: values.description\n              }\n            }, refetchQueries: [\n                {query: GET_PAYMENT_BATCH_CATEGORIES_QUERY, variables: get_list_query_variables()}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('finance.payment_batch_categories.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <FinancePaymentBatchCategoryForm\n                create={true}\n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </FinancePaymentBatchCategoriesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategoryAdd))","// @flow\n\nimport React from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_PAYMENT_BATCH_CATEGORIES_QUERY, GET_PAYMENT_BATCH_CATEGORY_QUERY } from './queries'\nimport { get_list_query_variables } from './tools'\nimport { PAYMENT_BATCH_CATEGORY_SCHEMA } from './yupSchema'\n\n\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport FinancePaymentBatchCategoriesBase from './FinancePaymentBatchCategoriesBase'\nimport FinancePaymentBatchCategoryForm from './FinancePaymentBatchCategoryForm'\n\n\nconst UPDATE_PAYMENT_BATCH_CATEGORY = gql`\n  mutation UpdateFinancePaymentBatchCategory($input: UpdateFinancePaymentBatchCategoryInput!) {\n    updateFinancePaymentBatchCategory(input: $input) {\n      financePaymentBatchCategory {\n        id\n      }\n    }\n  }\n`\n\nfunction FinancePaymentBatchCategoryEdit({ t, history, match }) {\n  const returnUrl = \"/finance/paymentbatchcategories\"\n  const paymentBatchCategoryId = match.params.id\n\n  const { loading, error, data } = useQuery(GET_PAYMENT_BATCH_CATEGORY_QUERY, {\n    variables: {'id': paymentBatchCategoryId},\n  })\n  const [updateFinancePaymentBatchCategory] = useMutation(UPDATE_PAYMENT_BATCH_CATEGORY)\n\n  // Loading\n  if (loading) return (\n    <FinancePaymentBatchCategoriesBase showBack={true}>\n      <Card cardTitle={t('finance.payment_batch_categories.title')}>\n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true} />\n        </Card.Body>\n      </Card>\n    </FinancePaymentBatchCategoriesBase>\n  )\n  // Error\n  if (error) return (\n    <FinancePaymentBatchCategoriesBase showBack={true}>\n      <Card cardTitle={t('finance.payment_batch_categories.title')}>\n        <Card.Body>\n          <p>{t('finance.payment_batch_categories.error_loading')}</p>\n        </Card.Body>\n      </Card>\n    </FinancePaymentBatchCategoriesBase>\n  )\n\n  const initialData = data.financePaymentBatchCategory\n\n  return (\n    <FinancePaymentBatchCategoriesBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('finance.payment_batch_categories.title_edit')}</Card.Title>\n        </Card.Header>\n          <Formik\n            initialValues={{ \n              name: initialData.name, \n              batchCategoryType: initialData.batchCategoryType,\n              description: initialData.description,\n            }}\n            validationSchema={PAYMENT_BATCH_CATEGORY_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateFinancePaymentBatchCategory({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name, \n                  batchCategoryType: values.batchCategoryType,\n                  description: values.description\n                }\n              }, refetchQueries: [\n                {query: GET_PAYMENT_BATCH_CATEGORIES_QUERY, variables: get_list_query_variables()}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('finance.payment_batch_categories.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n              }}\n            >\n            {({ isSubmitting, errors, values }) => (\n                <FinancePaymentBatchCategoryForm\n                  isSubmitting={isSubmitting}\n                  errors={errors}\n                  values={values}\n                  returnUrl={returnUrl}\n                />\n               \n            )}\n          </Formik>\n      </Card>\n    </FinancePaymentBatchCategoriesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinancePaymentBatchCategoryEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_FINANCE_ORDER_QUERY = gql`\n  query FinanceOrder($id: ID!) {\n    financeOrder(id: $id) {\n      id\n      account {\n        id\n        fullName\n      }\n      orderNumber\n      status\n      message\n      createdAt\n      total\n      totalDisplay\n      balanceDisplay\n      items(first: 100) {\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            id\n            organizationClasspass {\n              id\n              name\n            }\n            productName \n            description\n            quantity\n            price\n            priceDisplay\n            financeTaxRate {\n              name\n            }\n            subtotalDisplay\n            taxDisplay\n            totalDisplay\n            financeGlaccount {\n              name\n            }\n          \tfinanceCostcenter {\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_ORDER = gql`\n  mutation UpdateFinanceOrder($input: UpdateFinanceOrderInput!) {\n    updateFinanceOrder(input: $input) {\n      financeOrder {\n        id\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n  Icon\n} from \"tabler-react\";\n\n\nconst FinanceOrderEditForm = ({ t, isSubmitting, errors, values, returnUrl }) => (\n  <FoForm>\n    <Card title={t('general.status')}>\n      <Card.Body> \n        <Grid.Row>\n          <Grid.Col md={10}>\n            <Form.Group>\n              <Field component=\"select\" \n                     name=\"status\" \n                     className={(errors.status) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\">\n                <option value={\"RECEIVED\"} key={v4()}>{t(\"finance.orders.statuses.RECEIVED\")}</option>\n                <option value={\"AWAITING_PAYMENT\"} key={v4()}>{t(\"finance.orders.statuses.AWAITING_PAYMENT\")}</option>\n                <option value={\"PAID\"} key={v4()}>{t(\"finance.orders.statuses.PAID\")}</option>\n                <option value={\"DELIVERED\"} key={v4()}>{t(\"finance.orders.statuses.DELIVERED\")}</option>\n                <option value={\"CANCELLED\"} key={v4()}>{t(\"finance.orders.statuses.CANCELLED\")}</option>\n                <option value={\"NOT_FOUND\"} key={v4()}>{t(\"finance.orders.statuses.NOT_FOUND\")}</option>\n              </Field>\n              <ErrorMessage name=\"status\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n            <span className=\"text-muted\">\n              <Icon name=\"info\" /> {' '}\n              {t(\"finance.orders.set_status_to_delivered_to_deliver_manually\")}\n            </span>\n          </Grid.Col>\n          <Grid.Col md={2}>\n          <Button \n                className=\"pull-right\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n              >\n                {t('general.submit')}\n              </Button>\n          </Grid.Col>\n        </Grid.Row> \n      </Card.Body>\n    </Card>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(FinanceOrderEditForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Container,\n  Grid,\n  Icon,\n  Page\n} from \"tabler-react\";\n\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport FinanceMenu from \"../../FinanceMenu\"\n\n\nfunction FinanceOrderEditBase ({ t, match, history, children, refetch }) {\n  const returnUrl = \"/finance/orders\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")}>\n            <div className=\"page-options d-flex\">\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"change\"\n                                    resource=\"financeorder\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>            \n              <h5>{t(\"general.menu\")}</h5>\n              <FinanceMenu activeLink='orders'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceOrderEditBase))","// @flow\n\nimport React, { useContext } from 'react'\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { v4 } from \"uuid\"\nimport moment from 'moment'\n\nimport { GET_ORDERS_QUERY } from '../queries'\nimport { GET_FINANCE_ORDER_QUERY, UPDATE_ORDER } from './queries'\nimport FinanceOrderEditForm from \"./FinanceOrderEditForm\"\nimport FinanceOrderEditBase from './FinanceOrderEditBase'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\n\nfunction FinanceOrderEdit({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n\n  const id = match.params.id\n  const returnUrl = \"/finance/orders\"\n  \n  const { loading, error, data } = useQuery(GET_FINANCE_ORDER_QUERY, {\n    variables: { id: id },\n  })\n  const [updateOrder] = useMutation(UPDATE_ORDER)\n\n\n  // Loading\n  if (loading) return (\n    <FinanceOrderEditBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </FinanceOrderEditBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <FinanceOrderEditBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </FinanceOrderEditBase>\n    )\n  }\n\n  console.log(data) \n  const order = data.financeOrder\n  \n\n  return(\n    <FinanceOrderEditBase>\n      {/* Start info row */}\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Card title={t(\"finance.orders.edit_details\")}>\n            <Table cards>\n              <Table.Body>\n                <Table.Row>\n                  <Table.ColHeader>{t(\"general.order\")} #</Table.ColHeader>\n                  <Table.Col>{order.orderNumber}</Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.ColHeader>{t(\"general.account\")}</Table.ColHeader>\n                  <Table.Col>{order.account && order.account.fullName}</Table.Col>\n                </Table.Row>\n                <Table.Row>\n                  <Table.ColHeader>{t(\"finance.orders.placed_at\")}</Table.ColHeader>\n                  <Table.Col>{moment(order.createdAt).format(dateTimeFormat)}</Table.Col>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </Card>\n\n        </Grid.Col>\n        <Grid.Col md={6}>\n          {(order.status != \"DELIVERED\") ? \n            <Formik\n              initialValues={{ \n                status: order.status, \n              }}\n              // validationSchema={GLACCOUNT_SCHEMA}\n              onSubmit={(values, { setSubmitting }) => {\n                  console.log('submit values:')\n                  console.log(values)\n\n                  updateOrder({ variables: {\n                    input: {\n                      id: match.params.id,\n                      status: values.status\n                    }\n                  }, refetchQueries: [\n                      {query: GET_ORDERS_QUERY }\n                  ]})\n                  .then(({ data }) => {\n                      console.log('got data', data)\n                      toast.success((t('finance.orders.toast_edit_success')), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      setSubmitting(false)\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error)\n                      setSubmitting(false)\n                    })\n              }}\n              >\n              {({ isSubmitting, errors, values }) => (\n                <FinanceOrderEditForm\n                  isSubmitting={isSubmitting}\n                  errors={errors}\n                  values={values}\n                  returnUrl={returnUrl}\n                />\n              )}\n            </Formik>\n            :     \n            <Card title={t('general.status')}>\n              <Card.Body> \n                <span className=\"text-green\"><Icon name=\"check\" /></span> {t(\"finance.orders.statuses.DELIVERED\")}\n              </Card.Body>\n            </Card>\n          }\n        </Grid.Col>\n      </Grid.Row> \n      {/* End information row */}\n      {/* Start items row */}\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <Card title={t(\"general.items\")}>\n            <Table cards>\n              <Table.Header>\n                <Table.Row>\n                  <Table.ColHeader>{t(\"general.product\")}</Table.ColHeader>\n                  <Table.ColHeader>{t(\"general.description\")}</Table.ColHeader>\n                  <Table.ColHeader>{t(\"general.quantity_short_and_price\")}</Table.ColHeader>\n                  <Table.ColHeader>{t(\"general.tax\")}</Table.ColHeader>\n                  <Table.ColHeader>{t(\"general.total\")}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                { order.items.edges.map(({ node }) => (        \n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      {node.productName}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.description}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.quantity} <br />\n                      {node.priceDisplay}\n                    </Table.Col>\n                    <Table.Col>\n                      {(node.financeTaxRate) ? node.financeTaxRate.name : \"\"}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.totalDisplay}\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>                \n            </Table>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n      {/* End items row */}\n      {/* Start note row */}\n      { (order.message) ?\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card title={t('finance.orders.customer_message')}>\n              <Card.Body>\n                {order.message}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row> : \"\"\n      }\n      {/* End note row */}\n    </FinanceOrderEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceOrderEdit))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinancePaymentMethodsBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"finance.title\")} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n            {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/finance/paymentmethods\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financepaymentmethod\">\n                  <Link to=\"/finance/paymentmethods/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.payment_methods.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <FinanceMenu activeLink='payment_methods'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinancePaymentMethodsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_PAYMENT_METHODS_QUERY = gql`\n  query FinancePaymentMethods($after: String, $before: String, $archived: Boolean) {\n    financePaymentMethods(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          systemMethod\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_PAYMENT_METHOD_QUERY = gql`\n  query FinancePaymentMethod($id: ID!) {\n    financePaymentMethod(id:$id) {\n      id\n      name\n      code\n      archived\n    }\n  }\n`\n\nexport const ADD_PAYMENT_METHOD = gql`\nmutation CreateFinancePaymentMethod($input:CreateFinancePaymentMethodInput!) {\n  createFinancePaymentMethod(input: $input) {\n    financePaymentMethod{\n      id\n      archived\n      name\n      code\n    }\n  }\n}\n`\n\nexport const UPDATE_PAYMENT_METHOD = gql`\nmutation UpdateFinancePaymentMethod($input: UpdateFinancePaymentMethodInput!) {\n  updateFinancePaymentMethod(input: $input) {\n    financePaymentMethod {\n      id\n      name\n      code\n    }\n  }\n}\n`\n\nexport const ARCHIVE_PAYMENT_METHOD = gql`\nmutation ArchiveFinancePaymentMethod($input: ArchiveFinancePaymentMethodInput!) {\n  archiveFinancePaymentMethod(input: $input) {\n    financePaymentMethod {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinancePaymentMethodsBase from './FinancePaymentMethodsBase'\n\nimport { GET_PAYMENT_METHODS_QUERY, ARCHIVE_PAYMENT_METHOD } from \"./queries\"\n\n\nfunction FinancePaymentMethods({ t, history }) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('finance.payment_methods.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_PAYMENT_METHODS_QUERY, {\n    variables: { archived: archived }\n  })\n\n  const [ archivePaymentMethod ] = useMutation(ARCHIVE_PAYMENT_METHOD)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <FinancePaymentMethodsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinancePaymentMethodsBase>\n  )\n\n  if (error) return (\n    <FinancePaymentMethodsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.payment_methods.error_loading')}</p>\n      </ContentCard>\n    </FinancePaymentMethodsBase>\n  )\n\n  const paymentMethods = data.financePaymentMethods\n\n  // Empty list\n  if (!paymentMethods.edges.length) { return (\n    <FinancePaymentMethodsBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('finance.payment_methods.empty_list') : t(\"finance.payment_methods.empty_archive\")}\n        </p>\n      </ContentCard>\n    </FinancePaymentMethodsBase>\n  )}\n\n  return (\n    <FinancePaymentMethodsBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}\n                    pageInfo={paymentMethods.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: paymentMethods.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.financePaymentMethods.edges\n                        const pageInfo = fetchMoreResult.financePaymentMethods.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new paymentMethods at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              financePaymentMethods: {\n                                __typename: previousResult.financePaymentMethods.__typename,\n                                edges: [ ...previousResult.financePaymentMethods.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {paymentMethods.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.code}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Link to={`/finance/paymentmethods/edit/${node.id}`}>\n                        <Button className='btn-sm' \n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                      </Link>\n                    }\n                  </Table.Col>\n                  {(node.systemMethod) ? \n                    <Table.Col></Table.Col> :\n                    <Table.Col className=\"text-right\" key={v4()}>\n                      <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archivePaymentMethod({ variables: {\n                            input: {\n                              id,\n                              archived: !archived\n                            }\n                      }, refetchQueries: [\n                          {query: GET_PAYMENT_METHODS_QUERY, variables: {\"archived\": archived }}\n                      ]}).then(({ data }) => {\n                        console.log('got data', data);\n                        toast.success(\n                          (archived) ? t('general.unarchived'): t('general.archived'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error);\n                      })\n                      }}>\n                        <Icon prefix=\"fa\" name=\"inbox\" />\n                      </button>\n                    </Table.Col>\n                  }\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>      \n    </FinancePaymentMethodsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinancePaymentMethods))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const PAYMENT_METHOD_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst FinancePaymentMethodForm = ({ t, history, isSubmitting, errors, values, returnUrl }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('finance.code')}>\n            <Field type=\"text\" \n                    name=\"code\" \n                    className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(FinancePaymentMethodForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_PAYMENT_METHODS_QUERY, ADD_PAYMENT_METHOD } from './queries'\nimport { PAYMENT_METHOD_SCHEMA } from './yupSchema'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport FinancePaymentMethodsBase from './FinancePaymentMethodsBase';\nimport FinancePaymentMethodForm from './FinancePaymentMethodForm'\n\n\nfunction FinancePaymentMethodAdd({ t, history }) {\n  const returnUrl = \"/finance/paymentmethods\"\n  const [ addPaymentMethod ] = useMutation(ADD_PAYMENT_METHOD)\n\n  return (\n    <FinancePaymentMethodsBase showBack={true}>\n      <Card title={t('finance.payment_methods.title_add')}>\n        <Formik\n          initialValues={{ name: '', code: '' }}\n          validationSchema={PAYMENT_METHOD_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addPaymentMethod({ variables: {\n                input: {\n                  name: values.name, \n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_PAYMENT_METHODS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('finance.payment_methods.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <FinancePaymentMethodForm\n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </FinancePaymentMethodsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinancePaymentMethodAdd))","import React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_PAYMENT_METHODS_QUERY, GET_PAYMENT_METHOD_QUERY, UPDATE_PAYMENT_METHOD } from './queries'\nimport { PAYMENT_METHOD_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinancePaymentMethodsBase from './FinancePaymentMethodsBase';\nimport FinancePaymentMethodForm from './FinancePaymentMethodForm'\n\n\nfunction FinancePaymentMethodEdit({ t, history, match }) {\n  const id = match.params.id\n  const cardTitle = t('finance.payment_methods.title_edit')\n  const returnUrl = \"/finance/paymentmethods\"\n\n  const { loading, error, data } = useQuery(GET_PAYMENT_METHOD_QUERY, {\n    variables: { id: id }\n  })\n  const [ updatePaymentMethod ] = useMutation(UPDATE_PAYMENT_METHOD)\n\n  if (loading) return (\n    <FinancePaymentMethodsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinancePaymentMethodsBase>\n  )\n\n  if (error) return (\n    <FinancePaymentMethodsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </FinancePaymentMethodsBase>\n  )\n\n  const initialData = data.financePaymentMethod;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <FinancePaymentMethodsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            code: initialData.code\n          }}\n          validationSchema={PAYMENT_METHOD_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updatePaymentMethod({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name,\n                  code: values.code\n                }\n              }, refetchQueries: [\n                  {query: GET_PAYMENT_METHODS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('finance.payment_methods.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n              <FinancePaymentMethodForm\n                isSubmitting={isSubmitting}\n                errors={errors}\n                values={values}\n                returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </FinancePaymentMethodsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinancePaymentMethodEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport FinanceMenu from \"../FinanceMenu\"\n\n\nfunction FinanceTaxRatesBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"finance.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/finance/taxrates\"  >\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financetaxrate\">\n                  <Link to=\"/finance/taxrates/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('finance.taxrates.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <FinanceMenu activeLink='taxrates'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceTaxRatesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_TAXRATES_QUERY = gql`\n  query FinanceTaxRates($after: String, $before: String, $archived: Boolean) {\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_TAXRATE_QUERY = gql`\n  query FinanceTaxRate($id: ID!) {\n    financeTaxRate(id:$id) {\n      id\n      archived\n      name\n      percentage\n      rateType\n      code\n    }\n  }\n`\n\nexport const ADD_TAXRATE = gql`\nmutation CreateFinanceTaxRate($input:CreateFinanceTaxRateInput!) {\n  createFinanceTaxRate(input: $input) {\n    financeTaxRate{\n      id\n      archived\n      name\n      percentage\n      rateType\n      code\n    }\n  }\n}\n`\n\nexport const UPDATE_TAXRATE = gql`\nmutation UpdateFinanceTaxRate($input: UpdateFinanceTaxRateInput!) {\n  updateFinanceTaxRate(input: $input) {\n    financeTaxRate {\n      id\n      archived\n      name\n      percentage\n      rateType\n      code\n    }\n  }\n}\n`\n\nexport const ARCHIVE_TAXRATE = gql`\nmutation ArchiveFinanceTaxRate($input: ArchiveFinanceTaxRateInput!) {\n  archiveFinanceTaxRate(input: $input) {\n    financeTaxRate {\n      id\n      archived\n    }\n  }\n}\n`\n","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceTaxRatesBase from './FinanceTaxRatesBase'\n\nimport { GET_TAXRATES_QUERY, ARCHIVE_TAXRATE } from \"./queries\"\n\nfunction FinanceTaxRates({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('finance.taxrates.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_TAXRATES_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveTaxrate ] = useMutation(ARCHIVE_TAXRATE)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <FinanceTaxRatesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )\n\n  if (error) return (\n    <FinanceTaxRatesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.glaccounts.error_loading')}</p>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )\n\n  const taxrates = data.financeTaxRates\n\n  // Empty list\n  if (!taxrates.edges.length) { return (\n    <FinanceTaxRatesBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('finance.taxrates.empty_list') : t(\"finance.taxrates.empty_archive\")}\n        </p>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )}\n\n  return (\n    <FinanceTaxRatesBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}\n                    pageInfo={taxrates.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: taxrates.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.financeTaxRates.edges\n                        const pageInfo = fetchMoreResult.financeTaxRates.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new taxrates at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              financeTaxRates: {\n                                __typename: previousResult.financeTaxRates.__typename,\n                                edges: [ ...previousResult.financeTaxRates.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.taxrates.percentage')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.taxrates.rateType')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.code')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {taxrates.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.percentage} %\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.rateType}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.code}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/finance/taxrates/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveTaxrate({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_TAXRATES_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(FinanceTaxRates))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const TAX_RATE_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    percentage: Yup.number()\n      .max(100)\n      .typeError(t('yup.field_has_to_be_number'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_TAXRATES_QUERY, ADD_TAXRATE } from './queries'\nimport { TAX_RATE_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport FinanceTaxRatesBase from './FinanceTaxRatesBase';\n\n\nfunction FinanceTaxRateAdd({t, history}) {\n  const returnUrl = \"/finance/taxrates\"\n  const [ addFinanceTaxrate ] = useMutation(ADD_TAXRATE)\n\n  return (\n    <FinanceTaxRatesBase showBack={true}>\n      <Card title={t('finance.taxrates.title_add')}>\n        <Formik\n            initialValues={{ name: \"\", percentage: \"\", rateType: \"IN\", code: \"\" }}\n            validationSchema={TAX_RATE_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                addFinanceTaxrate({ variables: {\n                  input: {\n                    name: values.name,\n                    percentage: values.percentage,\n                    rateType: values.rateType, \n                    code: values.code,\n                  }\n                }, refetchQueries: [\n                    {query: GET_TAXRATES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data);\n                    history.push(returnUrl)\n                    toast.success((t('finance.taxrates.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n              <FoForm>\n                  <Card.Body>\n                      <Form.Group label={t('general.name')}>\n                        <Field type=\"text\" \n                                name=\"name\" \n                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.taxrates.percentage')}>\n                        <Field type=\"text\" \n                                name=\"percentage\" \n                                className={(errors.percentage) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"percentage\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.taxrates.rateType')}>\n                        <Field component=\"select\" \n                                name=\"rateType\" \n                                className={(errors.rateType) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\">\n                          <option value=\"IN\">{t('finance.taxrates.including')}</option>\n                          <option value=\"EX\">{t('finance.taxrates.excluding')}</option>\n                        </Field>\n                        <ErrorMessage name=\"rateType\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.code')}>\n                        <Field type=\"text\" \n                                name=\"code\" \n                                className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                  </Card.Body>\n                  <Card.Footer>\n                      <Button \n                        color=\"primary\"\n                        className=\"pull-right\" \n                        type=\"submit\" \n                        disabled={isSubmitting}\n                      >\n                        {t('general.submit')}\n                      </Button>\n                      <Link to={returnUrl}>\n                        <Button color=\"link\">\n                            {t('general.cancel')}\n                        </Button>\n                      </Link>\n                  </Card.Footer>\n              </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </FinanceTaxRatesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceTaxRateAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_TAXRATES_QUERY, GET_TAXRATE_QUERY, UPDATE_TAXRATE } from './queries'\nimport { TAX_RATE_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport FinanceTaxRatesBase from './FinanceTaxRatesBase';\n\n\nfunction FinanceTaxRateEdit({t, match, history}) {\n  const id = match.params.id\n  const returnUrl = \"/finance/taxrates\"\n  const cardTitle = t('finance.taxrates.title_edit')\n  const { loading, error, data } = useQuery(GET_TAXRATE_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateTaxrate ] = useMutation(UPDATE_TAXRATE)\n\n  if (loading) return (\n    <FinanceTaxRatesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )\n\n  if (error) return (\n    <FinanceTaxRatesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('finance.taxrates.error_loading')}</p>\n      </ContentCard>\n    </FinanceTaxRatesBase>\n  )\n\n  const initialData = data.financeTaxRate;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <FinanceTaxRatesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n              percentage: initialData.percentage,\n              rateType: initialData.rateType,\n              code: initialData.code,\n            }}\n            validationSchema={TAX_RATE_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateTaxrate({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                    percentage: values.percentage,\n                    rateType: values.rateType,\n                    code: values.code,\n                  }\n                }, refetchQueries: [\n                    {query: GET_TAXRATES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('finance.taxrates.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values }) => (\n                <FoForm>\n                    <Card.Body>\n                      <Form.Group label={t('general.name')}>\n                        <Field type=\"text\" \n                                name=\"name\" \n                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.taxrates.percentage')}>\n                        <Field type=\"text\" \n                              name=\"percentage\" \n                              className={(errors.percentage) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                        <ErrorMessage name=\"percentage\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.taxrates.rateType')}>\n                        <Field component=\"select\" \n                              name=\"rateType\" \n                              className={(errors.rateType) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\">\n                          <option value=\"IN\">{t('finance.taxrates.including')}</option>\n                          <option value=\"EX\">{t('finance.taxrates.excluding')}</option>\n                        </Field>\n                        <ErrorMessage name=\"rateType\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('finance.code')}>\n                        <Field type=\"text\" \n                                name=\"code\" \n                                className={(errors.code) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"code\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          className=\"pull-right\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          type=\"submit\"\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button\n                            type=\"button\" \n                            color=\"link\" \n                          >\n                              {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </FinanceTaxRatesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(FinanceTaxRateEdit))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\n\n\nlet classpasses_active\nlet subscriptions_active\n\n\nconst InsightMenu = ({ t, activeLink }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'classpasses') ? classpasses_active = true: classpasses_active = false}\n        {(activeLink === 'subscriptions') ? subscriptions_active = true: subscriptions_active = false}\n        \n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"insight\"\n        >\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to=\"#/insight/classpasses\"\n              icon=\"credit-card\"\n              active={classpasses_active}\n              >\n              {t('insight.classpass.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"insight\"\n        >\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to=\"#/insight/subscriptions\"\n              icon=\"edit\"\n              active={subscriptions_active}\n              >\n              {t('insight.subscriptions.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        {/* <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"organizationlocation\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to=\"#/organization/locations\"\n                icon=\"home\"\n                active={location_active}\n                >\n            Locations\n            </List.GroupItem>\n        </HasPermissionWrapper> */}\n    </List.Group>\n);\n\nexport default withTranslation()(InsightMenu)","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Container,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport InsightMenu from \"../InsightMenu\"\n\n\nclass InsightHome extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Insight home props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"insight.title\")} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n                <Grid.Row>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/insight/classpasses'>\n                      <StampCard header={<small>{t('insight.classpasses.title')}</small>} footer={t('')} color=\"blue\" icon=\"credit-card\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/insight/subscriptions'>\n                      <StampCard header={<small>{t('insight.subscriptions.title')}</small>} footer={t('')} color=\"blue\" icon=\"edit\" />\n                    </Link>\n                  </Grid.Col>\n                </Grid.Row>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <InsightMenu />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(InsightHome))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_CLASSPASSES_SOLD_QUERY = gql`\n  query InsightAccountClasspassesSold($year: Int!) {\n    insightAccountClasspassesSold(year: $year) {\n      description\n      data\n      year\n    }\n  }\n`\n\n\nexport const GET_CLASSPASSES_ACTIVE_QUERY = gql`\n  query InsightAccountClasspassesActive($year: Int!) {\n    insightAccountClasspassesActive(year: $year) {\n      description\n      data\n      year\n    }\n  }\n`","\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nconst InsightBackHome = ({ t }) => (\n  <div className=\"page-options d-flex\">\n    <Link to=\"/insight\" \n          className='btn btn-secondary mr-4'>\n        <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('insight.title')}\n    </Link>\n  </div>\n)\n\nexport default withTranslation()(InsightBackHome)","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport moment from 'moment'\n\nimport {\n  Button,\n  Container,\n  Grid,\n  Page\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport InsightBackHome from '../InsightBackHome'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.INSIGHT_CLASSPASSES_YEAR)) {\n  console.log('year from not found... defaulting to today...')\n  localStorage.setItem(CSLS.INSIGHT_CLASSPASSES_YEAR, moment().format('YYYY')) \n} \n\nfunction InsightClasspassesBase ({ t, history, children, year, refetchData=f=>f }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"insight.title\")} subTitle={t(\"general.classpasses\") + \" \" + year}>\n            <div className=\"page-options d-flex\">\n              <InsightBackHome />\n              <Button.List className=\"schedule-list-page-options-btn-list\">\n                <Button \n                  icon=\"chevron-left\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let previousYear = parseInt(localStorage.getItem(CSLS.INSIGHT_CLASSPASSES_YEAR)) - 1                    \n                    localStorage.setItem(CSLS.INSIGHT_CLASSPASSES_YEAR, previousYear) \n\n                    refetchData(previousYear)\n                }} />\n                <Button \n                  icon=\"sunset\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let currentYear = moment().format('YYYY')\n                    localStorage.setItem(CSLS.INSIGHT_CLASSPASSES_YEAR, currentYear) \n                    \n                    refetchData(currentYear)\n                }} />\n                <Button \n                  icon=\"chevron-right\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let nextYear = parseInt(localStorage.getItem(CSLS.INSIGHT_CLASSPASSES_YEAR)) + 1                    \n                    localStorage.setItem(CSLS.INSIGHT_CLASSPASSES_YEAR, nextYear) \n\n                    refetchData(nextYear)\n                }} />\n              </Button.List> \n            </div>\n          </Page.Header>\n          <Grid.Row>\n            {children}\n          </Grid.Row>\n        </Container>  \n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(InsightClasspassesBase))","import React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport C3Chart from \"react-c3js\"\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { refreshTokenAndOpenExportLinkInNewTab } from \"../../../tools/refresh_token_and_open_export_link\"\n\nimport {\n  colors,\n  Grid,\n  Button,\n  Card,\n} from \"tabler-react\";\n// import ContentCard from \"../../general/ContentCard\"\nimport { GET_CLASSPASSES_SOLD_QUERY, GET_CLASSPASSES_ACTIVE_QUERY } from './queries'\nimport { TOKEN_REFRESH } from \"../../../queries/system/auth\"\nimport InsightClasspassesBase from './InsightClasspassesBase'\n\nfunction InsightClasspasses ({ t, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const year = localStorage.getItem(CSLS.INSIGHT_CLASSPASSES_YEAR)\n  const export_url_active = \"/d/export/insight/classpasses/active/\" + year\n  const export_url_sold = \"/d/export/insight/classpasses/sold/\" + year\n\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n\n  const { \n    loading: loadingSold, \n    error: errorSold, \n    data: dataSold,\n    refetch: refetchSold\n   } = useQuery(GET_CLASSPASSES_SOLD_QUERY, {\n    variables: { year: year }\n  })\n\n  const { \n    loading: loadingActive, \n    error: errorActive, \n    data: dataActive,\n    refetch: refetchActive\n   } = useQuery(GET_CLASSPASSES_ACTIVE_QUERY, {\n    variables: { year: year }\n  })\n\n\n  if (loadingSold || loadingActive) {\n    return (\n      <InsightClasspassesBase year={year}>\n        {t(\"general.loading_with_dots\")}\n      </InsightClasspassesBase>\n    )\n  }\n\n  if (errorSold || errorActive) {\n    return (\n      <InsightClasspassesBase year={year}>\n        {t(\"general.error_sad_smiley\")}\n      </InsightClasspassesBase>\n    )\n  }\n\n  function refetchData(year) {\n    refetchActive({year: year})\n    refetchSold({year: year})\n  }\n\n  console.log(dataSold)\n  console.log(dataActive)\n\n  const data_sold_label = t(\"insight.classpasses.sold.title\")\n  const chart_data_sold = dataSold.insightAccountClasspassesSold.data\n  console.log(\"chart_data sold\")\n  console.log(data_sold_label, ...chart_data_sold)\n\n  const data_active_label = t(\"insight.classpasses.active.title\")\n  const chart_data_active = dataActive.insightAccountClasspassesActive.data\n  console.log(\"chart_data active\")\n  console.log(data_sold_label, ...chart_data_active)\n\n\n  return (\n    <InsightClasspassesBase year={year} refetchData={refetchData}>\n      {/* <Grid.Row> */}\n        <Grid.Col md={9}>\n          <Card title={t('general.chart')}>\n            <Card.Body>\n              <C3Chart\n                style={{ height: \"16rem\" }}\n                data={{\n                  x: 'x',\n                  columns: [\n                    // each columns data as array, starting with \"name\" and then containing data\n                    [ 'x',\n                      t(\"datetime.months.short_january\"),\n                      t(\"datetime.months.short_february\"),\n                      t(\"datetime.months.short_march\"),\n                      t(\"datetime.months.short_april\"),\n                      t(\"datetime.months.short_may\"),\n                      t(\"datetime.months.short_june\"),\n                      t(\"datetime.months.short_july\"),\n                      t(\"datetime.months.short_august\"),\n                      t(\"datetime.months.short_september\"),\n                      t(\"datetime.months.short_october\"),\n                      t(\"datetime.months.short_november\"),\n                      t(\"datetime.months.short_decemer\"),\n                    ],\n                    [ 'sold', ...chart_data_sold],\n                    [ 'active', ...chart_data_active],\n                  ],\n                  type: \"area\", // default type of chart\n                  groups: [['sold'], ['active']],\n                  colors: {\n                    sold: colors[\"blue\"],\n                    active: colors[\"green\"],\n                  },\n                  names: {\n                    // name of each serie\n                    sold: data_sold_label,\n                    active: data_active_label,\n                  },\n                  \n                }}\n                axis={{\n                  y: {\n                    padding: {\n                      bottom: 0,\n                    },\n                    show: true,\n                  },\n                  x: {\n                    padding: {\n                      left: 0,\n                      right: 0,\n                    },\n                    type: 'category',\n                    show: true,\n                  },\n                }}\n                tooltip={{\n                  format: {\n                    title: function(x) {\n                      return \"\";\n                    },\n                  },\n                }}\n                padding={{\n                  bottom: 0,\n                  // left: -1,\n                  right: -1,\n                }}\n                point={{\n                  show: false,\n                }}\n              />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={3}>\n          {/* Export as sold as excel sheet */}\n          <Button\n            block\n            color=\"secondary\"\n            RootComponent=\"a\"\n            icon=\"download-cloud\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url_sold\n            )}\n          >\n            {t(\"insight.classpasses.sold.export_excel\")}\n          </Button>\n          {/* Export as active as excel sheet */}\n          <Button\n            block\n            color=\"secondary\"\n            RootComponent=\"a\"\n            icon=\"download-cloud\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url_active\n            )}\n          >\n            {t(\"insight.classpasses.active.export_excel\")}\n          </Button>\n        </Grid.Col>\n      {/* </Grid.Row> */}\n    </InsightClasspassesBase>\n  //   <SiteWrapper>\n  //     <div className=\"my-3 my-md-5\">\n  //       <Container>\n  //         <Page.Header title={t(\"insight.title\")} subTitle={t(\"general.classpasses\") + \" \" + year}>\n  //           <div className=\"page-options d-flex\">\n  //             <InsightBackHome />\n  //           </div>\n  //         </Page.Header>\n\n  //       </Container>  \n  //     </div>\n  //   </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(InsightClasspasses))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SUBSCRIPTIONS_SOLD_QUERY = gql`\n  query InsightAccountSubscriptionsSold($year: Int!) {\n    insightAccountSubscriptionsSold(year: $year) {\n      description\n      data\n      year\n    }\n  }\n`\n\n\nexport const GET_SUBSCRIPTIONS_ACTIVE_QUERY = gql`\n  query InsightAccountSubscriptionsActive($year: Int!) {\n    insightAccountSubscriptionsActive(year: $year) {\n      description\n      data\n      year\n    }\n  }\n`","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport moment from 'moment'\n\nimport {\n  Button,\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport InsightBackHome from '../InsightBackHome'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR)) {\n  console.log('year from not found... defaulting to today...')\n  localStorage.setItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR, moment().format('YYYY')) \n} \n\nfunction InsightSubscriptionsBase ({ t, history, children, year, refetchData=f=>f}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"insight.title\")} subTitle={t(\"general.subscriptions\") + \" \" + year}>\n            <div className=\"page-options d-flex\">\n              <InsightBackHome />\n              <Button.List className=\"schedule-list-page-options-btn-list\">\n                <Button \n                  icon=\"chevron-left\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let previousYear = parseInt(localStorage.getItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR)) - 1                    \n                    localStorage.setItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR, previousYear) \n\n                    refetchData(previousYear)\n                }} />\n                <Button \n                  icon=\"sunset\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let currentYear = moment().format('YYYY')\n                    localStorage.setItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR, currentYear) \n                    \n                    refetchData(currentYear)\n                }} />\n                <Button \n                  icon=\"chevron-right\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let nextYear = parseInt(localStorage.getItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR)) + 1                    \n                    localStorage.setItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR, nextYear) \n\n                    refetchData(nextYear)\n                }} />\n              </Button.List> \n            </div>\n          </Page.Header>\n          <Grid.Row>\n            {children}\n          </Grid.Row>\n        </Container>  \n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(InsightSubscriptionsBase))","import React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport C3Chart from \"react-c3js\"\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { refreshTokenAndOpenExportLinkInNewTab } from \"../../../tools/refresh_token_and_open_export_link\"\n\nimport {\n  colors,\n  Grid,\n  Button,\n  Card,\n} from \"tabler-react\";\n// import ContentCard from \"../../general/ContentCard\"\nimport { GET_SUBSCRIPTIONS_SOLD_QUERY, GET_SUBSCRIPTIONS_ACTIVE_QUERY } from './queries'\nimport { TOKEN_REFRESH } from \"../../../queries/system/auth\"\nimport InsightSubscriptionsBase from './InsightSubscriptionsBase'\n\nfunction InsightSubscriptions ({ t, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const year = localStorage.getItem(CSLS.INSIGHT_SUBSCRIPTIONS_YEAR)\n  const export_url_active = \"/d/export/insight/subscriptions/active/\" + year\n  const export_url_sold = \"/d/export/insight/subscriptions/sold/\" + year\n\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n\n  const { \n    loading: loadingSold, \n    error: errorSold, \n    data: dataSold,\n    refetch: refetchSold\n   } = useQuery(GET_SUBSCRIPTIONS_SOLD_QUERY, {\n    variables: { year: 2020 }\n  })\n\n  const { \n    loading: loadingActive, \n    error: errorActive, \n    data: dataActive,\n    refetch: refetchActive\n   } = useQuery(GET_SUBSCRIPTIONS_ACTIVE_QUERY, {\n    variables: { year: 2020 }\n  })\n\n\n  if (loadingSold || loadingActive) {\n    return (\n      <InsightSubscriptionsBase year={year}>\n        {t(\"general.loading_with_dots\")}\n      </InsightSubscriptionsBase>\n    )\n  }\n\n  if (errorSold || errorActive) {\n    return (\n      <InsightSubscriptionsBase year={year}>\n        {t(\"general.error_sad_smiley\")}\n      </InsightSubscriptionsBase>\n    )\n  }\n\n\n  function refetchData(year) {\n    refetchActive({year: year})\n    refetchSold({year: year})\n  }\n\n  console.log(dataSold)\n  console.log(dataActive)\n\n  const data_sold_label = t(\"insight.subscriptions.sold.title\")\n  const chart_data_sold = dataSold.insightAccountSubscriptionsSold.data\n  console.log(\"chart_data sold\")\n  console.log(data_sold_label, ...chart_data_sold)\n\n  const data_active_label = t(\"insight.subscriptions.active.title\")\n  const chart_data_active = dataActive.insightAccountSubscriptionsActive.data\n  console.log(\"chart_data active\")\n  console.log(data_sold_label, ...chart_data_active)\n\n\n  return (\n    <InsightSubscriptionsBase year={year} refetchData={refetchData}>\n      {/* <Grid.Row> */}\n        <Grid.Col md={9}>\n          <Card title={t('general.chart')}>\n            <Card.Body>\n              <C3Chart\n                style={{ height: \"16rem\" }}\n                data={{\n                  x: 'x',\n                  columns: [\n                    // each columns data as array, starting with \"name\" and then containing data\n                    [ 'x',\n                      t(\"datetime.months.short_january\"),\n                      t(\"datetime.months.short_february\"),\n                      t(\"datetime.months.short_march\"),\n                      t(\"datetime.months.short_april\"),\n                      t(\"datetime.months.short_may\"),\n                      t(\"datetime.months.short_june\"),\n                      t(\"datetime.months.short_july\"),\n                      t(\"datetime.months.short_august\"),\n                      t(\"datetime.months.short_september\"),\n                      t(\"datetime.months.short_october\"),\n                      t(\"datetime.months.short_november\"),\n                      t(\"datetime.months.short_decemer\"),\n                    ],\n                    [ 'sold', ...chart_data_sold],\n                    [ 'active', ...chart_data_active],\n                  ],\n                  type: \"area\", // default type of chart\n                  groups: [['sold'], ['active']],\n                  colors: {\n                    sold: colors[\"blue\"],\n                    active: colors[\"green\"],\n                  },\n                  names: {\n                    // name of each serie\n                    sold: data_sold_label,\n                    active: data_active_label,\n                  },\n                  \n                }}\n                axis={{\n                  y: {\n                    padding: {\n                      bottom: 0,\n                    },\n                    show: true,\n                  },\n                  x: {\n                    padding: {\n                      left: 0,\n                      right: 0,\n                    },\n                    type: 'category',\n                    show: true,\n                  },\n                }}\n                tooltip={{\n                  format: {\n                    title: function(x) {\n                      return \"\";\n                    },\n                  },\n                }}\n                padding={{\n                  bottom: 0,\n                  // left: -1,\n                  right: -1,\n                }}\n                point={{\n                  show: false,\n                }}\n              />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={3}>\n          {/* Export as sold as excel sheet */}\n          <Button\n            block\n            color=\"secondary\"\n            RootComponent=\"a\"\n            icon=\"download-cloud\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url_sold\n            )}\n          >\n            {t(\"insight.subscriptions.sold.export_excel\")}\n          </Button>\n          {/* Export as active as excel sheet */}\n          <Button\n            block\n            color=\"secondary\"\n            RootComponent=\"a\"\n            icon=\"download-cloud\"\n            onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n              doTokenRefresh, history, export_url_active\n            )}\n          >\n            {t(\"insight.subscriptions.active.export_excel\")}\n          </Button>\n        </Grid.Col>\n      {/* </Grid.Row> */}\n    </InsightSubscriptionsBase>\n  //   <SiteWrapper>\n  //     <div className=\"my-3 my-md-5\">\n  //       <Container>\n  //         <Page.Header title={t(\"insight.title\")} subTitle={t(\"general.classpasses\") + \" \" + year}>\n  //           <div className=\"page-options d-flex\">\n  //             <InsightBackHome />\n  //           </div>\n  //         </Page.Header>\n\n  //       </Container>  \n  //     </div>\n  //   </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(InsightSubscriptions))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\n\n\nlet classpasses_active\nlet classtypes_active\nlet discoveries_active\nlet documents_active\nlet languages_active\nlet locations_active\nlet levels_active\nlet holidays_active\nlet memberships_active\nlet subscriptions_active\nlet appointments_active\nlet organization_active\nlet organization_branding_active\nlet announcements_active\n\nconst OrganizationMenu = ({ t, activeLink }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'classpasses') ? classpasses_active = true: classpasses_active = false}\n        {(activeLink === 'classtypes') ? classtypes_active = true: classtypes_active = false}\n        {(activeLink === 'discoveries') ? discoveries_active = true: discoveries_active = false}\n        {(activeLink === 'documents') ? documents_active = true: documents_active = false}\n        {(activeLink === 'languages') ? languages_active = true: languages_active = false}\n        {(activeLink === 'locations') ? locations_active = true: locations_active = false}\n        {(activeLink === 'levels') ? levels_active = true: levels_active = false}\n        {(activeLink === 'holidays') ? holidays_active = true: holidays_active = false}\n        {(activeLink === 'memberships') ? memberships_active = true: memberships_active = false}\n        {(activeLink === 'subscriptions') ? subscriptions_active = true: subscriptions_active = false}\n        {(activeLink === 'appointments') ? appointments_active = true: appointments_active = false}\n        {(activeLink === 'organization') ? organization_active = true: organization_active = false}\n        {(activeLink === 'organization_branding') ? organization_branding_active = true: organization_branding_active = false}\n        {(activeLink === 'announcements') ? announcements_active = true: announcements_active = false}\n        \n\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/edit/T3JnYW5pemF0aW9uTm9kZToxMDA=\"\n            icon=\"layout\"\n            active={organization_active}\n            >\n            {t('organization.organization.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/locations\"\n            icon=\"home\"\n            active={locations_active}\n            >\n            {t('organization.locations.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/classtypes\"\n            icon=\"book-open\"\n            active={classtypes_active}\n            >\n            {t('organization.classtypes.title')}\n        </List.GroupItem>\n        {/* <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/memberships\"\n            icon=\"clipboard\"\n            active={memberships_active}\n            >\n            {t('organization.memberships.title')}\n        </List.GroupItem> */}\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/classpasses\"\n            icon=\"credit-card\"\n            active={classpasses_active}\n            >\n            {t('organization.classpasses.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/subscriptions\"\n            icon=\"edit\"\n            active={subscriptions_active}\n            >\n            {t('organization.subscriptions.title')}\n        </List.GroupItem>\n        {/* <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/appointment_categories\"\n            icon=\"calendar\"\n            active={appointments_active}\n            >\n            {t('organization.appointments.title')}\n        </List.GroupItem> */}\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/levels\"\n            icon=\"tag\"\n            active={levels_active}\n            >\n            {t('organization.levels.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/holidays\"\n            icon=\"sun\"\n            active={holidays_active}\n            >\n            {t('organization.holidays.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/discoveries\"\n            icon=\"compass\"\n            active={discoveries_active}\n            >\n            {t('organization.discoveries.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/languages\"\n            icon=\"flag\"\n            active={languages_active}\n            >\n            {t('organization.languages.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/edit/T3JnYW5pemF0aW9uTm9kZToxMDA=/branding\"\n            icon=\"image\"\n            active={organization_branding_active}\n            >\n            {t('organization.organization.branding.title')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/organization/documents/T3JnYW5pemF0aW9uTm9kZToxMDA=\"\n            icon=\"briefcase\"\n            active={documents_active}\n            >\n            {t('organization.documents.title')}\n        </List.GroupItem>\n        <HasPermissionWrapper permission=\"view\"\n                              resource=\"organizationannouncement\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to=\"#/organization/announcements\"\n                icon=\"message-square\"\n                active={announcements_active}\n                >\n                {t('organization.announcements.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n    </List.Group>\n);\n\nexport default withTranslation()(OrganizationMenu)","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Container,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nclass OrganizationHome extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"School home props:\")\n    console.log(props)\n  }\n\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"organization.title\")} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n                <Grid.Row>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/edit/T3JnYW5pemF0aW9uTm9kZToxMDA='>\n                      <StampCard header={<small>{t('organization.organization.title')}</small>} footer={t('')} color=\"blue\" icon=\"layout\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/locations'>\n                      <StampCard header={<small>{t('organization.locations.title')}</small>} footer={t('')} color=\"blue\" icon=\"home\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/classtypes'>\n                      <StampCard header={<small>{t('organization.classtypes.title')}</small>} footer={t('')} color=\"blue\" icon=\"book-open\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/classpasses'>\n                      <StampCard header={<small>{t('organization.classpasses.title')}</small>} footer={t('')} color=\"blue\" icon=\"credit-card\" />\n                    </Link>\n                  </Grid.Col>\n                  {/* <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/memberships'>\n                      <StampCard header={<small>{t('organization.memberships.title')}</small>} footer={t('')} color=\"blue\" icon=\"clipboard\" />\n                    </Link>\n                  </Grid.Col> */}\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/subscriptions'>\n                      <StampCard header={<small>{t('organization.subscriptions.title')}</small>} footer={t('')} color=\"blue\" icon=\"edit\" />\n                    </Link>\n                  </Grid.Col>\n                  {/* <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/appointment_categories'>\n                      <StampCard header={<small>{t('organization.appointments.title')}</small>} footer={t('')} color=\"blue\" icon=\"calendar\" />\n                    </Link>\n                  </Grid.Col> */}\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/levels'>\n                      <StampCard header={<small>{t('organization.levels.title')}</small>} footer={t('')} color=\"blue\" icon=\"tag\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/holidays'>\n                      <StampCard header={<small>{t('organization.holidays.title')}</small>} footer={t('')} color=\"blue\" icon=\"sun\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/discoveries'>\n                      <StampCard header={<small>{t('organization.discoveries.title')}</small>} footer={t('')} color=\"blue\" icon=\"compass\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/languages'>\n                      <StampCard header={<small>{t('organization.languages.title')}</small>} footer={t('')} color=\"blue\" icon=\"flag\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/edit/T3JnYW5pemF0aW9uTm9kZToxMDA=/branding'>\n                      <StampCard header={<small>{t('organization.organization.branding.title')}</small>} footer={t('')} color=\"blue\" icon=\"image\" />\n                    </Link>\n                  </Grid.Col>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/organization/documents/T3JnYW5pemF0aW9uTm9kZToxMDA='>\n                      <StampCard header={<small>{t('organization.documents.title')}</small>} footer={t('')} color=\"blue\" icon=\"briefcase\" />\n                    </Link>\n                  </Grid.Col>\n                  <HasPermissionWrapper permission=\"view\"\n                                        resource=\"organizationannouncement\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/organization/announcements'>\n                        <StampCard header={<small>{t('organization.announcements.title')}</small>} footer={t('')} color=\"blue\" icon=\"message-square\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                </Grid.Row>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <OrganizationMenu />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationHome))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ORGANIZATION_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .required(t('yup.field_required')),\n    address: Yup.string(),\n    phone: Yup.string(),\n    email: Yup.string()\n      .email(t('yup.email')),\n    registration: Yup.string(),\n    taxRegistration: Yup.string(),\n  })\n","export const customFileInputLabelStyle = {\n    whiteSpace: \"nowrap\",\n    display: \"block\",\n    overflow: \"hidden\"\n  }  \n  ","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\nimport { customFileInputLabelStyle } from \"../../../tools/custom_file_input_label_style\"\n\n\nconst OrganizationForm = ({ \n  t, \n  history, \n  isSubmitting, \n  errors, \n  values, \n  setFieldTouched, \n  setFieldValue,\n}) => (\n    <FoForm>\n      <Card.Body>\n        <Form.Group label={t('general.name')}>\n          <Field type=\"text\" \n                  name=\"name\" \n                  className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Form.Group label={t('general.address')}>\n          <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"address\"\n            initialValue={values.address}\n            init={tinymceBasicConf}\n            onBlur={(e) => {\n              setFieldValue(\"address\", e.target.getContent())\n              setFieldTouched(\"address\", true, true)\n            }}\n          />\n          <ErrorMessage name=\"address\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.phone')}>\n              <Field type=\"text\" \n                      name=\"phone\" \n                      className={(errors.phone) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"phone\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.email')}>\n              <Field type=\"text\" \n                      name=\"email\" \n                      className={(errors.email) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"email\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('organization.organization.registration')}>\n              <Field type=\"text\" \n                      name=\"registration\" \n                      className={(errors.registration) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"registration\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('organization.organization.tax_registration')}>\n              <Field type=\"text\" \n                      name=\"taxRegistration\" \n                      className={(errors.taxRegistration) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"taxRegistration\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n          color=\"primary\"\n          // className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n          >\n          {t('general.submit')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Page,\n  Grid,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationEditBase({t, match, history, children}) {\n  const id = match.params.id\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('organization.title')}>\n            <div className=\"page-options d-flex\">\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n            <Card>\n              <Card.Header>\n                <Card.Title>{t('organization.organization.title_edit')}</Card.Title>\n              </Card.Header>\n              {children}\n            </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <h5>{t(\"general.menu\")}</h5>\n              <OrganizationMenu activeLink='organization'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationEditBase))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ORGANIZATION_QUERY } from './queries'\nimport { ORGANIZATION_SCHEMA } from './yupSchema'\nimport OrganizationForm from './OrganizationForm'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationEditBase from \"./OrganizationEditBase\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nconst UPDATE_ORGANIZATION = gql`\n  mutation UpdateOrganization($input: UpdateOrganizationInput!) {\n    updateOrganization(input: $input) {\n      organization {\n        id\n        name\n      }\n    }\n  }\n`\n\n\nfunction OrganizationEdit({t, match, history}) {\n  const id = match.params.id\n\n  const [updateOrganization] = useMutation(UPDATE_ORGANIZATION)\n  const { loading, error, data, fetchMore } = useQuery(GET_ORGANIZATION_QUERY, {\n    variables: {\n      id: id\n  }})\n\n  if (loading) return (\n    <OrganizationEditBase>\n      {t(\"general.loading_with_dots\")}\n    </OrganizationEditBase>\n  )\n  if (error) return (\n    <OrganizationEditBase>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </OrganizationEditBase>\n  )\n\n  const initialData = data.organization\n\n  return (\n \n    <OrganizationEditBase>\n      <Formik\n        initialValues={{ \n          name: initialData.name, \n          address: initialData.address,\n          phone: initialData.phone,\n          email: initialData.email,\n          registration: initialData.registration,\n          taxRegistration: initialData.taxRegistration,\n        }}\n        validationSchema={ORGANIZATION_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log('submit values:')\n          console.log(values)\n\n          updateOrganization({ variables: {\n            input: {\n              id: match.params.id,\n              name: values.name,\n              address: values.address,\n              phone: values.phone,\n              email: values.email,\n              registration: values.registration,\n              taxRegistration: values.taxRegistration,\n            }\n          }})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('organization.organization.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n          }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <OrganizationForm \n            isSubmitting={isSubmitting}\n            values={values}\n            errors={errors}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n          />\n        )}\n      </Formik>\n    </OrganizationEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Page,\n  Grid,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nfunction OrganizationBrandingBase({t, match, history, children}) {\n  const id = match.params.id\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('organization.title')} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <h3>{t('organization.organization.branding.title')}</h3>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <h5>{t(\"general.menu\")}</h5>\n              <OrganizationMenu activeLink='organization_branding'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationBrandingBase))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ORGANIZATION_QUERY } from '../queries'\n\nimport {\n  Button,\n  GalleryCard,\n  Grid,\n  Icon\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationBrandingBase from \"./OrganizationBrandingBase\"\n\n\nconst UPDATE_ORGANIZATION = gql`\n  mutation UpdateOrganization($input: UpdateOrganizationInput!) {\n    updateOrganization(input: $input) {\n      organization {\n        id\n        name\n      }\n    }\n  }\n`\n\n\nfunction OrganizationBranding({t, match, history}) {\n  const id = match.params.id\n\n  const [updateOrganization] = useMutation(UPDATE_ORGANIZATION)\n  const { loading, error, data, fetchMore } = useQuery(GET_ORGANIZATION_QUERY, {\n    variables: {\n      id: id\n  }})\n\n  if (loading) return (\n    <OrganizationBrandingBase>\n      {t(\"general.loading_with_dots\")}\n    </OrganizationBrandingBase>\n  )\n  if (error) return (\n    <OrganizationBrandingBase>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </OrganizationBrandingBase>\n  )\n\n  const organization = data.organization\n\n  return (\n \n    <OrganizationBrandingBase>\n        <Grid.Row>\n          <Grid.Col md={4}>\n            <GalleryCard>\n              <h5>{t('organization.branding.logo_login')}</h5>\n              <GalleryCard.Image\n                src={organization.urlLogoLogin}\n              >\n              </GalleryCard.Image>\n              <GalleryCard.Details>\n                <Link to={`/organization/edit/${id}/branding/logoLogin`}>\n                  <Button block color=\"secondary\">\n                    {t(\"organization.branding.link_change\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </GalleryCard.Details>\n            </GalleryCard>\n          </Grid.Col>\n          <Grid.Col md={4}>\n            <GalleryCard>\n              <h5>{t('organization.branding.logo_invoice')}</h5>\n              <GalleryCard.Image\n                src={organization.urlLogoInvoice}\n              >\n              </GalleryCard.Image>\n              <GalleryCard.Details>\n                <Link to={`/organization/edit/${id}/branding/logoInvoice`}>\n                  <Button block color=\"secondary\">\n                    {t(\"organization.branding.link_change\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </GalleryCard.Details>\n            </GalleryCard>\n          </Grid.Col>\n          <Grid.Col md={4}>\n            <GalleryCard>\n              <h5>{t('organization.branding.logo_email')}</h5>\n              <GalleryCard.Image\n                src={organization.urlLogoEmail}\n              >\n              </GalleryCard.Image>\n              <GalleryCard.Details>\n                <Link to={`/organization/edit/${id}/branding/logoEmail`}>\n                  <Button block color=\"secondary\">\n                    {t(\"organization.branding.link_change\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </GalleryCard.Details>\n            </GalleryCard>\n          </Grid.Col>\n          <Grid.Col md={4}>\n            <GalleryCard>\n              <h5>{t('organization.branding.logo_shop_header')}</h5>\n              <GalleryCard.Image\n                src={organization.urlLogoShopHeader}\n              >\n              </GalleryCard.Image>\n              <GalleryCard.Details>\n                <Link to={`/organization/edit/${id}/branding/logoShopHeader`}>\n                  <Button block color=\"secondary\">\n                    {t(\"organization.branding.link_change\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </GalleryCard.Details>\n            </GalleryCard>\n          </Grid.Col>\n          <Grid.Col md={4}>\n            <GalleryCard>\n              <h5>{t('organization.branding.logo_self_checkin')}</h5>\n              <GalleryCard.Image\n                src={organization.urlLogoSelfCheckin}\n              >\n              </GalleryCard.Image>\n              <GalleryCard.Details>\n                <Link to={`/organization/edit/${id}/branding/logoSelfCheckin`}>\n                  <Button block color=\"secondary\">\n                    {t(\"organization.branding.link_change\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </GalleryCard.Details>\n            </GalleryCard>\n          </Grid.Col>\n        </Grid.Row>\n    </OrganizationBrandingBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationBranding))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { customFileInputLabelStyle } from \"../../../../tools/custom_file_input_label_style\"\n\n\nconst OrganizationBrandingEditForm = ({ \n  t, \n  history, \n  formTitle,\n  isSubmitting, \n  inputFileName, \n  fileInputLabel, \n  handleFileInputChange=f=>f\n}) => (\n    <FoForm>\n      <Card title={formTitle}>\n        <Card.Body>\n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group label={t('general.custom_file_input_label')}>\n                <div className=\"custom-file\">\n                  <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                  <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                    {fileInputLabel}\n                  </label>\n                </div>\n              </Form.Group>\n            </Grid.Col>\n          </Grid.Row>\n        </Card.Body>\n        <Card.Footer>\n            <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n            >\n            {t('general.submit')}\n            </Button>\n        </Card.Footer>\n      </Card>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationBrandingEditForm))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ORGANIZATION_QUERY } from '../queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationBrandingBase from \"./OrganizationBrandingBase\"\nimport OrganizationBrandingEditForm from \"./OrganizationBrandingEditForm\"\nimport { updateLocale } from 'moment'\n\n\nconst UPDATE_ORGANIZATION = gql`\n  mutation UpdateOrganization($input: UpdateOrganizationInput!) {\n    updateOrganization(input: $input) {\n      organization {\n        id\n      }\n    }\n  }\n`\n\n\nfunction OrganizationBrandingEdit({t, match, history}) {\n  const id = match.params.id\n  const updateField = match.params.update_field\n  const returnUrl = `/organization/edit/${id}/branding`\n\n  let formTitle = \"\"\n  switch (updateField) {\n    case \"logoLogin\":\n      formTitle = t(\"organization.branding.logo_login\")\n      break\n    default:\n      break\n  }\n\n\n  const [updateOrganization] = useMutation(UPDATE_ORGANIZATION)\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n\n  return (\n \n    <OrganizationBrandingBase>\n      <Formik\n        initialValues={{}}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"Submit values\")\n          console.log(values)\n          console.log(fileName)\n\n          let inputVars = {\n            id: id\n          }\n\n          let reader = new FileReader()\n          reader.onload = function(reader_event) {\n            console.log(reader_event.target.result)\n            let b64_enc_file = reader_event.target.result\n            console.log(b64_enc_file)\n            // Add uploaded document b64 encoded blob to input vars\n            switch(updateField) {\n              case \"logoLogin\":\n                inputVars.logoLoginFileName = fileName\n                inputVars.logoLogin = b64_enc_file\n                break\n              case \"logoInvoice\":\n                inputVars.logoInvoiceFileName = fileName\n                inputVars.logoInvoice = b64_enc_file\n                break\n              case \"logoEmail\":\n                inputVars.logoEmailFileName = fileName\n                inputVars.logoEmail = b64_enc_file\n                break\n              case \"logoShopHeader\":\n                inputVars.logoShopHeaderFileName = fileName\n                inputVars.logoShopHeader = b64_enc_file\n                break\n              case \"logoSelfCheckin\":\n                inputVars.logoSelfCheckinFileName = fileName\n                inputVars.logoSelfCheckin = b64_enc_file\n                break\n              default:\n                break              \n            }\n            \n            updateOrganization({ variables: {\n              input: inputVars\n            }, refetchQueries: [\n                {query: GET_ORGANIZATION_QUERY, variables: {id: id}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                setSubmitting(false)\n                history.push(returnUrl)\n                toast.success((t('organization.branding.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n          \n          let file = inputFileName.current.files[0]\n          if (file && file.size < 5242880) {\n            reader.readAsDataURL(file)\n          } else if (file && file.size > 5242880) { \n            toast.error(t(\"error_messages.selected_file_exceeds_max_filesize\"), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n            setSubmitting(false)\n          } else {\n            toast.error(t(\"general.please_select_a_file\"), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n            setSubmitting(false)\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <OrganizationBrandingEditForm \n            isSubmitting={isSubmitting}\n            formTitle={formTitle}\n            inputFileName={inputFileName}\n            fileInputLabel={fileInputLabel}\n            handleFileInputChange={handleFileInputChange}\n          />\n        )}\n      </Formik>\n    </OrganizationBrandingBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationBrandingEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationAnnouncementsBase({t, history, children, showEditBack=false}) {\n  return (\n    <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"organization.title\")} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n            {children}\n          </Grid.Col>\n          <Grid.Col md={3}>\n            {(showEditBack) ?\n              <Link to=\"/organization/announcements\">\n                <Button color=\"primary btn-block mb-6\">\n                  <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                </Button>\n              </Link>\n            :\n              <HasPermissionWrapper permission=\"add\"\n                          resource=\"organizationlevel\">\n                <Link to=\"/organization/announcements/add\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.announcements.add')}\n                  </Button>\n                </Link>\n                </HasPermissionWrapper>\n            }\n            <OrganizationMenu activeLink='announcements'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationAnnouncementsBase))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ANNOUNCEMENTS_QUERY = gql`\n  query OrganizationAnnouncements($after: String, $before: String) {\n    organizationAnnouncements(first: 15, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          displayPublic\n          displayShop\n          displayBackend\n          title\n          content\n          dateStart\n          dateEnd\n          priority\n        }\n      }\n    }\n  }\n`\n\nexport const GET_ANNOUNCEMENT_QUERY = gql`\n  query OrganizationAnnouncement($id: ID!) {\n    organizationAnnouncement(id:$id) {\n      id\n      displayPublic\n      displayShop\n      displayBackend\n      title\n      content\n      dateStart\n      dateEnd\n      priority\n    }\n  }\n`\n\nexport const ADD_ANNOUNCEMENT = gql`\n  mutation CreateOrganizationAnnouncement($input:CreateOrganizationAnnouncementInput!) {\n    createOrganizationAnnouncement(input: $input) {\n      organizationAnnouncement {\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_ANNOUNCEMENT = gql`\n  mutation UpdateOrganizationAnnouncement($input: UpdateOrganizationAnnouncementInput!) {\n    updateOrganizationAnnouncement(input: $input) {\n      organizationAnnouncement {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_ANNOUNCEMENT = gql`\nmutation DeleteOrganizationAnnouncement($input: DeleteOrganizationAnnouncementInput!) {\n  deleteOrganizationAnnouncement(input: $input) {\n    ok\n  }\n}\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\n\nimport {\n  Dimmer,\n  Button,\n  Icon,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport AppSettingsContext from '../../context/AppSettingsContext'\nimport ContentCard from \"../../general/ContentCard\"\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport OrganizationAnnouncementsBase from \"./OrganizationAnnouncementsBase\"\n\nimport { GET_ANNOUNCEMENTS_QUERY, DELETE_ANNOUNCEMENT } from \"./queries\"\n\nfunction OrganizationAnnouncements({ t, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ANNOUNCEMENTS_QUERY)\n  const [ deleteAnnouncement ] = useMutation(DELETE_ANNOUNCEMENT)\n\n  const cardTitle = t('organization.announcements.title')\n\n  // Loading\n  if (loading) return (\n    <OrganizationAnnouncementsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationAnnouncementsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationAnnouncementsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.announcements.error_loading')}</p>\n      </ContentCard>\n    </OrganizationAnnouncementsBase>\n  )\n\n  const organizationAnnouncements = data.organizationAnnouncements\n\n  // Empty list\n  if (!organizationAnnouncements.edges.length) { return (\n    <OrganizationAnnouncementsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.announcements.empty_list')}</p>\n      </ContentCard>\n    </OrganizationAnnouncementsBase>\n  )}\n\n  return (\n    <OrganizationAnnouncementsBase>\n      <ContentCard cardTitle={cardTitle}\n                    pageInfo={organizationAnnouncements.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: organizationAnnouncements.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationAnnouncements.edges\n                        const pageInfo = fetchMoreResult.organizationAnnouncements.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new organizationAnnouncements at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationAnnouncements: {\n                                __typename: previousResult.organizationAnnouncements.__typename,\n                                edges: [ ...previousResult.organizationAnnouncements.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.title')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.display_public')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.backend')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.priority')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                  {organizationAnnouncements.edges.map(({ node }) => (\n                    <Table.Row key={v4()}>\n                      <Table.Col key={v4()}>\n                        {node.title}\n                      </Table.Col>\n                      <Table.Col><BadgeBoolean value={node.displayPublic} /></Table.Col>\n                      <Table.Col><BadgeBoolean value={node.displayShop} /></Table.Col>\n                      <Table.Col><BadgeBoolean value={node.displayBackend} /></Table.Col>\n                      <Table.Col>{moment(node.dateStart).format(dateFormat)}</Table.Col>\n                      <Table.Col>{(node.dateEnd) ? moment(node.dateEnd).format(dateFormat): \"\"}</Table.Col>\n                      <Table.Col>{node.priority}</Table.Col>\n                      <Table.Col className=\"text-right\" key={v4()}>\n                        <Link to={`/organization/announcements/edit/${node.id}`}>\n                          <Button className='btn-sm' \n                                  color=\"secondary\">\n                            {t('general.edit')}\n                          </Button>\n                        </Link>\n                      </Table.Col>\n                      <Table.Col>\n                        <button \n                          className=\"icon btn btn-link btn-sm\" \n                          title={t('general.delete')} \n                          href=\"\"\n                          onClick={() => {\n                            confirm_delete({\n                              t: t,\n                              msgConfirm: t(\"organization.announcements.delete_confirm_msg\"),\n                              msgDescription: <p><br />{node.title}</p>,\n                              msgSuccess: t('organization.announcements.deleted'),\n                              deleteFunction: deleteAnnouncement,\n                              functionVariables: { variables: {\n                                input: {\n                                  id: node.id\n                                }\n                              }, refetchQueries: [\n                                {query: GET_ANNOUNCEMENTS_QUERY} \n                              ]}\n                            })\n                        }}>\n                          <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                        </button>\n                      </Table.Col>\n                      {/* <Mutation mutation={ARCHIVE_LEVEL} key={v4()}>\n                        {(archiveCostcenter, { data }) => (\n                          <Table.Col className=\"text-right\" key={v4()}>\n                            <button className=\"icon btn btn-link btn-sm\" \n                                title={t('general.archive')} \n                                href=\"\"\n                                onClick={() => {\n                                  console.log(\"clicked archived\")\n                                  let id = node.id\n                                  archiveCostcenter({ variables: {\n                                    input: {\n                                    id,\n                                    archived: !archived\n                                    }\n                            }, refetchQueries: [\n                                {query: GET_LEVELS_QUERY, variables: {\"archived\": archived }}\n                            ]}).then(({ data }) => {\n                              console.log('got data', data);\n                              toast.success(\n                                (archived) ? t('general.unarchived'): t('general.archived'), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error);\n                            })\n                            }}>\n                              <Icon prefix=\"fa\" name=\"inbox\" />\n                            </button>\n                          </Table.Col>\n                        )}\n                      </Mutation> */}\n                    </Table.Row>\n                  ))}\n              </Table.Body>\n            </Table>\n      </ContentCard>\n    </OrganizationAnnouncementsBase>\n  )\n}\n\n\n// const OrganizationLevels = ({ t, history, archived=false }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t(\"organization.title\")} />\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//             <Query query={GET_LEVELS_QUERY} variables={{ archived }}>\n//              {({ loading, error, data: {organizationLevels: levels}, refetch, fetchMore }) => {\n//                 // Loading\n//                 if (loading) return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}>\n//                     <Dimmer active={true}\n//                             loader={true}>\n//                     </Dimmer>\n//                   </ContentCard>\n//                 )\n//                 // Error\n//                 if (error) return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}>\n//                     <p>{t('organization.levels.error_loading')}</p>\n//                   </ContentCard>\n//                 )\n//                 const headerOptions = <Card.Options>\n//                   <Button color={(!archived) ? 'primary': 'secondary'}  \n//                           size=\"sm\"\n//                           onClick={() => {archived=false; refetch({archived});}}>\n//                     {t('general.current')}\n//                   </Button>\n//                   <Button color={(archived) ? 'primary': 'secondary'} \n//                           size=\"sm\" \n//                           className=\"ml-2\" \n//                           onClick={() => {archived=true; refetch({archived});}}>\n//                     {t('general.archive')}\n//                   </Button>\n//                 </Card.Options>\n                \n//                 // Empty list\n//                 if (!levels.edges.length) { return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}\n//                                headerContent={headerOptions}>\n//                     <p>\n//                     {(!archived) ? t('organization.levels.empty_list') : t(\"organization.levels.empty_archive\")}\n//                     </p>\n                   \n//                   </ContentCard>\n//                 )} else {   \n//                 // Life's good! :)\n//                 return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}\n//                                headerContent={headerOptions}\n//                                pageInfo={levels.pageInfo}\n//                                onLoadMore={() => {\n//                                 fetchMore({\n//                                   variables: {\n//                                     after: levels.pageInfo.endCursor\n//                                   },\n//                                   updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                     const newEdges = fetchMoreResult.organizationLevels.edges\n//                                     const pageInfo = fetchMoreResult.organizationLevels.pageInfo\n\n//                                     return newEdges.length\n//                                       ? {\n//                                           // Put the new levels at the end of the list and update `pageInfo`\n//                                           // so we have the new `endCursor` and `hasNextPage` values\n//                                           organizationLevels: {\n//                                             __typename: previousResult.organizationLevels.__typename,\n//                                             edges: [ ...previousResult.organizationLevels.edges, ...newEdges ],\n//                                             pageInfo\n//                                           }\n//                                         }\n//                                       : previousResult\n//                                   }\n//                                 })\n//                               }} >\n//                     <Table>\n//                           <Table.Header>\n//                             <Table.Row key={v4()}>\n//                               <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                             </Table.Row>\n//                           </Table.Header>\n//                           <Table.Body>\n//                               {levels.edges.map(({ node }) => (\n//                                 <Table.Row key={v4()}>\n//                                   <Table.Col key={v4()}>\n//                                     {node.name}\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     {(node.archived) ? \n//                                       <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/organization/levels/edit/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('general.edit')}\n//                                       </Button>\n//                                     }\n//                                   </Table.Col>\n//                                   <Mutation mutation={ARCHIVE_LEVEL} key={v4()}>\n//                                     {(archiveCostcenter, { data }) => (\n//                                       <Table.Col className=\"text-right\" key={v4()}>\n//                                         <button className=\"icon btn btn-link btn-sm\" \n//                                            title={t('general.archive')} \n//                                            href=\"\"\n//                                            onClick={() => {\n//                                              console.log(\"clicked archived\")\n//                                              let id = node.id\n//                                              archiveCostcenter({ variables: {\n//                                                input: {\n//                                                 id,\n//                                                 archived: !archived\n//                                                }\n//                                         }, refetchQueries: [\n//                                             {query: GET_LEVELS_QUERY, variables: {\"archived\": archived }}\n//                                         ]}).then(({ data }) => {\n//                                           console.log('got data', data);\n//                                           toast.success(\n//                                             (archived) ? t('general.unarchived'): t('general.archived'), {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                         }).catch((error) => {\n//                                           toast.error((t('general.toast_server_error')) +  error, {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                           console.log('there was an error sending the query', error);\n//                                         })\n//                                         }}>\n//                                           <Icon prefix=\"fa\" name=\"inbox\" />\n//                                         </button>\n//                                       </Table.Col>\n//                                     )}\n//                                   </Mutation>\n//                                 </Table.Row>\n//                               ))}\n//                           </Table.Body>\n//                         </Table>\n//                   </ContentCard>\n//                 )}}\n//              }\n//             </Query>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"organizationlevel\">\n//               <Link to={\"/organization/announcements/add\"}\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(\"\")}>\n//                 <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.levels.add')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <OrganizationMenu activeLink='levels'/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// );\n\nexport default withTranslation()(withRouter(OrganizationAnnouncements))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ANNOUNCEMENT_SCHEMA = Yup.object().shape({\n    title: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    content: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    dateStart: Yup.date()\n      .required(t('yup.field_required')),\n    dateEnd: Yup.date()\n      .required(t('yup.field_required')),\n    priority: Yup.number()\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nfunction OrganizationAnnouncementForm({ t, history, isSubmitting, values, errors, setFieldTouched, setFieldValue, returnUrl }) {\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"displayPublic\" \n                  checked={values.displayPublic} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('organization.announcements.display_public')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"displayShop\" \n                  checked={values.displayShop} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('organization.announcements.display_shop')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"displayShop\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"displayBackend\" \n                  checked={values.displayBackend} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('organization.announcements.display_backend')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"displayBackend\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.title')}>\n              <Field type=\"text\" \n                      name=\"title\" \n                      className={(errors.title) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"title\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('organization.announcements.content')}>\n              <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"content\"\n                initialValue={values.content}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldTouched(\"content\", true)\n                  setFieldValue(\"content\", e.target.getContent())\n                }}\n                />\n              <ErrorMessage name=\"content\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                selected={values.dateStart}\n                onChange={(date) => setFieldValue(\"dateStart\", date)}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                selected={values.dateEnd}\n                onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.priority')}>\n              <Field type=\"text\" \n                      name=\"priority\" \n                      className={(errors.priority) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"priority\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n  \n  \nexport default withTranslation()(withRouter(OrganizationAnnouncementForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_ANNOUNCEMENTS_QUERY, ADD_ANNOUNCEMENT } from './queries'\nimport { ANNOUNCEMENT_SCHEMA } from './yupSchema'\nimport OrganizationAnnouncementForm from './OrganizationAnnouncementForm'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from '../OrganizationMenu'\nimport { dateToLocalISO } from '../../../tools/date_tools'\n\nfunction OrganizationAnnouncementAdd({t, history}) {\n  const returnUrl = \"/organization/announcements\"\n  const [addAnnouncement] = useMutation(ADD_ANNOUNCEMENT)\n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('organization.title')} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n            <Card>\n              <Card.Header>\n                <Card.Title>{t('organization.announcements.title_add')}</Card.Title>\n              </Card.Header>\n                <Formik\n                    initialValues={{ \n                      displayPublic: false,\n                      displayShop: false,\n                      displayBackend: false,\n                      title: '', \n                      content: '',\n                      dateStart: new Date(),\n                      dateEnd: new Date(),\n                      priority: 100,\n                    }}\n                    validationSchema={ANNOUNCEMENT_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n                      let inputValues = {\n                        displayPublic: values.displayPublic,\n                        displayBackend: values.displayBackend,\n                        displayShop: values.displayShop,\n                        title: values.title, \n                        content: values.content,\n                        dateStart: dateToLocalISO(values.dateStart),\n                        dateEnd: dateToLocalISO(values.dateEnd),\n                        priority: values.priority\n                      }\n\n                      addAnnouncement({ variables: {\n                        input: inputValues\n                      }, refetchQueries: [\n                          {query: GET_ANNOUNCEMENTS_QUERY}\n                      ]})\n                      .then(({ data }) => {\n                          console.log('got data', data)\n                          history.push(returnUrl)\n                          toast.success((t('organization.announcements.toast_add_success')), {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error)\n                          setSubmitting(false)\n                        })\n                    }}\n                    >\n                    {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n                        <OrganizationAnnouncementForm \n                          isSubmitting={isSubmitting}\n                          values={values}\n                          errors={errors}\n                          setFieldTouched={setFieldTouched}\n                          setFieldValue={setFieldValue}\n                          returnUrl={returnUrl}\n                        />\n                    )}\n                </Formik>\n            </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"organizationannouncement\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              <OrganizationMenu activeLink='announcements'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationAnnouncementAdd))","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ANNOUNCEMENTS_QUERY, GET_ANNOUNCEMENT_QUERY, UPDATE_ANNOUNCEMENT } from './queries'\nimport { ANNOUNCEMENT_SCHEMA } from './yupSchema'\nimport OrganizationAnnouncementForm from './OrganizationAnnouncementForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationAnnouncementsBase from \"./OrganizationAnnouncementsBase\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\n\nfunction OrganizationAnnouncementEdit({t, history, match}) {\n  const announcementId = match.params.id\n  const cardTitle = t(\"organization.announcements.title_edit\")\n  const returnUrl = \"/organization/announcements\"\n  \n  const { loading, error, data } = useQuery(GET_ANNOUNCEMENT_QUERY, { variables: {\n    id: announcementId\n  }})\n  const [updateAnnouncement] = useMutation(UPDATE_ANNOUNCEMENT)\n\n  if (loading) return (\n    <OrganizationAnnouncementsBase showEditBack={true}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          {t(\"general.loading_with_dots\")}\n        </Card.Body>\n      </Card>\n    </OrganizationAnnouncementsBase>\n  )\n\n  if (error) return (\n    <OrganizationAnnouncementsBase showEditBack={true}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          {t(\"general.error_sad_smiley\")}\n        </Card.Body>\n      </Card>\n    </OrganizationAnnouncementsBase>\n  )\n\n  const organizationAnnouncement = data.organizationAnnouncement\n  \n  return (\n    <OrganizationAnnouncementsBase showEditBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n          <Formik\n              initialValues={{ \n                displayPublic: organizationAnnouncement.displayPublic,\n                displayShop: organizationAnnouncement.displayShop,\n                displayBackend: organizationAnnouncement.displayBackend,\n                title: organizationAnnouncement.title, \n                content: organizationAnnouncement.content,\n                dateStart: organizationAnnouncement.dateStart,\n                dateEnd: organizationAnnouncement.dateEnd,\n                priority: organizationAnnouncement.priority,\n              }}\n              validationSchema={ANNOUNCEMENT_SCHEMA}\n              onSubmit={(values, { setSubmitting }) => {\n                let inputValues = {\n                  id: announcementId,\n                  displayPublic: values.displayPublic,\n                  displayBackend: values.displayBackend,\n                  displayShop: values.displayShop,\n                  title: values.title, \n                  content: values.content,\n                  dateStart: dateToLocalISO(values.dateStart),\n                  dateEnd: dateToLocalISO(values.dateEnd),\n                  priority: values.priority\n                }\n\n                updateAnnouncement({ variables: {\n                  input: inputValues\n                }, refetchQueries: [\n                    {query: GET_ANNOUNCEMENTS_QUERY}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.announcements.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n              }}\n              >\n              {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n                  <OrganizationAnnouncementForm \n                    isSubmitting={isSubmitting}\n                    values={values}\n                    errors={errors}\n                    setFieldTouched={setFieldTouched}\n                    setFieldValue={setFieldValue}\n                    returnUrl={returnUrl}\n                  />\n              )}\n          </Formik>\n      </Card>\n    </OrganizationAnnouncementsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationAnnouncementEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_APPOINTMENTS_QUERY = gql`\n  query OrganizationAppointments($after: String, $before: String, $organizationAppointmentCategory: ID!, $archived: Boolean!) {\n    organizationAppointments(first: 15, before: $before, after: $after, organizationAppointmentCategory: $organizationAppointmentCategory, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationAppointmentCategory {\n            id\n            name\n          }\n          archived,\n          displayPublic\n          name\n        }\n      }\n    }\n    organizationAppointmentCategory(id: $organizationAppointmentCategory) {\n      id\n      name\n    }\n  }\n`\n\nexport const GET_APPOINTMENT_QUERY = gql`\n  query OrganizationAppointment($id: ID!, $after: String, $before: String) {\n    organizationAppointment(id:$id) {\n      id\n      name\n      displayPublic\n      archived\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query AppointmentInputValues($after: String, $before: String, $archived: Boolean) {\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport CardHeaderSeparator from \"../../../general/CardHeaderSeparator\"\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\nimport { GET_APPOINTMENTS_QUERY } from \"./queries\"\n\nconst ARCHIVE_APPOINTMENT = gql`\n  mutation ArchiveOrganizationAppointment($input: ArchiveOrganizationAppointmentInput!) {\n    archiveOrganizationAppointment(input: $input) {\n      organizationAppointment {\n        id\n        archived\n      }\n    }\n  }\n`\n\nconst OrganizationAppointments = ({ t, history, match, archived=false }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"organization.title\")}>\n          <div className=\"page-options d-flex\">\n            <Link to=\"/organization/appointment_categories\" \n                  className='btn btn-outline-secondary btn-sm'>\n                <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.appointment_categories.title')}\n            </Link>\n          </div>\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            <Query query={GET_APPOINTMENTS_QUERY} variables={{ archived, organizationAppointmentCategory: match.params.category_id }}>\n             {({ loading, error, data: {organizationAppointments: appointments, organizationAppointmentCategory: location}, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('organization.appointments.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('organization.appointments.title')}>\n                    <p>{t('organization.appointments.error_loading')}</p>\n                  </ContentCard>\n                )\n                const headerOptions = <Card.Options>\n                  <Button color={(!archived) ? 'primary': 'secondary'}  \n                          size=\"sm\"\n                          onClick={() => {archived=false; refetch({archived});}}>\n                    {t('general.current')}\n                  </Button>\n                  <Button color={(archived) ? 'primary': 'secondary'} \n                          size=\"sm\" \n                          className=\"ml-2\" \n                          onClick={() => {archived=true; refetch({archived});}}>\n                    {t('general.archive')}\n                  </Button>\n                </Card.Options>\n\n                // Empty list\n                if (!appointments.edges.length) { return (\n                  <ContentCard cardTitle={t('organization.appointments.title')}\n                               headerContent={headerOptions}>\n                    <p>\n                    {(!archived) ? t('organization.appointments.empty_list') : t(\"organization.appointments.empty_archive\")}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('organization.appointments.title')}\n                               headerContent={headerOptions}\n                               pageInfo={appointments.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: appointments.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.organizationAppointmentPrices.edges\n                                    const pageInfo = fetchMoreResult.organizationAppointmentPrices.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new locations at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          organizationAppointmentPrices: {\n                                            __typename: previousResult.organizationAppointmentPrices.__typename,\n                                            edges: [ ...previousResult.organizationAppointmentPrices.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} >\n                    <div>\n                      <Alert type=\"primary\">\n                        <strong>{t('general.appointment_category')}</strong> {location.name}\n                      </Alert>\n\n                      <Table>\n                        <Table.Header>\n                          <Table.Row key={v4()}>\n                            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                            <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                          </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            {appointments.edges.map(({ node }) => (\n                              <Table.Row key={v4()}>\n                                <Table.Col key={v4()}>\n                                  {node.name}\n                                </Table.Col>\n                                <Table.Col key={v4()}>\n                                  {(node.displayPublic) ? \n                                    <Badge color=\"success\">{t('general.yes')}</Badge>: \n                                    <Badge color=\"danger\">{t('general.no')}</Badge>}\n                                </Table.Col>\n                                <Table.Col className=\"text-right\" key={v4()}>\n                                  {(node.archived) ? \n                                    <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                    <span>\n                                      <Button className='btn-sm' \n                                              onClick={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/edit/\" + node.id)}\n                                              color=\"secondary\">\n                                        {t('general.edit')}\n                                      </Button>\n                                      <Button className='btn-sm' \n                                              onClick={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/prices/\" + node.id)}\n                                              color=\"secondary\">\n                                        {t('organization.appointments.teacher_prices')}\n                                      </Button>\n                                    </span>\n                                  }\n                                </Table.Col>\n                                <Mutation mutation={ARCHIVE_APPOINTMENT} key={v4()}>\n                                  {(archiveAppointmentCategorysRoom, { data }) => (\n                                    <Table.Col className=\"text-right\" key={v4()}>\n                                      <button className=\"icon btn btn-link btn-sm\" \n                                          title={t('general.archive')} \n                                          href=\"\"\n                                          onClick={() => {\n                                            console.log(\"clicked archived\")\n                                            let id = node.id\n                                            archiveAppointmentCategorysRoom({ variables: {\n                                              input: {\n                                              id,\n                                              archived: !archived\n                                              }\n                                      }, refetchQueries: [\n                                          { \n                                            query: GET_APPOINTMENTS_QUERY, \n                                            variables: {\"archived\": archived, organizationAppointmentCategory: match.params.category_id }\n                                          }\n                                      ]}).then(({ data }) => {\n                                        console.log('got data', data);\n                                        toast.success(\n                                          (archived) ? t('general.unarchived'): t('general.archived'), {\n                                            position: toast.POSITION.BOTTOM_RIGHT\n                                          })\n                                      }).catch((error) => {\n                                        toast.error((t('general.toast_server_error')) +  error, {\n                                            position: toast.POSITION.BOTTOM_RIGHT\n                                          })\n                                        console.log('there was an error sending the query', error);\n                                      })\n                                      }}>\n                                        <Icon prefix=\"fa\" name=\"inbox\" />\n                                      </button>\n                                    </Table.Col>\n                                  )}\n                                </Mutation>\n                              </Table.Row>\n                            ))}\n                        </Table.Body>\n                      </Table>\n                      </div>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointment\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/add/\")}>\n                <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.appointments.add')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointments'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointments))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const APPOINTMENT_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\n\nconst OrganizationAppointmentForm = ({ t, history, match, inputData, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"displayPublic\" \n                checked={values.displayPublic} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('organization.appointments.public')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n          </Form.Group>    \n\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.glaccount')}>\n              <Field component=\"select\" \n                    name=\"financeGlaccount\" \n                    className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.financeGlaccounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n            <Form.Group label={t('general.costcenter')}>\n              <Field component=\"select\" \n                    name=\"financeCostcenter\" \n                    className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.financeCostcenters.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={return_url}>\n            <Button color=\"link\" type=\"button\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentForm))","// @flow\n\nimport React from 'react'\nimport { Mutation, Query } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_APPOINTMENTS_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { APPOINTMENT_SCHEMA } from './yupSchema'\nimport OrganizationAppointmentForm from './OrganizationAppointmentForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nconst ADD_APPOINTMENT = gql`\n  mutation CreateOrganizationAppointment($input: CreateOrganizationAppointmentInput!) {\n    createOrganizationAppointment(input: $input) {\n      organizationAppointment {\n        id\n        organizationAppointmentCategory {\n          id\n          name\n        }\n        archived\n        displayPublic\n        name\n      }\n    }\n  }\n`\n\nconst return_url = \"/organization/appointment_categories/appointments/\"\n\nconst OrganizationAppointmentAdd = ({ t, history, match }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t('organization.title')} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n          <Card>\n            <Card.Header>\n              <Card.Title>{t('organization.appointments.title_add')}</Card.Title>\n            </Card.Header>\n            <Query query={GET_INPUT_VALUES_QUERY} variables = {{archived: false}} >\n              {({ loading, error, data, refetch }) => {\n                // Loading\n                if (loading) return <p>{t('general.loading_with_dots')}</p>\n                // Error\n                if (error) {\n                  console.log(error)\n                  return <p>{t('general.error_sad_smiley')}</p>\n                }\n                \n                console.log('query data')\n                console.log(data)\n                const inputData = data\n\n                return (\n                  <Mutation mutation={ADD_APPOINTMENT} onCompleted={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments\")}> \n                      {(addAppointment, { data }) => (\n                          <Formik\n                              initialValues={{ name: '', displayPublic: true }}\n                              validationSchema={APPOINTMENT_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  addAppointment({ variables: {\n                                    input: {\n                                      organizationAppointmentCategory: match.params.category_id,\n                                      name: values.name, \n                                      displayPublic: values.displayPublic,\n                                      financeGlaccount: values.financeGlaccount,\n                                      financeCostcenter: values.financeCostcenter\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_APPOINTMENTS_QUERY,\n                                      variables: {\"archived\": false, \"organizationAppointmentCategory\": match.params.category_id }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data);\n                                      toast.success((t('organization.appointments.toast_add_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values }) => (\n                                <OrganizationAppointmentForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments\"}\n                                  />\n                              )}\n                          </Formik>\n                      )}\n                    </Mutation>\n                )}}\n              </Query>                    \n          </Card>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointment\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(return_url + match.params.category_id)}>\n                <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointments'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APPOINTMENTS_QUERY, GET_APPOINTMENT_QUERY } from './queries'\nimport { APPOINTMENT_SCHEMA } from './yupSchema'\nimport OrganizationAppointmentForm from './OrganizationAppointmentForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nconst UPDATE_APPOINTMENT = gql`\n  mutation UpdateOrganizationAppointment($input: UpdateOrganizationAppointmentInput!) {\n    updateOrganizationAppointment(input: $input) {\n      organizationAppointment {\n        id\n        name\n        displayPublic\n      }\n    }\n  }\n`\n\n\nclass OrganizationAppointmentEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization appointment edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const category_id = match.params.category_id\n    const return_url = \"/organization/appointment_categories/\" + match.params.category_id + \"/appointments\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t('organization.title')} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.appointments.title_edit')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_APPOINTMENT_QUERY} variables={{ id }} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    const inputData = data\n                    const initialData = data.organizationAppointment\n                    console.log('query data')\n                    console.log(data)\n\n                    let initialGlaccount = \"\"\n                    if (initialData.financeGlaccount) {\n                      initialGlaccount =  initialData.financeGlaccount.id\n                    } \n\n                    let initialCostcenter = \"\"\n                    if (initialData.financeCostcenter) {\n                      initialCostcenter =  initialData.financeCostcenter.id\n                    } \n\n                    return (\n                      \n                      <Mutation mutation={UPDATE_APPOINTMENT} onCompleted={() => history.push(return_url)}> \n                      {(updateLocation, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                name: initialData.name, \n                                displayPublic: initialData.displayPublic,\n                                financeGlaccount: initialGlaccount,\n                                financeCostcenter: initialCostcenter,\n                              }}\n                              validationSchema={APPOINTMENT_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  updateLocation({ variables: {\n                                    input: {\n                                      id: match.params.id,\n                                      name: values.name,\n                                      displayPublic: values.displayPublic,\n                                      financeGlaccount: values.financeGlaccount,\n                                      financeCostcenter: values.financeCostcenter\n                                    }\n                                  }, refetchQueries: [\n                                    {query: GET_APPOINTMENTS_QUERY,\n                                      variables: {\"archived\": false, \"organizationAppointmentCategory\": match.params.category_id }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.appointments.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values }) => (\n                                <OrganizationAppointmentForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                />\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"change\"\n                                      resource=\"organizationappointment\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='appointments'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationAppointmentEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_APPOINTMENT_CATEGORIES_QUERY = gql`\n  query OrganizationAppointmentCategories($after: String, $before: String, $archived: Boolean) {\n    organizationAppointmentCategories(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id,\n          archived,\n          displayPublic,\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_APPOINTMENT_CATEGORY_QUERY = gql`\n  query OrganizationAppointmentCategory($id: ID!) {\n    organizationAppointmentCategory(id:$id) {\n      id\n      name\n      displayPublic\n      archived\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\nimport { GET_APPOINTMENT_CATEGORIES_QUERY } from \"./queries\"\n\nconst ARCHIVE_APPOINTMENT_CATEGORY = gql`\n  mutation ArchiveOrganizationAppointmentCategory($input: ArchiveOrganizationAppointmentCategoryInput!) {\n    archiveOrganizationAppointmentCategory(input: $input) {\n      organizationAppointmentCategory {\n        id\n        archived\n      }\n    }\n  }\n`\n\nconst OrganizationAppointmentCategories = ({ t, history, archived=false }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t('organization.title')} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n            <Query query={GET_APPOINTMENT_CATEGORIES_QUERY} variables={{ archived }}>\n             {({ loading, error, data: {organizationAppointmentCategories: appointment_categories}, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('organization.appointment_categories.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('organization.appointment_categories.title')}>\n                    <p>{t('organization.appointment_categories.error_loading')}</p>\n                  </ContentCard>\n                )\n                const headerOptions = <Card.Options>\n                  <Button color={(!archived) ? 'primary': 'secondary'}  \n                          size=\"sm\"\n                          onClick={() => {archived=false; refetch({archived});}}>\n                    {t('general.current')}\n                  </Button>\n                  <Button color={(archived) ? 'primary': 'secondary'} \n                          size=\"sm\" \n                          className=\"ml-2\" \n                          onClick={() => {archived=true; refetch({archived});}}>\n                    {t('general.archive')}\n                  </Button>\n                </Card.Options>\n                \n                // Empty list\n                if (!appointment_categories.edges.length) { return (\n                  <ContentCard cardTitle={t('organization.appointment_categories.title')}\n                               headerContent={headerOptions}>\n                    <p>\n                    {(!archived) ? t('organization.appointment_categories.empty_list') : t(\"organization.appointment_categories.empty_archive\")}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('organization.appointment_categories.title')}\n                               headerContent={headerOptions}\n                               pageInfo={appointment_categories.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: appointment_categories.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.organizationAppointmentCategories.edges\n                                    const pageInfo = fetchMoreResult.organizationAppointmentCategories.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new appointment_categories at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          organizationAppointmentCategories: {\n                                            __typename: previousResult.organizationAppointmentCategories.__typename,\n                                            edges: [ ...previousResult.organizationAppointmentCategories.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} >\n                    <Table>\n                          <Table.Header>\n                            <Table.Row key={v4()}>\n                              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                              {appointment_categories.edges.map(({ node }) => (\n                                <Table.Row key={v4()}>\n                                  <Table.Col key={v4()}>\n                                    {node.name}\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    {(node.displayPublic) ? \n                                      <Badge color=\"success\">{t('general.yes')}</Badge>: \n                                      <Badge color=\"danger\">{t('general.no')}</Badge>}\n                                  </Table.Col>\n                                  <Table.Col className=\"text-right\" key={v4()}>\n                                    {(node.archived) ? \n                                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                      <div>\n                                        <Button className='btn-sm' \n                                                onClick={() => history.push(\"/organization/appointment_categories/edit/\" + node.id)}\n                                                color=\"secondary\">\n                                          {t('general.edit')}\n                                        </Button>\n                                        <Button className='btn-sm' \n                                                onClick={() => history.push(\"/organization/appointment_categories/\" + node.id + \"/appointments/\")}\n                                                color=\"secondary\">\n                                          {t('organization.appointments.title')}\n                                        </Button>\n                                      </div>\n                                    }\n                                  </Table.Col>\n                                  <Mutation mutation={ARCHIVE_APPOINTMENT_CATEGORY} key={v4()}>\n                                    {(archiveLocation, { data }) => (\n                                      <Table.Col className=\"text-right\" key={v4()}>\n                                        <button className=\"icon btn btn-link btn-sm\" \n                                           title={t('general.archive')} \n                                           href=\"\"\n                                           onClick={() => {\n                                             console.log(\"clicked archived\")\n                                             let id = node.id\n                                             archiveLocation({ variables: {\n                                               input: {\n                                                id,\n                                                archived: !archived\n                                               }\n                                        }, refetchQueries: [\n                                            {query: GET_APPOINTMENT_CATEGORIES_QUERY, variables: {\"archived\": archived }}\n                                        ]}).then(({ data }) => {\n                                          console.log('got data', data);\n                                          toast.success(\n                                            (archived) ? t('general.unarchived'): t('general.archived'), {\n                                              position: toast.POSITION.BOTTOM_RIGHT\n                                            })\n                                        }).catch((error) => {\n                                          toast.error((t('general.toast_server_error')) +  error, {\n                                              position: toast.POSITION.BOTTOM_RIGHT\n                                            })\n                                          console.log('there was an error sending the query', error);\n                                        })\n                                        }}>\n                                          <Icon prefix=\"fa\" name=\"inbox\" />\n                                        </button>\n                                      </Table.Col>\n                                    )}\n                                  </Mutation>\n                                </Table.Row>\n                              ))}\n                          </Table.Body>\n                        </Table>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointmentcategory\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/organization/appointment_categories/add\")}>\n                <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.appointment_categories.add')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointments'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentCategories))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const APPOINTMENT_CATEGORY_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n    Button,\n    Card,\n    Form\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nconst OrganizationAppointmentCategoryForm = ({ t, history, isSubmitting, values, errors, return_url }) => (\n  <FoForm>\n    <Card.Body>\n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n            <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"displayPublic\" \n              checked={values.displayPublic} />\n            <span className=\"custom-switch-indicator\" ></span>\n            <span className=\"custom-switch-description\">{t('organization.appointment_category.public')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n        </Form.Group>    \n\n        <Form.Group label={t('general.name')}>\n          <Field type=\"text\" \n                  name=\"name\" \n                  className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          disabled={isSubmitting}\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={return_url}>\n          <Button color=\"link\" type=\"button\">\n              {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationAppointmentCategoryForm))","// @flow\n\nimport React from 'react'\nimport { Mutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_APPOINTMENT_CATEGORIES_QUERY } from './queries'\nimport { APPOINTMENT_CATEGORY_SCHEMA } from './yupSchema'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationAppointmentCategoryForm from \"./OrganizationAppointmentCategoryForm\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nconst ADD_ORGANIZATION_APPOINTMENT_CATEGORY = gql`\n  mutation CreateOrganizationAppointmentCategory($input: CreateOrganizationAppointmentCategoryInput!) {\n    createOrganizationAppointmentCategory(input: $input) {\n      organizationAppointmentCategory {\n        id\n        archived\n        displayPublic\n        name\n      }\n    }\n  }\n`\n\nconst return_url = \"/organization/appointment_categories\"\n\nconst OrganizationAppointmentCategoryAdd = ({ t, history }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t('organization.title')} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n          <Card>\n            <Card.Header>\n              <Card.Title>{t('organization.appointment_categories.title_add')}</Card.Title>\n            </Card.Header>\n            <Mutation mutation={ADD_ORGANIZATION_APPOINTMENT_CATEGORY} onCompleted={() => history.push(return_url)}> \n                {(addAppointmentCategory, { data }) => (\n                    <Formik\n                        initialValues={{ name: '', displayPublic: true }}\n                        validationSchema={APPOINTMENT_CATEGORY_SCHEMA}\n                        onSubmit={(values, { setSubmitting }) => {\n                            addAppointmentCategory({ variables: {\n                              input: {\n                                name: values.name, \n                                displayPublic: values.displayPublic\n                              }\n                            }, refetchQueries: [\n                                {query: GET_APPOINTMENT_CATEGORIES_QUERY, variables: {\"archived\": false }}\n                            ]})\n                            .then(({ data }) => {\n                                console.log('got data', data);\n                                toast.success((t('organization.appointment_categories.toast_add_success')), {\n                                    position: toast.POSITION.BOTTOM_RIGHT\n                                  })\n                              }).catch((error) => {\n                                toast.error((t('general.toast_server_error')) +  error, {\n                                    position: toast.POSITION.BOTTOM_RIGHT\n                                  })\n                                console.log('there was an error sending the query', error)\n                                setSubmitting(false)\n                              })\n                        }}\n                        >\n                        {({ isSubmitting, errors, values }) => (\n                          <OrganizationAppointmentCategoryForm\n                            isSubmitting={isSubmitting}\n                            errors={errors}\n                            values={values}\n                            return_url={return_url}\n                          />\n                        )}\n                    </Formik>\n                )}\n                </Mutation>\n          </Card>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointmentcategory\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(return_url)}>\n                <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointment_categories'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentCategoryAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APPOINTMENT_CATEGORIES_QUERY, GET_APPOINTMENT_CATEGORY_QUERY } from './queries'\nimport { APPOINTMENT_CATEGORY_SCHEMA } from './yupSchema'\n\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\nimport OrganizationAppointmentCategoryForm from \"./OrganizationAppointmentCategoryForm\"\n\n\nconst UPDATE_APPOINTMENT_CATEGORY = gql`\n  mutation UpdateOrganizationAppointmentCategory($input: UpdateOrganizationAppointmentCategoryInput!) {\n    updateOrganizationAppointmentCategory(input: $input) {\n      organizationAppointmentCategory {\n        id\n        name\n        displayPublic\n      }\n    }\n  }\n`\n\n\nclass OrganizationAppointmentCategoryEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization location edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const return_url = \"/organization/appointment_categories\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t('organization.title')} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.appointment_categories.title_edit')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_APPOINTMENT_CATEGORY_QUERY} variables={{ id }} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    const initialData = data.organizationAppointmentCategory;\n                    console.log('query data')\n                    console.log(data)\n\n                    return (\n                      \n                      <Mutation mutation={UPDATE_APPOINTMENT_CATEGORY} onCompleted={() => history.push(return_url)}> \n                      {(updateAppointmentCategory, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                name: initialData.name, \n                                displayPublic: initialData.displayPublic \n                              }}\n                              validationSchema={APPOINTMENT_CATEGORY_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  updateAppointmentCategory({ variables: {\n                                    input: {\n                                      id: match.params.id,\n                                      name: values.name,\n                                      displayPublic: values.displayPublic \n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_APPOINTMENT_CATEGORIES_QUERY, variables: {\"archived\": false }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.appointment_categories.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values }) => (\n                                  <OrganizationAppointmentCategoryForm\n                                    isSubmitting={isSubmitting}\n                                    errors={errors}\n                                    values={values}\n                                    return_url={return_url}\n                                  />\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"change\"\n                                      resource=\"organizationappointmentcategory\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='appointment_categories'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationAppointmentCategoryEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_APPOINTMENT_PRICES_QUERY = gql`\n  query OrganizationAppointmentPrices($after: String, $before: String, $organizationAppointment: ID!) {\n    organizationAppointmentPrices(first: 15, before: $before, after: $after, organizationAppointment: $organizationAppointment) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          price\n          priceDisplay\n          financeTaxRate {\n            id\n            name\n          }\n        }\n      }\n    }\n    organizationAppointment(id: $organizationAppointment) {\n      id\n      name\n    }\n  }\n`\n\nexport const GET_APPOINTMENT_PRICE_QUERY = gql`\n  query OrganizationAppointment($id: ID!, $after: String, $before: String) {\n    organizationAppointmentPrice(id:$id) {\n      id\n      price\n      account {\n        id\n        fullName\n      }\n      financeTaxRate {\n        id\n        name\n      }\n    }\n    financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    accountTeacherProfiles(first: 100, before: $before, after: $after, appointments: true, account_IsActive: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query AppointmentInputValues($after: String, $before: String, $archived: Boolean) {\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    accountTeacherProfiles(first: 100, before: $before, after: $after, appointments: true, account_IsActive: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport CardHeaderSeparator from \"../../../../general/CardHeaderSeparator\"\nimport OrganizationMenu from \"../../../OrganizationMenu\"\n\nimport { GET_APPOINTMENT_PRICES_QUERY } from \"./queries\"\n\nconst DELETE_APPOINTMENT_PRICE = gql`\n  mutation DeleteOrganizationAppointmentPrice($input: DeleteOrganizationAppointmentPriceInput!) {\n    deleteOrganizationAppointmentPrice(input: $input) {\n      ok\n    }\n  }\n`\n\nconst OrganizationAppointmentPrices = ({ t, history, match }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"organization.title\")}>\n          <div className=\"page-options d-flex\">\n            <Link to={\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments\"}\n                  className='btn btn-outline-secondary btn-sm'>\n                <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('general.appointment')}\n            </Link>\n          </div>\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            <Query query={GET_APPOINTMENT_PRICES_QUERY} variables={{ organizationAppointment: match.params.appointment_id }}>\n             {({ loading, error, data, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('organization.appointment_prices.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('organization.appointment_prices.title')}>\n                    <p>{t('organization.appointment_prices.error_loading')}</p>\n                  </ContentCard>\n                )\n\n                const prices = data.organizationAppointmentPrices\n\n                // Empty list\n                if (!prices.edges.length) { return (\n                  <ContentCard cardTitle={t('organization.appointment_prices.title')}>\n                    <p>\n                      {t('organization.appointment_prices.empty_list')}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('organization.appointment_prices.title')}\n                               pageInfo={prices.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: prices.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.organizationAppointmentPrices.edges\n                                    const pageInfo = fetchMoreResult.organizationAppointmentPrices.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new locations at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          organizationAppointmentPrices: {\n                                            __typename: previousResult.organizationAppointmentPrices.__typename,\n                                            edges: [ ...previousResult.organizationAppointmentPrices.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} >\n                    <div>\n                      <Alert type=\"primary\">\n                        <strong>{t('general.prices_for')} {t('general.appointment')}</strong> {data.organizationAppointment.name}\n                      </Alert>\n\n                      <Table>\n                        <Table.Header>\n                          <Table.Row key={v4()}>\n                            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                            <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n                          </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            {prices.edges.map(({ node }) => (\n                              <Table.Row key={v4()}>\n                                {console.log(node)}\n                                <Table.Col key={v4()}>\n                                  {node.account.fullName}\n                                </Table.Col>\n                                <Table.Col key={v4()}>\n                                  {node.priceDisplay}\n                                </Table.Col>\n                                <Table.Col className=\"text-right\" key={v4()}>\n                                  {(node.archived) ? \n                                    <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                    <span>\n                                      <Button className='btn-sm' \n                                              onClick={() => history.push(\"/organization/appointment_categories/\" + \n                                                match.params.category_id + \"/appointments/prices/\" + match.params.appointment_id + \"/edit/\" + node.id)}\n                                              color=\"secondary\">\n                                        {t('general.edit')}\n                                      </Button>\n                                    </span>\n                                  }\n                                </Table.Col>\n                                <Mutation mutation={DELETE_APPOINTMENT_PRICE} key={v4()}>\n                                  {(deleteAppointmentPrice, { data }) => (\n                                    <Table.Col className=\"text-right\" key={v4()}>\n                                      <button className=\"icon btn btn-link btn-sm\" \n                                        title={t('general.delete')} \n                                        href=\"\"\n                                        onClick={() => {\n                                          confirm_delete({\n                                            t: t,\n                                            msgConfirm: t(\"organization.appointment_prices.delete_confirm_msg\"),\n                                            msgDescription: <p>{node.account.fullName} {node.priceDisplay}</p>,\n                                            msgSuccess: t('organization.appointment_prices.deleted'),\n                                            deleteFunction: deleteAppointmentPrice,\n                                            functionVariables: { variables: {\n                                              input: {\n                                                id: node.id\n                                              }\n                                            }, refetchQueries: [\n                                              {query: GET_APPOINTMENT_PRICES_QUERY, variables: { organizationAppointment: match.params.appointment_id }} \n                                            ]}\n                                          })\n                                      }}>\n                                        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                                      </button>\n                                    </Table.Col>\n                                  )}\n                                </Mutation>\n                              </Table.Row>\n                            ))}\n                        </Table.Body>\n                      </Table>\n                      </div>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointment\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/prices/\" + match.params.appointment_id + \"/add\")}>\n                <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.appointment_prices.add')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointments'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentPrices))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const APPOINTMENT_PRICE_SCHEMA = Yup.object().shape({\n    account: Yup.string()\n      .required(t('yup.field_required')),\n    price: Yup.number()\n      .required(t('yup.field_required')),\n    financeTaxRate: Yup.string()\n      .required(t('yup.field_required'))\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\"\n\n\nconst OrganizationAppointmentForm = ({ t, history, match, inputData, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n         <Form.Group label={t('general.teacher')}>\n            <Field component=\"select\" \n                    name=\"account\" \n                    className={(errors.account) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n              {inputData.accountTeacherProfiles.edges.map(({ node }) =>\n                <option value={node.account.id} key={v4()}>{node.account.fullName}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"account\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.price')}>\n              <Field type=\"text\" \n                    name=\"price\" \n                    className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n            <Form.Group label={t('general.taxrate')}>\n              <Field component=\"select\" \n                      name=\"financeTaxRate\" \n                      className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in appointment price form:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.financeTaxRates.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={return_url}>\n            <Button color=\"link\" type=\"button\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentForm))","// @flow\n\nimport React from 'react'\nimport { Mutation, Query } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_APPOINTMENT_PRICES_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { APPOINTMENT_PRICE_SCHEMA } from './yupSchema'\nimport OrganizationAppointmentPriceForm from './OrganizationAppointmentPriceForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../../OrganizationMenu\"\n\n\nconst ADD_APPOINTMENT_PRICE = gql`\n  mutation CreateOrganizationAppointmentPrice($input: CreateOrganizationAppointmentPriceInput!) {\n    createOrganizationAppointmentPrice(input: $input) {\n      organizationAppointmentPrice {\n        id\n        account {\n          id\n          fullName\n        }\n        organizationAppointment {\n          id\n          name\n        }\n        price\n        financeTaxRate {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst return_url = \"/organization/appointment_categories/appointments/\"\n\nconst OrganizationAppointmentPriceAdd = ({ t, history, match }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t('organization.title')} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n          <Card>\n            <Card.Header>\n              <Card.Title>{t('organization.appointment_prices.title_add')}</Card.Title>\n            </Card.Header>\n            <Query query={GET_INPUT_VALUES_QUERY} variables = {{archived: false}} >\n              {({ loading, error, data, refetch }) => {\n                // Loading\n                if (loading) return <p>{t('general.loading_with_dots')}</p>\n                // Error\n                if (error) {\n                  console.log(error)\n                  return <p>{t('general.error_sad_smiley')}</p>\n                }\n                \n                console.log('query data')\n                console.log(data)\n                const inputData = data\n\n                return (\n                  <Mutation mutation={ADD_APPOINTMENT_PRICE} onCompleted={\n                    () => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/prices/\" + match.params.appointment_id)}> \n                      {(addAppointment, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                organizationAppointment: '', \n                                account: '',\n                                price: '',\n                                financeTaxRate: \"\",\n                              }}\n                              validationSchema={APPOINTMENT_PRICE_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  addAppointment({ variables: {\n                                    input: {\n                                      organizationAppointment: match.params.appointment_id,\n                                      account: values.account,\n                                      price: values.price, \n                                      financeTaxRate: values.financeTaxRate,\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_APPOINTMENT_PRICES_QUERY,\n                                      variables: {\"organizationAppointment\": match.params.appointment_id }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data);\n                                      toast.success((t('organization.appointment_prices.toast_add_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values }) => (\n                                <OrganizationAppointmentPriceForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/prices/\" + match.params.appointment_id}\n                                />\n                              )}\n                          </Formik>\n                      )}\n                    </Mutation>\n                )}}\n              </Query>                    \n          </Card>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationappointmentprice\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/organization/appointment_categories/\" + match.params.category_id + \"/appointments/prices/\" + match.params.appointment_id)}>\n                <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='appointments'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationAppointmentPriceAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APPOINTMENT_PRICES_QUERY, GET_APPOINTMENT_PRICE_QUERY } from './queries'\nimport { APPOINTMENT_PRICE_SCHEMA } from './yupSchema'\nimport OrganizationAppointmentPriceForm from './OrganizationAppointmentPriceForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../../OrganizationMenu\"\n\n\nconst UPDATE_APPOINTMENT_PRICE = gql`\n  mutation UpdateOrganizationAppointmentPrice($input: UpdateOrganizationAppointmentPriceInput!) {\n    updateOrganizationAppointmentPrice(input: $input) {\n      organizationAppointmentPrice {\n        id\n        account {\n          id\n          fullName\n        }\n        organizationAppointment {\n          id\n          name\n        }\n        price\n        financeTaxRate {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nclass OrganizationAppointmentPriceEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization appointment edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const appointment_id = match.params.appointment_id\n    const category_id = match.params.category_id\n    const return_url = \"/organization/appointment_categories/\" + category_id + \"/appointments/prices/\" + appointment_id\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t('organization.title')} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.appointment_prices.title_edit')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_APPOINTMENT_PRICE_QUERY} variables={{ id: id }} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    const inputData = data\n                    const initialData = data.organizationAppointmentPrice\n                    console.log('query data')\n                    console.log(data)\n\n                    let initialAccount = \"\"\n                    if (initialData.account) {\n                      initialAccount = initialData.account.id\n                    }\n\n                    let initialFinanceTaxRate = \"\"\n                    if (initialData.financeTaxRate) {\n                      initialFinanceTaxRate =  initialData.financeTaxRate.id\n                    } \n\n                    return (\n                      \n                      <Mutation mutation={UPDATE_APPOINTMENT_PRICE} onCompleted={() => history.push(return_url)}> \n                      {(updateLocation, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                account: initialAccount,\n                                price: initialData.price, \n                                financeTaxRate: initialFinanceTaxRate,\n                              }}\n                              validationSchema={APPOINTMENT_PRICE_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  updateLocation({ variables: {\n                                    input: {\n                                      id: match.params.id,\n                                      account: values.account,\n                                      price: values.price,\n                                      financeTaxRate: values.financeTaxRate,\n                                    }\n                                  }, refetchQueries: [\n                                    {query: GET_APPOINTMENT_PRICES_QUERY,\n                                      variables: {organizationAppointment: match.params.appointment_id }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.appointment_prices.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values }) => (\n                                <OrganizationAppointmentPriceForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                />\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"change\"\n                                      resource=\"organizationappointmentprice\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='appointments'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationAppointmentPriceEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationClasspassesBase({t, children, showBack=false}) {\n  const activeLink = \"classpasses\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/classpasses/groups\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"folder\" /> {t('general.groups')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/classpasses/\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-let\" /> {t('general.back')}\n                  </Button>\n                </Link>            \n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationclasspass\">\n                  <Link to=\"/organization/classpasses/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.classpasses.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>              \n              }\n\n              <OrganizationMenu activeLink={activeLink}/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  ) \n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_CLASSPASSES_QUERY = gql`\n  query OrganizationClasspasses($after: String, $before: String, $archived: Boolean) {\n    organizationClasspasses(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          displayShop\n          trialPass\n          name\n          description\n          price\n          priceDisplay\n          financeTaxRate {\n            id\n            name\n          }\n          validity\n          validityUnit\n          validityUnitDisplay\n          classes\n          unlimited\n          organizationMembership {\n            id\n            name\n          }\n          quickStatsAmount\n          financeGlaccount {\n            id \n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_CLASSPASS_QUERY = gql`\n  query OrganizationClasspass($id: ID!, $after: String, $before: String) {\n    organizationClasspass(id:$id) {\n      id\n      archived\n      displayPublic\n      displayShop\n      trialPass\n      name\n      description\n      price\n      priceDisplay\n      financeTaxRate {\n        id\n        name\n      }\n      validity\n      validityUnit\n      validityUnitDisplay\n      classes\n      unlimited\n      organizationMembership {\n        id\n        name\n      }\n      quickStatsAmount\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    organizationMemberships(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financeTaxRates(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InputValues($after: String, $before: String) {\n    organizationMemberships(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financeTaxRates(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const CREATE_CLASSPASS = gql`\nmutation CreateClasspass($input: CreateOrganizationClasspassInput!) {\n  createOrganizationClasspass(input: $input) {\n    organizationClasspass {\n      id\n      displayPublic\n      displayShop\n      name\n      description\n      price\n      financeTaxRate {\n        id\n        name\n      }\n      validity\n      validityUnit\n      classes\n      unlimited\n      organizationMembership {\n        id\n        name\n      }\n      quickStatsAmount\n      financeGlaccount {\n        id\n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n  }\n}\n`\n\nexport const UPDATE_CLASSPASS = gql`\n  mutation UpdateOrganizationClasspass($input: UpdateOrganizationClasspassInput!) {\n    updateOrganizationClasspass(input: $input) {\n      organizationClasspass {\n        id\n        displayPublic\n        displayShop\n        name\n        description\n        price\n        financeTaxRate {\n          id\n          name\n        }\n        validity\n        validityUnit\n        classes\n        unlimited\n        organizationMembership {\n          id\n          name\n        }\n        quickStatsAmount\n        financeGlaccount {\n          id\n          name\n        }\n        financeCostcenter {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const ARCHIVE_CLASSPASS = gql`\nmutation ArchiveOrganizationClasspass($input: ArchiveOrganizationClasspassInput!) {\n  archiveOrganizationClasspass(input: $input) {\n    organizationClasspass {\n      id\n      archived\n    }\n  }\n}\n`\n","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesBase from './OrganizationClasspassesBase'\n\nimport { GET_CLASSPASSES_QUERY, ARCHIVE_CLASSPASS } from \"./queries\"\n\n\nfunction OrganizationClasspasses({t, history}) {\n  const cardTitle = t('organization.classpasses.title')\n  let [archived, setArchived] = useState(false)\n\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_CLASSPASSES_QUERY)\n  const [ archiveClasspass ] = useMutation(ARCHIVE_CLASSPASS)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: archived});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: archived});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <OrganizationClasspassesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n  if (error) return (\n    <OrganizationClasspassesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.classpasses.error_loading')}</p>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n  let classpasses = data.organizationClasspasses\n\n  // Empty list\n  if (!classpasses.edges.length) { return (\n    <OrganizationClasspassesBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('organization.classpasses.empty_list') : t(\"organization.classpasses.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )}\n\n  return (\n    <OrganizationClasspassesBase>\n      <ContentCard \n        cardTitle={cardTitle}\n        headerContent={headerOptions}\n        pageInfo={classpasses.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: classpasses.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.organizationClasspasses.edges\n            const pageInfo = fetchMoreResult.organizationClasspasses.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new memberships at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  organizationClasspasses: {\n                    __typename: previousResult.organizationClasspasses.__typename,\n                    edges: [ ...previousResult.organizationClasspasses.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n              <Table.ColHeader>{t('organization.classpasses.trial_pass')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.classes')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.validity')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {classpasses.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <BadgeBoolean value={node.displayPublic} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <BadgeBoolean value={node.displayShop} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <BadgeBoolean value={node.trialPass} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.unlimited) ? t('general.unlimited') : node.classes }\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.priceDisplay} <br />\n                    {(node.financeTaxRate) ? \n                      <span className=\"text-muted\">{node.financeTaxRate.name}</span>\n                      : \"\"\n                    }\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.validity} <br />\n                    <span className=\"text-muted\">\n                      {node.validityUnitDisplay}\n                    </span>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/organization/classpasses/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveClasspass({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_CLASSPASSES_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                      </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n}\n\n\n// const OrganizationClasspasses = ({ t, history, archived=false }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t(\"organization.title\")}>\n//          <div className=\"page-options d-flex\">\n//             <Link to=\"/organization/classpasses/groups\" \n//                   className='btn btn-outline-secondary btn-sm'>\n//                 <Icon prefix=\"fe\" name=\"folder\" /> {t('general.groups')}\n//             </Link>\n//           </div>\n//         </Page.Header>\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//             <Query query={GET_CLASSPASSES_QUERY} variables={{ archived }}>\n//              {({ loading, error, data: {organizationClasspasses: classpasses}, refetch, fetchMore }) => {\n//                 // Loading\n//                 if (loading) return (\n//                   <ContentCard cardTitle={t('organization.classpasses.title')}>\n//                     <Dimmer active={true}\n//                             loader={true}>\n//                     </Dimmer>\n//                   </ContentCard>\n//                 )\n//                 // Error\n//                 if (error) return (\n//                   <ContentCard cardTitle={t('organization.classpasses.title')}>\n//                     <p>{t('organization.classpasses.error_loading')}</p>\n//                   </ContentCard>\n//                 )\n//                 const headerOptions = <Card.Options>\n//                   {/* <Link to=\"/organization/classpasses/groups\">\n//                     <Button color='secondary'  \n//                             size=\"sm\"\n//                             icon=\"folder\"\n//                             // onClick={() => {archived=false; refetch({archived});}}>\n//                             >\n//                       {t('general.groups')}\n//                     </Button>\n//                   </Link>\n//                   <CardHeaderSeparator /> */}\n//                   <Button color={(!archived) ? 'primary': 'secondary'}  \n//                           size=\"sm\"\n//                           onClick={() => {archived=false; refetch({archived});}}>\n//                     {t('general.current')}\n//                   </Button>\n//                   <Button color={(archived) ? 'primary': 'secondary'} \n//                           size=\"sm\" \n//                           className=\"ml-2\" \n//                           onClick={() => {archived=true; refetch({archived});}}>\n//                     {t('general.archive')}\n//                   </Button>\n//                 </Card.Options>\n                \n//                 // Empty list\n//                 if (!classpasses.edges.length) { return (\n//                   <ContentCard cardTitle={t('organization.classpasses.title')}\n//                                headerContent={headerOptions}>\n//                     <p>\n//                     {(!archived) ? t('organization.classpasses.empty_list') : t(\"organization.classpasses.empty_archive\")}\n//                     </p>\n                   \n//                   </ContentCard>\n//                 )} else {   \n//                 // Life's good! :)\n//                 return (\n//                   <ContentCard cardTitle={t('organization.classpasses.title')}\n//                                headerContent={headerOptions}\n//                                pageInfo={classpasses.pageInfo}\n//                                onLoadMore={() => {\n//                                 fetchMore({\n//                                   variables: {\n//                                     after: classpasses.pageInfo.endCursor\n//                                   },\n//                                   updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                     const newEdges = fetchMoreResult.organizationClasspasses.edges\n//                                     const pageInfo = fetchMoreResult.organizationClasspasses.pageInfo\n\n//                                     return newEdges.length\n//                                       ? {\n//                                           // Put the new memberships at the end of the list and update `pageInfo`\n//                                           // so we have the new `endCursor` and `hasNextPage` values\n//                                           organizationMemberships: {\n//                                             __typename: previousResult.organizationClasspasses.__typename,\n//                                             edges: [ ...previousResult.organizationClasspasses.edges, ...newEdges ],\n//                                             pageInfo\n//                                           }\n//                                         }\n//                                       : previousResult\n//                                   }\n//                                 })\n//                               }} >\n//                     <Table>\n//                           <Table.Header>\n//                             <Table.Row key={v4()}>\n//                               <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('organization.classpasses.trial_pass')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('general.classes')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n//                               <Table.ColHeader>{t('general.validity')}</Table.ColHeader>\n//                             </Table.Row>\n//                           </Table.Header>\n//                           <Table.Body>\n//                               {classpasses.edges.map(({ node }) => (\n//                                 <Table.Row key={v4()}>\n//                                   <Table.Col key={v4()}>\n//                                     {node.name}\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     <BadgeBoolean value={node.displayPublic} />\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     <BadgeBoolean value={node.displayShop} />\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     <BadgeBoolean value={node.trialPass} />\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     {(node.unlimited) ? t('general.unlimited') : node.classes }\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     {node.priceDisplay} <br />\n//                                     {(node.financeTaxRate) ? \n//                                       <span className=\"text-muted\">{node.financeTaxRate.name}</span>\n//                                       : \"\"\n//                                     }\n//                                   </Table.Col>\n//                                   <Table.Col key={v4()}>\n//                                     {node.validity} <br />\n//                                     <span className=\"text-muted\">\n//                                       {node.validityUnitDisplay}\n//                                     </span>\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     {(node.archived) ? \n//                                       <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/organization/classpasses/edit/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('general.edit')}\n//                                       </Button>\n//                                     }\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     <button className=\"icon btn btn-link btn-sm\" \n//                                         title={t('general.archive')} \n//                                         href=\"\"\n//                                         onClick={() => {\n//                                           console.log(\"clicked archived\")\n//                                           let id = node.id\n//                                           archiveClasspass({ variables: {\n//                                             input: {\n//                                             id,\n//                                             archived: !archived\n//                                             }\n//                                     }, refetchQueries: [\n//                                         {query: GET_CLASSPASSES_QUERY, variables: {\"archived\": archived }}\n//                                     ]}).then(({ data }) => {\n//                                       console.log('got data', data);\n//                                       toast.success(\n//                                         (archived) ? t('general.unarchived'): t('general.archived'), {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                     }).catch((error) => {\n//                                       toast.error((t('general.toast_server_error')) +  error, {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                       console.log('there was an error sending the query', error);\n//                                     })\n//                                     }}>\n//                                       <Icon prefix=\"fa\" name=\"inbox\" />\n//                                     </button>\n//                                       </Table.Col>\n//                                 </Table.Row>\n//                               ))}\n//                           </Table.Body>\n//                         </Table>\n//                   </ContentCard>\n//                 )}}\n//              }\n//             </Query>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"organizationclasspass\">\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(\"/organization/classpasses/add\")}>\n//                 <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.classpasses.add')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <OrganizationMenu activeLink='classpasses'/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// );\n\nexport default withTranslation()(withRouter(OrganizationClasspasses))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const CLASSPASS_SCHEMA = Yup.object().shape({\n  name: Yup.string()\n  .min(3, t('yup.min_len_3'))\n  .required(t('yup.field_required')),\n  price: Yup.number()\n    .required(t('yup.field_required')),\n  financeTaxRate: Yup.string()\n    .required(t('yup.field_required')),\n  validity: Yup.number()\n    .positive(t('yup.positive_number_required'))\n    .required(t('yup.field_required')),\n  validityUnit: Yup.string()\n    .required(t('yup.field_required')),\n  classes: Yup.number(),\n  quickStatsAmount: Yup.number()\n})\n\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\n\nimport {\n  Grid,\n  Button,\n  Card,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n\nclass OrganizationClasspassForm extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization classpass form props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const return_url = \"/organization/classpasses\"\n    const initialData = this.props.initialData\n    const isSubmitting = this.props.isSubmitting\n    const setFieldValue = this.props.setFieldValue\n    const setFieldTouched = this.props.setFieldTouched\n    const errors = this.props.errors\n    const values = this.props.values\n\n    return (\n        <FoForm>\n            <Card.Body> \n            <Form.Group>\n                <Form.Label className=\"custom-switch\">\n                    <Field \n                    className=\"custom-switch-input\"\n                    type=\"checkbox\" \n                    name=\"displayPublic\" \n                    checked={values.displayPublic} />\n                    <span className=\"custom-switch-indicator\" ></span>\n                    <span className=\"custom-switch-description\">{t('organization.classpass.public')}</span>\n                </Form.Label>\n                <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n            </Form.Group>      \n            <Form.Group>\n                <Form.Label className=\"custom-switch\">\n                    <Field \n                    className=\"custom-switch-input\"\n                    type=\"checkbox\" \n                    name=\"displayShop\" \n                    checked={values.displayShop} />\n                    <span className=\"custom-switch-indicator\" ></span>\n                    <span className=\"custom-switch-description\">{t('organization.classpass.shop')}</span>\n                </Form.Label>\n                <ErrorMessage name=\"displayShop\" component=\"div\" />   \n            </Form.Group> \n            <Grid.Row>\n              <Grid.Col>\n                <Form.Group>\n                  <Form.Label className=\"custom-switch\">\n                      <Field \n                      className=\"custom-switch-input\"\n                      type=\"checkbox\" \n                      name=\"trialPass\" \n                      checked={values.trialPass} />\n                      <span className=\"custom-switch-indicator\" ></span>\n                      <span className=\"custom-switch-description\">{t('organization.classpass.trial_pass')}</span>\n                  </Form.Label>\n                  <ErrorMessage name=\"displayShop\" component=\"div\" />   \n                </Form.Group>\n              </Grid.Col>\n            </Grid.Row>            \n            <Form.Group label={t('general.name')} >\n                <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n                <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n            <Form.Group label={t('general.description')}>\n                <Editor\n                  tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                  textareaName=\"description\"\n                  initialValue={values.description}\n                  init={tinymceBasicConf}\n                  onBlur={(e) => {\n                    setFieldTouched(\"description\", true)\n                    setFieldValue(\"description\", e.target.getContent())\n                  }}\n                />\n                <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n            <Grid.Row>\n              <Grid.Col>\n                <Form.Group label={t('general.price')}>\n                    <Field type=\"text\" \n                        name=\"price\" \n                        className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\" />\n                    <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n              <Grid.Col>\n                <Form.Group label={t('general.taxrate')}>\n                  <Field component=\"select\" \n                          name=\"financeTaxRate\" \n                          className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\">\n                  {console.log(\"query data in classpass add:\")}\n                  {console.log(initialData)}\n                  <option value=\"\" key={v4()}></option>\n                  {initialData.financeTaxRates.edges.map(({ node }) =>\n                      <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n                  )}\n                  </Field>\n                  <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Col>\n                <Form.Group label={t('general.validity')}>\n                  <Field type=\"text\" \n                      name=\"validity\" \n                      className={(errors.validity) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n                  <ErrorMessage name=\"validity\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n              <Grid.Col>\n                <Form.Group label={t('general.validity_unit')}>\n                  <Field component=\"select\" \n                          name=\"validityUnit\" \n                          className={(errors.validityUnit) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\">\n                  <option value=\"DAYS\" key={v4()}>{t('validity.days')}</option>\n                  <option value=\"WEEKS\" key={v4()}>{t('validity.weeks')}</option>\n                  <option value=\"MONTHS\" key={v4()}>{t('validity.months')}</option>\n                  </Field>\n                  <ErrorMessage name=\"validityUnit\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n            </Grid.Row>\n            <Form.Group>\n                <Form.Label className=\"custom-switch\">\n                    <Field \n                    className=\"custom-switch-input\"\n                    type=\"checkbox\" \n                    name=\"unlimited\" \n                    checked={values.unlimied} />\n                    <span className=\"custom-switch-indicator\" ></span>\n                    <span className=\"custom-switch-description\">{t('general.unlimited')}</span>\n                </Form.Label>\n                <ErrorMessage name=\"unlimited\" component=\"div\" />   \n            </Form.Group>  \n            { (values.unlimited) ? \"\" :\n            <Form.Group label={t('general.classes')}>\n                <Field type=\"text\" \n                        name=\"classes\" \n                        className={(errors.classes) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\" />\n                <ErrorMessage name=\"classes\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> } \n            {/* <Form.Group label={t('general.membership')}>\n                <Field component=\"select\" \n                        name=\"organizationMembership\" \n                        className={(errors.organizationMembership) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.membership_not_required\")}</option>\n                {initialData.organizationMemberships.edges.map(({ node }) =>\n                    <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                )}\n                </Field>\n                <ErrorMessage name=\"organizationMembership\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>  */}\n            { (values.unlimited) ? \n                    <Form.Group label={t('general.quickStatsAmount')}>\n                    <Field type=\"text\" \n                            name=\"quickStatsAmount\" \n                            className={(errors.quickStatsAmount) ? \"form-control is-invalid\" : \"form-control\"} \n                            autoComplete=\"off\" />\n                    <ErrorMessage name=\"quickStatsAmount\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                    : \"\"\n            }\n            <Grid.Row>\n              <Grid.Col>\n                <Form.Group label={t('general.glaccount')}>\n                  <Field component=\"select\" \n                          name=\"financeGlaccount\" \n                          className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\">\n                  <option value=\"\" key={v4()}></option>\n                  {initialData.financeGlaccounts.edges.map(({ node }) =>\n                      <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                  )}\n                  </Field>\n                  <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n              <Grid.Col>\n                <Form.Group label={t('general.costcenter')}>\n                  <Field component=\"select\" \n                          name=\"financeCostcenter\" \n                          className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\">\n                  <option value=\"\" key={v4()}></option>\n                  {initialData.financeCostcenters.edges.map(({ node }) =>\n                      <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                  )}\n                  </Field>\n                  <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n            </Grid.Row>\n            </Card.Body>\n            <Card.Footer>\n                <Button \n                className=\"pull-right\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                >\n                {t('general.submit')}\n                </Button>\n                <Button\n                type=\"button\" \n                color=\"link\" \n                onClick={() => history.push(return_url)}\n                >\n                    {t('general.cancel')}\n                </Button>\n            </Card.Footer>\n        </FoForm>\n    ) \n  }\n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassForm))","import React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_CLASSPASSES_QUERY, GET_INPUT_VALUES_QUERY, CREATE_CLASSPASS } from './queries'\nimport { CLASSPASS_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Dimmer\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesBase from './OrganizationClasspassesBase';\nimport OrganizationClasspassForm from \"./OrganizationClasspassForm\"\n\n\nfunction OrganizationClasspassAdd({t, match, history}) {\n  const cardTitle = t('organization.classpasses.title_add')\n  const returnUrl = \"/organization/classpasses\"\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES_QUERY)\n  const [createClasspass] = useMutation(CREATE_CLASSPASS)\n\n  if (loading) return (\n    <OrganizationClasspassesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n  if (error) return (\n    <OrganizationClasspassesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n                    \n  console.log('query data')\n  console.log(data)\n  const initialData = data\n\n  return (\n    <OrganizationClasspassesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            displayPublic: true,\n            displayShop: true,\n            trialPass: false,\n            name: \"\",\n            description: \"\",\n            price: 0,\n            financeTaxRate: \"\",\n            validity: 1,\n            validityUnit: \"MONTHS\",\n            classes: 1,\n            unlimited: false,\n            organizationMembership: \"\",\n            quickStatsAmount: 0,\n            financeGlaccount: \"\",\n            financeCostcenter: \"\"\n          }}\n          validationSchema={CLASSPASS_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              createClasspass({ variables: {\n                input: {\n                  displayPublic: values.displayPublic,\n                  displayShop: values.displayShop,\n                  trialPass: values.trialPass,\n                  name: values.name,\n                  description: values.description,\n                  price: values.price,\n                  financeTaxRate: values.financeTaxRate,\n                  validity: values.validity,\n                  validityUnit: values.validityUnit,\n                  classes: values.classes,\n                  unlimited: values.unlimited,\n                  organizationMembership: values.organizationMembership,\n                  quickStatsAmount: values.quickStatsAmount,\n                  financeGlaccount: values.financeGlaccount,\n                  financeCostcenter: values.financeCostcenter\n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSPASSES_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('organization.classpasses.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <OrganizationClasspassForm \n              initialData = {initialData}\n              isSubmitting = {isSubmitting}\n              setFieldValue = {setFieldValue}\n              setFieldTouched = {setFieldTouched}\n              errors = {errors}\n              values = {values}\n            />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationClasspassesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_CLASSPASSES_QUERY, GET_CLASSPASS_QUERY, UPDATE_CLASSPASS } from './queries'\nimport { CLASSPASS_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Dimmer\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesBase from './OrganizationClasspassesBase'\nimport OrganizationClasspassForm from \"./OrganizationClasspassForm\"\n\n\nfunction OrganizationClasspassEdit({ t, match, history}) {\n  const id = match.params.id\n  const returnUrl = \"/organization/classpasses\"\n  const cardTitle = t('organization.classpasses.title_edit')\n  const { loading, error, data } = useQuery(GET_CLASSPASS_QUERY, {\n    variables: { id: id }\n  })\n  const [updateClasspass] = useMutation(UPDATE_CLASSPASS)\n\n  if (loading) return (\n    <OrganizationClasspassesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n  if (error) return (\n    <OrganizationClasspassesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasspassesBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const initialData = data\n\n  let initialMembership = \"\"\n  if (initialData.organizationClasspass.organizationMembership) {\n    initialMembership = initialData.organizationClasspass.organizationMembership.id\n  }\n\n  let initialGlaccount = \"\"\n  if (initialData.organizationClasspass.financeGlaccount) {\n    initialGlaccount =  initialData.organizationClasspass.financeGlaccount.id\n  } \n\n  let initialCostcenter = \"\"\n  if (initialData.organizationClasspass.financeCostcenter) {\n    initialCostcenter =  initialData.organizationClasspass.financeCostcenter.id\n  } \n\n  return (\n    <OrganizationClasspassesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            displayPublic: initialData.organizationClasspass.displayPublic,\n            displayShop: initialData.organizationClasspass.displayShop,\n            trialPass: initialData.organizationClasspass.trialPass,\n            name: initialData.organizationClasspass.name,\n            description: initialData.organizationClasspass.description,\n            price: initialData.organizationClasspass.price,\n            financeTaxRate: initialData.organizationClasspass.financeTaxRate.id,\n            validity: initialData.organizationClasspass.validity,\n            validityUnit: initialData.organizationClasspass.validityUnit,\n            classes: initialData.organizationClasspass.classes,\n            unlimited: initialData.organizationClasspass.unlimited,\n            organizationMembership: initialMembership,\n            quickStatsAmount: initialData.organizationClasspass.quickStatsAmount,\n            financeGlaccount:  initialGlaccount,\n            financeCostcenter: initialCostcenter\n          }}\n          validationSchema={CLASSPASS_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateClasspass({ variables: {\n                input: {\n                  id: match.params.id,\n                  displayPublic: values.displayPublic,\n                  displayShop: values.displayShop,\n                  trialPass: values.trialPass,\n                  name: values.name,\n                  description: values.description,\n                  price: values.price,\n                  financeTaxRate: values.financeTaxRate,\n                  validity: values.validity,\n                  validityUnit: values.validityUnit,\n                  classes: values.classes,\n                  unlimited: values.unlimited,\n                  organizationMembership: values.organizationMembership,\n                  quickStatsAmount: values.quickStatsAmount,\n                  financeGlaccount: values.financeGlaccount,\n                  financeCostcenter: values.financeCostcenter\n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSPASSES_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('organization.classpasses.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <OrganizationClasspassForm \n              initialData = {initialData}\n              isSubmitting = {isSubmitting}\n              setFieldValue = {setFieldValue}\n              setFieldTouched = {setFieldTouched}\n              errors = {errors}\n              values = {values}\n            />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationClasspassesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassEdit))","// @flow\n\nimport React, { Children } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationClasspassesGroupsBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/classpasses\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.classpasses.title')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to={\"/organization/classpasses/groups\"}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t(\"general.back\")}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationclasspassgroup\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(\"/organization/classpasses/groups/add\")}>\n                    <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.classpass_groups.add')}\n                  </Button>\n                </HasPermissionWrapper>              \n              }\n              <OrganizationMenu activeLink=''/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasspassesGroupsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_CLASSPASS_GROUPS_QUERY = gql`\n  query OrganizationClasspassGroups($after: String, $before: String) {\n    organizationClasspassGroups(first: 100, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          description\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_CLASSPASS_GROUP_QUERY = gql`\n  query OrganizationClasspassGroup($id: ID!) {\n    organizationClasspassGroup(id:$id) {\n      id\n      name\n      description\n    }\n  }\n`\n\n\nexport const GET_CLASSPASS_GROUP_PASSES_QUERY = gql`\n  query GetPassesAndGroupMembership($after: String, $before: String, $id:ID!) {\n    organizationClasspasses(first: 100, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    organizationClasspassGroup(id: $id) {\n      id\n      name\n      description\n      organizationClasspasses {\n        edges {\n          node {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const ADD_CLASSPASS_GROUP = gql`\nmutation CreateOrganizationClasspassGroup($input:CreateOrganizationClasspassGroupInput!) {\n  createOrganizationClasspassGroup(input: $input) {\n    organizationClasspassGroup{\n      id\n    }\n  }\n}\n`\n\nexport const UPDATE_CLASSPASS_GROUP = gql`\nmutation UpdateOrganizationClasspassGroup($input: UpdateOrganizationClasspassGroupInput!) {\n  updateOrganizationClasspassGroup(input: $input) {\n    organizationClasspassGroup {\n      id\n      name\n    }\n  }\n}\n`\n\nexport const DELETE_CLASSPASS_GROUP = gql`\n  mutation DeleteClasspassGroup($input: DeleteOrganizationClasspassGroupInput!) {\n    deleteOrganizationClasspassGroup(input: $input) {\n      ok\n    }\n  }\n`\n\nexport const ADD_CARD_TO_GROUP = gql`\n  mutation AddCardToGroup($input: CreateOrganizationClasspassGroupClasspassInput!) {\n    createOrganizationClasspassGroupClasspass(input:$input) {\n      organizationClasspassGroupClasspass {\n        id\n        organizationClasspass {\n          id\n          name\n        }\n        organizationClasspassGroup {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const DELETE_CARD_FROM_GROUP = gql`\n  mutation DeleteCardFromGroup($input: DeleteOrganizationClasspassGroupClasspassInput!) {\n    deleteOrganizationClasspassGroupClasspass(input:$input) {\n      ok\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Table\n} from \"tabler-react\";\n\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesGroupsBase from \"./OrganizationClasspassesGroupsBase\"\n\nimport { GET_CLASSPASS_GROUPS_QUERY, DELETE_CLASSPASS_GROUP } from \"./queries\"\n\n\nfunction OrganizationClasspassesGroups({ t, history}) {\n  const { loading, error, data, fetchMore } = useQuery(GET_CLASSPASS_GROUPS_QUERY)\n  const [deleteClasspassGroup] = useMutation(DELETE_CLASSPASS_GROUP)\n\n  // Loading\n  if (loading) return (\n    <OrganizationClasspassesGroupsBase>\n      <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasspassesGroupsBase>\n      <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n        <p>{t('organization.classpass_groups.error_loading')}</p>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n  \n  const classpass_groups = data.organizationClasspassGroups\n\n  // Empty list\n  if (!classpass_groups.edges.length) { return (\n    <OrganizationClasspassesGroupsBase>\n      <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n        <p>{t('organization.classpass_groups.empty_list')}</p>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )} \n\n  \n  // We have data\n  return (\n    <OrganizationClasspassesGroupsBase>\n      <ContentCard cardTitle={t('organization.classpass_groups.title')}\n                    pageInfo={classpass_groups.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: classpass_groups.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationClasspassGroups.edges\n                        const pageInfo = fetchMoreResult.organizationClasspassGroups.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new classpass_groups at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationClasspassGroups: {\n                                __typename: previousResult.organizationClasspassGroups.__typename,\n                                edges: [ ...previousResult.organizationClasspassGroups.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {classpass_groups.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {node.name}\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.description.substring(0, 24)}\n                    </Table.Col>\n                    <Table.Col className=\"text-right\" key={v4()}>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/classpasses/groups/edit/\" + node.id)}\n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/classpasses/groups/edit/passes/\" + node.id)}\n                                color=\"secondary\">\n                          {t('organization.classpasses.groups.edit_passes')}\n                        </Button>\n                    </Table.Col>\n                    <Table.Col>\n                      <button className=\"icon btn btn-link btn-sm float-right\" \n                        title={t('general.delete')} \n                        href=\"\"\n                        onClick={() => {\n                          confirm_delete({\n                            t: t,\n                            msgConfirm: t(\"organization.classpasses.groups.delete_confirm_msg\"),\n                            msgDescription: <p>{node.name}</p>,\n                            msgSuccess: t('organization.classpasses.groups.deleted'),\n                            deleteFunction: deleteClasspassGroup,\n                            functionVariables: { variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, refetchQueries: [\n                              {query: GET_CLASSPASS_GROUPS_QUERY} \n                            ]}\n                          })\n                      }}>\n                        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                      </button>\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n   )\n\n}\n\n\n\n// const OrganizationClasspassesGroups = ({ t, history }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t(\"organization.title\")}>\n//           <div className=\"page-options d-flex\">\n//             <Link to=\"/organization/classpasses\" \n//                   className='btn btn-outline-secondary btn-sm'>\n//                 <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.classpasses.title')}\n//             </Link>\n//           </div>\n//         </Page.Header>\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//             <Query query={GET_CLASSPASS_GROUPS_QUERY} >\n//              {({ loading, error, data: {organizationClasspassGroups: classpass_groups}, refetch, fetchMore }) => {\n//                 // Loading\n//                 if (loading) return (\n//                   <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n//                     <Dimmer active={true}\n//                             loader={true}>\n//                     </Dimmer>\n//                   </ContentCard>\n//                 )\n//                 // Error\n//                 if (error) return (\n//                   <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n//                     <p>{t('organization.classpass_groups.error_loading')}</p>\n//                   </ContentCard>\n//                 )\n                \n//                 // Empty list\n//                 if (!classpass_groups.edges.length) { return (\n//                   <ContentCard cardTitle={t('organization.classpass_groups.title')}>\n//                     <p>{t('organization.classpass_groups.empty_list')}</p>\n//                   </ContentCard>\n//                 )} else {   \n//                 // Life's good! :)\n//                 return (\n//                   <ContentCard cardTitle={t('organization.classpass_groups.title')}\n//                                pageInfo={classpass_groups.pageInfo}\n//                                onLoadMore={() => {\n//                                 fetchMore({\n//                                   variables: {\n//                                     after: classpass_groups.pageInfo.endCursor\n//                                   },\n//                                   updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                     const newEdges = fetchMoreResult.organizationClasspassGroups.edges\n//                                     const pageInfo = fetchMoreResult.organizationClasspassGroups.pageInfo\n\n//                                     return newEdges.length\n//                                       ? {\n//                                           // Put the new classpass_groups at the end of the list and update `pageInfo`\n//                                           // so we have the new `endCursor` and `hasNextPage` values\n//                                           organizationClasspassGroups: {\n//                                             __typename: previousResult.organizationClasspassGroups.__typename,\n//                                             edges: [ ...previousResult.organizationClasspassGroups.edges, ...newEdges ],\n//                                             pageInfo\n//                                           }\n//                                         }\n//                                       : previousResult\n//                                   }\n//                                 })\n//                               }} >\n//                         <Table>\n//                           <Table.Header>\n//                             <Table.Row key={v4()}>\n//                               <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                             </Table.Row>\n//                           </Table.Header>\n//                           <Table.Body>\n//                               {classpass_groups.edges.map(({ node }) => (\n//                                 <Table.Row key={v4()}>\n//                                   <Table.Col key={v4()}>\n//                                     {node.name}\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/organization/classpasses/groups/edit/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('general.edit')}\n//                                       </Button>\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/organization/classpasses/groups/edit/passes/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('organization.classpasses.groups.edit_passes')}\n//                                       </Button>\n//                                   </Table.Col>\n//                                   {/* <Mutation mutation={ARCHIVE_CLASSPASS_GROUP} key={v4()}>\n//                                     {(archiveCostcenter, { data }) => (\n//                                       <Table.Col className=\"text-right\" key={v4()}>\n//                                         <button className=\"icon btn btn-link btn-sm\" \n//                                            title={t('general.archive')} \n//                                            href=\"\"\n//                                            onClick={() => {\n//                                              console.log(\"clicked archived\")\n//                                              let id = node.id\n//                                              archiveCostcenter({ variables: {\n//                                                input: {\n//                                                 id,\n//                                                 archived: !archived\n//                                                }\n//                                         }, refetchQueries: [\n//                                             {query: GET_CLASSPASS_GROUPS_QUERY, variables: {\"archived\": archived }}\n//                                         ]}).then(({ data }) => {\n//                                           console.log('got data', data);\n//                                           toast.success(\n//                                             (archived) ? t('general.unarchived'): t('general.archived'), {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                         }).catch((error) => {\n//                                           toast.error((t('general.toast_server_error')) +  error, {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                           console.log('there was an error sending the query', error);\n//                                         })\n//                                         }}>\n//                                           <Icon prefix=\"fa\" name=\"inbox\" />\n//                                         </button>\n//                                       </Table.Col>\n//                                     )}\n//                                   </Mutation> */}\n//                                 </Table.Row>\n//                               ))}\n//                           </Table.Body>\n//                         </Table>\n//                   </ContentCard>\n//                 )}}\n//              }\n//             </Query>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"organizationclasspassgroup\">\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(\"/organization/classpasses/groups/add\")}>\n//                 <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.classpass_groups.add')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <OrganizationMenu activeLink=''/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// )\n\nexport default withTranslation()(withRouter(OrganizationClasspassesGroups))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const CLASSPASS_GROUP_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_CLASSPASS_GROUPS_QUERY, ADD_CLASSPASS_GROUP } from './queries'\nimport { CLASSPASS_GROUP_SCHEMA } from './yupSchema'\n\nimport {\n  Alert,\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport OrganizationClasspassesGroupsBase from './OrganizationClasspassesGroupsBase';\n\n\nfunction OrganizationClasspassGroupAdd({t, history}) {\n  const returnUrl = \"/organization/classpasses/groups\"\n  const [ addClasspassGroup ] = useMutation(ADD_CLASSPASS_GROUP)\n\n  return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <Card title={t('organization.classpass_groups.title_add')}>\n        <Formik\n          initialValues={{ name: '', description: '' }}\n          validationSchema={CLASSPASS_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addClasspassGroup({ variables: {\n                input: {\n                  name: values.name, \n                  description: values.description, \n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSPASS_GROUPS_QUERY}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.classpass_groups.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n              <FoForm>\n                  <Card.Body>\n                    <Form.Group label={t('general.name')}>\n                      <Field type=\"text\" \n                              name=\"name\" \n                              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                      <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                    <Form.Group label={t('general.description')}>\n                      <Field type=\"text\" \n                              name=\"description\" \n                              className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                      <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                  </Card.Body>\n                  <Card.Footer>\n                      <Button \n                        color=\"primary\"\n                        className=\"pull-right\" \n                        type=\"submit\" \n                        disabled={isSubmitting}\n                      >\n                        {t('general.submit')}\n                      </Button>\n                      <Link to={returnUrl}>\n                        <Button color=\"link\">\n                            {t('general.cancel')}\n                        </Button>\n                      </Link>\n                      {(isSubmitting) ? \n                        <Alert type=\"primary\" hasExtraSpace>\n                          <strong>{t('general.please_wait')}</strong> {t('organization.classpass_groups.toast_creating_might_take_a_while')}\n                        </Alert> : \n                        \"\"\n                      }\n                  </Card.Footer>\n              </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationClasspassesGroupsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassGroupAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_CLASSPASS_GROUPS_QUERY, GET_CLASSPASS_GROUP_QUERY, UPDATE_CLASSPASS_GROUP } from './queries'\nimport { CLASSPASS_GROUP_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Dimmer,\n  Button,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesGroupsBase from './OrganizationClasspassesGroupsBase';\n\n\nfunction OrganizationClasspassGroupEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('organization.classpass_groups.title_edit')\n  const returnUrl = \"/organization/classpasses/groups\"\n  const { loading, error, data } = useQuery(GET_CLASSPASS_GROUP_QUERY, {\n    variables: {id: id}\n  })\n  const [ updateClasspassGroup ] = useMutation(UPDATE_CLASSPASS_GROUP)\n\n  // Loading\n  if (loading) return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n    \n\n  const initialData = data.organizationClasspassGroup;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            description: initialData.description,\n          }}\n          validationSchema={CLASSPASS_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateClasspassGroup({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name,\n                  description: values.description,\n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSPASS_GROUPS_QUERY}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('organization.classpass_groups.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n              <FoForm>\n                  <Card.Body>    \n                      <Form.Group label={t('general.name')} >\n                        <Field type=\"text\" \n                              name=\"name\" \n                              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                      <Form.Group label={t('general.description')}>\n                        <Field type=\"text\" \n                                name=\"description\" \n                                className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                  </Card.Body>\n                  <Card.Footer>\n                      <Button \n                        className=\"pull-right\"\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                        type=\"submit\"\n                      >\n                        {t('general.submit')}\n                      </Button>\n                      <Link to={returnUrl}>\n                        <Button\n                          type=\"button\" \n                          color=\"link\" \n                        >\n                            {t('general.cancel')}\n                        </Button>\n                      </Link>\n                  </Card.Footer>\n              </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationClasspassesGroupsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationClasspassGroupEdit))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { toast } from 'react-toastify'\n\nimport { GET_CLASSPASS_GROUP_PASSES_QUERY, ADD_CARD_TO_GROUP, DELETE_CARD_FROM_GROUP } from './queries'\n\nimport {\n  Dimmer,\n  Alert,\n  Icon,\n  Button,\n  Card,\n  Table,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasspassesGroupsBase from './OrganizationClasspassesGroupsBase';\n\n\nfunction OrganizationClasspassGroupEditPasses({ t, match, history }) {\n  const groupId = match.params.id\n  const returnUrl = \"/organization/classpasses/groups\"\n  const cardTitle = t('organization.classpass_group_classpasses.title_edit')\n  const { loading, error, data } = useQuery(GET_CLASSPASS_GROUP_PASSES_QUERY, { \n    variables: { id: groupId }\n  })\n  const [ addCardToGroup ] = useMutation(ADD_CARD_TO_GROUP)\n  const [ deleteCardFromGroup ] = useMutation(DELETE_CARD_FROM_GROUP)\n\n  // Loading\n  if (loading) return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasspassesGroupsBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const passes = data.organizationClasspasses\n  const group = data.organizationClasspassGroup\n\n  let group_passes = {}\n  if (group.organizationClasspasses.edges) {\n    group.organizationClasspasses.edges.map(({ node}) => (\n      group_passes[node.id] = true\n    ))\n  }\n\n  return (\n    <OrganizationClasspassesGroupsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <Alert type=\"primary\">\n            <strong>{t('general.group')}</strong> {group.name}\n          </Alert>\n          <Table>\n            <Table.Header>\n              <Table.Row key={v4()}>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {passes.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {(node.id in group_passes) ? \n                        <Icon name=\"check-circle\" className=\"text-green\" /> : <Icon name=\"x-circle\" className=\"text-red\" />\n                      }\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.name}\n                    </Table.Col>\n                    {console.log((node.id in group_passes))}\n                    {(!(node.id in group_passes)) ?\n                      // Add\n                      <Table.Col className=\"text-right text-green\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('general.add_to_group')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked add\")\n                            let pass_id = node.id\n                            addCardToGroup({ variables: {\n                              input: {\n                                organizationClasspass: pass_id,\n                                organizationClasspassGroup: groupId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_CLASSPASS_GROUP_PASSES_QUERY, variables: {\"id\": groupId }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('general.added_to_group'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"plus-circle\" /> { ' ' }\n                          {t('general.add_to_group')} \n                        </Button>\n                      </Table.Col>\n                      :\n                      // Delete\n                      <Table.Col className=\"text-right text-red\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('general.delete_from_group')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked delete\")\n                            console.log(node.id)\n                            let pass_id = node.id\n                            deleteCardFromGroup({ variables: {\n                              input: {\n                                organizationClasspass: pass_id,\n                                organizationClasspassGroup: groupId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_CLASSPASS_GROUP_PASSES_QUERY, variables: {\"id\": groupId }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('general.deleted_from_group'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"minus-circle\" /> { ' ' }\n                          {t('general.delete_from_group')}\n                        </Button>\n                      </Table.Col>\n                      }\n                  </Table.Row>\n                ))}\n            </Table.Body>\n          </Table>\n        </Card.Body>\n      </Card>\n    </OrganizationClasspassesGroupsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasspassGroupEditPasses))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let archived = localStorage.getItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED)\n  if (archived === null) {\n    archived = false\n  }\n\n  let queryVars = {\n    archived: (archived === \"true\") ? true : false,\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n","import { gql } from \"@apollo/client\"\n\nexport const GET_CLASSTYPES_QUERY = gql`\nquery OrganizationClasstypes($after: String, $before: String, $archived: Boolean) {\n  organizationClasstypes(first: 15, before: $before, after: $after, archived: $archived) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        archived\n        displayPublic\n        name\n        description\n        urlWebsite\n        urlImage\n        urlImageThumbnailSmall\n      }\n    }\n  }\n}\n`\n\nexport const GET_CLASSTYPE_QUERY = gql`\nquery getOrganizationClasstype($id: ID!) {\n  organizationClasstype(id:$id) {\n    id\n    archived\n    name\n    description\n    displayPublic\n    urlWebsite\n    urlImage\n  }\n}\n`\n\nexport const ADD_CLASSTYPE = gql`\nmutation CreateOrganizationClasstype($input: CreateOrganizationClasstypeInput!) {\n  createOrganizationClasstype(input: $input) {\n    organizationClasstype {\n      id\n      archived\n      name\n      description\n      displayPublic\n      urlWebsite\n      image\n    }\n  }\n}\n`\n\nexport const UPDATE_CLASSTYPE = gql`\n  mutation UpdateOrganizationClasstype($input: UpdateOrganizationClasstypeInput!) {\n    updateOrganizationClasstype(input: $input) {\n      organizationClasstype {\n        id\n        archived\n        name\n        description\n        displayPublic\n        urlWebsite\n      }\n    }\n  }\n`\n\nexport const UPDATE_CLASSTYPE_IMAGE = gql`\nmutation UploadOrganizationClasstypeImage($input: UploadOrganizationClasstypeImageInput!) {\n  uploadOrganizationClasstypeImage(input: $input) {\n    organizationClasstype {\n      id\n      archived\n      name\n      description\n      displayPublic\n      urlWebsite\n      image\n    }\n  }\n}\n`\n\nexport const ARCHIVE_CLASSTYPE = gql`\nmutation ArchiveOrganizationClasstype($input: ArchiveOrganizationClasstypeInput!) {\n    archiveOrganizationClasstype(input: $input) {\n      organizationClasstype {\n        id\n        archived\n      }\n    }\n}\n`\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationClasstypesBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title=\"Organization\" />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/classtypes/\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationclasstype\">\n                  <Link to=\"/organization/classtypes/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.classtypes.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <OrganizationMenu activeLink='classtypes'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>          \n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasstypesBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Avatar,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport ContentCard from \"../../general/ContentCard\"\n\nimport { get_list_query_variables } from './tools'\nimport { GET_CLASSTYPES_QUERY, ARCHIVE_CLASSTYPE } from \"./queries\"\nimport OrganizationClasstypesBase from \"./OrganizationClasstypesBase\"\n\n\nfunction OrganizationClasstypes({t, history, archived=false}) {\n  const {loading, error, data, refetch, fetchMore} = useQuery(GET_CLASSTYPES_QUERY, { \n    variables: get_list_query_variables()\n  })\n  const [archiveClasstype] = useMutation(ARCHIVE_CLASSTYPE)\n\n  if (loading) return (\n    <OrganizationClasstypesBase>\n      <ContentCard cardTitle={t('organization.classtypes.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasstypesBase>\n      <ContentCard cardTitle={t('organization.classtypes.title')}>\n        <p>{t('organization.classtypes.error_loading')}</p>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n  const headerOptions = <Card.Options>\n    <Button color={(localStorage.getItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED) === \"false\") ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {\n              localStorage.setItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED, false)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.active')}\n    </Button>\n    <Button color={(localStorage.getItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED) === \"true\") ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {\n              localStorage.setItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED, true)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n  \n  const classtypes = data.organizationClasstypes\n  // Empty list\n  if (!classtypes.edges.length) { return (\n    <OrganizationClasstypesBase>\n      <ContentCard cardTitle={t('organization.classtypes.title')}\n                  headerContent={headerOptions}>\n        <p>\n        {(!archived) ? t('organization.classtypes.empty_list') : t(\"organization.classtypes.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )}   \n\n  return (\n    <OrganizationClasstypesBase>\n      <ContentCard cardTitle={t('organization.classtypes.title')}\n                   headerContent={headerOptions}\n                   pageInfo={classtypes.pageInfo}\n                   onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: classtypes.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationClasstypes.edges\n                        const pageInfo = fetchMoreResult.organizationClasstypes.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new locations at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationClasstypes: {\n                                __typename: previousResult.organizationClasstypes.__typename,\n                                edges: [ ...previousResult.organizationClasstypes.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {classtypes.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    <Avatar size=\"lg\" imageURL={node.urlImageThumbnailSmall} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.displayPublic) ? \n                      <Badge color=\"success\">{t('general.yes')}</Badge>: \n                      <Badge color=\"danger\">{t('general.no')}</Badge>}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(localStorage.getItem(CSLS.ORGANIZATION_CLASSTYPES_ARCHIVED) === \"true\") ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <div>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/classtypes/edit/\" + node.id)}\n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/classtypes/edit_image/\" + node.id)}\n                                color=\"secondary\">\n                          {t('organization.classtypes.edit_image')}\n                        </Button>\n                      </div>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          archiveClasstype({ variables: {\n                            input: {\n                              id: node.id,\n                              archived: !node.archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_CLASSTYPES_QUERY, variables: get_list_query_variables()}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (node.archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasstypes))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const CLASSTYPE_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    description: Yup.string(),\n    urlWebsite: Yup.string()\n      .url(t(\"yup.url\")),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nimport { GET_CLASSTYPES_QUERY, ADD_CLASSTYPE } from './queries'\nimport { CLASSTYPE_SCHEMA } from './yupSchema'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport { get_list_query_variables } from './tools'\nimport OrganizationClasstypesBase from './OrganizationClasstypesBase';\n\n\nfunction OrganizationClasstypeAdd({t, history}) {\n  const returnUrl = \"/organization/classtypes\"\n  const [addClasstype] = useMutation(ADD_CLASSTYPE)\n\n  return (\n    <OrganizationClasstypesBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('organization.classtypes.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: \"\", description: \"\", displayPublic: true, urlWebsite: '' }}\n          validationSchema={CLASSTYPE_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addClasstype({ variables: {\n                input: {\n                  name: values.name, \n                  description: values.description,\n                  displayPublic: values.displayPublic,\n                  urlWebsite: values.urlWebsite,\n                  image: values.image\n                },\n                // file: values.image\n              }, refetchQueries: [\n                  {query: GET_CLASSTYPES_QUERY, variables: get_list_query_variables()}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.classtypes.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n            }}\n            >\n            {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n                <FoForm>\n                  {/* {console.log('values in FoForm')}\n                  {console.log(values)} */}\n                    <Card.Body>\n                        <Form.Group>\n                          <Form.Label className=\"custom-switch\">\n                            <Field \n                              className=\"custom-switch-input\"\n                              type=\"checkbox\" \n                              name=\"displayPublic\" \n                              checked={values.displayPublic} />\n                            <span className=\"custom-switch-indicator\" ></span>\n                            <span className=\"custom-switch-description\">{t('organization.classtype.public')}</span>\n                          </Form.Label>\n                          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                        </Form.Group>    \n                        <Form.Group label={t('general.name')}>\n                          <Field type=\"text\" \n                                  name=\"name\" \n                                  className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                  autoComplete=\"off\" />\n                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                        <Form.Group label={t('general.description')}>\n                          <Editor\n                              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                              textareaName=\"description\"\n                              initialValue={values.description}\n                              init={tinymceBasicConf}\n                              onBlur={(e) => {\n                                setFieldValue(\"description\", e.target.getContent())\n                                setFieldTouched(\"description\", true)\n                              }}\n                            />\n                          <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                        <Form.Group label={t('organization.classtype.url_website')}>\n                          <Field type=\"text\" \n                                name=\"urlWebsite\" \n                                className={(errors.urlWebsite) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                          <ErrorMessage name=\"urlWebsite\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          color=\"primary\"\n                          className=\"pull-right\" \n                          type=\"submit\" \n                          disabled={isSubmitting}\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Button color=\"link\" onClick={() => history.push(returnUrl)}>\n                            {t('general.cancel')}\n                        </Button>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </OrganizationClasstypesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasstypeAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from \"react-router-dom\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nimport { GET_CLASSTYPES_QUERY, GET_CLASSTYPE_QUERY, UPDATE_CLASSTYPE } from './queries'\nimport { CLASSTYPE_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasstypesBase from './OrganizationClasstypesBase';\n\n\nfunction OrganizationClasstypeEdit({ t, history, match }) {\n  const id = match.params.id\n  const cardTitle = t('organization.classtypes.title_edit')\n  const returnUrl = \"/organization/classtypes\"\n  const { loading, error, data } = useQuery(GET_CLASSTYPE_QUERY, { variables: {\n    id: id\n  }})\n  const [ updateClasstype ] = useMutation(UPDATE_CLASSTYPE)\n\n  if (loading) return (\n    <OrganizationClasstypesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasstypesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n\n                      \n  const initialData = data.organizationClasstype\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationClasstypesBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n              description: initialData.description,\n              displayPublic: initialData.displayPublic,\n              urlWebsite: initialData.urlWebsite\n            }}\n            validationSchema={CLASSTYPE_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateClasstype({ variables: {\n                  input: {\n                    id: id,\n                    name: values.name,\n                    description: (values.description) ? values.description: '',\n                    displayPublic: values.displayPublic,\n                    urlWebsite: (values.urlWebsite) ? values.urlWebsite: ''\n                  }\n                }, refetchQueries: [\n                    {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    toast.success((t('organization.classtypes.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    setSubmitting(false)\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values, setFieldValue, setFieldTouched }) => (\n                <FoForm>\n                    {console.log(values)}\n                    <Card.Body>\n                        <Form.Group>\n                          <Form.Label className=\"custom-switch\">\n                            <Field \n                              className=\"custom-switch-input\"\n                              type=\"checkbox\" \n                              name=\"displayPublic\" \n                              checked={values.displayPublic} />\n                            <span className=\"custom-switch-indicator\" ></span>\n                            <span className=\"custom-switch-description\">{t('organization.classtype.public')}</span>\n                          </Form.Label>\n                          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                        </Form.Group>     \n                        <Form.Group label={t('general.name')} >\n                          <Field type=\"text\" \n                                name=\"name\" \n                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                        <Form.Group label={t('general.description')}>\n                          <Editor\n                            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                            textareaName=\"description\"\n                            initialValue={values.description}\n                            init={tinymceBasicConf}\n                            onBlur={(e) => {\n                              setFieldValue(\"description\", e.target.getContent())\n                              setFieldTouched(\"description\", true)\n                            }}\n                          />\n                          <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                        <Form.Group label={t('organization.classtype.url_website')}>\n                          <Field type=\"text\" \n                                name=\"urlWebsite\" \n                                className={(errors.urlWebsite) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                          <ErrorMessage name=\"urlWebsite\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          className=\"pull-right\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          type=\"submit\"\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button\n                            type=\"button\" \n                            color=\"link\" \n                          >\n                              {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </OrganizationClasstypesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasstypeEdit))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\nimport { \n  Formik,\n  Form as FoForm, \n  Field, \n  ErrorMessage \n} from 'formik'\n\n\nimport { GET_CLASSTYPES_QUERY, GET_CLASSTYPE_QUERY, UPDATE_CLASSTYPE_IMAGE } from './queries'\n\nimport {\n  Dimmer,\n  Grid,\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationClasstypesBase from './OrganizationClasstypesBase';\nimport { customFileInputLabelStyle } from \"../../../tools/custom_file_input_label_style\"\n\n\nfunction OrganizationClasstypeEditImage({t, history, match}) {\n  const classtypeId = match.params.id\n  const returnUrl = \"/organization/classtypes\"\n  const cardTitle = t('organization.classtypes.edit_image')\n  const { loading, error, data } = useQuery(GET_CLASSTYPE_QUERY, {\n    variables: { id: classtypeId }\n  })\n  const [ uploadImage ] = useMutation(UPDATE_CLASSTYPE_IMAGE)\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n\n\n  if (loading) return (\n    <OrganizationClasstypesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationClasstypesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationClasstypesBase>\n  )\n\n  const initialData = data.organizationClasstype\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationClasstypesBase>\n      <Card title={cardTitle}>\n       <Formik\n          initialValues={{}}\n          // validationSchema={DOCUMENT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log(\"Submit values\")\n            console.log(values)\n            console.log(fileName)\n  \n            let inputVars = {\n              id: classtypeId,\n              imageFileName: fileName,\n            }\n  \n            let reader = new FileReader()\n            reader.onload = function(reader_event) {\n              console.log(reader_event.target.result)\n              let b64_enc_file = reader_event.target.result\n              console.log(b64_enc_file)\n              // Add uploaded document b64 encoded blob to input vars\n              inputVars.image = b64_enc_file\n  \n              uploadImage({ variables: {\n                input: inputVars\n              }, refetchQueries: [\n                {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.classtypes.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                    setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n            }\n            \n            let file = inputFileName.current.files[0]\n            if (file && file.size < 5242880) {\n              reader.readAsDataURL(file)\n            } else if (file && file.size > 5242880) { \n              toast.error(t(\"error_messages.selected_file_exceeds_max_filesize\"), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            } else {\n              toast.error(t(\"general.please_select_a_file\"), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <FoForm>\n            <Card.Body>\n              <Grid.Row>\n                <Grid.Col>\n                  <Form.Group label={t('general.custom_file_input_label')}>\n                    <div className=\"custom-file\">\n                      <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                      <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                        {fileInputLabel}\n                      </label>\n                    </div>\n                  </Form.Group>\n                </Grid.Col>\n              </Grid.Row>\n            </Card.Body>\n            <Card.Footer>\n              <Button \n                color=\"primary\"\n                className=\"pull-right\" \n                type=\"submit\" \n                disabled={isSubmitting}\n              >\n                {t('general.submit')}\n              </Button>\n              <Link to={returnUrl}>\n                <Button color=\"link\">\n                  {t('general.cancel')}\n                </Button>\n              </Link>\n            </Card.Footer>\n          </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationClasstypesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationClasstypeEditImage))","import { gql } from \"@apollo/client\"\n\nexport const GET_DISCOVERIES_QUERY = gql`\n  query OrganizationDiscoveries($after: String, $before: String, $archived: Boolean) {\n    organizationDiscoveries(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_DISCOVERY_QUERY = gql`\n  query SchoolDiscovery($id: ID!) {\n    organizationDiscovery(id:$id) {\n      id\n      name\n      archived\n    }\n  }\n`\n\nexport const ADD_DISCOVERY = gql`\n  mutation CreateOrganizationDiscovery($input:CreateOrganizationDiscoveryInput!) {\n    createOrganizationDiscovery(input: $input) {\n      organizationDiscovery{\n        id\n        archived\n        name\n      }\n    }\n  }\n`\n\nexport const UPDATE_DISCOVERY = gql`\nmutation UpdateOrganizationDiscovery($input: UpdateOrganizationDiscoveryInput!) {\n  updateOrganizationDiscovery(input: $input) {\n    organizationDiscovery {\n      id\n      name\n    }\n  }\n}\n`\n\nexport const ARCHIVE_DISCOVERY = gql`\nmutation ArchiveOrganizationDiscovery($input: ArchiveOrganizationDiscoveryInput!) {\n  archiveOrganizationDiscovery(input: $input) {\n    organizationDiscovery {\n      id\n      archived\n    }\n  }\n}\n`\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationDiscoveriesBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/discoveries\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n             :\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"organizationdiscovery\">\n                <Link to=\"/organization/discoveries/add\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.discoveries.add')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              }\n              <OrganizationMenu activeLink='discoveries'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n)}\n\n\nexport default withTranslation()(withRouter(OrganizationDiscoveriesBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\n\nimport { GET_DISCOVERIES_QUERY, ARCHIVE_DISCOVERY } from \"./queries\"\nimport OrganizationDiscoveriesBase from './OrganizationDiscoveriesBase'\n\n\nfunction OrganizationDiscoveries({ t, history }) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('organization.discoveries.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_DISCOVERIES_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveDiscovery ] = useMutation(ARCHIVE_DISCOVERY)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <OrganizationDiscoveriesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  )\n\n  if (error) return (\n    <OrganizationDiscoveriesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.discoveries.error_loading')}</p>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  )\n\n  const discoveries = data.organizationDiscoveries\n\n  // Empty list\n  if (!discoveries.edges.length) { return (\n    <OrganizationDiscoveriesBase>\n      <ContentCard cardTitle={cardTitle}\n                  headerContent={headerOptions}>\n        <p> \n          {(!archived) ? t('organization.discoveries.empty_list') : t(\"organization.discoveries.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  )}\n\n  return (\n    <OrganizationDiscoveriesBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}\n                    pageInfo={discoveries.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: discoveries.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationDiscoveries.edges\n                        const pageInfo = fetchMoreResult.organizationDiscoveries.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new discoveries at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationDiscoveries: {\n                                __typename: previousResult.organizationDiscoveries.__typename,\n                                edges: [ ...previousResult.organizationDiscoveries.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {discoveries.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/organization/discoveries/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveDiscovery({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_DISCOVERIES_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  ) \n}\n\n\nexport default withTranslation()(withRouter(OrganizationDiscoveries))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const DISCOVERY_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from \"react-router-dom\"\n\n\nimport { GET_DISCOVERIES_QUERY, ADD_DISCOVERY } from './queries'\nimport { DISCOVERY_SCHEMA } from './yupSchema'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport OrganizationDiscoveriesBase from './OrganizationDiscoveriesBase';\n\n\nfunction OrganizationDiscoveryAdd({t, history}) {\n  const returnUrl = \"/organization/discoveries\"\n  const [ addDiscovery ] = useMutation(ADD_DISCOVERY)\n\n  return (\n    <OrganizationDiscoveriesBase showBack={true}>\n      <Card title={t('organization.discoveries.title_add')}>\n        <Formik\n            initialValues={{ name: '', code: '' }}\n            validationSchema={DISCOVERY_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                addDiscovery({ variables: {\n                  input: {\n                    name: values.name, \n                  }\n                }, refetchQueries: [\n                    {query: GET_DISCOVERIES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data);\n                    history.push(returnUrl)\n                    toast.success((t('organization.discoveries.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n                <FoForm>\n                    <Card.Body>\n                        <Form.Group label={t('general.name')}>\n                          <Field type=\"text\" \n                                  name=\"name\" \n                                  className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                  autoComplete=\"off\" />\n                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          color=\"primary\"\n                          className=\"pull-right\" \n                          type=\"submit\" \n                          disabled={isSubmitting}\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button color=\"link\">\n                              {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </OrganizationDiscoveriesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationDiscoveryAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from \"react-router-dom\"\n\nimport { GET_DISCOVERIES_QUERY, GET_DISCOVERY_QUERY, UPDATE_DISCOVERY } from './queries'\nimport { DISCOVERY_SCHEMA } from './yupSchema'\n\nimport {\n  Dimmer,\n  Button,\n  Card,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationDiscoveriesBase from './OrganizationDiscoveriesBase';\n\n\nfunction OrganizationDiscoveryEdit({t, history, match}) {\n  const id = match.params.id\n  const returnUrl = \"/organization/discoveries\"\n  const cardTitle = t('organization.discoveries.title_edit')\n  const { loading, error, data } = useQuery(GET_DISCOVERY_QUERY, {\n    variables: {id: id}\n  })\n  const [ updateDiscovery ] = useMutation(UPDATE_DISCOVERY)\n\n  if (loading) return (\n    <OrganizationDiscoveriesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  )\n\n  if (error) return (\n    <OrganizationDiscoveriesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationDiscoveriesBase>\n  )\n\n  const initialData = data.organizationDiscovery;\n\n  return (\n    <OrganizationDiscoveriesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n            }}\n            validationSchema={DISCOVERY_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateDiscovery({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                  }\n                }, refetchQueries: [\n                    {query: GET_DISCOVERIES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.discoveries.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values }) => (\n                <FoForm>\n                    <Card.Body>    \n                        <Form.Group label={t('general.name')} >\n                          <Field type=\"text\" \n                                name=\"name\" \n                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                autoComplete=\"off\" />\n                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                        </Form.Group>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button \n                          className=\"pull-right\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          type=\"submit\"\n                        >\n                          {t('general.submit')}\n                        </Button>\n                        <Link to={returnUrl}>\n                          <Button\n                            type=\"button\" \n                            color=\"link\" \n                          >\n                              {t('general.cancel')}\n                          </Button>\n                        </Link>\n                    </Card.Footer>\n                </FoForm>\n            )}\n        </Formik>\n      </Card>\n    </OrganizationDiscoveriesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationDiscoveryEdit))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationDocuments({ t, match }) {\n  const organizationId = match.params.organization_id\n  const docTypes = [\n    [ \"TERMS_AND_CONDITIONS\", t(\"general.terms_and_conditions\")],\n    [ \"PRIVACY_POLICY\", t(\"general.privacy_policy\")],\n  ]\n\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('organization.title')}>\n            {/* <div className=\"page-options d-flex\">\n              <Link to={`/organization/edit/${organizationId}`}>\n                <Button \n                  icon=\"arrow-left\"\n                  className=\"mr-2\"\n                  outline\n                  color=\"secondary\"\n                >\n                  {t('general.back_to')} {t('organization.title')}\n                </Button>\n              </Link>\n            </div> */}\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.documents.title')}</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  <Table>\n                    <Table.Header>\n                      <Table.Row key={v4()}>\n                        <Table.ColHeader>{t('general.document')}</Table.ColHeader>\n                        <Table.ColHeader></Table.ColHeader>\n                      </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {docTypes.map((docType) => (\n                          <Table.Row key={v4()}>\n                            <Table.Col key={v4()}>\n                              {docType[1]}\n                            </Table.Col>\n                            <Table.Col className=\"text-right\" key={v4()}>\n                              <Link to={`/organization/documents/${organizationId}/${docType[0]}`}>\n                                <Button className='btn-sm' \n                                        color=\"secondary\">\n                                  {t('general.manage')} <Icon name=\"chevron-right\" />\n                                </Button>\n                              </Link>\n                            </Table.Col>\n                          </Table.Row>\n                        ))}\n                    </Table.Body>\n                  </Table>\n                </Card.Body>\n              </Card>        \n            </Grid.Col>\n            <Grid.Col md={3}>\n              <h5>{t(\"general.menu\")}</h5>\n              <OrganizationMenu activeLink='documents'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationDocuments))","import React, { useContext } from 'react'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../context/AppSettingsContext'\n\n\nfunction FormatISODateStr({ ISODateStr }) {\n    const appSettings = useContext(AppSettingsContext)\n    const dateFormat = appSettings.dateFormat\n\n    return (\n        moment(ISODateStr).format(dateFormat)    \n    )\n}\n\nexport default FormatISODateStr\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Button\n} from \"tabler-react\";\n\nconst FileDownloadTableButton = ({ t, mediaUrl, className=\"\", target=\"_blank\" }) => {\n  return <Button \n           color={\"secondary \" + className}\n           size=\"sm\"\n           icon=\"download-cloud\"\n           target={target}\n           RootComponent=\"a\" \n           href={mediaUrl}\n          >\n           {t('general.download')}\n          </Button>\n}\n\nexport default withTranslation()(FileDownloadTableButton)\n\n\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationDocumentsBase({ t, children, headerLinks, sidebarButton }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('organization.title')}>\n            <div className=\"page-options d-flex\">\n              {headerLinks}\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}        \n            </Grid.Col>\n            <Grid.Col md={3}>\n              {sidebarButton}\n              <h5>{t(\"general.menu\")}</h5>\n              <OrganizationMenu activeLink='documents'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationDocumentsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_DOCUMENTS_QUERY = gql`\n  query OrganizationDocuments($documentType: String!) {\n    organizationDocuments(documentType:$documentType) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          documentType\n          version\n          dateStart\n          dateEnd\n          document\n          urlDocument\n        }\n      }\n    }\n  }\n`\n\nexport const GET_DOCUMENT_QUERY = gql`\n  query OrganizationDocument($id: ID!) {\n    organizationDocument(id:$id) {\n      id\n      version\n      dateStart\n      dateEnd\n      document\n    }\n  }\n`\n\nexport const ADD_DOCUMENT = gql`\n  mutation CreateOrganizationDocument($input:CreateOrganizationDocumentInput!) {\n    createOrganizationDocument(input: $input) {\n      organizationDocument{\n        id\n        version\n        dateStart\n        dateEnd\n      }\n    }\n  }\n`\n\nexport const UPDATE_DOCUMENT = gql`\n  mutation UpdateOrganizationDocument($input:UpdateOrganizationDocumentInput!) {\n    updateOrganizationDocument(input: $input) {\n      organizationDocument{\n        id\n        version\n        dateStart\n        dateEnd\n      }\n    }\n  }\n`\n\nexport const DELETE_DOCUMENT = gql`\n  mutation DeleteOrganizationDocument($input:DeleteOrganizationDocumentInput!) {\n    deleteOrganizationDocument(input: $input) {\n      ok\n    }\n  }\n`","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_DOCUMENT, GET_DOCUMENTS_QUERY } from \"./queries\"\nimport confirmDelete from \"../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction OrganizationDocumentDelete({t, match, node}) {\n  const [deleteOrganizationDocument, { data }] = useMutation(DELETE_DOCUMENT)\n\n  return (\n    <button className=\"icon btn btn-link btn-sm\" \n      title={t('general.delete')} \n      href=\"\"\n      onClick={() => {\n        confirmDelete({\n          t: t,\n          msgConfirm: t(\"organization.documents.delete_confirm_msg\"),\n          msgDescription: <p> {t(\"general.version\")}: {node.version}</p>,\n          msgSuccess: t('organization.documents.deleted'),\n          deleteFunction: deleteOrganizationDocument,\n          functionVariables: { \n            variables: {\n              input: { id: node.id }\n            }, \n            refetchQueries: [\n              {query: GET_DOCUMENTS_QUERY, variables: { documentType: node.documentType} },\n            ]\n          }\n        })\n    }}>\n      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationDocumentDelete))\n","\nexport function getSubtitle(t, documentType) {\n  switch (documentType) {\n    case \"TERMS_AND_CONDITIONS\":\n      return t('general.terms_and_conditions')\n    case \"PRIVACY_POLICY\":\n      return t('general.privacy_policy')\n    default:\n      return \"Invalid document type\"\n  }\n}\n  ","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport ISODateString from \"../../ui/ISODateString\"\nimport FileDownloadTableButton from \"../../ui/FileDownloadTableButton\"\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationMenu from \"../OrganizationMenu\"\nimport OrganizationDocumentsBase from \"./OrganizationDocumentsBase\"\nimport OrganizationDocumentsDelete from \"./OrganizationDocumentDelete\"\nimport { getSubtitle } from './tools'\n\nimport { GET_DOCUMENTS_QUERY, DELETE_DOCUMENT } from \"./queries\"\n\n\nfunction OrganizationListDocuments({ t, match, history }) {\n  const organizationId = match.params.organization_id\n  const documentType = match.params.document_type\n  const subTitle = getSubtitle(t, documentType)\n\n  const back = <Link to={`/organization/documents/${organizationId}`}>\n    <Button \n      icon=\"arrow-left\"\n      className=\"mr-2\"\n      outline\n      color=\"secondary\"\n    >\n      {t('general.back_to')} {t('organization.documents.title')}\n    </Button>\n  </Link>\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"add\"\n    resource=\"organizationdocument\">\n      <Link to={`/organization/documents/${organizationId}/${documentType}/add`} >\n        <Button color=\"primary btn-block mb-6\" >\n          <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.documents.add')}\n        </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_DOCUMENTS_QUERY, {\n    variables: { documentType: documentType }\n  })\n\n  if (loading) {\n    return (\n      <OrganizationDocumentsBase headerLinks={back}>\n        {t('general.loading_with_dots')}\n      </OrganizationDocumentsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <OrganizationDocumentsBase headerLinks={back}>\n        {t('organization.documents.error_loading')}\n      </OrganizationDocumentsBase>\n    )\n  }\n  \n\n  return (\n    <OrganizationDocumentsBase headerLinks={back} sidebarButton={sidebarButton}>\n      <ContentCard \n        cardTitle={t('organization.documents.title') + ' - ' + subTitle}\n        pageInfo={data.organizationDocuments.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: data.organizationDocuments.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.organizationDocuments.edges\n              const pageInfo = fetchMoreResult.organizationDocuments.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the fetched documents at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    organizationDocuments: {\n                      __typename: previousResult.organizationDocuments.__typename,\n                      edges: [ ...previousResult.organizationDocuments.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }}\n      >\n        <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.date')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.version')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.download')}</Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                  {data.organizationDocuments.edges.map(({ node }) => (\n                    <Table.Row key={v4()}>\n                      <Table.Col key={v4()}>\n                        <ISODateString ISODateStr={node.dateStart} />\n                        {(node.dateEnd) ? <span> - <ISODateString ISODateStr={node.dateEnd} /></span> : \"\"}\n                      </Table.Col>\n                      <Table.Col key={v4()}>\n                        {node.version}\n                      </Table.Col>\n                      <Table.Col key={v4()}>\n                        <FileDownloadTableButton mediaUrl={node.urlDocument} />\n                      </Table.Col>\n                      <Table.Col className=\"text-right\" key={v4()}>\n                        <Link to={`/organization/documents/${organizationId}/${documentType}/edit/${node.id}`} >\n                          <Button className='btn-sm' \n                                  color=\"secondary\">\n                            {t('general.edit')}\n                          </Button>\n                        </Link>\n                        <OrganizationDocumentsDelete node={node} />\n                      </Table.Col>\n                    </Table.Row>\n                  ))}\n              </Table.Body>\n            </Table>\n      </ContentCard>\n    </OrganizationDocumentsBase>\n  )\n\n}\n\nexport default withTranslation()(withRouter(OrganizationListDocuments))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { \n  Formik,\n  Form as FoForm, \n  Field, \n  ErrorMessage \n} from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { ADD_DOCUMENT, GET_DOCUMENTS_QUERY } from \"./queries\"\nimport { DOCUMENT_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from \"../../../tools/date_tools\"\n// import OrganizationDocumentForm from './OrganizationDocumentForm'\nimport CSDatePicker from \"../../ui/CSDatePicker\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationDocumentsBase from \"./OrganizationDocumentsBase\"\nimport { getSubtitle } from './tools'\n\n\nconst customFileInputLabelStyle = {\n  whiteSpace: \"nowrap\",\n  display: \"block\",\n  overflow: \"hidden\"\n}  \n\n\nfunction OrganizationDocumentAdd({ t, match, history }) {\n  const organizationId = match.params.organization_id\n  const documentType = match.params.document_type\n  const subTitle = getSubtitle(t, documentType)\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n\n  // Vars for document file input field end\n  \n  const returnUrl = `/organization/documents/${organizationId}/${documentType}`\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"add\"\n    resource=\"organizationdocument\">\n      <Link to={returnUrl} >\n        <Button color=\"primary btn-block mb-6\" >\n          <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n        </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  const [addDocument, { data }] = useMutation(ADD_DOCUMENT, {\n    onCompleted: () => history.push(returnUrl)\n  })\n\n  return (\n    <OrganizationDocumentsBase sidebarButton={sidebarButton}>\n      <Card title={t('organization.documents.add') + ' - ' + subTitle}>\n        <Formik\n          initialValues={{ \n            version: '',\n            dateStart: '', \n            dateEnd: '',\n            document: ''\n          }}\n          // validationSchema={DOCUMENT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log(\"Submit values\")\n            console.log(values)\n            console.log(fileName)\n\n            let inputVars = {\n              documentType: documentType,\n              version: values.version,\n              dateStart: dateToLocalISO(values.dateStart),\n              documentFileName: fileName,\n            }\n\n            if (values.dateEnd) {\n              inputVars.dateEnd = dateToLocalISO(values.dateEnd)\n            }\n\n            let reader = new FileReader()\n            reader.onload = function(reader_event) {\n              console.log(reader_event.target.result)\n              let b64_enc_file = reader_event.target.result\n              console.log(b64_enc_file)\n              // Add uploaded document b64 encoded blob to input vars\n              inputVars.document = b64_enc_file\n\n              addDocument({ variables: {\n                input: inputVars\n              }, refetchQueries: [\n                  {query: GET_DOCUMENTS_QUERY, variables: {documentType: documentType}}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  toast.success((t('organization.documents.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                    setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n            }\n            \n            let file = inputFileName.current.files[0]\n            reader.readAsDataURL(file)\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <FoForm>\n            <Card.Body>\n              <Grid.Row>\n                <Grid.Col>\n                  <Form.Group label={t('general.version')}>\n                    <Field type=\"text\" \n                          name=\"version\" \n                          className={(errors.version) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\" />\n                    <ErrorMessage name=\"version\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n                <Grid.Col>\n                  <Form.Group label={t('general.custom_file_input_label')}>\n                    <div className=\"custom-file\">\n                      <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                      <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                        {fileInputLabel}\n                      </label>\n                    </div>\n                  </Form.Group>\n                </Grid.Col>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col>\n                  <Form.Group label={t('general.date_start')}>\n                    <CSDatePicker \n                      selected={values.dateStart}\n                      onChange={(date) => setFieldValue(\"dateStart\", date)}\n                      onBlur={() => setFieldTouched(\"dateStart\", true)}\n                    />\n                    <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n                <Grid.Col>\n                  <Form.Group label={t('general.date_end')}>\n                    <CSDatePicker \n                      selected={values.dateEnd}\n                      onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                      onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                    />\n                    <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n              </Grid.Row>\n            </Card.Body>\n            <Card.Footer>\n              <Button \n                color=\"primary\"\n                className=\"pull-right\" \n                type=\"submit\" \n                disabled={isSubmitting}\n              >\n                {t('general.submit')}\n              </Button>\n              <Button color=\"link\" onClick={() => history.push(returnUrl)}>\n                {t('general.cancel')}\n              </Button>\n            </Card.Footer>\n          </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationDocumentsBase>\n  )\n}\n\nexport default withTranslation()(OrganizationDocumentAdd)\n\n\n// const OrganizationLevelAdd = ({ t, history }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t('organization.title')} />\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//           <Card>\n//             <Card.Header>\n//               <Card.Title>{t('organization.levels.title_add')}</Card.Title>\n//             </Card.Header>\n//             <Mutation mutation={ADD_LEVEL} onCompleted={() => history.push(return_url)}> \n//                 {(addLocation, { data }) => (\n//                     <Formik\n//                         initialValues={{ name: '', code: '' }}\n//                         validationSchema={LEVEL_SCHEMA}\n//                         onSubmit={(values, { setSubmitting }) => {\n//                             addLocation({ variables: {\n//                               input: {\n//                                 name: values.name, \n//                               }\n//                             }, refetchQueries: [\n//                                 {query: GET_LEVELS_QUERY, variables: {\"archived\": false }}\n//                             ]})\n//                             .then(({ data }) => {\n//                                 console.log('got data', data);\n//                                 toast.success((t('organization.levels.toast_add_success')), {\n//                                     position: toast.POSITION.BOTTOM_RIGHT\n//                                   })\n//                               }).catch((error) => {\n//                                 toast.error((t('general.toast_server_error')) +  error, {\n//                                     position: toast.POSITION.BOTTOM_RIGHT\n//                                   })\n//                                 console.log('there was an error sending the query', error)\n//                                 setSubmitting(false)\n//                               })\n//                         }}\n//                         >\n//                         {({ isSubmitting, errors }) => (\n//                             <OrganizationLevelForm \n//                               isSubmitting={isSubmitting}\n//                               errors={errors}\n//                               return_url={return_url}\n//                             />\n//                         )}\n//                     </Formik>\n//                 )}\n//                 </Mutation>\n//           </Card>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"organizationlevel\">\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(return_url)}>\n//                 <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <OrganizationMenu activeLink='levels'/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// )\n\n// export default withTranslation()(withRouter(OrganizationLevelAdd))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const LEVEL_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { \n  Formik,\n  Form as FoForm, \n  Field, \n  ErrorMessage \n} from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { UPDATE_DOCUMENT, GET_DOCUMENT_QUERY, GET_DOCUMENTS_QUERY } from \"./queries\"\nimport { DOCUMENT_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from \"../../../tools/date_tools\"\n// import OrganizationDocumentForm from './OrganizationDocumentForm'\nimport CSDatePicker from \"../../ui/CSDatePicker\"\n\nimport {\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationDocumentsBase from \"./OrganizationDocumentsBase\"\nimport { getSubtitle } from './tools'\n\n\nfunction OrganizationDocumentEdit({ t, match, history }) {\n  const organizationId = match.params.organization_id\n  const documentType = match.params.document_type\n  const id = match.params.id\n  const subTitle = getSubtitle(t, documentType)\n  \n  const returnUrl = `/organization/documents/${organizationId}/${documentType}`\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"change\"\n    resource=\"organizationdocument\">\n      <Link to={returnUrl} >\n        <Button color=\"primary btn-block mb-6\" >\n          <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n        </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  const [updateDocument, { data: dataUpdate }] = useMutation(UPDATE_DOCUMENT, {\n    onCompleted: () => history.push(returnUrl)\n  })\n  const { loading, error, data } = useQuery(GET_DOCUMENT_QUERY, {\n    variables: { \"id\": id }\n  })\n\n  if (loading) {\n    return (\n      <OrganizationDocumentsBase sidebarButton={sidebarButton}>\n        {t(\"general.loading_with_dots\")}\n      </OrganizationDocumentsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <OrganizationDocumentsBase sidebarButton={sidebarButton}>\n        {t(\"organization.documents.error_loading\")}\n      </OrganizationDocumentsBase>\n    )\n  }\n\n\n  return (\n    <OrganizationDocumentsBase sidebarButton={sidebarButton}>\n      <Card>\n        <Card.Header>\n          <Card.Title>\n            {t('organization.documents.edit') + ' - ' + subTitle}\n          </Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            version: data.organizationDocument.version,\n            dateStart: data.organizationDocument.dateStart, \n            dateEnd: data.organizationDocument.dateEnd,\n          }}\n          // validationSchema={DOCUMENT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log(\"Submit values\")\n            console.log(values)\n\n            let inputVars = {\n              id: id,\n              version: values.version,\n              dateStart: dateToLocalISO(values.dateStart),\n            }\n\n            if (values.dateEnd) {\n              inputVars.dateEnd = dateToLocalISO(values.dateEnd)\n            }\n\n            updateDocument({ variables: {\n              input: inputVars\n            }, refetchQueries: [\n                {query: GET_DOCUMENTS_QUERY, variables: {documentType: documentType}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('organization.documents.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                  setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <FoForm>\n            <Card.Body>\n              <Grid.Row>\n                <Grid.Col>\n                  <Form.Group label={t('general.version')}>\n                    <Field type=\"text\" \n                          name=\"version\" \n                          className={(errors.version) ? \"form-control is-invalid\" : \"form-control\"} \n                          autoComplete=\"off\" />\n                    <ErrorMessage name=\"version\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n                {/* <Grid.Col>\n                  <Form.Group label={t('general.custom_file_input_label')}>\n                    <div className=\"custom-file\">\n                      <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                      <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                        {fileInputLabel}\n                      </label>\n                    </div>\n                  </Form.Group>\n                </Grid.Col> */}\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col>\n                  <Form.Group label={t('general.date_start')}>\n                    <CSDatePicker \n                      selected={values.dateStart}\n                      onChange={(date) => setFieldValue(\"dateStart\", date)}\n                      onBlur={() => setFieldTouched(\"dateStart\", true)}\n                    />\n                    <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n                <Grid.Col>\n                  <Form.Group label={t('general.date_end')}>\n                    <CSDatePicker \n                      selected={values.dateEnd}\n                      onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                      onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                    />\n                    <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n              </Grid.Row>\n            </Card.Body>\n            <Card.Footer>\n              <Button \n                color=\"primary\"\n                className=\"pull-right\" \n                type=\"submit\" \n                disabled={isSubmitting}\n              >\n                {t('general.submit')}\n              </Button>\n              <Button color=\"link\" onClick={() => history.push(returnUrl)}>\n                {t('general.cancel')}\n              </Button>\n            </Card.Footer>\n          </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationDocumentsBase>\n  )\n}\n\nexport default withTranslation()(OrganizationDocumentEdit)\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationHolidaysBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/holidays\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>  \n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationholiday\">\n                  <Link to=\"/organization/holidays/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.holidays.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }     \n              <OrganizationMenu activeLink='holidays'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationHolidaysBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_HOLIDAYS_QUERY = gql`\n  query OrganizationHolidays($after: String, $before: String) {\n    organizationHolidays(first: 15, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          description\n          dateStart\n          dateEnd\n          classes\n          organizationLocations {\n            edges {\n              node {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_HOLIDAY_QUERY = gql`\n  query OrganizationHoliday($id: ID!) {\n    organizationHoliday(id:$id) {\n      id\n      name\n      description\n      dateStart\n      dateEnd\n      classes\n    }\n  }\n`\n\nexport const ADD_HOLIDAY = gql`\n  mutation CreateOrganizationHoliday($input:CreateOrganizationHolidayInput!) {\n    createOrganizationHoliday(input: $input) {\n      organizationHoliday {\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_HOLIDAY = gql`\n  mutation UpdateOrganizationHoliday($input: UpdateOrganizationHolidayInput!) {\n    updateOrganizationHoliday(input: $input) {\n      organizationHoliday {\n        id\n        name\n      }\n    }\n  }\n`\n\nexport const DELETE_HOLIDAY = gql`\n  mutation DeleteOrganizationHoliday($input: DeleteOrganizationHolidayInput!) {\n    deleteOrganizationHoliday(input: $input) {\n      ok\n    }\n  }\n`\n\nexport const GET_HOLIDAY_LOCATIONS_QUERY = gql`\n  query GetOrganizationHolidayLocations($after: String, $before: String, $id:ID!) {\n    organizationLocations(first: 100, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    organizationHoliday(id: $id) {\n      id\n      name\n      description\n      organizationLocations {\n        edges {\n          node {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const ADD_LOCATION_TO_HOLIDAY = gql`\n  mutation AddLocationToHoliday($input: CreateOrganizationHolidayLocationInput!) {\n    createOrganizationHolidayLocation(input:$input) {\n      organizationHolidayLocation {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_LOCATION_FROM_HOLIDAY = gql`\n  mutation DeleteLocationFromHoliday($input: DeleteOrganizationHolidayLocationInput!) {\n    deleteOrganizationHolidayLocation(input:$input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from \"moment\"\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\n\nimport {\n  Badge,\n  Icon,\n  Dimmer,\n  Button,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationHolidaysBase from './OrganizationHolidaysBase'\n\nimport { GET_HOLIDAYS_QUERY, DELETE_HOLIDAY } from \"./queries\"\n\n\nfunction OrganizationHolidays({t, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  const cardTitle = t('organization.holidays.title')\n  \n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_HOLIDAYS_QUERY)\n  const [ deleteHoliday ] = useMutation(DELETE_HOLIDAY)\n\n  if (loading) return (\n    <OrganizationHolidaysBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n\n  if (error) return (\n    <OrganizationHolidaysBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.holidays.error_loading')}</p>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n\n  let holidays = data.organizationHolidays\n\n  // Empty list\n  if (!holidays.edges.length) { return (\n    <OrganizationHolidaysBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.holidays.empty_list')}</p>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )}\n\n\n  return (\n    <OrganizationHolidaysBase>\n      <ContentCard \n        cardTitle={cardTitle}\n        pageInfo={holidays.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: holidays.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.organizationHolidays.edges\n            const pageInfo = fetchMoreResult.organizationHolidays.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new levels at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  organizationHolidays: {\n                    __typename: previousResult.organizationHolidays.__typename,\n                    edges: [ ...previousResult.organizationHolidays.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n          }\n        })\n      }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n              <Table.ColHeader>{t('organization.locations.title')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {holidays.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name} \n                    <div className=\"text-muted\">\n                      <small dangerouslySetInnerHTML={{__html: node.description}} />\n                    </div>\n                  </Table.Col>\n                  <Table.Col>\n                    {moment(node.dateStart).format(dateFormat)}\n                  </Table.Col>\n                  <Table.Col>\n                    {moment(node.dateEnd).format(dateFormat)}\n                  </Table.Col>\n                  <Table.Col>\n                    {node.organizationLocations.edges.map(({ node: location }) => (\n                       <div><Badge color=\"primary\" className=\"mr-1\">{location.name}</Badge></div>\n                    ))}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={`/organization/holidays/edit/${node.id}/locations`}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('organization.holidays.locations.title_edit')}\n                      </Button>\n                    </Link>\n                    <Link to={`/organization/holidays/edit/${node.id}`}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"organization.holidays.holiday_delete_confirm_msg\"),\n                          msgDescription: <p>{node.name}</p>,\n                          msgSuccess: t('organization.holidays.payment_deleted'),\n                          deleteFunction: deleteHoliday,\n                          functionVariables: { \n                            variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, \n                            refetchQueries: [\n                              {query: GET_HOLIDAYS_QUERY },\n                            ]\n                          }\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n}\n\n\n\nexport default withTranslation()(withRouter(OrganizationHolidays))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const HOLIDAY_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid,\n  } from \"tabler-react\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"  \nimport CSDatePicker from \"../../ui/CSDatePicker\"\n\nconst OrganizationHolidayForm = ({ t, history, isSubmitting, values, errors, setFieldTouched, setFieldValue, returnUrl }) => (\n    <FoForm>\n        <Card.Body>\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Grid.Row>\n              <Grid.Col>\n                <Form.Group label={t('general.date_start')}>\n                  <CSDatePicker \n                      className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                      selected={values.dateStart}\n                      onChange={(date) => {\n                      setFieldValue(\"dateStart\", date)\n                      setFieldTouched(\"dateStart\", true)\n                      }}\n                      onBlur={() => setFieldTouched(\"dateStart\", true)}\n                  />\n                  <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n                </Form.Group>\n              </Grid.Col>\n                <Grid.Col>\n                  <Form.Group label={t('general.date_end')}>\n                    <CSDatePicker \n                      selected={values.dateEnd}\n                      onChange={(date) => {\n                          setFieldValue(\"dateEnd\", date)\n                          setFieldTouched(\"dateEnd\", true)\n                      }}\n                      onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                      placeholderText={t('general.date_end')}\n                    />\n                    <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n                  </Form.Group>\n                </Grid.Col>\n              </Grid.Row>\n            <h5>{t(\"general.apply_to\")}</h5>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"classes\" \n                  checked={values.classes} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('general.classes')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"classes\" component=\"div\" />   \n            </Form.Group>  \n          <Form.Group label={t('general.description')}>\n            <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"description\"\n                initialValue={values.description}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                    setFieldValue(\"description\", e.target.getContent())\n                    setFieldTouched(\"description\", true, true)\n                }}\n                />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Card.Body>\n        <Card.Footer>\n            <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n            >\n            {t('general.submit')}\n            </Button>\n            <Link to={returnUrl}>\n                <Button color=\"link\">\n                    {t('general.cancel')}\n                </Button>\n            </Link>\n        </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationHolidayForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport { dateToLocalISO } from \"../../../tools/date_tools\"\n\nimport { GET_HOLIDAYS_QUERY, ADD_HOLIDAY } from './queries'\nimport { HOLIDAY_SCHEMA } from './yupSchema'\nimport OrganizationHolidayForm from './OrganizationHolidayForm'\nimport OrganizationHolidaysBase from './OrganizationHolidaysBase';\n\n\nfunction OrganizationHolidayAdd({t, history}) {\n  const returnUrl = \"/organization/holidays\"\n  const [ addHoliday ] = useMutation(ADD_HOLIDAY)\n  \n  return (\n   <OrganizationHolidaysBase showBack={true}>\n    <Card>\n      <Card.Header>\n        <Card.Title>{t('organization.holidays.title_add')}</Card.Title>\n      </Card.Header>\n      <Formik\n          initialValues={{ name: '', description: '', classes: true }}\n          validationSchema={HOLIDAY_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addHoliday({ variables: {\n                input: {\n                  name: values.name, \n                  dateStart: dateToLocalISO(values.dateStart),\n                  dateEnd: dateToLocalISO(values.dateEnd),\n                  description: values.description,\n                  classes: values.classes,\n                }\n              }, refetchQueries: [\n                  {query: GET_HOLIDAYS_QUERY}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.holidays.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, values, errors, setFieldTouched, setFieldValue }) => (\n            <OrganizationHolidayForm \n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              returnUrl={returnUrl}\n            />\n          )}\n      </Formik>\n    </Card>\n   </OrganizationHolidaysBase> \n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationHolidayAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_HOLIDAYS_QUERY, GET_HOLIDAY_QUERY, UPDATE_HOLIDAY } from './queries'\nimport { HOLIDAY_SCHEMA } from './yupSchema'\nimport OrganizationHolidayForm from './OrganizationHolidayForm'\n\nimport { dateToLocalISO } from \"../../../tools/date_tools\"\n\nimport {\n  Dimmer,\n  Card,\n} from \"tabler-react\";\nimport OrganizationHolidaysBase from './OrganizationHolidaysBase';\nimport ContentCard from \"../../general/ContentCard\"\n\n\nfunction OrganizationHolidayEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('organization.holidays.title_edit')\n  const returnUrl = \"/organization/holidays\"\n  const { loading, error, data } = useQuery(GET_HOLIDAY_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateHoliday ] = useMutation(UPDATE_HOLIDAY)\n\n  if (loading) return (\n    <OrganizationHolidaysBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n\n  if (error) return (\n    <OrganizationHolidaysBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n                    \n  const initialData = data.organizationHoliday;\n  console.log('query data')\n  console.log(data)\n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  if (initialData.dateStart) {\n    dateStart = new Date(initialData.dateStart)\n  }\n  let dateEnd = null\n  if (initialData.dateEnd) {\n    dateEnd = new Date(initialData.dateEnd)\n  }\n\n\n  return (\n    <OrganizationHolidaysBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n              description: initialData.description,\n              dateStart: dateStart,\n              dateEnd: dateEnd,\n              classes: initialData.classes\n            }}\n            validationSchema={HOLIDAY_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateHoliday({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                    description: values.description,\n                    dateStart: dateToLocalISO(values.dateStart),\n                    dateEnd: dateToLocalISO(values.dateEnd)\n                  }\n                }, refetchQueries: [\n                    {query: GET_HOLIDAYS_QUERY}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.holidays.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, values, errors, setFieldTouched, setFieldValue }) => (\n              <OrganizationHolidayForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                values={values}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                returnUrl={returnUrl}\n              />\n            )}\n        </Formik>\n      </Card>\n    </OrganizationHolidaysBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationHolidayEdit))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { toast } from 'react-toastify'\n\nimport { GET_HOLIDAY_LOCATIONS_QUERY, ADD_LOCATION_TO_HOLIDAY, DELETE_LOCATION_FROM_HOLIDAY } from './queries'\n\nimport {\n  Dimmer,\n  Alert,\n  Icon,\n  Button,\n  Card,\n  Table,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationHolidaysBase from './OrganizationHolidaysBase';\n\n\nfunction OrganizationHolidayEditLocations({ t, match, history }) {\n  const holidayId = match.params.id\n  const returnUrl = \"/organization/holidays\"\n  let cardTitle = t('organization.holidays.locations.title_edit')\n  const { loading, error, data } = useQuery(GET_HOLIDAY_LOCATIONS_QUERY, { \n    variables: { id: holidayId }\n  })\n  const [ addLocationToHoliday ] = useMutation(ADD_LOCATION_TO_HOLIDAY)\n  const [ deleteLocationFromHoliday ] = useMutation(DELETE_LOCATION_FROM_HOLIDAY)\n\n  // Loading\n  if (loading) return (\n    <OrganizationHolidaysBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationHolidaysBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationHolidaysBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const locations = data.organizationLocations\n  const holiday = data.organizationHoliday\n\n  let holiday_locations = {}\n  if (holiday.organizationLocations.edges) {\n    holiday.organizationLocations.edges.map(({ node}) => (\n      holiday_locations[node.id] = true\n    ))\n  }\n\n  cardTitle = cardTitle + \" - \" + holiday.name\n\n  return (\n    <OrganizationHolidaysBase showBack={true}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <Table>\n            <Table.Header>\n              <Table.Row key={v4()}>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {locations.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {(node.id in holiday_locations) ? \n                        <Icon name=\"check-circle\" className=\"text-green\" /> : <Icon name=\"x-circle\" className=\"text-red\" />\n                      }\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.name}\n                    </Table.Col>\n                    {console.log((node.id in holiday_locations))}\n                    {(!(node.id in holiday_locations)) ?\n                      // Add\n                      <Table.Col className=\"text-right text-green\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('organization.holiday.locations.add_to_holiday')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked add\")\n                            let locationId = node.id\n                            addLocationToHoliday({ variables: {\n                              input: {\n                                organizationHoliday: holidayId,\n                                organizationLocation: locationId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_HOLIDAY_LOCATIONS_QUERY, variables: {\"id\": holidayId }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('organization.holiday.locations.added_to_holiday'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"plus-circle\" /> { ' ' }\n                          {t('organization.holiday.locations.add_to_holiday')} \n                        </Button>\n                      </Table.Col>\n                      :\n                      // Delete\n                      <Table.Col className=\"text-right text-red\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('organization.holiday.locations.delete_from_holiday')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked delete\")\n                            console.log(node.id)\n                            let locationId = node.id\n                            deleteLocationFromHoliday({ variables: {\n                              input: {\n                                organizationHoliday: holidayId,\n                                organizationLocation: locationId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_HOLIDAY_LOCATIONS_QUERY, variables: {\"id\": holidayId }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('organization.holiday.locations.deleted_from_holiday'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"minus-circle\" /> { ' ' }\n                          {t('organization.holiday.locations.delete_from_holiday')}\n                        </Button>\n                      </Table.Col>\n                      }\n                  </Table.Row>\n                ))}\n            </Table.Body>\n          </Table>\n        </Card.Body>\n      </Card>\n    </OrganizationHolidaysBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationHolidayEditLocations))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationLanguagesBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/languages\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>  \n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationlanguage\">\n                  <Link to=\"/organization/languages/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.languages.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }     \n              <OrganizationMenu activeLink='languages'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLanguagesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_LANGUAGES_QUERY = gql`\n  query OrganizationLanguages($after: String, $before: String, $archived: Boolean) {\n    organizationLanguages(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_LANGUAGE_QUERY = gql`\n  query OrganizationLanguage($id: ID!) {\n    organizationLanguage(id:$id) {\n      id\n      name\n      archived\n    }\n  }\n`\n\nexport const ADD_LANGUAGE = gql`\nmutation CreateOrganizationLanguage($input:CreateOrganizationLanguageInput!) {\n  createOrganizationLanguage(input: $input) {\n    organizationLanguage{\n      id\n      archived\n      name\n    }\n  }\n}\n`\n\nexport const UPDATE_LANGUAGE = gql`\nmutation UpdateOrganizationLanguage($input: UpdateOrganizationLanguageInput!) {\n  updateOrganizationLanguage(input: $input) {\n    organizationLanguage {\n      id\n      name\n    }\n  }\n}\n`\n\nexport const ARCHIVE_LANGUAGE = gql`\nmutation ArchiveOrganizationLanguage($input: ArchiveOrganizationLanguageInput!) {\n  archiveOrganizationLanguage(input: $input) {\n    organizationLanguage {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationLanguagesBase from './OrganizationLanguagesBase'\n\nimport { GET_LANGUAGES_QUERY, ARCHIVE_LANGUAGE } from \"./queries\"\n\n\nfunction OrganizationLanguages({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('organization.languages.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_LANGUAGES_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveLanguage ] = useMutation(ARCHIVE_LANGUAGE)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <OrganizationLanguagesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )\n\n  if (error) return (\n    <OrganizationLanguagesBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.languages.error_loading')}</p>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )\n\n  let languages = data.organizationLanguages\n\n  // Empty list\n  if (!languages.edges.length) { return (\n    <OrganizationLanguagesBase>\n      <ContentCard cardTitle={t('organization.languages.title')}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('organization.languages.empty_list') : t(\"organization.languages.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )}\n\n\n  return (\n    <OrganizationLanguagesBase>\n      <ContentCard \n        cardTitle={cardTitle}\n        headerContent={headerOptions}\n        pageInfo={languages.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: languages.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.organizationLanguages.edges\n            const pageInfo = fetchMoreResult.organizationLanguages.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new languages at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  organizationLanguages: {\n                    __typename: previousResult.organizationLanguages.__typename,\n                    edges: [ ...previousResult.organizationLanguages.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n          }\n        })\n      }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {languages.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/organization/languages/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveLanguage({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_LANGUAGES_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fe\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLanguages))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const LANGUAGE_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nconst OrganizationLanguageForm = ({ t, history, isSubmitting, errors, returnUrl }) => (\n    <FoForm>\n        <Card.Body>\n            <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n        </Card.Body>\n        <Card.Footer>\n            <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n            >\n            {t('general.submit')}\n            </Button>\n            <Link to={returnUrl}>\n                <Button color=\"link\">\n                    {t('general.cancel')}\n                </Button>\n            </Link>\n        </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationLanguageForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_LANGUAGES_QUERY, ADD_LANGUAGE } from './queries'\nimport { LANGUAGE_SCHEMA } from './yupSchema'\nimport OrganizationLanguageForm from './OrganizationLanguageForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport OrganizationLanguagesBase from './OrganizationLanguagesBase';\n\n\nfunction OrganizationLanguageAdd({t, history}) {\n  const returnUrl = \"/organization/languages\"\n  const [ addLanguage ] = useMutation(ADD_LANGUAGE)\n  \n  return (\n   <OrganizationLanguagesBase showBack={true}>\n    <Card>\n      <Card.Header>\n        <Card.Title>{t('organization.languages.title_add')}</Card.Title>\n      </Card.Header>\n      <Formik\n          initialValues={{ name: '', code: '' }}\n          validationSchema={LANGUAGE_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addLanguage({ variables: {\n                input: {\n                  name: values.name, \n                }\n              }, refetchQueries: [\n                  {query: GET_LANGUAGES_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.languages.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n            <OrganizationLanguageForm \n              isSubmitting={isSubmitting}\n              errors={errors}\n              returnUrl={returnUrl}\n            />\n          )}\n      </Formik>\n    </Card>\n   </OrganizationLanguagesBase> \n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLanguageAdd))","import React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_LANGUAGES_QUERY, GET_LANGUAGE_QUERY, UPDATE_LANGUAGE } from './queries'\nimport { LANGUAGE_SCHEMA } from './yupSchema'\nimport OrganizationLanguageForm from './OrganizationLanguageForm'\n\nimport {\n  Dimmer,\n  Card,\n} from \"tabler-react\";\nimport OrganizationLanguagesBase from './OrganizationLanguagesBase';\nimport ContentCard from \"../../general/ContentCard\"\n\n\nfunction OrganizationLanguageEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('organization.languages.title_edit')\n  const returnUrl = \"/organization/languages\"\n  const { loading, error, data } = useQuery(GET_LANGUAGE_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateLanguage ] = useMutation(UPDATE_LANGUAGE)\n\n  if (loading) return (\n    <OrganizationLanguagesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )\n\n  if (error) return (\n    <OrganizationLanguagesBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationLanguagesBase>\n  )\n                    \n  const initialData = data.organizationLanguage;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationLanguagesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n            }}\n            validationSchema={LANGUAGE_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateLanguage({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                  }\n                }, refetchQueries: [\n                    {query: GET_LANGUAGES_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.languages.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n              <OrganizationLanguageForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n            )}\n        </Formik>\n      </Card>\n    </OrganizationLanguagesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLanguageEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_LOCATIONS_QUERY = gql`\n  query OrganizationLocations($after: String, $before: String, $archived: Boolean) {\n    organizationLocations(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id,\n          archived,\n          displayPublic,\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_LOCATION_QUERY = gql`\n  query OrganizationLocation($id: ID!) {\n    organizationLocation(id:$id) {\n      id\n      name\n      displayPublic\n      archived\n    }\n  }\n`\n\nexport const ADD_LOCATION = gql`\nmutation CreateOrganizationLocation($input: CreateOrganizationLocationInput!) {\n  createOrganizationLocation(input: $input) {\n    organizationLocation {\n      id\n      archived\n      displayPublic\n      name\n    }\n  }\n}\n`\n\nexport const UPDATE_LOCATION = gql`\nmutation UpdateOrganizationLocation($input: UpdateOrganizationLocationInput!) {\n  updateOrganizationLocation(input: $input) {\n    organizationLocation {\n      id\n      name\n      displayPublic\n    }\n  }\n}\n`\n\nexport const ARCHIVE_LOCATION = gql`\nmutation ArchiveOrganizationLocation($input: ArchiveOrganizationLocationInput!) {\n  archiveOrganizationLocation(input: $input) {\n    organizationLocation {\n      id\n      archived\n    }\n  }\n}\n`\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationLocationsBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title=\"Organization\" />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ? \n                <Link to=\"/organization/locations\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button> \n                </Link>\n                :\n                <HasPermissionWrapper permission=\"add\"\n                                resource=\"organizationlocation\">\n                  <Link to=\"/organization/locations/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.locations.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <OrganizationMenu activeLink='locations'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>  \n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLocationsBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\n\nimport { GET_LOCATIONS_QUERY, ARCHIVE_LOCATION } from \"./queries\"\nimport OrganizationLocationsBase from \"./OrganizationLocationsBase\"\n\nfunction OrganizationLocations({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('organization.locations.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_LOCATIONS_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveLocation ] = useMutation(ARCHIVE_LOCATION)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  // Loading\n  if (loading) return (\n    <OrganizationLocationsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationLocationsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.locations.error_loading')}</p>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )\n\n  let locations = data.organizationLocations\n\n  // Empty list\n  if (!locations.edges.length) { return (\n    <OrganizationLocationsBase>\n      <ContentCard cardTitle={cardTitle}\n                  headerContent={headerOptions}>\n        <p>\n        {(!archived) ? t('organization.locations.empty_list') : t(\"organization.locations.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )}\n\n  return (\n    <OrganizationLocationsBase>\n      <ContentCard cardTitle={cardTitle}\n                headerContent={headerOptions}\n                pageInfo={locations.pageInfo}\n                onLoadMore={() => {\n                fetchMore({\n                  variables: {\n                    after: locations.pageInfo.endCursor\n                  },\n                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                    const newEdges = fetchMoreResult.organizationLocations.edges\n                    const pageInfo = fetchMoreResult.organizationLocations.pageInfo\n\n                    return newEdges.length\n                      ? {\n                          // Put the new locations at the end of the list and update `pageInfo`\n                          // so we have the new `endCursor` and `hasNextPage` values\n                          organizationLocations: {\n                            __typename: previousResult.organizationLocations.__typename,\n                            edges: [ ...previousResult.organizationLocations.edges, ...newEdges ],\n                            pageInfo\n                          }\n                        }\n                      : previousResult\n                  }\n                })\n              }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {locations.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.displayPublic) ? \n                      <Badge color=\"success\">{t('general.yes')}</Badge>: \n                      <Badge color=\"danger\">{t('general.no')}</Badge>}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <div>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/locations/edit/\" + node.id)}\n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/locations/rooms/\" + node.id)}\n                                color=\"secondary\">\n                          {t('general.rooms')}\n                        </Button>\n                      </div>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveLocation({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_LOCATIONS_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fa\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLocations))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const LOCATION_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_LOCATIONS_QUERY, ADD_LOCATION } from './queries'\nimport { LOCATION_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport OrganizationLocationsBase from \"./OrganizationLocationsBase\"\n\nfunction OrganizationLocationAdd({ t, history }) {\n  const returnUrl = \"/organization/locations\"\n  const cardTitle = t('organization.locations.title_add')\n  const [ addLocation ] = useMutation(ADD_LOCATION)\n\n  return (\n    <OrganizationLocationsBase showBack={true}>\n      <Card>    \n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: '', displayPublic: true }}\n          validationSchema={LOCATION_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addLocation({ variables: {\n                input: {\n                  name: values.name, \n                  displayPublic: values.displayPublic\n                }\n              }, refetchQueries: [\n                  {query: GET_LOCATIONS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.locations.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <FoForm>\n                <Card.Body>\n                    <Form.Group>\n                      <Form.Label className=\"custom-switch\">\n                        <Field \n                          className=\"custom-switch-input\"\n                          type=\"checkbox\" \n                          name=\"displayPublic\" \n                          checked={values.displayPublic} />\n                        <span className=\"custom-switch-indicator\" ></span>\n                        <span className=\"custom-switch-description\">{t('organization.location.public')}</span>\n                      </Form.Label>\n                      <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                    </Form.Group>    \n\n                    <Form.Group label={t('general.name')}>\n                      <Field type=\"text\" \n                              name=\"name\" \n                              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                      <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                    </Form.Group>\n                </Card.Body>\n                <Card.Footer>\n                    <Button \n                      color=\"primary\"\n                      className=\"pull-right\" \n                      type=\"submit\" \n                      disabled={isSubmitting}\n                    >\n                      {t('general.submit')}\n                    </Button>\n                    <Link to={returnUrl}>\n                      <Button color=\"link\">\n                          {t('general.cancel')}\n                      </Button>\n                    </Link>\n                </Card.Footer>\n            </FoForm>\n          )}\n        </Formik>\n      </Card>\n    </OrganizationLocationsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLocationAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { GET_LOCATIONS_QUERY, GET_LOCATION_QUERY, UPDATE_LOCATION } from './queries'\nimport { LOCATION_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationLocationsBase from \"./OrganizationLocationsBase\"\n\n\nfunction OrganizationLocationEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('organization.locations.title_edit')\n  const returnUrl = \"/organization/locations\"\n  const { loading, error, data } = useQuery(GET_LOCATION_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateLocation ] = useMutation(UPDATE_LOCATION)\n\n  // Loading\n  if (loading) return (\n    <OrganizationLocationsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationLocationsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.locations.error_loading')}</p>\n      </ContentCard>\n    </OrganizationLocationsBase>\n  )\n\n  const initialData = data.organizationLocation;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationLocationsBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n          {console.log(match.params.id)}\n        </Card.Header>                    \n        <Formik\n            initialValues={{ \n              name: initialData.name, \n              displayPublic: initialData.displayPublic \n            }}\n            validationSchema={LOCATION_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateLocation({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                    displayPublic: values.displayPublic \n                  }\n                }, refetchQueries: [\n                    {query: GET_LOCATIONS_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.locations.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values }) => (\n              <FoForm>\n                  <Card.Body>\n                      <Form.Group>\n                        <Form.Label className=\"custom-switch\">\n                          <Field \n                            className=\"custom-switch-input\"\n                            type=\"checkbox\" \n                            name=\"displayPublic\" \n                            checked={values.displayPublic} />\n                          <span className=\"custom-switch-indicator\" ></span>\n                          <span className=\"custom-switch-description\">{t('organization.location.public')}</span>\n                        </Form.Label>\n                        <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                      </Form.Group>     \n                      <Form.Group label={t('general.name')} >\n                        <Field type=\"text\" \n                              name=\"name\" \n                              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                              autoComplete=\"off\" />\n                        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                      </Form.Group>\n                  </Card.Body>\n                  <Card.Footer>\n                      <Button \n                        className=\"pull-right\"\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                        type=\"submit\"\n                      >\n                        {t('general.submit')}\n                      </Button>\n                      <Link to={returnUrl}>\n                        <Button\n                          type=\"button\" \n                          color=\"link\" \n                        >\n                            {t('general.cancel')}\n                        </Button>\n                      </Link>\n                    </Card.Footer>\n                </FoForm>\n              )}\n            </Formik>\n          </Card>\n    </OrganizationLocationsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLocationEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_LOCATION_ROOMS_QUERY = gql`\n  query OrganizationLocationRooms($after: String, $before: String, $organizationLocation: ID!, $archived: Boolean!) {\n    organizationLocationRooms(first: 15, before: $before, after: $after, organizationLocation: $organizationLocation, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationLocation {\n            id\n            name\n          }\n          archived,\n          displayPublic\n          name\n        }\n      }\n    }\n    organizationLocation(id: $organizationLocation) {\n      id\n      name\n    }\n  }\n`\n\nexport const GET_LOCATION_ROOM_QUERY = gql`\n  query OrganizationLocationRoom($id: ID!) {\n    organizationLocationRoom(id:$id) {\n      id\n      organizationLocation {\n        id\n        name\n      }\n      name\n      displayPublic\n      archived\n    }\n  }\n`\n\nexport const ADD_LOCATION_ROOM = gql`\n  mutation CreateOrganizationLocationRoom($input: CreateOrganizationLocationRoomInput!) {\n    createOrganizationLocationRoom(input: $input) {\n      organizationLocationRoom {\n        id\n        organizationLocation {\n          id\n          name\n        }\n        archived\n        displayPublic\n        name\n      }\n    }\n  }\n`\n\nexport const UPDATE_LOCATION_ROOM = gql`\nmutation UpdateOrganizationLocationRoom($input: UpdateOrganizationLocationRoomInput!) {\n  updateOrganizationLocationRoom(input: $input) {\n    organizationLocationRoom {\n      id\n      organizationLocation {\n        id\n        name\n      }\n      name\n      displayPublic\n    }\n  }\n}\n`\n\nexport const ARCHIVE_LOCATION_ROOM = gql`\nmutation ArchiveOrganizationLocationRoom($input: ArchiveOrganizationLocationRoomInput!) {\n  archiveOrganizationLocationRoom(input: $input) {\n    organizationLocationRoom {\n      id\n      archived\n    }\n  }\n}\n`","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nfunction OrganizationLocationRoomsBase({t, history, match, children, showBack=false}) {\n  const locationId = match.params.location_id\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/locations\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.locations.title')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to={`/organization/locations/rooms/${locationId}`}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationlocationroom\">\n                  <Link to={`/organization/locations/rooms/add/${match.params.location_id}`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.location_rooms.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n            <OrganizationMenu activeLink='locations'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>        \n)}\n\n\nexport default withTranslation()(withRouter(OrganizationLocationRoomsBase))","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Alert,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport { GET_LOCATION_ROOMS_QUERY, ARCHIVE_LOCATION_ROOM } from \"./queries\"\nimport OrganizationLocationRoomsBase from './OrganizationLocationRoomsBase'\n\n\nfunction OrganizationLocationsRooms({ t, history, match }) {\n  const organizationLocationId = match.params.location_id\n  const cardTitle = t('organization.location_rooms.title')\n  let [archived, setArchived] = useState(false)\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_LOCATION_ROOMS_QUERY, {\n    variables: { archived: archived, organizationLocation: organizationLocationId }\n  })\n  const [ archiveLocationRoom ] = useMutation(ARCHIVE_LOCATION_ROOM)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  // Loading\n  if (loading) return (\n    <OrganizationLocationRoomsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationLocationRoomsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.location_rooms.error_loading')}</p>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )\n\n  let locationRooms = data.organizationLocationRooms\n  let location = data.organizationLocation\n\n  // Empty list\n  if (!locationRooms.edges.length) { return (\n    <OrganizationLocationRoomsBase>\n      <ContentCard cardTitle={cardTitle}\n                  headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('organization.location_rooms.empty_list') : t(\"organization.location_rooms.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )}\n\n  return (\n    <OrganizationLocationRoomsBase>\n      <ContentCard \n        cardTitle={cardTitle}\n                    headerContent={headerOptions}\n                    pageInfo={locationRooms.pageInfo}\n                    onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: locationRooms.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationLocationsRooms.edges\n                        const pageInfo = fetchMoreResult.organizationLocationsRooms.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new locations at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationLocationsRooms: {\n                                __typename: previousResult.organizationLocationsRooms.__typename,\n                                edges: [ ...previousResult.organizationLocationsRooms.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <div>\n          <Alert type=\"primary\">\n            <strong>{t('general.location')}</strong> {location.name}\n          </Alert>\n\n          <Table>\n            <Table.Header>\n              <Table.Row key={v4()}>\n                <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {locationRooms.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {node.name}\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {(node.displayPublic) ? \n                        <Badge color=\"success\">{t('general.yes')}</Badge>: \n                        <Badge color=\"danger\">{t('general.no')}</Badge>}\n                    </Table.Col>\n                    <Table.Col className=\"text-right\" key={v4()}>\n                      {(node.archived) ? \n                        <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                        <Button className='btn-sm' \n                                onClick={() => history.push(\"/organization/locations/rooms/edit/\" + match.params.location_id + '/' + node.id)}\n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                      }\n                    </Table.Col>\n                      <Table.Col className=\"text-right\" key={v4()}>\n                        <button className=\"icon btn btn-link btn-sm\" \n                            title={t('general.archive')} \n                            href=\"\"\n                            onClick={() => {\n                              console.log(\"clicked archived\")\n                              let id = node.id\n                              archiveLocationRoom({ variables: {\n                                input: {\n                                id,\n                                archived: !archived\n                                }\n                        }, refetchQueries: [\n                            { \n                              query: GET_LOCATION_ROOMS_QUERY, \n                              variables: {archived: archived, organizationLocation: organizationLocationId }\n                            }\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(\n                            (archived) ? t('general.unarchived'): t('general.archived'), {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fa\" name=\"inbox\" />\n                        </button>\n                      </Table.Col>\n                  </Table.Row>\n                ))}\n            </Table.Body>\n          </Table>\n          </div>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLocationsRooms))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const LOCATION_ROOM_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst OrganizationLocationRoomForm = ({ t, history, match, isSubmitting, errors, values, returnUrl }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"displayPublic\" \n                checked={values.displayPublic} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('organization.location_room.public')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n          </Form.Group>    \n\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(OrganizationLocationRoomForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_LOCATION_ROOMS_QUERY, ADD_LOCATION_ROOM } from './queries'\nimport { LOCATION_ROOM_SCHEMA } from './yupSchema'\nimport OrganizationLocationRoomForm from './OrganizationLocationRoomForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\nimport OrganizationLocationRoomsBase from './OrganizationLocationRoomsBase';\n\n\nfunction OrganizationLocationRoomAdd({ t, history, match }) {\n  const locationId = match.params.location_id\n  const returnUrl = `/organization/locations/rooms/${locationId}`\n  const [ addLocationRoom ] = useMutation(ADD_LOCATION_ROOM)\n\n  return (\n    <OrganizationLocationRoomsBase showBack={true}>\n      <Card title={t(\"organization.location_rooms.title_add\")}>\n        <Formik\n          initialValues={{ name: '', displayPublic: true }}\n          validationSchema={LOCATION_ROOM_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addLocationRoom({ variables: {\n                input: {\n                  organizationLocation: locationId,\n                  name: values.name, \n                  displayPublic: values.displayPublic\n                }\n              }, refetchQueries: [\n                  {query: GET_LOCATION_ROOMS_QUERY,\n                    variables: {\"archived\": false, \"organizationLocation\": locationId }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.location_rooms.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <OrganizationLocationRoomForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n              />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationLocationRoomsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLocationRoomAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_LOCATION_ROOMS_QUERY, GET_LOCATION_ROOM_QUERY, UPDATE_LOCATION_ROOM } from './queries'\nimport { LOCATION_ROOM_SCHEMA } from './yupSchema'\nimport OrganizationLocationRoomForm from './OrganizationLocationRoomForm'\n\nimport {\n  Card,\n  Dimmer\n} from \"tabler-react\";\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport OrganizationLocationRoomsBase from './OrganizationLocationRoomsBase'\n\n\nfunction OrganizationLocationRoomEdit({t, history, match}) {\n  const id = match.params.id\n  const locationId = match.params.location_id\n  const returnUrl = `/organization/locations/rooms/${locationId}`\n  const cardTitle = t('organization.location_rooms.title_edit')\n  const { loading, error, data } = useQuery(GET_LOCATION_ROOM_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateLocationRoom ] = useMutation(UPDATE_LOCATION_ROOM)\n\n  // Loading\n  if (loading) return (\n    <OrganizationLocationRoomsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationLocationRoomsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationLocationRoomsBase>\n  )\n\n  const initialData = data.organizationLocationRoom;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationLocationRoomsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            displayPublic: initialData.displayPublic \n          }}\n          validationSchema={LOCATION_ROOM_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateLocationRoom({ variables: {\n                input: {\n                  id: match.params.id,\n                  name: values.name,\n                  displayPublic: values.displayPublic \n                }\n              }, refetchQueries: [\n                {query: GET_LOCATION_ROOMS_QUERY,\n                  variables: {\"archived\": false, \"organizationLocation\": match.params.location_id }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('organization.location_rooms.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <OrganizationLocationRoomForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationLocationRoomsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLocationRoomEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationLevelsBase({t, history, children, showBack=false}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ?\n                <Link to=\"/organization/levels\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>  \n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationlevel\">\n                  <Link to=\"/organization/levels/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.levels.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }     \n              <OrganizationMenu activeLink='levels'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationLevelsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_LEVELS_QUERY = gql`\n  query OrganizationLevels($after: String, $before: String, $archived: Boolean) {\n    organizationLevels(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_LEVEL_QUERY = gql`\n  query SchoolLevel($id: ID!) {\n    organizationLevel(id:$id) {\n      id\n      name\n      archived\n    }\n  }\n`\n\nexport const ADD_LEVEL = gql`\nmutation CreateOrganizationLevel($input:CreateOrganizationLevelInput!) {\n  createOrganizationLevel(input: $input) {\n    organizationLevel{\n      id\n      archived\n      name\n    }\n  }\n}\n`\n\nexport const UPDATE_LEVEL = gql`\nmutation UpdateOrganizationLevel($input: UpdateOrganizationLevelInput!) {\n  updateOrganizationLevel(input: $input) {\n    organizationLevel {\n      id\n      name\n    }\n  }\n}\n`\n\nexport const ARCHIVE_LEVEL = gql`\nmutation ArchiveOrganizationLevel($input: ArchiveOrganizationLevelInput!) {\n  archiveOrganizationLevel(input: $input) {\n    organizationLevel {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationLevelsBase from './OrganizationLevelsBase'\n\nimport { GET_LEVELS_QUERY, ARCHIVE_LEVEL } from \"./queries\"\n\n\nfunction OrganizationLevels({t, history}) {\n  let [archived, setArchived] = useState(false)\n  const cardTitle = t('organization.levels.title')\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_LEVELS_QUERY, {\n    variables: { archived: archived }\n  })\n  const [ archiveLevel ] = useMutation(ARCHIVE_LEVEL)\n\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: false});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: true});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <OrganizationLevelsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )\n\n  if (error) return (\n    <OrganizationLevelsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.levels.error_loading')}</p>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )\n\n  let levels = data.organizationLevels\n\n  // Empty list\n  if (!levels.edges.length) { return (\n    <OrganizationLevelsBase>\n      <ContentCard cardTitle={t('organization.levels.title')}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('organization.levels.empty_list') : t(\"organization.levels.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )}\n\n\n  return (\n    <OrganizationLevelsBase>\n      <ContentCard \n        cardTitle={cardTitle}\n        headerContent={headerOptions}\n        pageInfo={levels.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: levels.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.organizationLevels.edges\n            const pageInfo = fetchMoreResult.organizationLevels.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new levels at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  organizationLevels: {\n                    __typename: previousResult.organizationLevels.__typename,\n                    edges: [ ...previousResult.organizationLevels.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n          }\n        })\n      }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {levels.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Button className='btn-sm' \n                              onClick={() => history.push(\"/organization/levels/edit/\" + node.id)}\n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    }\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.archive')} \n                        href=\"\"\n                        onClick={() => {\n                          console.log(\"clicked archived\")\n                          let id = node.id\n                          archiveLevel({ variables: {\n                            input: {\n                            id,\n                            archived: !archived\n                            }\n                    }, refetchQueries: [\n                        {query: GET_LEVELS_QUERY, variables: {\"archived\": archived }}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (archived) ? t('general.unarchived'): t('general.archived'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      <Icon prefix=\"fe\" name=\"inbox\" />\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )\n}\n\n\n\nexport default withTranslation()(withRouter(OrganizationLevels))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const LEVEL_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n    Button,\n    Card,\n    Form\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nconst OrganizationLevelForm = ({ t, history, isSubmitting, errors, returnUrl }) => (\n    <FoForm>\n        <Card.Body>\n            <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n        </Card.Body>\n        <Card.Footer>\n            <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n            >\n            {t('general.submit')}\n            </Button>\n            <Link to={returnUrl}>\n                <Button color=\"link\">\n                    {t('general.cancel')}\n                </Button>\n            </Link>\n        </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(OrganizationLevelForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_LEVELS_QUERY, ADD_LEVEL } from './queries'\nimport { LEVEL_SCHEMA } from './yupSchema'\nimport OrganizationLevelForm from './OrganizationLevelForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport OrganizationLevelsBase from './OrganizationLevelsBase';\n\n\nfunction OrganizationLevelAdd({t, history}) {\n  const returnUrl = \"/organization/levels\"\n  const [ addLevel ] = useMutation(ADD_LEVEL)\n  \n  return (\n   <OrganizationLevelsBase showBack={true}>\n    <Card>\n      <Card.Header>\n        <Card.Title>{t('organization.levels.title_add')}</Card.Title>\n      </Card.Header>\n      <Formik\n          initialValues={{ name: '', code: '' }}\n          validationSchema={LEVEL_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              addLevel({ variables: {\n                input: {\n                  name: values.name, \n                }\n              }, refetchQueries: [\n                  {query: GET_LEVELS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('organization.levels.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors }) => (\n            <OrganizationLevelForm \n              isSubmitting={isSubmitting}\n              errors={errors}\n              returnUrl={returnUrl}\n            />\n          )}\n      </Formik>\n    </Card>\n   </OrganizationLevelsBase> \n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLevelAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_LEVELS_QUERY, GET_LEVEL_QUERY, UPDATE_LEVEL } from './queries'\nimport { LEVEL_SCHEMA } from './yupSchema'\nimport OrganizationLevelForm from './OrganizationLevelForm'\n\n\nimport {\n  Dimmer,\n  Card,\n} from \"tabler-react\";\nimport OrganizationLevelsBase from './OrganizationLevelsBase';\nimport ContentCard from \"../../general/ContentCard\"\n\n\nfunction OrganizationLevelEdit({t, match, history}) {\n  const id = match.params.id\n  const cardTitle = t('organization.levels.title_edit')\n  const returnUrl = \"/organization/levels\"\n  const { loading, error, data } = useQuery(GET_LEVEL_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateLevel ] = useMutation(UPDATE_LEVEL)\n\n  if (loading) return (\n    <OrganizationLevelsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )\n\n  if (error) return (\n    <OrganizationLevelsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationLevelsBase>\n  )\n                    \n  const initialData = data.organizationLevel;\n  console.log('query data')\n  console.log(data)\n\n  return (\n    <OrganizationLevelsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n            initialValues={{ \n              name: initialData.name, \n            }}\n            validationSchema={LEVEL_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                updateLevel({ variables: {\n                  input: {\n                    id: match.params.id,\n                    name: values.name,\n                  }\n                }, refetchQueries: [\n                    {query: GET_LEVELS_QUERY, variables: {\"archived\": false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.levels.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n              <OrganizationLevelForm \n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n            )}\n        </Formik>\n      </Card>\n    </OrganizationLevelsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationLevelEdit))","// @flow\n\nimport { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\n\n\nclass Validity extends Component {\n    render() {\n      const t = this.props.t\n      const validity = this.props.validity\n\n      switch(validity) {\n        case \"DAYS\":\n            return t('validity.days')\n            break\n        case \"WEEKS\":\n            return t('validity.weeks')\n            break\n        case \"MONTHS\":\n            return t('validity.months')\n            break\n        case \"YEARS\":\n            return t('validity.years')\n            break\n        default:\n            return \"\"\n            break\n        }\n    }\n}\n  \nexport default withTranslation()(Validity)\n","import { gql } from \"@apollo/client\"\n\nexport const GET_MEMBERSHIPS_QUERY = gql`\n  query OrganizationMemberships($after: String, $before: String, $archived: Boolean) {\n    organizationMemberships(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          displayShop\n          name\n          description\n          price\n          priceDisplay\n          financeTaxRate {\n            id\n            name\n          }\n          validity\n          validityUnit\n          validityUnitDisplay\n          termsAndConditions\n          financeGlaccount {\n            id \n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_MEMBERSHIP_QUERY = gql`\n  query OrganizationMembership($id: ID!, $after: String, $before: String, $archived: Boolean!) {\n    organizationMembership(id:$id) {\n      id\n      archived\n      displayPublic\n      displayShop\n      name\n      description\n      price\n      financeTaxRate {\n        id\n        name\n      }\n      validity\n      validityUnit\n      termsAndConditions\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query FinanceInputValues($after: String, $before: String, $archived: Boolean) {\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport Validity from \"../../ui/Validity\"\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\nimport { GET_MEMBERSHIPS_QUERY } from \"./queries\"\n\nconst ARCHIVE_MEMBERSHIP = gql`\n  mutation ArchiveOrganizationMembership($input: ArchiveOrganizationMembershipInput!) {\n    archiveOrganizationMembership(input: $input) {\n      organizationMembership {\n        id\n        archived\n      }\n    }\n  }\n`\n\n\nconst OrganizationMemberships = ({ t, history, archived=false }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"organization.title\")} />\n        <Grid.Row>\n          <Grid.Col md={9}>\n            <Query query={GET_MEMBERSHIPS_QUERY} variables={{ archived }}>\n             {({ loading, error, data: {organizationMemberships: memberships}, refetch, fetchMore }) => {\n                // Loading\n                if (loading) return (\n                  <ContentCard cardTitle={t('organization.memberships.title')}>\n                    <Dimmer active={true}\n                            loader={true}>\n                    </Dimmer>\n                  </ContentCard>\n                )\n                // Error\n                if (error) return (\n                  <ContentCard cardTitle={t('organization.memberships.title')}>\n                    <p>{t('organization.memberships.error_loading')}</p>\n                  </ContentCard>\n                )\n                const headerOptions = <Card.Options>\n                  <Button color={(!archived) ? 'primary': 'secondary'}  \n                          size=\"sm\"\n                          onClick={() => {archived=false; refetch({archived});}}>\n                    {t('general.current')}\n                  </Button>\n                  <Button color={(archived) ? 'primary': 'secondary'} \n                          size=\"sm\" \n                          className=\"ml-2\" \n                          onClick={() => {archived=true; refetch({archived});}}>\n                    {t('general.archive')}\n                  </Button>\n                </Card.Options>\n                \n                // Empty list\n                if (!memberships.edges.length) { return (\n                  <ContentCard cardTitle={t('organization.memberships.title')}\n                               headerContent={headerOptions}>\n                    <p>\n                    {(!archived) ? t('organization.memberships.empty_list') : t(\"organization.memberships.empty_archive\")}\n                    </p>\n                   \n                  </ContentCard>\n                )} else {   \n                // Life's good! :)\n                return (\n                  <ContentCard cardTitle={t('organization.memberships.title')}\n                               headerContent={headerOptions}\n                               pageInfo={memberships.pageInfo}\n                               onLoadMore={() => {\n                                fetchMore({\n                                  variables: {\n                                    after: memberships.pageInfo.endCursor\n                                  },\n                                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                                    const newEdges = fetchMoreResult.organizationMemberships.edges\n                                    const pageInfo = fetchMoreResult.organizationMemberships.pageInfo\n\n                                    return newEdges.length\n                                      ? {\n                                          // Put the new memberships at the end of the list and update `pageInfo`\n                                          // so we have the new `endCursor` and `hasNextPage` values\n                                          organizationMemberships: {\n                                            __typename: previousResult.organizationMemberships.__typename,\n                                            edges: [ ...previousResult.organizationMemberships.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      : previousResult\n                                  }\n                                })\n                              }} >\n                    <Table>\n                          <Table.Header>\n                            <Table.Row key={v4()}>\n                              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.validity')}</Table.ColHeader>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                              {memberships.edges.map(({ node }) => (\n                                <Table.Row key={v4()}>\n                                  <Table.Col key={v4()}>\n                                    {node.name}\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    <BadgeBoolean value={node.displayPublic} />\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    <BadgeBoolean value={node.displayShop} />\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    {node.priceDisplay} <br />\n                                    {(node.financeTaxRate) ? \n                                      <span className=\"text-muted\">{node.financeTaxRate.name}</span>\n                                      : \"\"\n                                    }\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    {node.validity} <br />\n                                    <span className=\"text-muted\">\n                                      {node.validityUnitDisplay}\n                                    </span>\n                                  </Table.Col>\n                                  <Table.Col className=\"text-right\" key={v4()}>\n                                    {(node.archived) ? \n                                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                      <Button className='btn-sm' \n                                              onClick={() => history.push(\"/organization/memberships/edit/\" + node.id)}\n                                              color=\"secondary\">\n                                        {t('general.edit')}\n                                      </Button>\n                                    }\n                                  </Table.Col>\n                                  <Mutation mutation={ARCHIVE_MEMBERSHIP} key={v4()}>\n                                    {(archiveMembership, { data }) => (\n                                      <Table.Col className=\"text-right\" key={v4()}>\n                                        <button className=\"icon btn btn-link btn-sm\" \n                                           title={t('general.archive')} \n                                           href=\"\"\n                                           onClick={() => {\n                                             console.log(\"clicked archived\")\n                                             let id = node.id\n                                             archiveMembership({ variables: {\n                                               input: {\n                                                id,\n                                                archived: !archived\n                                               }\n                                        }, refetchQueries: [\n                                            {query: GET_MEMBERSHIPS_QUERY, variables: {\"archived\": archived }}\n                                        ]}).then(({ data }) => {\n                                          console.log('got data', data);\n                                          toast.success(\n                                            (archived) ? t('general.unarchived'): t('general.archived'), {\n                                              position: toast.POSITION.BOTTOM_RIGHT\n                                            })\n                                        }).catch((error) => {\n                                          toast.error((t('general.toast_server_error')) +  error, {\n                                              position: toast.POSITION.BOTTOM_RIGHT\n                                            })\n                                          console.log('there was an error sending the query', error);\n                                        })\n                                        }}>\n                                          <Icon prefix=\"fa\" name=\"inbox\" />\n                                        </button>\n                                      </Table.Col>\n                                    )}\n                                  </Mutation>\n                                </Table.Row>\n                              ))}\n                          </Table.Body>\n                        </Table>\n                  </ContentCard>\n                )}}\n             }\n            </Query>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationmembership\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/organization/memberships/add\")}>\n                <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.memberships.add')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='memberships'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationMemberships))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const MEMBERSHIP_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    price: Yup.number()\n      .required(t('yup.field_required')),\n    financeTaxRate: Yup.string()\n      .required(t('yup.field_required')),\n    validity: Yup.number()\n      .positive(t('yup.positive_number_required'))\n      .required(t('yup.field_required')),\n    validityUnit: Yup.string()\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nimport { GET_MEMBERSHIPS_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { MEMBERSHIP_SCHEMA } from './yupSchema'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nconst CREATE_MEMBERSHIP = gql`\n  mutation CreateMembership($input: CreateOrganizationMembershipInput!) {\n    createOrganizationMembership(input: $input) {\n      organizationMembership {\n        id\n        displayPublic\n        displayShop\n        name\n        description\n        price\n        financeTaxRate {\n          id\n          name\n        }\n        validity\n        validityUnit\n        termsAndConditions\n        financeGlaccount {\n          id\n          name\n        }\n        financeCostcenter {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nclass OrganizationMembershipAdd extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization membership add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const return_url = \"/organization/memberships\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title=\"Organization\" />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.memberships.title_add')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_INPUT_VALUES_QUERY} variables={{ id }} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    console.log('query data')\n                    console.log(data)\n                    const inputData = data\n\n                    return (\n                      \n                      <Mutation mutation={CREATE_MEMBERSHIP} onCompleted={() => history.push(return_url)}> \n                      {(createMembership, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                displayPublic: true,\n                                displayShop: true,\n                                name: \"\",\n                                description: \"\",\n                                price: 0,\n                                financeTaxRate: \"\",\n                                validity: 1,\n                                validityUnit: \"MONTHS\",\n                                termsAndConditions: \"\",\n                                financeGlaccount: \"\",\n                                financeCostcenter: \"\"\n                              }}\n                              validationSchema={MEMBERSHIP_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  createMembership({ variables: {\n                                    input: {\n                                      displayPublic: values.displayPublic,\n                                      displayShop: values.displayShop,\n                                      name: values.name,\n                                      description: values.description,\n                                      price: values.price,\n                                      financeTaxRate: values.financeTaxRate,\n                                      validity: values.validity,\n                                      validityUnit: values.validityUnit,\n                                      termsAndConditions: values.termsAndConditions,\n                                      financeGlaccount: values.financeGlaccount,\n                                      financeCostcenter: values.financeCostcenter\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_MEMBERSHIPS_QUERY, variables: {\"archived\": false }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.memberships.toast_add_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n                                  <FoForm>\n                                      <Card.Body> \n                                        <Form.Group>\n                                          <Form.Label className=\"custom-switch\">\n                                              <Field \n                                                className=\"custom-switch-input\"\n                                                type=\"checkbox\" \n                                                name=\"displayPublic\" \n                                                checked={values.displayPublic} />\n                                              <span className=\"custom-switch-indicator\" ></span>\n                                              <span className=\"custom-switch-description\">{t('organization.membership.public')}</span>\n                                            </Form.Label>\n                                          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                                        </Form.Group>      \n                                        <Form.Group>\n                                          <Form.Label className=\"custom-switch\">\n                                              <Field \n                                                className=\"custom-switch-input\"\n                                                type=\"checkbox\" \n                                                name=\"displayShop\" \n                                                checked={values.displayShop} />\n                                              <span className=\"custom-switch-indicator\" ></span>\n                                              <span className=\"custom-switch-description\">{t('organization.membership.shop')}</span>\n                                            </Form.Label>\n                                          <ErrorMessage name=\"displayShop\" component=\"div\" />   \n                                        </Form.Group>      \n                                        <Form.Group label={t('general.name')} >\n                                          <Field type=\"text\" \n                                                name=\"name\" \n                                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.description')}>\n                                          <Editor\n                                            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                                            textareaName=\"description\"\n                                            initialValue={values.description}\n                                            init={tinymceBasicConf}\n                                            onBlur={(e) => {\n                                              setFieldValue(\"description\", e.target.getContent())\n                                              setFieldTouched(\"description\", true, true)\n                                            }}\n                                          />\n                                          <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.price')}>\n                                          <Field type=\"text\" \n                                                name=\"price\" \n                                                className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.taxrate')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeTaxRate\" \n                                                 className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            {console.log(\"query data in membership add:\")}\n                                            {console.log(inputData)}\n                                            <option value=\"\" key={v4()}></option>\n                                            {inputData.financeTaxRates.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.validity')}>\n                                          <Field type=\"text\" \n                                                name=\"validity\" \n                                                className={(errors.validity) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"validity\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.validity_unit')}>\n                                          <Field component=\"select\" \n                                                 name=\"validityUnit\" \n                                                 className={(errors.validityUnit) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"DAYS\" key={v4()}>{t('validity.days')}</option>\n                                            <option value=\"WEEKS\" key={v4()}>{t('validity.weeks')}</option>\n                                            <option value=\"MONTHS\" key={v4()}>{t('validity.months')}</option>\n                                          </Field>\n                                          <ErrorMessage name=\"validityUnit\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.terms_and_conditions')}>\n                                          <Editor\n                                            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                                            textareaName=\"termsAndConditions\"\n                                            initialValue={values.termsAndConditions}\n                                            init={tinymceBasicConf}\n                                            onBlur={(e) => {\n                                              setFieldValue(\"termsAndConditions\", e.target.getContent())\n                                              setFieldTouched(\"termsAndConditions\", true, true)\n                                            }}\n                                          />\n                                          <ErrorMessage name=\"termsAndConditions\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.glaccount')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeGlaccount\" \n                                                 className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"\" key={v4()}></option>\n                                            {inputData.financeGlaccounts.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.costcenter')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeCostcenter\" \n                                                 className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"\" key={v4()}></option>\n                                            {inputData.financeCostcenters.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                      </Card.Body>\n                                      <Card.Footer>\n                                          <Button \n                                            className=\"pull-right\"\n                                            color=\"primary\"\n                                            disabled={isSubmitting}\n                                            type=\"submit\"\n                                          >\n                                            {t('general.submit')}\n                                          </Button>\n                                          <Button\n                                            type=\"button\" \n                                            color=\"link\" \n                                            onClick={() => history.push(return_url)}\n                                          >\n                                              {t('general.cancel')}\n                                          </Button>\n                                      </Card.Footer>\n                                  </FoForm>\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationmembership\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='memberships'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationMembershipAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nimport { GET_MEMBERSHIPS_QUERY, GET_MEMBERSHIP_QUERY } from './queries'\nimport { MEMBERSHIP_SCHEMA } from './yupSchema'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nconst UPDATE_MEMBERSHIP = gql`\n  mutation UpdateOrganizationMembership($input: UpdateOrganizationMembershipInput!) {\n    updateOrganizationMembership(input: $input) {\n        organizationMembership {\n          id\n          displayPublic\n          displayShop\n          name\n          description\n          price\n          financeTaxRate {\n            id\n            name\n          }\n          validity\n          validityUnit\n          termsAndConditions\n          financeGlaccount {\n            id\n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n    }\n  }\n`\n\n\nclass OrganizationMembershipEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization membership edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const return_url = \"/organization/memberships\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title=\"Organization\" />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.memberships.title_edit')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_MEMBERSHIP_QUERY} variables={{ \"id\": id, \"archived\": false}} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    console.log('query data')\n                    console.log(data)\n                    const initialData = data\n\n                    let initialGlaccount = \"\"\n                    if (initialData.organizationMembership.financeGlaccount) {\n                      initialGlaccount =  initialData.organizationMembership.financeGlaccount.id\n                    } \n\n                    let initialCostcenter = \"\"\n                    if (initialData.organizationMembership.financeCostcenter) {\n                      initialCostcenter =  initialData.organizationMembership.financeCostcenter.id\n                    } \n\n                    return (\n                      <Mutation mutation={UPDATE_MEMBERSHIP} onCompleted={() => history.push(return_url)}> \n                      {(createMembership, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                displayPublic: initialData.organizationMembership.displayPublic,\n                                displayShop: initialData.organizationMembership.displayShop,\n                                name: initialData.organizationMembership.name,\n                                description: initialData.organizationMembership.description,\n                                price: initialData.organizationMembership.price,\n                                financeTaxRate: initialData.organizationMembership.financeTaxRate.id,\n                                validity: initialData.organizationMembership.validity,\n                                validityUnit: initialData.organizationMembership.validityUnit,\n                                termsAndConditions: initialData.organizationMembership.termsAndConditions,\n                                financeGlaccount:  initialGlaccount,\n                                financeCostcenter: initialCostcenter\n                              }}\n                              validationSchema={MEMBERSHIP_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  createMembership({ variables: {\n                                    input: {\n                                      id: match.params.id,\n                                      displayPublic: values.displayPublic,\n                                      displayShop: values.displayShop,\n                                      name: values.name,\n                                      description: values.description,\n                                      price: values.price,\n                                      financeTaxRate: values.financeTaxRate,\n                                      validity: values.validity,\n                                      validityUnit: values.validityUnit,\n                                      termsAndConditions: values.termsAndConditions,\n                                      financeGlaccount: values.financeGlaccount,\n                                      financeCostcenter: values.financeCostcenter\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_MEMBERSHIPS_QUERY, variables: {\"archived\": false }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.memberships.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n                                  <FoForm>\n                                      <Card.Body> \n                                        <Form.Group>\n                                          <Form.Label className=\"custom-switch\">\n                                              <Field \n                                                className=\"custom-switch-input\"\n                                                type=\"checkbox\" \n                                                name=\"displayPublic\" \n                                                checked={values.displayPublic} />\n                                              <span className=\"custom-switch-indicator\" ></span>\n                                              <span className=\"custom-switch-description\">{t('organization.membership.public')}</span>\n                                            </Form.Label>\n                                          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n                                        </Form.Group>      \n                                        <Form.Group>\n                                          <Form.Label className=\"custom-switch\">\n                                              <Field \n                                                className=\"custom-switch-input\"\n                                                type=\"checkbox\" \n                                                name=\"displayShop\" \n                                                checked={values.displayShop} />\n                                              <span className=\"custom-switch-indicator\" ></span>\n                                              <span className=\"custom-switch-description\">{t('organization.membership.shop')}</span>\n                                            </Form.Label>\n                                          <ErrorMessage name=\"displayShop\" component=\"div\" />   \n                                        </Form.Group>      \n                                        <Form.Group label={t('general.name')} >\n                                          <Field type=\"text\" \n                                                name=\"name\" \n                                                className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.description')}>\n                                          <Editor\n                                              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                                              textareaName=\"description\"\n                                              initialValue={values.description}\n                                              init={tinymceBasicConf}\n                                              onBlur={(e) => {\n                                                setFieldValue(\"description\", e.target.getContent())\n                                                setFieldTouched(\"description\", true, true)\n                                              }}\n                                            />\n                                          <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.price')}>\n                                          <Field type=\"text\" \n                                                name=\"price\" \n                                                className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.taxrate')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeTaxRate\" \n                                                 className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            {initialData.financeTaxRates.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.validity')}>\n                                          <Field type=\"text\" \n                                                name=\"validity\" \n                                                className={(errors.validity) ? \"form-control is-invalid\" : \"form-control\"} \n                                                autoComplete=\"off\" />\n                                          <ErrorMessage name=\"validity\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.validity_unit')}>\n                                          <Field component=\"select\" \n                                                 name=\"validityUnit\" \n                                                 className={(errors.validityUnit) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"DAYS\" key={v4()}>{t('validity.days')}</option>\n                                            <option value=\"WEEKS\" key={v4()}>{t('validity.weeks')}</option>\n                                            <option value=\"MONTHS\" key={v4()}>{t('validity.months')}</option>\n                                          </Field>\n                                          <ErrorMessage name=\"validityUnit\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.terms_and_conditions')}>\n                                          <Editor\n                                              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                                              textareaName=\"termsAndConditions\"\n                                              initialValue={values.termsAndConditions}\n                                              init={tinymceBasicConf}\n                                              onBlur={(e) => {\n                                                setFieldValue(\"termsAndConditions\", e.target.getContent())\n                                                setFieldTouched(\"termsAndConditions\", true, true)\n                                              }}\n                                            />\n                                          <ErrorMessage name=\"termsAndConditions\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.glaccount')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeGlaccount\" \n                                                 className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"\" key={v4()}></option>\n                                            {initialData.financeGlaccounts.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                        <Form.Group label={t('general.costcenter')}>\n                                          <Field component=\"select\" \n                                                 name=\"financeCostcenter\" \n                                                 className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n                                                 autoComplete=\"off\">\n                                            <option value=\"\" key={v4()}></option>\n                                            {initialData.financeCostcenters.edges.map(({ node }) =>\n                                              <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                                            )}\n                                          </Field>\n                                          <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n                                        </Form.Group>\n                                      </Card.Body>\n                                      <Card.Footer>\n                                          <Button \n                                            className=\"pull-right\"\n                                            color=\"primary\"\n                                            disabled={isSubmitting}\n                                            type=\"submit\"\n                                          >\n                                            {t('general.submit')}\n                                          </Button>\n                                          <Button\n                                            type=\"button\" \n                                            color=\"link\" \n                                            onClick={() => history.push(return_url)}\n                                          >\n                                              {t('general.cancel')}\n                                          </Button>\n                                      </Card.Footer>\n                                  </FoForm>\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"change\"\n                                      resource=\"organizationmembership\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='memberships'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationMembershipEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationSubscriptionsBase({t, children, showBack=false}) {\n  const activeLink = \"subscriptions\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/subscriptions/groups\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"folder\" /> {t('general.groups')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ? \n                <Link to=\"/organization/subscriptions/\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationsubscription\">\n                  <Link to=\"/organization/subscriptions/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.subscriptions.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <OrganizationMenu activeLink={activeLink}/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  ) \n}\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_SUBSCRIPTIONS_QUERY = gql`\n  query OrganizationSubscriptions($after: String, $before: String, $archived: Boolean) {\n    organizationSubscriptions(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          priceTodayDisplay\n          displayPublic\n          displayShop\n          name\n          description\n          sortOrder\n          minDuration\n          classes\n          subscriptionUnit\n          subscriptionUnitDisplay\n          reconciliationClasses\n          creditValidity\n          unlimited\n          termsAndConditions\n          registrationFee\n          organizationMembership {\n            id\n            name\n          }\n          quickStatsAmount\n          financeGlaccount {\n            id \n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_SUBSCRIPTION_QUERY = gql`\n  query OrganizationSubscription($id: ID!, $after: String, $before: String) {\n    organizationSubscription(id:$id) {\n      id\n      archived\n      displayPublic\n      displayShop\n      name\n      description\n      sortOrder\n      minDuration\n      classes\n      subscriptionUnit\n      subscriptionUnitDisplay\n      reconciliationClasses\n      creditValidity\n      unlimited\n      termsAndConditions\n      registrationFee\n      organizationMembership {\n        id\n        name\n      }\n      quickStatsAmount\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    organizationMemberships(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query SubscriptionInputValues($after: String, $before: String) {\n    organizationMemberships(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financeGlaccounts(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    financeCostcenters(first: 15, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\n\nexport const CREATE_SUBSCRIPTION = gql`\n  mutation CreateSubscription($input: CreateOrganizationSubscriptionInput!) {\n    createOrganizationSubscription(input: $input) {\n      organizationSubscription {\n        id\n        displayPublic\n        displayShop\n        name\n        description\n        sortOrder\n        minDuration\n        classes\n        subscriptionUnit\n        subscriptionUnitDisplay\n        reconciliationClasses\n        creditValidity\n        unlimited\n        termsAndConditions\n        organizationMembership {\n          id\n          name\n        }\n        quickStatsAmount\n        financeGlaccount {\n          id\n          name\n        }\n        financeCostcenter {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_SUBSCRIPTION = gql`\n  mutation UpdateOrganizationSubscription($input: UpdateOrganizationSubscriptionInput!) {\n    updateOrganizationSubscription(input: $input) {\n      organizationSubscription {\n        id\n        displayPublic\n        displayShop\n        name\n        description\n        sortOrder\n        minDuration\n        classes\n        subscriptionUnit\n        subscriptionUnitDisplay\n        reconciliationClasses\n        creditValidity\n        unlimited\n        termsAndConditions\n        organizationMembership {\n          id\n          name\n        }\n        quickStatsAmount\n        financeGlaccount {\n          id\n          name\n        }\n        financeCostcenter {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const ARCHIVE_SUBSCRIPTION = gql`\nmutation ArchiveOrganizationSubscription($input: ArchiveOrganizationSubscriptionInput!) {\n  archiveOrganizationSubscription(input: $input) {\n    organizationSubscription {\n      id\n      archived\n    }\n  }\n}\n`","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationSubscriptionsBase from './OrganizationSubscriptionsBase'\n\nimport { GET_SUBSCRIPTIONS_QUERY, ARCHIVE_SUBSCRIPTION } from \"./queries\"\n\n\nfunction OrganizationSubscriptions({t, history}) {\n  const cardTitle = t('organization.subscriptions.title')\n  let [archived, setArchived] = useState(false)\n  const {loading, error, data, refetch, fetchMore} = useQuery(GET_SUBSCRIPTIONS_QUERY, {\n    variables: {archived: archived}\n  })\n  const [archiveSubscription] = useMutation(ARCHIVE_SUBSCRIPTION)\n  const headerOptions = <Card.Options>\n    <Button color={(!archived) ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {setArchived(false); refetch({archived: archived});}}>\n      {t('general.current')}\n    </Button>\n    <Button color={(archived) ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {setArchived(true); refetch({archived: archived});}}>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <OrganizationSubscriptionsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  if (error) return (\n    <OrganizationSubscriptionsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.subscriptions.error_loading')}</p>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  let subscriptions = data.organizationSubscriptions\n\n  // Empty list\n  if (!subscriptions.edges.length) { return (\n    <OrganizationSubscriptionsBase>\n      <ContentCard cardTitle={cardTitle}\n                    headerContent={headerOptions}>\n        <p>\n          {(!archived) ? t('organization.subscriptions.empty_list') : t(\"organization.subscriptions.empty_archive\")}\n        </p>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )}\n\n  return (\n    <OrganizationSubscriptionsBase>\n      <ContentCard cardTitle={t('organization.subscriptions.title')}\n                  headerContent={headerOptions}\n                  pageInfo={subscriptions.pageInfo}\n                  onLoadMore={() => {\n                    fetchMore({\n                      variables: {\n                        after: subscriptions.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.organizationSubscriptions.edges\n                        const pageInfo = fetchMoreResult.organizationSubscriptions.pageInfo\n\n                        return newEdges.length\n                          ? {\n                              // Put the new subscriptions at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              organizationSubscriptions: {\n                                __typename: previousResult.organizationSubscriptions.__typename,\n                                edges: [ ...previousResult.organizationSubscriptions.edges, ...newEdges ],\n                                pageInfo\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.classes')}</Table.ColHeader>\n              <Table.ColHeader><span className=\"pull-right\">{t('general.price')}</span></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {subscriptions.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  {node.name}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  <BadgeBoolean value={node.displayPublic} />\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  <BadgeBoolean value={node.displayShop} />\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {\n                    (node.unlimited) ? t(\"general.unlimited\"):\n                    <div>\n                      {node.classes} <br />\n                      <span className=\"text-muted\"> {t(\"general.a\")} {node.subscriptionUnitDisplay}</span>\n                    </div>\n                  }\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  {node.priceTodayDisplay} <br />\n                  <Link to={\"/organization/subscriptions/prices/\" + node.id}\n                        className='btn btn-link btn-sm'>\n                      {/* <Icon prefix=\"fe\" name=\"dollar-sign\" />  */}\n                      {t('general.edit_price')}\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  {(node.archived) ? \n                    <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                    <Button className='btn-sm' \n                            onClick={() => history.push(\"/organization/subscriptions/edit/\" + node.id)}\n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  }\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.archive')} \n                      href=\"\"\n                      onClick={() => {\n                        console.log(\"clicked archived\")\n                        let id = node.id\n                        archiveSubscription({ variables: {\n                          input: {\n                          id,\n                          archived: !archived\n                          }\n                  }, refetchQueries: [\n                      {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": archived }}\n                  ]}).then(({ data }) => {\n                    console.log('got data', data);\n                    toast.success(\n                      (archived) ? t('general.unarchived'): t('general.archived'), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                  })\n                  }}>\n                    <Icon prefix=\"fa\" name=\"inbox\" />\n                  </button>\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </ContentCard>\n  </OrganizationSubscriptionsBase>\n)}\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptions))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const SUBSCRIPTION_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n    description: Yup.string(),\n    sortOrder: Yup.number()\n      .min(0),\n    minDuration: Yup.number()\n      .min(0),\n    classes: Yup.number()\n      .min(0),\n    subscriptionUnit: Yup.string(),\n    creditValidity: Yup.number()\n      .min(0),\n    quickStatsAmount: Yup.number()\n      .min(0),\n    termsAndConditions: Yup.string()\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\nimport { Link } from \"react-router-dom\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\n\nimport {\n  Button,\n  Card,\n  Form\n} from \"tabler-react\";\n\n\nconst OrganizationSubscriptionForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, returnUrl }) => (\n  <FoForm>\n    <Card.Body> \n      <Form.Group>\n        <Form.Label className=\"custom-switch\">\n            <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"displayPublic\" \n              checked={values.displayPublic} />\n            <span className=\"custom-switch-indicator\" ></span>\n            <span className=\"custom-switch-description\">{t('organization.subscription.public')}</span>\n          </Form.Label>\n        <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n      </Form.Group>      \n      <Form.Group>\n        <Form.Label className=\"custom-switch\">\n            <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"displayShop\" \n              checked={values.displayShop} />\n            <span className=\"custom-switch-indicator\" ></span>\n            <span className=\"custom-switch-description\">{t('organization.subscription.shop')}</span>\n          </Form.Label>\n        <ErrorMessage name=\"displayShop\" component=\"div\" />   \n      </Form.Group>      \n      <Form.Group label={t('general.name')} >\n        <Field type=\"text\" \n              name=\"name\" \n              className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n        <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.description')}>\n        <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"description\"\n            initialValue={values.description}\n            init={tinymceBasicConf}\n            onBlur={(e) => {\n              setFieldValue(\"description\", e.target.getContent())\n              setFieldTouched(\"description\", true)\n            }}\n          />\n        <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.sort_order')}>\n        <Field type=\"text\" \n              name=\"sortOrder\" \n              className={(errors.sortOrder) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n        <ErrorMessage name=\"sortOrder\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.min_duration')}>\n        <Field type=\"text\" \n              name=\"minDuration\" \n              className={(errors.minDuration) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n        <ErrorMessage name=\"minDuration\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label className=\"custom-switch\">\n            <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"unlimited\" \n              checked={values.unlimied} />\n            <span className=\"custom-switch-indicator\" ></span>\n            <span className=\"custom-switch-description\">{t('general.unlimited')}</span>\n          </Form.Label>\n        <ErrorMessage name=\"unlimited\" component=\"div\" />   \n      </Form.Group>  \n      {/* Show if unlimited */}\n      { (values.unlimited) ? \"\"\n        : \n        // Show if not unlimited\n        <span>\n          <Form.Group label={t('general.classes')}>\n            <Field type=\"text\" \n                  name=\"classes\" \n                  className={(errors.classes) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"classes\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group> \n          <Form.Group label={t('general.subscription_unit')}>\n            <Field component=\"select\" \n                  name=\"subscriptionUnit\" \n                  className={(errors.subscriptionUnit) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"WEEK\" key={v4()}>{t('subscription_unit.week')}</option>\n              <option value=\"MONTH\" key={v4()}>{t('subscription_unit.month')}</option>\n            </Field>\n            <ErrorMessage name=\"subscriptionUnit\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.credit_validity')}>\n            <Field type=\"text\" \n                  name=\"creditValidity\" \n                  className={(errors.creditValidity) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"creditValidity\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </span>\n      } \n      <Form.Group label={t('general.quickStatsAmount')}>\n        <Field type=\"text\" \n              name=\"quickStatsAmount\" \n              className={(errors.quickStatsAmount) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n        <ErrorMessage name=\"quickStatsAmount\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.terms_and_conditions')}>\n        <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"termsAndConditions\"\n            initialValue={values.termsAndConditions}\n            init={tinymceBasicConf}\n            onBlur={(e) => {\n              setFieldValue(\"termsAndConditions\", e.target.getContent())\n              setFieldTouched(\"termsAndConditions\", true)\n            }}\n          />\n        <ErrorMessage name=\"termsAndConditions\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      {/* <Form.Group label={t('general.membership')}>\n        <Field component=\"select\" \n              name=\"organizationMembership\" \n              className={(errors.organizationMembership) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\">\n          <option value=\"\" key={v4()}>{t(\"general.membership_not_required\")}</option>\n          {inputData.organizationMemberships.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"organizationMembership\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>  */}\n      <Form.Group label={t('general.glaccount')}>\n        <Field component=\"select\" \n              name=\"financeGlaccount\" \n              className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\">\n          <option value=\"\" key={v4()}></option>\n          {inputData.financeGlaccounts.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.costcenter')}>\n        <Field component=\"select\" \n              name=\"financeCostcenter\" \n              className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\">\n          <option value=\"\" key={v4()}></option>\n          {inputData.financeCostcenters.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button\n            type=\"button\" \n            color=\"link\"\n          >\n              {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTIONS_QUERY, GET_INPUT_VALUES_QUERY, CREATE_SUBSCRIPTION } from './queries'\nimport { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionForm from './OrganizationSubscriptionForm'\n\nimport {\n  Card,\n  Dimmer\n} from \"tabler-react\";\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationSubscriptionsBase from \"./OrganizationSubscriptionsBase\"\n\n\nfunction OrganizationSubscriptionAdd({ t, history }) {\n  const cardTitle = t('organization.subscriptions.title_add')\n  const returnUrl =  \"/organization/subscriptions\"\n  const {loading, error, data} = useQuery(GET_INPUT_VALUES_QUERY)\n  const [createSubscription] = useMutation(CREATE_SUBSCRIPTION)\n\n  if (loading) return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  if (error) return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n\n  return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n            initialValues={{ \n              displayPublic: true,\n              displayShop: true,\n              name: \"\",\n              description: \"\",\n              sortOrder: 0,\n              minDuration: 1,\n              classes: 1,\n              subscriptionUnit: \"WEEK\",\n              reconciliationClasses: 0,\n              creditValidity: 1,\n              unlimited: false,\n              termsAndConditions: \"\",\n              organizationMembership: \"\",\n              quickStatsAmount: 0,\n              financeGlaccount: \"\",\n              financeCostcenter: \"\"\n            }}\n            validationSchema={SUBSCRIPTION_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                createSubscription({ variables: {\n                  input: {\n                    displayPublic: values.displayPublic,\n                    displayShop: values.displayShop,\n                    name: values.name,\n                    description: values.description,\n                    sortOrder: values.sortOrder,\n                    minDuration: values.minDuration,\n                    classes: values.classes,\n                    subscriptionUnit: values.subscriptionUnit,\n                    reconciliationClasses: values.reconciliationClasses,\n                    creditValidity: values.creditValidity,\n                    unlimited: values.unlimited,\n                    termsAndConditions: values.termsAndConditions,\n                    quickStatsAmount: values.quickStatsAmount,\n                    financeGlaccount: values.financeGlaccount,\n                    financeCostcenter: values.financeCostcenter\n                  }\n                }, refetchQueries: [\n                    {query: GET_SUBSCRIPTIONS_QUERY, variables: {archived: false }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(returnUrl)\n                    toast.success((t('organization.subscriptions.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n              }}\n            >\n            {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n              <OrganizationSubscriptionForm\n                inputData={inputData}\n                isSubmitting={isSubmitting}\n                setFieldValue={setFieldValue}\n                setFieldTouched={setFieldTouched}\n                errors={errors}\n                values={values}\n                returnUrl={returnUrl}\n              />\n            )}\n        </Formik>\n      </Card>\n    </OrganizationSubscriptionsBase>\n  )\n}\n\n\n\n// class OrganizationSubscriptionAdd extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Organization subscription add props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const history = this.props.history\n//     const return_url = \"/organization/subscriptions\"\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//           <Container>\n//             <Page.Header title=\"Organization\" />\n//             <Grid.Row>\n//               <Grid.Col md={9}>\n\n//               </Grid.Col>\n//               <Grid.Col md={3}>\n//                 <HasPermissionWrapper permission=\"add\"\n//                                       resource=\"organizationsubscription\">\n//                   <Button color=\"primary btn-block mb-6\"\n//                           onClick={() => history.push(return_url)}>\n//                     <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n//                   </Button>\n//                 </HasPermissionWrapper>\n//                 <OrganizationMenu activeLink='subscriptions'/>\n//               </Grid.Col>\n//             </Grid.Row>\n//           </Container>\n//         </div>\n//     </SiteWrapper>\n//     )}\n//   }\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTIONS_QUERY, GET_SUBSCRIPTION_QUERY, UPDATE_SUBSCRIPTION } from './queries'\nimport { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionForm from './OrganizationSubscriptionForm'\n\n\nimport {\n  Card,\n  Dimmer\n} from \"tabler-react\";\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationSubscriptionsBase from './OrganizationSubscriptionsBase';\n\n\nfunction OrganizationSubscriptionEdit({t, match, history}) {\n  const id = match.params.id\n  const returnUrl = \"/organization/subscriptions\"\n  const cardTitle = t('organization.subscriptions.title_edit')\n\n  const { loading, error, data } = useQuery(GET_SUBSCRIPTION_QUERY, { \n    variables: { id: id }\n  })\n  const [ updateSubscription ] = useMutation(UPDATE_SUBSCRIPTION)\n\n  if (loading) return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  if (error) return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationSubscriptionsBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const initialData = data\n\n  let initialMembership = \"\"\n  if (initialData.organizationSubscription.organizationMembership) {\n    initialMembership =  initialData.organizationSubscription.organizationMembership.id\n  } \n\n  let initialGlaccount = \"\"\n  if (initialData.organizationSubscription.financeGlaccount) {\n    initialGlaccount =  initialData.organizationSubscription.financeGlaccount.id\n  } \n\n  let initialCostcenter = \"\"\n  if (initialData.organizationSubscription.financeCostcenter) {\n    initialCostcenter =  initialData.organizationSubscription.financeCostcenter.id\n  } \n\n  return (\n    <OrganizationSubscriptionsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            displayPublic: initialData.organizationSubscription.displayPublic,\n            displayShop: initialData.organizationSubscription.displayShop,\n            name: initialData.organizationSubscription.name,\n            description: initialData.organizationSubscription.description,\n            sortOrder: initialData.organizationSubscription.sortOrder,\n            minDuration: initialData.organizationSubscription.minDuration,\n            classes: initialData.organizationSubscription.classes,\n            subscriptionUnit: initialData.organizationSubscription.subscriptionUnit,\n            reconciliationClasses: initialData.organizationSubscription.reconciliationClasses,\n            creditValidity: initialData.organizationSubscription.creditValidity,\n            unlimited: initialData.organizationSubscription.unlimited,\n            termsAndConditions: initialData.organizationSubscription.termsAndConditions,\n            organizationMembership: initialMembership,\n            quickStatsAmount: initialData.organizationSubscription.quickStatsAmount,\n            financeGlaccount:  initialGlaccount,\n            financeCostcenter: initialCostcenter\n          }}\n          validationSchema={SUBSCRIPTION_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateSubscription({ variables: {\n                input: {\n                  id: match.params.id,\n                  displayPublic: values.displayPublic,\n                  displayShop: values.displayShop,\n                  name: values.name,\n                  description: values.description,\n                  sortOrder: values.sortOrder,\n                  minDuration: values.minDuration,\n                  classes: values.classes,\n                  subscriptionUnit: values.subscriptionUnit,\n                  reconciliationClasses: values.reconciliationClasses,\n                  creditValidity: values.creditValidity,\n                  unlimited: values.unlimited,\n                  termsAndConditions: values.termsAndConditions,\n                  quickStatsAmount: values.quickStatsAmount,\n                  financeGlaccount: values.financeGlaccount,\n                  financeCostcenter: values.financeCostcenter\n                }\n              }, refetchQueries: [\n                  {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('organization.subscriptions.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <OrganizationSubscriptionForm\n              inputData={initialData}\n              isSubmitting={isSubmitting}\n              setFieldValue={setFieldValue}\n              setFieldTouched={setFieldTouched}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n            />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationSubscriptionsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../OrganizationMenu\"\n\n\nfunction OrganizationSubscriptionsGroupsBase({ t, history, children, showBack=false }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/subscriptions\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.subscriptions.title')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showBack) ? \n                <Link to=\"/organization/subscriptions/groups\">\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n                :\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"organizationsubscriptiongroup\">\n                  <Link to=\"/organization/subscriptions/groups/add\">\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.subscription_groups.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              }\n              <OrganizationMenu activeLink=''/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionsGroupsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_SUBSCRIPTION_GROUPS_QUERY = gql`\n  query OrganizationSubscriptionGroups($after: String, $before: String) {\n    organizationSubscriptionGroups(first: 100, before: $before, after: $after) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          description\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_SUBSCRIPTION_GROUP_QUERY = gql`\n  query OrganizationSubscriptionGroup($id: ID!) {\n    organizationSubscriptionGroup(id:$id) {\n      id\n      name\n      description\n    }\n  }\n`\n\n\nexport const GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY = gql`\n  query GetPassesAndGroupMembership($after: String, $before: String, $id:ID!) {\n    organizationSubscriptions(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    organizationSubscriptionGroup(id: $id) {\n      id\n      name\n      description\n      organizationSubscriptions {\n        edges {\n          node {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const ADD_SUBSCRIPTION_GROUP = gql`\n  mutation CreateOrganizationSubscriptionGroup($input:CreateOrganizationSubscriptionGroupInput!) {\n    createOrganizationSubscriptionGroup(input: $input) {\n      organizationSubscriptionGroup{\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_SUBSCRIPTION_GROUP = gql`\nmutation UpdateOrganizationSubscriptionGroup($input: UpdateOrganizationSubscriptionGroupInput!) {\n  updateOrganizationSubscriptionGroup(input: $input) {\n    organizationSubscriptionGroup {\n      id\n    }\n  }\n}\n`\n\nexport const DELETE_SUBSCRIPTION_GROUP = gql`\n  mutation DeleteSubscriptionGroup($input: DeleteOrganizationSubscriptionGroupInput!) {\n    deleteOrganizationSubscriptionGroup(input: $input) {\n      ok\n    }\n  }\n`\n\nexport const ADD_CARD_TO_GROUP = gql`\n  mutation AddCardToGroup($input: CreateOrganizationSubscriptionGroupSubscriptionInput!) {\n    createOrganizationSubscriptionGroupSubscription(input:$input) {\n      organizationSubscriptionGroupSubscription {\n        id\n        organizationSubscription {\n          id\n          name\n        }\n        organizationSubscriptionGroup {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\n\nexport const DELETE_CARD_FROM_GROUP = gql`\n  mutation DeleteCardFromGroup($input: DeleteOrganizationSubscriptionGroupSubscriptionInput!) {\n    deleteOrganizationSubscriptionGroupSubscription(input:$input) {\n      ok\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport ContentCard from \"../../general/ContentCard\"\nimport CardHeaderSeparator from \"../../general/CardHeaderSeparator\"\nimport OrganizationMenu from \"../OrganizationMenu\"\nimport OrganizationGroupsSubscriptionsBase from \"./OrganizationSubscriptionsGroupsBase\"\n\nimport { GET_SUBSCRIPTION_GROUPS_QUERY, DELETE_SUBSCRIPTION_GROUP } from \"./queries\"\n\n\nfunction OrganizationSubscriptionsGroups({ t, history }) {\n  const { loading, error, data, fetchMore } = useQuery(GET_SUBSCRIPTION_GROUPS_QUERY)\n  const [deleteSubscriptionGroup] = useMutation(DELETE_SUBSCRIPTION_GROUP)\n\n  if (loading) return (\n    <OrganizationGroupsSubscriptionsBase>\n      <ContentCard cardTitle={t('organization.subscription_groups.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationGroupsSubscriptionsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationGroupsSubscriptionsBase>\n      <ContentCard cardTitle={t('organization.subscription_groups.title')}>\n        <p>{t('organization.subscription_groups.error_loading')}</p>\n      </ContentCard>\n    </OrganizationGroupsSubscriptionsBase>\n  )\n\n  const subscription_groups = data.organizationSubscriptionGroups\n  \n  // Empty list\n  if (!subscription_groups.edges.length) return (\n    <OrganizationGroupsSubscriptionsBase>\n      <ContentCard cardTitle={t('organization.subscription_groups.title')}>\n        <p>{t('organization.subscription_groups.empty_list')}</p>\n      </ContentCard>\n    </OrganizationGroupsSubscriptionsBase>\n  )\n\n  return (\n    <OrganizationGroupsSubscriptionsBase>\n      <ContentCard cardTitle={t('organization.subscription_groups.title')}\n            pageInfo={subscription_groups.pageInfo}\n            onLoadMore={() => {\n            fetchMore({\n              variables: {\n                after: subscription_groups.pageInfo.endCursor\n              },\n              updateQuery: (previousResult, { fetchMoreResult }) => {\n                const newEdges = fetchMoreResult.organizationSubscriptionGroups.edges\n                const pageInfo = fetchMoreResult.organizationSubscriptionGroups.pageInfo\n\n                return newEdges.length\n                  ? {\n                      // Put the new subscription_groups at the end of the list and update `pageInfo`\n                      // so we have the new `endCursor` and `hasNextPage` values\n                      organizationSubscriptionGroups: {\n                        __typename: previousResult.organizationSubscriptionGroups.__typename,\n                        edges: [ ...previousResult.organizationSubscriptionGroups.edges, ...newEdges ],\n                        pageInfo\n                      }\n                    }\n                  : previousResult\n              }\n            })\n          }} >\n        <Table>\n          <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n          </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {subscription_groups.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  {node.name}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.description.substring(0, 24)}\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <span>\n                    <Button className='btn-sm' \n                            onClick={() => history.push(\"/organization/subscriptions/groups/edit/\" + node.id)}\n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                    <Button className='btn-sm' \n                            onClick={() => history.push(\"/organization/subscriptions/groups/edit/subscriptions/\" + node.id)}\n                            color=\"secondary\">\n                      {t('organization.subscriptions.groups.edit_subscriptions')}\n                    </Button>\n                  </span>\n                </Table.Col>\n                <Table.Col>\n                  <button className=\"icon btn btn-link btn-sm float-right\" \n                    title={t('general.delete')} \n                    href=\"\"\n                    onClick={() => {\n                      confirm_delete({\n                        t: t,\n                        msgConfirm: t(\"organization.subscriptions.groups.delete_confirm_msg\"),\n                        msgDescription: <p>{node.name}</p>,\n                        msgSuccess: t('organization.subscriptions.groups.deleted'),\n                        deleteFunction: deleteSubscriptionGroup,\n                        functionVariables: { variables: {\n                          input: {\n                            id: node.id\n                          }\n                        }, refetchQueries: [\n                          {query: GET_SUBSCRIPTION_GROUPS_QUERY} \n                        ]}\n                      })\n                  }}>\n                    <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                  </button>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </OrganizationGroupsSubscriptionsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionsGroups))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SUBSCRIPTION_GROUP_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Alert,\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nconst OrganizationSubscriptionGroupForm = ({ t, history, isSubmitting, errors, returnUrl }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.description')}>\n            <Field type=\"text\" \n                    name=\"description\" \n                    className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n        {(isSubmitting) ?\n        <Button \n          color=\"primary\"\n          className=\"pull-right\" \n          type=\"submit\" \n          loading\n          disabled={isSubmitting}\n        >\n          {t(\"general.submit\")}\n        </Button>\n        :\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n        }\n        <Link to={returnUrl}>\n          <Button color=\"link\">\n              {t('general.cancel')}\n          </Button>\n        </Link>\n        {(isSubmitting) ? \n          <Alert type=\"primary\" hasExtraSpace>\n            <strong>{t('general.please_wait')}</strong> {t('organization.subscription_groups.toast_creating_might_take_a_while')}\n          </Alert> : \n          \"\"\n        }\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionGroupForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTION_GROUPS_QUERY, ADD_SUBSCRIPTION_GROUP } from './queries'\nimport { SUBSCRIPTION_GROUP_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionGroupForm from './OrganizationSubscriptionsGroupForm'\n\nimport {\n  Card,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationSubscriptionsGroupsBase from './OrganizationSubscriptionsGroupsBase';\n\nfunction OrganizationSubscriptionGroupAdd({t, history}) {\n  const returnUrl = \"/organization/subscriptions/groups\"\n  const [addSubscriptionGroup] = useMutation(ADD_SUBSCRIPTION_GROUP)\n\n  return (\n    <OrganizationSubscriptionsGroupsBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('organization.subscription_groups.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ name: '', description: '' }}\n          validationSchema={SUBSCRIPTION_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            addSubscriptionGroup({ variables: {\n              input: {\n                name: values.name, \n                description: values.description,\n              }\n            }, refetchQueries: [\n                {query: GET_SUBSCRIPTION_GROUPS_QUERY}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                history.push(returnUrl)\n                toast.success((t('organization.subscription_groups.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n            >\n            {({ isSubmitting, errors }) => (\n              <OrganizationSubscriptionGroupForm\n                isSubmitting={isSubmitting}\n                errors={errors}\n                returnUrl={returnUrl}\n              />\n            )}\n        </Formik>\n      </Card>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionGroupAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTION_GROUPS_QUERY, GET_SUBSCRIPTION_GROUP_QUERY, UPDATE_SUBSCRIPTION_GROUP } from './queries'\nimport { SUBSCRIPTION_GROUP_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionGroupForm from './OrganizationSubscriptionsGroupForm'\n\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\n\nimport ContentCard from \"../../general/ContentCard\"\nimport OrganizationSubscriptionsGroupsBase from './OrganizationSubscriptionsGroupsBase';\n\n\nfunction OrganizationSubscriptionGroupEdit({t, match, history}) {\n  const id = match.params.id\n  const returnUrl = \"/organization/subscriptions/groups\"\n  const cardTitle = t('organization.subscription_groups.title_edit')\n  const {loading, error, data} = useQuery(GET_SUBSCRIPTION_GROUP_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateSubscriptionGroup ] = useMutation(UPDATE_SUBSCRIPTION_GROUP)\n  \n  if (loading) return (\n    <OrganizationSubscriptionsGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationSubscriptionsGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('organization.subscription_groups.error_loading')}</p>\n      </ContentCard>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n\n  const initialData = data.organizationSubscriptionGroup;\n\n  return (\n    <OrganizationSubscriptionsGroupsBase>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            name: initialData.name, \n            description: initialData.description,\n          }}\n          validationSchema={SUBSCRIPTION_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateSubscriptionGroup({ variables: {\n              input: {\n                id: match.params.id,\n                name: values.name,\n                description: values.description,\n              }\n            }, refetchQueries: [\n                {query: GET_SUBSCRIPTION_GROUPS_QUERY}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                history.push(returnUrl)\n                toast.success((t('organization.subscription_groups.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <OrganizationSubscriptionGroupForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              returnUrl={returnUrl}\n            />\n          )}\n        </Formik>\n      </Card>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n}\n\n\n// class OrganizationSubscriptionGroupEdit extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Organization subscriptiongroup edit props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const match = this.props.match\n//     const history = this.props.history\n//     const id = match.params.id\n//     const return_url = \"/organization/subscriptions/groups\"\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//           <Container>\n//             <Page.Header title=\"Organization\" />\n//             <Grid.Row>\n//               <Grid.Col md={9}>\n//               <Card>\n//                 <Card.Header>\n//                   <Card.Title>{t('organization.subscription_groups.title_edit')}</Card.Title>\n//                   {console.log(match.params.id)}\n//                 </Card.Header>\n//                 <Query query={GET_SUBSCRIPTION_GROUP_QUERY} variables={{ id }} >\n//                 {({ loading, error, data, refetch }) => {\n//                     // Loading\n//                     if (loading) return <p>{t('general.loading_with_dots')}</p>\n//                     // Error\n//                     if (error) {\n//                       console.log(error)\n//                       return <p>{t('general.error_sad_smiley')}</p>\n//                     }\n                    \n//                     const initialData = data.organizationSubscriptionGroup;\n//                     console.log('query data')\n//                     console.log(data)\n\n//                     return (\n                      \n//                       <Mutation mutation={UPDATE_SUBSCRIPTION_GROUP} onCompleted={() => history.push(return_url)}> \n//                       {(updateSubscriptionGroup, { data }) => (\n//                           <Formik\n//                               initialValues={{ \n//                                 name: initialData.name, \n//                                 description: initialData.description,\n//                               }}\n//                               validationSchema={SUBSCRIPTION_GROUP_SCHEMA}\n//                               onSubmit={(values, { setSubmitting }) => {\n//                                   console.log('submit values:')\n//                                   console.log(values)\n\n//                                   updateSubscriptionGroup({ variables: {\n//                                     input: {\n//                                       id: match.params.id,\n//                                       name: values.name,\n//                                       description: values.description,\n//                                     }\n//                                   }, refetchQueries: [\n//                                       {query: GET_SUBSCRIPTION_GROUPS_QUERY}\n//                                   ]})\n//                                   .then(({ data }) => {\n//                                       console.log('got data', data)\n//                                       toast.success((t('organization.subscription_groups.toast_edit_success')), {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                     }).catch((error) => {\n//                                       toast.error((t('general.toast_server_error')) +  error, {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                       console.log('there was an error sending the query', error)\n//                                       setSubmitting(false)\n//                                     })\n//                               }}\n//                               >\n//                               {({ isSubmitting, errors, values }) => (\n//                                 <OrganizationSubscriptionGroupForm\n//                                   isSubmitting={isSubmitting}\n//                                   errors={errors}\n//                                   return_url={return_url}\n//                                 />\n//                               )}\n//                           </Formik>\n//                       )}\n//                       </Mutation>\n//                       )}}\n//                 </Query>\n//               </Card>\n//               </Grid.Col>\n//               <Grid.Col md={3}>\n//                 <HasPermissionWrapper permission=\"change\"\n//                                       resource=\"organizationsubscriptiongroup\">\n//                   <Button color=\"primary btn-block mb-6\"\n//                           onClick={() => history.push(return_url)}>\n//                     <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n//                   </Button>\n//                 </HasPermissionWrapper>\n//                 <OrganizationMenu activeLink=''/>\n//               </Grid.Col>\n//             </Grid.Row>\n//           </Container>\n//         </div>\n//     </SiteWrapper>\n//     )}\n//   }\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionGroupEdit))","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY, ADD_CARD_TO_GROUP, DELETE_CARD_FROM_GROUP } from './queries'\n\n\nimport {\n  Alert,\n  Icon,\n  Button,\n  Card,\n  Dimmer,\n  Table,\n} from \"tabler-react\";\n\nimport ContentCard from '../../general/ContentCard'\nimport OrganizationSubscriptionsGroupsBase from './OrganizationSubscriptionsGroupsBase';\n\nfunction OrganizationSubscriptionGroupEditSubscriptions({t, match, history}) {\n  const groupId = match.params.id\n  const returnUrl = \"/organization/subscriptions/groups\"\n  const cardTitle = t('organization.subscription_group_subscriptions.title_edit')\n  const { loading, error, data } = useQuery(GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY, {\n    variables: { id: groupId }\n  })\n  const [ addCardToGroup ] = useMutation(ADD_CARD_TO_GROUP)\n  const [ deleteCardFromGroup ] = useMutation(DELETE_CARD_FROM_GROUP)\n\n  if (loading) return (\n    <OrganizationSubscriptionsGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n  // Error\n  if (error) return (\n    <OrganizationSubscriptionsGroupsBase>\n      <ContentCard cardTitle={cardTitle}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ContentCard>\n    </OrganizationSubscriptionsGroupsBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const subscriptions = data.organizationSubscriptions\n  const group = data.organizationSubscriptionGroup\n\n  let group_subscriptions = {}\n  if (group.organizationSubscriptions.edges) {\n    group.organizationSubscriptions.edges.map(({ node }) => (\n      group_subscriptions[node.id] = true\n    ))\n  }\n\n  console.log(\"group_subscriptions\")\n  console.log(group_subscriptions)\n\n\n  return (\n    <OrganizationSubscriptionsGroupsBase>\n      <Card title={cardTitle}>\n      {\n      (!subscriptions.edges) ? \"\" : \n        <Card.Body>\n          <Alert type=\"primary\">\n            <strong>{t('general.group')}</strong> {group.name}\n          </Alert>\n          <Table>\n            <Table.Header>\n              <Table.Row key={v4()}>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                <Table.ColHeader>{t('')}</Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {subscriptions.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {(node.id in group_subscriptions) ? \n                        <Icon name=\"check-circle\" className=\"text-green\" /> : <Icon name=\"x-circle\" className=\"text-red\" />\n                      }\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.name}\n                    </Table.Col>\n                    {console.log((node.id in group_subscriptions))}\n                    {(!(node.id in group_subscriptions)) ?\n                      // Add\n                      <Table.Col className=\"text-right text-green\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('general.add_to_group')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked add\")\n                            let pass_id = node.id\n                            addCardToGroup({ variables: {\n                              input: {\n                                organizationSubscription: pass_id,\n                                organizationSubscriptionGroup: groupId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY, variables: {\"id\": groupId, \"archived\": false }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('general.added_to_group'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"plus-circle\" /> { ' ' }\n                          {t('general.add_to_group')} \n                        </Button>\n                      </Table.Col>\n                      :\n                      // Delete\n                      <Table.Col className=\"text-right text-red\" key={v4()}>\n                        <Button color=\"link\"\n                          size=\"sm\"\n                          title={t('general.delete_from_group')} \n                          href=\"\"\n                          onClick={() => {\n                            console.log(\"clicked delete\")\n                            console.log(node.id)\n                            let pass_id = node.id\n                            deleteCardFromGroup({ variables: {\n                              input: {\n                                organizationSubscription: pass_id,\n                                organizationSubscriptionGroup: groupId\n                              }\n                        }, refetchQueries: [\n                            {query: GET_SUBSCRIPTION_GROUP_SUBSCRIPTIONS_QUERY, variables: {\"id\": groupId, \"archived\": false }}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(t('general.deleted_from_group'), {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                          <Icon prefix=\"fe\" name=\"minus-circle\" /> { ' ' }\n                          {t('general.delete_from_group')}\n                        </Button>\n                      </Table.Col>\n                      }\n                  </Table.Row>\n                ))}\n            </Table.Body>\n          </Table>\n        </Card.Body>\n      }\n    </Card>\n  </OrganizationSubscriptionsGroupsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionGroupEditSubscriptions))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Alert\n} from \"tabler-react\"\n\nconst AlertInfo = ({ t, title, message }) => (\n  <Alert type=\"primary\">\n      <strong>{title}</strong> {message}\n  </Alert> \n)\n\nexport default withTranslation()(AlertInfo)\n\n\n\n","import { gql } from \"@apollo/client\"\n\nexport const GET_SUBSCRIPTION_PRICES_QUERY = gql`\n  query OrganizationSubscriptionPrices($after: String, $before: String, $organizationSubscription: ID!) {\n    organizationSubscriptionPrices(first: 15, before: $before, after: $after, organizationSubscription: $organizationSubscription) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationSubscription {\n            id\n            name\n          }\n          price\n          priceDisplay\n          financeTaxRate {\n            id\n            name\n          }\n          dateStart\n          dateEnd\n        }\n      }\n    }\n    organizationSubscription(id: $organizationSubscription) {\n      id\n      name\n    }\n  }\n`\n\nexport const GET_SUBSCRIPTION_PRICE_QUERY = gql`\n  query OrganizationSubscriptionPrice($id: ID!, $after: String, $before: String, $archived: Boolean!) {\n    organizationSubscriptionPrice(id:$id) {\n      id\n      organizationSubscription {\n        id\n        name\n      }\n      price\n      priceDisplay\n      financeTaxRate {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n    }\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InputValues($after: String, $before: String, $archived: Boolean) {\n    financeTaxRates(first: 15, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          percentage\n          rateType\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\nimport { confirmAlert } from 'react-confirm-alert'\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport OrganizationMenu from \"../../OrganizationMenu\"\nimport AlertInfo from \"../../../ui/AlertInfo\"\n\nimport { GET_SUBSCRIPTION_PRICES_QUERY } from \"./queries\"\nimport { GET_SUBSCRIPTIONS_QUERY } from \"../queries\"\n\nimport moment from 'moment'\n\n\nconst DELETE_SUBSCRIPTION_PRICE = gql`\n  mutation DeleteOrganizationSubscriptionPrice($input: DeleteOrganizationSubscriptionPriceInput!) {\n    deleteOrganizationSubscriptionPrice(input: $input) {\n      ok\n    }\n  }\n`\n\n\nconst confirmDelete = (t, match, deleteSubscriptionPrice, node) => {\n  console.log(\"clicked delete\")\n  let id = node.id\n\n  confirmAlert({\n    customUI: ({ onClose }) => {\n      return (\n        <div className='custom-ui'>\n          <h1>{t('general.confirm_delete')}</h1>\n          <p>{t('organization.subscription_prices.delete_confirm_msg')}</p>\n          <p>\n            {node.priceDisplay} {node.financeTaxRate.name} <br />\n            <span className=\"text-muted\">\n              {node.dateStart} {(node.dateEnd) ? ' - ' + node.dateEnd : \"\"}\n            </span>\n          </p>\n          <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_delete_no')}</button>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n            deleteSubscriptionPrice({ variables: {\n                input: {\n                id\n                }\n              }, refetchQueries: [\n                  {query: GET_SUBSCRIPTION_PRICES_QUERY, variables: { organizationSubscription: match.params.subscription_id }},\n                  {query: GET_SUBSCRIPTIONS_QUERY, variables: {archived: false}},\n              ]}).then(({ data }) => {\n                console.log('got data', data);\n                toast.success(\n                  t('organization.subscription_prices.deleted'), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error);\n              })\n              onClose()\n            }}\n          >\n            <Icon name=\"trash-2\" /> {t('general.confirm_delete_yes')}\n          </button>\n          \n        </div>\n      );\n    }\n  })\n}\n\n\nfunction OrganizationSubscriptionsPrices ({ t, history, match, archived=false }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"organization.title\")}>\n            <div className=\"page-options d-flex\">\n              <Link to=\"/organization/subscriptions\" \n                    className='btn btn-outline-secondary btn-sm'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('organization.subscriptions.title')}\n              </Link>\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <Query query={GET_SUBSCRIPTION_PRICES_QUERY} variables={{ organizationSubscription: match.params.subscription_id }}>\n              {({ loading, error, data: {organizationSubscriptionPrices: subscription_prices, organizationSubscription: subscription}, refetch, fetchMore }) => {\n                  // Loading\n                  if (loading) return (\n                    <ContentCard cardTitle={t('organization.subscription_prices.title')}>\n                      <Dimmer active={true}\n                              loader={true}>\n                      </Dimmer>\n                    </ContentCard>\n                  )\n                  // Error\n                  if (error) return (\n                    <ContentCard cardTitle={t('organization.subscription_prices.title')}>\n                      <p>{t('organization.subscription_prices.error_loading')}</p>\n                    </ContentCard>\n                  )\n                  const headerOptions = null\n\n                  // Empty list\n                  if (!subscription_prices.edges.length) { return (\n                    <ContentCard cardTitle={t('organization.subscription_prices.title')}\n                                headerContent={headerOptions}>\n                      <AlertInfo title={t('general.subscription')} message={subscription.name} />\n                      <p>\n                      {(!archived) ? t('organization.subscription_prices.empty_list') : t(\"organization.subscription_prices.empty_archive\")}\n                      </p>\n                    \n                    </ContentCard>\n                  )} else {   \n                  // Life's good! :)\n                  return (\n                    <ContentCard cardTitle={t('organization.subscription_prices.title')}\n                                headerContent={headerOptions}\n                                pageInfo={subscription_prices.pageInfo}\n                                onLoadMore={() => {\n                                  fetchMore({\n                                    variables: {\n                                      after: subscription_prices.pageInfo.endCursor\n                                    },\n                                    updateQuery: (previousResult, { fetchMoreResult }) => {\n                                      const newEdges = fetchMoreResult.organizationSubscriptionsPrices.edges\n                                      const pageInfo = fetchMoreResult.organizationSubscriptionsPrices.pageInfo\n\n                                      return newEdges.length\n                                        ? {\n                                            // Put the new subscriptions at the end of the list and update `pageInfo`\n                                            // so we have the new `endCursor` and `hasNextPage` values\n                                            organizationSubscriptionsPrices: {\n                                              __typename: previousResult.organizationSubscriptionsPrices.__typename,\n                                              edges: [ ...previousResult.organizationSubscriptionsPrices.edges, ...newEdges ],\n                                              pageInfo\n                                            }\n                                          }\n                                        : previousResult\n                                    }\n                                  })\n                                }} >\n                      <div>\n                        <AlertInfo title={t('general.subscription')} message={subscription.name} />\n\n                        <Table>\n                          <Table.Header>\n                            <Table.Row key={v4()}>\n                              <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                              <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n                              <Table.ColHeader></Table.ColHeader>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                              {subscription_prices.edges.map(({ node }) => (\n                                <Table.Row key={v4()}>\n                                  <Table.Col key={v4()}>\n                                    {moment(node.dateStart).format(dateFormat)}\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    {(node.dateEnd) ? moment(node.dateEnd).format(dateFormat) : \"\"}\n                                  </Table.Col>\n                                  <Table.Col key={v4()}>\n                                    {node.priceDisplay} <br />\n                                    <span className=\"text-muted\">{node.financeTaxRate.name}</span>\n                                  </Table.Col>\n                                  <Table.Col className=\"text-right\" key={v4()}>\n                                    {(node.archived) ? \n                                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                                      <Button className='btn-sm' \n                                              onClick={() => history.push(\"/organization/subscriptions/prices/edit/\" + match.params.subscription_id + '/' + node.id)}\n                                              color=\"secondary\">\n                                        {t('general.edit')}\n                                      </Button>\n                                    }\n                                  </Table.Col>\n                                  <Mutation mutation={DELETE_SUBSCRIPTION_PRICE} key={v4()}>\n                                      {(deleteSubscriptionPrice, { data }) => (\n                                        <Table.Col className=\"text-right\" key={v4()}>\n                                          <button className=\"icon btn btn-link btn-sm\" \n                                            title={t('general.delete')} \n                                            href=\"\"\n                                            onClick={() => {confirmDelete(t, match, deleteSubscriptionPrice, node)}}\n                                          >\n                                            <span className=\"text-red\">\n                                              <Icon prefix=\"fe\" name=\"trash-2\" />\n                                            </span>\n                                          </button>\n                                        </Table.Col>\n                                      )}\n                                    </Mutation>\n                                </Table.Row>\n                              ))}\n                          </Table.Body>\n                        </Table>\n                        </div>\n                    </ContentCard>\n                  )}}\n              }\n              </Query>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"organizationsubscriptionprice\">\n                <Button color=\"primary btn-block mb-6\"\n                        onClick={() => history.push(\"/organization/subscriptions/prices/add/\" + match.params.subscription_id)}>\n                  <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.subscription_prices.add')}\n                </Button>\n              </HasPermissionWrapper>\n              <OrganizationMenu activeLink='subscriptions'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionsPrices))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\n\n\nlet accounts_active\nlet b2b_active\nlet suppliers_active\n\n\nconst RelationsMenu = ({ t, activeLink }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'accounts') ? accounts_active = true: accounts_active = false}\n        {(activeLink === 'b2b') ? b2b_active = true: b2b_active = false}\n        {(activeLink === 'suppliers') ? suppliers_active = true: suppliers_active = false}\n        \n\n        <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to=\"#/relations/accounts\"\n          icon=\"users\"\n          active={accounts_active}\n        >\n          {t('relations.accounts.title')}\n        </List.GroupItem>\n        {/* <HasPermissionWrapper \n          permission=\"view\"\n          resource=\"business\">\n          <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/relations/suppliers\"\n            icon=\"package\"\n            active={suppliers_active}\n          >\n            {t('relations.suppliers.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper> */}\n        <HasPermissionWrapper \n          permission=\"view\"\n          resource=\"business\">\n          <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to=\"#/relations/b2b\"\n            icon=\"briefcase\"\n            active={b2b_active}\n          >\n            {t('relations.b2b.title')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n    </List.Group>\n);\n\nexport default withTranslation()(RelationsMenu)","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SUBSCRIPTION_PRICE_SCHEMA = Yup.object().shape({\n    price: Yup.number()\n      .typeError(t('yup.type_error_number'))\n      .required(t('yup.field_required'))\n      .max(99999999999999999999, t('yup.max_decimal_number')),\n    financeTaxRate: Yup.string()\n      .required(t('yup.field_required')),\n    dateStart: Yup.date()\n      .required(t('yup.field_required')),\n    // dateEnd: Yup.date(),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nconst OrganizationSubscriptionPriceForm = (\n  { t, history, inputData, isSubmitting, errors, values, setFieldTouched, setFieldValue, return_url }\n  ) => (\n  <FoForm>\n    <Card.Body>\n      <Form.Group label={t('general.price')}>\n        <Field type=\"text\" \n              name=\"price\" \n              className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n        <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.taxrate')}>\n        <Field component=\"select\" \n                name=\"financeTaxRate\" \n                className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n          {console.log(\"query data in subscription price add:\")}\n          {console.log(inputData)}\n          <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n          {inputData.financeTaxRates.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.date_start')}>\n        <CSDatePicker \n          selected={values.dateStart}\n          onChange={(date) => setFieldValue(\"dateStart\", date)}\n          onBlur={() => setFieldTouched(\"dateStart\", true)}\n        />\n        <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.date_end')}>\n        <CSDatePicker \n          selected={values.dateEnd}\n          onChange={(date) => setFieldValue(\"dateEnd\", date)}\n          onBlur={() => setFieldTouched(\"dateEnd\", true)}\n        />\n        <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n      <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('general.submit')}\n      </Button>\n      <Button color=\"link\" onClick={() => history.push(return_url)}>\n        {t('general.cancel')}\n      </Button>\n    </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionPriceForm))","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_SUBSCRIPTION_PRICES_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { GET_SUBSCRIPTIONS_QUERY } from '../queries'\nimport { SUBSCRIPTION_PRICE_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionPriceForm from './OrganizationSubscriptionPriceForm'\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nconst ADD_SUBSCRIPTION_PRICE = gql`\n  mutation CreateOrganizationSubscriptionPrice($input: CreateOrganizationSubscriptionPriceInput!) {\n    createOrganizationSubscriptionPrice(input: $input) {\n      organizationSubscriptionPrice {\n        id\n        organizationSubscription {\n          id\n          name\n        }\n        price\n        financeTaxRate {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n      }\n    }\n  }\n`\n\nconst return_url = \"/organization/subscriptions/prices/\"\n\nconst OrganizationSubscriptionPriceAdd = ({ t, history, match }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title=\"Organization\" />\n        <Grid.Row>\n          <Grid.Col md={9}>\n          <Card>\n            <Card.Header>\n              <Card.Title>{t('organization.subscription_prices.title_add')}</Card.Title>\n            </Card.Header>\n            <Query query={GET_INPUT_VALUES_QUERY} variables={{ archived: false }} >\n              {({ loading, error, data, refetch }) => {\n                  // Loading\n                  if (loading) return <p>{t('general.loading_with_dots')}</p>\n                  // Error\n                  if (error) {\n                    console.log(error)\n                    return <p>{t('general.error_sad_smiley')}</p>\n                  }\n                  \n                  console.log('query data')\n                  console.log(data)\n                  const inputData = data\n\n                  return (\n                    <Mutation mutation={ADD_SUBSCRIPTION_PRICE} onCompleted={() => history.push(return_url + match.params.subscription_id)}> \n                      {(addSubscription, { data }) => (\n                          <Formik\n                              initialValues={{ price: \"\", dateStart: new Date() }}\n                              validationSchema={SUBSCRIPTION_PRICE_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n\n                                  let dateEnd\n                                  if (values.dateEnd) {\n                                    dateEnd = dateToLocalISO(values.dateEnd)\n                                  } else {\n                                    dateEnd = values.dateEnd\n                                  }\n\n                                  addSubscription({ variables: {\n                                    input: {\n                                      organizationSubscription: match.params.subscription_id,\n                                      price: values.price,\n                                      financeTaxRate: values.financeTaxRate,\n                                      dateStart: dateToLocalISO(values.dateStart),\n                                      dateEnd: dateEnd\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_SUBSCRIPTION_PRICES_QUERY, variables: {\"organizationSubscription\": match.params.subscription_id }},\n                                      {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data);\n                                      toast.success((t('organization.subscription_prices.toast_add_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n                                <OrganizationSubscriptionPriceForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  setFieldTouched={setFieldTouched}\n                                  setFieldValue={setFieldValue}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                />\n                              )}\n                          </Formik>\n                      )}\n                    </Mutation>\n                  )}}\n                </Query>\n          </Card>\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"organizationsubscriptionprice\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(return_url + match.params.subscription_id)}>\n                <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n              </Button>\n            </HasPermissionWrapper>\n            <OrganizationMenu activeLink='subscriptions'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionPriceAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SUBSCRIPTION_PRICES_QUERY, GET_SUBSCRIPTION_PRICE_QUERY } from './queries'\nimport { GET_SUBSCRIPTIONS_QUERY } from '../queries'\n\nimport { SUBSCRIPTION_PRICE_SCHEMA } from './yupSchema'\nimport OrganizationSubscriptionPriceForm from './OrganizationSubscriptionPriceForm'\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport OrganizationMenu from \"../../OrganizationMenu\"\n\n\nconst UPDATE_SUBSCRIPTION_PRICE = gql`\n  mutation UpdateOrganizationSubscriptionPrice($input: UpdateOrganizationSubscriptionPriceInput!) {\n    updateOrganizationSubscriptionPrice(input: $input) {\n      organizationSubscriptionPrice {\n        id\n        organizationSubscription {\n          id\n          name\n        }\n        price\n        financeTaxRate {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n      }\n    }\n  }\n`\n\n\nclass OrganizationSubscriptionPriceEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Organization location room edit props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n    const subscription_id = match.params.subscription_id\n    const return_url = \"/organization/subscriptions/prices/\" + subscription_id\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title=\"Organization\" />\n            <Grid.Row>\n              <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('organization.subscription_prices.title_edit')}</Card.Title>\n                  {console.log(match.params.id)}\n                </Card.Header>\n                <Query query={GET_SUBSCRIPTION_PRICE_QUERY} variables={{ id, archived: false }} >\n                {({ loading, error, data, refetch }) => {\n                    // Loading\n                    if (loading) return <p>{t('general.loading_with_dots')}</p>\n                    // Error\n                    if (error) {\n                      console.log(error)\n                      return <p>{t('general.error_sad_smiley')}</p>\n                    }\n                    \n                    const initialData = data.organizationSubscriptionPrice\n                    console.log('query data')\n                    console.log(data)\n                    const inputData = data\n\n                    return (\n                      \n                      <Mutation mutation={UPDATE_SUBSCRIPTION_PRICE} onCompleted={() => history.push(return_url)}> \n                      {(updateSubscriptionPrice, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                price: initialData.price, \n                                financeTaxRate: initialData.financeTaxRate.id,\n                                dateStart: initialData.dateStart,\n                                dateEnd: initialData.dateEnd,\n                              }}\n                              validationSchema={SUBSCRIPTION_PRICE_SCHEMA}\n                              onSubmit={(values, { setSubmitting }) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n\n                                  let dateEnd\n                                  if (values.dateEnd) {\n                                    if (values.dateEnd instanceof Date) {\n                                      dateEnd = dateToLocalISO(values.dateEnd)\n                                    } else {\n                                      dateEnd = values.dateEnd\n                                    }\n                                  } else {\n                                    dateEnd = values.dateEnd\n                                  }\n\n                                  let dateStart\n                                  if (values.dateStart instanceof Date) {\n                                    dateStart = dateToLocalISO(values.dateStart)\n                                  } else {\n                                    // Input hasn't changed and DatePicket hasn't made a Date object out of it\n                                    dateStart = values.dateStart\n                                  }\n\n                                  updateSubscriptionPrice({ variables: {\n                                    input: {\n                                      id: match.params.id,\n                                      price: values.price,\n                                      financeTaxRate: values.financeTaxRate,\n                                      dateStart: dateStart,\n                                      dateEnd: dateEnd,\n                                    }\n                                  }, refetchQueries: [\n                                    {query: GET_SUBSCRIPTION_PRICES_QUERY, variables: { organizationSubscription: match.params.subscription_id }},\n                                    {query: GET_SUBSCRIPTIONS_QUERY, variables: { \"archived\": false }}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('organization.subscription_prices.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n                                <OrganizationSubscriptionPriceForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  setFieldTouched={setFieldTouched}\n                                  setFieldValue={setFieldValue}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                >\n                                  {console.log(errors)}\n                                </OrganizationSubscriptionPriceForm>\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                      )}}\n                </Query>\n              </Card>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"change\"\n                                      resource=\"organizationlocationroom\">\n                  <Button color=\"primary btn-block mb-6\"\n                          onClick={() => history.push(return_url)}>\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </HasPermissionWrapper>\n                <OrganizationMenu activeLink='locations'/>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(OrganizationSubscriptionPriceEdit))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Container,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport RelationsMenu from \"../RelationsMenu\"\n\n\nclass RelationsHome extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"School home props:\")\n    console.log(props)\n  }\n\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"relations.title\")} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n                <Grid.Row>\n                  <Grid.Col md={4} lg={4}>\n                    <Link to='/relations/accounts'>\n                      <StampCard header={<small>{t('relations.accounts.title')}</small>} footer={t('')} color=\"blue\" icon=\"users\" />\n                    </Link>\n                  </Grid.Col>\n                  {/* <HasPermissionWrapper permission=\"view\"\n                                        resource=\"business\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/relations/suppliers')}>\n                        <StampCard header={<small>{t('relations.suppliers.title')}</small>} footer={t('')} color=\"blue\" icon=\"package\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper> */}\n                  <HasPermissionWrapper permission=\"view\"\n                                        resource=\"business\">\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/relations/b2b'>\n                        <StampCard header={<small>{t('relations.b2b.title')}</small>} footer={t('')} color=\"blue\" icon=\"briefcase\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                </Grid.Row>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <RelationsMenu />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(RelationsHome))","// @flow\n\nimport React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n    Button,\n    Icon\n  } from \"tabler-react\"\n\nimport CSLS from \"../../tools/cs_local_storage\"\n\nclass InputSearch extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Input search props:\")\n    console.log(props)\n    this.input = React.createRef()\n    let inputValue\n    const initialValue = localStorage.getItem(this.props.initialValueKey)\n    if (initialValue) {\n      inputValue = initialValue \n    } else {\n      inputValue = \"\"\n    }\n\n    this.state = {\n      inputValue: inputValue,\n      submitValue: \"\",\n      doneTypingInterval: 500\n    }\n  }\n  \n  componentDidMount() {\n    this.typingTimer = null\n    this.input.current.focus()\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.typingTimer)\n  }\n\n\n  onInputKeyUp() {\n    // Clear timeout\n    if (this.typingTimer) {\n      clearTimeout(this.typingTimer)\n    }\n    \n    this.typingTimer = setTimeout(() => {\n      // console.log(this.input.current.value)  \n      this.setState({submitValue: this.input.current.value})\n      this.props.onChange(this.state.submitValue)\n    }, this.state.doneTypingInterval)\n  }\n\n\n  onInputChange(event) {\n    this.setState({inputValue: event.target.value})\n  }\n\n\n  render() {\n    const t = this.props.t\n    const placeholder = this.props.placeholder\n\n    return(\n        <div className=\"row row gutters-xs\">\n          <div className=\"col\">\n            <div className=\"input-icon\">\n              <span className=\"input-icon-addon\">\n                <Icon name=\"search\" />\n              </span>\n              <input \n                ref={this.input}\n                className=\"form-control\" \n                type=\"text\" \n                placeholder={placeholder} \n                value={this.state.inputValue}\n                onKeyUp={this.onInputKeyUp.bind(this)}\n                onChange={this.onInputChange.bind(this)}\n              />\n            </div>\n          </div>\n          <div className=\"col col-auto\">\n            <Button\n              color=\"secondary\"\n              icon=\"x\"\n              disabled={!(this.state.inputValue)}\n              onClick={() => {\n                this.setState({inputValue: \"\", submitValue: \"\"}, () => {\n                  // setState callback, this makes sure the onChange function is calles with new values\n                  console.log(this.state)\n                  this.props.onChange(this.state.submitValue) \n                })\n              }}\n            >\n            </Button>\n          </div>\n        </div>\n    )\n  }\n}\n\nInputSearch.defaultProps = {\n  onChange: f=>f,\n  onClear: f=>f,\n}\n  \nexport default withTranslation()(InputSearch)","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let isActive = localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE)\n  if (isActive === null) {\n    isActive = true\n  }\n\n  let queryVars = {\n    isActive: (isActive === \"true\") ? true : false,\n    customer: undefined,\n    teacher: undefined,\n    employee: undefined\n  }\n\n  let search = localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_SEARCH)\n  queryVars.searchName = search\n\n  let type_filter = localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_FILTER_TYPE)\n  switch (type_filter) {\n    case \"customer\":\n      queryVars.customer = true\n      break\n    case \"teacher\":\n      queryVars.teacher = true\n      break\n    case \"employee\":\n      queryVars.employee = true\n      break\n  }\n\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Page,\n  Form,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport InputSearch from \"../../general/InputSearch\"\nimport RelationsMenu from \"../RelationsMenu\"\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from \"./tools\"\n\n\nfunction RelationsAccountsBase({t, history, children, refetch}) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"relations.title\")}>\n            <div className=\"page-options d-flex\">\n              <Form.Select\n                className=\"w-auto mr-2\"\n                onChange={(event) => {\n                  console.log(event.target.value)\n                  localStorage.setItem(CSLS.RELATIONS_ACCOUNTS_FILTER_TYPE, event.target.value)\n                  console.log('fire refetch')\n                  console.log(refetch(get_list_query_variables()))\n                }}\n              >\n                <option value=\"\">{t(\"general.all_accounts\")}</option>\n                <option value=\"customer\">{t(\"general.customers\")}</option>\n                <option value=\"teacher\">{t(\"general.teachers\")}</option>\n                <option value=\"employee\">{t(\"general.employees\")}</option>\n              </Form.Select>\n              <InputSearch \n                initialValueKey={CSLS.RELATIONS_ACCOUNTS_SEARCH}\n                placeholder=\"Search...\"\n                onChange={(value) => {\n                  console.log(value)\n                  localStorage.setItem(CSLS.RELATIONS_ACCOUNTS_SEARCH, value)\n                  refetch(get_list_query_variables())\n                }}\n              />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"account\">\n                <Button color=\"primary btn-block mb-6\"\n                        onClick={() => history.push(\"/relations/accounts/add\")}>\n                  <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.accounts.add')}\n                </Button>\n              </HasPermissionWrapper>\n              <RelationsMenu activeLink='accounts'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>        \n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsAccountsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNTS_QUERY = gql`\nquery Accounts(\n  $after: String, \n  $before: String, \n  $isActive: Boolean!, \n  $searchName: String,\n  $customer: Boolean,\n  $teacher: Boolean,\n  $employee: Boolean\n  \n) {\n  accounts(\n    first: 15, \n    before: $before, \n    after: $after, \n    isActive: $isActive, \n    fullName_Icontains: $searchName,\n    customer: $customer,\n    teacher: $teacher,\n    employee: $employee\n  ) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        customer\n        teacher\n        employee\n        firstName\n        lastName\n        fullName\n        email\n        isActive\n        urlImageThumbnailSmall\n        subscriptions(last: 2) {\n          edges {\n            node {\n              organizationSubscription {\n                id\n                name\n              }\n              dateStart\n              dateEnd\n            }\n          }\n        }\n        classpasses(last: 2) {\n          edges {\n            node {\n              id\n              organizationClasspass {\n                id\n                name\n              }\n              dateStart\n              dateEnd\n              classesRemaining\n              classesRemainingDisplay\n              isExpired\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport const GET_ACCOUNT_QUERY = gql`\n  query Account($id: ID!) {\n    account(id:$id) {\n      id\n      customer\n      teacher\n      employee\n      firstName\n      lastName\n      email\n      dateOfBirth\n      gender\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n      isActive\n      keyNumber\n      urlImageThumbnailSmall\n      organizationDiscovery {\n        id\n      }\n      organizationLanguage {\n        id\n      }\n    }\n    organizationDiscoveries(first: 100){\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    organizationLanguages(first: 100) {\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const ADD_ACCOUNT = gql`\n  mutation CreateAccount($input:CreateAccountInput!) {\n    createAccount(input: $input) {\n      account {\n        id\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT = gql`\n  mutation UpdateAccount($input:UpdateAccountInput!) {\n    updateAccount(input: $input) {\n      account {\n        id\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT_ACTIVE = gql`\n  mutation UpdateAccountActive($input: UpdateAccountActiveInput!) {\n    updateAccountActive(input: $input) {\n      account {\n        id\n        isActive\n      }\n    }\n  }\n`\n\nexport const DELETE_ACCOUNT = gql`\n  mutation DeleteAccount($input: DeleteAccountInput!) {\n    deleteAccount(input: $input) {\n      ok\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\n\nimport {\n  Avatar,\n  Badge,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport ContentCard from \"../../general/ContentCard\"\nimport RelationsAccountsBase from \"./RelationsAccountsBase\"\nimport { GET_ACCOUNTS_QUERY, UPDATE_ACCOUNT_ACTIVE, DELETE_ACCOUNT } from \"./queries\"\nimport { get_list_query_variables } from \"./tools\"\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\n// Set some initial value for isActive, if not found\nif (!localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE)) {\n  localStorage.setItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE, true) \n} \n\nconst confirm_delete = ({t, msgConfirm, msgDescription, msgSuccess, deleteFunction, functionVariables}) => {\n  confirmAlert({\n    customUI: ({ onClose }) => {\n      return (\n        <div className='custom-ui'>\n          <h1>{t('general.confirm_delete')}</h1>\n          {msgConfirm}\n          {msgDescription}\n          <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_delete_no')}</button>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              deleteFunction(functionVariables)\n                .then(({ data }) => {\n                  console.log('got data', data);\n                  toast.success(\n                    msgSuccess, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error);\n                })\n              onClose()\n            }}\n          >\n            <Icon name=\"trash-2\" /> {t('general.confirm_delete_yes')}\n          </button>\n        </div>\n      )\n    }\n  })\n}\n\n\nfunction RelationsAccounts({t, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const {loading, error, data, fetchMore, refetch} = useQuery(GET_ACCOUNTS_QUERY, {\n    variables: get_list_query_variables(),\n    fetchPolicy: \"network-only\"\n  })\n  const [updateAccountActive] = useMutation(UPDATE_ACCOUNT_ACTIVE)\n  const [deleteAccount] = useMutation(DELETE_ACCOUNT)\n\n  if (loading || (data && !data.accounts)) return (\n    <RelationsAccountsBase>\n      <ContentCard cardTitle={t('relations.accounts.title')}>\n        <Dimmer active={true}\n                loader={true}>\n        </Dimmer>\n      </ContentCard>\n    </RelationsAccountsBase>\n  )\n  \n  if (error) return (\n    <RelationsAccountsBase>\n      <Container>\n        <ContentCard cardTitle={t('relations.accounts.title')}>\n          <p>{t('relations.accounts.error_loading')}</p>\n        </ContentCard>\n      </Container>\n    </RelationsAccountsBase>\n  )\n\n  const headerOptions = <Card.Options>\n    <Button color={(localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE) === \"true\") ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {\n              localStorage.setItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE, true)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.active')}\n    </Button>\n    <Button color={(localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE) === \"false\") ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {\n              localStorage.setItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE, false)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.deleted')}\n    </Button>\n  </Card.Options>\n\n  let accounts = data.accounts\n\n  // Empty list\n  if (!accounts.edges.length) { return (\n    <RelationsAccountsBase refetch={refetch}>\n      <ContentCard cardTitle={t('relations.accounts.title')}\n                    headerContent={headerOptions}>\n        <p>\n          {(localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE) === \"true\") ? t('relations.accounts.empty_list') : t(\"relations.accounts.empty_archive\")}\n        </p>\n      </ContentCard>\n    </RelationsAccountsBase>\n  )}\n\n  // Data\n  return (\n    <RelationsAccountsBase refetch={refetch}>\n      <ContentCard \n        cardTitle={t('relations.accounts.title')}\n        headerContent={headerOptions}\n        pageInfo={data.accounts.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: data.accounts.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accounts.edges\n              const pageInfo = fetchMoreResult.accounts.pageInfo \n\n              return newEdges.length\n                ? {\n                    // Put the new accounts at the end of the list and update `pageInfo`\n                  accounts: {\n                    __typename: previousResult.accounts.__typename,\n                    edges: [ ...previousResult.accounts.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader>{t('general.account')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.products')}</Table.ColHeader>\n              {/* <Table.ColHeader>{t('general.info')}</Table.ColHeader> */}\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {accounts.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col>\n                    <Link to={`/relations/accounts/${node.id}/profile`}>\n                      {(node.urlImageThumbnailSmall) ? \n                        <Avatar size={\"lg\"} imageURL={node.urlImageThumbnailSmall} /> :\n                        <Avatar size={\"lg\"} icon=\"user\" />\n                      }\n                    </Link>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <span className=\"bold\">{node.fullName}</span>\n                    <div className=\"text-muted\">\n                      <a href={`mailto:${node.email}`}>{node.email}</a>\n                    </div>\n                    {(node.customer) ? <span>\n                        <Badge color=\"primary\" className=\"mr-1\">{t(\"general.customer\")}</Badge>\n                      </span> : null}\n                    {(node.teacher) ? <span>\n                        <Badge color=\"info\" className=\"mr-1\">{t(\"general.teacher\")}</Badge>\n                      </span> : null}\n                    {(node.employee) ? <span>\n                        <Badge color=\"secondary\">{t(\"general.employee\")}</Badge>\n                      </span> : null}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.subscriptions) ? \n                      // This is a workaround that reserves the array. Not yet figured out how to get the sorting right on subqueries in the backend\n                      node.subscriptions.edges.slice(0).reverse().map(({ node: subscription }) => (\n                        <div>\n                          <small>\n                          <Icon name=\"edit\" /> {' '}\n                          { subscription.organizationSubscription.name } <br />\n                          <div className=\"text-muted \">\n                            <small>\n                              { moment(subscription.dateStart).format(dateFormat) } \n                              {(subscription.dateEnd) ? \n                                <span> - {moment(subscription.dateEnd).format(dateFormat)}</span>  \n                                : \"\"\n                              }\n                            </small>\n                          </div>\n                          </small>\n                        </div>\n                      )) \n                      : \"\"\n                    }\n                    {(node.classpasses) ? \n                      // This is a workaround that reserves the array. Not yet figured out how to get the sorting right on subqueries in the backend\n                      node.classpasses.edges.slice(0).reverse().map(({ node: classpass }) => (\n                        <div>\n                          <small>\n                          <Icon name=\"credit-card\" /> {' '}\n                          { classpass.organizationClasspass.name } <br />\n                          <div className=\"text-muted \">\n                            <small>\n                              { moment(classpass.dateStart).format(dateFormat) } {\" - \"}\n                              { moment(classpass.dateEnd).format(dateFormat)} { \" | \" }  \n                              { t(\"general.classes_remaining\") }: { classpass.classesRemainingDisplay }\n                            </small>\n                          </div>\n                          </small>\n                        </div>\n                      )) \n                      : \"\"\n                    }\n                  </Table.Col>\n                  {/* <Table.Col key={v4()}>\n                    {(node.customer) ? <span>\n                        <Badge color=\"primary\" className=\"mb-1\">{t(\"general.customer\")}</Badge> <br />\n                      </span> : null}\n                    {(node.teacher) ? <span>\n                        <Badge color=\"info\" className=\"mb-1\">{t(\"general.teacher\")}</Badge> <br />\n                      </span> : null}\n                    {(node.employee) ? <span>\n                        <Badge color=\"secondary\" className=\"mb-1\">{t(\"general.employee\")}</Badge> <br />\n                      </span> : null}\n                  </Table.Col> */}\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(!node.isActive) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Link to={`/relations/accounts/${node.id}/profile`}>\n                        <Button className='btn-sm' \n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                      </Link>\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.deactivate')} \n                      href=\"\"\n                      onClick={() => {\n                        console.log(\"clicked isActive\")\n                        let id = node.id\n                        let isActive \n                        if (localStorage.getItem(CSLS.RELATIONS_ACCOUNTS_IS_ACTIVE) == \"true\") {\n                          isActive = true\n                        } else {\n                          isActive = false\n                        }\n\n                        updateAccountActive({ variables: {\n                          input: {\n                            id,\n                            isActive: !isActive // invert, as we need the opposite from the list currently displayed\n                          }\n                    }, refetchQueries: [\n                        {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()}\n                    ]}).then(({ data }) => {\n                      console.log('got data', data);\n                      toast.success(\n                        (isActive) ? t('relations.accounts.deactivated'): t('relations.accounts.restored'), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                    }).catch((error) => {\n                      toast.error((t('general.toast_server_error')) +  error, {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      console.log('there was an error sending the query', error);\n                    })\n                    }}>\n                      {\n                        (node.isActive) ?\n                          <Icon prefix=\"fe\" name=\"trash-2\" /> :\n                          t(\"general.restore\")\n                      }\n                    </button>\n                  </Table.Col>\n                  {\n                    (node.isActive) ? '' :\n                      <Table.Col className=\"text-right\" key={v4()}>\n                        <button className=\"icon btn btn-link btn-sm\" \n                          title={t('general.delete')} \n                          href=\"\"\n                          onClick={() => {\n                            confirm_delete({\n                              t: t,\n                              msgConfirm: t(\"relations.accounts.delete_confirm_msg\"),\n                              msgDescription: <p>{node.first_name} {node.last_name}</p>,\n                              msgSuccess: t('relations.accounts.deleted'),\n                              deleteFunction: deleteAccount,\n                              functionVariables: { variables: {\n                                input: {\n                                  id: node.id\n                                }\n                              }, refetchQueries: [\n                                {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()}\n                              ]}\n                            })\n                        }}>\n                          <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                        </button>\n                      </Table.Col>\n                  }\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </RelationsAccountsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsAccounts))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SCHEMA = Yup.object().shape({\n    firstName: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n    lastName: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n    email: Yup.string()\n      .email(t('yup.email'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nconst RelationsAccountForm = ({ t, history, isSubmitting, errors, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group label={t('general.first_name')}>\n                <Field type=\"text\" \n                        name=\"firstName\" \n                        className={(errors.firstName) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\" />\n                <ErrorMessage name=\"firstName\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n            <Grid.Col>\n              <Form.Group label={t('general.last_name')}>\n                <Field type=\"text\" \n                        name=\"lastName\" \n                        className={(errors.lastName) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\" />\n                <ErrorMessage name=\"lastName\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          </Grid.Row>\n          <Form.Group label={t('general.email')}>\n            <Field type=\"text\" \n                    name=\"email\" \n                    className={(errors.email) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"email\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsAccountForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNTS_QUERY, ADD_ACCOUNT } from './queries'\nimport { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { get_list_query_variables } from \"./tools\"\nimport RelationsAccountForm from \"./RelationsAccountForm\"\nimport RelationsMenu from '../RelationsMenu'\n\nconst returnUrl = \"/relations/accounts\"\n\nfunction RelationsAccountAdd({t, history}) {\n  const [addAccount] = useMutation(ADD_ACCOUNT)\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('relations.title')} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n            <Card>\n              <Card.Header>\n                <Card.Title>{t('relations.accounts.title_add')}</Card.Title>\n              </Card.Header>\n                <Formik\n                    initialValues={{ name: '', code: '' }}\n                    validationSchema={ACCOUNT_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n                        addAccount({ variables: {\n                          input: {\n                            firstName: values.firstName,\n                            lastName: values.lastName,\n                            email: values.email\n                          }\n                        }, refetchQueries: [\n                            {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()}\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            const accountId = data.createAccount.account.id\n                            history.push(`/relations/accounts/${accountId}/profile`)\n                            toast.success((t('relations.accounts.toast_add_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setSubmitting(false)\n                          })\n                    }}\n                    >\n                    {({ isSubmitting, errors }) => (\n                        <RelationsAccountForm\n                          isSubmitting={isSubmitting}\n                          errors={errors}\n                          returnUrl={returnUrl}\n                        />\n                    )}\n                </Formik>\n            </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"account\">\n                <Button color=\"primary btn-block mb-6\"\n                        onClick={() => history.push(returnUrl)}>\n                  <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                </Button>\n              </HasPermissionWrapper>\n              <RelationsMenu activeLink='accounts'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsAccountAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Avatar,\n  Card,\n  Icon,\n  List,\n  Media,\n  SocialNetworksList,\n  Tooltip,\n} from \"tabler-react\"\n\nfunction ProfileCardSmall({ t, value, user, avatarSize='md' }) {\n  if (!user) {\n    return \"\"\n  }\n\n  const accountId = user.id\n\n  return (\n    <Card>\n      <Card.Body>\n        <Media>\n          <Link to={`/relations/accounts/${accountId}/profile/image`}>\n            {(user.urlImageThumbnailSmall) ? \n              <Avatar size={avatarSize + \" mr-5\"} imageURL={user.urlImageThumbnailSmall} /> :\n              <Avatar size={avatarSize + \" mr-5\"} icon=\"user\" />\n            }\n          </Link>\n          <Media.Body>\n            <h4 className=\"mb-2\">{user.firstName + \" \" + user.lastName}</h4>\n            <div className=\"text-muted mb-0\">\n              <SocialNetworksList className=\"mb-0 mt-2\">\n                {\n                  (user.phone) ? \n                    <List.Item inline>\n                      <Tooltip content={user.phone} placement=\"top\">\n                        <span>\n                          <Icon prefix=\"fe\" name=\"phone\" />\n                        </span>\n                      </Tooltip>\n                    </List.Item>\n                  // No phone number found\n                  : \"\"\n                }\n                {\n                  (user.mobile) ?\n                    <List.Item inline>\n                      <Tooltip content={user.mobile} placement=\"top\">\n                        <span>\n                          <Icon prefix=\"fe\" name=\"smartphone\" />\n                        </span>\n                      </Tooltip>\n                    </List.Item> \n                    // No mobile number found\n                    : \"\"\n                }\n\n                <List.Item inline>\n                  <Tooltip content={user.email} placement=\"top\">\n                    <a href={\"mailto:\" + user.email}>\n                      <Icon prefix=\"fe\" name=\"mail\" />\n                    </a>\n                  </Tooltip>\n                </List.Item>\n\n              </SocialNetworksList>\n              {/* items={[\n                <a href={\"mailto:\" + user.email}\n                  title={user.email}>\n                  <Icon prefix=\"fe\" name=\"mail\" />\n                </a>,\n                <span title=\"Phone number here\">\n                  <Icon prefix=\"fe\" name=\"phone\" />\n                </span>,\n                <span title=\"Phone number here\">\n                  <Icon prefix=\"fe\" name=\"mobile\" />\n                </span>,\n                \n              ]}\n            /> */}\n              {/* <Text.Small>\n                <Icon name=\"mail\" />  <a href={\"mailto:\" + user.email}>{user.email}</a> <br/>\n                <Icon name=\"phone\" /> user phone nr here... <br />\n                <Icon name=\"smartphone\" /> user mobile nr here...\n              </Text.Small> */}\n            </div>\n            {/* <SocialNetworksList\n              items={[\n                <a href=\"http://www.twitter.com\">\n                  <Icon prefix=\"fa\" name=\"twitter\" />\n                </a>,\n                <a href=\"http://www.facebook.com\">\n                  <Icon prefix=\"fa\" name=\"facebook\" />\n                </a>,\n              ]}\n            /> */}\n          </Media.Body>\n        </Media>\n      </Card.Body>\n    </Card>  \n  )\n}\n\nexport default withTranslation()(ProfileCardSmall)","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\nimport { GET_ACCOUNT_QUERY } from './queries'\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n\nlet profile_active\nlet memberships_active\nlet subscriptions_active\nlet classpasses_active\nlet classes_active\nlet documents_active\nlet tickets_active\nlet teacher_profile_active\nlet orders_active\nlet invoices_active\nlet bank_account_active\nlet notes_active\nlet finance_payment_batch_category_item_active\nlet accepted_documents_active\n\nfunction ProfileMenu({t, accountId, activeLink}) {\n    const {loading, error, data} = useQuery(GET_ACCOUNT_QUERY, {\n        variables: {id: accountId}\n    })\n\n    if (loading) return <p>{t('general.loading_with_dots')}</p>\n    // Error\n    if (error) {\n      console.log(error)\n      return <p>{t('general.error_sad_smiley')}</p>\n    }\n    const account = data.account\n    console.log('account in profile menu')\n    console.log(account)\n\n    return (\n      <List.Group transparent={true}>\n        {(activeLink === 'profile') ? profile_active = true: profile_active = false}\n        {(activeLink === 'memberships') ? memberships_active = true: memberships_active = false}\n        {(activeLink === 'subscriptions') ? subscriptions_active = true: subscriptions_active = false}\n        {(activeLink === 'classpasses') ? classpasses_active = true: classpasses_active = false}\n        {(activeLink === 'classes') ? classes_active = true: classes_active = false}\n        {(activeLink === 'documents') ? documents_active = true: documents_active = false}\n        {(activeLink === 'tickets') ? tickets_active = true: tickets_active = false}\n        {(activeLink === 'teacher_profile') ? teacher_profile_active = true: teacher_profile_active = false}\n        {(activeLink === 'orders') ? orders_active = true: orders_active = false}\n        {(activeLink === 'invoices') ? invoices_active = true: invoices_active = false}\n        {(activeLink === 'bank_account') ? bank_account_active = true: bank_account_active = false}\n        {(activeLink === 'notes') ? notes_active = true: notes_active = false}\n        {(activeLink === 'finance_payment_batch_category_item') ? \n            finance_payment_batch_category_item_active = true : \n            finance_payment_batch_category_item_active = false }\n        {(activeLink === 'accepted_documents') ? accepted_documents_active = true: accepted_documents_active = false}\n        \n\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/relations/accounts/\" + accountId + \"/profile\"}\n            icon=\"user\"\n            active={profile_active}\n        >\n            {t('relations.accounts.profile')}\n        </List.GroupItem>\n        {/* <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountmembership\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/memberships\"}\n                icon=\"clipboard\"\n                active={memberships_active}\n                >\n            {t('relations.account.memberships.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper> */}\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountsubscription\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/subscriptions\"}\n                icon=\"edit\"\n                active={subscriptions_active}\n                >\n            {t('relations.account.subscriptions.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountclasspass\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/classpasses\"}\n                icon=\"credit-card\"\n                active={classpasses_active}\n                >\n            {t('relations.account.classpasses.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"scheduleitemattendance\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/classes\"}\n                icon=\"book\"\n                active={classes_active}\n                >\n            {t('relations.account.classes.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountscheduleeventticket\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/event_tickets\"}\n                icon=\"clipboard\"\n                active={tickets_active}\n                >\n            {t('relations.account.event_tickets.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"financeorder\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/orders\"}\n                icon=\"file-plus\"\n                active={orders_active}\n                >\n            {t('relations.account.orders.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"financeinvoice\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/invoices\"}\n                icon=\"file-text\"\n                active={invoices_active}\n                >\n            {t('relations.account.invoices.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountbankaccount\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/bank_accounts\"}\n                icon=\"briefcase\"\n                active={bank_account_active}\n                >\n            {t('relations.account.bank_accounts.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountfinancepaymentbatchcategoryitem\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/finance_payment_batch_category_items\"}\n                icon=\"list\"\n                active={finance_payment_batch_category_item_active}\n                >\n            {t('relations.account.finance_payment_batch_category_items.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        { (account.teacher) ?\n            <HasPermissionWrapper \n                permission=\"view\"\n                resource=\"accountteacherprofile\">\n                <List.GroupItem\n                    key={v4()}\n                    className=\"d-flex align-items-center\"\n                    to={\"#/relations/accounts/\" + accountId + \"/teacher_profile\"}\n                    icon=\"paperclip\"\n                    active={teacher_profile_active}\n                    >\n                {t('relations.account.teacher_profile.title')}\n                </List.GroupItem>\n            </HasPermissionWrapper>\n        : \"\" }\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountaccepteddocument\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/accepted_documents\"}\n                icon=\"check-square\"\n                active={accepted_documents_active}\n                >\n            {t('relations.account.accepted_documents.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountdocument\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/documents\"}\n                icon=\"file\"\n                active={documents_active}\n                >\n            {t('relations.account.documents.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            permission=\"view\"\n            resource=\"accountnote\">\n            <List.GroupItem\n                key={v4()}\n                className=\"d-flex align-items-center\"\n                to={\"#/relations/accounts/\" + accountId + \"/notes\"}\n                icon=\"message-square\"\n                active={notes_active}\n                >\n            {t('relations.account.notes.title')}\n            </List.GroupItem>\n        </HasPermissionWrapper>\n    </List.Group>\n  )\n}\n\nexport default withTranslation()(ProfileMenu)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nconst RelationsAccountsBack = ({ t }) => (\n  <div className=\"page-options d-flex\">\n    <Link to=\"/relations/accounts\" \n          className='btn btn-outline-secondary btn-sm'>\n        <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('relations.accounts.title')}\n    </Link>\n  </div>\n)\n\nexport default withTranslation()(RelationsAccountsBack)","import { t } from 'i18next'\n\nconst ISO_COUNTRY_CODES = [{\"Name\":t(\"countries.Afghanistan\"),\"Code\":\"AF\"},{\"Name\":t(\"countries.Åland_Islands\"),\"Code\":\"AX\"},{\"Name\":t(\"countries.Albania\"),\"Code\":\"AL\"},{\"Name\":t(\"countries.Algeria\"),\"Code\":\"DZ\"},{\"Name\":t(\"countries.American_Samoa\"),\"Code\":\"AS\"},{\"Name\":t(\"countries.Andorra\"),\"Code\":\"AD\"},{\"Name\":t(\"countries.Angola\"),\"Code\":\"AO\"},{\"Name\":t(\"countries.Anguilla\"),\"Code\":\"AI\"},{\"Name\":t(\"countries.Antarctica\"),\"Code\":\"AQ\"},{\"Name\":t(\"countries.Antigua_and_Barbuda\"),\"Code\":\"AG\"},{\"Name\":t(\"countries.Argentina\"),\"Code\":\"AR\"},{\"Name\":t(\"countries.Armenia\"),\"Code\":\"AM\"},{\"Name\":t(\"countries.Aruba\"),\"Code\":\"AW\"},{\"Name\":t(\"countries.Australia\"),\"Code\":\"AU\"},{\"Name\":t(\"countries.Austria\"),\"Code\":\"AT\"},{\"Name\":t(\"countries.Azerbaijan\"),\"Code\":\"AZ\"},{\"Name\":t(\"countries.Bahamas\"),\"Code\":\"BS\"},{\"Name\":t(\"countries.Bahrain\"),\"Code\":\"BH\"},{\"Name\":t(\"countries.Bangladesh\"),\"Code\":\"BD\"},{\"Name\":t(\"countries.Barbados\"),\"Code\":\"BB\"},{\"Name\":t(\"countries.Belarus\"),\"Code\":\"BY\"},{\"Name\":t(\"countries.Belgium\"),\"Code\":\"BE\"},{\"Name\":t(\"countries.Belize\"),\"Code\":\"BZ\"},{\"Name\":t(\"countries.Benin\"),\"Code\":\"BJ\"},{\"Name\":t(\"countries.Bermuda\"),\"Code\":\"BM\"},{\"Name\":t(\"countries.Bhutan\"),\"Code\":\"BT\"},{\"Name\":t(\"countries.Bolivia,_Plurinational_State_of\"),\"Code\":\"BO\"},{\"Name\":t(\"countries.Bonaire,_Sint_Eustatius_and_Saba\"),\"Code\":\"BQ\"},{\"Name\":t(\"countries.Bosnia_and_Herzegovina\"),\"Code\":\"BA\"},{\"Name\":t(\"countries.Botswana\"),\"Code\":\"BW\"},{\"Name\":t(\"countries.Bouvet_Island\"),\"Code\":\"BV\"},{\"Name\":t(\"countries.Brazil\"),\"Code\":\"BR\"},{\"Name\":t(\"countries.British_Indian_Ocean_Territory\"),\"Code\":\"IO\"},{\"Name\":t(\"countries.Brunei_Darussalam\"),\"Code\":\"BN\"},{\"Name\":t(\"countries.Bulgaria\"),\"Code\":\"BG\"},{\"Name\":t(\"countries.Burkina_Faso\"),\"Code\":\"BF\"},{\"Name\":t(\"countries.Burundi\"),\"Code\":\"BI\"},{\"Name\":t(\"countries.Cambodia\"),\"Code\":\"KH\"},{\"Name\":t(\"countries.Cameroon\"),\"Code\":\"CM\"},{\"Name\":t(\"countries.Canada\"),\"Code\":\"CA\"},{\"Name\":t(\"countries.Cape_Verde\"),\"Code\":\"CV\"},{\"Name\":t(\"countries.Cayman_Islands\"),\"Code\":\"KY\"},{\"Name\":t(\"countries.Central_African_Republic\"),\"Code\":\"CF\"},{\"Name\":t(\"countries.Chad\"),\"Code\":\"TD\"},{\"Name\":t(\"countries.Chile\"),\"Code\":\"CL\"},{\"Name\":t(\"countries.China\"),\"Code\":\"CN\"},{\"Name\":t(\"countries.Christmas_Island\"),\"Code\":\"CX\"},{\"Name\":t(\"countries.Cocos_(Keeling)_Islands\"),\"Code\":\"CC\"},{\"Name\":t(\"countries.Colombia\"),\"Code\":\"CO\"},{\"Name\":t(\"countries.Comoros\"),\"Code\":\"KM\"},{\"Name\":t(\"countries.Congo\"),\"Code\":\"CG\"},{\"Name\":t(\"countries.Congo,_the_Democratic_Republic_of_the\"),\"Code\":\"CD\"},{\"Name\":t(\"countries.Cook_Islands\"),\"Code\":\"CK\"},{\"Name\":t(\"countries.Costa_Rica\"),\"Code\":\"CR\"},{\"Name\":t(\"countries.Côte_d'Ivoire\"),\"Code\":\"CI\"},{\"Name\":t(\"countries.Croatia\"),\"Code\":\"HR\"},{\"Name\":t(\"countries.Cuba\"),\"Code\":\"CU\"},{\"Name\":t(\"countries.Curaçao\"),\"Code\":\"CW\"},{\"Name\":t(\"countries.Cyprus\"),\"Code\":\"CY\"},{\"Name\":t(\"countries.Czech_Republic\"),\"Code\":\"CZ\"},{\"Name\":t(\"countries.Denmark\"),\"Code\":\"DK\"},{\"Name\":t(\"countries.Djibouti\"),\"Code\":\"DJ\"},{\"Name\":t(\"countries.Dominica\"),\"Code\":\"DM\"},{\"Name\":t(\"countries.Dominican_Republic\"),\"Code\":\"DO\"},{\"Name\":t(\"countries.Ecuador\"),\"Code\":\"EC\"},{\"Name\":t(\"countries.Egypt\"),\"Code\":\"EG\"},{\"Name\":t(\"countries.El_Salvador\"),\"Code\":\"SV\"},{\"Name\":t(\"countries.Equatorial_Guinea\"),\"Code\":\"GQ\"},{\"Name\":t(\"countries.Eritrea\"),\"Code\":\"ER\"},{\"Name\":t(\"countries.Estonia\"),\"Code\":\"EE\"},{\"Name\":t(\"countries.Ethiopia\"),\"Code\":\"ET\"},{\"Name\":t(\"countries.Falkland_Islands_(Malvinas)\"),\"Code\":\"FK\"},{\"Name\":t(\"countries.Faroe_Islands\"),\"Code\":\"FO\"},{\"Name\":t(\"countries.Fiji\"),\"Code\":\"FJ\"},{\"Name\":t(\"countries.Finland\"),\"Code\":\"FI\"},{\"Name\":t(\"countries.France\"),\"Code\":\"FR\"},{\"Name\":t(\"countries.French_Guiana\"),\"Code\":\"GF\"},{\"Name\":t(\"countries.French_Polynesia\"),\"Code\":\"PF\"},{\"Name\":t(\"countries.French_Southern_Territories\"),\"Code\":\"TF\"},{\"Name\":t(\"countries.Gabon\"),\"Code\":\"GA\"},{\"Name\":t(\"countries.Gambia\"),\"Code\":\"GM\"},{\"Name\":t(\"countries.Georgia\"),\"Code\":\"GE\"},{\"Name\":t(\"countries.Germany\"),\"Code\":\"DE\"},{\"Name\":t(\"countries.Ghana\"),\"Code\":\"GH\"},{\"Name\":t(\"countries.Gibraltar\"),\"Code\":\"GI\"},{\"Name\":t(\"countries.Greece\"),\"Code\":\"GR\"},{\"Name\":t(\"countries.Greenland\"),\"Code\":\"GL\"},{\"Name\":t(\"countries.Grenada\"),\"Code\":\"GD\"},{\"Name\":t(\"countries.Guadeloupe\"),\"Code\":\"GP\"},{\"Name\":t(\"countries.Guam\"),\"Code\":\"GU\"},{\"Name\":t(\"countries.Guatemala\"),\"Code\":\"GT\"},{\"Name\":t(\"countries.Guernsey\"),\"Code\":\"GG\"},{\"Name\":t(\"countries.Guinea\"),\"Code\":\"GN\"},{\"Name\":t(\"countries.Guinea-Bissau\"),\"Code\":\"GW\"},{\"Name\":t(\"countries.Guyana\"),\"Code\":\"GY\"},{\"Name\":t(\"countries.Haiti\"),\"Code\":\"HT\"},{\"Name\":t(\"countries.Heard_Island_and_McDonald_Islands\"),\"Code\":\"HM\"},{\"Name\":t(\"countries.Holy_See_(Vatican_City_State)\"),\"Code\":\"VA\"},{\"Name\":t(\"countries.Honduras\"),\"Code\":\"HN\"},{\"Name\":t(\"countries.Hong_Kong\"),\"Code\":\"HK\"},{\"Name\":t(\"countries.Hungary\"),\"Code\":\"HU\"},{\"Name\":t(\"countries.Iceland\"),\"Code\":\"IS\"},{\"Name\":t(\"countries.India\"),\"Code\":\"IN\"},{\"Name\":t(\"countries.Indonesia\"),\"Code\":\"ID\"},{\"Name\":t(\"countries.Iran,_Islamic_Republic_of\"),\"Code\":\"IR\"},{\"Name\":t(\"countries.Iraq\"),\"Code\":\"IQ\"},{\"Name\":t(\"countries.Ireland\"),\"Code\":\"IE\"},{\"Name\":t(\"countries.Isle_of_Man\"),\"Code\":\"IM\"},{\"Name\":t(\"countries.Israel\"),\"Code\":\"IL\"},{\"Name\":t(\"countries.Italy\"),\"Code\":\"IT\"},{\"Name\":t(\"countries.Jamaica\"),\"Code\":\"JM\"},{\"Name\":t(\"countries.Japan\"),\"Code\":\"JP\"},{\"Name\":t(\"countries.Jersey\"),\"Code\":\"JE\"},{\"Name\":t(\"countries.Jordan\"),\"Code\":\"JO\"},{\"Name\":t(\"countries.Kazakhstan\"),\"Code\":\"KZ\"},{\"Name\":t(\"countries.Kenya\"),\"Code\":\"KE\"},{\"Name\":t(\"countries.Kiribati\"),\"Code\":\"KI\"},{\"Name\":t(\"countries.Korea,_Democratic_People's_Republic_of\"),\"Code\":\"KP\"},{\"Name\":t(\"countries.Korea,_Republic_of\"),\"Code\":\"KR\"},{\"Name\":t(\"countries.Kuwait\"),\"Code\":\"KW\"},{\"Name\":t(\"countries.Kyrgyzstan\"),\"Code\":\"KG\"},{\"Name\":t(\"countries.Lao_People's_Democratic_Republic\"),\"Code\":\"LA\"},{\"Name\":t(\"countries.Latvia\"),\"Code\":\"LV\"},{\"Name\":t(\"countries.Lebanon\"),\"Code\":\"LB\"},{\"Name\":t(\"countries.Lesotho\"),\"Code\":\"LS\"},{\"Name\":t(\"countries.Liberia\"),\"Code\":\"LR\"},{\"Name\":t(\"countries.Libya\"),\"Code\":\"LY\"},{\"Name\":t(\"countries.Liechtenstein\"),\"Code\":\"LI\"},{\"Name\":t(\"countries.Lithuania\"),\"Code\":\"LT\"},{\"Name\":t(\"countries.Luxembourg\"),\"Code\":\"LU\"},{\"Name\":t(\"countries.Macao\"),\"Code\":\"MO\"},{\"Name\":t(\"countries.Macedonia,_the_Former_Yugoslav_Republic_of\"),\"Code\":\"MK\"},{\"Name\":t(\"countries.Madagascar\"),\"Code\":\"MG\"},{\"Name\":t(\"countries.Malawi\"),\"Code\":\"MW\"},{\"Name\":t(\"countries.Malaysia\"),\"Code\":\"MY\"},{\"Name\":t(\"countries.Maldives\"),\"Code\":\"MV\"},{\"Name\":t(\"countries.Mali\"),\"Code\":\"ML\"},{\"Name\":t(\"countries.Malta\"),\"Code\":\"MT\"},{\"Name\":t(\"countries.Marshall_Islands\"),\"Code\":\"MH\"},{\"Name\":t(\"countries.Martinique\"),\"Code\":\"MQ\"},{\"Name\":t(\"countries.Mauritania\"),\"Code\":\"MR\"},{\"Name\":t(\"countries.Mauritius\"),\"Code\":\"MU\"},{\"Name\":t(\"countries.Mayotte\"),\"Code\":\"YT\"},{\"Name\":t(\"countries.Mexico\"),\"Code\":\"MX\"},{\"Name\":t(\"countries.Micronesia,_Federated_States_of\"),\"Code\":\"FM\"},{\"Name\":t(\"countries.Moldova,_Republic_of\"),\"Code\":\"MD\"},{\"Name\":t(\"countries.Monaco\"),\"Code\":\"MC\"},{\"Name\":t(\"countries.Mongolia\"),\"Code\":\"MN\"},{\"Name\":t(\"countries.Montenegro\"),\"Code\":\"ME\"},{\"Name\":t(\"countries.Montserrat\"),\"Code\":\"MS\"},{\"Name\":t(\"countries.Morocco\"),\"Code\":\"MA\"},{\"Name\":t(\"countries.Mozambique\"),\"Code\":\"MZ\"},{\"Name\":t(\"countries.Myanmar\"),\"Code\":\"MM\"},{\"Name\":t(\"countries.Namibia\"),\"Code\":\"NA\"},{\"Name\":t(\"countries.Nauru\"),\"Code\":\"NR\"},{\"Name\":t(\"countries.Nepal\"),\"Code\":\"NP\"},{\"Name\":t(\"countries.Netherlands\"),\"Code\":\"NL\"},{\"Name\":t(\"countries.New_Caledonia\"),\"Code\":\"NC\"},{\"Name\":t(\"countries.New_Zealand\"),\"Code\":\"NZ\"},{\"Name\":t(\"countries.Nicaragua\"),\"Code\":\"NI\"},{\"Name\":t(\"countries.Niger\"),\"Code\":\"NE\"},{\"Name\":t(\"countries.Nigeria\"),\"Code\":\"NG\"},{\"Name\":t(\"countries.Niue\"),\"Code\":\"NU\"},{\"Name\":t(\"countries.Norfolk_Island\"),\"Code\":\"NF\"},{\"Name\":t(\"countries.Northern_Mariana_Islands\"),\"Code\":\"MP\"},{\"Name\":t(\"countries.Norway\"),\"Code\":\"NO\"},{\"Name\":t(\"countries.Oman\"),\"Code\":\"OM\"},{\"Name\":t(\"countries.Pakistan\"),\"Code\":\"PK\"},{\"Name\":t(\"countries.Palau\"),\"Code\":\"PW\"},{\"Name\":t(\"countries.Palestine,_State_of\"),\"Code\":\"PS\"},{\"Name\":t(\"countries.Panama\"),\"Code\":\"PA\"},{\"Name\":t(\"countries.Papua_New_Guinea\"),\"Code\":\"PG\"},{\"Name\":t(\"countries.Paraguay\"),\"Code\":\"PY\"},{\"Name\":t(\"countries.Peru\"),\"Code\":\"PE\"},{\"Name\":t(\"countries.Philippines\"),\"Code\":\"PH\"},{\"Name\":t(\"countries.Pitcairn\"),\"Code\":\"PN\"},{\"Name\":t(\"countries.Poland\"),\"Code\":\"PL\"},{\"Name\":t(\"countries.Portugal\"),\"Code\":\"PT\"},{\"Name\":t(\"countries.Puerto_Rico\"),\"Code\":\"PR\"},{\"Name\":t(\"countries.Qatar\"),\"Code\":\"QA\"},{\"Name\":t(\"countries.Réunion\"),\"Code\":\"RE\"},{\"Name\":t(\"countries.Romania\"),\"Code\":\"RO\"},{\"Name\":t(\"countries.Russian_Federation\"),\"Code\":\"RU\"},{\"Name\":t(\"countries.Rwanda\"),\"Code\":\"RW\"},{\"Name\":t(\"countries.Saint_Barthélemy\"),\"Code\":\"BL\"},{\"Name\":t(\"countries.Saint_Helena,_Ascension_and_Tristan_da_Cunha\"),\"Code\":\"SH\"},{\"Name\":t(\"countries.Saint_Kitts_and_Nevis\"),\"Code\":\"KN\"},{\"Name\":t(\"countries.Saint_Lucia\"),\"Code\":\"LC\"},{\"Name\":t(\"countries.Saint_Martin_(French_part)\"),\"Code\":\"MF\"},{\"Name\":t(\"countries.Saint_Pierre_and_Miquelon\"),\"Code\":\"PM\"},{\"Name\":t(\"countries.Saint_Vincent_and_the_Grenadines\"),\"Code\":\"VC\"},{\"Name\":t(\"countries.Samoa\"),\"Code\":\"WS\"},{\"Name\":t(\"countries.San_Marino\"),\"Code\":\"SM\"},{\"Name\":t(\"countries.Sao_Tome_and_Principe\"),\"Code\":\"ST\"},{\"Name\":t(\"countries.Saudi_Arabia\"),\"Code\":\"SA\"},{\"Name\":t(\"countries.Senegal\"),\"Code\":\"SN\"},{\"Name\":t(\"countries.Serbia\"),\"Code\":\"RS\"},{\"Name\":t(\"countries.Seychelles\"),\"Code\":\"SC\"},{\"Name\":t(\"countries.Sierra_Leone\"),\"Code\":\"SL\"},{\"Name\":t(\"countries.Singapore\"),\"Code\":\"SG\"},{\"Name\":t(\"countries.Sint_Maarten_(Dutch_part)\"),\"Code\":\"SX\"},{\"Name\":t(\"countries.Slovakia\"),\"Code\":\"SK\"},{\"Name\":t(\"countries.Slovenia\"),\"Code\":\"SI\"},{\"Name\":t(\"countries.Solomon_Islands\"),\"Code\":\"SB\"},{\"Name\":t(\"countries.Somalia\"),\"Code\":\"SO\"},{\"Name\":t(\"countries.South_Africa\"),\"Code\":\"ZA\"},{\"Name\":t(\"countries.South_Georgia_and_the_South_Sandwich_Islands\"),\"Code\":\"GS\"},{\"Name\":t(\"countries.South_Sudan\"),\"Code\":\"SS\"},{\"Name\":t(\"countries.Spain\"),\"Code\":\"ES\"},{\"Name\":t(\"countries.Sri_Lanka\"),\"Code\":\"LK\"},{\"Name\":t(\"countries.Sudan\"),\"Code\":\"SD\"},{\"Name\":t(\"countries.Suriname\"),\"Code\":\"SR\"},{\"Name\":t(\"countries.Svalbard_and_Jan_Mayen\"),\"Code\":\"SJ\"},{\"Name\":t(\"countries.Swaziland\"),\"Code\":\"SZ\"},{\"Name\":t(\"countries.Sweden\"),\"Code\":\"SE\"},{\"Name\":t(\"countries.Switzerland\"),\"Code\":\"CH\"},{\"Name\":t(\"countries.Syrian_Arab_Republic\"),\"Code\":\"SY\"},{\"Name\":t(\"countries.Taiwan,_Province_of_China\"),\"Code\":\"TW\"},{\"Name\":t(\"countries.Tajikistan\"),\"Code\":\"TJ\"},{\"Name\":t(\"countries.Tanzania,_United_Republic_of\"),\"Code\":\"TZ\"},{\"Name\":t(\"countries.Thailand\"),\"Code\":\"TH\"},{\"Name\":t(\"countries.Timor-Leste\"),\"Code\":\"TL\"},{\"Name\":t(\"countries.Togo\"),\"Code\":\"TG\"},{\"Name\":t(\"countries.Tokelau\"),\"Code\":\"TK\"},{\"Name\":t(\"countries.Tonga\"),\"Code\":\"TO\"},{\"Name\":t(\"countries.Trinidad_and_Tobago\"),\"Code\":\"TT\"},{\"Name\":t(\"countries.Tunisia\"),\"Code\":\"TN\"},{\"Name\":t(\"countries.Turkey\"),\"Code\":\"TR\"},{\"Name\":t(\"countries.Turkmenistan\"),\"Code\":\"TM\"},{\"Name\":t(\"countries.Turks_and_Caicos_Islands\"),\"Code\":\"TC\"},{\"Name\":t(\"countries.Tuvalu\"),\"Code\":\"TV\"},{\"Name\":t(\"countries.Uganda\"),\"Code\":\"UG\"},{\"Name\":t(\"countries.Ukraine\"),\"Code\":\"UA\"},{\"Name\":t(\"countries.United_Arab_Emirates\"),\"Code\":\"AE\"},{\"Name\":t(\"countries.United_Kingdom\"),\"Code\":\"GB\"},{\"Name\":t(\"countries.United_States\"),\"Code\":\"US\"},{\"Name\":t(\"countries.United_States_Minor_Outlying_Islands\"),\"Code\":\"UM\"},{\"Name\":t(\"countries.Uruguay\"),\"Code\":\"UY\"},{\"Name\":t(\"countries.Uzbekistan\"),\"Code\":\"UZ\"},{\"Name\":t(\"countries.Vanuatu\"),\"Code\":\"VU\"},{\"Name\":t(\"countries.Venezuela,_Bolivarian_Republic_of\"),\"Code\":\"VE\"},{\"Name\":t(\"countries.Viet_Nam\"),\"Code\":\"VN\"},{\"Name\":t(\"countries.Virgin_Islands_British\"),\"Code\":\"VG\"},{\"Name\":t(\"countries.Virgin_Islands_US\"),\"Code\":\"VI\"},{\"Name\":t(\"countries.Wallis_and_Futuna\"),\"Code\":\"WF\"},{\"Name\":t(\"countries.Western_Sahara\"),\"Code\":\"EH\"},{\"Name\":t(\"countries.Yemen\"),\"Code\":\"YE\"},{\"Name\":t(\"countries.Zambia\"),\"Code\":\"ZM\"},{\"Name\":t(\"countries.Zimbabwe\"),\"Code\":\"ZW\"}]\n\nexport default ISO_COUNTRY_CODES","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport ISO_COUNTRY_CODES from \"../../../tools/iso_country_codes\"\nimport { GraphQLID } from 'graphql'\n\n\nconst RelationsAccountProfileForm = ({ t, history, isSubmitting, errors, values, inputData, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"customer\" \n                  checked={values.customer} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('general.customer')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"customer\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"teacher\" \n                  checked={values.teacher} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('general.teacher')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"teacher\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"employee\" \n                  checked={values.employee} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('general.employee')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"employee\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.first_name')}>\n              <Field type=\"text\" \n                      name=\"firstName\" \n                      className={(errors.firstName) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"firstName\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.last_name')}>\n              <Field type=\"text\" \n                      name=\"lastName\" \n                      className={(errors.lastName) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"lastName\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n         <Grid.Col>\n            <Form.Group label={t('general.date_of_birth')}>\n              <CSDatePicker \n                selected={values.dateOfBirth}\n                onChange={(date) => setFieldValue(\"dateOfBirth\", date)}\n                onBlur={() => setFieldTouched(\"dateOfBirth\", true)}\n              />\n              <ErrorMessage name=\"dateOfBirth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.gender')}>\n              <Field component=\"select\" \n                    name=\"gender\" \n                    className={(errors.organizationMembership) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\"></option>\n                <option value=\"F\">{t(\"genders.female\")}</option>\n                <option value=\"M\">{t(\"genders.male\")}</option>\n                <option value=\"X\">{t(\"genders.other\")}</option>\n              </Field>\n              <ErrorMessage name=\"gender\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.email')}>\n              <Field type=\"text\" \n                      name=\"email\" \n                      className={(errors.email) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"email\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('relations.accounts.emergency')}>\n              <Field type=\"text\" \n                     name=\"emergency\" \n                     className={(errors.emergency) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"emergency\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.phone')}>\n              <Field type=\"text\" \n                      name=\"phone\" \n                      className={(errors.phone) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"phone\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.mobile')}>\n              <Field type=\"text\" \n                     name=\"mobile\" \n                     className={(errors.mobile) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"mobile\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.address')}>\n              <Field type=\"text\" \n                      name=\"address\" \n                      className={(errors.address) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"address\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.postcode')}>\n              <Field type=\"text\" \n                     name=\"postcode\" \n                     className={(errors.postcode) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"postcode\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.city')}>\n              <Field type=\"text\" \n                      name=\"city\" \n                      className={(errors.city) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"city\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.country')}>\n              <Field component=\"select\" \n                     name=\"country\" \n                     className={(errors.country) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\">\n                <option value=\"\"></option>\n                { ISO_COUNTRY_CODES.map(\n                    country => <option value={country.Code} key={v4()}>{country.Name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"country\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.discovery')}>\n              <Field component=\"select\" \n                    name=\"organizationDiscovery\" \n                    className={(errors.organizationDiscovery) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.organizationDiscoveries.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationDiscovery\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.language')}>\n              <Field component=\"select\" \n                    name=\"organizationLanguage\" \n                    className={(errors.organizationLanguage) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.organizationLanguages.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLanguage\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row> \n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.key_number')}>\n              <Field type=\"text\" \n                      name=\"keyNumber\" \n                      className={(errors.keyNumber) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"keyNumber\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          \n          {/* <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsAccountProfileForm))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport ProfileCardSmall from \"../../ui/ProfileCardSmall\"\n\nimport RelationsAccountsBack from \"./RelationsAccountsBack\"\nimport ProfileMenu from \"./ProfileMenu\"\n\nfunction RelationsAccountProfileBase({t, match, children, sidebarButton=\"\", activeLink=\"\", user={}}) {\n  const accountId = match.params.account_id\n  let headerTitle = \"\"\n  if (user) {\n    headerTitle = `${user.firstName} ${user.lastName}`\n  }\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={headerTitle}>\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>                                    \n            <Grid.Col md={3}>\n              <ProfileCardSmall user={user}/>\n              {sidebarButton}\n              <ProfileMenu \n                activeLink={activeLink}\n                accountId={accountId}\n              /> \n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsAccountProfileBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNTS_QUERY, GET_ACCOUNT_QUERY, UPDATE_ACCOUNT } from './queries'\nimport { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\nimport ProfileCardSmall from \"../../ui/ProfileCardSmall\"\n\nimport { get_list_query_variables } from \"./tools\"\nimport RelationsAccountsBack from \"./RelationsAccountsBack\"\nimport RelationsAccountProfileForm from \"./RelationsAccountProfileForm\"\n\n// import OrganizationMenu from \"../OrganizationMenu\"\nimport ProfileMenu from \"./ProfileMenu\"\nimport RelationsAccountProfileBase from './RelationsAccountProfileBase'\n\nfunction RelationsAccountProfile({t, match}) {\n  const accountId = match.params.account_id\n  const activeLink = \"profile\"\n  const returnUrl = \"/relations/accounts\"\n\n  const {loading, error, data} = useQuery(GET_ACCOUNT_QUERY, {\n    variables: {id: accountId}\n  })\n  const [updateAccount] = useMutation(UPDATE_ACCOUNT)\n\n  if (loading) return (\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>  \n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      {console.log(error)}\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <p>{t('general.error_sad_smiley')}</p>\n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const account = data.account\n  console.log(account)\n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateOfBirth = null\n  if (account.dateOfBirth) {\n    dateOfBirth = new Date(account.dateOfBirth)\n  }\n\n  let initialValues = { \n    customer: account.customer, \n    teacher: account.teacher, \n    employee: account.employee, \n    firstName: account.firstName, \n    lastName: account.lastName, \n    email: account.email,\n    dateOfBirth: dateOfBirth,\n    gender: account.gender,\n    emergency: account.emergency,\n    phone: account.phone,\n    mobile: account.mobile,\n    address: account.address,\n    postcode: account.postcode,\n    city: account.city,\n    country: account.country,\n    keyNumber: account.keyNumber\n  }\n\n  if (account.organizationDiscovery) {\n    initialValues.organizationDiscovery = account.organizationDiscovery.id\n  }\n\n  if (account.organizationLanguage) {\n    initialValues.organizationLanguage = account.organizationLanguage.id\n  }\n\n  return (\n    <RelationsAccountProfileBase \n      user={account}\n      activeLink={activeLink}\n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n\n        <Formik\n            initialValues={initialValues}\n            validationSchema={ACCOUNT_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                let input_vars = {\n                  id: accountId,\n                  customer: values.customer,\n                  teacher: values.teacher,\n                  employee: values.employee,\n                  firstName: values.firstName,\n                  lastName: values.lastName,\n                  email: values.email,\n                  gender: values.gender,\n                  emergency: values.emergency,\n                  phone: values.phone,\n                  mobile: values.mobile,\n                  address: values.address,\n                  postcode: values.postcode,\n                  city: values.city,\n                  country: values.country,\n                  keyNumber: values.keyNumber,\n                  organizationDiscovery: values.organizationDiscovery,\n                  organizationLanguage: values.organizationLanguage\n                }\n\n                if (values.dateOfBirth) {\n                  input_vars['dateOfBirth'] = dateToLocalISO(values.dateOfBirth)\n                } \n\n                updateAccount({ variables: {\n                  input: input_vars\n                }, refetchQueries: [\n                    // Refetch list\n                    {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()},\n                    // Refresh local cached results for this account\n                    {query: GET_ACCOUNT_QUERY, variables: {id: accountId}}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    toast.success((t('relations.accounts.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    setSubmitting(false)\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n              <RelationsAccountProfileForm\n                isSubmitting={isSubmitting}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                errors={errors}\n                values={values}\n                inputData={data}\n              />\n            )}\n          </Formik>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsAccountProfile))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\nimport { customFileInputLabelStyle } from \"../../../tools/custom_file_input_label_style\"\n\n\nconst RelationsAccountProfileImageForm = ({ t, history, isSubmitting, returnUrl, inputFileName, fileInputLabel, handleFileInputChange=f=>f }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.custom_file_input_label')}>\n              <div className=\"custom-file\">\n                <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                  {fileInputLabel}\n                </label>\n              </div>\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Link to={returnUrl}>\n            <Button color=\"link\" className=\"pull-right\">\n              {t('general.cancel')}\n            </Button>\n          </Link>\n          <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsAccountProfileImageForm))\n\n","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNTS_QUERY, GET_ACCOUNT_QUERY, UPDATE_ACCOUNT } from './queries'\nimport { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\nimport ProfileCardSmall from \"../../ui/ProfileCardSmall\"\n\nimport { get_list_query_variables } from \"./tools\"\nimport RelationsAccountsBack from \"./RelationsAccountsBack\"\nimport RelationsAccountProfileImageForm from \"./RelationsAccountProfileImageForm\"\n\n// import OrganizationMenu from \"../OrganizationMenu\"\nimport ProfileMenu from \"./ProfileMenu\"\nimport RelationsAccountProfileBase from './RelationsAccountProfileBase'\n\nfunction RelationsAccountProfileImage({t, match, history}) {\n  const accountId = match.params.account_id\n  const activeLink = \"profile\"\n  const cardTitle = t('relations.accounts.profile_image')\n  const returnUrl = `/relations/accounts/${accountId}/profile` \n\n  const {loading, error, data} = useQuery(GET_ACCOUNT_QUERY, {\n    variables: {id: accountId}\n  })\n  const [updateAccount] = useMutation(UPDATE_ACCOUNT)\n\n  // Vars file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n  // Vars file input field end\n\n  if (loading) return (\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>  \n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      {console.log(error)}\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <p>{t('general.error_sad_smiley')}</p>\n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const account = data.account\n  console.log(account)\n\n  return (\n    <RelationsAccountProfileBase \n      user={account}\n      activeLink={activeLink}\n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n            initialValues={{}}\n            // validationSchema={ACCOUNT_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                let inputVars = {\n                  id: accountId,\n                }\n\n                function updateImage() {\n                  updateAccount({ variables: {\n                    input: inputVars\n                  }, refetchQueries: [\n                      // Refetch list\n                      {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()},\n                      // Refresh local cached results for this account\n                      {query: GET_ACCOUNT_QUERY, variables: {id: accountId}}\n                  ]})\n                  .then(({ data }) => {\n                      console.log('got data', data)\n                      history.push(`/relations/accounts/${accountId}/profile`)\n                      toast.success((t('relations.accounts.toast_edit_success')), {\n                          position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                      setSubmitting(false)\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n                }\n\n                let reader = new FileReader()\n                reader.onload = function(reader_event) {\n                  console.log(reader_event.target.result)\n                  let b64_enc_file = reader_event.target.result\n                  console.log(b64_enc_file)\n                  // Add uploaded document b64 encoded blob to input vars\n                  inputVars.image = b64_enc_file\n                  inputVars.imageFileName = fileName\n      \n                  updateImage()\n                }\n                \n                let file = inputFileName.current.files[0]\n                if (file && file.size < 5242880) {\n                  reader.readAsDataURL(file)\n                } else if (file && file.size > 5242880) { \n                  toast.error(t(\"error_messages.selected_file_exceeds_max_filesize\"), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                  setSubmitting(false)\n                } else {\n                  updateImage()\n                }\n            }}\n            >\n            {({ isSubmitting, values }) => (\n              <RelationsAccountProfileImageForm\n                isSubmitting={isSubmitting}\n                values={values}\n                inputData={data}\n                inputFileName={inputFileName}\n                fileInputLabel={fileInputLabel}\n                handleFileInputChange={handleFileInputChange}\n                returnUrl={returnUrl}\n              />\n            )}\n          </Formik>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsAccountProfileImage))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nconst DocumentType = ({ t, documentType }) => {\n  switch (documentType) {\n    case \"TERMS_AND_CONDITIONS\":  \n      return t('general.terms_and_conditions')\n      break\n    case \"PRIVACY_POLICY\":\n      return t('general.privacy_policy')\n      break\n    default:\n      return t('general.unknown_document_type')\n  }\n}\n\nexport default withTranslation()(DocumentType)\n\n\n\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_ACCEPTED_DOCUMENTS_QUERY = gql`\n  query AccountAcceptedDocuments($after: String, $before: String, $account: ID!) {\n    accountAcceptedDocuments(first: 15, before:$before, after:$after, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          document {\n            id\n            documentType\n            version\n            urlDocument\n          }\n          dateAccepted\n          clientIp\n        }\n      }\n    }\n    account(id:$account) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\nimport DocumentType from \"../../../ui/DocumentType\"\nimport FileDownloadTableButton from \"../../../ui/FileDownloadTableButton\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport { GET_ACCOUNT_ACCEPTED_DOCUMENTS_QUERY } from \"./queries\"\n\nimport moment from 'moment'\n\n\nfunction AccountAcceptedDocuments({ t, history, match }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  const accountId = match.params.account_id\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_ACCEPTED_DOCUMENTS_QUERY, {\n    variables: {\n      account: accountId\n    }\n  })\n\n  // Loading\n  if (loading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (error) {\n    console.log(error)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n\n  console.log(data)\n  \n  const account = data.account\n  const acceptedDocuments = data.accountAcceptedDocuments\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.firstName + \" \" + account.lastName} >\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <ContentCard \n                cardTitle={t('relations.account.accepted_documents.title')}\n                pageInfo={acceptedDocuments.pageInfo}\n                onLoadMore={() => {\n                  fetchMore({\n                    variables: {\n                      after: data.accountAcceptedDocuments.pageInfo.endCursor\n                    },\n                    updateQuery: (previousResult, { fetchMoreResult }) => {\n                      const newEdges = fetchMoreResult.accountAcceptedDocuments.edges\n                      const pageInfo = fetchMoreResult.accountAcceptedDocuments.pageInfo\n\n                      return newEdges.length\n                        ? {\n                            // Put the new acceptedDocuments at the end of the list and update `pageInfo`\n                            // so we have the new `endCursor` and `hasNextPage` values\n                            accountAcceptedDocuments: {\n                              __typename: previousResult.accountAcceptedDocuments.__typename,\n                              edges: [ ...previousResult.accountAcceptedDocuments.edges, ...newEdges ],\n                              pageInfo\n                            }\n                          }\n                        : previousResult\n                    }\n                  })\n                }} \n              >\n                <Table>\n                  <Table.Header>\n                    <Table.Row key={v4()}>\n                      <Table.ColHeader>{t('general.document_type')}</Table.ColHeader>\n                      <Table.ColHeader>{t('general.date_accepted')}</Table.ColHeader>\n                      <Table.ColHeader>{t('relations.account.accepted_documents.accepted_from_address')}</Table.ColHeader>\n                      <Table.ColHeader><span className=\"pull-right\">{t('general.document')}</span></Table.ColHeader>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                      {acceptedDocuments.edges.map(({ node }) => (\n                        <Table.Row key={v4()}>\n                          <Table.Col key={v4()}>\n                            <DocumentType documentType={node.document.documentType} />\n                          </Table.Col>\n                          <Table.Col key={v4()}>\n                            {moment(node.dateAccepted).format(dateFormat)}\n                          </Table.Col>\n                          <Table.Col>\n                            {node.clientIp}\n                          </Table.Col>\n                          <Table.Col key={v4()}>\n                            <FileDownloadTableButton mediaUrl={node.document.urlDocument} className=\"pull-right\" />\n                          </Table.Col>\n                        </Table.Row>\n                      ))}\n                  </Table.Body>\n                </Table>\n              </ContentCard>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              <ProfileMenu \n                activeLink='accepted_documents' \n                accountId={match.params.account_id}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n      \n        \nexport default withTranslation()(withRouter(AccountAcceptedDocuments))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ACCOUNT_BANK_ACCOUNTS_QUERY = gql`\n  query AccountBankAccounts($after: String, $before: String, $account: ID!) {\n    accountBankAccounts(\n      first: 1, \n      before: $before, \n      after: $after, \n      account: $account\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          number\n          holder\n          bic\n          mandates(first: 100) {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n              startCursor\n              endCursor\n            }\n            edges {\n              node {\n                id\n                reference\n                content\n                signatureDate\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n// export const GET_ACCOUNT_QUERY = gql`\n//   query Account($id: ID!) {\n//     account(id:$id) {\n//       id\n//       customer\n//       teacher\n//       employee\n//       firstName\n//       lastName\n//       email\n//       dateOfBirth\n//       gender\n//       address\n//       postcode\n//       city\n//       country\n//       phone\n//       mobile\n//       emergency\n//       isActive\n//     }\n//   }\n// `\n\nexport const UPDATE_ACCOUNT_BANK_ACCOUNT = gql`\n  mutation UpdateAccountBanKAccount($input:UpdateAccountBankAccountInput!) {\n    updateAccountBankAccount(input: $input) {\n      accountBankAccount {\n        id\n        number\n        holder\n        bic\n      }\n    }\n  }\n`\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ACCOUNT_BANK_ACCOUNT_MANDATE_QUERY = gql`\n  query AccountBankAccountMandate($id: ID!) {\n    accountBankAccountMandate(id:$id) {\n      id\n      reference\n      content\n      signatureDate\n    }\n  }\n`\n\n\nexport const CREATE_ACCOUNT_BANK_ACCOUNT_MANDATE = gql`\n  mutation CreateAccountBankAccountMandate($input:CreateAccountBankAccountMandateInput!) {\n    createAccountBankAccountMandate(input: $input) {\n      accountBankAccountMandate {\n        id\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_ACCOUNT_BANK_ACCOUNT_MANDATE = gql`\n  mutation UpdateAccountBankAccountMandate($input:UpdateAccountBankAccountMandateInput!) {\n    updateAccountBankAccountMandate(input: $input) {\n      accountBankAccountMandate {\n        id\n      }\n    }\n  }\n`\n\n\nexport const DELETE_ACCOUNT_BANK_ACCOUNT_MANDATE = gql`\n  mutation DeleteAccountBankAccountMandate($input:DeleteAccountBankAccountMandateInput!) {\n    deleteAccountBankAccountMandate(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport { GET_ACCOUNT_QUERY } from '../queries'\n\nimport {\n  Button,\n  Icon,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\nimport ProfileMenu from \"../ProfileMenu\"\n\n\nfunction RelationsAccountBankAccountBase({ t, match, history, children, bankAccountId=\"\", showBack=false }) {\n  const accountId = match.params.account_id\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_QUERY, {\n    variables: { id: accountId }\n  })\n\n  if (loading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (error) {\n    console.log(error)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n\n  const account = data.account\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.firstName + \" \" + account.lastName}>\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              {((bankAccountId) && !(showBack)) ?\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"accountbankaccountmandate\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/bank_accounts/${bankAccountId}/mandates/add`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.bank_accounts.mandates.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              {(showBack) ?\n                <HasPermissionWrapper permission=\"view\"\n                                      resource=\"accountbankaccount\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/bank_accounts/`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\"\n              }\n              <ProfileMenu \n                activeLink='bank_account'\n                accountId={accountId}\n              /> \n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccountBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nconst RelationsAccountBankAccountForm = ({ t, history, isSubmitting, errors, values, }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.bank_accounts.holder')}>\n              <Field type=\"text\" \n                      name=\"holder\" \n                      className={(errors.holder) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"bic\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.bank_accounts.number')}>\n              <Field type=\"text\" \n                      name=\"number\" \n                      className={(errors.number) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"number\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.bank_accounts.bic')}>\n              <Field type=\"text\" \n                      name=\"bic\" \n                      className={(errors.bic) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"bic\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          \n          {/* <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccountForm))\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport moment from 'moment'\n\nimport { GET_ACCOUNT_BANK_ACCOUNTS_QUERY, UPDATE_ACCOUNT_BANK_ACCOUNT } from './queries'\nimport { DELETE_ACCOUNT_BANK_ACCOUNT_MANDATE } from './mandates/queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Button,\n  Card, \n  Grid,\n  Icon\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport RelationsAccountBankAccountBase from \"./RelationsAccountBankAccountBase\"\nimport RelationsAccountBankAccountForm from \"./RelationsAccountBankAccountForm\"\n\n\n\nfunction RelationsAccountBankAccount({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  \n  const accountId = match.params.account_id\n  const returnUrl = \"/relations/accounts\"\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_BANK_ACCOUNTS_QUERY, {\n    variables: { account: accountId }\n  })\n\n  const [ updateAccountBankAccount ] = useMutation(UPDATE_ACCOUNT_BANK_ACCOUNT)\n  const [ deleteAccountBankAccountMandate ] = useMutation(DELETE_ACCOUNT_BANK_ACCOUNT_MANDATE)\n\n  if (loading) return (\n    <RelationsAccountBankAccountBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </RelationsAccountBankAccountBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <RelationsAccountBankAccountBase>\n        <p>{t('general.loading_with_dots')}</p><p>{t('general.error_sad_smiley')}</p>\n      </RelationsAccountBankAccountBase>\n    )\n  }\n\n  const accountBankAccounts = data.accountBankAccounts\n  const accountBankAccount = accountBankAccounts.edges[0].node\n  const mandates = accountBankAccount.mandates\n  console.log(accountBankAccount)\n\n  return (\n    <RelationsAccountBankAccountBase bankAccountId={accountBankAccount.id}>\n      <Card title={t('relations.account.bank_accounts.title')}>\n        <Formik\n          initialValues={{ \n            number: accountBankAccount.number,\n            holder: accountBankAccount.holder,\n            bic: accountBankAccount.bic\n          }}\n          // validationSchema={ACCOUNT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              let input_vars = {\n                id: accountBankAccount.id,\n                number: values.number,\n                holder: values.holder,\n                bic: values.bic              \n              }\n\n              updateAccountBankAccount({ variables: {\n                input: input_vars\n              }, refetchQueries: [\n                  // Refresh local cached results for this account\n                  {query: GET_ACCOUNT_BANK_ACCOUNTS_QUERY, variables: { account: accountId }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('relations.account.bank_accounts.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <RelationsAccountBankAccountForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n            />\n          )}\n        </Formik>\n      </Card>\n      {(mandates.edges.length) ? <h5>{t(\"relations.account.bank_accounts.mandates.title\")}</h5> : \"\"}\n      <Grid.Row>\n      {mandates.edges.map(({ node }) => (\n        <Grid.Col md={6}>\n          <Card title={node.reference}>\n            <Card.Body>\n              {t(\"relations.account.bank_accounts.mandates.signature_date\")} {moment(node.signatureDate).format(dateFormat)}\n              <div dangerouslySetInnerHTML={{ __html: node.content}} />\n            </Card.Body>\n            <Card.Footer>\n              <Button \n                className=\"pull-right\"\n                color=\"danger\"\n                type=\"button\"\n                onClick={() => {\n                  confirm_delete({\n                    t: t,\n                    msgConfirm: t(\"relations.account.bank_accounts.mandates.delete_confirm_msg\"),\n                    msgDescription: <p>{node.reference}</p>,\n                    msgSuccess: t('relations.account.bank_accounts.mandates.deleted'),\n                    deleteFunction: deleteAccountBankAccountMandate,\n                    functionVariables: { \n                      variables: {\n                        input: {\n                          id: node.id\n                        }\n                      }, \n                      refetchQueries: [\n                        {query: GET_ACCOUNT_BANK_ACCOUNTS_QUERY, variables: { account: accountId} } \n                      ]\n                    }\n                  })\n                }}\n              >\n                <Icon name=\"trash-2\" />\n              </Button>\n              <Link to={`/relations/accounts/${accountId}/bank_accounts/${accountBankAccount.id}/mandates/edit/${node.id}`}>\n                <Button\n                  type=\"button\" \n                  color=\"secondary\" \n                >\n                    {t('general.edit')}\n                </Button>\n              </Link>\n            </Card.Footer>\n          </Card>\n        </Grid.Col>\n      ))}\n      </Grid.Row>\n    </RelationsAccountBankAccountBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccount))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\nimport CSDatePicker from \"../../../../ui/CSDatePicker\"\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../plugin_config/tinymce\"\n\n\nconst RelationsAccountBankAccountMandateForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, returnUrl }) => (\n  <FoForm>\n    <Card.Body>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('relations.account.bank_accounts.mandates.reference')}>\n            <Field type=\"text\" \n                    name=\"reference\" \n                    className={(errors.reference) ? \"form-control is-invalid\" : \"form-control\"}\n                    placeholder={t('relations.account.bank_accounts.mandates.reference_placeholder')}\n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"reference\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('relations.account.bank_accounts.mandates.signature_date')}>\n            <CSDatePicker \n              selected={values.signatureDate}\n              onChange={(date) => setFieldValue(\"signatureDate\", date)}\n              onBlur={() => setFieldTouched(\"signatureDate\", true)}\n            />\n            <ErrorMessage name=\"signatureDate\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('relations.account.bank_accounts.mandates.content')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"content\"\n              initialValue={values.content}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"content\", e.target.getContent())\n                setFieldTouched(\"content\", true, true)\n              }}\n              />\n            <ErrorMessage name=\"content\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button\n            type=\"button\" \n            color=\"link\" \n          >\n              {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccountMandateForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { CREATE_ACCOUNT_BANK_ACCOUNT_MANDATE } from './queries'\nimport { GET_ACCOUNT_BANK_ACCOUNTS_QUERY } from '../queries'\n// import { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport RelationsAccountBankAccountMandateForm from './RelationsAccountBankAccountMandateForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport RelationsAccountBankAccountBase from '../RelationsAccountBankAccountBase'\n\n\nfunction RelationsAccountBankAccountMandateAdd({ t, match, history }) {\n  const accountId = match.params.account_id\n  const bankAccountId = match.params.bank_account_id\n  const returnUrl = `/relations/accounts/${accountId}/bank_accounts`\n\n  const [createAccountBankAccountMandate] = useMutation(CREATE_ACCOUNT_BANK_ACCOUNT_MANDATE) \n \n\n  return (\n    <RelationsAccountBankAccountBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.account.bank_accounts.mandates.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{\n            reference: \"\",\n            content: \"\",\n            signatureDate: new Date()\n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            createAccountBankAccountMandate({ variables: {\n              input: {\n                accountBankAccount: bankAccountId,\n                reference: values.refrence, \n                content: values.content,\n                signatureDate: dateToLocalISO(values.signatureDate)\n              }\n            }, refetchQueries: [\n              {query: GET_ACCOUNT_BANK_ACCOUNTS_QUERY, variables: { account: accountId }}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                history.push(returnUrl)\n                toast.success((t('relations.account.bank_accounts.mandates.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, submitForm, setFieldTouched, setFieldValue }) => (\n            <RelationsAccountBankAccountMandateForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              submitForm={submitForm}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              returnUrl={returnUrl}\n            >\n            </RelationsAccountBankAccountMandateForm>   \n          )}\n        </Formik>\n      </Card>\n    </RelationsAccountBankAccountBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccountMandateAdd))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_BANK_ACCOUNT_MANDATE_QUERY, UPDATE_ACCOUNT_BANK_ACCOUNT_MANDATE } from './queries'\nimport { GET_ACCOUNT_BANK_ACCOUNTS_QUERY } from '../queries'\n// import { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport RelationsAccountBankAccountMandateForm from './RelationsAccountBankAccountMandateForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport RelationsAccountBankAccountBase from '../RelationsAccountBankAccountBase'\n\n\nfunction RelationsAccountBankAccountMandateEdit({ t, match, history }) {\n  const accountId = match.params.account_id\n  const bankAccountId = match.params.bank_account_id\n  const mandateId = match.params.id\n  const returnUrl = `/relations/accounts/${accountId}/bank_accounts`\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_BANK_ACCOUNT_MANDATE_QUERY, {\n    variables: {'id': mandateId},\n  })\n  const [updateAccountBankAccountMandate] = useMutation(UPDATE_ACCOUNT_BANK_ACCOUNT_MANDATE) \n\n  if (loading) return (\n    <RelationsAccountBankAccountBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </RelationsAccountBankAccountBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <RelationsAccountBankAccountBase>\n        <p>{t('general.loading_with_dots')}</p><p>{t('general.error_sad_smiley')}</p>\n      </RelationsAccountBankAccountBase>\n    )\n  }\n\n  const mandate = data.accountBankAccountMandate\n \n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let signDate = null\n  if (mandate.signatureDate) {\n    signDate = new Date(mandate.signatureDate)\n  }\n\n  return (\n    <RelationsAccountBankAccountBase showBack={true}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.account.bank_accounts.mandates.title_add')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{\n            reference: mandate.reference,\n            content: mandate.content,\n            signatureDate: signDate\n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            updateAccountBankAccountMandate({ variables: {\n              input: {\n                id: mandateId,\n                reference: values.refrence, \n                content: values.content,\n                signatureDate: dateToLocalISO(values.signatureDate)\n              }\n            }, refetchQueries: [\n              {query: GET_ACCOUNT_BANK_ACCOUNTS_QUERY, variables: { account: accountId }}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('relations.account.bank_accounts.mandates.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                history.push(returnUrl)\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, submitForm, setFieldTouched, setFieldValue }) => (\n            <RelationsAccountBankAccountMandateForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              submitForm={submitForm}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              returnUrl={returnUrl}\n            >\n            </RelationsAccountBankAccountMandateForm>   \n          )}\n        </Formik>\n      </Card>\n    </RelationsAccountBankAccountBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsAccountBankAccountMandateEdit))\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Badge\n} from \"tabler-react\"\n\n\nfunction BadgeBookingStatus({ t, status }) {\n  switch (status) {\n    case \"ATTENDING\":\n      return <Badge color=\"success\">{t('schedule.classes.class.attendance.booking_status.ATTENDING')}</Badge> \n      break\n    case \"BOOKED\":\n      return <Badge color=\"primary\">{t('schedule.classes.class.attendance.booking_status.BOOKED')}</Badge> \n      break\n    case \"CANCELLED\":\n      return <Badge color=\"warning\">{t('schedule.classes.class.attendance.booking_status.CANCELLED')}</Badge> \n      break\n    default:\n      return t(\"schedule.classes.class.attendance.booking_status.invalid_type\")\n  }\n}\n\nexport default withTranslation()(BadgeBookingStatus)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\n\nfunction AccountClassesBase({ t, match, history, children, account={} }) {\n  const accountId = match.params.account_id\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.fullName} >\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n                {/* <HasPermissionWrapper permission=\"view\"\n                                      resource=\"scheduleitemattendance\">\n                  <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classes/add\"}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.classes.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper> */}\n              <ProfileMenu \n                activeLink='classes' \n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountClassesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_CLASSES_QUERY = gql`\n  query ScheduleItemAttendance($account: ID!, $before: String, $after: String) {\n    scheduleItemAttendances(first: 20, before: $before, after: $after, account: $account, accountScheduleEventTicket_Isnull: true) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          attendanceType\n          date\n          bookingStatus\n          scheduleItem {\n            id\n            timeStart\n            timeEnd\n            organizationLocationRoom {\n              name\n              organizationLocation {\n                name\n              }\n            }\n            organizationClasstype {\n              name\n            }\n          }\n        }\n      } \n    }\n    account(id:$account) {\n      id\n      firstName\n      lastName\n      fullName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_CLASS_ATTENDANCE_QUERY = gql`\n  query ScheduleItemAttendances($after: String, $before: String, $scheduleItem: ID!, $date: Date!) {\n    scheduleItemAttendances(first: 100, before: $before, after: $after, scheduleItem: $scheduleItem, date: $date) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }     \n          attendanceType\n          bookingStatus\n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const DELETE_SCHEDULE_CLASS_ATTENDANCE = gql`\n  mutation DeleteScheduleItemAttendance($input: DeleteScheduleItemAttendanceInput!) {\n    deleteScheduleItemAttendance(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const UPDATE_SCHEDULE_ITEM_ATTENDANCE = gql`\n  mutation UpdateScheduleItemAttendance($input: UpdateScheduleItemAttendanceInput!) {\n    updateScheduleItemAttendance(input:$input) {\n      scheduleItemAttendance {\n        id\n      }\n    }\n  }\n`\n\n\n// export const GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY = gql`\n//   query ScheduleItemTeacher($before: String, $after: String, $id: ID!) {\n//     scheduleItemTeacher(id: $id) {\n//       id\n//       account {\n//         id\n//         fullName\n//       }\n//       role\n//       account2 {\n//         id\n//         fullName\n//       }\n//       role2\n//       dateStart\n//       dateEnd       \n//     }\n//     accounts(first: 15, before: $before, after: $after, isActive: true, teacher: true) {\n//       pageInfo {\n//         startCursor\n//         endCursor\n//         hasNextPage\n//         hasPreviousPage\n//       }\n//       edges {\n//         node {\n//           id\n//           fullName\n//         }\n//       }\n//     }\n//   }\n// `\n\n\n// export const GET_INPUT_VALUES_QUERY = gql`\n//   query InputValues($after: String, $before: String) {\n//     accounts(first: 15, before: $before, after: $after, isActive: true, teacher: true) {\n//       pageInfo {\n//         startCursor\n//         endCursor\n//         hasNextPage\n//         hasPreviousPage\n//       }\n//       edges {\n//         node {\n//           id\n//           fullName\n//         }\n//       }\n//     }\n//   }\n// `","import React, { useContext } from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_ACCOUNT_CLASSES_QUERY } from \"./queries\"\nimport { DELETE_SCHEDULE_CLASS_ATTENDANCE } from \"../../../schedule/classes/class/attendance/queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport moment from 'moment'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\"\n\n\nfunction AccountClassDelete({t, match, node, account}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const [deleteScheduleItemAttendance, { data }] = useMutation(DELETE_SCHEDULE_CLASS_ATTENDANCE)\n\n  console.log(\"AccountClassDelete\")\n  console.log(node)\n  console.log(account)\n  console.log(\"---\")\n\n  return (\n    <button className=\"icon btn btn-link btn-sm pull-right\" \n      title={t('general.delete')} \n      href=\"\"\n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.classes.class.attendance.delete_confirm_msg\"),\n          msgDescription: <p>\n            <List>\n              <List.Item>\n                {t(\"general.time\")}: { moment(node.date).format(dateFormat) } { ' ' }\n                {moment(node.date + ' ' + node.scheduleItem.timeStart).format(timeFormat)}\n              </List.Item>\n              <List.Item>\n                {t(\"general.class\")}: {node.scheduleItem.organizationClasstype.name} \n              </List.Item>\n              <List.Item>\n                {t(\"general.location\")}: {node.scheduleItem.organizationLocationRoom.organizationLocation.name} \n              </List.Item>\n            </List>    \n          </p>,\n          msgSuccess: t('schedule.classes.class.attendance.delete_success'),\n          deleteFunction: deleteScheduleItemAttendance,\n          functionVariables: { \n            variables: {\n              input: {\n                id: node.id\n              }\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_CLASSES_QUERY, \n                variables: { account: account.id } },\n            ]\n          }\n        })\n    }}>\n      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountClassDelete))\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Card,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport BadgeBookingStatus from \"../../../ui/BadgeBookingStatus\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport AccountClassesBase from \"./AccountClassesBase\"\nimport AccountClassDelete from \"./AccountClassDelete\"\n\nimport { GET_ACCOUNT_CLASSES_QUERY } from \"./queries\"\n\n\nfunction AccountClasses({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const account_id = match.params.account_id\n  const cardTitle = t('relations.account.classes.title')\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_CLASSES_QUERY, {\n    variables: {'account': account_id},\n    fetchPolicy: \"network-only\"\n  })\n\n  // Loading\n  if (loading) return (\n    <AccountClassesBase>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>\n        </Card.Body>\n      </Card>\n    </AccountClassesBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountClassesBase>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('general.error_sad_smiley')}</p>\n          </Card.Body>\n        </Card>\n      </AccountClassesBase>\n    )\n  }\n\n  console.log(\"AccountClasses data:\")\n  console.log(data)\n  const account = data.account\n  const scheduleItemAttendances = data.scheduleItemAttendances\n  \n  // Empty list\n  if (!scheduleItemAttendances.edges.length) {\n    return (\n      <AccountClassesBase account={account}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('relations.account.classes.empty_list')}</p>\n          </Card.Body>\n        </Card>\n      </AccountClassesBase>\n    )\n  }\n\n  // Return populated list\n  return (\n    <AccountClassesBase account={account}>\n      <ContentCard \n        cardTitle={cardTitle}\n        pageInfo={scheduleItemAttendances.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: scheduleItemAttendances.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.scheduleItemAttendances.edges\n              const pageInfo = fetchMoreResult.scheduleItemAttendances.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new scheduleItemAttendances at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    scheduleItemAttendances: {\n                      __typename: previousResult.scheduleItemAttendances.__typename,\n                      edges: [ ...previousResult.scheduleItemAttendances.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.class')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.booking_status')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>  \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {scheduleItemAttendances.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                { console.log(node) }\n                { console.log(account) }\n                <Table.Col>\n                  { moment(node.date).format(dateFormat) } <br />\n                  <span className=\"text-muted\">\n                    {moment(node.date + ' ' + node.scheduleItem.timeStart).format(timeFormat)}\n                  </span>\n                </Table.Col>\n                <Table.Col>\n                  { node.scheduleItem.organizationClasstype.name }\n                </Table.Col>\n                <Table.Col>\n                  { node.scheduleItem.organizationLocationRoom.organizationLocation.name } <br />\n                  <span className=\"text-muted\">\n                    { node.scheduleItem.organizationLocationRoom.name }\n                  </span> \n                </Table.Col>\n                <Table.Col>\n                  <BadgeBookingStatus status={node.bookingStatus} />\n                </Table.Col>\n                <Table.Col>\n                  <AccountClassDelete account={account} node={node} />\n                </Table.Col>\n                {/* <Table.Col className=\"text-right\" key={v4()}>\n                  <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/edit/\" + node.id}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col> */}\n                {/* <Mutation mutation={DELETE_ACCOUNT_CLASSPASS} key={v4()}>\n                  {(deleteAccountClasspass, { data }) => (\n                    <Table.Col className=\"text-right\" key={v4()}>\n                      <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.delete')} \n                        href=\"\"\n                        onClick={() => {\n                          confirm_delete({\n                            t: t,\n                            msgConfirm: t(\"relations.account.classpasses.delete_confirm_msg\"),\n                            msgDescription: <p>{node.organizationClasspass.name} {node.dateStart}</p>,\n                            msgSuccess: t('relations.account.classpasses.deleted'),\n                            deleteFunction: deleteAccountClasspass,\n                            functionVariables: { variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, refetchQueries: [\n                              {query: GET_ACCOUNT_CLASSPASSES_QUERY, variables: { archived: archived, accountId: match.params.account_id }} \n                            ]}\n                          })\n                      }}>\n                        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                      </button>\n                    </Table.Col>\n                  )}\n                </Mutation> */}\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </AccountClassesBase>\n  )\n}\n\n        \nexport default withTranslation()(withRouter(AccountClasses))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_CLASSPASSES_QUERY = gql`\n  query AccountClasspasses($after: String, $before: String, $accountId: ID!) {\n    accountClasspasses(first: 15, before: $before, after: $after, account: $accountId) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationClasspass {\n            id\n            name\n          }\n          dateStart\n          dateEnd\n          classesRemainingDisplay\n          createdAt\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const GET_ACCOUNT_CLASSPASS_QUERY = gql`\n  query AccountClasspass($id: ID!, $accountId: ID!, $after: String, $before: String) {\n    accountClasspass(id:$id) {\n      id\n      organizationClasspass {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      note\n      createdAt\n    }\n    organizationClasspasses(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ClasspassInputValues($after: String, $before: String, $accountId: ID!) {\n    organizationClasspasses(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const CREATE_ACCOUNT_CLASSPASS = gql`\n  mutation CreateAccountClasspass($input: CreateAccountClasspassInput!) {\n    createAccountClasspass(input: $input) {\n      accountClasspass {\n        id\n        account {\n          id\n          firstName\n          lastName\n          email\n        }\n        organizationClasspass {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        note\n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT_CLASSPASS = gql`\nmutation UpdateAccountClasspass($input: UpdateAccountClasspassInput!) {\n  updateAccountClasspass(input: $input) {\n    accountClasspass {\n      id\n      account {\n        id\n        firstName\n        lastName\n        email\n      }\n      organizationClasspass {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      note\n    }\n  }\n}\n`\n\nexport const DELETE_ACCOUNT_CLASSPASS = gql`\n  mutation DeleteAccountClasspass($input: DeleteAccountClasspassInput!) {\n    deleteAccountClasspass(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Icon,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase'\n\nimport { GET_ACCOUNT_CLASSPASSES_QUERY, DELETE_ACCOUNT_CLASSPASS } from \"./queries\"\n\n\nfunction AccountClasspasses({t, match}) {\n  const accountId = match.params.account_id\n  const activeLink = \"classpasses\"\n  const cardTitle = t('relations.account.classpasses.title')\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"add\"\n    resource=\"accountclasspass\">\n      <Link to={`/relations/accounts/${accountId}/classpasses/add`}>\n        <Button color=\"primary btn-block mb-6\">\n          <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.classpasses.add')}\n        </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  const {loading, error, data, fetchMore} = useQuery(GET_ACCOUNT_CLASSPASSES_QUERY, {\n    variables: { accountId: accountId }\n  })\n  const [deleteAccountClasspass] = useMutation(DELETE_ACCOUNT_CLASSPASS)\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const account = data.account\n  const accountClasspasses = data.accountClasspasses\n\n  return (\n    <RelationsAccountProfileBase \n      user={account}\n      activeLink={activeLink}\n      sidebarButton={sidebarButton}\n    >\n      <ContentCard \n        cardTitle={t('relations.account.classpasses.title')}\n        pageInfo={accountClasspasses.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: accountClasspasses.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountClasspasses.edges\n              const pageInfo = fetchMoreResult.accountClasspasses.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountClasspasses at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    accountClasspasses: {\n                      __typename: previousResult.accountClasspasses.__typename,\n                      edges: [ ...previousResult.accountClasspasses.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.classes_remaining')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader> \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {accountClasspasses.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.organizationClasspass.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dateStart}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dateEnd}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.classesRemainingDisplay}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"relations.account.classpasses.delete_confirm_msg\"),\n                          msgDescription: <p>{node.organizationClasspass.name} {node.dateStart}</p>,\n                          msgSuccess: t('relations.account.classpasses.deleted'),\n                          deleteFunction: deleteAccountClasspass,\n                          functionVariables: { variables: {\n                            input: {\n                              id: node.id\n                            }\n                          }, refetchQueries: [\n                            {query: GET_ACCOUNT_CLASSPASSES_QUERY, variables: { accountId: accountId }} \n                          ]}\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>    \n    </RelationsAccountProfileBase>\n  )\n}\n\n        \nexport default withTranslation()(withRouter(AccountClasspasses))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const CLASSPASS_SCHEMA = Yup.object().shape({\n  organizationClasspass: Yup.string()\n    .required(t('yup.field_required')),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .nullable(),\n  note: Yup.string(),\n})\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountClasspassForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, returnUrl }) => (\n  <FoForm>\n    <Card.Body> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.classpass')}>\n            <Field component=\"select\" \n                  name=\"organizationClasspass\" \n                  className={(errors.organizationClasspass) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n              {inputData.organizationClasspasses.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"organizationClasspass\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.date_start')}>\n            <CSDatePicker \n              className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n              selected={values.dateStart}\n              onChange={(date) => {\n                setFieldValue(\"dateStart\", date)\n                setFieldTouched(\"dateEnd\", true)\n              }}\n              onBlur={() => setFieldTouched(\"dateStart\", true)}\n            />\n            <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.date_end')}>\n            <CSDatePicker \n              selected={values.dateEnd}\n              onChange={(date) => {\n                setFieldValue(\"dateEnd\", date)\n                setFieldTouched(\"dateEnd\", true)\n              }}\n              onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              placeholderText={t('schedule.classes.placeholder_enddate')}\n            />\n            <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        </Grid.Row>\n      <Form.Group label={t('general.note')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"note\"\n          initialValue={values.note}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldValue(\"note\", e.target.getContent())\n            setFieldTouched(\"note\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Button\n          type=\"button\" \n          color=\"link\" \n          onClick={() => history.push(returnUrl)}\n        >\n          {t('general.cancel')}\n        </Button>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountClasspassForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_CLASSPASSES_QUERY, GET_INPUT_VALUES_QUERY, CREATE_ACCOUNT_CLASSPASS } from './queries'\nimport { CLASSPASS_SCHEMA } from './yupSchema'\nimport AccountClasspassForm from './AccountClasspassForm'\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase';\n\nimport {\n  Icon,\n  Button,\n  Card,\n} from \"tabler-react\";\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\n\n\nfunction AccountClasspassAdd({t, match, history}) {\n  const accountId = match.params.account_id\n  const activeLink = \"classpasses\"\n  const cardTitle = t('relations.account.classpasses.title_add')\n  const returnUrl = `/relations/accounts/${accountId}/classpasses`\n  \n  const {loading, error, data} = useQuery(GET_INPUT_VALUES_QUERY, { \n    variables: { accountId: accountId }\n  })\n  const [createAccountClasspass] = useMutation(CREATE_ACCOUNT_CLASSPASS)\n\n  const sidebarButton = <Link to={returnUrl}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n  \n  const inputData = data\n  const account = data.account\n\n  return (\n    <RelationsAccountProfileBase\n      activeLink={activeLink}\n      user={account}\n      sidebarButton={sidebarButton} \n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n          <Formik\n            initialValues={{ \n              organizationClasspass: \"\",\n              dateStart: new Date(),\n              note: \"\",\n            }}\n            validationSchema={CLASSPASS_SCHEMA}\n            onSubmit={(values, { setSubmitting }, errors) => {\n                console.log('submit values:')\n                console.log(values)\n                console.log(errors)\n\n                \n                let dateEnd\n                if (values.dateEnd) {\n                  dateEnd = dateToLocalISO(values.dateEnd)\n                } else {\n                  dateEnd = values.dateEnd\n                }\n\n                createAccountClasspass({ variables: {\n                  input: {\n                    account: accountId, \n                    organizationClasspass: values.organizationClasspass,\n                    dateStart: dateToLocalISO(values.dateStart),\n                    dateEnd: dateEnd,\n                    note: values.note,\n                  }\n                }, refetchQueries: [\n                    {query: GET_ACCOUNT_CLASSPASSES_QUERY, variables: { accountId: accountId}}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    const classpassId = data.createAccountClasspass.accountClasspass.id\n                    history.push(`/relations/accounts/${accountId}/classpasses/edit/${classpassId}`)\n                    toast.success((t('relations.account.classpasses.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n              <AccountClasspassForm\n                inputData={inputData}\n                isSubmitting={isSubmitting}\n                setFieldValue={setFieldValue}\n                setFieldTouched={setFieldTouched}\n                errors={errors}\n                values={values}\n                returnUrl={returnUrl}\n              >\n                {console.log(errors)}\n              </AccountClasspassForm>\n            )}\n          </Formik>\n      </Card>\n    </RelationsAccountProfileBase>\n  ) \n}\n\nexport default withTranslation()(withRouter(AccountClasspassAdd))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_CLASSPASSES_QUERY, GET_ACCOUNT_CLASSPASS_QUERY, UPDATE_ACCOUNT_CLASSPASS } from './queries'\nimport { CLASSPASS_SCHEMA } from './yupSchema'\nimport AccountClasspassForm from './AccountClasspassForm'\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase';\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport ProfileMenu from \"../ProfileMenu\"\n\n\nfunction AccountClasspassEdit({t, history, match}) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const activeLink = \"classpasses\"\n  const cardTitle = t('relations.account.classpasses.title_edit')\n  const returnUrl = `/relations/accounts/${accountId}/classpasses`\n  \n  const {loading, error, data} = useQuery(GET_ACCOUNT_CLASSPASS_QUERY, {\n    variables: { id: id, accountId: accountId }\n  })\n  const [updateClasspass] = useMutation(UPDATE_ACCOUNT_CLASSPASS)\n\n  const sidebarButton = <Link to={returnUrl}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const inputData = data\n  const account = data.account\n  const initialdata = data.accountClasspass\n\n    // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  let dateEnd = null\n  if (initialdata.dateStart) {\n    dateStart = new Date(initialdata.dateStart)\n  }\n  if (initialdata.dateEnd) {\n    dateEnd = new Date(initialdata.dateEnd)\n  }\n\n  return (\n    <RelationsAccountProfileBase\n      activeLink={activeLink}\n      user={account}\n      sidebarButton={sidebarButton} \n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n          <Formik\n            initialValues={{ \n              organizationClasspass: initialdata.organizationClasspass.id,\n              dateStart: dateStart,\n              dateEnd: dateEnd,\n              note: initialdata.note,\n            }}\n            validationSchema={CLASSPASS_SCHEMA}\n            onSubmit={(values, { setSubmitting }, errors) => {\n                console.log('submit values:')\n                console.log(values)\n                console.log(errors)\n\n                \n                let dateEnd\n                if (values.dateEnd) {\n                  dateEnd = dateToLocalISO(values.dateEnd)\n                } else {\n                  dateEnd = values.dateEnd\n                }\n\n                updateClasspass({ variables: {\n                  input: {\n                    id: id,\n                    organizationClasspass: values.organizationClasspass,\n                    dateStart: dateToLocalISO(values.dateStart),\n                    dateEnd: dateEnd,\n                    note: values.note,\n                  }\n                }, refetchQueries: [\n                    {query: GET_ACCOUNT_CLASSPASSES_QUERY, variables: { accountId: accountId }}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    toast.success((t('relations.account.classpasses.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n              <AccountClasspassForm\n                inputData={inputData}\n                isSubmitting={isSubmitting}\n                setFieldValue={setFieldValue}\n                setFieldTouched={setFieldTouched}\n                errors={errors}\n                values={values}\n                returnUrl={returnUrl}\n              >\n                {console.log(errors)}\n              </AccountClasspassForm>\n            )}\n          </Formik>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountClasspassEdit))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_DOCUMENTS_QUERY = gql`\n  query AccountDocuments($account: ID!) {\n    accountDocuments(account:$account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          description\n          urlProtectedDocument\n          createdAt\n        }\n      }\n    }\n    account(id:$account) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const GET_DOCUMENT_QUERY = gql`\n  query AccountDocument($id: ID!, $account: ID!) {\n    accountDocument(id:$id) {\n      id\n      description\n    }\n    account(id:$account) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const ADD_DOCUMENT = gql`\n  mutation CreateAccountDocument($input:CreateAccountDocumentInput!) {\n    createAccountDocument(input: $input) {\n      accountDocument{\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_DOCUMENT = gql`\n  mutation UpdateAccountDocument($input:UpdateAccountDocumentInput!) {\n    updateAccountDocument(input: $input) {\n      accountDocument{\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_DOCUMENT = gql`\n  mutation DeleteAccountDocument($input:DeleteAccountDocumentInput!) {\n    deleteAccountDocument(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button\n} from \"tabler-react\";\n\nimport { TOKEN_REFRESH } from \"../../queries/system/auth\"\nimport { refreshTokenAndOpenExportLinkInNewTab } from \"../../tools/refresh_token_and_open_export_link\"\n\n\nfunction FileProtectedDownloadTableButton({ t, history, protectedMediaUrl, className=\"\" }) {\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n\n  return (\n    <Button \n      color={\"secondary \" + className}\n      size=\"sm\"\n      icon=\"download-cloud\"\n      RootComponent=\"a\" \n      onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n      doTokenRefresh, history, protectedMediaUrl\n    )}\n    >\n      {t('general.download')}\n    </Button>\n  )\n}\n\nexport default withTranslation()(withRouter(FileProtectedDownloadTableButton))\n\n\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Icon,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase'\nimport FileDownloadTableButton from \"../../../ui/FileDownloadTableButton\"\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport { GET_DOCUMENTS_QUERY, DELETE_DOCUMENT } from \"./queries\"\nimport moment from 'moment'\n\nimport FileProtectedDownloadTableButton from \"../../../ui/FileProtectedDownloadTableButton\"\n\n\nfunction AccountDocuments({t, match}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  const accountId = match.params.account_id\n  const activeLink = \"documents\"\n  const cardTitle = t('relations.account.documents.title')\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"add\"\n    resource=\"accountdocument\">\n      <Link to={`/relations/accounts/${accountId}/documents/add`}>\n        <Button color=\"primary btn-block mb-6\">\n          <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.documents.add')}\n        </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  const {loading, error, data, fetchMore} = useQuery(GET_DOCUMENTS_QUERY, {\n    variables: { account: accountId }\n  })\n  const [deleteAccountDocument] = useMutation(DELETE_DOCUMENT)\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const account = data.account\n  const accountDocuments = data.accountDocuments\n  console.log(accountDocuments)\n\n  return (\n    <RelationsAccountProfileBase \n      user={account}\n      activeLink={activeLink}\n      sidebarButton={sidebarButton}\n    >\n      <ContentCard \n        cardTitle={t('relations.account.documents.title')}\n        pageInfo={accountDocuments.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: accountDocuments.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountDocuments.edges\n              const pageInfo = fetchMoreResult.accountDocuments.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountDocuments at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    accountDocuments: {\n                      __typename: previousResult.accountDocuments.__typename,\n                      edges: [ ...previousResult.accountDocuments.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.document')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.download')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader> \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {accountDocuments.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.description}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {moment(node.createdAt).format(dateFormat)}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <FileProtectedDownloadTableButton protectedMediaUrl={node.urlProtectedDocument} />\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={\"/relations/accounts/\" + accountId + \"/documents/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"relations.account.documents.delete_confirm_msg\"),\n                          msgDescription: <p>{node.description}</p>,\n                          msgSuccess: t('relations.account.documents.deleted'),\n                          deleteFunction: deleteAccountDocument,\n                          functionVariables: { variables: {\n                            input: {\n                              id: node.id\n                            }\n                          }, refetchQueries: [\n                            {query: GET_DOCUMENTS_QUERY, variables: { account: accountId }} \n                          ]}\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>    \n    </RelationsAccountProfileBase>\n  )\n}\n\n        \nexport default withTranslation()(withRouter(AccountDocuments))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\nimport { customFileInputLabelStyle } from \"../../../../tools/custom_file_input_label_style\"\n  \n\nfunction AccountDocumentForm({ t, history, errors, values, isSubmitting, returnUrl, inputFileName, fileInputLabel, handleFileInputChange=f=>f, }) {\n  return (\n    <FoForm>\n      <Card.Body> \n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.description')}>\n              <Field type=\"text\" \n                    name=\"description\" \n                    className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row> \n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.custom_file_input_label')}>\n              <div className=\"custom-file\">\n                <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                  {fileInputLabel}\n                </label>\n              </div>\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            className=\"pull-right\"\n            color=\"primary\"\n            disabled={isSubmitting}\n            type=\"submit\"\n          >\n            {t('general.submit')}\n          </Button>\n          <Button\n            type=\"button\" \n            color=\"link\" \n            onClick={() => history.push(returnUrl)}\n          >\n            {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountDocumentForm))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_DOCUMENTS_QUERY, ADD_DOCUMENT } from './queries'\nimport { GET_ACCOUNT_QUERY } from '../queries'\n// import { CLASSPASS_SCHEMA } from './yupSchema'\nimport AccountClasspassForm from './AccountDocumentForm'\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase';\n\nimport {\n  Icon,\n  Button,\n  Card,\n} from \"tabler-react\";\n\n\nfunction AccountDocumentAdd({t, match, history}) {\n  const accountId = match.params.account_id\n  const activeLink = \"classpasses\"\n  const cardTitle = t('relations.account.documents.title_add')\n  const returnUrl = `/relations/accounts/${accountId}/documents`\n  \n  const { loading, error, data } = useQuery(GET_ACCOUNT_QUERY, {\n    variables: { id: accountId }\n  })\n  const [addAccountDocument] = useMutation(ADD_DOCUMENT)\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n\n  const sidebarButton = <Link to={returnUrl}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n  \n  const inputData = data\n  const account = data.account\n\n  return (\n    <RelationsAccountProfileBase\n      activeLink={activeLink}\n      user={account}\n      sidebarButton={sidebarButton} \n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            description: \"\"\n          }}\n          // validationSchema={CLASSPASS_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log(\"Submit values\")\n            console.log(values)\n            console.log(fileName)\n  \n            let inputVars = {\n              account: accountId,\n              description: values.description,\n              documentFileName: fileName,\n            }\n  \n            let reader = new FileReader()\n            reader.onload = function(reader_event) {\n              console.log(reader_event.target.result)\n              let b64_enc_file = reader_event.target.result\n              console.log(b64_enc_file)\n              // Add uploaded document b64 encoded blob to input vars\n              inputVars.document = b64_enc_file\n  \n              addAccountDocument({ variables: {\n                input: inputVars\n              }, refetchQueries: [\n                  {query: GET_DOCUMENTS_QUERY, variables: {account: accountId}}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data);\n                  history.push(returnUrl)\n                  toast.success((t('relations.account.documents.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                    setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n            }\n            \n            let file = inputFileName.current.files[0]\n            if (file && file.size < 5242880) {\n              reader.readAsDataURL(file)\n            } else if (file && file.size > 5242880) { \n              toast.error(t(\"error_messages.selected_file_exceeds_max_filesize\"), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            } else {\n              toast.error(t(\"general.please_select_a_file\"), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <AccountClasspassForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              inputFileName={inputFileName}\n              fileInputLabel={fileInputLabel}\n              handleFileInputChange={handleFileInputChange}\n              returnUrl={returnUrl}\n            >\n              {console.log(errors)}\n            </AccountClasspassForm>\n          )}\n        </Formik>\n      </Card>\n    </RelationsAccountProfileBase>\n  ) \n}\n\nexport default withTranslation()(withRouter(AccountDocumentAdd))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const DOCUMENT_SCHEMA = Yup.object().shape({\n    description: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n  \n\nfunction AccountDocumentFormEdit({ t, history, errors, values, isSubmitting, returnUrl }) {\n  return (\n    <FoForm>\n      <Card.Body> \n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.description')}>\n              <Field type=\"text\" \n                    name=\"description\" \n                    className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row> \n      </Card.Body>\n      <Card.Footer>\n          <Button \n            className=\"pull-right\"\n            color=\"primary\"\n            disabled={isSubmitting}\n            type=\"submit\"\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button\n              type=\"button\" \n              color=\"link\"\n            >\n              {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountDocumentFormEdit))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_DOCUMENTS_QUERY, GET_DOCUMENT_QUERY, UPDATE_DOCUMENT } from './queries'\nimport { DOCUMENT_SCHEMA } from './yupSchema'\nimport AccountDocumentFormEdit from './AccountDocumentFormEdit'\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase';\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport ProfileMenu from \"../ProfileMenu\"\n\n\nfunction AccountDocumentEdit({t, history, match}) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const activeLink = \"documents\"\n  const cardTitle = t('relations.account.documents.title_edit')\n  const returnUrl = `/relations/accounts/${accountId}/documents`\n  \n  const {loading, error, data} = useQuery(GET_DOCUMENT_QUERY, {\n    variables: { id: id, account: accountId }\n  })\n  const [updateDocument] = useMutation(UPDATE_DOCUMENT)\n\n  const sidebarButton = <Link to={returnUrl}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const inputData = data\n  const account = data.account\n  const initialdata = data.accountDocument\n\n  return (\n    <RelationsAccountProfileBase\n      activeLink={activeLink}\n      user={account}\n      sidebarButton={sidebarButton} \n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            description: initialdata.description,\n          }}\n          validationSchema={DOCUMENT_SCHEMA}\n          onSubmit={(values, { setSubmitting }, errors) => {\n              console.log('submit values:')\n              console.log(values)\n              console.log(errors)\n\n              updateDocument({ variables: {\n                input: {\n                  id: id,\n                  description: values.description\n                }\n              }, refetchQueries: [\n                {query: GET_DOCUMENTS_QUERY, variables: { account: accountId }}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('relations.account.documents.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <AccountDocumentFormEdit\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n            >\n              {console.log(errors)}\n            </AccountDocumentFormEdit>\n          )}\n        </Formik>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountDocumentEdit))\n","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport { GET_ACCOUNT_QUERY } from '../queries'\n\n\nfunction AccountFinancePaymentBatchcAtegoryItemsBase({ t, history, match, children, showBack=false }) {\n  const accountId = match.params.account_id\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_QUERY, {\n    variables: { id: accountId }\n  })\n\n  if (loading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (error) {\n    console.log(error)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n\n  const account = data.account\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.firstName + \" \" + account.lastName}>\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              {!(showBack) ?\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"accountfinancepaymentbatchcategoryitem\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/finance_payment_batch_category_items/add`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.finance_payment_batch_category_items.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              {(showBack) ?\n                <HasPermissionWrapper permission=\"view\"\n                                      resource=\"accountfinancepaymentbatchcategoryitem\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/finance_payment_batch_category_items/`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\"\n              }\n              <ProfileMenu \n                activeLink='finance_payment_batch_category_item'\n                accountId={accountId}\n              /> \n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}    \n        \nexport default withTranslation()(withRouter(AccountFinancePaymentBatchcAtegoryItemsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY = gql`\n  query AccountFinancePaymentBatchCategoryItems($after: String, $before: String, $account: ID!) {\n    accountFinancePaymentBatchCategoryItems(first: 15, before: $before, after: $after, account: $account) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          financePaymentBatchCategory {\n            id\n            name\n          }\n          year\n          month\n          amountDisplay\n          description\n        }\n      }\n    }\n  }\n`\n\nexport const GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_QUERY = gql`\n  query AccountFinancePaymentBatchCategoryItem($id: ID!) {\n    accountFinancePaymentBatchCategoryItem(id: $id) {\n      id\n      financePaymentBatchCategory {\n        id\n        name\n      }\n      year\n      month\n      amount\n      description\n    }\n    financePaymentBatchCategories(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          batchCategoryType\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query AccountPaymentBatchCategoryItemInputValues($after: String, $before: String) {\n    financePaymentBatchCategories(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          batchCategoryType\n        }\n      }\n    }\n  }\n`\n\nexport const CREATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM = gql`\n  mutation CreateAccountFinancePaymentBatchCategoryItem($input: CreateAccountFinancePaymentBatchCategoryItemInput!) {\n    createAccountFinancePaymentBatchCategoryItem(input: $input) {\n      accountFinancePaymentBatchCategoryItem {\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM = gql`\n  mutation UpdateAccountFinancePaymentBatchCategoryItem($input: UpdateAccountFinancePaymentBatchCategoryItemInput!) {\n    updateAccountFinancePaymentBatchCategoryItem(input: $input) {\n      accountFinancePaymentBatchCategoryItem {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM = gql`\n  mutation DeleteAccountFinancePaymentBatchCategoryItem($input: DeleteAccountFinancePaymentBatchCategoryItemInput!) {\n    deleteAccountFinancePaymentBatchCategoryItem(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport AccountFinancePaymentBatchCategoryItemsBase from \"./AccountFinancePaymentBatchCategoryItemsBase\"\n\nimport { \n  GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY,\n  DELETE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM\n} from \"./queries\"\n\n\n\nfunction AccountFinancePaymentBatchCategoryItems({ t, history, match }) {\n  const accountId = match.params.account_id\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, {\n    variables: { account: accountId }\n  })\n  const [deleteAccountFinancePaymentBatchCategoryItem] = useMutation(DELETE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM)\n\n  if (loading) return (\n    <AccountFinancePaymentBatchCategoryItemsBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AccountFinancePaymentBatchCategoryItemsBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountFinancePaymentBatchCategoryItemsBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AccountFinancePaymentBatchCategoryItemsBase>\n    )\n  }\n\n  let batchCategoryItems = data.accountFinancePaymentBatchCategoryItems\n\n  return (\n    <AccountFinancePaymentBatchCategoryItemsBase>\n      <ContentCard \n        cardTitle={t('relations.account.finance_payment_batch_category_items.title')}\n        hasCardBody={false}\n        pageInfo={batchCategoryItems.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: batchCategoryItems.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountFinancePaymentBatchCategoryItems.edges\n              const pageInfo = fetchMoreResult.accountFinancePaymentBatchCategoryItems.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountClasspasses at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    batchCategoryItems: {\n                      __typename: previousResult.accountFinancePaymentBatchCategoryItems.__typename,\n                      edges: [ ...previousResult.accountFinancePaymentBatchCategoryItems.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table cards>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.year')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.month')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.amount')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.category')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader> \n              <Table.ColHeader></Table.ColHeader> \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {batchCategoryItems.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.year}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.month}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.amountDisplay}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.financePaymentBatchCategory.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.description.replace(/(.{28})..+/, \"$1...\")}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={`/relations/accounts/${match.params.account_id}/finance_payment_batch_category_items/edit/${node.id}`}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col>\n                    <button \n                      className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"relations.account.finance_payment_batch_category_items.delete_confirm_msg\"),\n                          msgDescription: <p><br />{node.financePaymentBatchCategory.name} {node.amountDisplay} <br/>{node.description}</p>,\n                          msgSuccess: t('relations.account.finance_payment_batch_category_items.deleted'),\n                          deleteFunction: deleteAccountFinancePaymentBatchCategoryItem,\n                          functionVariables: { variables: {\n                            input: {\n                              id: node.id\n                            }\n                          }, refetchQueries: [\n                            {query: GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, variables: { \n                              account: accountId\n                            }} \n                          ]}\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </AccountFinancePaymentBatchCategoryItemsBase>\n  )\n}\n      \n        \nexport default withTranslation()(withRouter(AccountFinancePaymentBatchCategoryItems))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA = Yup.object().shape({\n  financePaymentBatchCategory: Yup.string()\n    .required(t('yup.field_required')),\n  year: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  month: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  amount: Yup.number()\n    .required(t('yup.field_required')),\n  description: Yup.string(),\n})\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\nimport { Link } from \"react-router-dom\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountFinancePaymentBatchCategoryItemsForm = ({ t, history, inputData, isSubmitting, errors, returnUrl }) => (\n  <FoForm>\n    <Card.Body> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.year')} >\n            <Field type=\"text\" \n                  name=\"year\" \n                  className={(errors.year) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"year\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.month')} >\n            <Field type=\"text\" \n                  name=\"month\" \n                  className={(errors.month) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"month\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.amount')} >\n            <Field type=\"text\" \n                  name=\"amount\" \n                  className={(errors.amount) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"amount\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.category')}>\n            <Field component=\"select\" \n                  name=\"financePaymentBatchCategory\" \n                  className={(errors.financePaymentBatchCategory) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n              {inputData.financePaymentBatchCategories.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"financePaymentBatchCategory\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.description')} >\n            <Field type=\"text\" \n                  name=\"description\" \n                  className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button\n            type=\"button\" \n            color=\"link\" \n          >\n            {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountFinancePaymentBatchCategoryItemsForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { \n  GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, \n  CREATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM,\n  GET_INPUT_VALUES_QUERY \n} from './queries'\nimport { ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA } from './yupSchema'\nimport AccountFinancePaymentBatchCategoryItemsForm from './AccountFinancePaymentBatchCategoryItemsForm'\n\nimport {\n  Card,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport AccountFinancePaymentBatchCategoryItemsBase from \"./AccountFinancePaymentBatchCategoryItemsBase\"\n\nfunction AccountFinancePaymentBatchCategoryItemAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const returnUrl = `/relations/accounts/${accountId}/finance_payment_batch_category_items`\n\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES_QUERY)\n  const [addAccountFinancePaymentBatchCategoryItem] = useMutation(\n    CREATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM\n  )\n\n  if (loading) {\n    return (\n      <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n        <Card title={t('relations.account.finance_payment_batch_category_items.title_add')}>\n          <Card.Body>\n            {t(\"general.loading_with_dots\")}\n          </Card.Body>\n        </Card>\n      </AccountFinancePaymentBatchCategoryItemsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n        <Card title={t('relations.account.finance_payment_batch_category_items.title_add')}>\n          <Card.Body>\n            {t(\"relations.account.finance_payment_batch_category_items.error_loading\")}\n          </Card.Body>\n        </Card>\n      </AccountFinancePaymentBatchCategoryItemsBase>\n    )\n  }\n\n  const inputData = data\n\n  return (\n    <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n      <Card title={t('relations.account.finance_payment_batch_category_items.title_add')}>\n        <Formik\n          initialValues={{ \n            financePaymentBatchCategory: \"\",\n            year: new Date().getFullYear(),\n            month: new Date().getMonth() + 1,\n            amount: \"\",\n            description: \"\"\n          }}\n          validationSchema={ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA}\n          onSubmit={(values, { setSubmitting }, errors) => {\n              console.log('submit values:')\n              console.log(values)\n              console.log(errors)\n\n              addAccountFinancePaymentBatchCategoryItem({ variables: {\n                input: {\n                  account: accountId, \n                  amount: values.amount,\n                  year: values.year,\n                  month: values.month,\n                  financePaymentBatchCategory: values.financePaymentBatchCategory,\n                  description: values.description\n                }\n              }, refetchQueries: [\n                  {query: GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, variables: {account: accountId}}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('relations.account.finance_payment_batch_category_items.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <AccountFinancePaymentBatchCategoryItemsForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              errors={errors}\n              returnUrl={returnUrl}\n            >\n              {console.log(errors)}\n            </AccountFinancePaymentBatchCategoryItemsForm>\n          )}\n        </Formik>\n      </Card>\n    </AccountFinancePaymentBatchCategoryItemsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountFinancePaymentBatchCategoryItemAdd))\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { \n  GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, \n  GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_QUERY, \n  UPDATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM\n} from './queries'\nimport { ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA } from './yupSchema'\nimport AccountFinancePaymentBatchCategoryItemsForm from './AccountFinancePaymentBatchCategoryItemsForm'\n\nimport {\n  Card,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport AccountFinancePaymentBatchCategoryItemsBase from \"./AccountFinancePaymentBatchCategoryItemsBase\"\n\nfunction AccountFinancePaymentBatchCategoryItemEdit({ t, history, match }) {\n  const accountId = match.params.account_id\n  const accountFinancePaymentBatchCategoryItemId = match.params.id\n  const returnUrl = `/relations/accounts/${accountId}/finance_payment_batch_category_items`\n  const cardTitle = t('relations.account.finance_payment_batch_category_items.title_edit')\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_QUERY, { variables: {\n    id: accountFinancePaymentBatchCategoryItemId\n  }})\n  const [updateAccountFinancePaymentBatchCategoryItem] = useMutation(\n    UPDATE_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM\n  )\n\n  if (loading) {\n    return (\n      <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            {t(\"general.loading_with_dots\")}\n          </Card.Body>\n        </Card>\n      </AccountFinancePaymentBatchCategoryItemsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            {t(\"relations.account.finance_payment_batch_category_items.error_loading\")}\n          </Card.Body>\n        </Card>\n      </AccountFinancePaymentBatchCategoryItemsBase>\n    )\n  }\n\n  const inputData = data\n  const initialValues = data.accountFinancePaymentBatchCategoryItem\n\n  return (\n    <AccountFinancePaymentBatchCategoryItemsBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            financePaymentBatchCategory: initialValues.financePaymentBatchCategory.id,\n            year: initialValues.year,\n            month: initialValues.month,\n            amount: initialValues.amount,\n            description: initialValues.description\n          }}\n          validationSchema={ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA}\n          onSubmit={(values, { setSubmitting }, errors) => {\n              console.log('submit values:')\n              console.log(values)\n              console.log(errors)\n\n              updateAccountFinancePaymentBatchCategoryItem({ variables: {\n                input: {\n                  id: accountFinancePaymentBatchCategoryItemId, \n                  amount: values.amount,\n                  year: values.year,\n                  month: values.month,\n                  financePaymentBatchCategory: values.financePaymentBatchCategory,\n                  description: values.description\n                }\n              }, refetchQueries: [\n                  {query: GET_ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEMS_QUERY, variables: {account: accountId}}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('relations.account.finance_payment_batch_category_items.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values }) => (\n            <AccountFinancePaymentBatchCategoryItemsForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              errors={errors}\n              returnUrl={returnUrl}\n            >\n              {console.log(errors)}\n            </AccountFinancePaymentBatchCategoryItemsForm>\n          )}\n        </Formik>\n      </Card>\n    </AccountFinancePaymentBatchCategoryItemsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountFinancePaymentBatchCategoryItemEdit))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_INVOICES_QUERY = gql`\n  query FinanceInvoices($after: String, $before: String, $status: String, $accountId: ID!) {\n    financeInvoices(first: 15, before: $before, after: $after, status: $status, account: $accountId) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          invoiceNumber\n          status\n          summary\n          relationCompany\n          relationContactName\n          dateSent\n          dateDue\n          total\n          totalDisplay\n          balance\n          balanceDisplay\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      fullName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\n// export const GET_ACCOUNT_SUBSCRIPTION_QUERY = gql`\n//   query AccountSubscription($id: ID!, $accountId: ID!, $after: String, $before: String) {\n//     accountSubscription(id:$id) {\n//       id\n//       organizationSubscription {\n//         id\n//         name\n//       }\n//       financePaymentMethod {\n//         id\n//         name\n//       }\n//       dateStart\n//       dateEnd\n//       note\n//       registrationFeePaid\n//       createdAt\n//     }\n//     organizationSubscriptions(first: 100, before: $before, after: $after, archived: false) {\n//       pageInfo {\n//         startCursor\n//         endCursor\n//         hasNextPage\n//         hasPreviousPage\n//       }\n//       edges {\n//         node {\n//           id\n//           archived\n//           name\n//         }\n//       }\n//     }\n//     financePaymentMethods(first: 100, before: $before, after: $after, archived: false) {\n//       pageInfo {\n//         startCursor\n//         endCursor\n//         hasNextPage\n//         hasPreviousPage\n//       }\n//       edges {\n//         node {\n//           id\n//           archived\n//           name\n//           code\n//         }\n//       }\n//     }\n//     account(id:$accountId) {\n//       id\n//       firstName\n//       lastName\n//       email\n//       phone\n//       mobile\n//       isActive\n//     }\n//   }\n// `\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InvoiceInputValues($after: String, $before: String, $accountId: ID!) {\n    financeInvoiceGroups(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const CREATE_ACCOUNT_INVOICE = gql`\n  mutation CreateFinanceInvoice($input: CreateFinanceInvoiceInput!) {\n    createFinanceInvoice(input: $input) {\n      financeInvoice {\n        id\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nfunction AccountInvoicesBase({ t, match, history, children, account={} }) {\n  const accountId = match.params.account_id\n  let pageHeader\n  if (account) {\n    pageHeader = account.fullName\n  }\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={pageHeader} >\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"financeinvoice\">\n                  <Link to={`/relations/accounts/${accountId}/invoices/add`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.invoices.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n              <ProfileMenu \n                activeLink='invoices' \n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountInvoicesBase))\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport moment from 'moment'\n\nimport {\n  Card,\n  Icon,\n  Button,\n  Table,\n  Text\n} from \"tabler-react\";\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport { GET_ACCOUNT_INVOICES_QUERY } from \"./queries\"\nimport CSLS from \"../../../../tools/cs_local_storage\"\nimport { DELETE_FINANCE_INVOICE } from \"../../../finance/invoices/queries\"\nimport FinanceInvoiceStatus from \"../../../ui/FinanceInvoiceStatus\"\nimport AccountInvoicesBase from './AccountInvoicesBase'\n\n\nfunction AccountInvoices({ t, location, match, history }) {\n  const accountId = match.params.account_id\n  const cardTitle = t('relations.account.invoices.title')\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_INVOICES_QUERY, {\n    variables: {accountId: accountId},\n    fetchPolicy: \"network-only\"\n  })\n  const [deleteFinanceInvoice] = useMutation(DELETE_FINANCE_INVOICE)\n\n  // Loading\n  if (loading) return (\n    <AccountInvoicesBase>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>\n        </Card.Body>\n      </Card>\n    </AccountInvoicesBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountInvoicesBase>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('general.error_sad_smiley')}</p>\n          </Card.Body>\n        </Card>\n      </AccountInvoicesBase>\n    )\n  }\n\n  // Set back location for edit invoice\n  localStorage.setItem(CSLS.FINANCE_INVOICES_EDIT_RETURN, location.pathname)\n\n  let financeInvoices = data.financeInvoices\n  const account = data.account\n  \n  return (\n    <AccountInvoicesBase account={account}>\n      <ContentCard \n        cardTitle={cardTitle}\n        pageInfo={financeInvoices.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: financeInvoices.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.financeInvoices.edges\n              const pageInfo = fetchMoreResult.financeInvoices.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new financeInvoices at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    financeInvoices: {\n                      __typename: previousResult.financeInvoices.__typename,\n                      edges: [ ...previousResult.financeInvoices.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoices.invoice_number')} & {t('finance.invoices.summary')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.invoices.date')} & {t('finance.invoices.due')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.balance')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {financeInvoices.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    <FinanceInvoiceStatus status={node.status} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.invoiceNumber} <br />\n                    <Text.Small color=\"gray\">{node.summary.trunc(35)}</Text.Small>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {moment(node.dateSent).format('LL')} <br />\n                    <Text.Small color=\"gray\">{moment(node.dateDue).format('LL')}</Text.Small>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.totalDisplay}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.balanceDisplay}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Button className='btn-sm' \n                            onClick={() => history.push(\"/finance/invoices/edit/\" + node.id)}\n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"finance.invoices.delete_confirm_msg\"),\n                          msgDescription: <p>{node.invoiceNumber}</p>,\n                          msgSuccess: t('finance.invoices.deleted'),\n                          deleteFunction: deleteFinanceInvoice,\n                          functionVariables: { \n                            variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, \n                            refetchQueries: [\n                              {query: GET_ACCOUNT_INVOICES_QUERY, variables: {accountId: accountId}},\n                            ]\n                          }\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </AccountInvoicesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountInvoices))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountInvoiceAddForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, return_url }) => (\n  <FoForm>\n    <Card.Body>\n      <Form.Group label={t('general.finance_invoice_group')}>\n        <Field component=\"select\" \n              name=\"financeInvoiceGroup\" \n              className={(errors.financeInvoiceGroup) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\">\n          <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n          {inputData.financeInvoiceGroups.edges.map(({ node }) =>\n            <option value={node.id} key={v4()}>{node.name}</option>\n          )}\n        </Field>\n        <ErrorMessage name=\"financeInvoiceGroup\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.summary')}>\n        <Field type=\"text\" \n                name=\"summary\" \n                className={(errors.summary) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"summary\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={return_url}>\n          <Button\n            type=\"button\" \n            color=\"link\" \n          >\n              {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountInvoiceAddForm))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const SUBSCRIPTION_SCHEMA = Yup.object().shape({\n  organizationSubscription: Yup.string()\n    .required(t('yup.field_required')),\n  financePaymentMethod: Yup.string(),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .nullable(),\n  registrationFeePaid: Yup.boolean(),\n  note: Yup.string(),\n})\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTIONS_QUERY, GET_INPUT_VALUES_QUERY, CREATE_ACCOUNT_INVOICE } from './queries'\nimport { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport AccountInvoiceAddForm from './AccountInvoiceAddForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase'\nimport ProfileMenu from \"../ProfileMenu\"\n\n\n\nfunction AccountInvoiceAdd({ t, match, history }) {\n  const account_id = match.params.account_id\n  const activeLink = \"invoices\"\n  const cardTitle = t('relations.account.invoices.title_add')\n  const returnUrl = `/relations/accounts/${account_id}/invoices`\n  const sidebarButton = <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES_QUERY, {\n      variables: {\n        accountId: account_id\n      }\n    }\n  )\n  const [createInvoice] = useMutation(CREATE_ACCOUNT_INVOICE, {\n    // onCompleted = () => history.push('/finance/invoices/edit/')\n  }) \n\n  // Query\n  // Loading\n  if (loading) {\n    return <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('general.loading_with_dots')}</p>\n          </Card.Body>\n        </Card>\n      </RelationsAccountProfileBase>\n  }\n  // Error\n  if (error) {\n    console.log(error)\n    return <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('general.error_sad_smiley')}</p>\n          </Card.Body>\n        </Card>\n      </RelationsAccountProfileBase>\n  }\n  \n  console.log(data)\n  const account = data.account\n\n\n  return (\n    <RelationsAccountProfileBase activeLink={activeLink} user={account} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{\n            financeInvoiceGroup: \"\",\n            summary: \"\"\n          }}\n          // validationSchema={INVOICE_GROUP_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            createInvoice({ variables: {\n              input: {\n                account: account_id, \n                financeInvoiceGroup: values.financeInvoiceGroup,\n                summary: values.summary\n              }\n            }, refetchQueries: [\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('relations.account.invoices.title_add')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                history.push('/finance/invoices/edit/' + data.createFinanceInvoice.financeInvoice.id)\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n            }}\n        >\n          {({ isSubmitting, errors, values, submitForm, setFieldTouched, setFieldValue }) => (\n            <AccountInvoiceAddForm\n              inputData={data}\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              submitForm={submitForm}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              return_url={returnUrl}\n            >\n            </AccountInvoiceAddForm>   \n          )}\n        </Formik>\n      </Card>\n    </RelationsAccountProfileBase>\n\n    // <SiteWrapper>\n    //   <div className=\"my-3 my-md-5\">\n    //     <Container>\n    //       <Page.Header title={account.firstName + \" \" + account.lastName} />\n    //       <Grid.Row>\n    //           <Grid.Col md={9}>\n                \n    //           </Grid.Col>\n    //           <Grid.Col md={3}>\n    //             <ProfileMenu \n    //               activeLink='invoices'\n    //               accountId={match.params.account_id}\n    //             />\n    //           </Grid.Col>\n    //         </Grid.Row>\n    //       </Container>\n    //   </div>\n    // </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountInvoiceAdd))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_MEMBERSHIPS_QUERY = gql`\n  query AccountMemberships($after: String, $before: String, $accountId: ID!) {\n    accountMemberships(first: 15, before: $before, after: $after, account: $accountId) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationMembership {\n            id\n            name\n          }\n          financePaymentMethod {\n            id\n            name\n          }\n          dateStart\n          dateEnd\n          createdAt\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\nexport const GET_ACCOUNT_MEMBERSHIP_QUERY = gql`\n  query AccountMembership($id: ID!, $accountId: ID!, $after: String, $before: String, $archived: Boolean!) {\n    accountMembership(id:$id) {\n      id\n      organizationMembership {\n        id\n        name\n      }\n      financePaymentMethod {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      note\n      createdAt\n    }\n    organizationMemberships(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query MembershipInputValues($after: String, $before: String, $archived: Boolean!, $accountId: ID!) {\n    organizationMemberships(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport { GET_ACCOUNT_MEMBERSHIPS_QUERY } from \"./queries\"\n\nconst DELETE_ACCOUNT_MEMBERSHIP = gql`\n  mutation DeleteAccountMembership($input: DeleteAccountMembershipInput!) {\n    deleteAccountMembership(input: $input) {\n      ok\n    }\n  }\n`\n\n\nconst AccountMemberships = ({ t, history, match, archived=false }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Query query={GET_ACCOUNT_MEMBERSHIPS_QUERY} variables={{ archived: archived, accountId: match.params.account_id }}> \n        {({ loading, error, data, refetch, fetchMore }) => {\n          // Loading\n          if (loading) return <p>{t('general.loading_with_dots')}</p>\n          // Error\n          if (error) {\n            console.log(error)\n            return <p>{t('general.error_sad_smiley')}</p>\n          }\n\n          const account = data.account\n          const accountMemberships = data.accountMemberships\n\n          return (\n            <Container>\n              <Page.Header title={account.firstName + \" \" + account.lastName} >\n                <RelationsAccountsBack />\n              </Page.Header>\n              <Grid.Row>\n                <Grid.Col md={9}>\n                  <ContentCard \n                    cardTitle={t('relations.account.memberships.title')}\n                    pageInfo={accountMemberships.pageInfo}\n                    onLoadMore={() => {\n                      fetchMore({\n                        variables: {\n                          after: accountMemberships.pageInfo.endCursor\n                        },\n                        updateQuery: (previousResult, { fetchMoreResult }) => {\n                          const newEdges = fetchMoreResult.accountMemberships.edges\n                          const pageInfo = fetchMoreResult.accountMemberships.pageInfo\n\n                          return newEdges.length\n                            ? {\n                                // Put the new accountMemberships at the end of the list and update `pageInfo`\n                                // so we have the new `endCursor` and `hasNextPage` values\n                                accountMemberships: {\n                                  __typename: previousResult.accountMemberships.__typename,\n                                  edges: [ ...previousResult.accountMemberships.edges, ...newEdges ],\n                                  pageInfo\n                                }\n                              }\n                            : previousResult\n                        }\n                      })\n                    }} \n                  >\n                    <Table>\n                      <Table.Header>\n                        <Table.Row key={v4()}>\n                          <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                          <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                          <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                          <Table.ColHeader>{t('general.payment_method')}</Table.ColHeader>\n                          <Table.ColHeader></Table.ColHeader> \n                        </Table.Row>\n                      </Table.Header>\n                      <Table.Body>\n                          {accountMemberships.edges.map(({ node }) => (\n                            <Table.Row key={v4()}>\n                              <Table.Col key={v4()}>\n                                {node.organizationMembership.name}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.dateStart}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.dateEnd}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {(node.financePaymentMethod) ? node.financePaymentMethod.name : \"\"}\n                              </Table.Col>\n                              <Table.Col className=\"text-right\" key={v4()}>\n                                <Link to={\"/relations/accounts/\" + match.params.account_id + \"/memberships/edit/\" + node.id}>\n                                  <Button className='btn-sm' \n                                          color=\"secondary\">\n                                    {t('general.edit')}\n                                  </Button>\n                                </Link>\n                              </Table.Col>\n                              <Mutation mutation={DELETE_ACCOUNT_MEMBERSHIP} key={v4()}>\n                                {(deleteAccountMembership, { data }) => (\n                                  <Table.Col className=\"text-right\" key={v4()}>\n                                    <button className=\"icon btn btn-link btn-sm\" \n                                      title={t('general.delete')} \n                                      href=\"\"\n                                      onClick={() => {\n                                        confirm_delete({\n                                          t: t,\n                                          msgConfirm: t(\"relations.account.memberships.delete_confirm_msg\"),\n                                          msgDescription: <p>{node.organizationMembership.name} {node.dateStart}</p>,\n                                          msgSuccess: t('relations.account.memberships.deleted'),\n                                          deleteFunction: deleteAccountMembership,\n                                          functionVariables: { variables: {\n                                            input: {\n                                              id: node.id\n                                            }\n                                          }, refetchQueries: [\n                                            {query: GET_ACCOUNT_MEMBERSHIPS_QUERY, variables: { archived: archived, accountId: match.params.account_id }} \n                                          ]}\n                                        })\n                                    }}>\n                                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                                    </button>\n                                  </Table.Col>\n                                )}\n                              </Mutation>\n                            </Table.Row>\n                          ))}\n                      </Table.Body>\n                    </Table>\n                  </ContentCard>\n                </Grid.Col>\n                <Grid.Col md={3}>\n                  <ProfileCardSmall user={account}/>\n                  <HasPermissionWrapper permission=\"add\"\n                                        resource=\"accountmembership\">\n                    <Link to={\"/relations/accounts/\" + match.params.account_id + \"/memberships/add\"}>\n                      <Button color=\"primary btn-block mb-6\">\n                              {/* //  onClick={() => history.push(\"/organization/memberships/add\")}> */}\n                        <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.memberships.add')}\n                      </Button>\n                    </Link>\n                  </HasPermissionWrapper>\n                  <ProfileMenu \n                    activeLink='memberships' \n                    account_id={match.params.account_id}\n                  />\n                </Grid.Col>\n              </Grid.Row>\n            </Container>\n          )\n        }}\n      </Query>\n    </div>\n  </SiteWrapper>\n)\n      \n        \nexport default withTranslation()(withRouter(AccountMemberships))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const MEMBERSHIP_SCHEMA = Yup.object().shape({\n  organizationMembership: Yup.string()\n    .required(t('yup.field_required')),\n  financePaymentMethod: Yup.string(),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  // dateEnd: Yup.date()\n  //   .nullable(),\n  note: Yup.string(),\n})\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountMembershipForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, return_url }) => (\n  <FoForm>\n    <Card.Body> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.membership')}>\n            <Field component=\"select\" \n                  name=\"organizationMembership\" \n                  className={(errors.organizationMembership) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n              {inputData.organizationMemberships.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"organizationMembership\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.payment_method')}>\n            <Field component=\"select\" \n                  name=\"financePaymentMethod\" \n                  className={(errors.financePaymentMethod) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}></option>\n              {inputData.financePaymentMethods.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"financePaymentMethod\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row> \n      <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={(values.frequencyType == \"SPECIFIC\") ? t('general.date') : t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateEnd\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n            <Grid.Col>\n              <Form.Group label={t('general.date_end')}>\n                <CSDatePicker \n                  selected={values.dateEnd}\n                  onChange={(date) => {\n                    setFieldValue(\"dateEnd\", date)\n                    setFieldTouched(\"dateEnd\", true)\n                  }}\n                  onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                  placeholderText={t('schedule.classes.placeholder_enddate')}\n                />\n                <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          }\n        </Grid.Row>\n      <Form.Group label={t('general.note')}>\n        <Editor\n          tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n          textareaName=\"note\"\n          initialValue={values.note}\n          init={tinymceBasicConf}\n          onBlur={(e) => {\n            setFieldValue(\"note\", e.target.getContent())\n            setFieldTouched(\"note\", true, true)\n          }}\n        />\n        <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Button\n          type=\"button\" \n          color=\"link\" \n          onClick={() => history.push(return_url)}\n        >\n            {t('general.cancel')}\n        </Button>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountMembershipForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_MEMBERSHIPS_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { MEMBERSHIP_SCHEMA } from './yupSchema'\nimport AccountMembershipForm from './AccountMembershipForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport ProfileMenu from \"../ProfileMenu\"\n\n\nconst CREATE_ACCOUNT_MEMBERSHIP = gql`\n  mutation CreateAccountMembership($input: CreateAccountMembershipInput!) {\n    createAccountMembership(input: $input) {\n      accountMembership {\n        id\n        account {\n          id\n          firstName\n          lastName\n          email\n        }\n        organizationMembership {\n          id\n          name\n        }\n        financePaymentMethod {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        note     \n      }\n    }\n  }\n`\n\n\nclass AccountMembershipAdd extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Account membership add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const history = this.props.history\n    const match = this.props.match\n    const account_id = match.params.account_id\n    const return_url = \"/relations/accounts/\" + account_id + \"/memberships\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n        <Query query={GET_INPUT_VALUES_QUERY} variables = {{archived: false, accountId: account_id}} >\n          {({ loading, error, data, refetch }) => {\n            // Loading\n            if (loading) return <p>{t('general.loading_with_dots')}</p>\n            // Error\n            if (error) {\n              console.log(error)\n              return <p>{t('general.error_sad_smiley')}</p>\n            }\n            \n            console.log('query data')\n            console.log(data)\n            const inputData = data\n            const account = data.account\n\n            return (\n              <Container>\n               <Page.Header title={account.firstName + \" \" + account.lastName} />\n               <Grid.Row>\n                  <Grid.Col md={9}>\n                  <Card>\n                    <Card.Header>\n                      <Card.Title>{t('relations.account.memberships.title_add')}</Card.Title>\n                    </Card.Header>\n                      <Mutation mutation={CREATE_ACCOUNT_MEMBERSHIP} onCompleted={() => history.push(return_url)}> \n                      {(createMembership, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                organizationMembership: \"\",\n                                financePaymentMethod: \"\",\n                                dateStart: new Date(),\n                                note: \"\",\n                              }}\n                              validationSchema={MEMBERSHIP_SCHEMA}\n                              onSubmit={(values, { setSubmitting }, errors) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n                                  console.log(errors)\n\n                                  \n                                  let dateEnd\n                                  if (values.dateEnd) {\n                                    dateEnd = dateToLocalISO(values.dateEnd)\n                                  } else {\n                                    dateEnd = values.dateEnd\n                                  }\n\n                                  createMembership({ variables: {\n                                    input: {\n                                      account: account_id, \n                                      organizationMembership: values.organizationMembership,\n                                      financePaymentMethod: values.financePaymentMethod,\n                                      dateStart: dateToLocalISO(values.dateStart),\n                                      dateEnd: dateEnd,\n                                      note: values.note,\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_ACCOUNT_MEMBERSHIPS_QUERY, variables: {archived: false, accountId: account_id}}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('relations.account.memberships.toast_add_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n                                <AccountMembershipForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  setFieldValue={setFieldValue}\n                                  setFieldTouched={setFieldTouched}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                >\n                                  {console.log(errors)}\n                                </AccountMembershipForm>\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                    </Card>\n                  </Grid.Col>\n                  <Grid.Col md={3}>\n                    <HasPermissionWrapper permission=\"add\"\n                                          resource=\"accountmembership\">\n                      <Link to={return_url}>\n                        <Button color=\"primary btn-block mb-6\">\n                          <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                        </Button>\n                      </Link>\n                    </HasPermissionWrapper>\n                    <ProfileMenu account_id={account_id} activeLink='memberships'/>\n                  </Grid.Col>\n                </Grid.Row>\n              </Container>\n            )}}\n          </Query>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(AccountMembershipAdd))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { Query, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_MEMBERSHIPS_QUERY, GET_ACCOUNT_MEMBERSHIP_QUERY } from './queries'\nimport { MEMBERSHIP_SCHEMA } from './yupSchema'\nimport AccountMembershipForm from './AccountMembershipForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport ProfileMenu from \"../ProfileMenu\"\n\n\nconst UPDATE_ACCOUNT_MEMBERSHIP = gql`\n  mutation UpdateAccountMembership($input: UpdateAccountMembershipInput!) {\n    updateAccountMembership(input: $input) {\n      accountMembership {\n        id\n        account {\n          id\n          firstName\n          lastName\n          email\n        }\n        organizationMembership {\n          id\n          name\n        }\n        financePaymentMethod {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        note\n      }\n    }\n  }\n`\n\n\nclass AccountMembershipEdit extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Account membership add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const history = this.props.history\n    const match = this.props.match\n    const id = match.params.id\n    const account_id = match.params.account_id\n    const return_url = \"/relations/accounts/\" + account_id + \"/memberships\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n        <Query query={GET_ACCOUNT_MEMBERSHIP_QUERY} variables = {{archived: false,  accountId: account_id, id: id}} >\n          {({ loading, error, data, refetch }) => {\n            // Loading\n            if (loading) return <p>{t('general.loading_with_dots')}</p>\n            // Error\n            if (error) {\n              console.log(error)\n              return <p>{t('general.error_sad_smiley')}</p>\n            }\n            \n            console.log('query data')\n            console.log(data)\n            const inputData = data\n            const account = data.account\n            const initialdata = data.accountMembership\n\n            let initialPaymentMethod = \"\"\n            if (initialdata.financePaymentMethod) {\n              initialPaymentMethod = initialdata.financePaymentMethod.id\n            }\n\n            return (\n              <Container>\n               <Page.Header title={account.firstName + \" \" + account.lastName} />\n               <Grid.Row>\n                  <Grid.Col md={9}>\n                  <Card>\n                    <Card.Header>\n                      <Card.Title>{t('relations.account.memberships.title_edit')}</Card.Title>\n                    </Card.Header>\n                      <Mutation mutation={UPDATE_ACCOUNT_MEMBERSHIP} onCompleted={() => history.push(return_url)}> \n                      {(updateMembership, { data }) => (\n                          <Formik\n                              initialValues={{ \n                                organizationMembership: initialdata.organizationMembership.id,\n                                financePaymentMethod: initialPaymentMethod,\n                                dateStart: initialdata.dateStart,\n                                dateEnd: initialdata.dateEnd,\n                                note: initialdata.note,\n                                registrationFeePaid: initialdata.registrationFeePaid\n                              }}\n                              validationSchema={MEMBERSHIP_SCHEMA}\n                              onSubmit={(values, { setSubmitting }, errors) => {\n                                  console.log('submit values:')\n                                  console.log(values)\n                                  console.log(errors)\n\n                                  \n                                  let dateEnd\n                                  if (values.dateEnd) {\n                                    dateEnd = dateToLocalISO(values.dateEnd)\n                                  } else {\n                                    dateEnd = values.dateEnd\n                                  }\n\n                                  updateMembership({ variables: {\n                                    input: {\n                                      id: id,\n                                      organizationMembership: values.organizationMembership,\n                                      financePaymentMethod: values.financePaymentMethod,\n                                      dateStart: dateToLocalISO(values.dateStart),\n                                      dateEnd: dateEnd,\n                                      note: values.note,\n                                      registrationFeePaid: values.registrationFeePaid\n                                    }\n                                  }, refetchQueries: [\n                                      {query: GET_ACCOUNT_MEMBERSHIPS_QUERY, variables: {archived: false, accountId: account_id}}\n                                  ]})\n                                  .then(({ data }) => {\n                                      console.log('got data', data)\n                                      toast.success((t('relations.account.memberships.toast_edit_success')), {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                    }).catch((error) => {\n                                      toast.error((t('general.toast_server_error')) +  error, {\n                                          position: toast.POSITION.BOTTOM_RIGHT\n                                        })\n                                      console.log('there was an error sending the query', error)\n                                      setSubmitting(false)\n                                    })\n                              }}\n                              >\n                              {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n                                <AccountMembershipForm\n                                  inputData={inputData}\n                                  isSubmitting={isSubmitting}\n                                  setFieldValue={setFieldValue}\n                                  setFieldTouched={setFieldTouched}\n                                  errors={errors}\n                                  values={values}\n                                  return_url={return_url}\n                                >\n                                  {console.log(errors)}\n                                </AccountMembershipForm>\n                              )}\n                          </Formik>\n                      )}\n                      </Mutation>\n                    </Card>\n                  </Grid.Col>\n                  <Grid.Col md={3}>\n                    <HasPermissionWrapper permission=\"change\"\n                                          resource=\"accountmembership\">\n                      <Link to={return_url}>\n                        <Button color=\"primary btn-block mb-6\">\n                          <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                        </Button>\n                      </Link>\n                    </HasPermissionWrapper>\n                    <ProfileMenu account_id={account_id} activeLink='memberships'/>\n                  </Grid.Col>\n                </Grid.Row>\n              </Container>\n            )}}\n          </Query>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(AccountMembershipEdit))\n","import React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n    Button,\n    Card,\n    Grid,\n  } from \"tabler-react\"\n\n\nclass LoadMoreOnBottomScroll extends Component {\n    componentDidMount() {\n      window.addEventListener(\"scroll\", this.handleOnScroll);\n    }\n  \n    componentWillUnmount() {\n      window.removeEventListener(\"scroll\", this.handleOnScroll);\n    }\n\n    handleOnScroll = () => {\n      // http://stackoverflow.com/questions/9439725/javascript-how-to-detect-if-browser-window-is-scrolled-to-bottom\n      var scrollTop =\n        (document.documentElement && document.documentElement.scrollTop) ||\n        document.body.scrollTop;\n      var scrollHeight =\n        (document.documentElement && document.documentElement.scrollHeight) ||\n        document.body.scrollHeight;\n      var clientHeight =\n        document.documentElement.clientHeight || window.innerHeight;\n      var scrolledToBottom = Math.ceil(scrollTop + clientHeight) >= scrollHeight;\n      if (scrolledToBottom) {\n        const pageInfo = this.props.pageInfo\n        if (pageInfo) {\n          if (pageInfo.hasNextPage) {\n            this.props.onLoadMore()\n          }\n        }\n      }\n    }\n\n    render() {\n      const t = this.props.t\n      const onLoadMore = this.props.onLoadMore \n      const pageInfo = this.props.pageInfo\n      const children = this.props.children\n\n\n      return(\n        <div>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <Card>\n                <Card.Body>\n                  {(!pageInfo) ? '':\n                    (pageInfo.hasNextPage) ? \n                      <Button \n                        link\n                        onClick={onLoadMore} \n                        >\n                        {t('general.load_more')}\n                      </Button>\n                    : t('general.loaded_all')\n                  }\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n        </div>\n      )\n    }\n}\n\nLoadMoreOnBottomScroll.defaultProps = {\n  onLoadMore: f=>f\n}\n  \nexport default withTranslation()(LoadMoreOnBottomScroll)\n","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport { GET_ACCOUNT_QUERY } from '../queries'\n\n\nfunction AccountNotesBase({ t, history, match, children, showBack=false }) {\n  const accountId = match.params.account_id\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_QUERY, {\n    variables: { id: accountId }\n  })\n\n  if (loading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (error) {\n    console.log(error)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n\n  const account = data.account\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.firstName + \" \" + account.lastName}>\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              {!(showBack) ?\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"accountnote\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/notes/add`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.notes.add')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\" \n              }\n              {(showBack) ?\n                <HasPermissionWrapper permission=\"view\"\n                                      resource=\"accountnote\">\n                  <Link to={`/relations/accounts/${match.params.account_id}/notes/`}>\n                    <Button color=\"primary btn-block mb-6\">\n                      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                    </Button>\n                  </Link>\n                </HasPermissionWrapper>\n                : \"\"\n              }\n              <ProfileMenu \n                activeLink='notes'\n                accountId={accountId}\n              /> \n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}    \n        \nexport default withTranslation()(withRouter(AccountNotesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_NOTES_QUERY = gql`\n  query AccountNotes($after: String, $before: String, $account: ID!, $noteType: String!) {\n    accountNotes(first: 15, before: $before, after: $after, account: $account, noteType: $noteType ) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          note\n          injury\n          noteType\n          noteBy {\n            id\n            fullName\n          }\n          createdAt\n        }\n      }\n    }\n  }\n`\n\nexport const GET_ACCOUNT_NOTE_QUERY = gql`\n  query AccountNote($id: ID!) {\n    accountNote(id: $id) {\n      id\n      note\n      injury\n    }\n  }\n`\n\n\nexport const CREATE_ACCOUNT_NOTE = gql`\n  mutation CreateAccountNote($input: CreateAccountNoteInput!) {\n    createAccountNote(input: $input) {\n      accountNote {\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT_NOTE = gql`\n  mutation UpdateAccountNote($input: UpdateAccountNoteInput!) {\n    updateAccountNote(input: $input) {\n      accountNote {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_ACCOUNT_NOTE = gql`\n  mutation DeleteAccountNote($input: DeleteAccountNoteInput!) {\n    deleteAccountNote(input: $input) {\n      ok\n    }\n  }\n`\n","import CSLS from \"../../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables(accountId) {\n  let queryVars = {\n      account: accountId\n  }\n\n  let noteType = localStorage.getItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE)\n\n  queryVars.noteType = noteType  \n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport CSLS from \"../../../../tools/cs_local_storage\"\n\n\nimport {\n  BlogCard,\n  Button,\n  Badge,\n  Card,\n  Grid,\n  Icon,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport LoadMoreOnBottomScroll from \"../../../general/LoadMoreOnBottomScroll\"\nimport AccountNotesBase from \"./AccountNotesBase\"\n\nimport { \n  GET_ACCOUNT_NOTES_QUERY,\n  DELETE_ACCOUNT_NOTE\n} from \"./queries\"\n\nimport { get_list_query_variables } from \"./tools\"\n\n\n\nfunction AccountNotes({ t, history, match }) {\n  // Set some initial value for noteType, if not found\n  if (!localStorage.getItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE)) {\n    localStorage.setItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE, \"BACKOFFICE\") \n  }\n\n  const appSettings = useContext(AppSettingsContext)\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n\n  const accountId = match.params.account_id\n\n  const { loading, error, data, fetchMore, refetch } = useQuery(GET_ACCOUNT_NOTES_QUERY, {\n    variables: get_list_query_variables(accountId)\n  })\n  const [deleteAccountNote] = useMutation(DELETE_ACCOUNT_NOTE)\n\n  if (loading) return (\n    <AccountNotesBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AccountNotesBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountNotesBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AccountNotesBase>\n    )\n  }\n\n  let notes = data.accountNotes\n\n  return (\n    <AccountNotesBase>\n      <Grid.Row>\n        <Grid.Col>\n          <div className=\"float-right mb-4\">\n            <Button.List>\n              <Button color={(localStorage.getItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE) === \"BACKOFFICE\") ? 'primary': 'secondary'}  \n                      size=\"\"\n                      onClick={() => {\n                        localStorage.setItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE, \"BACKOFFICE\")\n                        refetch(get_list_query_variables(accountId))\n                      }\n              }>\n                {t('relations.account.notes.backoffice')}\n              </Button>\n              <Button color={(localStorage.getItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE) === \"TEACHERS\") ? 'primary': 'secondary'} \n                      size=\"\" \n                      className=\"ml-2\" \n                      onClick={() => {\n                        localStorage.setItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE, \"TEACHERS\")\n                        refetch(get_list_query_variables(accountId))\n                      }\n              }>\n                {t('relations.account.notes.teachers')}\n              </Button>\n            </Button.List>\n          </div>\n        </Grid.Col>\n      </Grid.Row>\n      <LoadMoreOnBottomScroll \n        pageInfo={notes.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: notes.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountNotes.edges\n              const pageInfo = fetchMoreResult.accountNotes.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountClasspasses at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    accountNotes: {\n                      __typename: previousResult.accountNotes.__typename,\n                      edges: [ ...previousResult.accountNotes.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        {notes.edges.map(({ node }) => (\n          <Card>\n            <Card.Body>\n              {(node.injury) ? <Badge color=\"danger\" className=\"float-right\">{t(\"general.injury\")}</Badge> : \"\"}\n              <div dangerouslySetInnerHTML={{__html: node.note}} />\n            </Card.Body>\n            <Card.Footer>\n              <Button \n                color=\"danger\"\n                size=\"sm\"\n                className=\"float-right\"\n                outline\n                onClick={() => {\n                  confirm_delete({\n                    t: t,\n                    msgConfirm: t(\"relations.account.notes.delete_confirm_msg\"),\n                    msgDescription: <p><div dangerouslySetInnerHTML={{__html: node.note}} /></p>,\n                    msgSuccess: t('relations.account.notes.deleted'),\n                    deleteFunction: deleteAccountNote,\n                    functionVariables: { \n                      variables: {\n                        input: {\n                          id: node.id\n                        }\n                      }, \n                      refetchQueries: [\n                        {query: GET_ACCOUNT_NOTES_QUERY, variables: get_list_query_variables(accountId) },\n                      ]\n                    }\n                  })\n                }}\n              >\n                <Icon name=\"trash-2\" />\n              </Button>\n              <Link to={`/relations/accounts/${match.params.account_id}/notes/edit/${node.id}`}>\n                <Button\n                  color=\"secondary\"\n                  size=\"sm\"\n                  className=\"float-right mr-4\"\n                  outline\n                >\n                  {t(\"general.edit\")}\n                </Button>\n              </Link>              \n              <small className=\"text-muted float-right mr-4\">{moment(node.createdAt).format(dateTimeFormatMoment)}</small>\n              {node.noteBy.fullName} <br />\n            </Card.Footer>\n          </Card>\n        ))}\n      </LoadMoreOnBottomScroll>\n    </AccountNotesBase>\n  )\n}\n      \n        \nexport default withTranslation()(withRouter(AccountNotes))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from \"react-router-dom\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountNoteForm = ({ t, history, isSubmitting, values, errors, setFieldTouched, setFieldValue, returnUrl }) => (\n  <FoForm>\n    <Card.Body> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.note')}>\n          <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"note\"\n            initialValue={values.note}\n            init={tinymceBasicConf}\n            onBlur={(e) => { \n              setFieldTouched(\"note\", true)\n              setFieldValue(\"note\", e.target.getContent())\n            }}\n          />\n          <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n                <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"injury\" \n                checked={values.injury} />\n                <span className=\"custom-switch-indicator\" ></span>\n                <span className=\"custom-switch-description\">{t('general.injury')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"injury\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n      </Grid.Row>\n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button\n            type=\"button\" \n            color=\"link\" \n          >\n            {t('general.cancel')}\n          </Button>\n        </Link>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountNoteForm))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../../tools/cs_local_storage\"\n\nimport { \n  GET_ACCOUNT_NOTES_QUERY, \n  CREATE_ACCOUNT_NOTE,\n} from './queries'\n// import { ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA } from './yupSchema'\nimport AccountNoteForm from './AccountNoteForm'\n\nimport {\n  Card,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport AccountNotesBase from \"./AccountNotesBase\"\n\nimport { get_list_query_variables } from \"./tools\"\n\n\nfunction AccountNoteAdd({ t, history, match }) {\n  // Set some initial value for noteType, if not found\n  let noteType = localStorage.getItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE)\n  if (!noteType) {\n    localStorage.setItem(CSLS.RELATIONS_ACCOUNT_NOTES_NOTE_TYPE, \"BACKOFFICE\") \n  }\n\n  const accountId = match.params.account_id\n  const returnUrl = `/relations/accounts/${accountId}/notes`\n  const cardTitle = t('relations.account.notes.title_add')\n\n  const [addNote] = useMutation(\n    CREATE_ACCOUNT_NOTE\n  )\n\n  return (\n    <AccountNotesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            injury: false,\n            note: \"\"\n          }}\n          // validationSchema={ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA}\n          onSubmit={(values, { setSubmitting }, errors) => {\n              console.log('submit values:')\n              console.log(values)\n              console.log(errors)\n\n              addNote({ variables: {\n                input: {\n                  account: accountId, \n                  noteType: noteType,\n                  injury: values.injury,\n                  note: values.note\n                }\n              }, refetchQueries: [\n                  {query: GET_ACCOUNT_NOTES_QUERY, variables: get_list_query_variables(accountId)}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('relations.account.notes.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <AccountNoteForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              returnUrl={returnUrl}\n            >\n              {console.log(errors)}\n            </AccountNoteForm>\n          )}\n        </Formik>\n      </Card>\n    </AccountNotesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountNoteAdd))\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { \n  GET_ACCOUNT_NOTE_QUERY, \n  GET_ACCOUNT_NOTES_QUERY, \n  UPDATE_ACCOUNT_NOTE,\n} from './queries'\n// import { ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA } from './yupSchema'\nimport AccountNoteForm from './AccountNoteForm'\n\nimport {\n  Card,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport AccountNotesBase from \"./AccountNotesBase\"\n\nimport { get_list_query_variables } from \"./tools\"\n\n\nfunction AccountNoteEdit({ t, history, match }) {\n  // Set some initial value for noteType, if not found\n\n  const accountId = match.params.account_id\n  const noteId = match.params.id\n  const returnUrl = `/relations/accounts/${accountId}/notes`\n  const cardTitle = t('relations.account.notes.title_edit')\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_NOTE_QUERY, {\n    variables: { id: noteId }\n  })\n  const [updateNote] = useMutation(\n    UPDATE_ACCOUNT_NOTE\n  )\n\n  if (loading) return (\n    <AccountNotesBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </AccountNotesBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountNotesBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </AccountNotesBase>\n    )\n  }\n\n  const note = data.accountNote\n\n  return (\n    <AccountNotesBase showBack={true}>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            injury: note.injury,\n            note: note.note\n          }}\n          // validationSchema={ACCOUNT_FINANCE_PAYMENT_BATCH_CATEGORY_ITEM_SCHEMA}\n          onSubmit={(values, { setSubmitting }, errors) => {\n              console.log('submit values:')\n              console.log(values)\n              console.log(errors)\n\n              updateNote({ variables: {\n                input: {\n                  id: noteId,\n                  injury: values.injury,\n                  note: values.note\n                }\n              }, refetchQueries: [\n                  {query: GET_ACCOUNT_NOTES_QUERY, variables: get_list_query_variables(accountId)}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('relations.account.notes.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <AccountNoteForm\n              isSubmitting={isSubmitting}\n              errors={errors}\n              values={values}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              returnUrl={returnUrl}\n            >\n              {console.log(errors)}\n            </AccountNoteForm>\n          )}\n        </Formik>\n      </Card>\n    </AccountNotesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountNoteEdit))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\n\nfunction AccountOrdersBase({ t, match, history, children, account={} }) {\n  const accountId = match.params.account_id\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.fullName} >\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              <ProfileMenu \n                activeLink='orders' \n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountOrdersBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_ORDERS_QUERY = gql`\n  query FinanceOrders($after: String, $before: String, $status: String, $account: ID!) {\n    financeOrders(first: 15, before: $before, after: $after, status: $status, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          orderNumber\n          account {\n            id\n            fullName\n          }\n          status\n          createdAt\n          total\n          totalDisplay\n          balanceDisplay\n        }\n      }\n    }\n    account(id:$account) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n","import React, { useContext } from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_ACCOUNT_ORDERS_QUERY } from \"./queries\"\nimport { DELETE_FINANCE_ORDER } from \"../../../finance/orders/queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport moment from 'moment'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\"\n\n\nfunction AccountClassDelete({t, match, node, account}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const [deleteOrder, { data }] = useMutation(DELETE_FINANCE_ORDER)\n\n  console.log(\"AccountOrderDelete\")\n  console.log(node)\n  console.log(account)\n  console.log(\"---\")\n\n  return (\n    <button className=\"icon btn btn-link btn-sm pull-right\" \n      title={t('general.delete')} \n      href=\"\"\n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"relations.account.orders.delete_confirm_msg\"),\n          msgDescription: <p>\n            {t('general.order')}# {node.orderNumber}\n          </p>,\n          msgSuccess: t('relations.account.orders.delete_success'),\n          deleteFunction: deleteOrder,\n          functionVariables: { \n            variables: {\n              input: {\n                id: node.id\n              }\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_ORDERS_QUERY, \n                variables: { account: account.id } },\n            ]\n          }\n        })\n    }}>\n      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountClassDelete))\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceOrderStatus from \"../../../finance/orders/FinanceOrderStatus\"\n\nimport {\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport BadgeBookingStatus from \"../../../ui/BadgeBookingStatus\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport AccountOrdersBase from \"./AccountOrdersBase\"\nimport AccountOrderDelete from \"./AccountOrderDelete\"\n\nimport { GET_ACCOUNT_ORDERS_QUERY } from \"./queries\"\n\n\nfunction AccountOrders({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  // const timeFormat = appSettings.timeFormatMoment\n  const cardTitle = t('relations.account.orders.title')\n  const account_id = match.params.account_id\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_ORDERS_QUERY, {\n    variables: {'account': account_id},\n  })\n\n  // Loading\n  if (loading) return (\n    <AccountOrdersBase>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>\n        </Card.Body>\n      </Card>\n    </AccountOrdersBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <AccountOrdersBase>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('general.error_sad_smiley')}</p>\n          </Card.Body>\n        </Card>\n      </AccountOrdersBase>\n    )\n  }\n\n  console.log(\"AccountClasses data:\")\n  console.log(data)\n  const account = data.account\n  const financeOrders = data.financeOrders\n  \n  // Empty list\n  if (!financeOrders.edges.length) {\n    return (\n      <AccountOrdersBase account={account}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <p>{t('relations.account.orders.empty_list')}</p>\n          </Card.Body>\n        </Card>\n      </AccountOrdersBase>\n    )\n  }\n\n  // Return populated list\n  return (\n    <AccountOrdersBase account={account}>\n      <ContentCard \n        cardTitle={t('relations.account.orders.title')}\n        pageInfo={financeOrders.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: financeOrders.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.financeOrders.edges\n              const pageInfo = fetchMoreResult.financeOrders.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new financeOrders at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    financeOrders: {\n                      __typename: previousResult.financeOrders.__typename,\n                      edges: [ ...previousResult.financeOrders.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.order_number')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.relation')}</Table.ColHeader>\n              <Table.ColHeader>{t('finance.orders.date')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {financeOrders.edges.map(({ node }) => (        \n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    <FinanceOrderStatus status={node.status} />\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    # {node.orderNumber}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.account.fullName}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {moment(node.createdAt).format('LL')}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.totalDisplay}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <Link to={\"/finance/orders/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    <AccountOrderDelete node={node} account={account} />\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </AccountOrdersBase>\n  )\n}\n      \n        \nexport default withTranslation()(withRouter(AccountOrders))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY = gql`\n  query AccountScheduleEventTickets($after: String, $before: String, $account: ID!) {\n    accountScheduleEventTickets(first: 15, before: $before, after: $after, account: $account) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          cancelled\n          infoMailSent\n          scheduleEventTicket {\n            id\n            name\n            scheduleEvent {\n              id\n              name\n              dateStart\n              organizationLocation {\n                name\n              }\n            }\n          }\n          invoiceItems(first:1) {\n            edges {\n              node {\n                financeInvoice {\n                  id\n                  invoiceNumber\n                  status\n                }\n              }\n            }\n          }\n        }\n        \n      }\n    }\n  }\n`\n\n// export const GET_ACCOUNT_CLASSPASS_QUERY = gql`\n//   query AccountClasspass($id: ID!, $accountId: ID!, $after: String, $before: String, $archived: Boolean!) {\n//     accountClasspass(id:$id) {\n//       id\n//       organizationClasspass {\n//         id\n//         name\n//       }\n//       dateStart\n//       dateEnd\n//       note\n//       createdAt\n//     }\n//     organizationClasspasses(first: 100, before: $before, after: $after, archived: $archived) {\n//       pageInfo {\n//         startCursor\n//         endCursor\n//         hasNextPage\n//         hasPreviousPage\n//       }\n//       edges {\n//         node {\n//           id\n//           archived\n//           name\n//         }\n//       }\n//     }\n//     account(id:$accountId) {\n//       id\n//       firstName\n//       lastName\n//       email\n//       phone\n//       mobile\n//       isActive\n//     }\n//   }\n// `\n\n// export const GET_INPUT_VALUES_QUERY = gql`\n//   query ClasspassInputValues($after: String, $before: String, $archived: Boolean!, $accountId: ID!) {\n//     organizationClasspasses(first: 100, before: $before, after: $after, archived: $archived) {\n//       pageInfo {\n//         startCursor\n//         endCursor\n//         hasNextPage\n//         hasPreviousPage\n//       }\n//       edges {\n//         node {\n//           id\n//           archived\n//           name\n//         }\n//       }\n//     }\n//     account(id:$accountId) {\n//       id\n//       firstName\n//       lastName\n//       email\n//       phone\n//       mobile\n//       isActive\n//     }\n//   }\n// `","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT = gql`\n  query Account($accountId: ID!){\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport ProfileMenu from \"../ProfileMenu\"\nimport ProfileCardSmall from \"../../../ui/ProfileCardSmall\"\n\nimport { GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY } from \"./queries\"\nimport { GET_ACCOUNT } from \"../../../../queries/accounts/get_account\"\nimport ScheduleEventTickets from './AccountScheduleEventTickets'\n\n// const CANCEL_SCHEDULE_EVENT_TICKET = gql`\n//   mutation DeleteAccountClasspass($input: DeleteAccountClasspassInput!) {\n//     deleteAccountClasspass(input: $input) {\n//       ok\n//     }\n//   }\n// `\n\n\nfunction AccountScheduleEventTicketsBase({t, history, match, children}) {\n  const accountId = match.params.account_id\n  const { loading, error, data } = useQuery(GET_ACCOUNT, { variables: {\n    accountId: accountId\n  }})\n\n  if (loading) return (\n    <p>\n      {t(\"general.loading_with_dots\")}\n    </p>\n  )\n  if (error) return (\n    <p>\n      {t(\"relations.account.error_loading\")}\n    </p>\n  )\n\n  console.log(data)\n  const account = data.account\n  console.log(account)\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={account.firstName + \" \" + account.lastName} >\n            <RelationsAccountsBack />\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              {/* <HasPermissionWrapper permission=\"add\"\n                                    resource=\"accountclasspass\">\n                <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/add\"}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.classpasses.add')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper> */}\n              <ProfileMenu \n                activeLink='tickets' \n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountScheduleEventTicketsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY = gql`\nquery AccountScheduleEventTickets($before:String, $after:String, $scheduleEventTicket:ID!) {\n  accountScheduleEventTickets(first: 100, before: $before, after: $after, scheduleEventTicket:$scheduleEventTicket) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        account {\n          id\n          fullName\n        }\n        cancelled\n        paymentConfirmation\n        infoMailSent\n      }\n    }\n  }\n}\n`\n\nexport const GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM_QUERY = gql`\nquery ScheduleEventTicket($before:String, $after:String, $id:ID!) {\n  scheduleEventTicket(id: $id) {\n    id\n    displayPublic\n    name\n    description\n    price\n    financeTaxRate {\n      id\n      name\n    }\n    financeGlaccount {\n      id\n      name\n    }\n    financeCostcenter {\n      id\n      name\n    }\n  }\n  financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n  financeGlaccounts(first: 100, before: $before, after: $after, archived: false) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n  financeCostcenters(first: 100, before: $before, after: $after, archived: false) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n}\n`\n\nexport const UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET = gql`\n  mutation UpdateAccountScheduleEventTicket($input:UpdateAccountScheduleEventTicketInput!) {\n    updateAccountScheduleEventTicket(input: $input) {\n      accountScheduleEventTicket {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_SCHEDULE_EVENT_TICKET = gql`\n  mutation DeleteScheduleEventTicket($input: DeleteScheduleEventTicketInput!) {\n    deleteScheduleEventTicket(input: $input) {\n      ok\n    }\n  }\n`\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport moment from 'moment'\n\nimport {\n  Badge,\n  Button,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport RelationsAccountsBack from \"../RelationsAccountsBack\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport FinanceInvoicesStatus from \"../../../ui/FinanceInvoiceStatus\"\n\nimport AccountScheduleEventTicketsBase from \"./AccountScheduleEventTicketsBase\"\n\n\nimport { UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET } from \"../../../schedule/events/tickets/customers/queries\"\nimport { GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY } from \"./queries\"\n\n\n\nfunction AccountScheduleEventTickets({t, history, match}) {\n  // const title = t(\"relations.account.event_tickets.title\")\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const accountId = match.params.account_id\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, { variables: {\n    account: accountId\n  }})\n  const [updateAccountScheduleEventTicket] = useMutation(UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET)\n\n\n  if (loading) return (\n    <AccountScheduleEventTicketsBase>\n      {t(\"general.loading_with_dots\")}\n    </AccountScheduleEventTicketsBase>\n  )\n  if (error) return (\n    <AccountScheduleEventTicketsBase>\n      {t(\"shop.classpasses.error_loading\")}\n    </AccountScheduleEventTicketsBase>\n  )\n\n  console.log(data)\n  const accountScheduleEventTickets = data.accountScheduleEventTickets\n  console.log(accountScheduleEventTickets)\n\n\n  return (\n    <AccountScheduleEventTicketsBase>\n      <ContentCard \n        cardTitle={t('relations.account.event_tickets.title')}\n        pageInfo={accountScheduleEventTickets.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: accountScheduleEventTickets.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountScheduleEventTickets.edges\n              const pageInfo = fetchMoreResult.accountScheduleEventTickets.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountScheduleEventTickets at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    accountScheduleEventTickets: {\n                      __typename: previousResult.accountScheduleEventTickets.__typename,\n                      edges: [ ...previousResult.accountScheduleEventTickets.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.ticket')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.invoice')}</Table.ColHeader>\n              <Table.ColHeader>{t('schedule.events.tickets.info_mail_sent')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader> \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {accountScheduleEventTickets.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col>\n                    {node.scheduleEventTicket.scheduleEvent.name} <br />\n                    <Badge>{node.scheduleEventTicket.name}</Badge> {\" \"}\n                    {(node.cancelled) ? <Badge color=\"warning\">{t(\"general.cancelled\")}</Badge> : \"\"}\n                  </Table.Col>\n                  <Table.Col>\n                    {moment(node.scheduleEventTicket.scheduleEvent.dateStart).format(dateFormat)}\n                  </Table.Col>\n                  <Table.Col>\n                    {(node.invoiceItems.edges.length) ? \n                      <span>\n                        <Link to={`/finance/invoices/edit/${node.invoiceItems.edges[0].node.financeInvoice.id}`}>\n                          {node.invoiceItems.edges[0].node.financeInvoice.invoiceNumber}\n                        </Link> <br />\n                        <FinanceInvoicesStatus status={node.invoiceItems.edges[0].node.financeInvoice.status} />\n                        \n                      </span>\n                      : \"\"\n                    }\n                    \n                  </Table.Col>\n                  {/* <Table.Col key={v4()}>\n                    {node.dateStart}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dateEnd}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.classesRemainingDisplay}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col> */}\n                  <Table.Col>\n                    <BadgeBoolean value={node.infoMailSent} />\n                  </Table.Col>\n                  <Table.Col>\n                    {(node.cancelled) ?\n                      <Button \n                        className=\"pull-right\"\n                        color=\"warning\"\n                        onClick={() =>\n                          updateAccountScheduleEventTicket({ variables: {\n                            input: {\n                              id: node.id,\n                              cancelled: false\n                            }\n                          }, refetchQueries: [\n                            { \n                              query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, \n                              variables: { account: accountId }\n                            },\n                          ]})\n                          .then(({ data }) => {\n                              console.log('got data', data);\n                              toast.success((t('schedule.events.tickets.customers.uncancelled')), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error)\n                            }\n                          )\n                        }\n                      >\n                        {t(\"general.uncancel\")}\n                      </Button>\n                    :\n                      <Button \n                        className=\"pull-right\"\n                        color=\"warning\"\n                        onClick={() =>\n                          updateAccountScheduleEventTicket({ variables: {\n                            input: {\n                              id: node.id,\n                              cancelled: true\n                            }\n                          }, refetchQueries: [\n                              { \n                                query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, \n                                variables: { account: accountId }\n                              },\n                          ]})\n                          .then(({ data }) => {\n                              console.log('got data', data);\n                              toast.success((t('schedule.events.tickets.customers.cancelled')), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error)\n                            })\n                          }\n                        >\n                          {t(\"general.cancel\")}\n                        </Button>\n                    }\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </AccountScheduleEventTicketsBase>\n  )\n}\n\n\n\n// const AccountClasspasses = ({ t, history, match, archived=false }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Query query={GET_ACCOUNT_CLASSPASSES_QUERY} variables={{ archived: archived, accountId: match.params.account_id }} \n//         fetchPolicy=\"network-only\"> \n//         {({ loading, error, data, refetch, fetchMore }) => {\n//           // Loading\n//           if (loading) return <p>{t('general.loading_with_dots')}</p>\n//           // Error\n//           if (error) {\n//             console.log(error)\n//             return <p>{t('general.error_sad_smiley')}</p>\n//           }\n\n//           const account = data.account\n//           const accountClasspasses = data.accountClasspasses\n\n//           return (\n//             <Container>\n//               <Page.Header title={account.firstName + \" \" + account.lastName} >\n//                 <RelationsAccountsBack />\n//               </Page.Header>\n//               <Grid.Row>\n//                 <Grid.Col md={9}>\n//                   <ContentCard \n//                     cardTitle={t('relations.account.classpasses.title')}\n//                     pageInfo={accountClasspasses.pageInfo}\n//                     onLoadMore={() => {\n//                       fetchMore({\n//                         variables: {\n//                           after: accountClasspasses.pageInfo.endCursor\n//                         },\n//                         updateQuery: (previousResult, { fetchMoreResult }) => {\n//                           const newEdges = fetchMoreResult.accountClasspasses.edges\n//                           const pageInfo = fetchMoreResult.accountClasspasses.pageInfo\n\n//                           return newEdges.length\n//                             ? {\n//                                 // Put the new accountClasspasses at the end of the list and update `pageInfo`\n//                                 // so we have the new `endCursor` and `hasNextPage` values\n//                                 accountClasspasses: {\n//                                   __typename: previousResult.accountClasspasses.__typename,\n//                                   edges: [ ...previousResult.accountClasspasses.edges, ...newEdges ],\n//                                   pageInfo\n//                                 }\n//                               }\n//                             : previousResult\n//                         }\n//                       })\n//                     }} \n//                   >\n//                     <Table>\n//                       <Table.Header>\n//                         <Table.Row key={v4()}>\n//                           <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                           <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n//                           <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n//                           <Table.ColHeader>{t('general.classes_remaining')}</Table.ColHeader>\n//                           <Table.ColHeader></Table.ColHeader> \n//                         </Table.Row>\n//                       </Table.Header>\n//                       <Table.Body>\n//                           {accountClasspasses.edges.map(({ node }) => (\n//                             <Table.Row key={v4()}>\n//                               <Table.Col key={v4()}>\n//                                 {node.organizationClasspass.name}\n//                               </Table.Col>\n//                               <Table.Col key={v4()}>\n//                                 {node.dateStart}\n//                               </Table.Col>\n//                               <Table.Col key={v4()}>\n//                                 {node.dateEnd}\n//                               </Table.Col>\n//                               <Table.Col key={v4()}>\n//                                 {node.classesRemainingDisplay}\n//                               </Table.Col>\n//                               <Table.Col className=\"text-right\" key={v4()}>\n//                                 <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/edit/\" + node.id}>\n//                                   <Button className='btn-sm' \n//                                           color=\"secondary\">\n//                                     {t('general.edit')}\n//                                   </Button>\n//                                 </Link>\n//                               </Table.Col>\n//                               <Mutation mutation={DELETE_ACCOUNT_CLASSPASS} key={v4()}>\n//                                 {(deleteAccountClasspass, { data }) => (\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     <button className=\"icon btn btn-link btn-sm\" \n//                                       title={t('general.delete')} \n//                                       href=\"\"\n//                                       onClick={() => {\n//                                         confirm_delete({\n//                                           t: t,\n//                                           msgConfirm: t(\"relations.account.classpasses.delete_confirm_msg\"),\n//                                           msgDescription: <p>{node.organizationClasspass.name} {node.dateStart}</p>,\n//                                           msgSuccess: t('relations.account.classpasses.deleted'),\n//                                           deleteFunction: deleteAccountClasspass,\n//                                           functionVariables: { variables: {\n//                                             input: {\n//                                               id: node.id\n//                                             }\n//                                           }, refetchQueries: [\n//                                             {query: GET_ACCOUNT_CLASSPASSES_QUERY, variables: { archived: archived, accountId: match.params.account_id }} \n//                                           ]}\n//                                         })\n//                                     }}>\n//                                       <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n//                                     </button>\n//                                   </Table.Col>\n//                                 )}\n//                               </Mutation>\n//                             </Table.Row>\n//                           ))}\n//                       </Table.Body>\n//                     </Table>\n//                   </ContentCard>\n//                 </Grid.Col>\n//                 <Grid.Col md={3}>\n//                   <ProfileCardSmall user={account}/>\n//                   <HasPermissionWrapper permission=\"add\"\n//                                         resource=\"accountclasspass\">\n//                     <Link to={\"/relations/accounts/\" + match.params.account_id + \"/classpasses/add\"}>\n//                       <Button color=\"primary btn-block mb-6\">\n//                               {/* //  onClick={() => history.push(\"/organization/classpasses/add\")}> */}\n//                         <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.classpasses.add')}\n//                       </Button>\n//                     </Link>\n//                   </HasPermissionWrapper>\n//                   <ProfileMenu \n//                     activeLink='classpasses' \n//                     account_id={match.params.account_id}\n//                   />\n//                 </Grid.Col>\n//               </Grid.Row>\n//             </Container>\n//           )\n//         }}\n//       </Query>\n//     </div>\n//   </SiteWrapper>\n// )\n      \n        \nexport default withTranslation()(withRouter(AccountScheduleEventTickets))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SUBSCRIPTIONS_QUERY = gql`\n  query AccountSubscriptions($after: String, $before: String, $accountId: ID!) {\n    accountSubscriptions(first: 15, before: $before, after: $after, account: $accountId) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationSubscription {\n            id\n            name\n          }\n          financePaymentMethod {\n            id\n            name\n          }\n          dateStart\n          dateEnd\n          creditTotal\n          registrationFeePaid\n          createdAt\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const GET_ACCOUNT_SUBSCRIPTION_QUERY = gql`\n  query AccountSubscription($id: ID!, $accountId: ID!, $after: String, $before: String) {\n    accountSubscription(id:$id) {\n      id\n      organizationSubscription {\n        id\n        name\n      }\n      financePaymentMethod {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      note\n      creditTotal\n      registrationFeePaid\n      createdAt\n    }\n    organizationSubscriptions(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query SubscriptionInputValues($after: String, $before: String, $archived: Boolean!, $accountId: ID!) {\n    organizationSubscriptions(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          code\n        }\n      }\n    }\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\n\nexport const GET_ACCOUNT_QUERY = gql`\n  query Account($accountId: ID!) {\n    account(id:$accountId) {\n      id\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\nexport const CREATE_ACCOUNT_SUBSCRIPTION = gql`\n  mutation CreateAccountSubscription($input: CreateAccountSubscriptionInput!) {\n    createAccountSubscription(input: $input) {\n      accountSubscription {\n        id\n        account {\n          id\n          firstName\n          lastName\n          email\n        }\n        organizationSubscription {\n          id\n          name\n        }\n        financePaymentMethod {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        note\n        registrationFeePaid        \n      }\n    }\n  }\n`\n\nexport const UPDATE_ACCOUNT_SUBSCRIPTION = gql`\n  mutation UpdateAccountSubscription($input: UpdateAccountSubscriptionInput!) {\n    updateAccountSubscription(input: $input) {\n      accountSubscription {\n        id\n        account {\n          id\n          firstName\n          lastName\n          email\n        }\n        organizationSubscription {\n          id\n          name\n        }\n        financePaymentMethod {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        note\n        registrationFeePaid        \n      }\n    }\n  }\n`\n\nexport const DELETE_ACCOUNT_SUBSCRIPTION = gql`\n  mutation DeleteAccountSubscription($input: DeleteAccountSubscriptionInput!) {\n    deleteAccountSubscription(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Icon,\n  Button,\n  Card,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../general/ContentCard\"\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase'\n\nimport { GET_ACCOUNT_SUBSCRIPTIONS_QUERY, DELETE_ACCOUNT_SUBSCRIPTION } from \"./queries\"\n\n\nfunction AccountSubscriptions({t, match}) {\n  const accountId = match.params.account_id\n  const cardTitle = t('relations.account.subscriptions.title')\n  const activeLink = \"subscriptions\"\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SUBSCRIPTIONS_QUERY, {\n    variables: {accountId: accountId}\n  })\n  const [deleteAccountSubscription] = useMutation(DELETE_ACCOUNT_SUBSCRIPTION)\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return(\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const account = data.account\n  const accountSubscriptions = data.accountSubscriptions\n  const sidebarButton = <HasPermissionWrapper \n    permission=\"add\"\n    resource=\"accountsubscription\">\n      <Link to={\"/relations/accounts/\" + match.params.account_id + \"/subscriptions/add\"}>\n      <Button color=\"primary btn-block mb-6\">\n      {/* //  onClick={() => history.push(\"/organization/subscriptions/add\")}> */}\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.account.subscriptions.add')}\n      </Button>\n      </Link>\n  </HasPermissionWrapper>\n\n  return (\n    <RelationsAccountProfileBase\n      activeLink={activeLink}\n      user={account}\n      sidebarButton={sidebarButton}\n    >\n      <ContentCard \n        cardTitle={t('relations.account.subscriptions.title')}\n        pageInfo={accountSubscriptions.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: accountSubscriptions.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.accountSubscriptions.edges\n              const pageInfo = fetchMoreResult.accountSubscriptions.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new accountSubscriptions at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    accountSubscriptions: {\n                      __typename: previousResult.accountSubscriptions.__typename,\n                      edges: [ ...previousResult.accountSubscriptions.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.payment_method')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.credits')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader> \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {accountSubscriptions.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.organizationSubscription.name}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dateStart}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.dateEnd}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {(node.financePaymentMethod) ? node.financePaymentMethod.name : \"\"}\n                  </Table.Col>\n                  <Table.Col key={v4()}>\n                    {node.creditTotal}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={\"/relations/accounts/\" + match.params.account_id + \"/subscriptions/edit/\" + node.id}>\n                      <Button className='btn-sm' \n                              color=\"secondary\">\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.delete')} \n                      href=\"\"\n                      onClick={() => {\n                        confirm_delete({\n                          t: t,\n                          msgConfirm: t(\"relations.account.subscriptions.delete_confirm_msg\"),\n                          msgDescription: <p>{node.organizationSubscription.name} {node.dateStart}</p>,\n                          msgSuccess: t('relations.account.subscriptions.deleted'),\n                          deleteFunction: deleteAccountSubscription,\n                          functionVariables: { variables: {\n                            input: {\n                              id: node.id\n                            }\n                          }, refetchQueries: [\n                            {query: GET_ACCOUNT_SUBSCRIPTIONS_QUERY, variables: { accountId: accountId }} \n                          ]}\n                        })\n                    }}>\n                      <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </RelationsAccountProfileBase>\n  )\n}\n\n        \nexport default withTranslation()(withRouter(AccountSubscriptions))","import { t } from 'i18next'\nimport * as Yup from 'yup'\nimport { yupToFormErrors } from 'formik';\n\nexport const SUBSCRIPTION_SCHEMA = Yup.object().shape({\n  organizationSubscription: Yup.string()\n    .required(t('yup.field_required')),\n  financePaymentMethod: Yup.string(),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .nullable(),\n  registrationFeePaid: Yup.boolean(),\n  note: Yup.string(),\n})\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n} from \"tabler-react\";\n\n\nconst AccountSubscriptionForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, return_url }) => (\n  <FoForm>\n    <Card.Body> \n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.subscription')}>\n            <Field component=\"select\" \n                  name=\"organizationSubscription\" \n                  className={(errors.organizationSubscription) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n              {inputData.organizationSubscriptions.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"organizationSubscription\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.payment_method')}>\n            <Field component=\"select\" \n                  name=\"financePaymentMethod\" \n                  className={(errors.financePaymentMethod) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}></option>\n              {inputData.financePaymentMethods.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"financePaymentMethod\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row> \n      <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={(values.frequencyType == \"SPECIFIC\") ? t('general.date') : t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateEnd\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n            <Grid.Col>\n              <Form.Group label={t('general.date_end')}>\n                <CSDatePicker \n                  selected={values.dateEnd}\n                  onChange={(date) => {\n                    setFieldValue(\"dateEnd\", date)\n                    setFieldTouched(\"dateEnd\", true)\n                  }}\n                  onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                  placeholderText={t('schedule.classes.placeholder_enddate')}\n                />\n                <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          }\n        </Grid.Row>\n      <Form.Group label={t('general.note')}>\n        <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"note\"\n            initialValue={values.note}\n            init={tinymceBasicConf}\n            onBlur={(e) => {\n              setFieldValue(\"note\", e.target.getContent())\n              setFieldTouched(\"note\", true, true)\n            }}\n          />\n        <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label className=\"custom-switch\">\n            <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"registrationFeePaid\" \n              checked={values.registrationFeePaid} />\n            <span className=\"custom-switch-indicator\" ></span>\n            <span className=\"custom-switch-description\">{t('relations.account.subscriptions.registration_fee_paid')}</span>\n          </Form.Label>\n        <ErrorMessage name=\"registrationFeePaid\" component=\"div\" />   \n      </Form.Group> \n    </Card.Body>\n    <Card.Footer>\n        <Button \n          className=\"pull-right\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          {t('general.submit')}\n        </Button>\n        <Button\n          type=\"button\" \n          color=\"link\" \n          onClick={() => history.push(return_url)}\n        >\n            {t('general.cancel')}\n        </Button>\n    </Card.Footer>\n  </FoForm>\n)\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionForm))","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTIONS_QUERY, GET_INPUT_VALUES_QUERY, CREATE_ACCOUNT_SUBSCRIPTION } from './queries'\nimport { SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport AccountSubscriptionForm from './AccountSubscriptionForm'\n\nimport {\n  Icon,\n  Button,\n  Card,\n} from \"tabler-react\";\nimport { dateToLocalISO } from '../../../../tools/date_tools'\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase'\n\n\nfunction AccountSubscriptionAdd({t, history, match}) {\n  const accountId = match.params.account_id\n  const activeLink = \"subscriptions\"\n  const cardTitle = t('relations.account.subscriptions.title_add')\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const {loading, error, data} = useQuery(GET_INPUT_VALUES_QUERY, {\n    variables: { archived: false, accountId: accountId }\n  })\n  const [createAccountSubscription] = useMutation(CREATE_ACCOUNT_SUBSCRIPTION)\n  const sidebarButton = <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n\n  if (loading) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      <Card title={cardTitle}>\n        {t('general.loading_with_dots')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return(\n    <RelationsAccountProfileBase activeLink={activeLink} sidebarButton={sidebarButton}>\n      {console.log(error)}\n      <Card title={cardTitle}>\n        {t('general.error_sad_smiley')}\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const inputData = data\n  const account = data.account\n\n  return (\n    <RelationsAccountProfileBase\n      activeLink={activeLink}\n      user={account}\n      sidebarButton={sidebarButton} \n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Header>\n          <Formik\n            initialValues={{ \n              organizationSubscription: \"\",\n              financePaymentMethod: \"\",\n              dateStart: new Date(),\n              note: \"\",\n              registrationFeePaid: false\n            }}\n            validationSchema={SUBSCRIPTION_SCHEMA}\n            onSubmit={(values, { setSubmitting }, errors) => {\n                console.log('submit values:')\n                console.log(values)\n                console.log(errors)\n\n                \n                let dateEnd\n                if (values.dateEnd) {\n                  dateEnd = dateToLocalISO(values.dateEnd)\n                } else {\n                  dateEnd = values.dateEnd\n                }\n\n                createAccountSubscription({ variables: {\n                  input: {\n                    account: accountId, \n                    organizationSubscription: values.organizationSubscription,\n                    financePaymentMethod: values.financePaymentMethod,\n                    dateStart: dateToLocalISO(values.dateStart),\n                    dateEnd: dateEnd,\n                    note: values.note,\n                    registrationFeePaid: values.registrationFeePaid\n                  }\n                }, refetchQueries: [\n                    {query: GET_ACCOUNT_SUBSCRIPTIONS_QUERY, variables: {accountId: accountId}}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    const subscriptionId = data.createAccountSubscription.accountSubscription.id\n                    history.push(`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}`)\n                    toast.success((t('relations.account.subscriptions.toast_add_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n              <AccountSubscriptionForm\n                inputData={inputData}\n                isSubmitting={isSubmitting}\n                setFieldValue={setFieldValue}\n                setFieldTouched={setFieldTouched}\n                errors={errors}\n                values={values}\n                returnUrl={returnUrl}\n              >\n                {console.log(errors)}\n              </AccountSubscriptionForm>\n            )}\n          </Formik>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n}\n\n\n// class AccountSubscriptionAdd extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Account subscription add props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const history = this.props.history\n//     const match = this.props.match\n//     const accountId = match.params.accountId\n//     const returnUrl = \"/relations/accounts/\" + accountId + \"/subscriptions\"\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//         <Query query={GET_INPUT_VALUES_QUERY} variables = {{archived: false, accountId: accountId}} >\n//           {({ loading, error, data, refetch }) => {\n//             // Loading\n//             if (loading) return <p>{t('general.loading_with_dots')}</p>\n//             // Error\n//             if (error) {\n//               console.log(error)\n//               return <p>{t('general.error_sad_smiley')}</p>\n//             }\n            \n//             console.log('query data')\n//             console.log(data)\n//             const inputData = data\n//             const account = data.account\n\n//             return (\n//               <Container>\n//                <Page.Header title={account.firstName + \" \" + account.lastName} />\n//                <Grid.Row>\n//                   <Grid.Col md={9}>\n//                   <Card>\n//                     <Card.Header>\n//                       <Card.Title>{t('relations.account.subscriptions.title_add')}</Card.Title>\n//                     </Card.Header>\n//                       <Mutation mutation={CREATE_ACCOUNT_SUBSCRIPTION} onCompleted={() => history.push(returnUrl)}> \n//                       {(createSubscription, { data }) => (\n//                           <Formik\n//                               initialValues={{ \n//                                 organizationSubscription: \"\",\n//                                 financePaymentMethod: \"\",\n//                                 dateStart: new Date(),\n//                                 note: \"\",\n//                                 registrationFeePaid: false\n//                               }}\n//                               validationSchema={SUBSCRIPTION_SCHEMA}\n//                               onSubmit={(values, { setSubmitting }, errors) => {\n//                                   console.log('submit values:')\n//                                   console.log(values)\n//                                   console.log(errors)\n\n                                  \n//                                   let dateEnd\n//                                   if (values.dateEnd) {\n//                                     dateEnd = dateToLocalISO(values.dateEnd)\n//                                   } else {\n//                                     dateEnd = values.dateEnd\n//                                   }\n\n//                                   createSubscription({ variables: {\n//                                     input: {\n//                                       account: accountId, \n//                                       organizationSubscription: values.organizationSubscription,\n//                                       financePaymentMethod: values.financePaymentMethod,\n//                                       dateStart: dateToLocalISO(values.dateStart),\n//                                       dateEnd: dateEnd,\n//                                       note: values.note,\n//                                       registrationFeePaid: values.registrationFeePaid\n//                                     }\n//                                   }, refetchQueries: [\n//                                       {query: GET_ACCOUNT_SUBSCRIPTIONS_QUERY, variables: {accountId: accountId}}\n//                                   ]})\n//                                   .then(({ data }) => {\n//                                       console.log('got data', data)\n//                                       toast.success((t('relations.account.subscriptions.toast_add_success')), {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                     }).catch((error) => {\n//                                       toast.error((t('general.toast_server_error')) +  error, {\n//                                           position: toast.POSITION.BOTTOM_RIGHT\n//                                         })\n//                                       console.log('there was an error sending the query', error)\n//                                       setSubmitting(false)\n//                                     })\n//                               }}\n//                               >\n//                               {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n//                                 <AccountSubscriptionForm\n//                                   inputData={inputData}\n//                                   isSubmitting={isSubmitting}\n//                                   setFieldValue={setFieldValue}\n//                                   setFieldTouched={setFieldTouched}\n//                                   errors={errors}\n//                                   values={values}\n//                                   returnUrl={returnUrl}\n//                                 >\n//                                   {console.log(errors)}\n//                                 </AccountSubscriptionForm>\n//                               )}\n//                           </Formik>\n//                       )}\n//                       </Mutation>\n//                     </Card>\n//                   </Grid.Col>\n//                   <Grid.Col md={3}>\n//                     <HasPermissionWrapper permission=\"add\"\n//                                           resource=\"accountsubscription\">\n//                       <Link to={returnUrl}>\n//                         <Button color=\"primary btn-block mb-6\">\n//                           <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n//                         </Button>\n//                       </Link>\n//                     </HasPermissionWrapper>\n//                     <ProfileMenu \n//                       activeLink='subscriptions'\n//                       accountId={match.params.accountId}\n//                     />\n//                   </Grid.Col>\n//                 </Grid.Row>\n//               </Container>\n//             )}}\n//           </Query>\n//         </div>\n//     </SiteWrapper>\n//     )}\n//   }\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionAdd))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\n// position: top or bottom\n// tabs: [[name, title, link], ...]\n// active: active tab name\n\nfunction CardTabs({ t, position=\"top\", tabs, active}) {\n  let class_tabs_position = \"card-tabs-top\"\n  switch(position) {\n    case \"top\":\n      break\n    case \"bottom\":\n      class_tabs_position = \"card-tabs-top\"\n      break\n    default:\n      break\n  }   \n\n  return (\n    <div className={`card-tabs ${class_tabs_position}`}>\n      {\n        tabs.map(({name, title, link}) => (\n          <Link key={v4()} to={link} className={`card-tabs-item ${(name === active) ? \"active\": \"\"}`}>\n            <h3 className=\"card-title\"> {title} </h3>\n          </Link>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default withTranslation()(CardTabs)\n\n\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport CardTabs from \"../../../../ui/CardTabs\"\n\nfunction AccountSubscriptionEditTabs({ t, active, account_id, subscription_id}) {\n\n  return (\n    <CardTabs \n      position=\"top\"\n      tabs={[\n          {\n            name: \"general\", \n            title: t(\"relations.account.subscriptions.menu.general\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}`\n          },\n          {\n            name: \"pauses\", \n            title: t(\"relations.account.subscriptions.menu.pauses\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}/pauses`\n          },\n          {\n            name: \"blocks\", \n            title: t(\"relations.account.subscriptions.menu.blocks\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}/blocks`\n          },\n          {\n            name: \"alt_prices\", \n            title: t(\"relations.account.subscriptions.menu.alt_prices\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}/alt_prices`\n          },\n          {\n            name: \"invoices\", \n            title: t(\"relations.account.subscriptions.menu.invoices\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}/invoices`\n          },\n          {\n            name: \"credits\", \n            title: t(\"relations.account.subscriptions.menu.credits\"), \n            link: `/relations/accounts/${account_id}/subscriptions/edit/${subscription_id}/credits`\n          },\n      ]}\n      active={active}\n    />\n  )\n}\n\nexport default withTranslation()(AccountSubscriptionEditTabs)\n\n\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditTabs from \"./AccountSubscriptionEditTabs\"\n\nimport ProfileCardSmall from \"../../../../ui/ProfileCardSmall\"\nimport ProfileMenu from \"../../ProfileMenu\"\nimport moment from 'moment'\n\n\nfunction AccountSubscriptionEditBaseBase({t, history, match, children, account=null, subscription=null, active_tab}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  \n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = \"/relations/accounts/\" + accountId + \"/subscriptions\"\n  const cardTitle = (subscription) ? \n    <span className=\"text-muted\">\n      - {subscription.organizationSubscription.name + \" \" + moment(subscription.dateStart).format(dateFormat)} - {subscription.creditTotal} {t(\"general.credits\")}\n    </span> : \"\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={(account) ? account.firstName + \" \" + account.lastName : \"\"} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('relations.account.subscriptions.title_edit')} {cardTitle}</Card.Title>\n                </Card.Header>\n                <AccountSubscriptionEditTabs \n                  account_id={accountId}\n                  subscription_id={subscriptionId}\n                  active={active_tab}\n                />\n                {children}\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              <HasPermissionWrapper permission=\"change\"\n                                    resource=\"accountsubscription\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              <ProfileMenu \n                activeLink='subscriptions'\n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBaseBase))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_QUERY } from '../queries'\nimport AccountSubscriptionForm from '../AccountSubscriptionForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\nimport AccountSubscriptionEditTabs from \"./AccountSubscriptionEditTabs\"\nimport AccountSubscriptionEditBaseBase from \"./AccountSubscriptionEditBaseBase\"\n\nimport ProfileMenu from \"../../ProfileMenu\"\n\n\nfunction AccountSubscriptionEditBase({t, history, match, children, active_tab}) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const { loading, error, data } = useQuery(GET_ACCOUNT_SUBSCRIPTION_QUERY, {\n    variables: {\n      accountId: accountId,\n      id: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditBaseBase active_tab={active_tab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditBaseBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditBaseBase active_tab={active_tab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditBaseBase>\n  )\n\n  console.log(data)\n  const account = data.account\n  const subscription = data.accountSubscription\n\n  return (\n    <AccountSubscriptionEditBaseBase active_tab={active_tab} account={account} subscription={subscription}>\n      {children}\n    </AccountSubscriptionEditBaseBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBase))\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTIONS_QUERY, GET_ACCOUNT_SUBSCRIPTION_QUERY, UPDATE_ACCOUNT_SUBSCRIPTION } from '../queries'\nimport { SUBSCRIPTION_SCHEMA } from '../yupSchema'\nimport AccountSubscriptionForm from '../AccountSubscriptionForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\nimport AccountSubscriptionEditBase from \"./AccountSubscriptionEditBase\"\n\nimport ProfileMenu from \"../../ProfileMenu\"\n\n\nfunction AccountSubscriptionEdit({t, match, history}) {\n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"general\"\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_SUBSCRIPTION_QUERY, {\n    variables: {\n      archived: false,\n      accountId: accountId,\n      id: id\n    }\n  })\n\n  const [ updateSubscription ] = useMutation(UPDATE_ACCOUNT_SUBSCRIPTION)\n  \n  if (loading) return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const account = data.account\n  const initialdata = data.accountSubscription\n\n  let initialPaymentMethod = \"\"\n  if (initialdata.financePaymentMethod) {\n    initialPaymentMethod = initialdata.financePaymentMethod.id\n  }\n  \n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  let dateEnd = null\n  if (initialdata.dateStart) {\n    dateStart = new Date(initialdata.dateStart)\n  }\n  if (initialdata.dateEnd) {\n    dateEnd = new Date(initialdata.dateEnd)\n  }\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      <Formik\n        initialValues={{ \n          organizationSubscription: initialdata.organizationSubscription.id,\n          financePaymentMethod: initialPaymentMethod,\n          dateStart: dateStart,\n          dateEnd: dateEnd,\n          note: initialdata.note,\n          registrationFeePaid: initialdata.registrationFeePaid\n        }}\n        validationSchema={SUBSCRIPTION_SCHEMA}\n        onSubmit={(values, { setSubmitting }, errors) => {\n            console.log('submit values:')\n            console.log(values)\n            console.log(errors)\n\n            \n            let dateEnd\n            if (values.dateEnd) {\n              dateEnd = dateToLocalISO(values.dateEnd)\n            } else {\n              dateEnd = values.dateEnd\n            }\n\n            updateSubscription({ variables: {\n              input: {\n                id: id,\n                organizationSubscription: values.organizationSubscription,\n                financePaymentMethod: values.financePaymentMethod,\n                dateStart: dateToLocalISO(values.dateStart),\n                dateEnd: dateEnd,\n                note: values.note,\n                registrationFeePaid: values.registrationFeePaid\n              }\n            }, refetchQueries: [\n                {query: GET_ACCOUNT_SUBSCRIPTIONS_QUERY, variables: {accountId: accountId}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('relations.account.subscriptions.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n          <AccountSubscriptionForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldValue={setFieldValue}\n            setFieldTouched={setFieldTouched}\n            errors={errors}\n            values={values}\n            return_url={returnUrl}\n          >\n            {console.log(errors)}\n          </AccountSubscriptionForm>\n        )}\n      </Formik>\n    </AccountSubscriptionEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEdit))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n} from \"tabler-react\";\n\n\nfunction ButtonAddSecondaryMenu({t, match, history, linkTo}) {\n  return (\n    <Link to={linkTo}>\n      <Button\n        color=\"primary\"\n        size=\"sm\"\n        icon=\"plus-circle\"\n        className=\"float-right\"\n      >\n        {t(\"general.add\")}\n      </Button>\n    </Link>\n  )\n}\n\nexport default withTranslation()(withRouter(ButtonAddSecondaryMenu))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY = gql`\nquery AccountSubscriptionAltPrices($before:String, $after:String, $accountSubscription: ID!) {\n  accountSubscriptionAltPrices(before: $before, after: $after, accountSubscription:$accountSubscription) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        accountSubscription {\n          id\n        }\n        subscriptionYear\n        subscriptionMonth\n        amount\n        amountDisplay\n        description\n        note\n        createdAt\n        updatedAt\n      }\n    }\n  }\n}\n`\n\nexport const GET_ACCOUNT_SUBSCRIPTION_ALT_PRICE_QUERY = gql`\nquery AccountSubscriptionAltPrice($id: ID!) {\n  accountSubscriptionAltPrice(id:$id) {\n    id\n    accountSubscription {\n      id\n    }\n    subscriptionYear\n    subscriptionMonth\n    amount\n    description\n    note\n  }\n}\n`\n\n\nexport const DELETE_ACCOUNT_SUBSCRIPTION_ALT_PRICE = gql`\n  mutation DeleteAccountSubscriptionAltPrice($input: DeleteAccountSubscriptionAltPriceInput!) {\n    deleteAccountSubscriptionAltPrice(input: $input) {\n      ok\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditTabs from \"./AccountSubscriptionEditTabs\"\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport ProfileCardSmall from \"../../../../ui/ProfileCardSmall\"\nimport ProfileMenu from \"../../ProfileMenu\"\nimport moment from 'moment'\n\n\nfunction AccountSubscriptionEditBaseBase({\n  t, \n  history, \n  match, \n  children, \n  account=null, \n  subscription=null, \n  pageInfo, \n  onLoadMore, \n  active_tab}\n  ){\n\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  \n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = \"/relations/accounts/\" + accountId + \"/subscriptions\"\n  const cardTitle = (subscription) ? \n    <span className=\"text-muted\">\n      - {subscription.organizationSubscription.name + \" \" + moment(subscription.dateStart).format(dateFormat)} - {subscription.creditTotal} {t(\"general.credits\")}\n    </span> : \"\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={(account) ? account.firstName + \" \" + account.lastName : \"\"} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <ContentCard \n                cardTitle={<span>{t('relations.account.subscriptions.title_edit')} {cardTitle}</span>}\n                pageInfo={pageInfo}\n                onLoadMore={onLoadMore}\n                cardTabs={<AccountSubscriptionEditTabs \n                  account_id={accountId}\n                  subscription_id={subscriptionId}\n                  active={active_tab} /> }\n              >\n                {children}\n              </ContentCard>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <ProfileCardSmall user={account}/>\n              <HasPermissionWrapper permission=\"change\"\n                                    resource=\"accountsubscription\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              <ProfileMenu \n                activeLink='subscriptions'\n                accountId={accountId}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBaseBase))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, Mutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_QUERY } from '../queries'\nimport AccountSubscriptionForm from '../AccountSubscriptionForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\nimport AccountSubscriptionEditTabs from \"./AccountSubscriptionEditTabs\"\nimport AccountSubscriptionEditListBaseBase from \"./AccountSubscriptionEditListBaseBase\"\n\nimport ProfileMenu from \"../../ProfileMenu\"\n\n\nfunction AccountSubscriptionEditListBase({t, history, match, children, pageInfo, onLoadMore, active_tab}) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const { loading, error, data } = useQuery(GET_ACCOUNT_SUBSCRIPTION_QUERY, {\n    variables: {\n      accountId: accountId,\n      id: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBaseBase active_tab={active_tab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBaseBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBaseBase active_tab={active_tab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBaseBase>\n  )\n\n  console.log(data)\n  const account = data.account\n  const subscription = data.accountSubscription\n\n  return (\n    <AccountSubscriptionEditListBaseBase \n      active_tab={active_tab} \n      account={account} \n      subscription={subscription}\n      pageInfo={pageInfo}\n      onLoaMore={onLoadMore}\n    >\n      {children}\n    </AccountSubscriptionEditListBaseBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditListBase))\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_ACCOUNT_SUBSCRIPTION_ALT_PRICE, GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction AccountSubscriptionEditAltPriceDelete({t, match, history, id}) {\n  const subscriptionId = match.params.subscription_id\n  const [deleteAccountSubscriptionAltPrice, { data }] = useMutation(DELETE_ACCOUNT_SUBSCRIPTION_ALT_PRICE)\n  const query_vars = {\n    accountSubscription: subscriptionId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"relations.account.subscriptions.alt_prices.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('relations.account.subscriptions.alt_prices.delete_success'),\n          deleteFunction: deleteAccountSubscriptionAltPrice,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPriceDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../../../ui/ButtonAddSecondaryMenu'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditListBase from \"../AccountSubscriptionEditListBase\"\nimport AccountSubscriptionEditAltPriceDelete from \"./AccountSubscriptionEditAltPriceDelete\"\nimport moment from 'moment';\n\n\nfunction AccountSubscriptionEditAltPrices({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  console.log(appSettings)\n  \n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"alt_prices\"\n\n  const buttonAdd = <ButtonAddSecondaryMenu \n                      linkTo={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/alt_prices/add`} />\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY, {\n    variables: {\n      accountSubscription: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const accountSubscriptionAltPrices = data.accountSubscriptionAltPrices\n  const pageInfo = data.accountSubscriptionAltPrices.pageInfo\n\n    // Empty list\n    if (!accountSubscriptionAltPrices.edges.length) { return (\n      <AccountSubscriptionEditListBase active_tab={activeTab}>\n        <div className=\"pull-right\">{buttonAdd}</div>\n        <h5>{t('relations.account.subscriptions.alt_prices.title_list')}</h5>\n        <p>{t('relations.account.subscriptions.alt_prices.empty_list')}</p>\n      </AccountSubscriptionEditListBase>\n    )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: accountSubscriptionAltPrices.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.accountSubscriptionAltPrices.edges\n        const pageInfo = fetchMoreResult.accountSubscriptionAltPrices.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              accountSubscriptionAltPrices: {\n                __typename: previousResult.accountSubscriptionAltPrices.__typename,\n                edges: [ ...previousResult.accountSubscriptionAltPrices.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <AccountSubscriptionEditListBase active_tab={activeTab} pageInfo={pageInfo} onLoadMore={onLoadMore}>\n      <div className=\"pull-right\">{buttonAdd}</div>\n      <h5>{t('relations.account.subscriptions.alt_prices.title_list')}</h5>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.subscription_year')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.subscription_month')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.amount')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {accountSubscriptionAltPrices.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {node.subscriptionYear}\n                </Table.Col>\n                <Table.Col>\n                  {node.subscriptionMonth}\n                </Table.Col>\n                <Table.Col>\n                  {node.amountDisplay}\n                </Table.Col>\n                <Table.Col>\n                <div dangerouslySetInnerHTML={{__html: node.description}} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/alt_prices/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <AccountSubscriptionEditAltPriceDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </AccountSubscriptionEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPrices))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA = Yup.object().shape({\n  subscriptionYear: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  subscriptionMonth: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  amount: Yup.number()\n    .required()\n  })","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport AccountSubscriptionEditBase from \"../AccountSubscriptionEditBase\"\n\n\nfunction AccountSubscriptionEditAltPriceBase({ t, history, match, children}) {\n  const activeTab = \"alt_prices\"\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/alt_prices/`\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {children}\n    </AccountSubscriptionEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPriceBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction AccountSubscriptionEditAltPriceForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  let title\n  if ( formTitle == \"create\" ) {\n    title = t('relations.account.subscriptions.alt_prices.add')\n  } else {\n    title = t('relations.account.subscriptions.alt_prices.edit')\n  }\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <h5>{title}</h5>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_year')}>\n              <Field type=\"number\" \n                      name=\"subscriptionYear\" \n                      className={(errors.subscriptionYear) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionYear\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_month')}>\n              <Field type=\"number\" \n                      name=\"subscriptionMonth\" \n                      className={(errors.subscriptionMonth) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionMonth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.amount')}>\n                <Field type=\"text\" \n                    name=\"amount\" \n                    className={(errors.amount) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n                <ErrorMessage name=\"amount\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Field type=\"text\" \n                    name=\"description\" \n                    className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.note')}>\n            <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"note\"\n                initialValue={values.note}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldValue(\"note\", e.target.getContent())\n                  setFieldTouched(\"note\", true, true)\n                }}\n              />\n            <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPriceForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditAltPriceBase from \"./AccountSubscriptionEditAltPriceBase\"\nimport AccountSubscriptionEditAltPriceForm from \"./AccountSubscriptionEditAltPriceForm\"\n\n\nconst ADD_ACCOUNT_SUBSCRIPTION_ALT_PRICE = gql`\n  mutation CreateAccountSubscriptionAltPrice($input:CreateAccountSubscriptionAltPriceInput!) {\n    createAccountSubscriptionAltPrice(input: $input) {\n      accountSubscriptionAltPrice {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditAltPriceAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/alt_prices/`\n\n\n  const [addSubscriptionAltPrice] = useMutation(ADD_ACCOUNT_SUBSCRIPTION_ALT_PRICE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  return (\n    <AccountSubscriptionEditAltPriceBase>\n      <Formik\n        initialValues={{ \n          subscriptionYear: new Date().getFullYear(),\n          subscriptionMonth: new Date().getMonth() + 1,\n          amount: 0,\n          description: \"\",\n          note: \"\"\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addSubscriptionAltPrice({ variables: {\n            input: {\n              accountSubscription: subscriptionId,\n              subscriptionYear: values.subscriptionYear,\n              subscriptionMonth: values.subscriptionMonth,\n              amount: values.amount,\n              description: values.description,\n              note: values.note,\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.alt_prices.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditAltPriceForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditAltPriceBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPriceAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY, GET_ACCOUNT_SUBSCRIPTION_ALT_PRICE_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA } from './yupSchema'\n\nimport AccountSubscriptionEditAltPriceBase from \"./AccountSubscriptionEditAltPriceBase\"\nimport AccountSubscriptionEditAltPriceForm from \"./AccountSubscriptionEditAltPriceForm\"\n\n\nconst UPDATE_ACCOUNT_SUBSCRIPTION_ALT_PRICE = gql`\n  mutation UpdateAccountSubscriptionAltPrice($input:UpdateAccountSubscriptionAltPriceInput!) {\n    updateAccountSubscriptionAltPrice(input: $input) {\n      accountSubscriptionAltPrice {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditAltPriceEdit({ t, history, match }) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/alt_prices/`\n\n  const { loading, error, data, } = useQuery(GET_ACCOUNT_SUBSCRIPTION_ALT_PRICE_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [updateSubscriptionAltPrice] = useMutation(UPDATE_ACCOUNT_SUBSCRIPTION_ALT_PRICE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  if (loading) return (\n    <AccountSubscriptionEditAltPriceBase>\n        <p>{t('general.loading_with_dots')}</p>\n    </AccountSubscriptionEditAltPriceBase>\n  )\n  // Error\n  if (error) {\n    return (\n      <AccountSubscriptionEditAltPriceBase>\n          { console.log(error) }\n          <p>{t('general.error_sad_smiley')}</p>\n      </AccountSubscriptionEditAltPriceBase>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const accountSubscriptionAltPrice = data.accountSubscriptionAltPrice\n\n\n\n  return (\n    <AccountSubscriptionEditAltPriceBase>\n      <Formik\n        initialValues={{ \n          subscriptionYear: accountSubscriptionAltPrice.subscriptionYear,\n          subscriptionMonth: accountSubscriptionAltPrice.subscriptionMonth,\n          amount: accountSubscriptionAltPrice.amount,\n          description: accountSubscriptionAltPrice.description,\n          note: accountSubscriptionAltPrice.note\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_ALT_PRICE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateSubscriptionAltPrice({ variables: {\n            input: {\n              id: id,\n              subscriptionYear: values.subscriptionYear,\n              subscriptionMonth: values.subscriptionMonth,\n              amount: values.amount,\n              description: values.description,\n              note: values.note,\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_ALT_PRICES_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.alt_prices.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditAltPriceForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"update\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditAltPriceBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditAltPriceEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY = gql`\nquery AccountSubscriptionBlocks($before: String, $after: String, $accountSubscription: ID!) {\n  accountSubscriptionBlocks(first: 20, before: $before, after: $after, accountSubscription: $accountSubscription) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        accountSubscription {\n          id\n        }\n        dateStart\n        dateEnd\n        description\n        createdAt\n      }\n    } \n  }\n}\n`\n\nexport const GET_ACCOUNT_SUBSCRIPTION_BLOCK_QUERY = gql`\nquery AccountSubscriptionBlock($id: ID!) {\n  accountSubscriptionBlock(id:$id) {\n    id\n    accountSubscription {\n      id\n    }\n    dateStart\n    dateEnd\n    description\n  }\n}\n`\n\n\nexport const DELETE_ACCOUNT_SUBSCRIPTION_BLOCK = gql`\n  mutation DeleteAccountSubscriptionBlock($input: DeleteAccountSubscriptionBlockInput!) {\n    deleteAccountSubscriptionBlock(input: $input) {\n      ok\n    }\n  }\n`\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_ACCOUNT_SUBSCRIPTION_BLOCK, GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction AccountSubscriptionEditBlockDelete({t, match, history, id}) {\n  const subscriptionId = match.params.subscription_id\n  const [deleteAccountSubscriptionBlock, { data }] = useMutation(DELETE_ACCOUNT_SUBSCRIPTION_BLOCK)\n  const query_vars = {\n    accountSubscription: subscriptionId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"relations.account.subscriptions.blocks.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('relations.account.subscriptions.blocks.delete_success'),\n          deleteFunction: deleteAccountSubscriptionBlock,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlockDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../../../ui/ButtonAddSecondaryMenu'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditListBase from \"../AccountSubscriptionEditListBase\"\nimport AccountSubscriptionEditBlockDelete from \"./AccountSubscriptionEditBlockDelete\"\nimport moment from 'moment';\n\n\nfunction AccountSubscriptionEditBlocks({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  console.log(appSettings)\n  \n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"blocks\"\n\n  const buttonAdd = <ButtonAddSecondaryMenu \n                      linkTo={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/blocks/add`} />\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY, {\n    variables: {\n      accountSubscription: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const accountSubscriptionBlocks = data.accountSubscriptionBlocks\n  const pageInfo = data.accountSubscriptionBlocks.pageInfo\n\n    // Empty list\n    if (!accountSubscriptionBlocks.edges.length) { return (\n      <AccountSubscriptionEditListBase active_tab={activeTab}>\n        <div className=\"pull-right\">{buttonAdd}</div>\n        <h5>{t('relations.account.subscriptions.blocks.title_list')}</h5>\n        <p>{t('relations.account.subscriptions.blocks.empty_list')}</p>\n      </AccountSubscriptionEditListBase>\n    )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: accountSubscriptionBlocks.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.accountSubscriptionBlocks.edges\n        const pageInfo = fetchMoreResult.accountSubscriptionBlocks.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              accountSubscriptionBlocks: {\n                __typename: previousResult.accountSubscriptionBlocks.__typename,\n                edges: [ ...previousResult.accountSubscriptionBlocks.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <AccountSubscriptionEditListBase active_tab={activeTab} pageInfo={pageInfo} onLoadMore={onLoadMore}>\n      <div className=\"pull-right\">{buttonAdd}</div>\n      <h5>{t('relations.account.subscriptions.blocks.title_list')}</h5>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {accountSubscriptionBlocks.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {moment(node.dateStart).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  {moment(node.dateEnd).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  <div dangerouslySetInnerHTML={{__html: node.description}} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/blocks/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <AccountSubscriptionEditBlockDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </AccountSubscriptionEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlocks))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA = Yup.object().shape({\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .required(t('yup.field_required')),\n  })","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport AccountSubscriptionEditBase from \"../AccountSubscriptionEditBase\"\n\n\nfunction AccountSubscriptionEditBlockBase({ t, history, match, children}) {\n  const activeTab = \"blocks\"\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/blocks/`\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {children}\n    </AccountSubscriptionEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlockBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction AccountSubscriptionEditBlockForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  let title\n  if ( formTitle == \"create\" ) {\n    title = t('relations.account.subscriptions.blocks.add')\n  } else {\n    title = t('relations.account.subscriptions.blocks.edit')\n  }\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <h5>{title}</h5>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => setFieldValue(\"dateStart\", date)}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                className={(errors.dateEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateEnd}\n                onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"description\"\n                initialValue={values.description}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldValue(\"description\", e.target.getContent())\n                  setFieldTouched(\"description\", true, true)\n                }}\n              />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlockForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditBlockBase from \"./AccountSubscriptionEditBlockBase\"\nimport AccountSubscriptionEditBlockForm from \"./AccountSubscriptionEditBlockForm\"\n\n\nconst ADD_ACCOUNT_SUBSCRIPTION_BLOCK = gql`\n  mutation CreateAccountSubscriptionBlock($input:CreateAccountSubscriptionBlockInput!) {\n    createAccountSubscriptionBlock(input: $input) {\n      accountSubscriptionBlock {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditBlockAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/blocks/`\n\n\n  const [addSubscriptionBlock] = useMutation(ADD_ACCOUNT_SUBSCRIPTION_BLOCK, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  return (\n    <AccountSubscriptionEditBlockBase>\n      <Formik\n        initialValues={{ \n          dateStart: new Date() ,\n          description: \"\"\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addSubscriptionBlock({ variables: {\n            input: {\n              accountSubscription: subscriptionId,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.blocks.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditBlockForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditBlockBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlockAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY, GET_ACCOUNT_SUBSCRIPTION_BLOCK_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditBlockBase from \"./AccountSubscriptionEditBlockBase\"\nimport AccountSubscriptionEditBlockForm from \"./AccountSubscriptionEditBlockForm\"\n\n\nconst UPDATE_ACCOUNT_SUBSCRIPTION_BLOCK = gql`\n  mutation UpdateAccountSubscriptionBlock($input:UpdateAccountSubscriptionBlockInput!) {\n    updateAccountSubscriptionBlock(input: $input) {\n      accountSubscriptionBlock {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditBlockEdit({ t, history, match }) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/blocks/`\n\n  const { loading, error, data, } = useQuery(GET_ACCOUNT_SUBSCRIPTION_BLOCK_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [updateSubscriptionBlock] = useMutation(UPDATE_ACCOUNT_SUBSCRIPTION_BLOCK, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  if (loading) return (\n    <AccountSubscriptionEditBlockBase>\n        <p>{t('general.loading_with_dots')}</p>\n    </AccountSubscriptionEditBlockBase>\n  )\n  // Error\n  if (error) {\n    return (\n      <AccountSubscriptionEditBlockBase>\n          { console.log(error) }\n          <p>{t('general.error_sad_smiley')}</p>\n      </AccountSubscriptionEditBlockBase>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const accountSubscriptionBlock = data.accountSubscriptionBlock\n\n\n\n  return (\n    <AccountSubscriptionEditBlockBase>\n      <Formik\n        initialValues={{ \n          dateStart: new Date(accountSubscriptionBlock.dateStart),\n          dateEnd: new Date(accountSubscriptionBlock.dateEnd),\n          description: accountSubscriptionBlock.description\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_BLOCK_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateSubscriptionBlock({ variables: {\n            input: {\n              id: id,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_BLOCKS_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.blocks.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditBlockForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"update\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditBlockBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditBlockEdit))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Badge\n} from \"tabler-react\";\n\nfunction SubscriptionCreditsMutationType({ t, mutationType }) {\n  switch (mutationType) {\n    case \"ADD\":  \n      return <Badge color=\"success\">+</Badge>\n      break\n    case \"SUB\":\n      return <Badge color=\"secondary\">-</Badge>\n      break\n    default:\n      return \"\"\n  }\n}\n\nexport default withTranslation()(SubscriptionCreditsMutationType)\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY = gql`\nquery AccountSubscriptionCredits($before: String, $after: String, $accountSubscription: ID!) {\n  accountSubscriptionCredits(first: 20, before: $before, after: $after, accountSubscription: $accountSubscription) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        accountSubscription {\n          id\n        }\n        mutationType\n        mutationAmount\n        description\n        createdAt\n      }\n    } \n  }\n}\n`\n\nexport const GET_ACCOUNT_SUBSCRIPTION_CREDIT_QUERY = gql`\nquery AccountSubscriptionCredit($id: ID!) {\n  accountSubscriptionCredit(id:$id) {\n    id\n    accountSubscription {\n      id\n    }\n    mutationType\n    mutationAmount\n    description\n    createdAt\n  }\n}\n`\n\n\nexport const DELETE_ACCOUNT_SUBSCRIPTION_CREDIT = gql`\n  mutation DeleteAccountSubscriptionCredit($input: DeleteAccountSubscriptionCreditInput!) {\n    deleteAccountSubscriptionCredit(input: $input) {\n      ok\n    }\n  }\n`\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_ACCOUNT_SUBSCRIPTION_QUERY } from \"../../queries\"\nimport { DELETE_ACCOUNT_SUBSCRIPTION_CREDIT, GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction AccountSubscriptionEditCreditDelete({t, match, history, id}) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const [deleteAccountSubscriptionCredit] = useMutation(DELETE_ACCOUNT_SUBSCRIPTION_CREDIT)\n  const query_vars = {\n    accountSubscription: subscriptionId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"relations.account.subscriptions.credits.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('relations.account.subscriptions.credits.delete_success'),\n          deleteFunction: deleteAccountSubscriptionCredit,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY, variables: query_vars },\n              { query: GET_ACCOUNT_SUBSCRIPTION_QUERY, variables: {\n                accountId: accountId,\n                id: subscriptionId\n              }}\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCreditDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport SubscriptionCreditsMutationType from \"../../../../../ui/SubscriptionCreditsMutationType\"\nimport ButtonAddSecondaryMenu from '../../../../../ui/ButtonAddSecondaryMenu'\n\nimport AppSettingsContext from '../../../../../context/AppSettingsContext'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditListBase from \"../AccountSubscriptionEditListBase\"\nimport AccountSubscriptionEditCreditDelete from \"./AccountSubscriptionEditCreditDelete\"\nimport moment from 'moment';\n\n\nfunction AccountSubscriptionEditCredits({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n  console.log(appSettings)\n  \n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"credits\"\n\n  const buttonAdd = <ButtonAddSecondaryMenu \n                     linkTo={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/add`} />\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY, {\n    variables: {\n      accountSubscription: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const accountSubscriptionCredits = data.accountSubscriptionCredits\n  const pageInfo = data.accountSubscriptionCredits.pageInfo\n  // const inputData = data\n  // const account = data.account\n  // const initialdata = data.accountSubscription\n\n  // let initialPaymentMethod = \"\"\n  // if (initialdata.financePaymentMethod) {\n  //   initialPaymentMethod = initialdata.financePaymentMethod.id\n  // }\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: accountSubscriptionCredits.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.accountSubscriptionCredits.edges\n        const pageInfo = fetchMoreResult.accountSubscriptionCredits.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              accountSubscriptionCredits: {\n                __typename: previousResult.accountSubscriptionCredits.__typename,\n                edges: [ ...previousResult.accountSubscriptionCredits.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <AccountSubscriptionEditListBase active_tab={activeTab} pageInfo={pageInfo} onLoadMore={onLoadMore}>\n      <div className=\"pull-right\">{buttonAdd}</div>\n      <h5>{t('relations.account.subscriptions.credits.title_list')}</h5>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.credits')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.mutation')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {accountSubscriptionCredits.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {moment(node.createdAt).format(dateTimeFormatMoment)}\n                </Table.Col>\n                <Table.Col>\n                  <div dangerouslySetInnerHTML={{__html: node.description}} />\n                </Table.Col>\n                <Table.Col>\n                  {node.mutationAmount}\n                </Table.Col>\n                <Table.Col>\n                  <SubscriptionCreditsMutationType mutationType={node.mutationType} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <AccountSubscriptionEditCreditDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </AccountSubscriptionEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCredits))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA = Yup.object().shape({\n  mutationAmount: Yup.number()\n    .required(t('yup.field_required')),\n  })","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport AccountSubscriptionEditBase from \"../AccountSubscriptionEditBase\"\n\n\nfunction AccountSubscriptionEditCreditBase({ t, history, match, children}) {\n  const activeTab = \"credits\"\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/`\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {children}\n    </AccountSubscriptionEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCreditBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction AccountSubscriptionEditCreditForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  let title\n  if ( formTitle == \"create\" ) {\n    title = t('relations.account.subscriptions.credits.add')\n  } else {\n    title = t('relations.account.subscriptions.credits.edit')\n  }\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <h5>{title}</h5>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.credits')}>\n              <Field type=\"number\" \n                      name=\"mutationAmount\" \n                      className={(errors.mutationAmount) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"mutationAmount\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.subscriptions.credits.mutationType')}>\n              <Field component=\"select\" \n                     name=\"mutationType\" \n                     className={(errors.mutationType) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\">\n                <option value=\"ADD\">{t(\"general.add\")}</option>\n                <option value=\"SUB\">{t(\"general.subtract\")}</option>\n              </Field>\n              <ErrorMessage name=\"mutationType\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"description\"\n                initialValue={values.description}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldValue(\"description\", e.target.getContent())\n                  setFieldTouched(\"description\", true, true)\n                }}\n              />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCreditForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_QUERY } from \"../../queries\"\nimport { GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditCreditBase from \"./AccountSubscriptionEditCreditBase\"\nimport AccountSubscriptionEditCreditForm from \"./AccountSubscriptionEditCreditForm\"\n\n\nconst ADD_ACCOUNT_SUBSCRIPTION_CREDIT = gql`\n  mutation CreateAccountSubscriptionCredit($input:CreateAccountSubscriptionCreditInput!) {\n    createAccountSubscriptionCredit(input: $input) {\n      accountSubscriptionCredit {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditCreditAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/`\n\n  const [addSubscriptionCredit] = useMutation(ADD_ACCOUNT_SUBSCRIPTION_CREDIT, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  return (\n    <AccountSubscriptionEditCreditBase>\n      <Formik\n        initialValues={{ \n          mutationType: \"ADD\",\n          mutationAmount: 0,\n          description: \"\"\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addSubscriptionCredit({ variables: {\n            input: {\n              accountSubscription: subscriptionId,\n              mutationType: values.mutationType,\n              mutationAmount: values.mutationAmount,\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n              {query: GET_ACCOUNT_SUBSCRIPTION_QUERY, variables: {\n                accountId: accountId,\n                id: subscriptionId\n              }}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.credits.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditCreditForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditCreditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCreditAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_QUERY } from \"../../queries\"\nimport { GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY, GET_ACCOUNT_SUBSCRIPTION_CREDIT_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditCreditBase from \"./AccountSubscriptionEditCreditBase\"\nimport AccountSubscriptionEditCreditForm from \"./AccountSubscriptionEditCreditForm\"\n\n\nconst UPDATE_ACCOUNT_SUBSCRIPTION_CREDIT = gql`\n  mutation UpdateAccountSubscriptionCredit($input:UpdateAccountSubscriptionCreditInput!) {\n    updateAccountSubscriptionCredit(input: $input) {\n      accountSubscriptionCredit {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditCreditEdit({ t, history, match }) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/`\n\n  const { loading, error, data, } = useQuery(GET_ACCOUNT_SUBSCRIPTION_CREDIT_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [updateSubscriptionCredit] = useMutation(UPDATE_ACCOUNT_SUBSCRIPTION_CREDIT, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  if (loading) return (\n    <AccountSubscriptionEditCreditBase>\n        <p>{t('general.loading_with_dots')}</p>\n    </AccountSubscriptionEditCreditBase>\n  )\n  // Error\n  if (error) {\n    return (\n      <AccountSubscriptionEditCreditBase>\n          { console.log(error) }\n          <p>{t('general.error_sad_smiley')}</p>\n      </AccountSubscriptionEditCreditBase>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const accountSubscriptionCredit = data.accountSubscriptionCredit\n\n\n  return (\n    <AccountSubscriptionEditCreditBase>\n      <Formik\n        initialValues={{ \n          mutationType: accountSubscriptionCredit.mutationType,\n          mutationAmount: accountSubscriptionCredit.mutationAmount,\n          description: accountSubscriptionCredit.description\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_CREDIT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateSubscriptionCredit({ variables: {\n            input: {\n              id: id,\n              mutationType: values.mutationType,\n              mutationAmount: values.mutationAmount,\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_CREDITS_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n              {query: GET_ACCOUNT_SUBSCRIPTION_QUERY, variables: {\n                accountId: accountId,\n                id: subscriptionId\n              }}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.credits.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditCreditForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"update\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditCreditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditCreditEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_FINANCE_INVOICE_ITEM_QUERY = gql`\nquery financeInvoiceItem($before: String, $after: String, $accountSubscription: ID!) {\n  financeInvoiceItems(before: $before, after: $after, accountSubscription:$accountSubscription, orderBy: [\"-finance_invoice__date_sent\"]) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        financeInvoice {\n          id\n          invoiceNumber\n          status\n          summary\n          dateSent\n          dateDue\n          total\n          balance\n        }\n        subscriptionYear\n        subscriptionMonth\n      }\n    }\n  }\n}\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InvoiceInputValues($after: String, $before: String) {\n    financeInvoiceGroups(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n// export const GET_ACCOUNT_SUBSCRIPTION_CREDIT_QUERY = gql`\n// query AccountSubscriptionCredit($id: ID!) {\n//   accountSubscriptionCredit(id:$id) {\n//     id\n//     accountSubscription {\n//       id\n//     }\n//     mutationType\n//     mutationAmount\n//     description\n//     createdAt\n//   }\n// }\n// `\n\n\n// export const DELETE_ACCOUNT_SUBSCRIPTION_CREDIT = gql`\n//   mutation DeleteAccountSubscriptionCredit($input: DeleteAccountSubscriptionCreditInput!) {\n//     deleteAccountSubscriptionCredit(input: $input) {\n//       ok\n//     }\n//   }\n// `\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_FINANCE_INVOICE_ITEM_QUERY } from \"./queries\"\nimport { DELETE_FINANCE_INVOICE } from \"../../../../../finance/invoices/queries\"\nimport confirm_delete from \"../../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction AccountSubscriptionEditInvoiceDelete({t, match, history, id}) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const [deleteAccountSubscriptionInvoice] = useMutation(DELETE_FINANCE_INVOICE)\n  const query_vars = {\n    accountSubscription: subscriptionId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"finance.invoices.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('finance.invoices.deleted'),\n          deleteFunction: deleteAccountSubscriptionInvoice,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_FINANCE_INVOICE_ITEM_QUERY, variables: query_vars },\n              // { query: GET_FINANCE_INVOICE_ITEM_QUERY, variables: {\n              //   accountId: accountId,\n              //   id: subscriptionId\n              // }}\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditInvoiceDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport FinanceInvoicesStatus from \"../../../../../ui/FinanceInvoiceStatus\"\nimport ButtonAddSecondaryMenu from '../../../../../ui/ButtonAddSecondaryMenu'\n\nimport AppSettingsContext from '../../../../../context/AppSettingsContext'\n\nimport { GET_FINANCE_INVOICE_ITEM_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n  Text\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport CSLS from \"../../../../../../tools/cs_local_storage\"\nimport AccountSubscriptionEditInvoiceDelete from \"./AccountSubscriptionEditInvoiceDelete\"\nimport AccountSubscriptionEditListBase from \"../AccountSubscriptionEditListBase\"\n// import AccountSubscriptionEditCreditDelete from \"./AccountSubscriptionEditCreditDelete\"\nimport moment from 'moment';\n\n\nfunction AccountSubscriptionEditInvoices({t, location, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n  console.log(appSettings)\n  \n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"invoices\"\n\n  const buttonAdd = <ButtonAddSecondaryMenu \n                     linkTo={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/invoices/add`} />\n\n  const { loading, error, data, fetchMore } = useQuery(GET_FINANCE_INVOICE_ITEM_QUERY, {\n    variables: {\n      accountSubscription: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  // Set back location for edit invoice\n  localStorage.setItem(CSLS.FINANCE_INVOICES_EDIT_RETURN, location.pathname)\n\n  const financeInvoiceItems = data.financeInvoiceItems\n  const pageInfo = data.financeInvoiceItems.pageInfo\n  // const inputData = data\n  // const account = data.account\n  // const initialdata = data.accountSubscription\n\n  // let initialPaymentMethod = \"\"\n  // if (initialdata.financePaymentMethod) {\n  //   initialPaymentMethod = initialdata.financePaymentMethod.id\n  // }\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: financeInvoiceItems.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.financeInvoiceItems.edges\n        const pageInfo = fetchMoreResult.financeInvoiceItems.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              financeInvoiceItems: {\n                __typename: previousResult.financeInvoiceItems.__typename,\n                edges: [ ...previousResult.financeInvoiceItems.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <AccountSubscriptionEditListBase active_tab={activeTab} pageInfo={pageInfo} onLoadMore={onLoadMore}>\n      <div className=\"pull-right\">{buttonAdd}</div>\n      <h5>{t('relations.account.subscriptions.invoices.title_list')}</h5>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n            <Table.ColHeader>{t('finance.invoices.invoice_number')} & {t('finance.invoices.summary')}</Table.ColHeader>\n            <Table.ColHeader>{t('finance.invoices.date')} & {t('finance.invoices.due')}</Table.ColHeader>\n            {/* <Table.ColHeader>{t('finance.invoices.due')}</Table.ColHeader> */}\n            <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.balance')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {financeInvoiceItems.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  <FinanceInvoicesStatus status={node.financeInvoice.status} />\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.financeInvoice.invoiceNumber} <br />\n                  <Text.Small color=\"gray\">{node.financeInvoice.summary.trunc(30)}</Text.Small>\n                </Table.Col>\n\n                <Table.Col key={v4()}>\n                  {moment(node.financeInvoice.dateSent).format('LL')} <br />\n                  {moment(node.financeInvoice.dateDue).format('LL')}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.financeInvoice.totalDisplay}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.financeInvoice.balanceDisplay}\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <Button className='btn-sm' \n                          onClick={() => history.push(\"/finance/invoices/edit/\" + node.financeInvoice.id)}\n                          color=\"secondary\">\n                    {t('general.edit')}\n                  </Button>\n                </Table.Col>\n                <Table.Col>\n                  <AccountSubscriptionEditInvoiceDelete id={node.financeInvoice.id} />\n                </Table.Col>\n                {/* <Table.Col>\n                  {moment(node.createdAt).format(dateTimeFormatMoment)}\n                </Table.Col>\n                <Table.Col>\n                  <div dangerouslySetInnerHTML={{__html: node.description}} />\n                </Table.Col>\n                <Table.Col>\n                  {node.mutationAmount}\n                </Table.Col>\n                <Table.Col>\n                  <SubscriptionCreditsMutationType mutationType={node.mutationType} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/credits/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <AccountSubscriptionEditCreditDelete id={node.id} />\n                </Table.Col> */}\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </AccountSubscriptionEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditInvoices))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SUBSCRIPTION_INVOICE_SCHEMA = Yup.object().shape({\n  financeInvoiceGroup: Yup.string()\n    .required(t('yup.field_required')),\n  subscriptionYear: Yup.number()\n    .required()\n    .positive()\n    .min(1000)\n    .max(9999),\n  subscriptionMonth: Yup.number()\n    .required()\n    .positive()\n    .min(1)\n    .max(12),\n  })","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport AccountSubscriptionEditBase from \"../AccountSubscriptionEditBase\"\n\n\nfunction AccountSubscriptionEditInvoiceAddBase({ t, history, match, children}) {\n  const activeTab = \"invoices\"\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/invoices/`\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {children}\n    </AccountSubscriptionEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditInvoiceAddBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction AccountSubscriptionEditInvoiceAddForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  const title = t('relations.account.subscriptions.invoices.add')\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <h5>{title}</h5>\n        <Form.Group label={t('general.finance_invoice_group')}>\n          <Field component=\"select\" \n                name=\"financeInvoiceGroup\" \n                className={(errors.financeInvoiceGroup) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n            {inputData.financeInvoiceGroups.edges.map(({ node }) =>\n              <option value={node.id} key={v4()}>{node.name}</option>\n            )}\n          </Field>\n          <ErrorMessage name=\"financeInvoiceGroup\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Form.Group label={t('general.summary')}>\n          <Field type=\"text\" \n                  name=\"summary\" \n                  className={(errors.summary) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n          <ErrorMessage name=\"summary\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_year')}>\n              <Field type=\"number\" \n                      name=\"subscriptionYear\" \n                      className={(errors.subscriptionYear) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionYear\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.subscription_month')}>\n              <Field type=\"number\" \n                      name=\"subscriptionMonth\" \n                      className={(errors.subscriptionMonth) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"subscriptionMonth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            className=\"pull-right\"\n            color=\"primary\"\n            disabled={isSubmitting}\n            type=\"submit\"\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button\n              type=\"button\" \n              color=\"link\" \n            >\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditInvoiceAddForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n// import { GET_ACCOUNT_SUBSCRIPTION_QUERY } from \"../../queries\"\nimport { GET_FINANCE_INVOICE_ITEM_QUERY, GET_INPUT_VALUES_QUERY } from \"./queries\"\nimport { CREATE_ACCOUNT_INVOICE } from \"../../../invoices/queries\"\nimport { ACCOUNT_SUBSCRIPTION_INVOICE_SCHEMA } from './yupSchema'\n\nimport AccountSubscriptionEditInvoiceAddBase from \"./AccountSubscriptionEditInvoiceAddBase\"\nimport AccountSubscriptionEditInvoiceAddForm from \"./AccountSubscriptionEditInvoiceAddForm\"\n\n\nfunction AccountSubscriptionEditInvoiceAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/invoices/`\n\n  const { loading: queryLoading, error: queryError, data: queryData } = useQuery(GET_INPUT_VALUES_QUERY)\n\n  const [ addFinanceInvoice ] = useMutation(CREATE_ACCOUNT_INVOICE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n    // Loading\n    if (queryLoading) return (\n      <AccountSubscriptionEditInvoiceAddBase>\n        <p>{t('general.loading_with_dots')}</p>\n      </AccountSubscriptionEditInvoiceAddBase>\n    )\n    // Error\n    if (queryError) {\n      console.log(queryError)\n      return (\n        <AccountSubscriptionEditInvoiceAddBase>\n          <p>{t('general.error_sad_smiley')}</p>\n        </AccountSubscriptionEditInvoiceAddBase>\n      )\n    }\n    \n    console.log(queryData)\n\n  return (\n    <AccountSubscriptionEditInvoiceAddBase>\n      <Formik\n        initialValues={{ \n          financeInvoiceGroup: \"\",\n          summary: \"\",\n          subscriptionYear: new Date().getFullYear(), \n          subscriptionMonth: new Date().getMonth() + 1,\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_INVOICE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addFinanceInvoice({ variables: {\n            input: {\n              account: accountId,\n              accountSubscription: subscriptionId,\n              financeInvoiceGroup: values.financeInvoiceGroup,\n              subscriptionYear: values.subscriptionYear,\n              subscriptionMonth: values.subscriptionMonth,\n              summary: values.summary,\n            }\n          }, refetchQueries: [\n              {query: GET_FINANCE_INVOICE_ITEM_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n              // {query: GET_ACCOUNT_SUBSCRIPTION_QUERY, variables: {\n              //   accountId: accountId,\n              //   id: subscriptionId\n              // }}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              const financeInvoiceId = data.createFinanceInvoice.financeInvoice.id\n              history.push(`/finance/invoices/edit/${financeInvoiceId}`)\n              toast.success((t('relations.account.subscriptions.invoices.toast_add_success')), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n              toast.success((t('relations.account.subscriptions.invoices.toast_you_are_now_editing')), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditInvoiceAddForm\n            inputData={queryData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditInvoiceAddBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditInvoiceAdd))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY = gql`\nquery AccountSubscriptionPauses($before: String, $after: String, $accountSubscription: ID!) {\n  accountSubscriptionPauses(first: 20, before: $before, after: $after, accountSubscription: $accountSubscription) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        accountSubscription {\n          id\n        }\n        dateStart\n        dateEnd\n        description\n        createdAt\n      }\n    } \n  }\n}\n`\n\nexport const GET_ACCOUNT_SUBSCRIPTION_PAUSE_QUERY = gql`\nquery AccountSubscriptionPause($id: ID!) {\n  accountSubscriptionPause(id:$id) {\n    id\n    accountSubscription {\n      id\n    }\n    dateStart\n    dateEnd\n    description\n  }\n}\n`\n\n\nexport const DELETE_ACCOUNT_SUBSCRIPTION_PAUSE = gql`\n  mutation DeleteAccountSubscriptionPause($input: DeleteAccountSubscriptionPauseInput!) {\n    deleteAccountSubscriptionPause(input: $input) {\n      ok\n    }\n  }\n`\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_ACCOUNT_SUBSCRIPTION_PAUSE, GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction AccountSubscriptionEditPauseDelete({t, match, history, id}) {\n  const subscriptionId = match.params.subscription_id\n  const [deleteAccountSubscriptionPause, { data }] = useMutation(DELETE_ACCOUNT_SUBSCRIPTION_PAUSE)\n  const query_vars = {\n    accountSubscription: subscriptionId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"relations.account.subscriptions.pauses.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('relations.account.subscriptions.pauses.delete_success'),\n          deleteFunction: deleteAccountSubscriptionPause,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauseDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport ButtonAddSecondaryMenu from '../../../../../ui/ButtonAddSecondaryMenu'\n\nimport AppSettingsContext from '../../../../../context/AppSettingsContext'\n\n\nimport { GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport AccountSubscriptionEditListBase from \"../AccountSubscriptionEditListBase\"\nimport AccountSubscriptionEditPauseDelete from \"./AccountSubscriptionEditPauseDelete\"\nimport moment from 'moment';\n\n\nfunction AccountSubscriptionEditPauses({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormatMoment = appSettings.dateTimeFormatMoment\n  console.log(appSettings)\n  \n  const id = match.params.subscription_id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions`\n  const activeTab = \"pauses\"\n\n  const buttonAdd = <ButtonAddSecondaryMenu \n                      linkTo={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/pauses/add`} />\n\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY, {\n    variables: {\n      accountSubscription: subscriptionId\n    }\n  })\n  \n  if (loading) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      {t(\"general.loading_with_dots\")}\n    </AccountSubscriptionEditListBase>\n  )\n  if (error) return (\n    <AccountSubscriptionEditListBase active_tab={activeTab}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </AccountSubscriptionEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const accountSubscriptionPauses = data.accountSubscriptionPauses\n  const pageInfo = data.accountSubscriptionPauses.pageInfo\n\n    // Empty list\n    if (!accountSubscriptionPauses.edges.length) { return (\n      <AccountSubscriptionEditListBase active_tab={activeTab}>\n        <div className=\"pull-right\">{buttonAdd}</div>\n        <h5>{t('relations.account.subscriptions.pauses.title_list')}</h5>\n        <p>{t('relations.account.subscriptions.pauses.empty_list')}</p>\n      </AccountSubscriptionEditListBase>\n    )}\n  // const inputData = data\n  // const account = data.account\n  // const initialdata = data.accountSubscription\n\n  // let initialPaymentMethod = \"\"\n  // if (initialdata.financePaymentMethod) {\n  //   initialPaymentMethod = initialdata.financePaymentMethod.id\n  // }\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: accountSubscriptionPauses.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.accountSubscriptionPauses.edges\n        const pageInfo = fetchMoreResult.accountSubscriptionPauses.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              accountSubscriptionPauses: {\n                __typename: previousResult.accountSubscriptionPauses.__typename,\n                edges: [ ...previousResult.accountSubscriptionPauses.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <AccountSubscriptionEditListBase active_tab={activeTab} pageInfo={pageInfo} onLoadMore={onLoadMore}>\n      <div className=\"pull-right\">{buttonAdd}</div>\n      <h5>{t('relations.account.subscriptions.pauses.title_list')}</h5>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {accountSubscriptionPauses.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {moment(node.dateStart).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  {moment(node.dateEnd).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                <div dangerouslySetInnerHTML={{__html: node.description}} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/pauses/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <AccountSubscriptionEditPauseDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </AccountSubscriptionEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauses))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA = Yup.object().shape({\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .required(t('yup.field_required')),\n  })","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\n// import { GET_INVOICE_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\n// import { GET_INVOICE_QUERY } from \"../queries\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\n// import ScheduleClassPriceBack from \"./ScheduleClassPriceBack\"\nimport AccountSubscriptionEditBase from \"../AccountSubscriptionEditBase\"\n\n\nfunction AccountSubscriptionEditPauseBase({ t, history, match, children}) {\n  const activeTab = \"pauses\"\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/pauses/`\n\n  return (\n    <AccountSubscriptionEditBase active_tab={activeTab}>\n      {children}\n    </AccountSubscriptionEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauseBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction AccountSubscriptionEditPauseForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  let title\n  if ( formTitle == \"create\" ) {\n    title = t('relations.account.subscriptions.pauses.add')\n  } else {\n    title = t('relations.account.subscriptions.pauses.edit')\n  }\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <h5>{title}</h5>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => setFieldValue(\"dateStart\", date)}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                className={(errors.dateEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateEnd}\n                onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Editor\n                tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n                textareaName=\"description\"\n                initialValue={values.description}\n                init={tinymceBasicConf}\n                onBlur={(e) => {\n                  setFieldValue(\"description\", e.target.getContent())\n                  setFieldTouched(\"description\", true, true)\n                }}\n              />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauseForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditPauseBase from \"./AccountSubscriptionEditPauseBase\"\nimport AccountSubscriptionEditPauseForm from \"./AccountSubscriptionEditPauseForm\"\n\n\nconst ADD_ACCOUNT_SUBSCRIPTION_PAUSE = gql`\n  mutation CreateAccountSubscriptionPause($input:CreateAccountSubscriptionPauseInput!) {\n    createAccountSubscriptionPause(input: $input) {\n      accountSubscriptionPause {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditPauseAdd({ t, history, match }) {\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/pauses/`\n\n  const [addSubscriptionPause] = useMutation(ADD_ACCOUNT_SUBSCRIPTION_PAUSE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  return (\n    <AccountSubscriptionEditPauseBase>\n      <Formik\n        initialValues={{ \n          dateStart: new Date() ,\n          description: \"\"\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addSubscriptionPause({ variables: {\n            input: {\n              accountSubscription: subscriptionId,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.pauses.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditPauseForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditPauseBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauseAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY, GET_ACCOUNT_SUBSCRIPTION_PAUSE_QUERY } from \"./queries\"\nimport { ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA } from './yupSchema'\nimport { dateToLocalISO } from '../../../../../../tools/date_tools'\n\nimport AccountSubscriptionEditPauseBase from \"./AccountSubscriptionEditPauseBase\"\nimport AccountSubscriptionEditPauseForm from \"./AccountSubscriptionEditPauseForm\"\n\n\nconst UPDATE_ACCOUNT_SUBSCRIPTION_PAUSE = gql`\n  mutation UpdateAccountSubscriptionPause($input:UpdateAccountSubscriptionPauseInput!) {\n    updateAccountSubscriptionPause(input: $input) {\n      accountSubscriptionPause {\n        id\n      }\n    }\n  }\n`\n\n\nfunction AccountSubscriptionEditPauseEdit({ t, history, match }) {\n  const id = match.params.id\n  const accountId = match.params.account_id\n  const subscriptionId = match.params.subscription_id\n  const returnUrl = `/relations/accounts/${accountId}/subscriptions/edit/${subscriptionId}/pauses/`\n\n  const { loading, error, data, } = useQuery(GET_ACCOUNT_SUBSCRIPTION_PAUSE_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [updateSubscriptionPause] = useMutation(UPDATE_ACCOUNT_SUBSCRIPTION_PAUSE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  if (loading) return (\n    <AccountSubscriptionEditPauseBase>\n        <p>{t('general.loading_with_dots')}</p>\n    </AccountSubscriptionEditPauseBase>\n  )\n  // Error\n  if (error) {\n    return (\n      <AccountSubscriptionEditPauseBase>\n          { console.log(error) }\n          <p>{t('general.error_sad_smiley')}</p>\n      </AccountSubscriptionEditPauseBase>\n    )\n  }\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const accountSubscriptionPause = data.accountSubscriptionPause\n\n\n\n  return (\n    <AccountSubscriptionEditPauseBase>\n      <Formik\n        initialValues={{ \n          dateStart: new Date(accountSubscriptionPause.dateStart),\n          dateEnd: new Date(accountSubscriptionPause.dateEnd),\n          description: accountSubscriptionPause.description\n        }}\n        validationSchema={ACCOUNT_SUBSCRIPTION_PAUSE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateSubscriptionPause({ variables: {\n            input: {\n              id: id,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              description: values.description\n            }\n          }, refetchQueries: [\n              {query: GET_ACCOUNT_SUBSCRIPTION_PAUSES_QUERY, variables: {\n                accountSubscription: subscriptionId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('relations.account.subscriptions.pauses.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <AccountSubscriptionEditPauseForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"update\"\n          />\n        )}\n      </Formik>\n    </AccountSubscriptionEditPauseBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(AccountSubscriptionEditPauseEdit))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ACCOUNT_TEACHER_PROFILE_QUERY = gql`\n  query AccountTeacherProfileQuery($id: ID!) {\n    accountTeacherProfiles(account:$id) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          account {\n            id\n          }\n          classes\n          appointments\n          events\n          role\n          education\n          bio\n          urlBio\n          urlWebsite   \n        }\n      }\n    }\n    account(id:$id) {\n      id\n      teacher\n      firstName\n      lastName\n      email\n      phone\n      mobile\n      isActive\n      urlImageThumbnailSmall\n    }\n  }\n`\n\n\nexport const UPDATE_ACCOUNT_TEACHER_PROFILE = gql`\n  mutation UpdateAccountTeacherProfile($input:UpdateAccountTeacherProfileInput!) {\n    updateAccountTeacherProfile(input: $input) {\n      accountTeacherProfile {\n        id\n      }\n    }\n  }\n`\n\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_TEACHER_PROFILE_SCHEMA = Yup.object().shape({\n  classes: Yup.boolean(),  \n  appointments: Yup.boolean(),  \n  events: Yup.boolean(),  \n  role: Yup.string(),\n  education: Yup.string(),\n  bio: Yup.string(),\n  urlBio: Yup.string()\n    .url(t('yup.url')),\n  urlWebsite: Yup.string()\n    .url(t('yup.url')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n\n\nconst RelationsAccountTeacherProfileForm = ({ t, history, isSubmitting, errors, values, return_url, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"classes\" \n                  checked={values.classes} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('relations.account.teacher_profile.classes')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"classes\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"events\" \n                  checked={values.events} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('relations.account.teacher_profile.events')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"events\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"appointments\" \n                  checked={values.appointments} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('relations.account.teacher_profile.appointments')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"appointments\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.role')}>\n              <Field type=\"text\" \n                      name=\"role\" \n                      className={(errors.role) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"role\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.education')}>\n          <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"education\"\n              initialValue={values.education}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldTouched(\"education\", true)\n                setFieldValue(\"education\", e.target.getContent())\n              }}\n            />\n          <ErrorMessage name=\"education\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Form.Group label={t('general.bio')}>\n          <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"bio\"\n              initialValue={values.bio}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldTouched(\"bio\", true)\n                setFieldValue(\"bio\", e.target.getContent())\n              }}\n            />\n          <ErrorMessage name=\"bio\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.teacher_profile.url_bio')}>\n              <Field type=\"text\" \n                      name=\"urlBio\" \n                      className={(errors.urlBio) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"urlBio\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('relations.account.teacher_profile.url_website')}>\n              <Field type=\"text\" \n                      name=\"urlWebsite\" \n                      className={(errors.urlWebsite) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"urlWebsite\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          \n          {/* <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsAccountTeacherProfileForm))\n\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_ACCOUNT_TEACHER_PROFILE_QUERY, UPDATE_ACCOUNT_TEACHER_PROFILE } from './queries'\nimport { ACCOUNT_TEACHER_PROFILE_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n} from \"tabler-react\"\n\nimport RelationsAccountProfileForm from \"./RelationsAccountTeacherProfileForm\"\nimport RelationsAccountProfileBase from '../RelationsAccountProfileBase'\n\n\nfunction RelationsAccountTeacherProfile({ t, match}) {\n  const accountId = match.params.account_id\n  const activeLink = \"teacher_profile\"\n  const { loading, error, data } = useQuery(GET_ACCOUNT_TEACHER_PROFILE_QUERY, {\n    variables: { id: accountId }\n  })\n  const [updateAccountTeacherProfile] = useMutation(UPDATE_ACCOUNT_TEACHER_PROFILE)\n\n  if (loading) return (\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>  \n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  if (error) return (\n    <RelationsAccountProfileBase activeLink={activeLink}>\n      {console.log(error)}\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <p>{t('general.error_sad_smiley')}</p>\n        </Card.Body>\n      </Card>\n    </RelationsAccountProfileBase>\n  )\n\n  const account = data.account\n  const initialData = data.accountTeacherProfiles.edges[0].node\n\n  return (\n    <RelationsAccountProfileBase\n      user={account}\n      activeLink={activeLink}\n    >\n      <Card>\n        <Card.Header>\n          <Card.Title>{t('relations.accounts.profile')}</Card.Title>\n        </Card.Header>\n        <Formik\n          initialValues={{ \n            classes: initialData.classes, \n            appointments: initialData.appointments, \n            events: initialData.events, \n            role: initialData.role, \n            education: initialData.education, \n            bio: initialData.bio,\n            urlBio: initialData.urlBio,\n            urlWebsite: initialData.urlWebsite,\n          }}\n          validationSchema={ACCOUNT_TEACHER_PROFILE_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              updateAccountTeacherProfile({ variables: {\n                input: {\n                  account: initialData.account.id,\n                  classes: values.classes, \n                  appointments: values.appointments, \n                  events: values.events, \n                  role: values.role, \n                  education: values.education, \n                  bio: values.bio,\n                  urlBio: values.urlBio,\n                  urlWebsite: values.urlWebsite,\n                }\n              }, refetchQueries: [\n                  // Refresh local cached results for this account teacher profile\n                  {query: GET_ACCOUNT_TEACHER_PROFILE_QUERY, variables: {id: accountId}}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('relations.account.teacher_profile.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n            <RelationsAccountProfileForm\n              isSubmitting={isSubmitting}\n              setFieldTouched={setFieldTouched}\n              setFieldValue={setFieldValue}\n              errors={errors}\n              values={values}\n            />\n          )}\n        </Formik>    \n      </Card>\n    </RelationsAccountProfileBase>\n  )\n}\n\n\n// class RelationsAccountTeacherProfile extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Organization profile props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const match = this.props.match\n//     const account_id = match.params.account_id\n//     console.log(account_id)\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//           <Container>\n//             <Query query={GET_ACCOUNT_TEACHER_PROFILE_QUERY} variables={{ id: account_id }} >\n//               {({ loading, error, data, refetch }) => {\n//                   // Loading\n//                   if (loading) return <p>{t('general.loading_with_dots')}</p>\n//                   // Error\n//                   if (error) {\n//                     console.log(error)\n//                     return <p>{t('general.error_sad_smiley')}</p>\n//                   }\n\n//                   console.log('query data')\n//                   console.log(data)\n                  \n//                   const account = data.account\n//                   const initialData = data.accountTeacherProfiles.edges[0].node\n//                   console.log(initialData)\n\n\n//                   return (\n//                     <div>\n//                       <Page.Header title={account.firstName + \" \" + account.lastName}>\n//                         <RelationsAccountsBack />\n//                       </Page.Header>\n//                       <Grid.Row>\n//                         <Grid.Col md={9}>\n//                         <Card>\n//                           <Card.Header>\n//                             <Card.Title>{t('relations.account.teacher_profile.title')}</Card.Title>\n//                             {console.log(match.params.account_id)}\n//                           </Card.Header>\n//                         <Mutation mutation={UPDATE_ACCOUNT_TEACHER_PROFILE}> \n//                          {(updateAccountTeacherProfile, { data }) => (\n//                           <Formik\n//                             initialValues={{ \n//                               classes: initialData.classes, \n//                               appointments: initialData.appointments, \n//                               events: initialData.events, \n//                               role: initialData.role, \n//                               education: initialData.education, \n//                               bio: initialData.bio,\n//                               urlBio: initialData.urlBio,\n//                               urlWebsite: initialData.urlWebsite,\n//                             }}\n//                             validationSchema={ACCOUNT_TEACHER_PROFILE_SCHEMA}\n//                             onSubmit={(values, { setSubmitting }) => {\n//                                 console.log('submit values:')\n//                                 console.log(values)\n\n//                                 updateAccountTeacherProfile({ variables: {\n//                                   input: {\n//                                     account: initialData.account.id,\n//                                     classes: values.classes, \n//                                     appointments: values.appointments, \n//                                     events: values.events, \n//                                     role: values.role, \n//                                     education: values.education, \n//                                     bio: values.bio,\n//                                     urlBio: values.urlBio,\n//                                     urlWebsite: values.urlWebsite,\n//                                   }\n//                                 }, refetchQueries: [\n//                                     // Refresh local cached results for this account teacher profile\n//                                     {query: GET_ACCOUNT_TEACHER_PROFILE_QUERY, variables: {id: account_id}}\n//                                 ]})\n//                                 .then(({ data }) => {\n//                                     console.log('got data', data)\n//                                     toast.success((t('relations.account.teacher_profile.toast_edit_success')), {\n//                                         position: toast.POSITION.BOTTOM_RIGHT\n//                                       })\n//                                     setSubmitting(false)\n//                                   }).catch((error) => {\n//                                     toast.error((t('general.toast_server_error')) +  error, {\n//                                         position: toast.POSITION.BOTTOM_RIGHT\n//                                       })\n//                                     console.log('there was an error sending the query', error)\n//                                     setSubmitting(false)\n//                                   })\n//                             }}\n//                             >\n//                             {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n//                               <RelationsAccountProfileForm\n//                                 isSubmitting={isSubmitting}\n//                                 setFieldTouched={setFieldTouched}\n//                                 setFieldValue={setFieldValue}\n//                                 errors={errors}\n//                                 values={values}\n//                               />\n//                             )}\n//                           </Formik>\n//                         )}\n//                       </Mutation>\n//                     </Card>\n//                     </Grid.Col>                                    \n//                     <Grid.Col md={3}>\n//                       <ProfileCardSmall user={account}/>\n//                       <ProfileMenu \n//                         activeLink='teacher_profile'\n//                         account_id={account_id}\n//                       /> \n//                     </Grid.Col>\n//                   </Grid.Row>\n//                 </div>\n//               )}}\n//             </Query>\n//           </Container>\n//         </div>\n//     </SiteWrapper>\n//     )}\n//   }\n\n\nexport default withTranslation()(withRouter(RelationsAccountTeacherProfile))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let queryVars = {}\n\n  let search = localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SEARCH)\n  let showArchived = localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE)\n  \n  if (search) {\n    queryVars.name = search\n  }\n  if (showArchived === \"true\") {\n    queryVars.archived = true\n  } else {\n    queryVars.archived = false\n  }\n  \n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n","\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n    Page,\n    Grid,\n    Icon,\n    Button,\n    Container,\n  } from \"tabler-react\";\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport InputSearch from \"../../general/InputSearch\"\nimport RelationsMenu from \"../RelationsMenu\"\nimport { get_list_query_variables } from \"./tools\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n\nconst RelationsB2BBase = ({t, history, refetch, children }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Container>\n        <Page.Header title={t(\"relations.title\")}>\n          <div className=\"page-options d-flex\">\n            <InputSearch \n              initialValueKey={CSLS.RELATIONS_BUSINESSES_SEARCH}\n              placeholder=\"Search...\"\n              onChange={(value) => {\n                console.log(value)\n                localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SEARCH, value)\n                refetch(get_list_query_variables())\n              }}\n            />\n          </div>\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            {children}\n          </Grid.Col>\n          <Grid.Col md={3}>\n            <HasPermissionWrapper permission=\"add\"\n                                  resource=\"business\">\n              <Button color=\"primary btn-block mb-6\"\n                      onClick={() => history.push(\"/relations/b2b/add\")}>\n                <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('relations.b2b.add')}\n              </Button>\n            </HasPermissionWrapper>\n            <RelationsMenu activeLink='b2b'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </div>\n  </SiteWrapper>\n)\n\n\n  export default withTranslation()(withRouter(RelationsB2BBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_BUSINESSES_QUERY = gql`\n  query Businesses($before:String, $after:String, $name:String, $archived: Boolean!) {\n    businesses(first:15, before:$before, after:$after, b2b:true, name_Icontains:$name, archived:$archived) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          archived\n          b2b\n          supplier\n          vip\n          name\n          address\n          postcode\n          city\n          country\n          phone\n          phone2\n          emailContact\n          emailBilling\n          registration\n          taxRegistration\n          mollieCustomerId\n        }\n      }\n    }\n  }\n`\n\nexport const GET_BUSINESS_QUERY = gql`\n  query Business($id: ID!) {\n    business(id:$id) {\n      id\n      archived\n      vip\n      name\n      address\n      postcode\n      city\n      country\n      phone\n      phone2\n      emailContact\n      emailBilling\n      registration\n      taxRegistration\n      mollieCustomerId\n    }\n  }\n`\n\nexport const UPDATE_BUSINESS = gql`\n  mutation UpdateBusiness($input: UpdateBusinessInput!) {\n    updateBusiness(input: $input) {\n      business {\n        id\n        archived\n      }\n    }\n  }\n`\n\n","import React from 'react'\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\nimport {\n  Icon,\n} from \"tabler-react\";\n\n\nconst confirm_archive = ({t, msgConfirm, msgDescription, msgSuccess, archiveFunction, functionVariables}) => {\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className='custom-ui'>\n            <h1>{t('general.confirm_archive')}</h1>\n            {msgConfirm}\n            {msgDescription}\n            <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_archive_no')}</button>\n            <button\n              className=\"btn btn-warning\"\n              onClick={() => {\n                archiveFunction(functionVariables)\n                  .then(({ data }) => {\n                    console.log('got data', data);\n                    toast.success(\n                      msgSuccess, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                  })\n                onClose()\n              }}\n            >\n              <Icon name=\"inbox\" /> {t('general.confirm_archive_yes')}\n            </button>\n          </div>\n        )\n      }\n    })\n  }\n\nexport default confirm_archive\n","import React from 'react'\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\nimport {\n  Icon,\n} from \"tabler-react\";\n\n\nconst confirm_unarchive = ({t, msgConfirm, msgDescription, msgSuccess, archiveFunction, functionVariables}) => {\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className='custom-ui'>\n            <h1>{t('general.confirm_unarchive')}</h1>\n            {msgConfirm}\n            {msgDescription}\n            <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_unarchive_no')}</button>\n            <button\n              className=\"btn btn-warning\"\n              onClick={() => {\n                archiveFunction(functionVariables)\n                  .then(({ data }) => {\n                    console.log('got data', data);\n                    toast.success(\n                      msgSuccess, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                  })\n                onClose()\n              }}\n            >\n              <Icon name=\"corner-up-left\" /> {t('general.confirm_unarchive_yes')}\n            </button>\n          </div>\n        )\n      }\n    })\n  }\n\nexport default confirm_unarchive\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Badge,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport ContentCard from \"../../general/ContentCard\"\nimport RelationsB2BBase from \"./RelationsB2BBase\"\nimport { GET_BUSINESSES_QUERY, UPDATE_BUSINESS } from \"./queries\"\nimport { get_list_query_variables } from \"./tools\"\nimport confirm_archive from \"../../../tools/confirm_archive\"\nimport confirm_unarchive from \"../../../tools/confirm_unarchive\"\nimport confirm_delete from \"../../../tools/confirm_delete\"\n\n\n\n\nconst DELETE_BUSINESS = gql`\n  mutation DeleteBusiness($input: DeleteBusinessInput!) {\n    deleteBusiness(input: $input) {\n      ok\n    }\n  }\n`\n\n\nfunction RelationsB2B({ t, history }) {\n  // Set some initial value for archived, if not found\n  if (!localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE)) {\n    localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE, false) \n  }\n\n  const { loading, error, data, fetchMore, refetch } = useQuery(GET_BUSINESSES_QUERY, { \n    variables: get_list_query_variables()\n  })\n  const [updateBusiness] = useMutation(UPDATE_BUSINESS)\n  const [deleteBusiness] = useMutation(DELETE_BUSINESS)\n\n  const headerOptions = <Card.Options>\n    <Button color={(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"false\") ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {\n              localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE, false)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.current')}\n    </Button>\n    <Button color={(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"true\") ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {\n              localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE, true)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) return (\n    <RelationsB2BBase refetch={refetch}>\n      <ContentCard>\n        {t(\"general.loading_with_dots\")}\n      </ContentCard>\n    </RelationsB2BBase>\n  )\n  if (error) return (\n    <RelationsB2BBase refetch={refetch}>\n      <ContentCard cardTitle={t('relations.b2b.title')}>\n        <p>{t('relations.b2b.error_loading')}</p>\n      </ContentCard>\n    </RelationsB2BBase>\n  )\n\n  let businesses = data.businesses\n\n  // Empty list\n  if (!businesses.edges.length) { return (\n    <RelationsB2BBase refetch={refetch}>\n      <ContentCard cardTitle={t('relations.b2b.title')}\n                   headerContent={headerOptions}>\n        <p>\n          {(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"true\") ? \n            t('relations.b2b.empty_archive') : \n            t(\"relations.b2b.empty_list\")}\n        </p>\n      </ContentCard>\n    </RelationsB2BBase>\n  )}\n\n  console.log(data)\n\n  \n\n  return (\n    <RelationsB2BBase refetch={refetch}>\n      <ContentCard cardTitle={t('relations.b2b.title')}\n                    headerContent={headerOptions}\n                    pageInfo={businesses.pageInfo}\n                    onLoadMore={() => {\n                      fetchMore({\n                        variables: {\n                          after: businesses.pageInfo.endCursor\n                        },\n                        updateQuery: (previousResult, { fetchMoreResult }) => {\n                          const newEdges = fetchMoreResult.businesses.edges\n                          const pageInfo = fetchMoreResult.businesses.pageInfo \n\n                          return newEdges.length\n                            ? {\n                                // Put the new businesses at the end of the list and update `pageInfo`\n                                // so we have the new `endCursor` and `hasNextPage` values\n                                businesses: {\n                                  __typename: previousResult.businesses.__typename,\n                                  edges: [ ...previousResult.businesses.edges, ...newEdges ],\n                                  pageInfo\n                                }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n              {data.businesses.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  <Table.Col key={v4()}>\n                    {node.name}\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    {(node.archived) ? \n                      <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                      <Link to={`/relations/b2b/${node.id}/edit`}>\n                        <Button className='btn-sm' \n                                color=\"secondary\">\n                          {t('general.edit')}\n                        </Button>\n                      </Link>\n                    }\n                  </Table.Col>\n                  {/* Archive / restore buttons */}\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                      title={t('general.archive')} \n                      href=\"\"\n                      onClick={() => {\n                        console.log(\"clicked isActive\")\n                        let id = node.id\n                        let show_archive\n                        if (localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) == \"true\") {\n                          show_archive = true\n                        } else {\n                          show_archive = false\n                        }\n\n                        updateBusiness({ variables: {\n                          input: {\n                            id,\n                            archived: !node.archived // invert, as we need the opposite from the list currently displayed\n                          }}, \n                          refetchQueries: [\n                        {query: GET_BUSINESSES_QUERY, variables: get_list_query_variables()}\n                        ]}).then(({ data }) => {\n                          console.log('got data', data);\n                          toast.success(\n                            (!show_archive) ? t('relations.b2b.archived'): t('relations.b2b.restored'), {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error);\n                        })\n                        }}>\n                      {\n                        (!node.archived) ?\n                          <Icon prefix=\"fa\" name=\"inbox\" /> :\n                          t(\"general.restore\")\n                      }\n                    </button>\n                  </Table.Col>\n\n                  {/* Delete button shown when archived */}\n                    {\n                      (!node.archived) ? '' :\n                        <Table.Col className=\"text-right\" key={v4()}>\n                        <button className=\"icon btn btn-link btn-sm\" \n                          title={t('general.delete')} \n                          href=\"\"\n                          onClick={() => {\n                            confirm_delete({\n                              t: t,\n                              msgConfirm: t(\"relations.b2b.delete_confirm_msg\"),\n                              msgDescription: <span><br /><br /><ul><li>{node.name}</li></ul></span>,\n                              msgSuccess: t('relations.b2b.deleted'),\n                              deleteFunction: deleteBusiness,\n                              functionVariables: { variables: {\n                                input: {\n                                  id: node.id\n                                }\n                              }, refetchQueries: [\n                                {query: GET_BUSINESSES_QUERY, variables: get_list_query_variables()}\n                              ]}\n                            })\n                          }}\n                        >\n                          <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n                        </button>\n                      </Table.Col>\n                    }\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>  \n    </RelationsB2BBase>  \n  )\n}\n\n\n// const RelationsB2B = ({ t, history }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Query query={GET_ACCOUNTS_QUERY} variables={get_list_query_variables()} notifyOnNetworkStatusChange>\n//         {({ loading, error, data, refetch, fetchMore, variables}) => {\n//           // Loading\n//           if (loading) return (\n//             <RelationsAccountsBase refetch={refetch}>\n//               <ContentCard cardTitle={t('relations.b2b.title')}>\n//                 <Dimmer active={true}\n//                         loader={true}>\n//                 </Dimmer>\n//               </ContentCard>\n//             </RelationsAccountsBase>\n//           )\n//           // Error\n//           if (error) return (\n//             <RelationsAccountsBase>\n//               <Container>\n//                 <ContentCard cardTitle={t('relations.b2b.title')}>\n//                   <p>{t('relations.b2b.error_loading')}</p>\n//                 </ContentCard>\n//               </Container>\n//             </RelationsAccountsBase>\n//           )\n//           const headerOptions = <Card.Options>\n//             <Button color={(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"true\") ? 'primary': 'secondary'}  \n//                     size=\"sm\"\n//                     onClick={() => {\n//                       localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE, true)\n//                       refetch(get_list_query_variables())\n//                     }\n//             }>\n//               {t('general.active')}\n//             </Button>\n//             <Button color={(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"false\") ? 'primary': 'secondary'} \n//                     size=\"sm\" \n//                     className=\"ml-2\" \n//                     onClick={() => {\n//                       localStorage.setItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE, false)\n//                       refetch(get_list_query_variables())\n//                     }\n//             }>\n//               {t('general.deleted')}\n//             </Button>\n//           </Card.Options>\n          \n//           // Empty list\n//           if (!data.businesses.edges.length) { return (\n//             <RelationsAccountsBase refetch={refetch}>\n//               <ContentCard cardTitle={t('relations.b2b.title')}\n//                             headerContent={headerOptions}>\n//                 <p>\n//                   {(localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) === \"true\") ? \n//                     t('relations.b2b.empty_list') : \n//                     t(\"relations.b2b.empty_archive\")}\n//                 </p>\n//               </ContentCard>\n//             </RelationsAccountsBase>\n//           )} else {   \n//           // Life's good! :)\n//           return (\n//             <RelationsAccountsBase refetch={refetch}>\n//               {console.log('query vars:')}\n//               {console.log(variables)}\n//               <ContentCard cardTitle={t('relations.b2b.title')}\n//                            headerContent={headerOptions}\n//                            pageInfo={data.businesses.pageInfo}\n//                            onLoadMore={() => {\n//                              fetchMore({\n//                                variables: {\n//                                  after: data.businesses.pageInfo.endCursor\n//                                },\n//                                updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                  const newEdges = fetchMoreResult.businesses.edges\n//                                  const pageInfo = fetchMoreResult.businesses.pageInfo \n\n//                                  return newEdges.length\n//                                    ? {\n//                                        // Put the new businesses at the end of the list and update `pageInfo`\n//                                        // so we have the new `endCursor` and `hasNextPage` values\n//                                       data: {\n//                                         businesses: {\n//                                           __typename: previousResult.businesses.__typename,\n//                                           edges: [ ...previousResult.businesses.edges, ...newEdges ],\n//                                           pageInfo\n//                                         }\n//                                       }\n//                                     }\n//                                   : previousResult\n//                               }\n//                             })\n//                           }} >\n//                 <Table>\n//                   <Table.Header>\n//                     <Table.Row key={v4()}>\n//                       <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                     </Table.Row>\n//                   </Table.Header>\n//                   <Table.Body>\n//                       {data.businesses.edges.map(({ node }) => (\n//                         <Table.Row key={v4()}>\n//                           <Table.Col key={v4()}>\n//                             {node.name}\n//                           </Table.Col>\n//                           {/* <Table.Col key={v4()}>\n//                             {node.email}\n//                           </Table.Col> */}\n//                           <Table.Col className=\"text-right\" key={v4()}>\n//                             {(!node.archived) ? \n//                               <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n//                               <Button className='btn-sm' \n//                                       onClick={() => history.push(\"/relations/businesses/\" + node.id + \"/edit\")}\n//                                       color=\"secondary\">\n//                                 {t('general.edit')}\n//                               </Button>\n//                             }\n//                           </Table.Col>\n//                           {/* <Mutation mutation={UPDATE_ACCOUNT_ACTIVE} key={v4()}>\n//                             {(updateAccountActive, { data }) => (\n//                               <Table.Col className=\"text-right\" key={v4()}>\n//                                 <button className=\"icon btn btn-link btn-sm\" \n//                                   title={t('general.deactivate')} \n//                                   href=\"\"\n//                                   onClick={() => {\n//                                     console.log(\"clicked archived\")\n//                                     let id = node.id\n//                                     let archived \n//                                     if (localStorage.getItem(CSLS.RELATIONS_BUSINESSES_SHOW_ARCHIVE) == \"true\") {\n//                                       archived = true\n//                                     } else {\n//                                       archived = false\n//                                     }\n\n//                                     updateAccountActive({ variables: {\n//                                       input: {\n//                                         id,\n//                                         archived: !archived // invert, as we need the opposite from the list currently displayed\n//                                       }\n//                                 }, refetchQueries: [\n//                                     {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()}\n//                                 ]}).then(({ data }) => {\n//                                   console.log('got data', data);\n//                                   toast.success(\n//                                     (archived) ? t('relations.b2b.deactivated'): t('relations.b2b.restored')``, {\n//                                       position: toast.POSITION.BOTTOM_RIGHT\n//                                     })\n//                                 }).catch((error) => {\n//                                   toast.error((t('general.toast_server_error')) +  error, {\n//                                       position: toast.POSITION.BOTTOM_RIGHT\n//                                     })\n//                                   console.log('there was an error sending the query', error);\n//                                 })\n//                                 }}>\n//                                   {\n//                                     (node.archived) ?\n//                                       <Icon prefix=\"fe\" name=\"trash-2\" /> :\n//                                       t(\"general.restore\")\n//                                   }\n//                                 </button>\n//                               </Table.Col>\n//                             )}\n//                           </Mutation> */}\n//                           {/* {\n//                             (node.archived) ? '' :\n//                               <Mutation mutation={DELETE_ACCOUNT} key={v4()}>\n//                                 {(deleteAccount, { data }) => (\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     <button className=\"icon btn btn-link btn-sm\" \n//                                       title={t('general.delete')} \n//                                       href=\"\"\n//                                       onClick={() => {\n//                                         confirm_delete({\n//                                           t: t,\n//                                           msgConfirm: t(\"relations.b2b.delete_confirm_msg\"),\n//                                           msgDescription: <p>{node.first_name} {node.last_name}</p>,\n//                                           msgSuccess: t('relations.b2b.deleted'),\n//                                           deleteFunction: deleteAccount,\n//                                           functionVariables: { variables: {\n//                                             input: {\n//                                               id: node.id\n//                                             }\n//                                           }, refetchQueries: [\n//                                             {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()}\n//                                           ]}\n//                                         })\n//                                     }}>\n//                                       <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n//                                     </button>\n//                                   </Table.Col>\n//                                 )}\n//                               </Mutation>\n//                           } */}\n//                         </Table.Row>\n//                       ))}\n//                   </Table.Body>\n//                 </Table>\n//               </ContentCard>\n//             </RelationsAccountsBase>\n//           )}}\n//         }\n//       </Query>\n//     </div>\n//   </SiteWrapper>\n// )\n\nexport default withTranslation()(withRouter(RelationsB2B))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nconst RelationsB2BAddFrom = ({ t, history, isSubmitting, errors, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Grid.Row>\n            <Grid.Col>\n              <Form.Group label={t('general.name')}>\n                <Field type=\"text\" \n                        name=\"name\" \n                        className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                        autoComplete=\"off\" />\n                <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(RelationsB2BAddFrom))","// @flow\n\nimport React from 'react'\nimport { useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik, Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_BUSINESSES_QUERY } from './queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { get_list_query_variables } from \"./tools\"\nimport RelationsB2BAddForm from \"./RelationB2BAddForm\"\nimport RelationsMenu from '../RelationsMenu'\n\n\nconst ADD_BUSINESS = gql`\n  mutation CreateBusiness($input:CreateBusinessInput!) {\n    createBusiness(input: $input) {\n      business {\n        id\n      }\n    }\n  }\n`\n\nconst return_url = \"/relations/b2b\"\n\nfunction RelationsB2BAdd({ t, history }) {\n  const [addBusiness] = useMutation(ADD_BUSINESS)\n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('relations.title')} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n            <Card>\n              <Card.Header>\n                <Card.Title>{t('relations.b2b.title_add')}</Card.Title>\n              </Card.Header>\n                <Formik\n                    initialValues={{ name: '' }}\n                    // validationSchema={B2BADD_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n                        addBusiness({ variables: {\n                          input: {\n                            name: values.name,\n                            b2b: true\n                          }\n                        }, refetchQueries: [\n                            {query: GET_BUSINESSES_QUERY, variables: get_list_query_variables()}\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data)\n                            const businessId = data.createBusiness.business.id\n                            history.push(`/relations/b2b/${businessId}/edit`)\n                            toast.success((t('relations.b2b.toast_add_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setSubmitting(false)\n                          })\n                    }}\n                    >\n                    {({ isSubmitting, errors }) => (\n                        <RelationsB2BAddForm\n                          isSubmitting={isSubmitting}\n                          errors={errors}\n                          return_url={return_url}\n                        />\n                    )}\n                </Formik>\n            </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"business\">\n                <Button color=\"primary btn-block mb-6\"\n                        onClick={() => history.push(return_url)}>\n                  <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                </Button>\n              </HasPermissionWrapper>\n              <RelationsMenu activeLink='accounts'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsB2BAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\n\nimport {\n  Button,\n  Icon,\n  Page,\n  Grid,\n  Card,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n// import OrganizationMenu from \"../OrganizationMenu\"\n// import ProfileMenu from \"./ProfileMenu\"\n\n\nfunction RelationsB2BEditBase({ t, match, history, children, cardTitle=\"\" }) {\n  const returnUrl = \"/relations/b2b\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"relations.title\")}>\n            {/* <RelationsAccountsBack /> */}\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n            <Card>\n              <Card.Header>\n                <Card.Title>{cardTitle}</Card.Title>\n              </Card.Header>\n              {children}\n            </Card>\n            </Grid.Col>                                    \n            <Grid.Col md={3}>\n              {/* B2B relation menu goes here */}\n              <HasPermissionWrapper permission=\"change\"\n                                    resource=\"business\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              {/* <RelationsMenu activeLink='b2b'/> */}\n              {/* <ProfileMenu \n                activeLink='profile'\n                account_id={account_id}\n              />  */}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsB2BEditBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport ISO_COUNTRY_CODES from \"../../../tools/iso_country_codes\"\n\n\nfunction RelationsB2BEditForm({ t, history, isSubmitting, errors, values, return_url, setFieldTouched, setFieldValue }) {\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.name')}>\n              <Field type=\"text\" \n                      name=\"name\" \n                      className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.email_contact')}>\n              <Field type=\"text\" \n                      name=\"emailContact\" \n                      className={(errors.emailContact) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"emailContact\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.email_billing')}>\n              <Field type=\"text\" \n                      name=\"emailBilling\" \n                      className={(errors.emailBilling) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"emailBilling\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.phone')}>\n              <Field type=\"text\" \n                      name=\"phone\" \n                      className={(errors.phone) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"phone\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n          <Form.Group label={t('general.phone2')}>\n              <Field type=\"text\" \n                      name=\"phone2\" \n                      className={(errors.phone2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"phone2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.address')}>\n              <Field type=\"text\" \n                      name=\"address\" \n                      className={(errors.address) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"address\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.postcode')}>\n              <Field type=\"text\" \n                      name=\"postcode\" \n                      className={(errors.postcode) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"postcode\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.city')}>\n              <Field type=\"text\" \n                      name=\"city\" \n                      className={(errors.city) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"city\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.country')}>\n              <Field component=\"select\" \n                    name=\"country\" \n                    className={(errors.country) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\"></option>\n                { ISO_COUNTRY_CODES.map(\n                    country => <option value={country.Code} key={v4()}>{country.Name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"country\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('finance.invoices.relation_company_registration')}>\n              <Field type=\"text\" \n                      name=\"registration\" \n                      className={(errors.registration) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"registration\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n          <Form.Group label={t('finance.invoices.relation_company_tax_registration')}>\n              <Field type=\"text\" \n                      name=\"taxRegistration\" \n                      className={(errors.taxRegistration) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"taxRegistration\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            // className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          \n          {/* <Button color=\"link\" onClick={() => history.push(return_url)}>\n              {t('general.cancel')}\n          </Button> */}\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(RelationsB2BEditForm))\n\n","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_BUSINESSES_QUERY, GET_BUSINESS_QUERY, UPDATE_BUSINESS } from './queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO } from '../../../tools/date_tools'\n\nimport { get_list_query_variables } from \"./tools\"\nimport RelationsB2BEditBase from './RelationsB2BEditBase'\n// import RelationsAccountsBack from \"./RelationsAccountsBack\"\nimport RelationsB2BEditForm from \"./RelationsB2BEditForm\"\n\n// import OrganizationMenu from \"../OrganizationMenu\"\n// import ProfileMenu from \"./ProfileMenu\"\n\nfunction RelationsB2BEdit({ t, match, history}) {\n  const businessId = match.params.business_id\n  const [updateBusiness] = useMutation(UPDATE_BUSINESS)\n  const { loading, error, data, refetch } = useQuery(GET_BUSINESS_QUERY, {\n    variables: {\n      id: businessId\n    }\n  })\n\n  // Loading\n  if (loading) return <RelationsB2BEditBase>\n      <Card.Body>{t('general.loading_with_dots')}</Card.Body>\n    </RelationsB2BEditBase>\n  // Error\n  if (error) {\n    console.log(error)\n    return <RelationsB2BEditBase>\n      <Card.Body>{t('general.error_sad_smiley')}</Card.Body>\n    </RelationsB2BEditBase>\n  }\n\n  const initialData = data.business\n  console.log(initialData)\n\n  return (\n    <RelationsB2BEditBase cardTitle={t('relations.b2b.title_edit')}>\n      <Formik\n        initialValues={{ \n          name: initialData.name,\n          phone: initialData.phone,\n          phone2: initialData.phone2,\n          address: initialData.address,\n          postcode: initialData.postcode,\n          city: initialData.city,\n          country: initialData.country,\n          emailBilling: initialData.emailBilling,\n          emailContact: initialData.emailContact,\n          registration: initialData.registration,\n          taxRegistration: initialData.taxRegistration\n        }}\n        // validationSchema={ACCOUNT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            let input_vars = {\n              id: businessId,\n              name: values.name,\n              phone: values.phone,\n              phone2: values.phone2,\n              address: values.address,\n              postcode: values.postcode,\n              city: values.city,\n              country: values.country,\n              emailBilling: values.emailBilling,\n              emailContact: values.emailContact,\n              registration: values.registration,\n              taxRegistration: values.taxRegistration\n            }\n\n            updateBusiness({ variables: {\n              input: input_vars\n            }, refetchQueries: [\n                // Refetch list\n                {query: GET_BUSINESSES_QUERY, variables: get_list_query_variables()},\n                // Refresh local cached results for this account\n                {query: GET_BUSINESS_QUERY, variables: {\"id\": businessId}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('relations.b2b.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <RelationsB2BEditForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n          />\n        )}\n      </Formik>\n    </RelationsB2BEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(RelationsB2BEdit))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\n\nlet appointments_active\nlet events_active\nlet classes_active\n\nconst ScheduleMenu = ({ t, activeLink }) => (\n  <List.Group transparent={true}>\n    {(activeLink === 'appointments') ? appointments_active = true: appointments_active = false}\n    {(activeLink === 'events') ? events_active = true: events_active = false}\n    {(activeLink === 'classes') ? classes_active = true: classes_active = false}\n    \n\n    <HasPermissionWrapper \n        resource=\"scheduleclass\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to=\"#/schedule/classes\"\n          icon=\"book\"\n          active={classes_active}\n          >\n          {t('schedule.classes.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    <HasPermissionWrapper \n        resource=\"scheduleevent\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to=\"#/schedule/events\"\n          icon=\"clipboard\"\n          active={events_active}\n          >\n          {t('schedule.events.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    {/* <HasPermissionWrapper \n        resource=\"scheduleappointment\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to=\"#/schedule/appointments\"\n          icon=\"calendar\"\n          active={appointments_active}\n          >\n          {t('schedule.appointments.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper> */}\n  </List.Group>\n);\n\nexport default withTranslation()(ScheduleMenu)","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport ScheduleMenu from \"../ScheduleMenu\"\n\n\nclass ScheduleHome extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Schedule home props:\")\n    console.log(props)\n  }\n\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.id\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"schedule.title\")} />\n            <Grid.Row>\n              <Grid.Col md={9}>\n                <Grid.Row>\n                  <HasPermissionWrapper\n                    resource=\"scheduleclass\"\n                    permission=\"view\"\n                  >\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/schedule/classes'>\n                        <StampCard header={<small>{t('schedule.classes.title')}</small>} footer={t('')} color=\"blue\" icon=\"book\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                  <HasPermissionWrapper\n                    resource=\"scheduleevent\"\n                    permission=\"view\"\n                  >\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/schedule/events'>\n                        <StampCard header={<small>{t('schedule.events.title')}</small>} footer={t('')} color=\"blue\" icon=\"clipboard\" />\n                      </Link>\n                    </Grid.Col>\n                  </HasPermissionWrapper>\n                  {/* <HasPermissionWrapper\n                    resource=\"scheduleappointment\"\n                    permission=\"view\"\n                  >\n                    <Grid.Col md={4} lg={4}>\n                      <Link to='/schedule/appointments')}>\n                        <StampCard header={<small>{t('schedule.appointments.title')}</small>} footer={t('')} color=\"blue\" icon=\"calendar\" />\n                      </div>\n                    </Grid.Col>\n                  </HasPermissionWrapper> */}\n                </Grid.Row>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <ScheduleMenu />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(ScheduleHome))","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let orderBy\n  let organizationAppointment\n  let organizationLocation\n\n  let queryVars = {\n    dateFrom: localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM), \n    dateUntil: localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL)\n  }\n\n  orderBy = localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY)\n  if (orderBy) {\n    queryVars.orderBy = orderBy\n  }\n\n  organizationAppointment = localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE)\n  if (organizationAppointment) {\n    queryVars.organizationAppointment = organizationAppointment\n  } else {\n    queryVars.organizationAppointment = \"\"\n  }\n\n  organizationLocation = localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_FILTER_LOCATION)\n  if (organizationLocation) {\n    queryVars.organizationLocation = organizationLocation\n  } else {\n    queryVars.organizationLocation = \"\"\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from './tools'\n\n\nfunction getDefaultValue(value) {\n  let defaultValue = localStorage.getItem(value)\n  if (defaultValue) {\n    return defaultValue\n  } else {\n    return \"\"\n  }\n}\n\n\nfunction updateLocalStorageAndRefetch(key, value, refetch) {\n  localStorage.setItem(key, value)\n  refetch(get_list_query_variables())\n}\n\nconst selectClass = \"form-control mb-2\"\n\n\nconst ScheduleAppointmentsFilter = ({ t, history, data, refetch }) => (\n  <div>\n    {/* Locations */}\n    <select \n      className={selectClass}\n      defaultValue={getDefaultValue(CSLS.SCHEDULE_APPOINTMENTS_FILTER_LOCATION)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.SCHEDULE_APPOINTMENTS_FILTER_LOCATION,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"schedule.appointments.filter_all_locations\")}</option>\n      {data.organizationLocations.edges.map(({ node }) =>\n        <option value={node.id} key={v4()}>{node.name}</option>\n      )}\n    </select>\n    {/* Appointments */}\n    {/* <select \n      className={selectClass}\n      defaultValue={getDefaultValue(CSLS.SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"schedule.appointments.filter_all_appointments\")}</option>\n      {data.organizationAppointments.edges.map(({ node }) =>\n        <option value={node.id} key={v4()}>{node.name}</option>\n      )}\n    </select> */}\n  </div>\n);\n\nexport default withTranslation()(withRouter(ScheduleAppointmentsFilter))","import { gql } from \"@apollo/client\"\n\nexport const GET_APPOINTMENTS_QUERY = gql`\n  query ScheduleAppointments(\n      $dateFrom: Date!, \n      $dateUntil:Date!, \n      $orderBy: String, \n      $organizationLocation: String\n    ){\n    scheduleAppointments(\n        dateFrom:$dateFrom, \n        dateUntil: $dateUntil, \n        orderBy: $orderBy, \n        organizationLocation: $organizationLocation\n    ){\n      date\n      appointments {\n        scheduleItemId\n        frequencyType\n        date\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationAppointment {\n          id\n          name\n        }\n        timeStart\n        timeEnd\n        displayPublic\n      }\n    }\n    user {\n      id\n      isActive\n      email\n      firstName\n      lastName\n      groups {\n        edges {\n          node {\n            id\n            name\n            permissions {\n              edges {\n                node {\n                  id\n                  name\n                  codename\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    organizationLocations(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationAppointments(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_APPOINTMENT_QUERY = gql`\n  query ScheduleItem($id: ID!, $before: String, $after: String, $archived: Boolean!) {\n    scheduleItem(id:$id) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleClassInputValues($after: String, $before: String, $archived: Boolean) {\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n    organizationAppointments(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: $archived) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Badge,\n  Dropdown,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table,\n  Text,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport confirm_delete from \"../../../tools/confirm_delete\"\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\n\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport ContentCard from \"../../general/ContentCard\"\nimport ScheduleMenu from \"../ScheduleMenu\"\nimport ScheduleAppointmentsFilter from \"./ScheduleAppointmentsFilter\"\n\nimport { GET_APPOINTMENTS_QUERY } from \"./queries\"\nimport { get_list_query_variables } from './tools'\n\nimport moment from 'moment'\n\n\nconst DELETE_SCHEDULE_APPOINTMENT = gql`\n  mutation DeleteScheduleAppointment($input: DeleteScheduleAppointmentInput!) {\n    deleteScheduleAppointment(input: $input) {\n      ok\n    }\n  }\n`\n\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM)) {\n  console.log('date from not found... defaulting to today...')\n  localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM, moment().format('YYYY-MM-DD')) \n  localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL, moment().add(6, 'days').format('YYYY-MM-DD')) \n} \n\n\nconst ScheduleAppointments = ({ t, history }) => (\n  <SiteWrapper>\n    <div className=\"my-3 my-md-5\">\n      <Query query={GET_APPOINTMENTS_QUERY} variables={get_list_query_variables()}>\n        {({ loading, error, data, refetch }) => {\n          // Loading\n          if (loading) return (\n            <Container>\n              <p>{t('general.loading_with_dots')}</p>\n            </Container>\n          )\n          // Error\n          if (error) {\n            console.log(error)\n            return (\n              <Container>\n                <p>{t('general.error_sad_smiley')}</p>\n              </Container>\n            )\n          }\n          \n          // Empty list\n          if (!data.scheduleAppointments.length) { return (\n            <ContentCard cardTitle={t('schedule.appointments.title')}>\n              <p>\n                {t('schedule.appointments.empty_list')}\n              </p>\n            </ContentCard>\n          )} else {   \n          // Life's good! :)\n          return (\n            <Container>\n              <Page.Header title={t(\"schedule.title\")}>\n                <div className=\"page-options d-flex\">\n                  <span title={t(\"schedule.appointments.tooltip_sort_by_location\")}>\n                    <Button \n                      icon=\"home\"\n                      tooltip=\"text\"\n                      className=\"mr-2\"\n                      color={\n                        ((localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY) === \"location\") || (!localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY))) ?\n                        \"azure\" : \"secondary\"\n                      }\n                      onClick={() => {\n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY, \"location\")\n                        refetch(get_list_query_variables())\n                      }}\n                    />\n                  </span>\n                  <span title={t(\"schedule.appointments.tooltip_sort_by_starttime\")}>\n                    <Button \n                      icon=\"clock\"\n                      className=\"mr-2\"\n                      color={\n                        (localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY) === \"starttime\") ?\n                        \"azure\" : \"secondary\"\n                      }\n                      onClick={() => {\n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_ORDER_BY, \"starttime\")\n                        refetch(get_list_query_variables())\n                      }}\n                    />\n                  </span>\n                  <CSDatePicker \n                    className=\"form-control schedule-list-csdatepicker mr-2\"\n                    selected={new Date(localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM))}\n                    isClearable={false}\n                    onChange={(date) => {\n                      let nextWeekFrom = moment(date)\n                      let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n\n                      localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                      localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                      console.log(get_list_query_variables())\n\n                      refetch(get_list_query_variables())\n                    }}\n                    placeholderText={t('schedule.appointments.go_to_date')}\n                  />\n                  <Button.List className=\"schedule-list-page-options-btn-list\">\n                    <Button \n                      icon=\"chevron-left\"\n                      color=\"secondary\"\n                      onClick={ () => {\n                        let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM)).subtract(7, 'days')\n                        let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                        \n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                        refetch(get_list_query_variables())\n                    }} />\n                    <Button \n                      icon=\"sun\"\n                      color=\"secondary\"\n                      onClick={ () => {\n                        let currentWeekFrom = moment()\n                        let currentWeekUntil = moment(currentWeekFrom).add(6, 'days')\n\n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM, currentWeekFrom.format('YYYY-MM-DD')) \n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL, currentWeekUntil.format('YYYY-MM-DD')) \n                        \n                        refetch(get_list_query_variables())\n                    }} />\n                    <Button \n                      icon=\"chevron-right\"\n                      color=\"secondary\"\n                      onClick={ () => {\n                        let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM)).add(7, 'days')\n                        let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                        \n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                        localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                        refetch(get_list_query_variables())\n                    }} />\n                  </Button.List> \n                </div>\n              </Page.Header>\n              <Grid.Row>\n                <Grid.Col md={9}>\n                  { data.scheduleAppointments.map(({ date, appointments }) => (\n                    <div key={v4()}>\n                      <Card>\n                        <Card.Header>\n                          <Card.Title>\n                            <b>{moment(date).format(\"dddd\")}</b> {' '}\n                            <span className=\"text-muted\">\n                              {moment(date).format(\"LL\")} \n                            </span>\n                          </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                          {!(appointments.length) ? t('schedule.appointments.empty_list') :\n                            <Table>\n                              <Table.Header>\n                                <Table.Row key={v4()}>\n                                  <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n                                  <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n                                  <Table.ColHeader>{t('general.appointment')}</Table.ColHeader>\n                                  <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                                  <Table.ColHeader></Table.ColHeader>\n                                </Table.Row>\n                              </Table.Header>\n                              <Table.Body>\n                                {appointments.map((\n                                  { scheduleItemId, \n                                    frequencyType,\n                                    date, \n                                    organizationLocationRoom, \n                                    organizationAppointment, \n                                    timeStart, \n                                    timeEnd,\n                                    displayPublic }) => (\n                                  <Table.Row key={v4()}>\n                                    <Table.Col>\n                                      {/* Start & end time */}\n                                      {moment(date + ' ' + timeStart).format('LT')} {' - '}\n                                      {moment(date + ' ' + timeEnd).format('LT')} { ' ' }\n                                      {(frequencyType === 'SPECIFIC') ? <Badge color=\"primary\">{t('general.once')}</Badge> : null }\n                                    </Table.Col>\n                                    <Table.Col>\n                                      {/* Location */}\n                                      {organizationLocationRoom.organizationLocation.name} {' '}\n                                      <span className=\"text-muted\"> &bull; {organizationLocationRoom.name}</span>\n                                    </Table.Col>\n                                    <Table.Col>\n                                      {/* Type */}\n                                      {/* {organizationAppointment.name} <br /> */}\n                                    </Table.Col>\n                                    <Table.Col>\n                                      {/* Public */}\n                                      <BadgeBoolean value={displayPublic} />\n                                    </Table.Col>\n                                    <Table.Col>\n                                      <Dropdown\n                                        key={v4()}\n                                        className=\"pull-right\"\n                                        type=\"button\"\n                                        toggle\n                                        color=\"secondary btn-sm\"\n                                        triggerContent={t(\"general.actions\")}\n                                        items={[\n                                          <Dropdown.Item key={v4()}>Dropdown Link</Dropdown.Item>,\n                                          <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleclass\">\n                                            <Dropdown.ItemDivider key={v4()} />\n                                            <Dropdown.Item\n                                              key={v4()}\n                                              badge={t('schedule.appointments.all_appointments_in_series')}\n                                              badgeType=\"secondary\"\n                                              icon=\"edit-2\"\n                                              onClick={() => history.push('/schedule/appointments/all/edit/' + scheduleItemId)}>\n                                                {t(\"general.edit\")}\n                                            </Dropdown.Item>\n                                          </HasPermissionWrapper>,\n                                          <HasPermissionWrapper key={v4()} permission=\"delete\" resource=\"scheduleclass\">\n                                            <Dropdown.ItemDivider key={v4()} />\n                                            <Mutation mutation={DELETE_SCHEDULE_APPOINTMENT} key={v4()}>\n                                              {(deleteScheduleAppointment, { data }) => (\n                                                  <Dropdown.Item\n                                                    key={v4()}\n                                                    badge={t('schedule.appointments.all_appointments_in_series')}\n                                                    badgeType=\"danger\"\n                                                    icon=\"trash-2\"\n                                                    onClick={() => {\n                                                      confirm_delete({\n                                                        t: t,\n                                                        msgConfirm: t(\"schedule.appointments.delete_confirm_msg\"),\n                                                        msgDescription: <p key={v4()}>\n                                                          {moment(date + ' ' + timeStart).format('LT')} {' - '}\n                                                          {moment(date + ' ' + timeEnd).format('LT')} {' '} @ {' '}\n                                                          {organizationLocationRoom.organizationLocation.name} {' '}\n                                                          {organizationLocationRoom.name}\n                                                          </p>,\n                                                        msgSuccess: t('schedule.appointments.deleted'),\n                                                        deleteFunction: deleteScheduleAppointment,\n                                                        functionVariables: { variables: {\n                                                          input: {\n                                                            id: scheduleItemId\n                                                          }\n                                                        }, refetchQueries: [\n                                                          { query: GET_APPOINTMENTS_QUERY, variables: get_list_query_variables() }\n                                                        ]}\n                                                      })\n                                                  }}>\n                                                  {t(\"general.delete\")}\n                                                  </Dropdown.Item>\n                                              )}\n                                            </Mutation>\n                                          </HasPermissionWrapper>\n                                        ]}\n                                      />\n                                    </Table.Col>\n                                  </Table.Row>\n                                ))}\n                              </Table.Body>\n                            </Table>\n                          }\n                        </Card.Body>\n                      </Card>\n                    </div>\n                    ))}\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <HasPermissionWrapper permission=\"add\"\n                                      resource=\"scheduleclass\">\n                  <Button color=\"primary btn-block mb-1\"\n                          onClick={() => history.push(\"/schedule/appointments/add\")}>\n                    <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.appointments.add')}\n                  </Button>\n                </HasPermissionWrapper>\n                <div>\n                  <Button\n                    className=\"pull-right\"\n                    color=\"link\"\n                    size=\"sm\"\n                    onClick={() => {\n                      localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_FILTER_CLASSTYPE, \"\")\n                      localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_FILTER_LEVEL, \"\")\n                      localStorage.setItem(CSLS.SCHEDULE_APPOINTMENTS_FILTER_LOCATION, \"\")\n                      refetch(get_list_query_variables())\n                    }}\n                  >\n                    {t(\"general.clear\")}\n                  </Button>\n                </div>\n                <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n                <ScheduleAppointmentsFilter data={data} refetch={refetch} />\n                <h5>{t(\"general.menu\")}</h5>\n                <ScheduleMenu activeLink='appointments'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      )}}}\n      </Query>\n    </div>\n  </SiteWrapper>\n);\n\nexport default withTranslation()(withRouter(ScheduleAppointments))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nlet edit_active\nlet teachers_available_active\n\nconst AppointmentEditMenu = ({ t, activeLink, appointmentId }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'edit') ? edit_active = true: edit_active = false}\n        {(activeLink === 'teachers_available') ? teachers_available_active = true: teachers_available_active = false}\n        \n        <HasPermissionWrapper\n          resource=\"scheduleappointment\"\n          permission=\"change\"\n        >        \n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to={\"#/schedule/appointments/all/edit/\" + appointmentId}\n              icon=\"edit-3\"\n              active={edit_active}\n              >\n              {t('general.edit')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper\n          resource=\"scheduleappointment\"\n          permission=\"change\"\n        >     \n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to={\"#/schedule/appointments/all/teachers_available/\" + appointmentId}\n              icon=\"users\"\n              active={teachers_available_active}\n              >\n              {t('general.teachers_available')}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n    </List.Group>\n);\n\nexport default withTranslation()(AppointmentEditMenu)","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const APPOINTMENT_SCHEMA = Yup.object().shape({\n    frequencyType: Yup.string()\n      .required(t('yup.field_required')),\n    organizationLocationRoom: Yup.string()\n      .required(t('yup.field_required')),\n    dateStart: Yup.date()\n      .required(t('yup.field_required')),\n    timeStart: Yup.date()\n      .typeError(t('yup.time_required'))\n      .required(t('yup.field_required')),\n    timeEnd: Yup.date()\n      .typeError(t('yup.time_required'))\n      .required(t('yup.field_required')),\n  })\n","import React from 'react'\nimport DatePicker from \"react-datepicker\"\nimport { withTranslation } from 'react-i18next'\n\nconst CSTimePicker = ({t, selected, onChange=f=>f, onBlur=f=>f, className=\"form-control\", clearable=true, placeholderText=\"\"}) =>\n    <DatePicker \n        todayButton={t('general.today')}\n        dateFormat={t('system.datepicker_timeformat')}\n        selected={selected}\n        placeholderText={(placeholderText) ? placeholderText : t('datepicker.placeholder_time')}\n        isClearable={clearable}\n        showTimeSelect\n        showTimeSelectOnly\n        timeIntervals={15}\n        className={className}\n        dropdownMode=\"select\"\n        onChange={(date) => onChange(date)}\n        onBlur={() => onBlur()}\n    />\n\nexport default withTranslation()(CSTimePicker)","import React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport CSTimePicker from \"../../ui/CSTimePicker\"\n\nconst ScheduleAppointmentForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, touched, return_url }) => (\n    <FoForm>\n      <Card.Body>\n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"displayPublic\" \n              checked={values.displayPublic} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('schedule.appointments.public')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n        </Form.Group>  \n        <Form.Group label={t('schedule.appointments.frequencyType')}>\n          <Field component=\"select\" \n                name=\"frequencyType\" \n                className={(errors.frequencyType) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"SPECIFIC\" key={v4()}>{t('schedule.appointments.select_specific')}</option>\n            <option value=\"WEEKLY\" key={v4()}>{t('schedule.appointments.select_weekly')}</option>\n          </Field>\n          <ErrorMessage name=\"frequencyType\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n          <Form.Group label={t('schedule.appointments.frequencyInterval')}>\n            <Field component=\"select\" \n                  name=\"frequencyInterval\" \n                  className={(errors.frequencyInterval) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"1\" key={v4()}>{t('general.monday')}</option>\n              <option value=\"2\" key={v4()}>{t('general.tuesday')}</option>\n              <option value=\"3\" key={v4()}>{t('general.wednesday')}</option>\n              <option value=\"4\" key={v4()}>{t('general.thursday')}</option>\n              <option value=\"5\" key={v4()}>{t('general.friday')}</option>\n              <option value=\"6\" key={v4()}>{t('general.saturday')}</option>\n              <option value=\"7\" key={v4()}>{t('general.sunday')}</option>\n            </Field>\n            <ErrorMessage name=\"frequencyInterval\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        }\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.location')}>\n              <Field component=\"select\" \n                    name=\"organizationLocationRoom\" \n                    className={(errors.organizationLocationRoom) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.please_select\")}</option>\n                {inputData.organizationLocationRooms.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.organizationLocation.name} - {node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLocationRoom\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        {/* <Form.Group label={t('general.appointment')}>\n          <Field component=\"select\" \n                name=\"organizationAppointment\" \n                className={(errors.organizationAppointment) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"\" key={v4()}>{t(\"general.please_select\")}</option>\n            {inputData.organizationAppointments.edges.map(({ node }) =>\n              <option value={node.id} key={v4()}>{node.name}</option>\n            )}\n          </Field>\n          <ErrorMessage name=\"organizationAppointment\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>  */}\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={(values.frequencyType == \"SPECIFIC\") ? t('general.date') : t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateEnd\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n            <Grid.Col>\n              <Form.Group label={t('general.date_end')}>\n                <CSDatePicker \n                  selected={values.dateEnd}\n                  onChange={(date) => {\n                    setFieldValue(\"dateEnd\", date)\n                    setFieldTouched(\"dateEnd\", true)\n                  }}\n                  onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                  placeholderText={t('schedule.appointments.placeholder_enddate')}\n                />\n                <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          }\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n           <Form.Group label={t('general.time_start')}>\n              <CSTimePicker \n                className={(errors.timeStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeStart}\n                onChange={(date) => setFieldValue(\"timeStart\", date)}\n                onBlur={() => setFieldTouched(\"timeStart\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n           <Form.Group label={t('general.time_end')}>\n              <CSTimePicker \n                className={(errors.timeEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeEnd}\n                onChange={(date) => setFieldValue(\"timeEnd\", date)}\n                onBlur={() => setFieldTouched(\"timeEnd\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.note')}>\n          <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"note\"\n              initialValue={values.note}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"note\", e.target.getContent())\n                setFieldTouched(\"note\", true, true)\n              }}\n            />\n          <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n        >\n          {t('general.submit')}\n        </Button>\n        <Button color=\"link\" onClick={() => history.push(return_url)}>\n            {t('general.cancel')}\n        </Button>\n      </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(ScheduleAppointmentForm))","// @flow\n\nimport React, { Component } from 'react'\nimport { Query, Mutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APPOINTMENTS_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { get_list_query_variables } from './tools'\nimport { APPOINTMENT_SCHEMA } from './yupSchema'\nimport ScheduleAppointmentForm from './ScheduleAppointmentForm'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { dateToLocalISO, dateToLocalISOTime } from '../../../tools/date_tools'\n\nimport ScheduleMenu from '../ScheduleMenu'\n\n\nconst CREATE_APPOINTMENT = gql`\n  mutation CreateScheduleAppointment($input:CreateScheduleAppointmentInput!) {\n    createScheduleAppointment(input: $input) {\n      scheduleItem {\n        id\n        scheduleItemType\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n        displayPublic\n      }\n    }\n  }\n`\n\n\nclass ScheduleAppointmentAdd extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Schedule appointment add add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const history = this.props.history\n    const return_url = \"/schedule/appointments\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n\n          <Query query={GET_INPUT_VALUES_QUERY} variables = {{archived: false}} >\n            {({ loading, error, data, refetch }) => {\n              // Loading\n              if (loading) return (\n                <Container>\n                  <p>{t('general.loading_with_dots')}</p>\n                </Container>\n              )\n              // Error\n              if (error) {\n                console.log(error)\n                return (\n                  <Container>\n                    <p>{t('general.error_sad_smiley')}</p>\n                  </Container>\n                )\n              }\n              \n              console.log('query data')\n              console.log(data)\n              const inputData = data\n\n              return (\n                <Container>\n                  <Page.Header title={t(\"schedule.title\")} />\n                  <Grid.Row>\n                    <Grid.Col md={9}>\n                      <Card>\n                        <Card.Header>\n                          <Card.Title>{t('schedule.appointments.title_add')}</Card.Title>\n                        </Card.Header>\n                        <Mutation mutation={CREATE_APPOINTMENT} onCompleted={() => history.push(return_url)}> \n                  {(createSubscription, { data }) => (\n                    <Formik\n                      initialValues={{ \n                        displayPublic: true,\n                        frequencyType: \"WEEKLY\",\n                        frequencyInterval: 1,\n                        organizationLocationRoom: \"\",\n                        dateStart: new Date(),\n                        timeStart: new Date(),\n                        timeEnd: new Date(),\n                      }}\n                      validationSchema={APPOINTMENT_SCHEMA}\n                      onSubmit={(values, { setSubmitting }) => {\n                          console.log('submit values:')\n                          console.log(values)\n\n                          let frequencyInterval = values.frequencyInterval\n                          if (values.frequencyType == 'SPECIFIC')\n                            frequencyInterval = 0\n\n                          let dateEnd\n                            if (values.dateEnd) {\n                              dateEnd = dateToLocalISO(values.dateEnd)\n                            } else {\n                              dateEnd = values.dateEnd\n                            }\n                          \n                          createSubscription({ variables: {\n                            input: {\n                              displayPublic: values.displayPublic,\n                              frequencyType: values.frequencyType,\n                              frequencyInterval: frequencyInterval,\n                              organizationLocationRoom: values.organizationLocationRoom,\n                              dateStart: dateToLocalISO(values.dateStart),\n                              dateEnd: dateEnd,\n                              timeStart: dateToLocalISOTime(values.timeStart),\n                              timeEnd: dateToLocalISOTime(values.timeEnd)\n                            }\n                          }, refetchQueries: [\n                              {query: GET_APPOINTMENTS_QUERY, variables: get_list_query_variables()}\n                          ]})\n                          .then(({ data }) => {\n                              console.log('got data', data)\n                              toast.success((t('schedule.appointments.toast_add_success')), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error)\n                              setSubmitting(false)\n                            })\n                      }}\n                      >\n                      {({ isSubmitting, setFieldValue, setFieldTouched, errors, values, touched }) => (\n                            <ScheduleAppointmentForm\n                              inputData={inputData}\n                              isSubmitting={isSubmitting}\n                              setFieldValue={setFieldValue}\n                              setFieldTouched={setFieldTouched}\n                              errors={errors}\n                              values={values}\n                              touched={touched}\n                              return_url={return_url}\n                            >\n                              {console.log('########## v & e')}\n                              {console.log(values)}\n                              {console.log(errors)}\n                              {console.log(touched)}\n                            </ScheduleAppointmentForm>\n                          )\n                        }\n                    </Formik>\n                    )}\n                  </Mutation>\n                </Card>\n                    </Grid.Col>\n                      <Grid.Col md={3}>\n                        <HasPermissionWrapper permission=\"add\"\n                                              resource=\"scheduleappointment\">\n                          <Button color=\"primary btn-block mb-6\"\n                                  onClick={() => history.push(return_url)}>\n                            <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                          </Button>\n                        </HasPermissionWrapper>\n                        <ScheduleMenu activeLink='appointments'/>\n                      </Grid.Col>\n                    </Grid.Row>\n                  </Container>\n            )}}\n          </Query>\n        </div>\n    </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(ScheduleAppointmentAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nconst AppointmentEditBack = ({ t }) => (\n  <div className=\"page-options d-flex\">\n    <Link to=\"/schedule/appointments\" \n          className='btn btn-outline-secondary btn-sm'>\n        <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('schedule.title')}\n    </Link>\n  </div>\n)\n\nexport default withTranslation()(AppointmentEditBack)","// @flow\n\nimport React, { Component } from 'react'\nimport { t } from 'i18next'\nimport { Query } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container,\n} from \"tabler-react\"\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport { GET_APPOINTMENT_QUERY } from \"../queries\"\n\nimport AppointmentEditMenu from './AppointmentEditMenu'\nimport AppointmentEditBack from './AppointmentEditBack';\nimport { appointment_edit_all_subtitle } from \"./tools\"\n\n\nclass AppointmentEditBase extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Schedule appointment edit add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const appointmentId = match.params.appointment_id\n    const menu_activeLink = this.props.menu_activeLink\n    const default_card = this.props.default_card\n    const sidebar_button = this.props.sidebar_button\n\n    return (\n      <Query query={GET_APPOINTMENT_QUERY} variables = {{id: appointmentId, archived: false}} >\n        {({ loading, error, data, refetch }) => {\n          // Loading\n          if (loading) return (\n            <p>{t('general.loading_with_dots')}</p>\n          )\n          // Error\n          if (error) {\n            console.log(error)\n            return (\n              <p>{t('general.error_sad_smiley')}</p>\n            )\n          }\n          \n          console.log('query data')\n          console.log(data)\n          const initialValues = data.scheduleItem\n\n          const initialTimeStart = TimeStringToJSDateOBJ(initialValues.timeStart)\n          const subtitle = appointment_edit_all_subtitle({\n            t: t,\n            location: initialValues.organizationLocationRoom.organizationLocation.name,\n            locationRoom: initialValues.organizationLocationRoom.name,\n            starttime: initialTimeStart\n          })\n          \n          return (\n            <Container>\n              <Page.Header \n                title={t(\"schedule.title\")} \n                subTitle={subtitle}\n              >\n                <AppointmentEditBack />\n              </Page.Header>\n              <Grid.Row>\n                <Grid.Col md={9}>\n                  {!default_card ? this.props.children :\n                    <Card>\n                      <Card.Header>\n                        <Card.Title>{this.props.card_title}</Card.Title>\n                      </Card.Header>\n                      <Card.Body>\n                        {this.props.children}\n                      </Card.Body>\n                    </Card>\n                  }\n                </Grid.Col>\n                <Grid.Col md={3}>\n                  {sidebar_button}\n                  <h5>{t('general.menu')}</h5>\n                  <AppointmentEditMenu activeLink={menu_activeLink} appointmentId={appointmentId}/>\n                </Grid.Col>\n              </Grid.Row>\n            </Container>\n          )\n        }}\n      </Query>\n)}}\n\nAppointmentEditBase.defaultProps = {\n  default_card: true,\n  sidebar_button: \"\",\n  card_title: t('schedule.appointments.title_edit')\n}\n\nexport default withTranslation()(withRouter(AppointmentEditBase))","import moment from 'moment'\n\nexport function appointment_edit_all_subtitle({t, location, locationRoom, starttime}) {\n  return t('general.appointment') + ': ' + location + ' (' + locationRoom + ') @ ' + moment(starttime).format('LT')\n}\n\n\nexport function represent_teacher_role(t, role) {\n  console.log(role)\n  switch (role) {\n    case \"SUB\":\n      return t('schedule.classes.teacher_roles.sub')\n      break\n    case \"ASSISTANT\":\n      return t('schedule.classes.teacher_roles.assistant')\n      break\n    case \"KARMA\":\n      return t('schedule.classes.teacher_roles.karma')\n      break\n    default:\n      return \"\"\n      break\n  }\n}\n","// @flow\n\nimport React, { Component } from 'react'\nimport { Query, Mutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APPOINTMENTS_QUERY, GET_APPOINTMENT_QUERY } from '../../queries'\nimport { get_list_query_variables } from '../../tools'\nimport { APPOINTMENT_SCHEMA } from '../../yupSchema'\nimport ScheduleAppointmentForm from '../../ScheduleAppointmentForm'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { dateToLocalISO, dateToLocalISOTime, TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n\nimport AppointmentEditBase from '../AppointmentEditBase'\n\n\nconst UPDATE_APPOINTMENT = gql`\n  mutation UpdateScheduleAppointment($input:UpdateScheduleAppointmentInput!) {\n    updateScheduleAppointment(input: $input) {\n      scheduleItem {\n        id\n        scheduleItemType\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n        displayPublic\n      }\n    }\n  }\n`\n\n\nclass ScheduleAppointmentEditAll extends Component {\n  constructor(props) {\n    super(props)\n    console.log(\"Schedule appointment edit add props:\")\n    console.log(props)\n  }\n\n  render() {\n    const t = this.props.t\n    const match = this.props.match\n    const history = this.props.history\n    const id = match.params.appointment_id\n    const return_url = \"/schedule/appointments\"\n\n    return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Query query={GET_APPOINTMENT_QUERY} variables = {{id: id, archived: false}} >\n            {({ loading, error, data, refetch }) => {\n              // Loading\n              if (loading) return (\n                <AppointmentEditBase menu_activeLink=\"edit\">\n                  <p>{t('general.loading_with_dots')}</p>\n                </AppointmentEditBase>\n              )\n              // Error\n              if (error) {\n                console.log(error)\n                return (\n                  <AppointmentEditBase menu_activeLink=\"edit\">\n                    <p>{t('general.error_sad_smiley')}</p>\n                  </AppointmentEditBase>\n                )\n              }\n              \n              console.log('query data')\n              console.log(data)\n              const inputData = data\n              const initialValues = data.scheduleItem\n\n              const initialTimeStart = TimeStringToJSDateOBJ(initialValues.timeStart)\n              const initialTimeEnd = TimeStringToJSDateOBJ(initialValues.timeEnd)\n              \n              return (\n                <AppointmentEditBase \n                  menu_activeLink=\"edit\"\n                >\n                  <Mutation mutation={UPDATE_APPOINTMENT} onCompleted={() => history.push(return_url)}> \n                  {(updateScheduleAppointment, { data }) => (\n                    <Formik\n                      initialValues={{ \n                        displayPublic: initialValues.displayPublic,\n                        frequencyType: initialValues.frequencyType,\n                        frequencyInterval: initialValues.frequencyInterval,\n                        organizationLocationRoom: initialValues.organizationLocationRoom.id,\n                        dateStart: initialValues.dateStart,\n                        dateEnd: initialValues.dateEnd,\n                        timeStart: initialTimeStart,\n                        timeEnd: initialTimeEnd,\n                      }}\n                      validationSchema={APPOINTMENT_SCHEMA}\n                      onSubmit={(values, { setSubmitting }) => {\n                          console.log('submit values:')\n                          console.log(values)\n\n                          let frequencyInterval = values.frequencyInterval\n                          if (values.frequencyType == 'SPECIFIC')\n                            frequencyInterval = 0\n\n                          let dateEnd\n                            if (values.dateEnd) {\n                              dateEnd = dateToLocalISO(values.dateEnd)\n                            } else {\n                              dateEnd = values.dateEnd\n                            }  \n\n                          updateScheduleAppointment({ variables: {\n                            input: {\n                              id: id,\n                              displayPublic: values.displayPublic,\n                              frequencyType: values.frequencyType,\n                              frequencyInterval: frequencyInterval,\n                              organizationLocationRoom: values.organizationLocationRoom,\n                              dateStart: dateToLocalISO(values.dateStart),\n                              dateEnd: dateEnd,\n                              timeStart: dateToLocalISOTime(values.timeStart),\n                              timeEnd: dateToLocalISOTime(values.timeEnd)\n                            }\n                          }, refetchQueries: [\n                              {query: GET_APPOINTMENTS_QUERY, variables: get_list_query_variables()}\n                          ]})\n                          .then(({ data }) => {\n                              console.log('got data', data)\n                              toast.success((t('schedule.appointments.toast_edit_success')), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error)\n                              setSubmitting(false)\n                            })\n                      }}\n                      >\n                      {({ isSubmitting, setFieldValue, setFieldTouched, errors, values, touched }) => (\n                        <ScheduleAppointmentForm\n                          inputData={inputData}\n                          isSubmitting={isSubmitting}\n                          setFieldValue={setFieldValue}\n                          setFieldTouched={setFieldTouched}\n                          errors={errors}\n                          values={values}\n                          touched={touched}\n                          return_url={return_url}\n                        >\n                          {console.log('########## v & e')}\n                          {console.log(values)}\n                          {console.log(errors)}\n                          {console.log(touched)}\n                        </ScheduleAppointmentForm>\n                      )}\n                    </Formik>\n                    )}\n                  </Mutation>\n                </AppointmentEditBase>\n            )}}\n           </Query>\n         </div>\n      </SiteWrapper>\n    )}\n  }\n\n\nexport default withTranslation()(withRouter(ScheduleAppointmentEditAll))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\n\n\nfunction StatusIcon({color=\"\"}) {\n  let className\n\n  switch (color) {\n    case \"success\":\n      className=\"bg-success\"\n      break\n    case \"warning\":\n      className=\"bg-warning\"\n      break\n    case \"danger\":\n      className=\"bg-danger\"\n      break\n    case \"primary\":\n      className=\"bg-primary\"\n      break\n    default:\n      className=\"bg-secondary\"\n  }\n\n  return <span className={\"status-icon \" + className} />\n}\n\n\nexport default withTranslation()(StatusIcon)\n\n\n\n","import React from \"react\"\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport StatusIcon from \"../../ui/StatusIcon\"\n\n\nexport function get_list_query_variables() {\n  let orderBy\n  let organizationClasstype\n  let organizationLevel\n  let organizationLocation\n\n  let queryVars = {\n    attendanceCountType: \"ATTENDING_AND_BOOKED\",\n    dateFrom: localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM), \n    dateUntil: localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL)\n  }\n\n  orderBy = localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY)\n  if (orderBy) {\n    queryVars.orderBy = orderBy\n  }\n\n  organizationClasstype = localStorage.getItem(CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE)\n  if (organizationClasstype) {\n    queryVars.organizationClasstype = organizationClasstype\n  } else {\n    queryVars.organizationClasstype = \"\"\n  }\n\n  organizationLevel = localStorage.getItem(CSLS.SCHEDULE_CLASSES_FILTER_LEVEL)\n  if (organizationLevel) {\n    queryVars.organizationLevel = organizationLevel\n  } else {\n    queryVars.organizationLevel = \"\"\n  }\n\n  organizationLocation = localStorage.getItem(CSLS.SCHEDULE_CLASSES_FILTER_LOCATION)\n  if (organizationLocation) {\n    queryVars.organizationLocation = organizationLocation\n  } else {\n    queryVars.organizationLocation = \"\"\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n\nexport function represent_teacher(name, role) {\n  let textColor = false\n\n  switch (role) {\n    case \"SUB\":\n      textColor = \"text-blue\"\n      break\n    case \"ASSISTANT\":\n      textColor = \"text-green\"\n      break\n    case \"KARMA\":\n      textColor = \"text-orange\"\n      break\n  }\n\n  if (textColor) {\n    return <span className={textColor}>{name}</span>\n  } else {\n    return name\n  }\n}\n\n\nexport function represent_class_status(status) {\n  let color\n\n  switch (status) {\n    case \"SUB\":\n      color = \"primary\"\n      break\n    case \"CANCELLED\":\n      color = \"warning\"\n      break\n    case \"OPEN\":\n      color = \"danger\"\n      break\n    default:\n      color = \"success\"\n  }\n\n  return <StatusIcon color={color} />\n}\n\n\nexport function get_class_messages(t, status, description, holiday, holidayName) {\n  let messages\n  if (holiday) {\n    return <span>{t(\"general.holiday\")} ({holidayName})</span>\n  }\n\n  if (status == 'CANCELED') {\n    return description\n  }\n}","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from './tools'\n\n\nfunction getDefaultValue(value) {\n  let defaultValue = localStorage.getItem(value)\n  if (defaultValue) {\n    return defaultValue\n  } else {\n    return \"\"\n  }\n}\n\n\nfunction updateLocalStorageAndRefetch(key, value, refetch) {\n  localStorage.setItem(key, value)\n  refetch(get_list_query_variables())\n\n}\n\nconst selectClass = \"form-control custom-select mb-2\"\n\n\nconst ScheduleClassesFilter = ({ t, history, data, refetch }) => (\n  <div>\n    {/* Locations */}\n    <select \n      className={selectClass}\n      defaultValue={getDefaultValue(CSLS.SCHEDULE_CLASSES_FILTER_LOCATION)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.SCHEDULE_CLASSES_FILTER_LOCATION,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"schedule.classes.filter_all_locations\")}</option>\n      {data.organizationLocations.edges.map(({ node }) =>\n        <option value={node.id} key={v4()}>{node.name}</option>\n      )}\n    </select>\n    {/* Classtypes */}\n    <select \n      className={selectClass}\n      defaultValue={getDefaultValue(CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"schedule.classes.filter_all_classtypes\")}</option>\n      {data.organizationClasstypes.edges.map(({ node }) =>\n        <option value={node.id} key={v4()}>{node.name}</option>\n      )}\n    </select>\n    {/* Levels */}\n    <select \n      className={selectClass}\n      defaultValue={getDefaultValue(CSLS.SCHEDULE_CLASSES_FILTER_LEVEL)}\n      onChange={ (event) => {\n        updateLocalStorageAndRefetch(\n          CSLS.SCHEDULE_CLASSES_FILTER_LEVEL,\n          event.target.value,\n          refetch\n        )\n      }}\n    >\n      <option value=\"\" key={v4()}>{t(\"schedule.classes.filter_all_levels\")}</option>\n      {data.organizationLevels.edges.map(({ node }) =>\n        <option value={node.id} key={v4()}>{node.name}</option>\n      )}\n    </select>\n  </div>\n);\n\nexport default withTranslation()(withRouter(ScheduleClassesFilter))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport CSDatePicker from \"../../ui/CSDatePicker\"\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport ScheduleMenu from \"../ScheduleMenu\"\nimport ScheduleClassesFilter from \"./ScheduleClassesFilter\"\n\nimport { \n  get_list_query_variables, \n} from './tools'\n\nimport moment from 'moment'\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)) {\n  console.log('date from not found... defaulting to today...')\n  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, moment().format('YYYY-MM-DD')) \n  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, moment().add(6, 'days').format('YYYY-MM-DD')) \n} \n\n\nfunction ScheduleClassesBase ({ t, history, children, data, refetch }) {\n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"schedule.title\")}>\n            <div className=\"page-options d-flex\">\n              <span title={t(\"schedule.classes.tooltip_sort_by_location\")}>\n                <Button \n                  icon=\"home\"\n                  tooltip=\"text\"\n                  className=\"mr-2\"\n                  color={\n                    ((localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY) === \"location\") || (!localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY))) ?\n                    \"azure\" : \"secondary\"\n                  }\n                  onClick={() => {\n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_ORDER_BY, \"location\")\n                    refetch(get_list_query_variables())\n                  }}\n                />\n              </span>\n              <span title={t(\"schedule.classes.tooltip_sort_by_starttime\")}>\n                <Button \n                  icon=\"clock\"\n                  className=\"mr-2\"\n                  color={\n                    (localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY) === \"starttime\") ?\n                    \"azure\" : \"secondary\"\n                  }\n                  onClick={() => {\n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_ORDER_BY, \"starttime\")\n                    refetch(get_list_query_variables())\n                  }}\n                />\n              </span>\n              <CSDatePicker \n                className=\"form-control schedule-list-csdatepicker mr-2\"\n                selected={new Date(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM))}\n                isClearable={false}\n                onChange={(date) => {\n                  let nextWeekFrom = moment(date)\n                  let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n\n                  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                  console.log(get_list_query_variables())\n\n                  refetch(get_list_query_variables())\n                }}\n                placeholderText={t('schedule.classes.go_to_date')}\n              />\n              <Button.List className=\"schedule-list-page-options-btn-list\">\n                <Button \n                  icon=\"chevron-left\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)).subtract(7, 'days')\n                    let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                    \n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                    refetch(get_list_query_variables())\n                }} />\n                <Button \n                  icon=\"sunset\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let currentWeekFrom = moment()\n                    let currentWeekUntil = moment(currentWeekFrom).add(6, 'days')\n\n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, currentWeekFrom.format('YYYY-MM-DD')) \n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, currentWeekUntil.format('YYYY-MM-DD')) \n                    \n                    refetch(get_list_query_variables())\n                }} />\n                <Button \n                  icon=\"chevron-right\"\n                  color=\"secondary\"\n                  onClick={ () => {\n                    let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)).add(7, 'days')\n                    let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                    \n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n                    localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n                    refetch(get_list_query_variables())\n                }} />\n              </Button.List> \n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"scheduleclass\">\n                <Button color=\"primary btn-block mb-1\"\n                        onClick={() => history.push(\"/schedule/classes/add\")}>\n                  <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.add')}\n                </Button>\n              </HasPermissionWrapper>\n              {(data) ? \n                <div>\n                  <div>\n                    <Button\n                      className=\"float-right\"\n                      color=\"link\"\n                      size=\"sm\"\n                      onClick={() => {\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE, \"\")\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LEVEL, \"\")\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LOCATION, \"\")\n                        refetch(get_list_query_variables())\n                      }}\n                    >\n                      {t(\"general.clear\")}\n                    </Button>\n                  </div>\n                  <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n                  <ScheduleClassesFilter data={data} refetch={refetch} />\n                </div>\n              : \"\"}\n              <h5>{t(\"general.menu\")}</h5>\n              <ScheduleMenu activeLink='classes'/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_CLASSES_QUERY = gql`\n  query ScheduleClasses(\n      $dateFrom: Date!, \n      $dateUntil:Date!, \n      $orderBy: String, \n      $organizationClasstype: String,\n      $organizationLevel: String,\n      $organizationLocation: String,\n      $attendanceCountType: String!\n    ){\n    scheduleClasses(\n        dateFrom:$dateFrom, \n        dateUntil: $dateUntil, \n        orderBy: $orderBy, \n        organizationClasstype: $organizationClasstype,\n        organizationLevel: $organizationLevel,\n        organizationLocation: $organizationLocation,\n        attendanceCountType: $attendanceCountType,\n        publicOnly: false\n    ){\n      date\n      bookingOpenOn\n      classes {\n        scheduleItemId\n        frequencyType\n        date\n        status\n        holiday\n        holidayName\n        description\n        account {\n          id\n          fullName\n        }\n        role\n        account2 {\n          id\n          fullName\n        }\n        role2\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        timeStart\n        timeEnd\n        availableSpacesOnline\n        availableSpacesTotal\n        displayPublic\n        bookingStatus\n      }\n    }\n    organizationLocations(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationClasstypes(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_CLASS_QUERY = gql`\n  query ScheduleItem($id: ID!, $before: String, $after: String) {\n    scheduleItem(id:$id) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      spaces\n      walkInSpaces\n      displayPublic\n      infoMailContent\n    }\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n    organizationClasstypes(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleClassInputValues($after: String, $before: String) {\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n    organizationClasstypes(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    financePaymentMethods(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const CREATE_CLASS = gql`\n  mutation CreateScheduleClass($input:CreateScheduleClassInput!) {\n    createScheduleClass(input: $input) {\n      scheduleItem {\n        id\n        scheduleItemType\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n        displayPublic\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport {\n  Badge,\n  Dropdown,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table,\n  Text,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport { confirmAlert } from 'react-confirm-alert'\nimport { toast } from 'react-toastify'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\n\n\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\nimport ContentCard from \"../../general/ContentCard\"\nimport ScheduleMenu from \"../ScheduleMenu\"\nimport ScheduleClassesFilter from \"./ScheduleClassesFilter\"\nimport ScheduleClassesBase from './ScheduleClassesBase'\n\nimport { GET_CLASSES_QUERY } from \"./queries\"\nimport { \n  get_class_messages,\n  get_list_query_variables, \n  represent_class_status,\n  represent_teacher \n} from './tools'\n\nimport moment from 'moment'\n\n\nconst DELETE_SCHEDULE_CLASS = gql`\n  mutation DeleteScheduleClass($input: DeleteScheduleClassInput!) {\n    deleteScheduleClass(input: $input) {\n      ok\n    }\n  }\n`\n\n\nconst confirm_delete = ({t, msgConfirm, msgDescription, msgSuccess, deleteFunction, functionVariables}) => {\n  confirmAlert({\n    customUI: ({ onClose }) => {\n      return (\n        <div key={v4()} className='custom-ui'>\n          <h1>{t('general.confirm_delete')}</h1>\n          {msgConfirm}\n          {msgDescription}\n          <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('general.confirm_delete_no')}</button>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              deleteFunction(functionVariables)\n                .then(({ data }) => {\n                  console.log('got data', data);\n                  toast.success(\n                    msgSuccess, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error);\n                })\n              onClose()\n            }}\n          >\n            <Icon name=\"trash-2\" /> {t('general.confirm_delete_yes')}\n          </button>\n        </div>\n      )\n    }\n  })\n}\n\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)) {\n  console.log('date from not found... defaulting to today...')\n  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, moment().format('YYYY-MM-DD')) \n  localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, moment().add(6, 'days').format('YYYY-MM-DD')) \n} \n\n\nfunction ScheduleClasses ({ t, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const {loading, error, data, refetch} = useQuery(GET_CLASSES_QUERY, {\n    variables: get_list_query_variables()\n  })\n  const [deleteScheduleClass] = useMutation(DELETE_SCHEDULE_CLASS)\n\n  if (loading) {\n    return (\n      <ScheduleClassesBase>\n        <p>{t('general.loading_with_dots')}</p>\n      </ScheduleClassesBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <ScheduleClassesBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ScheduleClassesBase>\n    )\n  }\n\n  const classes = data.scheduleClasses\n       \n  // Empty list\n  if (!classes.length) { return (\n    <ScheduleClassesBase>\n      <p>\n        {t('schedule.classes.empty_list')}\n      </p>\n    </ScheduleClassesBase>\n  )} \n\n  return (\n    <ScheduleClassesBase data={data} refetch={refetch}>\n      { data.scheduleClasses.map(({ date, classes }) => (\n        <div key={v4()}>\n          <Card>\n            <Card.Header>\n              <Card.Title>\n                <b>{moment(date).format(\"dddd\")}</b> {' '}\n                <span className=\"text-muted\">\n                  {moment(date).format(\"LL\")} \n                </span>\n              </Card.Title>\n            </Card.Header>\n            {!(classes.length) ? <Card.Body>{t('schedule.classes.empty_list')}</Card.Body> :\n              <Table cards>\n                <Table.Header>\n                  <Table.Row key={v4()}>\n                    <Table.ColHeader /> \n                    <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n                    <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n                    <Table.ColHeader>{t('general.class')}</Table.ColHeader>\n                    <Table.ColHeader>{t('general.teacher')}</Table.ColHeader>\n                    <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n                    <Table.ColHeader></Table.ColHeader>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {classes.map((\n                    { scheduleItemId, \n                      frequencyType,\n                      date, \n                      status,\n                      holiday,\n                      holidayName,\n                      description,\n                      account, \n                      role,\n                      account2,\n                      role2,\n                      organizationLocationRoom, \n                      organizationClasstype, \n                      organizationLevel,\n                      timeStart, \n                      timeEnd,\n                      displayPublic }) => (\n                    <Table.Row key={v4()}>\n                      <Table.Col>\n                        {represent_class_status(status)}\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Start & end time */}\n                        {moment(date + ' ' + timeStart).format(timeFormat)} {' - '}\n                        {moment(date + ' ' + timeEnd).format(timeFormat)} { ' ' }\n                        {(frequencyType === 'SPECIFIC') ? <Badge color=\"primary\">{t('general.once')}</Badge> : null } <br />\n                        <small className=\"text-muted\">{get_class_messages(t, status, description, holiday, holidayName)}</small>\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Location */}\n                        {organizationLocationRoom.organizationLocation.name} <br />\n                        <small className=\"text-muted\">{organizationLocationRoom.name}</small>\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Type and level */}\n                        {organizationClasstype.name} <br />\n                        <small className=\"text-muted\">\n                          {(organizationLevel) ? organizationLevel.name: \"\"}\n                        </small>\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Teacher(s) */}\n                        { (account) ? \n                            represent_teacher(account.fullName, role) : \n                            <span className=\"text-red\">{t(\"schedule.classes.no_teacher\")}</span>\n                        } <br />\n                        <small className=\"text-muted\">\n                          {(account2) ? represent_teacher(account2.fullName, role2) : \"\"}\n                        </small>\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Public */}\n                        <BadgeBoolean value={displayPublic} />\n                      </Table.Col>\n                      <Table.Col>\n                        <Dropdown\n                          key={v4()}\n                          className=\"pull-right\"\n                          type=\"button\"\n                          toggle\n                          color=\"secondary btn-sm\"\n                          triggerContent={t(\"general.actions\")}\n                          items={[\n                            <HasPermissionWrapper key={v4()} permission=\"view\" resource=\"scheduleitemattendance\">\n                              <Dropdown.Item\n                                key={v4()}\n                                icon=\"check-circle\"\n                                onClick={() => history.push('/schedule/classes/class/attendance/' + scheduleItemId + '/' + date)}>\n                                  {t(\"general.attendance\")}\n                              </Dropdown.Item>\n                            </HasPermissionWrapper>,\n                            <HasPermissionWrapper key={v4()} permission=\"view\" resource=\"scheduleclassweeklyotc\">\n                              <Dropdown.Item\n                                key={v4()}\n                                icon=\"edit-3\"\n                                onClick={() => history.push('/schedule/classes/class/edit/' + scheduleItemId + '/' + date)}>\n                                  {t(\"general.edit\")}\n                              </Dropdown.Item>\n                            </HasPermissionWrapper>,\n                            <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleclass\">\n                              <Dropdown.ItemDivider key={v4()} />\n                              <Dropdown.Item\n                                key={v4()}\n                                badge={t('schedule.classes.all_classes_in_series')}\n                                badgeType=\"secondary\"\n                                icon=\"edit-3\"\n                                onClick={() => history.push('/schedule/classes/all/edit/' + scheduleItemId)}>\n                                  {t(\"general.edit\")}\n                              </Dropdown.Item>\n                            </HasPermissionWrapper>,\n                            <HasPermissionWrapper key={v4()} permission=\"delete\" resource=\"scheduleclass\">\n                              <Dropdown.ItemDivider key={v4()} />\n                              <Dropdown.Item\n                                key={v4()}\n                                badge={t('schedule.classes.all_classes_in_series')}\n                                badgeType=\"danger\"\n                                icon=\"trash-2\"\n                                onClick={() => {\n                                  confirm_delete({\n                                    t: t,\n                                    msgConfirm: t(\"schedule.classes.delete_confirm_msg\"),\n                                    msgDescription: <p key={v4()}>\n                                      {moment(date + ' ' + timeStart).format('LT')} {' - '}\n                                      {moment(date + ' ' + timeEnd).format('LT')} {' '} @ {' '}\n                                      {organizationLocationRoom.organizationLocation.name} {' '}\n                                      {organizationLocationRoom.name}\n                                      {organizationClasstype.Name}\n                                      </p>,\n                                    msgSuccess: t('schedule.classes.deleted'),\n                                    deleteFunction: deleteScheduleClass,\n                                    functionVariables: { variables: {\n                                      input: {\n                                        id: scheduleItemId\n                                      }\n                                    }, refetchQueries: [\n                                      { query: GET_CLASSES_QUERY, variables: get_list_query_variables() }\n                                    ]}\n                                  })\n                              }}>\n                              {t(\"general.delete\")}\n                              </Dropdown.Item>\n                            </HasPermissionWrapper>\n                          ]}\n                        />\n                      </Table.Col>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            }\n          </Card>\n        </div>\n      ))}\n    </ScheduleClassesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClasses))\n\n//     <SiteWrapper>\n//       <div className=\"my-3 my-md-5\">\n//         <Query query={GET_CLASSES_QUERY} variables={get_list_query_variables()}>\n//           {({ loading, error, data, refetch }) => {\n//             // Loading\n//             if (loading) return (\n//               <Container>\n//                 <p>{t('general.loading_with_dots')}</p>\n//               </Container>\n//             )\n//             // Error\n//             if (error) {\n//               console.log(error)\n//               return (\n//                 <Container>\n//                   <p>{t('general.error_sad_smiley')}</p>\n//                 </Container>\n//               )\n//             }\n//             const headerOptions = <Card.Options>\n//               {/* <Button color={(!archived) ? 'primary': 'secondary'}  \n//                       size=\"sm\"\n//                       onClick={() => {archived=false; refetch({archived});}}>\n//                 {t('general.current')}\n//               </Button>\n//               <Button color={(archived) ? 'primary': 'secondary'} \n//                       size=\"sm\" \n//                       className=\"ml-2\" \n//                       onClick={() => {archived=true; refetch({archived});}}>\n//                 {t('general.archive')}\n//               </Button> */}\n//             </Card.Options>\n            \n//             // Empty list\n//             if (!data.scheduleClasses.length) { return (\n//               <ContentCard cardTitle={t('schedule.classes.title')}\n//                             headerContent={headerOptions}\n//                             hasCardBody={true}>\n//                 <p>\n//                   {t('schedule.classes.empty_list')}\n//                 </p>\n//               </ContentCard>\n//             )} else {   \n\n//             console.log(data)\n//             // Life's good! :)\n//             return (\n//               <Container>\n//                 <Page.Header title={t(\"schedule.title\")}>\n//                   <div className=\"page-options d-flex\">\n//                     <span title={t(\"schedule.classes.tooltip_sort_by_location\")}>\n//                       <Button \n//                         icon=\"home\"\n//                         tooltip=\"text\"\n//                         className=\"mr-2\"\n//                         color={\n//                           ((localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY) === \"location\") || (!localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY))) ?\n//                           \"azure\" : \"secondary\"\n//                         }\n//                         onClick={() => {\n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_ORDER_BY, \"location\")\n//                           refetch(get_list_query_variables())\n//                         }}\n//                       />\n//                     </span>\n//                     <span title={t(\"schedule.classes.tooltip_sort_by_starttime\")}>\n//                       <Button \n//                         icon=\"clock\"\n//                         className=\"mr-2\"\n//                         color={\n//                           (localStorage.getItem(CSLS.SCHEDULE_CLASSES_ORDER_BY) === \"starttime\") ?\n//                           \"azure\" : \"secondary\"\n//                         }\n//                         onClick={() => {\n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_ORDER_BY, \"starttime\")\n//                           refetch(get_list_query_variables())\n//                         }}\n//                       />\n//                     </span>\n//                     <CSDatePicker \n//                       className=\"form-control schedule-list-csdatepicker mr-2\"\n//                       selected={new Date(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM))}\n//                       isClearable={false}\n//                       onChange={(date) => {\n//                         let nextWeekFrom = moment(date)\n//                         let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n\n//                         localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n//                         localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n//                         console.log(get_list_query_variables())\n\n//                         refetch(get_list_query_variables())\n//                       }}\n//                       placeholderText={t('schedule.classes.go_to_date')}\n//                     />\n//                     <Button.List className=\"schedule-list-page-options-btn-list\">\n//                       <Button \n//                         icon=\"chevron-left\"\n//                         color=\"secondary\"\n//                         onClick={ () => {\n//                           let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)).subtract(7, 'days')\n//                           let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                          \n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n//                           refetch(get_list_query_variables())\n//                       }} />\n//                       <Button \n//                         icon=\"sunset\"\n//                         color=\"secondary\"\n//                         onClick={ () => {\n//                           let currentWeekFrom = moment()\n//                           let currentWeekUntil = moment(currentWeekFrom).add(6, 'days')\n\n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, currentWeekFrom.format('YYYY-MM-DD')) \n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, currentWeekUntil.format('YYYY-MM-DD')) \n                          \n//                           refetch(get_list_query_variables())\n//                       }} />\n//                       <Button \n//                         icon=\"chevron-right\"\n//                         color=\"secondary\"\n//                         onClick={ () => {\n//                           let nextWeekFrom = moment(localStorage.getItem(CSLS.SCHEDULE_CLASSES_DATE_FROM)).add(7, 'days')\n//                           let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n                          \n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n//                           localStorage.setItem(CSLS.SCHEDULE_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n//                           refetch(get_list_query_variables())\n//                       }} />\n//                     </Button.List> \n//                   </div>\n//                 </Page.Header>\n//                 <Grid.Row>\n//                   <Grid.Col md={9}>\n//                     {\n                      \n//                       ))}\n//                 </Grid.Col>\n//                 <Grid.Col md={3}>\n//                   <HasPermissionWrapper permission=\"add\"\n//                                         resource=\"scheduleclass\">\n//                     <Button color=\"primary btn-block mb-1\"\n//                             onClick={() => history.push(\"/schedule/classes/add\")}>\n//                       <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.add')}\n//                     </Button>\n//                   </HasPermissionWrapper>\n//                   <div>\n//                     <Button\n//                       className=\"pull-right\"\n//                       color=\"link\"\n//                       size=\"sm\"\n//                       onClick={() => {\n//                         localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE, \"\")\n//                         localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LEVEL, \"\")\n//                         localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LOCATION, \"\")\n//                         refetch(get_list_query_variables())\n//                       }}\n//                     >\n//                       {t(\"general.clear\")}\n//                     </Button>\n//                   </div>\n//                   <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n//                   <ScheduleClassesFilter data={data} refetch={refetch} />\n//                   <h5>{t(\"general.menu\")}</h5>\n//                   <ScheduleMenu activeLink='classes'/>\n//               </Grid.Col>\n//             </Grid.Row>\n//           </Container>\n//         )}}}\n//         </Query>\n//       </div>\n//     </SiteWrapper>\n//   )\n// }\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const CLASS_SCHEMA = Yup.object().shape({\n    frequencyType: Yup.string()\n      .required(t('yup.field_required')),\n    organizationLocationRoom: Yup.string()\n      .required(t('yup.field_required')),\n    organizationClasstype: Yup.string()\n      .required(t('yup.field_required')),\n    dateStart: Yup.date()\n      .required(t('yup.field_required')),\n    timeStart: Yup.date()\n      .typeError(t('yup.time_required'))\n      .required(t('yup.field_required')),\n    timeEnd: Yup.date()\n      .typeError(t('yup.time_required'))\n      .required(t('yup.field_required')),\n    spaces: Yup.number(),\n    walkInSpaces: Yup.number(),\n  })\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../ui/CSDatePicker\"\nimport CSTimePicker from \"../../ui/CSTimePicker\"\n\nconst ScheduleClassForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, touched, returnUrl }) => (\n    <FoForm>\n      <Card.Body>\n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"displayPublic\" \n              checked={values.displayPublic} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('schedule.classes.public')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n        </Form.Group>  \n        <Form.Group label={t('schedule.classes.frequencyType')}>\n          <Field component=\"select\" \n                name=\"frequencyType\" \n                className={(errors.frequencyType) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"SPECIFIC\" key={v4()}>{t('schedule.classes.select_specific')}</option>\n            <option value=\"WEEKLY\" key={v4()}>{t('schedule.classes.select_weekly')}</option>\n          </Field>\n          <ErrorMessage name=\"frequencyType\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n          <Form.Group label={t('schedule.classes.frequencyInterval')}>\n            <Field component=\"select\" \n                  name=\"frequencyInterval\" \n                  className={(errors.frequencyInterval) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"1\" key={v4()}>{t('general.monday')}</option>\n              <option value=\"2\" key={v4()}>{t('general.tuesday')}</option>\n              <option value=\"3\" key={v4()}>{t('general.wednesday')}</option>\n              <option value=\"4\" key={v4()}>{t('general.thursday')}</option>\n              <option value=\"5\" key={v4()}>{t('general.friday')}</option>\n              <option value=\"6\" key={v4()}>{t('general.saturday')}</option>\n              <option value=\"7\" key={v4()}>{t('general.sunday')}</option>\n            </Field>\n            <ErrorMessage name=\"frequencyInterval\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        }\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.location')}>\n              <Field component=\"select\" \n                    name=\"organizationLocationRoom\" \n                    className={(errors.organizationLocationRoom) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.please_select\")}</option>\n                {inputData.organizationLocationRooms.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.organizationLocation.name} - {node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLocationRoom\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.level')}>\n              <Field component=\"select\" \n                    name=\"organizationLevel\" \n                    className={(errors.organizationLevels) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"\")}</option>\n                {inputData.organizationLevels.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLevels\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.class')}>\n          <Field component=\"select\" \n                name=\"organizationClasstype\" \n                className={(errors.organizationClasstype) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"\" key={v4()}>{t(\"general.please_select\")}</option>\n            {inputData.organizationClasstypes.edges.map(({ node }) =>\n              <option value={node.id} key={v4()}>{node.name}</option>\n            )}\n          </Field>\n          <ErrorMessage name=\"organizationClasstype\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group> \n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={(values.frequencyType == \"SPECIFIC\") ? t('general.date') : t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateStart\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          { (values.frequencyType == \"SPECIFIC\") ? \"\" :\n            <Grid.Col>\n              <Form.Group label={t('general.date_end')}>\n                <CSDatePicker \n                  selected={values.dateEnd}\n                  onChange={(date) => {\n                    setFieldValue(\"dateEnd\", date)\n                    setFieldTouched(\"dateEnd\", true)\n                  }}\n                  onBlur={() => setFieldTouched(\"dateEnd\", true)}\n                  placeholderText={t('schedule.classes.placeholder_enddate')}\n                />\n                <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n              </Form.Group>\n            </Grid.Col>\n          }\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n           <Form.Group label={t('general.time_start')}>\n              <CSTimePicker \n                className={(errors.timeStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeStart}\n                onChange={(date) => setFieldValue(\"timeStart\", date)}\n                onBlur={() => setFieldTouched(\"timeStart\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n           <Form.Group label={t('general.time_end')}>\n              <CSTimePicker \n                className={(errors.timeEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeEnd}\n                onChange={(date) => setFieldValue(\"timeEnd\", date)}\n                onBlur={() => setFieldTouched(\"timeEnd\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.spaces')}>\n              <Field type=\"text\" \n                    name=\"spaces\" \n                    className={(errors.spaces) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"spaces\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.spaces_walk_in')}>\n              <Field type=\"text\" \n                    name=\"walkInSpaces\" \n                    className={(errors.walkInSpaces) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"walkInSpaces\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.note')}>\n          <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"note\"\n              initialValue={values.note}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"note\", e.target.getContent())\n                setFieldTouched(\"note\", true, true)\n              }}\n            />\n          <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n        <Form.Group label={t('general.info_mail')}>\n          <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"infoMailContent\"\n              initialValue={values.infoMailContent}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"infoMailContent\", e.target.getContent())\n                setFieldTouched(\"infoMailContent\", true, true)\n              }}\n            />\n          <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n        >\n        {t('general.submit')}\n        </Button>\n        <Link to={returnUrl}>\n          <Button color=\"link\">\n              {t('general.cancel')}\n          </Button>\n        </Link>\n      </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(ScheduleClassForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Container,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport ScheduleMenu from '../ScheduleMenu'\n\n\nfunction ScheduleClassAddBase({t, children}) {\n  const returnUrl = \"/schedule/classes\"\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"schedule.title\")} />\n          <Grid.Row>\n            <Grid.Col md={9}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <HasPermissionWrapper permission=\"add\"\n                                    resource=\"scheduleclass\">\n                <Link to={returnUrl}>\n                  <Button color=\"primary btn-block mb-6\">\n                    <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n                  </Button>\n                </Link>\n              </HasPermissionWrapper>\n              <ScheduleMenu activeLink='classes'/>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassAddBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_CLASSES_QUERY, GET_INPUT_VALUES_QUERY, CREATE_CLASS } from './queries'\nimport { get_list_query_variables } from './tools'\nimport { CLASS_SCHEMA } from './yupSchema'\nimport ScheduleClassForm from './ScheduleClassForm'\n\n\nimport {\n  Card,\n} from \"tabler-react\"\nimport { dateToLocalISO, dateToLocalISOTime } from '../../../tools/date_tools'\n\nimport ScheduleClassAddBase from './ScheduleClassAddBase'\n\n\nfunction ScheduleClassAdd({t, history}) {\n  const cardTitle = t('schedule.classes.title_add')\n  const returnUrl = \"/schedule/classes\"\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES_QUERY)\n  const [ createScheduleClass ] = useMutation(CREATE_CLASS)\n  \n\n  if (loading) return (\n    <ScheduleClassAddBase>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <p>{t('general.loading_with_dots')}</p>\n        </Card.Body>\n      </Card>\n    </ScheduleClassAddBase>\n  )\n\n  if (error) return (\n    <ScheduleClassAddBase>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <p>{t('general.error_sad_smiley')}</p>\n        </Card.Body>\n      </Card>\n    </ScheduleClassAddBase>\n  )\n\n  const inputData = data\n\n  return (\n    <ScheduleClassAddBase>\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            displayPublic: true,\n            frequencyType: \"WEEKLY\",\n            frequencyInterval: 1,\n            organizationLocationRoom: \"\",\n            organizationClasstype: \"\",\n            organizationLevel: \"\",\n            dateStart: new Date(),\n            timeStart: new Date(),\n            timeEnd: new Date(),\n            spaces: \"\",\n            walkInSpaces: \"\"\n          }}\n          validationSchema={CLASS_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              let frequencyInterval = values.frequencyInterval\n              if (values.frequencyType == 'SPECIFIC')\n                frequencyInterval = 0\n\n              let dateEnd\n                if (values.dateEnd) {\n                  dateEnd = dateToLocalISO(values.dateEnd)\n                } else {\n                  dateEnd = values.dateEnd\n                }\n              \n              createScheduleClass({ variables: {\n                input: {\n                  displayPublic: values.displayPublic,\n                  frequencyType: values.frequencyType,\n                  frequencyInterval: frequencyInterval,\n                  organizationLocationRoom: values.organizationLocationRoom,\n                  organizationClasstype: values.organizationClasstype,\n                  organizationLevel: values.organizationLevel,\n                  dateStart: dateToLocalISO(values.dateStart),\n                  dateEnd: dateEnd,\n                  timeStart: dateToLocalISOTime(values.timeStart),\n                  timeEnd: dateToLocalISOTime(values.timeEnd),\n                  spaces: values.spaces,\n                  walkInSpaces: values.walkInSpaces\n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSES_QUERY, variables: get_list_query_variables()}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('schedule.classes.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values, touched }) => (\n                <ScheduleClassForm\n                  inputData={inputData}\n                  isSubmitting={isSubmitting}\n                  setFieldValue={setFieldValue}\n                  setFieldTouched={setFieldTouched}\n                  errors={errors}\n                  values={values}\n                  touched={touched}\n                  returnUrl={returnUrl}\n                >\n                </ScheduleClassForm>\n              )\n           }\n        </Formik>\n      </Card>      \n    </ScheduleClassAddBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassAdd))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../HasPermissionWrapper\"\n\nlet edit_active\nlet classpasses_active\nlet subscriptions_active\nlet teachers_active\nlet prices_active\n\nconst ClassEditMenu = ({ t, activeLink, classId }) => (\n    <List.Group transparent={true}>\n        {(activeLink === 'edit') ? edit_active = true: edit_active = false}\n        {(activeLink === 'classpasses') ? classpasses_active = true: classpasses_active = false}\n        {(activeLink === 'subscriptions') ? subscriptions_active = true: subscriptions_active = false}\n        {(activeLink === 'teachers') ? teachers_active = true: teachers_active = false}\n        {(activeLink === 'prices') ? prices_active = true: prices_active = false}        \n\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/schedule/classes/all/edit/\" + classId}\n            icon=\"edit-3\"\n            active={edit_active}\n            >\n            {t('general.edit')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/schedule/classes/all/teachers/\" + classId}\n            icon=\"users\"\n            active={teachers_active}\n            >\n            {t('general.teachers')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/schedule/classes/all/prices/\" + classId}\n            icon=\"dollar-sign\"\n            active={prices_active}\n            >\n            {t('general.prices')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/schedule/classes/all/subscriptions/\" + classId}\n            icon=\"edit\"\n            active={subscriptions_active}\n            >\n            {t('general.subscriptions')}\n        </List.GroupItem>\n        <List.GroupItem\n            key={v4()}\n            className=\"d-flex align-items-center\"\n            to={\"#/schedule/classes/all/classpasses/\" + classId}\n            icon=\"edit\"\n            active={classpasses_active}\n            >\n            {t('general.classpasses')}\n        </List.GroupItem>\n    </List.Group>\n);\n\nexport default withTranslation()(ClassEditMenu)","import { gql } from \"@apollo/client\"\n\nexport const UPDATE_CLASS = gql`\nmutation UpdateScheduleClass($input:UpdateScheduleClassInput!) {\n  updateScheduleClass(input: $input) {\n    scheduleItem {\n      id\n      scheduleItemType\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n}\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nconst ClassEditBack = ({ t }) => (\n  <div className=\"page-options d-flex\">\n    <Link to=\"/schedule/classes\" \n          className='btn btn-outline-secondary btn-sm'>\n        <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back_to')} {t('schedule.title')}\n    </Link>\n  </div>\n)\n\nexport default withTranslation()(ClassEditBack)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../../SiteWrapper\"\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\n\nimport ClassEditMenu from './ClassEditMenu'\nimport ClassEditBack from './ClassEditBack';\n\n\nfunction ClassEditBaseBase({t, match, children, subTitle=\"\", cardTitle=\"\", defaultCard=true, menuActiveLink=\"\", sidebarButton=\"\"}) {\n  const classId = match.params.class_id\n  \n  return (\n    <SiteWrapper>\n      <Container>\n        <Page.Header \n          title={t(\"schedule.title\")} \n          subTitle={subTitle}\n        >\n          <ClassEditBack />\n        </Page.Header>\n        <Grid.Row>\n          <Grid.Col md={9}>\n            {(!defaultCard) ? children :\n              <Card title={cardTitle}>\n                <Card.Body>\n                  {children}\n                </Card.Body>\n              </Card>\n            }\n          </Grid.Col>\n          <Grid.Col md={3}>\n            {sidebarButton}\n            <h5>{t('general.menu')}</h5>\n            <ClassEditMenu activeLink={menuActiveLink} classId={classId}/>\n          </Grid.Col>\n        </Grid.Row>\n      </Container>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ClassEditBaseBase))","import moment from 'moment'\n\nexport function class_edit_all_subtitle({t, location, locationRoom, classtype, starttime}) {\n  return t('general.class') + ': ' + location + ' (' + locationRoom + ') - ' + classtype + ' @ ' + moment(starttime).format('LT')\n}\n\n\nexport function represent_teacher_role(t, role) {\n  console.log(role)\n  switch (role) {\n    case \"SUB\":\n      return t('schedule.classes.teacher_roles.sub')\n      break\n    case \"ASSISTANT\":\n      return t('schedule.classes.teacher_roles.assistant')\n      break\n    case \"KARMA\":\n      return t('schedule.classes.teacher_roles.karma')\n      break\n    default:\n      return \"\"\n      break\n  }\n}\n","// @flow\n\nimport React, { Component } from 'react'\nimport { t } from 'i18next'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container,\n} from \"tabler-react\"\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport { GET_CLASS_QUERY } from \"../queries\"\n\nimport ClassEditMenu from './ClassEditMenu'\nimport ClassEditBack from './ClassEditBack'\nimport ClassEditBaseBase from './ClassEditBaseBase'\nimport { class_edit_all_subtitle } from \"./tools\"\n\n\nfunction ClassEditBase({t, match, children, menuActiveLink=\"\", defaultCard=true, sidebarButton=\"\", cardTitle=\"\"}) {\n  const classId = match.params.class_id\n  const { loading, error, data } = useQuery(GET_CLASS_QUERY, { variables: {\n    id: classId\n  }})\n\n  if (!cardTitle) {\n    cardTitle = t('schedule.classes.title_edit')\n  }\n\n  if (loading) return (\n    <ClassEditBaseBase \n      cardTitle={cardTitle}\n      defaultCard={true}\n      sidebarButton={sidebarButton}\n      menuActiveLink={menuActiveLink}\n    >\n      <p>{t('general.loading_with_dots')}</p>\n    </ClassEditBaseBase>\n  )\n\n  if (error) return (\n    <ClassEditBaseBase \n      cardTitle={cardTitle}\n      defaultCard={true}\n      sidebarButton={sidebarButton}\n      menuActiveLink={menuActiveLink}\n    >\n      {console.log(error)}\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBaseBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const initialValues = data.scheduleItem\n\n  const initialTimeStart = TimeStringToJSDateOBJ(initialValues.timeStart)\n  const subTitle = class_edit_all_subtitle({\n    t: t,\n    location: initialValues.organizationLocationRoom.organizationLocation.name,\n    locationRoom: initialValues.organizationLocationRoom.name,\n    classtype: initialValues.organizationClasstype.name,\n    starttime: initialTimeStart\n  })\n\n  return (\n    <ClassEditBaseBase \n      subTitle={subTitle}\n      cardTitle={cardTitle}\n      sidebarButton={sidebarButton}\n      defaultCard={defaultCard}\n      menuActiveLink={menuActiveLink}\n    >\n      {children}\n    </ClassEditBaseBase>\n  )\n\n}\n\nexport default withTranslation()(withRouter(ClassEditBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\n\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_CLASSES_QUERY, GET_CLASS_QUERY } from '../../queries'\nimport { UPDATE_CLASS } from './queries'\n\nimport { get_list_query_variables } from '../../tools'\nimport { CLASS_SCHEMA } from '../../yupSchema'\nimport ScheduleClassForm from '../../ScheduleClassForm'\n\nimport { dateToLocalISO, dateToLocalISOTime, TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\nimport ClassEditBase from '../ClassEditBase'\nimport { Card } from 'tabler-react';\n\n\nfunction ScheduleClassEditAll({t, match}) {\n  const id = match.params.class_id\n  const menuActiveLink = \"edit\"\n  const returnUrl = \"/schedule/classes\"\n  const cardTitle = t('schedule.classes.title_edit')\n  const { loading, error, data } = useQuery(GET_CLASS_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateScheduleClass ] = useMutation(UPDATE_CLASS)\n\n  if (loading) return (\n    <ClassEditBase menu_activeLink={menuActiveLink}>\n      <p>{t('general.loading_with_dots')}</p>\n    </ClassEditBase>\n  )\n\n  if (error) return (\n    <ClassEditBase menu_activeLink={menuActiveLink}>\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const initialValues = data.scheduleItem\n\n  let initialLevelID = \"\"\n  if (initialValues.organizationLevel) {\n    initialLevelID = initialValues.organizationLevel.id\n  }\n\n  const initialTimeStart = TimeStringToJSDateOBJ(initialValues.timeStart)\n  const initialTimeEnd = TimeStringToJSDateOBJ(initialValues.timeEnd)\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  let dateEnd = null\n  if (initialValues.dateStart) {\n    dateStart = new Date(initialValues.dateStart)\n  }\n  if (initialValues.dateEnd) {\n    dateEnd = new Date(initialValues.dateEnd)\n  }\n\n\n  return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink}\n      defaultCard={false}\n    >\n      <Card title={cardTitle}>\n        <Formik\n          initialValues={{ \n            displayPublic: initialValues.displayPublic,\n            frequencyType: initialValues.frequencyType,\n            frequencyInterval: initialValues.frequencyInterval,\n            organizationLocationRoom: initialValues.organizationLocationRoom.id,\n            organizationClasstype: initialValues.organizationClasstype.id,\n            organizationLevel: initialLevelID,\n            dateStart: dateStart,\n            dateEnd: dateEnd,\n            timeStart: initialTimeStart,\n            timeEnd: initialTimeEnd,\n            spaces: initialValues.spaces,\n            walkInSpaces: initialValues.walkInSpaces,\n            infoMailContent: initialValues.infoMailContent\n          }}\n          validationSchema={CLASS_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              let frequencyInterval = values.frequencyInterval\n              if (values.frequencyType == 'SPECIFIC')\n                frequencyInterval = 0\n\n              let dateEnd\n                if (values.dateEnd) {\n                  dateEnd = dateToLocalISO(values.dateEnd)\n                } else {\n                  dateEnd = values.dateEnd\n                }  \n\n              updateScheduleClass({ variables: {\n                input: {\n                  id: id,\n                  displayPublic: values.displayPublic,\n                  frequencyType: values.frequencyType,\n                  frequencyInterval: frequencyInterval,\n                  organizationLocationRoom: values.organizationLocationRoom,\n                  organizationClasstype: values.organizationClasstype,\n                  organizationLevel: values.organizationLevel,\n                  dateStart: dateToLocalISO(values.dateStart),\n                  dateEnd: dateEnd,\n                  timeStart: dateToLocalISOTime(values.timeStart),\n                  timeEnd: dateToLocalISOTime(values.timeEnd),\n                  spaces: values.spaces,\n                  walkInSpaces: values.walkInSpaces,\n                  infoMailContent: values.infoMailContent\n                }\n              }, refetchQueries: [\n                  {query: GET_CLASSES_QUERY, variables: get_list_query_variables()}\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('schedule.classes.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values, touched }) => (\n            <ScheduleClassForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              setFieldValue={setFieldValue}\n              setFieldTouched={setFieldTouched}\n              errors={errors}\n              values={values}\n              touched={touched}\n              returnUrl={returnUrl}\n            />\n          )}\n        </Formik>      \n      </Card>\n    </ClassEditBase>   \n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassEditAll))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\n\n// import {\n//   Badge\n// } from \"tabler-react\"\n\nconst FormHelp = ({ t, message }) => (\n    <span className=\"form-help\" \n          data-toggle=\"popover\" \n          data-placement=\"top\" \n          data-content={message} \n          data-original-title=\"\" \n          title={message} \n          aria-describedby={'popover23432'}>\n        ?\n    </span>\n)\n\nexport default withTranslation()(FormHelp)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Grid,\n  Form,\n  Table,\n  Text\n} from \"tabler-react\"\n\n\nimport FormHelp from \"../../../../ui/FormHelp\"\n\n\nconst ScheduleClassClasspassForm = ({ t, history, match, isSubmitting, submitForm, errors, values, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n    <Dimmer active={isSubmitting} loader={isSubmitting} >\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group className='mb-0'>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"shopBook\" \n                onChange={() => {\n                  setFieldValue('shopBook', !values.shopBook)\n                  setFieldTouched('shopBook', true)\n                  if (!values.shopBook) {\n                    setFieldValue('attend', true)\n                    setFieldTouched('attend', true)\n                  }\n                  setTimeout(() => {submitForm()}, 200)\n                }}\n                checked={values.shopBook} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('schedule.classes.classpasses.shop_book')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"shopBook\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group className='mb-0'>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"attend\" \n                disabled={(values.shopBook)}\n                onChange={() => {\n                  setFieldValue('attend', !values.attend)\n                  setFieldTouched('attend', true)\n                  setTimeout(() => {submitForm()}, 200)\n                }}\n                checked={values.attend} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.attend')}</span>\n            </Form.Label>\n            {/* Show message to inform user they can't disable attend while enroll or shopBook is enabled*/}\n            { (values.shopBook) ? <div>\n                <Text.Small>{t('schedule.classes.classpasses.attend_disabled')}</Text.Small> { ' ' }\n                <FormHelp message={t('schedule.classes.classpasses.attend_disabled_help')} />\n              </div> : \"\" }\n            <ErrorMessage name=\"attend\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n      </Grid.Row>\n    </Dimmer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(ScheduleClassClasspassForm))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_CLASS_CLASSPASS_SCHEMA = Yup.object().shape({\n  shopBook: Yup.boolean(),\n  attend: Yup.boolean(),\n})\n","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_CLASS_CLASSPASSES_QUERY = gql`\n  query ScheduleItemOrganizationClasspassGroups($after: String, $before: String, $scheduleItem: ID!) {\n    scheduleItemOrganizationClasspassGroups(before: $before, after: $after, scheduleItem: $scheduleItem) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          scheduleItem {\n            id\n          }\n          organizationClasspassGroup {\n            id\n            name\n          }\n          shopBook\n          attend\n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const UPDATE_SCHEDULE_CLASS_CLASSPASS = gql`\n  mutation UpdateScheduleItemOrganizationClasspassGroup($input: UpdateScheduleItemOrganizationClasspassGroupInput!) {\n    updateScheduleItemOrganizationClasspassGroup(input:$input) {\n      scheduleItemOrganizationClasspassGroup {\n        id\n      } \n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassClasspassForm from \"./ScheduleClassClasspassForm\"\n\nimport { SCHEDULE_CLASS_CLASSPASS_SCHEMA } from './yupSchema'\nimport { GET_SCHEDULE_CLASS_CLASSPASSES_QUERY, UPDATE_SCHEDULE_CLASS_CLASSPASS } from \"./queries\"\n\n\nfunction ScheduleClassClasspasses({ t, match }) {\n  const classId = match.params.class_id\n  const menuActiveLink = \"classpasses\"\n  const cardTitle = t('schedule.classes.classpasses.title')\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_CLASS_CLASSPASSES_QUERY, { \n    variables: { scheduleItem: classId }\n  })\n  const [ updateScheduleClassClasspass ] = useMutation(UPDATE_SCHEDULE_CLASS_CLASSPASS)\n\n  const sidebarButton = <HasPermissionWrapper permission=\"add\" resource=\"scheduleitemclasspass\">\n    <Link to={\"/schedule/classes/all/classpasses/\" + classId + \"/add\" } >\n      <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.classpasses.add')}\n      </Button>\n    </Link>\n  </HasPermissionWrapper>\n\n  // Loading\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.classpasses.error_loading')}</p>\n    </ClassEditBase>\n  )\n\n  // Empty list\n  if (!data.scheduleItemOrganizationClasspassGroups.edges.length) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.classpasses.empty_list')}</p>\n    </ClassEditBase>\n  )\n\n  return (\n    <ClassEditBase \n      defaultCard={false} \n      menuActiveLink={menuActiveLink} \n      sidebarButton={sidebarButton}\n    >\n    <ContentCard \n      cardTitle={cardTitle}\n      // headerContent={headerOptions}\n      pageInfo={data.scheduleItemOrganizationClasspassGroups.pageInfo}\n      onLoadMore={() => {\n      fetchMore({\n        variables: {\n          after: data.scheduleItemOrganizationClasspassGroups.pageInfo.endCursor\n        },\n        updateQuery: (previousResult, { fetchMoreResult }) => {\n          const newEdges = fetchMoreResult.scheduleItemOrganizationClasspassGroups.edges\n          const pageInfo = fetchMoreResult.scheduleItemOrganizationClasspassGroups.pageInfo\n\n          return newEdges.length\n            ? {\n                // Put the new locations at the end of the list and update `pageInfo`\n                // so we have the new `endCursor` and `hasNextPage` values\n                data: { \n                  scheduleItemOrganizationClasspassGroups: {\n                    __typename: previousResult.scheduleItemOrganizationClasspassGroups.__typename,\n                    edges: [ ...previousResult.scheduleItemOrganizationClasspassGroups.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              }\n            : previousResult\n          }\n        })\n      }} >\n      <div>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t('general.classpass')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {data.scheduleItemOrganizationClasspassGroups.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                {console.log(node)}\n                <Table.Col key={v4()}> \n                  {node.organizationClasspassGroup.name}\n                </Table.Col>\n                <Table.Col>\n                <Formik\n                    initialValues={{  \n                      shopBook: node.shopBook,\n                      attend: node.attend\n                    }}\n                    validationSchema={SCHEDULE_CLASS_CLASSPASS_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n                        console.log(values)\n\n                        updateScheduleClassClasspass({ variables: {\n                            input: {\n                              id: node.id,\n                              shopBook: values.shopBook,\n                              attend: values.attend\n                            }\n                          }, refetchQueries: [\n                            { query: GET_SCHEDULE_CLASS_CLASSPASSES_QUERY,\n                              variables: { scheduleItem: classId }\n                            }\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.classes.classpasses.toast_edit_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setSubmitting(false)\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setSubmitting(false)\n                          })\n                    }}\n                    >\n                    {({ isSubmitting, errors, values, setFieldTouched, setFieldValue, submitForm }) => (\n                      <ScheduleClassClasspassForm\n                        isSubmitting={isSubmitting}\n                        setFieldTouched={setFieldTouched}\n                        setFieldValue={setFieldValue}\n                        errors={errors}\n                        values={values}\n                        submitForm={submitForm}\n                      >\n                        {console.log(errors)}\n                        {console.log(values)}\n                        test\n                      </ScheduleClassClasspassForm>\n                    )}\n                </Formik>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n        </div>\n      </ContentCard>\n    </ClassEditBase>\n  )\n}\n\n\n// class ScheduleClassClasspasses extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Schedule classs classpasses props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const match = this.props.match\n//     const history = this.props.history\n//     const classId = match.params.class_id\n\n//     const ButtonAdd = <HasPermissionWrapper permission=\"add\" resource=\"scheduleitemclasspass\">\n//       <Link to={\"/schedule/classes/all/classpasses/\" + classId + \"/add\" } >\n//         <Button color=\"primary btn-block mb-6\">\n//         <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.classpasses.add')}\n//         </Button>\n//       </Link>\n//     </HasPermissionWrapper>\n\n//     return (\n//       <SiteWrapper>\n//       <div className=\"my-3 my-md-5\">\n//         {console.log('ID here:')}\n//         {console.log(classId)}\n//         <Query query={GET_SCHEDULE_CLASS_CLASSPASSES_QUERY} variables={{ scheduleItem: classId }}>\n//           {({ loading, error, data, refetch, fetchMore }) => {\n  \n//             // Loading\n//             if (loading) return (\n//               <ClassEditBase menu_activeLink=\"classpasses\" card_title={t('schedule.classes.classpasses.title')} sidebar_button={ButtonAdd}>\n//                 <Dimmer active={true} loader={true} />\n//               </ClassEditBase>\n//             )\n//             // Error\n//             if (error) return (\n//               <ClassEditBase menu_activeLink=\"classpasses\" card_title={t('schedule.classes.classpasses.title')} sidebar_button={ButtonAdd}>\n//                 <p>{t('schedule.classes.classpasses.error_loading')}</p>\n//               </ClassEditBase>\n//             )\n  \n//             const initialTimeStart = TimeStringToJSDateOBJ(data.scheduleItem.timeStart)\n//             const subtitle = class_edit_all_subtitle({\n//               t: t,\n//               location: data.scheduleItem.organizationLocationRoom.organizationLocation.name,\n//               locationRoom: data.scheduleItem.organizationLocationRoom.name,\n//               classtype: data.scheduleItem.organizationClasstype.name,\n//               starttime: initialTimeStart\n//             })\n  \n//             // Empty list\n//             if (!data.scheduleItemOrganizationClasspassGroups.edges.length) { return (\n//               <ClassEditBase menu_activeLink=\"classpasses\" card_title={t('schedule.classes.classpasses.title')} sidebar_button={ButtonAdd}>\n//                 <p>{t('schedule.classes.classpasses.empty_list')}</p>\n//               </ClassEditBase>\n//             )} else {   \n//             // Life's good! :)\n//               return (\n//                 <ClassEditBase \n//                   menu_activeLink=\"classpasses\" \n//                   default_card={false} \n//                   subtitle={subtitle}\n//                   sidebar_button={ButtonAdd}\n//                 >\n//                 <ContentCard \n//                   cardTitle={t('schedule.classes.title_edit')}\n//                   // headerContent={headerOptions}\n//                   pageInfo={data.scheduleItemOrganizationClasspassGroups.pageInfo}\n//                   onLoadMore={() => {\n//                   fetchMore({\n//                     variables: {\n//                       after: data.scheduleItemOrganizationClasspassGroups.pageInfo.endCursor\n//                     },\n//                     updateQuery: (previousResult, { fetchMoreResult }) => {\n//                       const newEdges = fetchMoreResult.scheduleItemOrganizationClasspassGroups.edges\n//                       const pageInfo = fetchMoreResult.scheduleItemOrganizationClasspassGroups.pageInfo\n  \n//                       return newEdges.length\n//                         ? {\n//                             // Put the new locations at the end of the list and update `pageInfo`\n//                             // so we have the new `endCursor` and `hasNextPage` values\n//                             data: { \n//                               scheduleItemOrganizationClasspassGroups: {\n//                                 __typename: previousResult.scheduleItemOrganizationClasspassGroups.__typename,\n//                                 edges: [ ...previousResult.scheduleItemOrganizationClasspassGroups.edges, ...newEdges ],\n//                                 pageInfo\n//                               }\n//                             }\n//                           }\n//                         : previousResult\n//                       }\n//                     })\n//                   }} >\n//                   <div>\n//                     <Table>\n//                       <Table.Header>\n//                         <Table.Row>\n//                           <Table.ColHeader>{t('general.classpass')}</Table.ColHeader>\n//                           <Table.ColHeader></Table.ColHeader>\n//                         </Table.Row>\n//                       </Table.Header>\n//                       <Table.Body>\n//                         {data.scheduleItemOrganizationClasspassGroups.edges.map(({ node }) => (\n//                           <Table.Row key={v4()}>\n//                             {console.log(node)}\n//                             <Table.Col key={v4()}> \n//                               {node.organizationClasspassGroup.name}\n//                             </Table.Col>\n//                             <Table.Col>\n//                             <Mutation mutation={UPDATE_SCHEDULE_CLASS_CLASSPASS}> \n//                               {(updateScheduleClassClasspass, { data }) => (\n//                                 <Formik\n//                                     initialValues={{  \n//                                       shopBook: node.shopBook,\n//                                       attend: node.attend\n//                                     }}\n//                                     validationSchema={SCHEDULE_CLASS_CLASSPASS_SCHEMA}\n//                                     onSubmit={(values, { setSubmitting }) => {\n//                                         console.log(values)\n\n//                                         updateScheduleClassClasspass({ variables: {\n//                                           input: {\n//                                             id: node.id,\n//                                             shopBook: values.shopBook,\n//                                             attend: values.attend\n//                                           }\n//                                         }, refetchQueries: [\n//                                             // {query: GET_SCHEDULE_CLASS_TEACHERS_QUERY, variables: { scheduleItem: match.params.class_id }},\n//                                             // {query: GET_CLASSPASSES_QUERY, variables: {\"archived\": false }},\n//                                         ]})\n//                                         .then(({ data }) => {\n//                                             console.log('got data', data);\n//                                             toast.success((t('schedule.classes.classpasses.toast_edit_success')), {\n//                                                 position: toast.POSITION.BOTTOM_RIGHT\n//                                               })\n//                                             setSubmitting(false)\n//                                           }).catch((error) => {\n//                                             toast.error((t('general.toast_server_error')) +  error, {\n//                                                 position: toast.POSITION.BOTTOM_RIGHT\n//                                               })\n//                                             console.log('there was an error sending the query', error)\n//                                             setSubmitting(false)\n//                                           })\n//                                     }}\n//                                     >\n//                                     {({ isSubmitting, errors, values, setFieldTouched, setFieldValue, submitForm }) => (\n//                                       <ScheduleClassClasspassForm\n//                                         isSubmitting={isSubmitting}\n//                                         setFieldTouched={setFieldTouched}\n//                                         setFieldValue={setFieldValue}\n//                                         errors={errors}\n//                                         values={values}\n//                                         submitForm={submitForm}\n//                                       >\n//                                         {console.log(errors)}\n//                                         {console.log(values)}\n//                                         test\n//                                       </ScheduleClassClasspassForm>\n//                                     )}\n//                                 </Formik>\n//                               )}\n//                             </Mutation>\n//                             </Table.Col>\n//                           </Table.Row>\n//                         ))}\n//                       </Table.Body>\n//                     </Table>\n//                     </div>\n//                   </ContentCard>\n//                 </ClassEditBase>\n//             )}}\n//           }\n//         </Query>\n//       </div>\n//     </SiteWrapper>\n//     )\n//   }\n\n// };\n\nexport default withTranslation()(withRouter(ScheduleClassClasspasses))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Grid,\n  Form,\n  Table,\n  Text\n} from \"tabler-react\"\n\n\nimport FormHelp from \"../../../../ui/FormHelp\"\n\n\nconst ScheduleClassSubscriptionForm = ({ t, history, match, isSubmitting, submitForm, errors, values, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n    <Dimmer active={isSubmitting} loader={isSubmitting} >\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group className='mb-0'>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"enroll\" \n                onChange={() => {\n                  setFieldValue('enroll', !values.enroll)\n                  setFieldTouched('enroll', true)\n                  if (!values.enroll) {\n                    setFieldValue('attend', true)\n                    setFieldTouched('attend', true)\n                  }\n                  setTimeout(() => {submitForm()}, 200)\n                }}\n                checked={values.enroll} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.enroll')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"enroll\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group className='mb-0'>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"shopBook\" \n                onChange={() => {\n                  setFieldValue('shopBook', !values.shopBook)\n                  setFieldTouched('shopBook', true)\n                  if (!values.shopBook) {\n                    setFieldValue('attend', true)\n                    setFieldTouched('attend', true)\n                  }\n                  setTimeout(() => {submitForm()}, 200)\n                }}\n                checked={values.shopBook} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('schedule.classes.subscriptions.shop_book')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"shopBook\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group className='mb-0'>\n            <Form.Label className=\"custom-switch\">\n              <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"attend\" \n                disabled={((values.shopBook) || (values.enroll))}\n                onChange={() => {\n                  setFieldValue('attend', !values.attend)\n                  setFieldTouched('attend', true)\n                  setTimeout(() => {submitForm()}, 200)\n                }}\n                checked={values.attend} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.attend')}</span>\n            </Form.Label>\n            {/* Show message to inform user they can't disable attend while enroll or shopBook is enabled*/}\n            { ((values.shopBook) || (values.enroll)) ? <div>\n                <Text.Small>{t('schedule.classes.subscriptions.attend_disabled')}</Text.Small> { ' ' }\n                <FormHelp message={t('schedule.classes.subscriptions.attend_disabled_help')} />\n              </div> : \"\" }\n            <ErrorMessage name=\"attend\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n      </Grid.Row>\n    </Dimmer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(ScheduleClassSubscriptionForm))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_CLASS_SUBSCRIPTION_SCHEMA = Yup.object().shape({\n  enroll: Yup.boolean(),\n  shopBook: Yup.boolean(),\n  attend: Yup.boolean(),\n})\n","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_CLASS_SUBSCRIPTIONS_QUERY = gql`\n  query ScheduleItemOrganizationSubscriptionGroups($after: String, $before: String, $scheduleItem: ID!) {\n    scheduleItemOrganizationSubscriptionGroups(first: 100, before: $before, after: $after, scheduleItem:$scheduleItem) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          scheduleItem {\n            id\n          }\n          organizationSubscriptionGroup {\n            id\n            name\n          }\n          enroll\n          shopBook\n          attend\n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const UPDATE_SCHEDULE_CLASS_SUBSCRIPTION = gql`\nmutation UpdateScheduleItemOrganizationSubscriptionGroup($input: UpdateScheduleItemOrganizationSubscriptionGroupInput!) {\n  updateScheduleItemOrganizationSubscriptionGroup(input:$input) {\n    scheduleItemOrganizationSubscriptionGroup {\n      id\n    } \n  }\n}\n`\n","// @flow\n\nimport React, { Component } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassSubscriptionForm from \"./ScheduleClassSubscriptionForm\"\n\nimport { SCHEDULE_CLASS_SUBSCRIPTION_SCHEMA } from './yupSchema'\nimport { GET_SCHEDULE_CLASS_SUBSCRIPTIONS_QUERY, UPDATE_SCHEDULE_CLASS_SUBSCRIPTION } from \"./queries\"\n\n\nfunction ScheduleClassSubscriptions({t, match, history}) {\n  const classId = match.params.class_id\n  const menuActiveLink = \"subscriptions\"\n  const cardTitle = t('schedule.classes.subscriptions.title')\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_CLASS_SUBSCRIPTIONS_QUERY, { \n    variables: { scheduleItem: classId }\n  })\n  const [ updateScheduleClassSubscription ] = useMutation(UPDATE_SCHEDULE_CLASS_SUBSCRIPTION)\n\n  const sidebarButton = <HasPermissionWrapper permission=\"add\" resource=\"scheduleitemsubscription\">\n    <Link to={\"/schedule/classes/all/subscriptions/\" + classId + \"/add\" } >\n      <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.subscriptions.add')}\n      </Button>\n    </Link>\n  </HasPermissionWrapper>\n\n  // Loading\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.subscriptions.error_loading')}</p>\n    </ClassEditBase>\n  )\n\n  // Empty list\n  if (!data.scheduleItemOrganizationSubscriptionGroups.edges.length) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.subscriptions.empty_list')}</p>\n    </ClassEditBase>\n  )\n\n  return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      defaultCard={false} \n      sidebarButton={sidebarButton}\n    >\n      <ContentCard \n        cardTitle={cardTitle}\n        // headerContent={headerOptions}\n        pageInfo={data.scheduleItemOrganizationSubscriptionGroups.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: data.scheduleItemOrganizationSubscriptionGroups.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.scheduleItemOrganizationSubscriptionGroups.edges\n            const pageInfo = fetchMoreResult.scheduleItemOrganizationSubscriptionGroups.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new locations at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  data: { \n                    scheduleItemOrganizationSubscriptionGroups: {\n                      __typename: previousResult.scheduleItemOrganizationSubscriptionGroups.__typename,\n                      edges: [ ...previousResult.scheduleItemOrganizationSubscriptionGroups.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                }\n              : previousResult\n            }\n          })\n        }} >\n        <div>\n          <Table>\n            <Table.Header>\n              <Table.Row>\n                <Table.ColHeader>{t('general.subscription')}</Table.ColHeader>\n                <Table.ColHeader></Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {data.scheduleItemOrganizationSubscriptionGroups.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  {console.log(node)}\n                  <Table.Col key={v4()}> \n                    {node.organizationSubscriptionGroup.name}\n                  </Table.Col>\n                  <Table.Col>\n                    <Formik\n                      initialValues={{  \n                        enroll: node.enroll,\n                        shopBook: node.shopBook,\n                        attend: node.attend\n                      }}\n                      validationSchema={SCHEDULE_CLASS_SUBSCRIPTION_SCHEMA}\n                      onSubmit={(values, { setSubmitting }) => {\n                          console.log(values)\n                          updateScheduleClassSubscription({ \n                            variables: {\n                              input: {\n                                id: node.id,\n                                enroll: values.enroll,\n                                shopBook: values.shopBook,\n                                attend: values.attend\n                              }\n                            }, \n                            refetchQueries: [\n                              { query: GET_SCHEDULE_CLASS_SUBSCRIPTIONS_QUERY, \n                                variables: { scheduleItem: classId }\n                            }\n                          ]})\n                          .then(({ data }) => {\n                              console.log('got data', data);\n                              toast.success((t('schedule.classes.subscriptions.toast_edit_success')), {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              setSubmitting(false)\n                            }).catch((error) => {\n                              toast.error((t('general.toast_server_error')) +  error, {\n                                  position: toast.POSITION.BOTTOM_RIGHT\n                                })\n                              console.log('there was an error sending the query', error)\n                              setSubmitting(false)\n                            })\n                      }}\n                      >\n                      {({ isSubmitting, errors, values, setFieldTouched, setFieldValue, submitForm }) => (\n                        <ScheduleClassSubscriptionForm\n                          isSubmitting={isSubmitting}\n                          setFieldTouched={setFieldTouched}\n                          setFieldValue={setFieldValue}\n                          errors={errors}\n                          values={values}\n                          submitForm={submitForm}\n                        >\n                          {console.log(errors)}\n                          {console.log(values)}\n                        </ScheduleClassSubscriptionForm>\n                      )}\n                    </Formik>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n          </div>\n        </ContentCard>\n      </ClassEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassSubscriptions))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_CLASS_TEACHERS_QUERY = gql`\n  query ScheduleItemTeachers($after: String, $before: String, $scheduleItem: ID!) {\n    scheduleItemTeachers(first: 15, before: $before, after: $after, scheduleItem: $scheduleItem) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          role\n          account2 {\n            id\n            fullName\n          }\n          role2\n          dateStart\n          dateEnd       \n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY = gql`\n  query ScheduleItemTeacher($before: String, $after: String, $id: ID!) {\n    scheduleItemTeacher(id: $id) {\n      id\n      account {\n        id\n        fullName\n      }\n      role\n      account2 {\n        id\n        fullName\n      }\n      role2\n      dateStart\n      dateEnd       \n    }\n    accounts(first: 100, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InputValues($after: String, $before: String) {\n    accounts(first: 15, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n  }\n`\n\n\nexport const ADD_SCHEDULE_CLASS_TEACHER = gql`\nmutation CreateScheduleItemTeacher($input:CreateScheduleItemTeacherInput!) {\n  createScheduleItemTeacher(input:$input) {\n    scheduleItemTeacher {\n      id\n    } \n  }\n}\n`\n\n\nexport const UPDATE_SCHEDULE_CLASS_TEACHER = gql`\nmutation UpdateScheduleItemTeacher($input: UpdateScheduleItemTeacherInput!) {\n  updateScheduleItemTeacher(input:$input) {\n    scheduleItemTeacher {\n      id\n    } \n  }\n}\n`\n\n\nexport const DELETE_SCHEDULE_CLASS_TEACHER = gql`\nmutation DeleteScheduleClassTeacher($input: DeleteScheduleItemTeacherInput!) {\n  deleteScheduleItemTeacher(input: $input) {\n    ok\n  }\n}\n`","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Icon,\n  Dimmer,\n  Button,\n  Table\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { represent_teacher_role } from \"../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_SCHEDULE_CLASS_TEACHERS_QUERY, DELETE_SCHEDULE_CLASS_TEACHER } from \"./queries\"\n\n\nfunction ScheduleClassTeachers({ t, match, history}) {\n  const classId = match.params.class_id\n  const menuActiveLink = \"teachers\"\n  const cardTitle = t('schedule.classes.teachers.title')\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_CLASS_TEACHERS_QUERY, {\n    variables: {scheduleItem: classId}\n  })\n  const [ deleteScheduleItemTeacher ] = useMutation(DELETE_SCHEDULE_CLASS_TEACHER)\n\n  const ButtonAdd = <HasPermissionWrapper permission=\"add\" resource=\"scheduleitemteacher\">\n    <Link to={`/schedule/classes/all/teachers/${classId}/add` } >\n      <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.teachers.add')}\n      </Button>\n    </Link>\n  </HasPermissionWrapper>\n\n  // Loading\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={ButtonAdd}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={ButtonAdd}\n    >\n      <p>{t('schedule.classes.teachers.error_loading')}</p>\n    </ClassEditBase>\n  )\n\n  // Empty list\n  if (!data.scheduleItemTeachers.edges.length) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={ButtonAdd}\n    >\n      <p>{t('schedule.classes.teachers.empty_list')}</p>\n    </ClassEditBase>\n  )\n\n  return (\n    <ClassEditBase \n    menuActiveLink={menuActiveLink} \n    defaultCard={false}\n    sidebarButton={ButtonAdd}\n    >\n      <ContentCard \n        cardTitle={cardTitle}\n        pageInfo={data.scheduleItemTeachers.pageInfo}\n        onLoadMore={() => {\n        fetchMore({\n          variables: {\n            after: data.scheduleItemTeachers.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const newEdges = fetchMoreResult.scheduleItemTeachers.edges\n            const pageInfo = fetchMoreResult.scheduleItemTeachers.pageInfo\n\n            return newEdges.length\n              ? {\n                  // Put the new locations at the end of the list and update `pageInfo`\n                  // so we have the new `endCursor` and `hasNextPage` values\n                  data: { \n                    scheduleItemTeachers: {\n                      __typename: previousResult.scheduleItemTeachers.__typename,\n                      edges: [ ...previousResult.scheduleItemTeachers.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                }\n              : previousResult\n            }\n          })\n        }} >\n        <div>\n          <Table>\n            <Table.Header>\n              <Table.Row>\n                <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.teacher')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.teacher_2')}</Table.ColHeader>\n                <Table.ColHeader></Table.ColHeader>\n                <Table.ColHeader></Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {data.scheduleItemTeachers.edges.map(({ node }) => (\n                <Table.Row key={v4()}>\n                  {console.log(node)}\n                  <Table.Col key={v4()}> \n                    {moment(node.dateStart).format('LL')}\n                  </Table.Col>\n                  <Table.Col key={v4()}> \n                    {(node.dateEnd) ? moment(node.dateEnd).format('LL') : \"\"}\n                  </Table.Col>\n                  <Table.Col>\n                    {node.account.fullName} <br />\n                    <span className=\"text-muted\">\n                      {represent_teacher_role(t, node.role)}\n                    </span>\n                  </Table.Col>\n                  <Table.Col>\n                    {node.account2 ?\n                      <span>\n                        {node.account2.fullName} <br />\n                        <span className=\"text-muted\">\n                          {represent_teacher_role(t, node.role2)}\n                        </span>\n                      </span> : \"\"\n                    }\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <Link to={`/schedule/classes/all/teachers/${classId}/edit/${node.id}`}>\n                      <Button className='btn-sm' \n                              color=\"secondary\"\n                      >\n                        {t('general.edit')}\n                      </Button>\n                    </Link>\n                  </Table.Col>\n                  <Table.Col className=\"text-right\" key={v4()}>\n                    <button className=\"icon btn btn-link btn-sm\" \n                        title={t('general.delete')} \n                        href=\"\"\n                        onClick={() => {\n                          confirm_delete({\n                            t: t,\n                            msgConfirm: t('schedule.classes.teachers.delete_confirm_msg'),\n                            msgDescription: <p>{t('schedule.classes.teachers.delete_confirm_description')}</p>,\n                            msgSuccess: t('schedule.classes.teachers.deleted'),\n                            deleteFunction: deleteScheduleItemTeacher,\n                            functionVariables: { variables: {\n                              input: {\n                                id: node.id\n                              }\n                            }, refetchQueries: [\n                              {query: GET_SCHEDULE_CLASS_TEACHERS_QUERY, variables: { scheduleItem: match.params.class_id }}\n                            ]}\n                        })}}\n                    >\n                      <span className=\"text-red\">\n                        <Icon prefix=\"fe\" name=\"trash-2\" />\n                      </span>\n                    </button>\n                  </Table.Col>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n          </div>\n        </ContentCard>      \n    </ClassEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassTeachers))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_CLASS_TEACHER_SCHEMA = Yup.object().shape({\n  account: Yup.string()\n    .required(t('yup.field_required')),\n  role: Yup.string(),\n  account2: Yup.string(),\n  role2: Yup.string(),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  // dateEnd: Yup.date()\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\n\nimport CSDatePicker from \"../../../../ui/CSDatePicker\"\n\nconst ScheduleClassTeacherForm = ({ t, history, match, isSubmitting, errors, values, inputData, returnUrl, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                selected={values.dateStart}\n                onChange={(date) => setFieldValue(\"dateStart\", date)}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                selected={values.dateEnd}\n                onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher')}>\n              <Field component=\"select\" \n                      name=\"account\" \n                      className={(errors.account) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in schedule class teacher add:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher_role')}>\n              <Field component=\"select\" \n                      name=\"role\" \n                      className={(errors.role) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                <option value=\"SUB\" key={v4()}>{t('schedule.classes.teacher_roles.sub')}</option>\n                <option value=\"ASSISTANT\" key={v4()}>{t('schedule.classes.teacher_roles.assistant')}</option>\n                <option value=\"KARMA\" key={v4()}>{t('schedule.classes.teacher_roles.karma')}</option>\n              </Field>\n              <ErrorMessage name=\"role\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher2')}>\n              <Field component=\"select\" \n                      name=\"account2\" \n                      className={(errors.account2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher_role2')}>\n              <Field component=\"select\" \n                      name=\"role2\" \n                      className={(errors.role2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                <option value=\"SUB\" key={v4()}>{t('schedule.classes.teacher_roles.sub')}</option>\n                <option value=\"ASSISTANT\" key={v4()}>{t('schedule.classes.teacher_roles.assistant')}</option>\n                <option value=\"KARMA\" key={v4()}>{t('schedule.classes.teacher_roles.karma')}</option>\n              </Field>\n              <ErrorMessage name=\"role2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(ScheduleClassTeacherForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nconst ScheduleClassTeacherBack = ({ t, classId }) => (\n  <Link to={\"/schedule/classes/all/teachers/\" + classId } >\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(withRouter(ScheduleClassTeacherBack))","// @flow\n\nimport React from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n\nimport { GET_SCHEDULE_CLASS_TEACHERS_QUERY, GET_INPUT_VALUES_QUERY, ADD_SCHEDULE_CLASS_TEACHER } from './queries'\nimport { SCHEDULE_CLASS_TEACHER_SCHEMA } from './yupSchema'\nimport ScheduleClassTeacherForm from './ScheduleClassTeacherForm'\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassTeacherBack from \"./ScheduleClassTeacherBack\"\n\n\nfunction ScheduleClassTeacherAdd({ t, history, match }) {\n  const classId = match.params.class_id\n  const returnUrl = `/schedule/classes/all/teachers/${classId}`\n  const cardTitle = t('schedule.classes.teachers.title_add')\n  const menuActiveLink = \"teachers\" \n  const sidebarButton = <ScheduleClassTeacherBack classId={classId} />\n\n  const {loading, error, data} = useQuery(GET_INPUT_VALUES_QUERY)\n  const [addScheduleClassTeacher] = useMutation(ADD_SCHEDULE_CLASS_TEACHER)\n\n  if (loading) return (\n    <ClassEditBase\n      cardTitle={cardTitle}\n      menuActiveLink={menuActiveLink}\n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.loading_with_dots')}</p>\n    </ClassEditBase>\n  )\n\n  if (error) return (\n    <ClassEditBase\n      cardTitle={cardTitle}\n      menuActiveLink={menuActiveLink}\n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n\n  return (\n    <ClassEditBase\n      cardTitle={cardTitle}\n      menuActiveLink={menuActiveLink}\n      sidebarButton={sidebarButton}\n    >\n      <Formik\n        initialValues={{ \n          price: \"\", \n          dateStart: new Date() ,\n          account: \"\",\n          role: \"\",\n          account2: \"\",\n          role2: \"\",\n        }}\n        validationSchema={SCHEDULE_CLASS_TEACHER_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n\n            let dateEnd\n            if (values.dateEnd) {\n              dateEnd = dateToLocalISO(values.dateEnd)\n            } else {\n              dateEnd = values.dateEnd\n            }\n\n            addScheduleClassTeacher({ variables: {\n              input: {\n                scheduleItem: match.params.class_id,\n                account: values.account,\n                role: values.role,\n                account2: values.account2,\n                role2: values.role2,\n                dateStart: dateToLocalISO(values.dateStart),\n                dateEnd: dateEnd\n              }\n            }, refetchQueries: [\n                {query: GET_SCHEDULE_CLASS_TEACHERS_QUERY, variables: { scheduleItem: match.params.class_id }},\n                // {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                history.push(returnUrl)\n                toast.success((t('schedule.classes.teachers.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleClassTeacherForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ClassEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassTeacherAdd))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SCHEDULE_CLASS_TEACHERS_QUERY, GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY, UPDATE_SCHEDULE_CLASS_TEACHER } from './queries'\nimport { SCHEDULE_CLASS_TEACHER_SCHEMA } from './yupSchema'\nimport ScheduleClassTeacherForm from './ScheduleClassTeacherForm'\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassTeacherBack from \"./ScheduleClassTeacherBack\"\n\n\nfunction ScheduleClassTeacherEdit({ t, match, history }) {\n  const id = match.params.id\n  const classId = match.params.class_id\n  const returnUrl = `/schedule/classes/all/teachers/${classId}`\n  const cardTitle = t('schedule.classes.teachers.title_edit')\n  const menuActiveLink = \"teachers\"\n  const sidebarButton = <ScheduleClassTeacherBack classId={classId} />\n\n  const {loading, error, data} = useQuery(GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY, {\n    variables: { id: id }\n  })\n  const [updateScheduleClassTeacher] = useMutation(UPDATE_SCHEDULE_CLASS_TEACHER)\n\n  if (loading) return (\n    <ClassEditBase\n      cardTitle={cardTitle}\n      menuActiveLink={menuActiveLink}\n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.loading_with_dots')}</p>\n    </ClassEditBase>\n  )\n\n  if (error) return (\n    <ClassEditBase\n      cardTitle={cardTitle}\n      menuActiveLink={menuActiveLink}\n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const initialData = data.scheduleItemTeacher\n\n  let initialAccount2 = \"\"\n  if (initialData.account2) {\n    initialAccount2 =  initialData.account2.id\n  } \n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  if (initialData.dateStart) {\n    dateStart = new Date(initialData.dateStart)\n  }\n  \n  let dateEnd = null\n  if (initialData.dateEnd) {\n    dateEnd = new Date(initialData.dateEnd)\n  }\n\n  return (\n    <ClassEditBase \n      cardTitle={cardTitle}\n      menuActiveLink=\"teachers\"\n      sidebarButton={sidebarButton}\n    >\n      <Formik\n        initialValues={{  \n          dateStart: dateStart,\n          dateEnd: dateEnd,\n          account: initialData.account.id,\n          role: initialData.role,\n          account2: initialAccount2,\n          role2: initialData.role2,\n        }}\n        validationSchema={SCHEDULE_CLASS_TEACHER_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n\n            let dateEnd\n            if (values.dateEnd) {\n              dateEnd = dateToLocalISO(values.dateEnd)\n            } else {\n              dateEnd = values.dateEnd\n            }\n\n            updateScheduleClassTeacher({ variables: {\n              input: {\n                id: match.params.id,\n                account: values.account,\n                role: values.role,\n                account2: values.account2,\n                role2: values.role2,\n                dateStart: dateToLocalISO(values.dateStart),\n                dateEnd: dateEnd\n              }\n            }, refetchQueries: [\n                {query: GET_SCHEDULE_CLASS_TEACHERS_QUERY, variables: { scheduleItem: match.params.class_id }},\n                // {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('schedule.classes.teachers.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleClassTeacherForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n          >\n            {console.log(errors)}\n          </ScheduleClassTeacherForm>\n        )}\n      </Formik>\n    </ClassEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassTeacherEdit))","import CSLS from \"../../../../../tools/cs_local_storage\"\nimport { withRouter } from \"react-router\"\n\nexport function get_accounts_query_variables() {\n  let queryVars = {\n    teacher: undefined,\n    employee: undefined,\n    searchName: undefined\n  }\n\n  let search = localStorage.getItem(CSLS.SCHEDULE_CLASSES_CLASS_ATTENDANCE_SEARCH)\n  queryVars.searchName = search\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\nexport function get_attendance_list_query_variables(schedule_item_id, date) {\n  return {\n    scheduleItem: schedule_item_id,\n    date: date\n  }\n}\n","import moment from 'moment'\n\nexport function class_subtitle({t, location, locationRoom, classtype, timeStart, date}) {\n  return t('general.class') + ': ' + \n         location + ' (' + locationRoom + ') - ' + \n         classtype + ' @ ' + \n         moment(date).format('LL') + ' ' + moment(timeStart).format('LT')\n}\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nconst ScheduleClassBack = ({ t, classId }) => (\n  <Link to={\"/schedule/classes/\"} >\n    <Button color=\"link mr-2\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(withRouter(ScheduleClassBack))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n\nfunction ClassMenu ({ t, scheduleItemId, class_date, activeLink }) {\n  let attendance_active = false\n  let edit_active = false\n\n  switch (activeLink) {\n    case \"attendance\":\n      attendance_active = true\n      break\n    case \"edit\":\n      edit_active = true\n      break\n  }\n\n  return (\n    <div>\n      <h5>{t(\"general.menu\")}</h5>\n      <List.Group transparent={true}>   \n        <HasPermissionWrapper \n            resource=\"scheduleitemattendance\"\n            permission=\"view\" \n        >\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to={\"#/schedule/classes/class/attendance/\" + scheduleItemId + \"/\" + class_date}\n              icon=\"check-circle\"\n              active={attendance_active}\n              >\n              {t(\"general.attendance\")}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n        <HasPermissionWrapper \n            resource=\"scheduleclassweeklyotc\"\n            permission=\"change\" \n        >\n          <List.GroupItem\n              key={v4()}\n              className=\"d-flex align-items-center\"\n              to={\"#/schedule/classes/class/edit/\" + scheduleItemId + \"/\" + class_date}\n              icon=\"edit-3\"\n              active={edit_active}\n              >\n              {t(\"general.edit\")}\n          </List.GroupItem>\n        </HasPermissionWrapper>\n\n      </List.Group>\n    </div>\n  )\n}\n\nexport default withTranslation()(ClassMenu)","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { get_attendance_list_query_variables } from \"./tools\"\nimport { DELETE_SCHEDULE_CLASS_ATTENDANCE, GET_SCHEDULE_CLASS_ATTENDANCE_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\n\nfunction ScheduleClassAttendanceDelete({t, match, node}) {\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const [deleteScheduleItemAttendance, { data }] = useMutation(DELETE_SCHEDULE_CLASS_ATTENDANCE)\n\n    return (\n      <button className=\"icon btn btn-link btn-sm pull-right\" \n        title={t('general.delete')} \n        href=\"\"\n        onClick={() => {\n          confirm_delete({\n            t: t,\n            msgConfirm: t(\"schedule.classes.class.attendance.delete_confirm_msg\"),\n            msgDescription: <p>{node.account.fullName}</p>,\n            msgSuccess: t('schedule.classes.class.attendance.delete_success'),\n            deleteFunction: deleteScheduleItemAttendance,\n            functionVariables: { \n              variables: {\n                input: {\n                  id: node.id\n                }\n              }, \n              refetchQueries: [\n                { query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, \n                  variables: get_attendance_list_query_variables(schedule_item_id, class_date) },\n              ]\n            }\n          })\n      }}>\n        <span className=\"text-red\"><Icon prefix=\"fe\" name=\"trash-2\" /></span>\n      </button>\n    )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassAttendanceDelete))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNTS_QUERY = gql`\n  query Accounts(\n    $after: String, \n    $before: String, \n    $searchName: String,\n    $teacher: Boolean,\n    $employee: Boolean\n  ) {\n    accounts(\n      first: 25, \n      before: $before, \n      after: $after, \n      isActive: true, \n      fullName_Icontains: $searchName,\n      customer: true,\n      teacher: $teacher,\n      employee: $employee\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          fullName\n          email\n          isActive\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Dropdown,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { get_attendance_list_query_variables } from \"./tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { get_accounts_query_variables } from \"./tools\"\nimport { class_subtitle } from \"../tools\"\n\nimport ScheduleClassBack from \"../ScheduleClassBack\"\nimport ClassMenu from \"../ClassMenu\"\nimport ContentCard from \"../../../../general/ContentCard\"\nimport InputSearch from \"../../../../general/InputSearch\"\nimport BadgeBookingStatus from \"../../../../ui/BadgeBookingStatus\"\nimport ScheduleClassAttendanceDelete from \"./ScheduleClassAttendanceDelete\"\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_ACCOUNTS_QUERY } from \"../../../../../queries/accounts/account_search_queries\"\nimport { GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, UPDATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction setAttendanceStatus({t, match, updateAttendance, node, status}) {\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  updateAttendance({\n    variables: { \n      input: {\n        id: node.id, \n        bookingStatus: status\n      }\n    },\n    refetchQueries: [\n      {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, \n        variables: get_attendance_list_query_variables(schedule_item_id, class_date)}\n    ]\n  }).then(({ data }) => {\n    console.log('got data', data);\n    toast.success(\n      t('schedule.classes.class.attendance.status_saved'), {\n        position: toast.POSITION.BOTTOM_RIGHT\n      })\n  }).catch((error) => {\n    toast.error((t('general.toast_server_error')) +  error, {\n        position: toast.POSITION.BOTTOM_RIGHT\n      })\n    console.log('there was an error sending the query', error);\n  })\n}\n\n\nfunction ScheduleClassAttendance({ t, match, history }) {\n  const [showSearch, setShowSearch] = useState(false)\n  const return_url = \"/schedule/classes/\"\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const { refetch: refetchAttendance, loading: queryAttendanceLoading, error: queryAttendanceError, data: queryAttendanceData } = useQuery(\n    GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, {\n      variables: get_attendance_list_query_variables(schedule_item_id, class_date)\n    }\n  )\n  const [ updateAttendance, \n    { loading: mutationAttendanceLoading, error: mutationAttendanceError },\n  ] = useMutation(UPDATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  const [ getAccounts, \n         { refetch: refetchAccounts, \n           fetchMore: fetchMoreAccounts,\n           loading: queryAccountsLoading, \n           error: queryAccountsError, \n           data: queryAccountsData \n         }] = useLazyQuery( GET_ACCOUNTS_QUERY )\n\n  console.log('queryAccountsData')\n  console.log(queryAccountsData)\n\n  // const [createInvoice, { data }] = useMutation(CREATE_ACCOUNT_INVOICE, {\n  //   // onCompleted = () => history.push('/finance/invoices/edit/')\n  // }) \n\n  // Query\n  // Loading\n  if (queryAttendanceLoading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (queryAttendanceError) {\n    console.log(queryAttendanceError)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n  \n  console.log(queryAttendanceData)\n  let checkedInIds = []\n  queryAttendanceData.scheduleItemAttendances.edges.map(({ node }) => (\n    checkedInIds.push(node.account.id)\n  ))\n  console.log(checkedInIds)\n\n  const scheduleItem = queryAttendanceData.scheduleItem\n  const subtitle = class_subtitle({\n    t: t,\n    location: scheduleItem.organizationLocationRoom.organizationLocation.name, \n    locationRoom: scheduleItem.organizationLocationRoom.name,\n    classtype: scheduleItem.organizationClasstype.name, \n    timeStart: TimeStringToJSDateOBJ(scheduleItem.timeStart), \n    date: class_date\n  })\n  \n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('schedule.title')} subTitle={subtitle}>\n            <div className=\"page-options d-flex\">       \n              <ScheduleClassBack />\n              <InputSearch \n                initialValueKey={CSLS.SCHEDULE_CLASSES_CLASS_ATTENDANCE_SEARCH}\n                placeholder=\"Search...\"\n                onChange={(value) => {\n                  console.log(value)\n                  localStorage.setItem(CSLS.SCHEDULE_CLASSES_CLASS_ATTENDANCE_SEARCH, value)\n                  if (value) {\n                    // {console.log('showSearch')}\n                    // {console.log(showSearch)}\n                    setShowSearch(true)\n                    getAccounts({ variables: get_accounts_query_variables()})\n                  } else {\n                    setShowSearch(false)\n                  }\n                }}\n              />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n              <Grid.Col md={9}>\n                {/* Search results */}\n                {(showSearch && (queryAccountsData) && (!queryAccountsLoading) && (!queryAccountsError)) ?\n                  <ContentCard cardTitle={t('general.search_results')}\n                              pageInfo={queryAccountsData.accounts.pageInfo}\n                              onLoadMore={() => {\n                                fetchMoreAccounts({\n                                  variables: {\n                                  after: queryAccountsData.accounts.pageInfo.endCursor\n                                },\n                                updateQuery: (previousResult, { fetchMoreResult }) => {\n                                  const newEdges = fetchMoreResult.accounts.edges\n                                  const pageInfo = fetchMoreResult.accounts.pageInfo \n\n                                  return newEdges.length\n                                    ? {\n                                        // Put the new accounts at the end of the list and update `pageInfo`\n                                        // so we have the new `endCursor` and `hasNextPage` values\n                                        queryAccountsData: {\n                                          accounts: {\n                                            __typename: previousResult.accounts.__typename,\n                                            edges: [ ...previousResult.accounts.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      }\n                                    : previousResult\n                                }\n                              })\n                            }} >\n                    { (!queryAccountsData.accounts.edges.length) ? \n                      t('schedule.classes.class.attendance.search_result_empty') : \n                      <Table>\n                        <Table.Header>\n                          <Table.Row key={v4()}>\n                            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                            <Table.ColHeader>{t('general.email')}</Table.ColHeader>\n                            <Table.ColHeader></Table.ColHeader>\n                          </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                          {queryAccountsData.accounts.edges.map(({ node }) => (\n                            <Table.Row key={v4()}>\n                              <Table.Col key={v4()}>\n                                {node.fullName}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {node.email}\n                              </Table.Col>\n                              <Table.Col key={v4()}>\n                                {(checkedInIds.includes(node.id)) ? \n                                 <span className=\"pull-right\">{t(\"schedule.classes.class.attendance.search_results_already_checked_in\")}</span> :\n                                  <Link to={\"/schedule/classes/class/book/\" + schedule_item_id + \"/\" + class_date + \"/\" + node.id}>\n                                    <Button color=\"secondary pull-right\">\n                                      {t('general.checkin')} <Icon name=\"chevron-right\" />\n                                    </Button>\n                                  </Link>       \n                                }   \n                              </Table.Col>\n                            </Table.Row>\n                          ))}\n                        </Table.Body>\n                      </Table>\n                    }\n                  </ContentCard>\n                  : \"\"\n                }\n                {/* Attendance */}\n                <ContentCard cardTitle={t('general.attendance')}\n                             pageInfo={queryAttendanceData.scheduleItemAttendances.pageInfo}\n                             onLoadMore={() => {\n                                fetchMoreAccounts({\n                                variables: {\n                                  after: queryAttendanceData.scheduleItemAttendances.pageInfo.endCursor\n                                },\n                                updateQuery: (previousResult, { fetchMoreResult }) => {\n                                  const newEdges = fetchMoreResult.scheduleItemAttendances.edges\n                                  const pageInfo = fetchMoreResult.scheduleItemAttendances.pageInfo \n\n                                  return newEdges.length\n                                    ? {\n                                        // Put the new scheduleItemAttendances at the end of the list and update `pageInfo`\n                                        // so we have the new `endCursor` and `hasNextPage` values\n                                        queryAttendanceData: {\n                                          scheduleItemAttendances: {\n                                            __typename: previousResult.scheduleItemAttendances.__typename,\n                                            edges: [ ...previousResult.scheduleItemAttendances.edges, ...newEdges ],\n                                            pageInfo\n                                          }\n                                        }\n                                      }\n                                    : previousResult\n                                }\n                              })\n                            }} >\n                  <Table>\n                    <Table.Header>\n                      <Table.Row key={v4()}>\n                        <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                        <Table.ColHeader>{t('general.booking_status')}</Table.ColHeader>\n                        <Table.ColHeader></Table.ColHeader>\n                      </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                      {queryAttendanceData.scheduleItemAttendances.edges.map(({ node }) => (\n                          <Table.Row key={v4()}>\n                            <Table.Col>\n                              {node.account.fullName}\n                            </Table.Col>\n                            <Table.Col>\n                              <BadgeBookingStatus status={node.bookingStatus} />\n                            </Table.Col>\n                            <Table.Col>\n                              {/* Delete */}\n                              <ScheduleClassAttendanceDelete node={node} />\n                              {/* Status dropdown */}\n                              <Dropdown\n                                key={v4()}\n                                className=\"pull-right\"\n                                type=\"button\"\n                                toggle\n                                color=\"secondary btn-sm\"\n                                triggerContent={t(\"general.status\")}\n                                items={[\n                                  // <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                                  //   <Dropdown.Item\n                                  //     key={v4()}\n                                  //     icon=\"check\"\n                                  //     onClick={() => {\n                                  //       setAttendanceStatus({\n                                  //         t: t, \n                                  //         updateAttendance: updateAttendance,\n                                  //         node: node,\n                                  //         status: 'ATTENDING'\n                                  //       })\n                                  //       refetchAttendance()\n                                  //     }}>\n                                  //       {t('schedule.classes.class.attendance.booking_status.ATTENDING')}\n                                  //   </Dropdown.Item>\n                                  // </HasPermissionWrapper>,\n                                  <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                                    <Dropdown.Item\n                                      key={v4()}\n                                      icon=\"calendar\"\n                                      onClick={() => {\n                                        setAttendanceStatus({\n                                          t: t, \n                                          match: match,\n                                          updateAttendance: updateAttendance,\n                                          node: node,\n                                          status: 'BOOKED'\n                                        })\n                                      }}>\n                                        {t('schedule.classes.class.attendance.booking_status.BOOKED')}\n                                    </Dropdown.Item>\n                                  </HasPermissionWrapper>,\n                                  <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                                    <Dropdown.Item\n                                      key={v4()}\n                                      icon=\"x\"\n                                      onClick={() => {\n                                        setAttendanceStatus({\n                                          t: t, \n                                          match: match,\n                                          updateAttendance: updateAttendance,\n                                          node: node,\n                                          status: 'CANCELLED'\n                                        })\n                                      }}>\n                                        {t('schedule.classes.class.attendance.booking_status.CANCELLED')}\n                                    </Dropdown.Item>\n                                  </HasPermissionWrapper>,\n                                ]}\n                              />\n                              {(node.bookingStatus == \"BOOKED\") ?\n                                <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                                  <Button\n                                    key={v4()}\n                                    className=\"pull-right\"\n                                    color=\"success\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                      setAttendanceStatus({\n                                        t: t, \n                                        match: match,\n                                        updateAttendance: updateAttendance,\n                                        node: node,\n                                        status: 'ATTENDING'\n                                      })\n                                    }}>\n                                      {t('general.checkin')}\n                                  </Button>\n                                </HasPermissionWrapper>  : \"\" }\n                            </Table.Col>\n                          </Table.Row>\n                        ))}\n                    </Table.Body>\n                  </Table>\n                </ContentCard>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <ClassMenu \n                  scheduleItemId={schedule_item_id}\n                  class_date={class_date}\n                  activeLink=\"attendance\"\n                />\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassAttendance))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nconst ScheduleClassBookBack = ({ t, classId, date }) => (\n  <Link to={\"/schedule/classes/class/attendance/\" + classId + \"/\" + date} >\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(withRouter(ScheduleClassBookBack))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_BOOKING_OPTIONS_QUERY = gql`\n  query ScheduleClassBookingOptions($account: ID!, $scheduleItem:ID!, $date:Date!, $listType:String!) {\n    scheduleClassBookingOptions(account: $account, scheduleItem: $scheduleItem, date:$date, listType:$listType) {\n      date\n      account {\n        id\n        fullName\n        hasReachedTrialLimit\n      }\n      alreadyBooked\n      scheduleItem {\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n      }\n    \tscheduleItemPrices {\n        organizationClasspassDropin {\n          id\n          name\n          priceDisplay\n        }\n        organizationClasspassTrial {\n          id\n          name\n          priceDisplay\n        }\n      }\n      classpasses {\n        bookingType \n        allowed\n        accountClasspass {\n          id\n          dateStart\n          dateEnd\n          classesRemainingDisplay\n          organizationClasspass {\n            id\n            name\n          }\n        }\n      }\n      subscriptions {\n        bookingType\n        allowed\n        blocked\n        paused\n        accountSubscription {\n          id\n          dateStart\n          dateEnd\n          organizationSubscription {\n            id\n            name\n          }\n          creditTotal\n        }\n      }\n    }\n  }\n`\n\n\nexport const CREATE_SCHEDULE_ITEM_ATTENDANCE = gql`\n  mutation CreateScheduleItemAttendance($input: CreateScheduleItemAttendanceInput!) {\n    createScheduleItemAttendance(input:$input) {\n      scheduleItemAttendance {\n        id\n      }\n    }\n  }\n`","export function getUrlFromReturnTo({returnTo, schedule_item_id, class_date, locationId}) {\n  let return_url\n\n  if (returnTo == \"schedule_classes\") {\n    return_url = '/schedule/classes/class/attendance/' + schedule_item_id + \"/\" + class_date\n  } else if (returnTo == \"selfcheckin\") {\n    return_url = '/selfcheckin/checkin/' + locationId + \"/\" + schedule_item_id + \"/\" + class_date\n  }\n  \n  return return_url\n}","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button,\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport { get_attendance_list_query_variables } from \"../attendance/tools\"\nimport { GET_SCHEDULE_CLASS_ATTENDANCE_QUERY } from \"../attendance/queries\"\nimport { CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\nimport { getUrlFromReturnTo } from \"./tools\"\n\n\nfunction ClasspassCheckinButton({t, match, history, classpass, returnTo, locationId=null}) {\n  console.log(classpass)\n  const account_id = match.params.account_id\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  const createInput = {\n    \"account\": account_id,\n    \"scheduleItem\": schedule_item_id,\n    \"accountClasspass\": classpass.accountClasspass.id,\n    \"date\": class_date,\n    \"attendanceType\": \"CLASSPASS\",\n    \"bookingStatus\": \"ATTENDING\"\n  }\n\n  const [classCheckin, { data, loading, error, onCompleted }] = useMutation(CREATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loading) {\n    return \"Please wait...\"\n  }\n\n  if (error) {\n    return \"uh oh... error found\"\n  }\n\n  const return_url = getUrlFromReturnTo({\n    returnTo: returnTo,\n    schedule_item_id: schedule_item_id,\n    class_date: class_date,\n    locationId: locationId\n  })\n\n  return (\n    <Button \n      block \n      outline \n      color=\"success\" \n      icon=\"check\"\n      onClick={() => classCheckin({\n        variables: { \"input\": createInput }, \n        refetchQueries: [\n          {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, variables: get_attendance_list_query_variables(schedule_item_id, class_date)},\n        ]})\n        .then(({ data }) => {\n            console.log('got data', data);\n            // redirect back to attendance list\n            history.push(return_url)\n            // show message to user\n            toast.success((t('schedule.classes.class.book.toast_success')), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n          }).catch((error) => {\n            toast.error((t('general.toast_server_error')) +  error, {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            console.log('there was an error sending the query', error)\n          })}\n    >\n      {t(\"general.checkin\")}\n    </Button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ClasspassCheckinButton))\n\n","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  List,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle, represent_teacher_role } from \"../../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ScheduleClassBookBack from \"./ScheduleClassBookBack\"\nimport ClasspassCheckinButton from \"./ScheduleClassBookClasspassBtn\"\n\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_BOOKING_OPTIONS_QUERY, CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ScheduleClassBookClasspasses({ \n  t, \n  match, \n  history, \n  classpasses,  \n  locationId,\n  onClickCheckin=f=>f ,\n  returnTo=\"schedule_classes\"\n}) {\n\n  return (\n    classpasses.map((classpass) =>(\n      <Grid.Col md={3}>\n        <Card \n          statusColor=\"blue\"\n          title={t(\"general.classpass\")} >\n        <Card.Body>\n          <b>{classpass.accountClasspass.organizationClasspass.name}</b><br />\n          <span className=\"text-muted\">\n            {t('general.classes_remaining')}: {classpass.accountClasspass.classesRemainingDisplay} <br />\n            {t('general.valid_until')}: {moment(classpass.accountClasspass.dateEnd).format('LL')} <br />\n          </span>\n        </Card.Body>\n        <Card.Footer>\n          {(!classpass.allowed) ? t('schedule.classes.class.book.classpass_not_allowed') :\n            <ClasspassCheckinButton classpass={classpass} returnTo={returnTo} locationId={locationId} />\n          }\n        </Card.Footer>\n        </Card>\n      </Grid.Col>\n    ))\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBookClasspasses))\n\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport { get_attendance_list_query_variables } from \"../attendance/tools\"\nimport { GET_SCHEDULE_CLASS_ATTENDANCE_QUERY } from \"../attendance/queries\"\nimport { CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\nimport { getUrlFromReturnTo } from \"./tools\"\n\n\nfunction SubscriptionCheckinButton({t, match, history, subscription, returnTo, locationId=null}) {\n  console.log(subscription)\n  const account_id = match.params.account_id\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  const createInput = {\n    \"account\": account_id,\n    \"scheduleItem\": schedule_item_id,\n    \"accountSubscription\": subscription.accountSubscription.id,\n    \"date\": class_date,\n    \"attendanceType\": \"SUBSCRIPTION\",\n    \"bookingStatus\": \"ATTENDING\"\n  }\n\n  const [classCheckin, { data, loading, error, onCompleted }] = useMutation(CREATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loading) {\n    return \"Please wait...\"\n  }\n\n  if (error) {\n    return \"uh oh... error found\"\n  }\n\n  const return_url = getUrlFromReturnTo({\n    returnTo: returnTo,\n    schedule_item_id: schedule_item_id,\n    class_date: class_date,\n    locationId: locationId\n  })\n\n  if (subscription.blocked) {\n    return (\n      <p className=\"text-muted\">\n        <Icon name=\"alert-triangle\" />\n        {t(\"schedule.classes.class.book.subscription_blocked\")}\n      </p>\n    )\n  }\n\n  if (subscription.paused) {\n    return (\n      <p className=\"text-muted\">\n        <Icon name=\"pause\" />\n        {t(\"schedule.classes.class.book.subscription_paused\")}\n      </p>\n    )\n  }\n\n  return (\n    <Button \n      block \n      outline \n      color=\"success\" \n      icon=\"check\"\n      onClick={() => classCheckin({\n        variables: { \"input\": createInput }, \n        refetchQueries: [\n          {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, variables: get_attendance_list_query_variables(schedule_item_id, class_date)},\n        ]})\n        .then(({ data }) => {\n            console.log('got data', data);\n            // redirect back to attendance list\n            history.push(return_url)\n            // show message to user\n            toast.success((t('schedule.classes.class.book.toast_success')), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n          }).catch((error) => {\n            toast.error((t('general.toast_server_error')) +  error, {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            console.log('there was an error sending the query', error)\n          })}\n    >\n      {t(\"general.checkin\")}\n    </Button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SubscriptionCheckinButton))\n\n","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle, represent_teacher_role } from \"../../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ScheduleClassBookBack from \"./ScheduleClassBookBack\"\n// import ClassEditBase from \"../ClassEditBase\"\nimport SubscriptionCheckinButton from \"./ScheduleClassBookSubscriptionBtn\"\n\nimport { GET_BOOKING_OPTIONS_QUERY } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\n\nfunction ScheduleClassBookSubscriptions({ \n  t, \n  match, \n  history, \n  subscriptions, \n  locationId,\n  returnTo=\"schedule_classes\"\n}) {\n\n  return (\n    subscriptions.map((subscription) =>(\n      <Grid.Col md={3}>\n        <Card \n          statusColor=\"blue\"\n          title={t(\"general.subscription\")} >\n        <Card.Body>\n          <b>{subscription.accountSubscription.organizationSubscription.name}</b><br />\n          <span className=\"text-muted\">\n            {t(\"general.credits_remaining\")}: {subscription.accountSubscription.creditTotal}\n          </span>\n        </Card.Body>\n        <Card.Footer>\n          {(!subscription.allowed) ? t('schedule.classes.class.book.subscription_not_allowed') :\n            <SubscriptionCheckinButton subscription={subscription} returnTo={returnTo} locationId={locationId} />\n          }\n        </Card.Footer>\n        </Card>\n      </Grid.Col>\n    ))\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBookSubscriptions))\n\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button,\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport { get_attendance_list_query_variables } from \"../attendance/tools\"\nimport { GET_SCHEDULE_CLASS_ATTENDANCE_QUERY } from \"../attendance/queries\"\nimport { CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport { getUrlFromReturnTo } from \"./tools\"\n\n\nfunction ScheduleClassBookPriceBtn({t, match, history, price, returnTo, locationId=null}) {\n  console.log(price)\n  const account_id = match.params.account_id\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  const createInput = {\n    \"account\": account_id,\n    \"scheduleItem\": schedule_item_id,\n    \"organizationClasspass\": price.id,\n    \"date\": class_date,\n    \"attendanceType\": \"CLASSPASS_BUY_AND_BOOK\",\n    \"bookingStatus\": \"ATTENDING\"\n  }\n\n  const [classCheckin, { data, loading, error, onCompleted }] = useMutation(CREATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loading) {\n    return \"Please wait...\"\n  }\n\n  if (error) {\n    return \"uh oh... error found\"\n  }\n\n  const return_url = getUrlFromReturnTo({\n    returnTo: returnTo,\n    schedule_item_id: schedule_item_id,\n    class_date: class_date,\n    locationId: locationId\n  })\n\n  return (\n    <Button \n      block \n      outline \n      color=\"success\" \n      icon=\"check\"\n      onClick={() => classCheckin({\n        variables: { \"input\": createInput }, \n        refetchQueries: [\n          {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, variables: get_attendance_list_query_variables(schedule_item_id, class_date)},\n        ]})\n        .then(({ data }) => {\n            console.log('got data', data);\n            // redirect back to attendance list\n            history.push(return_url)\n            // show message to user\n            toast.success((t('schedule.classes.class.book.toast_success')), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n          }).catch((error) => {\n            toast.error((t('general.toast_server_error')) +  error, {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            console.log('there was an error sending the query', error)\n          })}\n    >\n      {t(\"general.checkin\")}\n    </Button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBookPriceBtn))\n\n","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  List,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle, represent_teacher_role } from \"../../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ScheduleClassBookBack from \"./ScheduleClassBookBack\"\nimport ScheduleClassBookPriceBtn from \"./ScheduleClassBookPriceBtn\"\n\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_BOOKING_OPTIONS_QUERY, CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ScheduleClassBookPriceDropin({ \n  t, \n  match, \n  history, \n  priceDropin, \n  locationId,\n  onClickCheckin=f=>f,\n  returnTo=\"schedule_classes\"\n}) {\n  console.log('priceDropin')\n  console.log(priceDropin)\n\n  return (\n    <Grid.Col md={3}>\n      <Card \n        statusColor=\"blue\"\n        title={t(\"general.dropin\")} >\n      <Card.Body>\n        <b>{priceDropin.priceDisplay}</b><br />\n        {t(\"schedule.classes.class.book.dropin_pay_and_book\")} <br />\n      </Card.Body>\n      <Card.Footer>\n        <ScheduleClassBookPriceBtn price={priceDropin} returnTo={returnTo} locationID={locationId} />\n      </Card.Footer>\n      </Card>\n    </Grid.Col>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBookPriceDropin))\n\n","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  List,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle, represent_teacher_role } from \"../../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ScheduleClassBookBack from \"./ScheduleClassBookBack\"\nimport ScheduleClassBookPriceBtn from \"./ScheduleClassBookPriceBtn\"\n\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_BOOKING_OPTIONS_QUERY, CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ScheduleClassBookPriceTrial({ \n  t, \n  match, \n  history, \n  priceTrial, \n  locationId,\n  onClickCheckin=f=>f,\n  returnTo=\"schedule_classes\"\n}) {\n  console.log('priceTrial')\n  console.log(priceTrial)\n\n  return (\n    <Grid.Col md={3}>\n      <Card \n        statusColor=\"blue\"\n        title={t(\"general.trial\")} >\n      <Card.Body>\n        <b>{priceTrial.priceDisplay}</b><br />\n        {t(\"schedule.classes.class.book.trial_pay_and_book\")} <br />\n      </Card.Body>\n      <Card.Footer>\n        <ScheduleClassBookPriceBtn price={priceTrial} returnTo={returnTo} locationId={locationId} />\n      </Card.Footer>\n      </Card>\n    </Grid.Col>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBookPriceTrial))\n\n","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport { class_edit_all_subtitle, represent_teacher_role } from \"../../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../tools\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ScheduleClassBookBack from \"./ScheduleClassBookBack\"\nimport ScheduleClassBookClasspasses from \"./ScheduleClassBookClasspasses\"\nimport ScheduleClassBookSubscriptions from \"./ScheduleClassBookSubscriptions\"\nimport ScheduleClassBookPriceDropin from \"./ScheduleClassBookPriceDropin\"\nimport ScheduleClassBookPriceTrial from \"./ScheduleClassBookPriceTrial\"\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_BOOKING_OPTIONS_QUERY } from \"./queries\"\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ScheduleClassBook({ t, match, history }) {\n  const [showSearch, setShowSearch] = useState(false)\n  const return_url = \"/schedule/classes/\"\n  const account_id = match.params.account_id\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const { loading: queryLoading, error: queryError, data: queryData } = useQuery(\n    GET_BOOKING_OPTIONS_QUERY, {\n      variables: {\n        account: account_id,\n        scheduleItem: schedule_item_id,\n        date: class_date,\n        listType: \"ATTEND\"\n      }\n    }\n  )\n\n  // Query\n  // Loading\n  if (queryLoading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (queryError) {\n    console.log(queryError)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n  \n  console.log(queryData)\n  const account = queryData.scheduleClassBookingOptions.account\n  const classpasses = queryData.scheduleClassBookingOptions.classpasses\n  const subscriptions = queryData.scheduleClassBookingOptions.subscriptions\n  const prices = queryData.scheduleClassBookingOptions.scheduleItemPrices\n  const scheduleItem = queryData.scheduleClassBookingOptions.scheduleItem\n  const subtitle = class_subtitle({\n    t: t,\n    location: scheduleItem.organizationLocationRoom.organizationLocation.name, \n    locationRoom: scheduleItem.organizationLocationRoom.name,\n    classtype: scheduleItem.organizationClasstype.name, \n    timeStart: TimeStringToJSDateOBJ(scheduleItem.timeStart), \n    date: class_date\n  })\n\n  console.log(prices)\n  \n  \n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('schedule.title')} subTitle={subtitle}>\n            <div className=\"page-options d-flex\">   \n              <ScheduleClassBookBack classId={schedule_item_id} date={class_date} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n              <Grid.Col md={12}>\n                <h4>{t('general.booking_options')} {account.fullName}</h4>\n                <div className=\"mt-6\">\n                <Grid.Row cards deck>\n                  <ScheduleClassBookSubscriptions subscriptions={subscriptions} />\n                  <ScheduleClassBookClasspasses classpasses={classpasses} />\n                  {(prices) ?\n                    (prices.organizationClasspassDropin) ? \n                      <ScheduleClassBookPriceDropin priceDropin={prices.organizationClasspassDropin}/> : \"\" \n                    : \"\" }\n                  {(prices) ?\n                    ((prices.organizationClasspassTrial) && (!account.hasReachedTrialLimit)) ? \n                      <ScheduleClassBookPriceTrial priceTrial={prices.organizationClasspassTrial}/> : \"\" \n                    : \"\" }\n                </Grid.Row>\n                </div>\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassBook))\n\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY = gql`\n  query ScheduleClassWeeklyOTCs($scheduleItem: ID!, $date: Date!) {\n    scheduleClassWeeklyOtcs(first:1, scheduleItem: $scheduleItem, date:$date) {\n      edges {\n        node {\n          id \n          date\n          status\n          description\n          account {\n            id\n            fullName\n          }\n          role\n          account2 {\n            id\n            fullName\n          }\n          role2\n          organizationLocationRoom {\n            id\n            name\n          }\n          organizationClasstype {\n            id\n            name\n          }\n          organizationLevel {\n            id\n            name\n          }\n          timeStart\n          timeEnd\n          spaces\n          walkInSpaces\n          infoMailContent\n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n    accounts(first: 100, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n    organizationLocationRooms(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n    organizationClasstypes(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const DELETE_SCHEDULE_CLASS_WEEKLY_OTC = gql`\n  mutation DeleteScheduleClassWeeklyOTC($input: DeleteScheduleClassWeeklyOTCInput!) {\n    deleteScheduleClassWeeklyOtc(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const UPDATE_SCHEDULE_CLASS_WEEKLY_OTC = gql`\n  mutation UpdateScheduleClassWeeklyOTC($input: UpdateScheduleClassWeeklyOTCInput!) {\n    updateScheduleClassWeeklyOtc(input:$input) {\n      scheduleClassWeeklyOtc {\n        id\n      }\n    }\n  }\n`\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_CLASS_EDIT_OTC_SCHEMA = Yup.object().shape({\n  spaces: Yup.number().nullable().notRequired(),\n  walkInSpaces: Yup.number().nullable().notRequired(),\n})\n","import React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../../ui/CSDatePicker\"\nimport CSTimePicker from \"../../../../ui/CSTimePicker\"\n\nconst ScheduleClassEditForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, errors, values, touched, return_url }) => (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.status')}>\n              <Field component=\"select\" \n                      name=\"status\" \n                      className={(errors.status) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t('')}</option>\n                <option value=\"CANCELLED\" key={v4()}>{t('general.cancelled')}</option>\n                <option value=\"OPEN\" key={v4()}>{t('schedule.classes.no_teacher')}</option>\n              </Field>\n              <ErrorMessage name=\"status\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.description')}>\n              <Field type=\"text\" \n                      name=\"description\" \n                      className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher')}>\n              <Field component=\"select\" \n                      name=\"account\" \n                      className={(errors.account) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in schedule class teacher add:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher_role')}>\n              <Field component=\"select\" \n                      name=\"role\" \n                      className={(errors.role) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                <option value=\"SUB\" key={v4()}>{t('schedule.classes.teacher_roles.sub')}</option>\n                <option value=\"ASSISTANT\" key={v4()}>{t('schedule.classes.teacher_roles.assistant')}</option>\n                <option value=\"KARMA\" key={v4()}>{t('schedule.classes.teacher_roles.karma')}</option>\n              </Field>\n              <ErrorMessage name=\"role\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher2')}>\n              <Field component=\"select\" \n                      name=\"account2\" \n                      className={(errors.account2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher_role2')}>\n              <Field component=\"select\" \n                      name=\"role2\" \n                      className={(errors.role2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                <option value=\"SUB\" key={v4()}>{t('schedule.classes.teacher_roles.sub')}</option>\n                <option value=\"ASSISTANT\" key={v4()}>{t('schedule.classes.teacher_roles.assistant')}</option>\n                <option value=\"KARMA\" key={v4()}>{t('schedule.classes.teacher_roles.karma')}</option>\n              </Field>\n              <ErrorMessage name=\"role2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.location')}>\n              <Field component=\"select\" \n                    name=\"organizationLocationRoom\" \n                    className={(errors.organizationLocationRoom) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.no_change\")}</option>\n                {inputData.organizationLocationRooms.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.organizationLocation.name} - {node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLocationRoom\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.level')}>\n              <Field component=\"select\" \n                    name=\"organizationLevel\" \n                    className={(errors.organizationLevels) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.no_change\")}</option>\n                {inputData.organizationLevels.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLevels\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.class')}>\n          <Field component=\"select\" \n                name=\"organizationClasstype\" \n                className={(errors.organizationClasstype) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\">\n            <option value=\"\" key={v4()}>{t(\"general.no_change\")}</option>\n            {inputData.organizationClasstypes.edges.map(({ node }) =>\n              <option value={node.id} key={v4()}>{node.name}</option>\n            )}\n          </Field>\n          <ErrorMessage name=\"organizationClasstype\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group> \n        <Grid.Row>\n          <Grid.Col>\n           <Form.Group label={t('general.time_start')}>\n              <CSTimePicker \n                className={(errors.timeStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeStart}\n                onChange={(date) => setFieldValue(\"timeStart\", date)}\n                onBlur={() => setFieldTouched(\"timeStart\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n           <Form.Group label={t('general.time_end')}>\n              <CSTimePicker \n                className={(errors.timeEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeEnd}\n                onChange={(date) => setFieldValue(\"timeEnd\", date)}\n                onBlur={() => setFieldTouched(\"timeEnd\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.spaces')}>\n              <Field type=\"text\" \n                    name=\"spaces\" \n                    className={(errors.spaces) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"spaces\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.spaces_walk_in')}>\n              <Field type=\"text\" \n                    name=\"walkInSpaces\" \n                    className={(errors.walkInSpaces) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"walkInSpaces\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Form.Group label={t('general.info_mail')}>\n          <Editor\n            tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n            textareaName=\"infoMailContent\"\n            initialValue={values.infoMailContent}\n            init={tinymceBasicConf}\n            onBlur={(e) => {\n              setFieldValue(\"infoMailContent\", e.target.getContent())\n              setFieldTouched(\"infoMailContent\", true, true)\n            }}\n          />\n          <ErrorMessage name=\"note\" component=\"span\" className=\"invalid-feedback\" />\n        </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n        <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n        >\n        {t('general.submit')}\n        </Button>\n        <Button color=\"link\" onClick={() => history.push(return_url)}>\n            {t('general.cancel')}\n        </Button>\n      </Card.Footer>\n    </FoForm>\n)\n  \n  \n  export default withTranslation()(withRouter(ScheduleClassEditForm))","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_CLASSES_QUERY } from '../../queries'\nimport { get_list_query_variables } from '../../tools'\nimport { DELETE_SCHEDULE_CLASS_WEEKLY_OTC, GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleClassWeeklyOTCDelete({t, match, history}) {\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const [deleteClassOTC, { data }] = useMutation(DELETE_SCHEDULE_CLASS_WEEKLY_OTC, {\n    onCompleted: () => { history.push(\"/schedule/classes/\") }\n  })\n  const query_vars = {\n    scheduleItem: schedule_item_id,\n    date: class_date\n  }\n\n  return (\n    <button className=\"icon btn-block btn btn-danger mb-3\" \n      title={t('general.delete')} \n      href=\"\"\n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.classes.class.edit.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.classes.class.edit.delete_success'),\n          deleteFunction: deleteClassOTC,\n          functionVariables: { \n            variables: {\n              input: {\n                scheduleItem: schedule_item_id,\n                date: class_date\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY, variables: query_vars },\n              { query: GET_CLASSES_QUERY, variables: get_list_query_variables() },\n            ]\n          }\n        })\n    }}>\n      <span className=\"text-white\"><Icon prefix=\"fe\" name=\"trash-2\" /> {\" \"} {t(\"schedule.classes.class.edit.delete_all_changes\")}</span>\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassWeeklyOTCDelete))\n","// @flow\n\nimport React, { useState } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY, UPDATE_SCHEDULE_CLASS_WEEKLY_OTC } from './queries'\nimport { GET_CLASSES_QUERY } from '../../queries'\nimport { get_list_query_variables } from '../../tools'\nimport { SCHEDULE_CLASS_EDIT_OTC_SCHEMA } from './yupSchema'\nimport ScheduleClassEditForm from './ScheduleClassEditForm'\nimport { TimeStringToJSDateOBJ, dateToLocalISOTime } from '../../../../../tools/date_tools'\n\nimport { class_subtitle } from \"../tools\"\n\n\nimport {\n  Alert,\n  Dropdown,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n// import ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassWeeklyOTCDelete from './ScheduleClassWeeklyOTCDelete'\nimport ScheduleClassBack from \"../ScheduleClassBack\"\nimport ClassMenu from \"../ClassMenu\"\n\n\nfunction ScheduleClassEdit({ t, match, history }) {\n  let showDelete = false\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  console.log(schedule_item_id)\n  console.log(class_date)\n\n  const query_vars = {\n    scheduleItem: schedule_item_id,\n    date: class_date\n  }\n\n  const { loading: queryLoading, error: queryError, data: queryData } = useQuery(GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY, {\n    variables: query_vars,\n  })\n  const [ updateScheduleClassWeeklyOTC, { data } ] = useMutation(UPDATE_SCHEDULE_CLASS_WEEKLY_OTC)\n\n  if (queryLoading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (queryError) {\n    console.log(queryError)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n\n  console.log('queryData')\n  console.log(queryData)\n\n  const scheduleItem = queryData.scheduleItem\n  const subtitle = class_subtitle({\n    t: t,\n    location: scheduleItem.organizationLocationRoom.organizationLocation.name, \n    locationRoom: scheduleItem.organizationLocationRoom.name,\n    classtype: scheduleItem.organizationClasstype.name, \n    timeStart: TimeStringToJSDateOBJ(scheduleItem.timeStart), \n    date: class_date\n  })\n  \n  let initialData\n  var initialValues = {}\n  if (queryData.scheduleClassWeeklyOtcs.edges.length) {\n    showDelete = true\n\n    initialData = queryData.scheduleClassWeeklyOtcs.edges[0].node\n\n    initialValues.status = initialData.status\n    initialValues.description = initialData.description\n    if (initialData.account) {\n      initialValues.account = initialData.account.id\n    }\n    if (initialData.account2) {\n      initialValues.account2 = initialData.account2.id\n    }\n    initialValues.role = initialData.role || \"\"\n    initialValues.role2 = initialData.role2 || \"\"\n    if (initialData.organizationLocationRoom) {\n      initialValues.organizationLocationRoom = initialData.organizationLocationRoom.id\n    }\n    if (initialData.organizationClasstype) {\n      initialValues.organizationClasstype = initialData.organizationClasstype.id\n    }\n    if (initialData.organizationLevel) {\n      initialValues.organizationLevel = initialData.organizationLevel.id\n    }\n    if (initialData.timeStart) {\n      initialValues.timeStart = TimeStringToJSDateOBJ(initialData.timeStart)\n    }\n    if (initialData.timeEnd) {\n      initialValues.timeEnd = TimeStringToJSDateOBJ(initialData.timeEnd)\n    }\n    if (initialData.spaces) {\n      initialValues.spaces = initialData.spaces\n    }\n    if (initialData.walkInSpaces) {\n      initialValues.walkInSpaces = initialData.walkInSpaces\n    }\n    if (initialData.infoMailContent) {\n      initialValues.infoMailContent = initialData.infoMailContent\n    }\n    \n  } else {\n    console.log('setting initial values')\n    initialValues.status = \"\"\n    initialValues.description = \"\"\n    initialValues.account = \"\"\n    initialValues.role = \"\"\n    initialValues.account2 = \"\"\n    initialValues.role2 = \"\"\n    initialValues.organizationLocationRoom = \"\"\n    initialValues.organizationClasstype = \"\"\n    initialValues.organizationLevel = \"\"\n    initialValues.timeStart = \"\"\n    initialValues.timeEnd = \"\"\n    initialValues.infoMailContent = \"\"\n  }\n\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('schedule.title')} subTitle={subtitle}>\n            <div className=\"page-options d-flex\">       \n              <ScheduleClassBack />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={9}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>{t('general.edit')}</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  <Formik\n                    initialValues={initialValues}\n                    validationSchema={SCHEDULE_CLASS_EDIT_OTC_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n\n                        console.log(\"SUBMIT VALUES\")\n                        console.log(values)\n\n                        let timeStart = undefined\n                        let timeEnd = undefined\n                        if (values.timeStart) {\n                          timeStart = dateToLocalISOTime(values.timeStart)\n                        }\n                        \n                        if (values.timeEnd) {\n                          timeEnd = dateToLocalISOTime(values.timeEnd)  \n                        }\n                        \n\n                        updateScheduleClassWeeklyOTC({ variables: {\n                          input: {\n                            scheduleItem: schedule_item_id,\n                            date: class_date,\n                            status: values.status,\n                            description: values.description,\n                            account: values.account,\n                            role: values.role,\n                            account2: values.account2,\n                            role2: values.role2,\n                            organizationLocationRoom: values.organizationLocationRoom,\n                            organizationClasstype: values.organizationClasstype,\n                            organizationLevel: values.organizationLevel,\n                            timeStart: timeStart,\n                            timeEnd: timeEnd,\n                            spaces: values.spaces,\n                            walkInSpaces: values.walkInSpaces,\n                            infoMailContent: values.infoMailContent\n                          }\n                        }, refetchQueries: [\n                            {query: GET_SCHEDULE_CLASS_WEEKLY_OTCS_QUERY, variables: query_vars},\n                            {query: GET_CLASSES_QUERY, variables: get_list_query_variables()},\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.classes.class.edit.toast_edit_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setSubmitting(false)\n                        }).catch((error) => {\n                          toast.error((t('general.toast_server_error')) +  error, {\n                              position: toast.POSITION.BOTTOM_RIGHT\n                            })\n                          console.log('there was an error sending the query', error)\n                          console.log('there was an error sending the query', error.graphQLErrors)\n                          setSubmitting(false)\n                        })\n                      }\n                    }\n                    >\n                    {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n                      <ScheduleClassEditForm\n                        inputData={queryData}\n                        isSubmitting={isSubmitting}\n                        setFieldTouched={setFieldTouched}\n                        setFieldValue={setFieldValue}\n                        errors={errors}\n                        values={values}\n                      >\n                        {console.log(errors)}\n                      </ScheduleClassEditForm>\n                    )}\n                  </Formik>\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              {(showDelete) ? \n                <ScheduleClassWeeklyOTCDelete /> : \"\"\n              }\n              <ClassMenu \n                scheduleItemId={schedule_item_id}\n                class_date={class_date}\n                activeLink=\"edit\"\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassEdit))","import React from \"react\"\nimport { Link } from 'react-router-dom'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Button,\n  Icon, \n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nfunction ButtonAdd({t, classId}) {\n  return (\n    <HasPermissionWrapper permission=\"add\" resource=\"scheduleitemprice\">\n      <Link to={\"/schedule/classes/all/prices/\" + classId + \"/add\" } >\n        <Button color=\"primary btn-block mb-6\">\n          <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.classes.prices.add')}\n        </Button>\n      </Link>\n    </HasPermissionWrapper>\n  )\n} \n\nexport default withTranslation()(ButtonAdd)","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_ITEM_PRICES_QUERY = gql`\n  query ScheduleItemPrices($after: String, $before: String, $scheduleItem: ID!) {\n    scheduleItemPrices(first: 15, before: $before, after: $after, scheduleItem: $scheduleItem) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          organizationClasspassDropin {\n            id\n            name\n          }\n          organizationClasspassTrial {\n            id\n            name\n          }\n          dateStart\n          dateEnd       \n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const GET_SINGLE_SCHEDULE_ITEM_PRICE_QUERY = gql`\nquery ScheduleItemPrice($before: String, $after: String, $id: ID!) {\n  scheduleItemPrice(id: $id) {\n    id\n    organizationClasspassDropin {\n      id\n      name\n    }\n    organizationClasspassTrial {\n      id\n      name\n    }\n    dateStart\n    dateEnd       \n  }\n  organizationClasspasses(first: 100, before: $before, after: $after, archived: false) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n}\n`\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query InputValues($after: String, $before: String) {\n    organizationClasspasses(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const ADD_SCHEDULE_ITEM_PRICE = gql`\n  mutation CreateScheduleItemPrice($input:CreateScheduleItemPriceInput!) {\n    createScheduleItemPrice(input:$input) {\n      scheduleItemPrice {\n        id\n      } \n    }\n  }\n`\n\nexport const UPDATE_SCHEDULE_ITEM_PRICE = gql`\nmutation UpdateScheduleItemPrice($input: UpdateScheduleItemPriceInput!) {\n  updateScheduleItemPrice(input:$input) {\n    scheduleItemPrice {\n      id\n    } \n  }\n}\n`\n\nexport const DELETE_SCHEDULE_ITEM_PRICE = gql`\n  mutation DeleteScheduleItemPrice($input: DeleteScheduleItemPriceInput!) {\n    deleteScheduleItemPrice(input: $input) {\n      ok\n    }\n  }\n`\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_SCHEDULE_ITEM_PRICE, GET_SCHEDULE_ITEM_PRICES_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleClassPriceDelete({t, match, history, id}) {\n  const classId = match.params.class_id\n  const [deleteClassPrice, { data }] = useMutation(DELETE_SCHEDULE_ITEM_PRICE)\n  const query_vars = {\n    scheduleItem: classId\n  }\n\n  return (\n    <button className=\"icon btn btn-danger btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.classes.prices.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.classes.prices.delete_success'),\n          deleteFunction: deleteClassPrice,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_ITEM_PRICES_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <span className=\"text-white\"><Icon prefix=\"fe\" name=\"trash-2\" /> {\" \"} {t(\"\")}</span>\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassPriceDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport moment from 'moment'\n\nimport {\n  Dimmer,\n  Button,\n  Table\n} from \"tabler-react\";\nimport { TimeStringToJSDateOBJ } from '../../../../../tools/date_tools'\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\nimport ButtonAdd from \"./ButtonAdd\"\nimport { class_edit_all_subtitle } from \"../tools\"\nimport confirm_delete from \"../../../../../tools/confirm_delete\"\n\nimport ContentCard from \"../../../../general/ContentCard\"\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassPriceDelete from './ScheduleClassPriceDelete'\n\nimport { GET_SCHEDULE_ITEM_PRICES_QUERY } from \"./queries\"\n\n\nfunction ScheduleClassPrices({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const classId = match.params.class_id\n  const menuActiveLink = \"prices\" \n  const cardTitle = t('schedule.classes.prices.title')\n  const sidebarButton = <ButtonAdd classId={classId}/>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_ITEM_PRICES_QUERY, {\n    variables: { scheduleItem: classId }\n  })\n\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.prices.error_loading')}</p>\n    </ClassEditBase>\n  )\n\n\n  const initialTimeStart = TimeStringToJSDateOBJ(data.scheduleItem.timeStart)\n  const subtitle = class_edit_all_subtitle({\n    t: t,\n    location: data.scheduleItem.organizationLocationRoom.organizationLocation.name,\n    locationRoom: data.scheduleItem.organizationLocationRoom.name,\n    classtype: data.scheduleItem.organizationClasstype.name,\n    starttime: initialTimeStart\n  })\n\n  // Empty list\n  if (!data.scheduleItemPrices.edges.length) { return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('schedule.classes.prices.empty_list')}</p>\n    </ClassEditBase>\n  )}\n\n  return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n      defaultCard={false}\n    >\n    <ContentCard \n      cardTitle={t('schedule.classes.title_edit')}\n      // headerContent={headerOptions}\n      pageInfo={data.scheduleItemPrices.pageInfo}\n      onLoadMore={() => {\n      fetchMore({\n        variables: {\n          after: data.scheduleItemPrices.pageInfo.endCursor\n        },\n        updateQuery: (previousResult, { fetchMoreResult }) => {\n          const newEdges = fetchMoreResult.scheduleItemPrices.edges\n          const pageInfo = fetchMoreResult.scheduleItemPrices.pageInfo\n\n          return newEdges.length\n            ? {\n                // Put the new locations at the end of the list and update `pageInfo`\n                // so we have the new `endCursor` and `hasNextPage` values\n                data: { \n                  scheduleItemPrices: {\n                    __typename: previousResult.scheduleItemPrices.__typename,\n                    edges: [ ...previousResult.scheduleItemPrices.edges, ...newEdges ],\n                    pageInfo\n                  }\n                }\n              }\n            : previousResult\n          }\n        })\n      }} >\n      <div>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.dropin')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.trial')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {data.scheduleItemPrices.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                {console.log(node)}\n                <Table.Col key={v4()}> \n                  {moment(node.dateStart).format('LL')}\n                </Table.Col>\n                <Table.Col key={v4()}> \n                  {(node.dateEnd) ? moment(node.dateEnd).format('LL') : \"\"}\n                </Table.Col>\n                <Table.Col>\n                  {node.organizationClasspassDropin.name}\n                </Table.Col>\n                <Table.Col>\n                  {(node.organizationClasspassTrial) ? node.organizationClasspassTrial.name : \"\"}\n                </Table.Col>\n                <Table.Col className=\"text-right\" key={v4()}>\n                  <Button className='btn-sm' \n                          onClick={() => history.push(\"/schedule/classes/all/prices/\" + match.params.class_id + '/edit/' + node.id)}\n                          color=\"secondary\">\n                    {t('general.edit')}\n                  </Button>\n                </Table.Col>\n                <Table.Col>\n                  <ScheduleClassPriceDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n        </div>\n      </ContentCard>\n    </ClassEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleClassPrices))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\n\nimport CSDatePicker from \"../../../../ui/CSDatePicker\"\n\nconst ScheduleClassPriceForm = ({ t, history, match, isSubmitting, errors, values, inputData, returnUrl, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                selected={values.dateStart}\n                onChange={(date) => setFieldValue(\"dateStart\", date)}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                selected={values.dateEnd}\n                onChange={(date) => setFieldValue(\"dateEnd\", date)}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.classpass_dropin')}>\n              <Field component=\"select\" \n                      name=\"organizationClasspassDropin\" \n                      className={(errors.organizationClasspassDropin) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in schedule class price form:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.organizationClasspasses.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationClasspassDropin\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('schedule.classes.classpass_trial')}>\n              <Field component=\"select\" \n                      name=\"organizationClasspassTrial\" \n                      className={(errors.organizationClasspassTrial) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t('')}</option>\n                {inputData.organizationClasspasses.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationClasspassTrial\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n  </FoForm>\n);\n\nexport default withTranslation()(withRouter(ScheduleClassPriceForm))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_CLASS_TEACHER_SCHEMA = Yup.object().shape({\n  account: Yup.string()\n    .required(t('yup.field_required')),\n  role: Yup.string(),\n  account2: Yup.string(),\n  role2: Yup.string(),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  // dateEnd: Yup.date()\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nconst ScheduleClassPriceBack = ({ t, classId }) => (\n  <Link to={\"/schedule/classes/all/prices/\" + classId } >\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(withRouter(ScheduleClassPriceBack))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Dimmer,\n} from \"tabler-react\";\n\nimport { GET_SCHEDULE_ITEM_PRICES_QUERY, GET_INPUT_VALUES_QUERY, ADD_SCHEDULE_ITEM_PRICE } from './queries'\nimport { SCHEDULE_CLASS_TEACHER_SCHEMA } from './yupSchema'\nimport ScheduleClassPriceForm from './ScheduleClassPriceForm'\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassPriceBack from \"./ScheduleClassPriceBack\"\n\n\nfunction ScheduleClassPriceAdd({ t, history, match }) {\n  const classId = match.params.class_id\n  const returnUrl = `/schedule/classes/all/prices/${classId}`\n  const cardTitle = t('schedule.classes.prices.title_add')\n  const menuActiveLink = \"prices\"\n  const sidebarButton = <ScheduleClassPriceBack classId={classId} />\n  const { loading, error, data, } = useQuery(GET_INPUT_VALUES_QUERY)\n  const [addScheduleClassPrice] = useMutation(ADD_SCHEDULE_ITEM_PRICE, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n\n\n  return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Formik\n        initialValues={{ \n          dateStart: new Date() ,\n          organizationClasspassDropin: \"\",\n          organizationClasspassTrial: \"\",\n        }}\n        // validationSchema={SCHEDULE_CLASS_TEACHER_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n\n            let dateEnd\n            if (values.dateEnd) {\n              dateEnd = dateToLocalISO(values.dateEnd)\n            } else {\n              dateEnd = values.dateEnd\n            }\n\n            addScheduleClassPrice({ variables: {\n              input: {\n                scheduleItem: match.params.class_id,\n                dateStart: dateToLocalISO(values.dateStart),\n                dateEnd: dateEnd,\n                organizationClasspassDropin: values.organizationClasspassDropin,\n                organizationClasspassTrial: values.organizationClasspassTrial\n              }\n            }, refetchQueries: [\n                {query: GET_SCHEDULE_ITEM_PRICES_QUERY, variables: { scheduleItem: match.params.class_id }},\n                // {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('schedule.classes.prices.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleClassPriceForm\n            inputData={inputData}\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n          />\n        )}\n    </Formik>\n  </ClassEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleClassPriceAdd))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Dimmer,\n} from \"tabler-react\";\n\nimport { GET_SCHEDULE_ITEM_PRICES_QUERY, GET_SINGLE_SCHEDULE_ITEM_PRICE_QUERY, UPDATE_SCHEDULE_ITEM_PRICE } from './queries'\nimport { SCHEDULE_CLASS_TEACHER_SCHEMA } from './yupSchema'\nimport ScheduleClassPriceForm from './ScheduleClassPriceForm'\nimport { dateToLocalISO } from '../../../../../tools/date_tools'\n\nimport ClassEditBase from \"../ClassEditBase\"\nimport ScheduleClassPriceBack from \"./ScheduleClassPriceBack\"\n\nfunction ScheduleClassPriceEdit({ t, history, match }) {\n  const id = match.params.id\n  const classId = match.params.class_id\n  const returnUrl = `/schedule/classes/all/prices/${classId}`\n  const menuActiveLink = \"prices\"\n  const cardTitle = t('schedule.classes.prices.title_edit')\n  const sidebarButton = <ScheduleClassPriceBack classId={match.params.class_id} />\n  const { loading, error, data, } = useQuery(GET_SINGLE_SCHEDULE_ITEM_PRICE_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n  const [editScheduleClassPrice] = useMutation(UPDATE_SCHEDULE_ITEM_PRICE, {\n    onCompleted: () => history.push(returnUrl)\n  })\n\n\n  if (loading) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <Dimmer active={true} loader={true} />\n    </ClassEditBase>\n  )\n  // Error\n  if (error) return (\n    <ClassEditBase \n      menuActiveLink={menuActiveLink} \n      cardTitle={cardTitle} \n      sidebarButton={sidebarButton}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n    </ClassEditBase>\n  )\n\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n\n  let initialOrganizationClasspassDropin\n  let initialOrganizationClasspassTrial\n\n  if (inputData.scheduleItemPrice.organizationClasspassDropin) {\n    initialOrganizationClasspassDropin = inputData.scheduleItemPrice.organizationClasspassDropin.id\n  }\n\n  if (inputData.scheduleItemPrice.organizationClasspassTrial) {\n    initialOrganizationClasspassTrial = inputData.scheduleItemPrice.organizationClasspassTrial.id\n  }\n\n  // DatePicker doesn't like a string as an initial value\n  // This makes it a happy DatePicker :)\n  let dateStart = null\n  let dateEnd = null\n  if (inputData.scheduleItemPrice.dateStart) {\n    dateStart = new Date(inputData.scheduleItemPrice.dateStart)\n  }\n  if (inputData.scheduleItemPrice.dateEnd) {\n    dateEnd = new Date(inputData.scheduleItemPrice.dateEnd)\n  }\n\n\n  return (\n  <ClassEditBase \n    cardTitle={cardTitle}\n    menu_activeLink={menuActiveLink}\n    sidebarButton={sidebarButton}\n  >\n    <Formik\n      initialValues={{ \n        dateStart: dateStart,\n        dateEnd: dateEnd,\n        organizationClasspassDropin: initialOrganizationClasspassDropin,\n        organizationClasspassTrial: initialOrganizationClasspassTrial,\n      }}\n      // validationSchema={SCHEDULE_CLASS_TEACHER_SCHEMA}\n      onSubmit={(values, { setSubmitting }) => {\n\n          let dateEnd\n          if (values.dateEnd) {\n            dateEnd = dateToLocalISO(values.dateEnd)\n          } else {\n            dateEnd = values.dateEnd\n          }\n\n          editScheduleClassPrice({ variables: {\n            input: {\n              id: id,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateEnd,\n              organizationClasspassDropin: values.organizationClasspassDropin,\n              organizationClasspassTrial: values.organizationClasspassTrial\n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_ITEM_PRICES_QUERY, variables: { scheduleItem: match.params.class_id }},\n              // {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('schedule.classes.prices.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n      >\n      {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n        <ScheduleClassPriceForm\n          inputData={inputData}\n          isSubmitting={isSubmitting}\n          setFieldTouched={setFieldTouched}\n          setFieldValue={setFieldValue}\n          errors={errors}\n          values={values}\n          returnUrl={returnUrl + match.params.class_id}\n        />\n      )}\n  </Formik>\n</ClassEditBase>\n  )\n}\n\n\n// class ScheduleClassTeacherEdit extends Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"Schedule class teacher edit props:\")\n//     console.log(props)\n//   }\n\n//   render() {\n//     const t = this.props.t\n//     const match = this.props.match\n//     const history = this.props.history\n//     const id = match.params.id\n//     const class_id = match.params.class_id\n//     const returnUrl = \"/schedule/classes/all/teachers/\" + class_id\n\n//     return (\n//       <SiteWrapper>\n//         <div className=\"my-3 my-md-5\">\n//           <Query query={GET_SINGLE_SCHEDULE_CLASS_TEACHERS_QUERY} variables={{id: id}}>\n//             {({ loading, error, data, refetch }) => {\n//               // Loading\n//               if (loading) return <p>{t('general.loading_with_dots')}</p>\n//               // Error\n//               if (error) {\n//                 console.log(error)\n//                 return <p>{t('general.error_sad_smiley')}</p>\n//               }\n    \n//               console.log('query data')\n//               console.log(data)\n//               const inputData = data\n//               const initialData = data.scheduleItemTeacher\n\n//               let initialAccount2 = \"\"\n//               if (initialData.account2) {\n//                 initialAccount2 =  initialData.account2.id\n//               } \n    \n//               return (\n//                 <ClassEditBase \n//                   card_title={t('schedule.classes.teachers.title_edit')}\n//                   menu_activeLink=\"teachers\"\n//                   sidebar_button={<ScheduleClassTeacherBack classId={class_id} />}\n//                 >\n//                   <Mutation mutation={UPDATE_SCHEDULE_CLASS_TEACHER} onCompleted={() => history.push(returnUrl)}> \n//                     {(addScheduleClassTeacher, { data }) => (\n//                         <Formik\n//                             initialValues={{  \n//                               dateStart: initialData.dateStart,\n//                               dateEnd: initialData.dateEnd,\n//                               account: initialData.account.id,\n//                               role: initialData.role,\n//                               account2: initialAccount2,\n//                               role2: initialData.role2,\n//                             }}\n//                             validationSchema={SCHEDULE_CLASS_TEACHER_SCHEMA}\n//                             onSubmit={(values, { setSubmitting }) => {\n    \n//                                 let dateEnd\n//                                 if (values.dateEnd) {\n//                                   dateEnd = dateToLocalISO(values.dateEnd)\n//                                 } else {\n//                                   dateEnd = values.dateEnd\n//                                 }\n    \n//                                 addScheduleClassTeacher({ variables: {\n//                                   input: {\n//                                     id: match.params.id,\n//                                     account: values.account,\n//                                     role: values.role,\n//                                     account2: values.account2,\n//                                     role2: values.role2,\n//                                     dateStart: dateToLocalISO(values.dateStart),\n//                                     dateEnd: dateEnd\n//                                   }\n//                                 }, refetchQueries: [\n//                                     {query: GET_SCHEDULE_CLASS_TEACHERS_QUERY, variables: { scheduleItem: match.params.class_id }},\n//                                     // {query: GET_SUBSCRIPTIONS_QUERY, variables: {\"archived\": false }},\n//                                 ]})\n//                                 .then(({ data }) => {\n//                                     console.log('got data', data);\n//                                     toast.success((t('schedule.classes.teachers.toast_edit_success')), {\n//                                         position: toast.POSITION.BOTTOM_RIGHT\n//                                       })\n//                                   }).catch((error) => {\n//                                     toast.error((t('general.toast_server_error')) +  error, {\n//                                         position: toast.POSITION.BOTTOM_RIGHT\n//                                       })\n//                                     console.log('there was an error sending the query', error)\n//                                     setSubmitting(false)\n//                                   })\n//                             }}\n//                             >\n//                             {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n//                               <ScheduleClassTeacherForm\n//                                 inputData={inputData}\n//                                 isSubmitting={isSubmitting}\n//                                 setFieldTouched={setFieldTouched}\n//                                 setFieldValue={setFieldValue}\n//                                 errors={errors}\n//                                 values={values}\n//                                 returnUrl={returnUrl}\n//                               >\n//                                 {console.log(errors)}\n//                               </ScheduleClassTeacherForm>\n//                             )}\n//                         </Formik>\n//                     )}\n//                   </Mutation>\n//                 </ClassEditBase>\n//               )\n//             }}\n//           </Query>\n//         </div>\n//       </SiteWrapper>\n//     )\n//   }\n// }\n\n\nexport default withTranslation()(withRouter(ScheduleClassPriceEdit))","// @flow\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container,\n  Grid\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport SiteWrapper from \"../../SiteWrapper\"\n// import ShopAccountBack from \"../ShopAccountBack\"\nimport ScheduleMenu from \"../ScheduleMenu\"\n\n\nfunction ScheduleEventsBase({ t, match, history, children, sidebarContent=\"\", displayMenu=true }) {\n  return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"schedule.events.title\")} >\n              <div className=\"page-options d-flex\">\n                {/* Page options can go here... */}\n              </div>\n            </Page.Header>\n            <Grid.Row>\n            <Grid.Col md={9}>\n              { children }\n            </Grid.Col>\n            <Grid.Col md={3}>\n              { sidebarContent }\n                  {/* <div>\n                    <Button\n                      className=\"pull-right\"\n                      color=\"link\"\n                      size=\"sm\"\n                      onClick={() => {\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_CLASSTYPE, \"\")\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LEVEL, \"\")\n                        localStorage.setItem(CSLS.SCHEDULE_CLASSES_FILTER_LOCATION, \"\")\n                        refetch(get_list_query_variables())\n                      }}\n                    >\n                      {t(\"general.clear\")}\n                    </Button>\n                  </div> */}\n                  {/* <h5 className=\"mt-2 pt-1\">{t(\"general.filter\")}</h5>\n                  <ScheduleClassesFilter data={data} refetch={refetch} /> */}\n              {(displayMenu) ?\n                <span>\n                  <h5>{t(\"general.menu\")}</h5>\n                  <ScheduleMenu activeLink='events'/>\n                </span>\n                : \"\" }\n            </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n      </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventsBase))\n","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_EVENTS_QUERY = gql`\n  query ScheduleEvents($before:String, $after:String, $archived:Boolean!) {\n    scheduleEvents(first: 100, before: $before, after:$after, archived:$archived) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          displayShop\n          autoSendInfoMail\n          organizationLocation {\n            id\n            name\n          }\n          name\n          tagline\n          preview\n          description\n          organizationLevel {\n            id\n            name\n          }\n          teacher {\n            id \n            fullName\n          }\n          teacher2 {\n            id\n            fullName\n          }\n          dateStart\n          dateEnd\n          timeStart\n          timeEnd\n          infoMailContent\n          scheduleItems {\n            edges {\n              node {\n                id\n              }\n            }\n          }\n          createdAt\n          updatedAt\n        }\n      }\n    }\n  }\n`\n\nexport const GET_SCHEDULE_EVENT_QUERY = gql`\n  query ScheduleEvent($id: ID!, $before: String, $after: String) {\n    scheduleEvent(id: $id) {\n      id\n      archived\n      displayPublic\n      displayShop\n      autoSendInfoMail\n      organizationLocation {\n        id\n        name\n      }\n      name\n      tagline\n      preview\n      description\n      organizationLevel {\n        id\n        name\n      }\n      teacher {\n        id \n        fullName\n      }\n      teacher2 {\n        id\n        fullName\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      infoMailContent\n      scheduleItems {\n        edges {\n          node {\n            id\n          }\n        }\n      }\n      createdAt\n      updatedAt\n    }\n    organizationLocations(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    accounts(first: 100, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleEventInputValues($after: String, $before: String) {\n    organizationLocations(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    organizationLevels(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          name\n        }\n      }\n    }\n    accounts(first: 100, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n  }\n`\n\nexport const ARCHIVE_SCHEDULE_EVENT = gql`\n  mutation ArchiveScheduleEvent($input: ArchiveScheduleEventInput!) {\n    archiveScheduleEvent(input: $input) {\n      scheduleEvent {\n        id\n      }\n    }\n  }\n`\n","import CSLS from \"../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n  let archived = localStorage.getItem(CSLS.SCHEDULE_EVENTS_ARCHIVED)\n  if (archived === null) {\n    archived = false\n  }\n\n  let queryVars = {\n    archived: (archived === \"true\") ? true : false,\n  }\n\n  console.log(queryVars)\n\n  return queryVars\n}\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { ARCHIVE_SCHEDULE_EVENT, GET_SCHEDULE_EVENTS_QUERY } from \"./queries\"\nimport confirm_archive from \"../../../tools/confirm_archive\"\nimport confirm_unarchive from \"../../../tools/confirm_unarchive\"\n\nimport {\n  Icon\n} from \"tabler-react\"\nimport { get_list_query_variables } from './tools'\n\n\nfunction ScheduleEventArchive({t, match, history, node}) {\n  const [archiveScheduleEvent] = useMutation(ARCHIVE_SCHEDULE_EVENT)\n  const refetchQueries = [\n    { query: GET_SCHEDULE_EVENTS_QUERY, variables: get_list_query_variables() },\n  ]\n\n  if (!node.archived) {\n    return (\n      <button className=\"icon btn btn-warning btn-sm mb-3 pull-right\" \n          title={t('general.unarchive')} \n          onClick={() => {\n            confirm_archive({\n              t: t,\n              msgConfirm: t(\"schedule.events.archive_confirm_msg\"),\n              msgDescription: <p></p>,\n              msgSuccess: t('general.archived'),\n              archiveFunction: archiveScheduleEvent,\n              functionVariables: { \n                variables: {\n                  input: {\n                    id: node.id,\n                    archived: true\n                  },\n                }, \n                refetchQueries: refetchQueries,\n              }\n            })\n        }}>\n        <span className=\"text-white\"><Icon prefix=\"fe\" name=\"inbox\" /> {\" \"} {t(\"\")}</span>\n      </button>\n    )\n\n  } else {\n    return (\n      <button className=\"icon btn btn-warning btn-sm mb-3 pull-right\" \n        title={t('general.archive')} \n        onClick={() => {\n          confirm_unarchive({\n            t: t,\n            msgConfirm: t(\"schedule.events.unarchive_confirm_msg\"),\n            msgDescription: <p></p>,\n            msgSuccess: t('general.unarchived'),\n            archiveFunction: archiveScheduleEvent,\n            functionVariables: { \n              variables: {\n                input: {\n                  id: node.id,\n                  archived: false\n                },\n              }, \n              refetchQueries: refetchQueries,\n            }\n          })\n      }}>\n        <span className=\"text-white\"><Icon prefix=\"fe\" name=\"inbox\" /> {\" \"} {t(\"\")}</span>\n      </button>\n    )\n  }\n}\n\nexport default withTranslation()(withRouter(ScheduleEventArchive))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport moment from 'moment'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport BadgeBoolean from \"../../ui/BadgeBoolean\"\n\nimport ContentCard from \"../../general/ContentCard\"\nimport ScheduleEventsBase from \"./ScheduleEventsBase\"\nimport ScheduleEventArchive from \"./ScheduleEventArchive\"\n\nimport { GET_SCHEDULE_EVENTS_QUERY } from \"./queries\"\nimport { get_list_query_variables } from \"./tools\"\n\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.SCHEDULE_EVENTS_ARCHIVED)) {\n  localStorage.setItem(CSLS.SCHEDULE_EVENTS_ARCHIVED, false) \n} \n\n\nfunction ScheduleEvents({t, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const { loading, error, data, refetch, fetchMore } = useQuery(GET_SCHEDULE_EVENTS_QUERY, {\n    variables: get_list_query_variables()\n  })\n\n  const sidebarContent = <HasPermissionWrapper permission=\"add\" resource=\"scheduleevent\">\n    <Button color=\"primary btn-block mb-1\"\n            onClick={() => history.push(\"/schedule/events/add\")}>\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.events.add')}\n    </Button>\n  </HasPermissionWrapper>\n\n  const cardHeaderContent = <Card.Options>\n    <Button color={(localStorage.getItem(CSLS.SCHEDULE_EVENTS_ARCHIVED) === \"false\") ? 'primary': 'secondary'}  \n            size=\"sm\"\n            onClick={() => {\n              localStorage.setItem(CSLS.SCHEDULE_EVENTS_ARCHIVED, false)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.active')}\n    </Button>\n    <Button color={(localStorage.getItem(CSLS.SCHEDULE_EVENTS_ARCHIVED) === \"true\") ? 'primary': 'secondary'} \n            size=\"sm\" \n            className=\"ml-2\" \n            onClick={() => {\n              localStorage.setItem(CSLS.SCHEDULE_EVENTS_ARCHIVED, true)\n              refetch(get_list_query_variables())\n            }\n    }>\n      {t('general.archive')}\n    </Button>\n  </Card.Options>\n\n  if (loading) {\n    return (\n      <ScheduleEventsBase sidebarContent={sidebarContent}>\n        <ContentCard \n          cardTitle={t('schedule.events.title')}\n          headerContent={cardHeaderContent}\n        >\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </ContentCard>\n      </ScheduleEventsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <ScheduleEventsBase sidebarContent={sidebarContent}>\n        <ContentCard \n          cardTitle={t('schedule.events.title')}\n          headerContent={cardHeaderContent}\n        >\n          {t(\"schedule.events.error_loading_data\")}\n        </ContentCard>\n      </ScheduleEventsBase>\n    )\n  }\n\n  console.log(data)\n\n  const scheduleEvents = data.scheduleEvents\n\n  return (\n    <ScheduleEventsBase sidebarContent={sidebarContent}>\n      <ContentCard \n        cardTitle={t('schedule.events.title')}\n        headerContent={cardHeaderContent}\n        pageInfo={scheduleEvents.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: scheduleEvents.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.scheduleEvents.edges\n                  const pageInfo = fetchMoreResult.scheduleEvents.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        scheduleEvents: {\n                          __typename: previousResult.scheduleEvents.__typename,\n                          edges: [ ...previousResult.scheduleEvents.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} \n      >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.start')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.event')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.teacher')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.shop')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>  \n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            { scheduleEvents.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  { moment(node.date).format(dateFormat) } <br /> \n                </Table.Col>\n                <Table.Col>\n                  <span title={ node.name }>{ node.name.trunc(36) }</span> <br />\n                  <small className=\"text-muted\">\n                    { node.organizationLocation.name }\n                  </small>\n                </Table.Col>\n                <Table.Col>\n                  {\n                    (node.teacher) ? node.teacher.fullName.trunc(30) : \"\"\n                  }\n                </Table.Col>\n                <Table.Col>\n                  <BadgeBoolean value={node.displayShop} />\n                </Table.Col>\n                {/* <Table.Col>\n                  { node.scheduleItem.organizationLocationRoom.organizationLocation.name } <br />\n                  <span className=\"text-muted\">\n                    { node.scheduleItem.organizationLocationRoom.name }\n                  </span> \n                </Table.Col> */}\n                <Table.Col className=\"text-right\" key={v4()}>\n                  {(node.archived) ? \n                    <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n                    <Button className='btn-sm' \n                            onClick={() => history.push(\"/schedule/events/edit/\" + node.id)}\n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  }\n                </Table.Col>\n                <Table.Col>\n                  <ScheduleEventArchive node={node} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </ContentCard>\n    </ScheduleEventsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEvents))\n\n\n// const ScheduleEvents = ({ t, history, archived=false }) => (\n//   <SiteWrapper>\n//     <div className=\"my-3 my-md-5\">\n//       <Container>\n//         <Page.Header title={t(\"organization.title\")} />\n//         <Grid.Row>\n//           <Grid.Col md={9}>\n//             <Query query={GET_LEVELS_QUERY} variables={{ archived }}>\n//              {({ loading, error, data: {organizationLevels: levels}, refetch, fetchMore }) => {\n//                 // Loading\n//                 if (loading) return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}>\n//                     <Dimmer active={true}\n//                             loader={true}>\n//                     </Dimmer>\n//                   </ContentCard>\n//                 )\n//                 // Error\n//                 if (error) return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}>\n//                     <p>{t('organization.levels.error_loading')}</p>\n//                   </ContentCard>\n//                 )\n//                 const headerOptions = <Card.Options>\n//                   <Button color={(!archived) ? 'primary': 'secondary'}  \n//                           size=\"sm\"\n//                           onClick={() => {archived=false; refetch({archived});}}>\n//                     {t('general.current')}\n//                   </Button>\n//                   <Button color={(archived) ? 'primary': 'secondary'} \n//                           size=\"sm\" \n//                           className=\"ml-2\" \n//                           onClick={() => {archived=true; refetch({archived});}}>\n//                     {t('general.archive')}\n//                   </Button>\n//                 </Card.Options>\n                \n//                 // Empty list\n//                 if (!levels.edges.length) { return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}\n//                                headerContent={headerOptions}>\n//                     <p>\n//                     {(!archived) ? t('organization.levels.empty_list') : t(\"organization.levels.empty_archive\")}\n//                     </p>\n                   \n//                   </ContentCard>\n//                 )} else {   \n//                 // Life's good! :)\n//                 return (\n//                   <ContentCard cardTitle={t('organization.levels.title')}\n//                                headerContent={headerOptions}\n//                                pageInfo={levels.pageInfo}\n//                                onLoadMore={() => {\n//                                 fetchMore({\n//                                   variables: {\n//                                     after: levels.pageInfo.endCursor\n//                                   },\n//                                   updateQuery: (previousResult, { fetchMoreResult }) => {\n//                                     const newEdges = fetchMoreResult.organizationLevels.edges\n//                                     const pageInfo = fetchMoreResult.organizationLevels.pageInfo\n\n//                                     return newEdges.length\n//                                       ? {\n//                                           // Put the new levels at the end of the list and update `pageInfo`\n//                                           // so we have the new `endCursor` and `hasNextPage` values\n//                                           organizationLevels: {\n//                                             __typename: previousResult.organizationLevels.__typename,\n//                                             edges: [ ...previousResult.organizationLevels.edges, ...newEdges ],\n//                                             pageInfo\n//                                           }\n//                                         }\n//                                       : previousResult\n//                                   }\n//                                 })\n//                               }} >\n//                     <Table>\n//                           <Table.Header>\n//                             <Table.Row key={v4()}>\n//                               <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n//                             </Table.Row>\n//                           </Table.Header>\n//                           <Table.Body>\n//                               {levels.edges.map(({ node }) => (\n//                                 <Table.Row key={v4()}>\n//                                   <Table.Col key={v4()}>\n//                                     {node.name}\n//                                   </Table.Col>\n//                                   <Table.Col className=\"text-right\" key={v4()}>\n//                                     {(node.archived) ? \n//                                       <span className='text-muted'>{t('general.unarchive_to_edit')}</span> :\n//                                       <Button className='btn-sm' \n//                                               onClick={() => history.push(\"/organization/levels/edit/\" + node.id)}\n//                                               color=\"secondary\">\n//                                         {t('general.edit')}\n//                                       </Button>\n//                                     }\n//                                   </Table.Col>\n//                                   <Mutation mutation={ARCHIVE_LEVEL} key={v4()}>\n//                                     {(archiveCostcenter, { data }) => (\n//                                       <Table.Col className=\"text-right\" key={v4()}>\n//                                         <button className=\"icon btn btn-link btn-sm\" \n//                                            title={t('general.archive')} \n//                                            href=\"\"\n//                                            onClick={() => {\n//                                              console.log(\"clicked archived\")\n//                                              let id = node.id\n//                                              archiveCostcenter({ variables: {\n//                                                input: {\n//                                                 id,\n//                                                 archived: !archived\n//                                                }\n//                                         }, refetchQueries: [\n//                                             {query: GET_LEVELS_QUERY, variables: {\"archived\": archived }}\n//                                         ]}).then(({ data }) => {\n//                                           console.log('got data', data);\n//                                           toast.success(\n//                                             (archived) ? t('general.unarchived'): t('general.archived'), {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                         }).catch((error) => {\n//                                           toast.error((t('general.toast_server_error')) +  error, {\n//                                               position: toast.POSITION.BOTTOM_RIGHT\n//                                             })\n//                                           console.log('there was an error sending the query', error);\n//                                         })\n//                                         }}>\n//                                           <Icon prefix=\"fa\" name=\"inbox\" />\n//                                         </button>\n//                                       </Table.Col>\n//                                     )}\n//                                   </Mutation>\n//                                 </Table.Row>\n//                               ))}\n//                           </Table.Body>\n//                         </Table>\n//                   </ContentCard>\n//                 )}}\n//              }\n//             </Query>\n//           </Grid.Col>\n//           <Grid.Col md={3}>\n//             <HasPermissionWrapper permission=\"add\"\n//                                   resource=\"organizationlevel\">\n//               <Button color=\"primary btn-block mb-6\"\n//                       onClick={() => history.push(\"/organization/levels/add\")}>\n//                 <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('organization.levels.add')}\n//               </Button>\n//             </HasPermissionWrapper>\n//             <OrganizationMenu activeLink='levels'/>\n//           </Grid.Col>\n//         </Grid.Row>\n//       </Container>\n//     </div>\n//   </SiteWrapper>\n// );\n\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_EDIT_SCHEMA = Yup.object().shape({\n  displayPublic: Yup.boolean(),\n  displayShop: Yup.boolean(),\n  autoSendInfoMail: Yup.boolean(),\n  organizationLocation: Yup.string()\n    .required(t('yup.field_required')),\n  organizationLevel: Yup.string(),\n  teacher: Yup.string(),\n  teacher2: Yup.string(),\n  name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  tagline: Yup.string(),\n  preview: Yup.string(),\n  description: Yup.string(),\n  infoMailContent: Yup.string()\n})\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from 'uuid'\nimport { Link } from 'react-router-dom'\n\nimport {\n    Button,\n    Card,\n    Form,\n    Grid\n  } from \"tabler-react\"\n  import { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\nconst ScheduleEventForm = ({ t, history, inputData, isSubmitting, setFieldValue, setFieldTouched, values, errors, returnUrl }) => (\n  <FoForm>\n    <Card.Body>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n                <Field \n                  className=\"custom-switch-input\"\n                  type=\"checkbox\" \n                  name=\"displayPublic\" \n                  checked={values.displayPublic} />\n                <span className=\"custom-switch-indicator\" ></span>\n                <span className=\"custom-switch-description\">{t('schedule.events.public')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n                <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"displayShop\" \n                checked={values.displayShop} />\n                <span className=\"custom-switch-indicator\" ></span>\n                <span className=\"custom-switch-description\">{t('schedule.events.shop')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"displayShop\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group>\n            <Form.Label className=\"custom-switch\">\n                <Field \n                className=\"custom-switch-input\"\n                type=\"checkbox\" \n                name=\"autoSendInfoMail\" \n                checked={values.autoSendInfoMail} />\n                <span className=\"custom-switch-indicator\" ></span>\n                <span className=\"custom-switch-description\">{t('schedule.events.auto_send_info_mail')}</span>\n            </Form.Label>\n            <ErrorMessage name=\"autoSendInfoMail\" component=\"div\" />   \n          </Form.Group>  \n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.location')}>\n            <Field component=\"select\" \n                  name=\"organizationLocation\" \n                  className={(errors.organizationLocation) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t(\"schedule.event.location_please_select\")}</option>\n              {inputData.organizationLocations.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"organizationLocation\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group> \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.level')}>\n            <Field component=\"select\" \n                  name=\"organizationLevel\" \n                  className={(errors.organizationLevel) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}></option>\n              {inputData.organizationLevels.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.name}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"organizationLevel\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group> \n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.teacher')}>\n            <Field component=\"select\" \n                  name=\"teacher\" \n                  className={(errors.teacher) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}>{t(\"schedule.event.teacher_please_select\")}</option>\n              {inputData.accounts.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.fullName}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"teacher\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group> \n        </Grid.Col>\n        <Grid.Col>\n          <Form.Group label={t('general.teacher2')}>\n            <Field component=\"select\" \n                  name=\"teacher2\" \n                  className={(errors.teacher2) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\">\n              <option value=\"\" key={v4()}></option>\n              {inputData.accounts.edges.map(({ node }) =>\n                <option value={node.id} key={v4()}>{node.fullName}</option>\n              )}\n            </Field>\n            <ErrorMessage name=\"teacher2\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group> \n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.name')}>\n            <Field type=\"text\" \n                    name=\"name\" \n                    className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.tagline')}>\n            <Field type=\"text\" \n                    name=\"tagline\" \n                    className={(errors.tagline) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n            <ErrorMessage name=\"tagline\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.preview')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"preview\"\n              initialValue={values.preview}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"preview\", e.target.getContent())\n                setFieldTouched(\"preview\", true, true)\n              }}\n              />\n            <ErrorMessage name=\"preview\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"description\"\n              initialValue={values.description}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"description\", e.target.getContent())\n                setFieldTouched(\"description\", true, true)\n              }}\n              />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col>\n          <Form.Group label={t('general.infoMailContent')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"infoMailContent\"\n              initialValue={values.infoMailContent}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"infoMailContent\", e.target.getContent())\n                setFieldTouched(\"infoMailContent\", true, true)\n              }}\n              />\n            <ErrorMessage name=\"infoMailContent\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Grid.Col>\n      </Grid.Row>\n    </Card.Body>\n    <Card.Footer>\n      <Button \n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('general.submit')}\n      </Button>\n      <Link to={returnUrl}>\n        <Button color=\"link\">\n          {t('general.cancel')}\n        </Button>\n      </Link>\n    </Card.Footer>\n  </FoForm>\n)\n  \n  \nexport default withTranslation()(withRouter(ScheduleEventForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Dimmer,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Form,\n} from \"tabler-react\"\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { get_list_query_variables } from \"./tools\"\n\n\nimport { GET_SCHEDULE_EVENTS_QUERY, GET_INPUT_VALUES_QUERY } from './queries'\nimport { SCHEDULE_EVENT_EDIT_SCHEMA } from './yupSchema'\nimport ScheduleEventForm from './ScheduleEventForm'\nimport ScheduleEventsBase from './ScheduleEventsBase'\nimport FormatISODateStr from '../../ui/ISODateString';\n\n\nconst CREATE_SCHEDULE_EVENT = gql`\n  mutation CreateScheduleEvent($input:CreateScheduleEventInput!) {\n    createScheduleEvent(input: $input) {\n      scheduleEvent{\n        id\n      }\n    }\n  }\n`\n\nconst return_url = \"/organization/events\"\n\nfunction ScheduleEventAdd({ t, history }) {\n  const returnUrl = \"/schedule/events\"\n  const sidebarContent = <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n\n  const { loading, error, data } = useQuery(GET_INPUT_VALUES_QUERY)\n  const [ createScheduleEvent ] = useMutation(CREATE_SCHEDULE_EVENT)\n\n  if (loading) {\n    return (\n      <ScheduleEventsBase sidebarContent={sidebarContent}>\n        <Card title={t(\"schedule.events.add\")}>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventsBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <ScheduleEventsBase sidebarContent={sidebarContent}>\n        <Card title={t(\"schedule.events.add\")}>\n          <Card.Body>\n            {t(\"schedule.events.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventsBase>\n    )\n  }\n\n  console.log(\"CREATE SCHEDULE EVENT INPUT DATA\")\n  console.log(data)\n  const inputData = data\n\n  return (\n    <ScheduleEventsBase sidebarContent={sidebarContent}>\n      <Card title={t(\"schedule.events.add\")}>\n        <Formik\n          initialValues={{ \n            displayPublic: true,\n            displayShop: true,\n            name: \"\",\n            description: \"\",\n          }}\n          validationSchema={SCHEDULE_EVENT_EDIT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              createScheduleEvent({ variables: {\n                input: {\n                  displayPublic: values.displayPublic,\n                  displayShop: values.displayShop,\n                  autoSentInfoMail: values.autoSentInfoMail,\n                  organizationLocation: values.organizationLocation,\n                  organizationLevel: values.organizationLevel,\n                  name: values.name,\n                  tagline: values.tagline,\n                  preview: values.preview,\n                  description: values.description,\n                  teacher: values.teacher,\n                  teacher2: values.teacher2,\n                  infoMailContent: values.infoMailContent,\n                }\n              }, refetchQueries: [\n                  { query: GET_SCHEDULE_EVENTS_QUERY, variables: get_list_query_variables() }\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  history.push(returnUrl)\n                  toast.success((t('schedule.events.toast_add_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <ScheduleEventForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              setFieldValue={setFieldValue}\n              setFieldTouched={setFieldTouched}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n            />\n          )}\n        </Formik>\n      </Card>\n    </ScheduleEventsBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventAdd))","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\n\n\nimport {\n  List\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nlet general_active\nlet tickets_active\nlet earlybirds_active\nlet activities_active\nlet media_active\n\nconst ScheduleEventMenu = ({ t, eventId, activeLink }) => (\n  <List.Group transparent={true}>\n    {(activeLink === 'general') ? general_active = true: general_active = false}\n    {(activeLink === 'tickets') ? tickets_active = true: tickets_active = false}\n    {(activeLink === 'earlybirds') ? earlybirds_active = true: earlybirds_active = false}\n    {(activeLink === 'activities') ? activities_active = true: activities_active = false}\n    {(activeLink === 'media') ? media_active = true: media_active = false}\n    \n\n    <HasPermissionWrapper \n        resource=\"scheduleevent\"\n        permission=\"change\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to={`#/schedule/events/edit/${eventId}`}\n          icon=\"edit-2\"\n          active={general_active}\n          >\n          {t('schedule.events.edit.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    <HasPermissionWrapper \n        resource=\"scheduleeventticket\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to={`#/schedule/events/edit/${eventId}/tickets`}\n          icon=\"clipboard\"\n          active={tickets_active}\n          >\n          {t('schedule.events.tickets.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    <HasPermissionWrapper \n        resource=\"scheduleeventearlybird\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to={`#/schedule/events/edit/${eventId}/earlybirds`}\n          icon=\"clock\"\n          active={earlybirds_active}\n          >\n          {t('schedule.events.earlybirds.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    <HasPermissionWrapper \n        resource=\"scheduleevent\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to={`#/schedule/events/edit/${eventId}/activities`}\n          icon=\"calendar\"\n          active={activities_active}\n          >\n          {t('schedule.events.activities.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n    <HasPermissionWrapper \n        resource=\"scheduleeventmedia\"\n        permission=\"view\" \n    >\n      <List.GroupItem\n          key={v4()}\n          className=\"d-flex align-items-center\"\n          to={`#/schedule/events/edit/${eventId}/media`}\n          icon=\"image\"\n          active={media_active}\n          >\n          {t('schedule.events.media.title')}\n      </List.GroupItem>\n    </HasPermissionWrapper>\n  </List.Group>\n);\n\nexport default withTranslation()(ScheduleEventMenu)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nconst ScheduleEventEditBack = ({ t }) => (\n  <div className=\"page-options d-flex\">\n    <Link to=\"/schedule/events\" \n          className='btn btn-link btn-sm mr-2'>\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back_to')} {t('schedule.events.title')}\n    </Link>\n  </div>\n)\n\nexport default withTranslation()(ScheduleEventEditBack)","// @flow\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container,\n  Grid\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport ScheduleEventEditMenu from \"./ScheduleEventEditMenu\"\nimport ScheduleEventEditBack from \"./ScheduleEventEditBack\"\n\n\nfunction ScheduleEventEditBaseBase({ t, match, history, children, pageHeaderOptions, sidebarContent=\"\", activeLink }) {\n  const eventId = match.params.event_id\n\n  return (\n      <SiteWrapper>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"schedule.events.title\")} >\n              <div className=\"page-options d-flex\">\n                {/* Page options can go here... */}\n                <ScheduleEventEditBack />\n                { pageHeaderOptions }\n              </div>\n            </Page.Header>\n            <Grid.Row>\n            <Grid.Col md={9}>\n              { children }\n            </Grid.Col>\n            <Grid.Col md={3}>\n              { sidebarContent }\n              <h5>{t(\"general.edit_menu\")}</h5>\n              <ScheduleEventEditMenu activeLink={activeLink} eventId={eventId}/>\n            </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n      </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventEditBaseBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\n// import ScheduleEventEditTabs from \"./ScheduleEventEditTabs\"\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventEditBaseBase from \"./ScheduleEventEditBaseBase\"\n\n\nfunction ScheduleEventEditBase({\n    t, \n    match, \n    history, \n    activeTab, \n    children, \n    activeLink, \n    cardTitle, \n    pageHeaderOptions,\n    sidebarContent, \n    returnUrl=\"/schedule/events\"}) \n  {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const eventId = match.params.event_id\n\n  // Set default card title\n  if (!cardTitle) {\n    cardTitle = t(\"schedule.events.edit.title\")\n  }\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  if (loading) {\n    return (\n      <ScheduleEventEditBaseBase pageHeaderOptions={pageHeaderOptions} sidebarContent={sidebarContent} activeLink={activeLink}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <ScheduleEventEditBaseBase pageHeaderOptions={pageHeaderOptions} sidebarContent={sidebarContent} activeLink={activeLink}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            {t(\"schedule.events.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  const event = data.scheduleEvent\n  const dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\n  const cardSubTitle = (event) ? \n  <span className=\"text-muted\">\n    - {event.name + \" \" + dateStart}\n  </span> : \"\"\n\n  return (\n    <ScheduleEventEditBaseBase cardTitle={cardTitle} pageHeaderOptions={pageHeaderOptions} sidebarContent={sidebarContent} activeLink={activeLink}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle} {cardSubTitle}</Card.Title>\n        </Card.Header>\n        {children}\n      </Card>\n    </ScheduleEventEditBaseBase>\n    )\n  }\n\nexport default withTranslation()(withRouter(ScheduleEventEditBase))","// @flow\n\nimport React from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport { GET_SCHEDULE_EVENTS_QUERY, GET_SCHEDULE_EVENT_QUERY } from '../queries'\nimport { SCHEDULE_EVENT_EDIT_SCHEMA } from '../yupSchema'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventEditBase from \"./ScheduleEventEditBase\"\nimport ScheduleEventForm from \"../ScheduleEventForm\"\nimport { get_list_query_variables } from \"../tools\"\n\n\nconst UPDATE_SCHEDULE_EVENT = gql`\n  mutation UpdateScheduleEvent($input: UpdateScheduleEventInput!) {\n    updateScheduleEvent(input: $input) {\n      scheduleEvent {\n        id\n        name\n      }\n    }\n  }\n`\n\nfunction ScheduleEventEdit({t, match, history}) {\n  const id = match.params.event_id\n  const returnUrl = \"/schedule/events\"\n  const activeLink = \"general\"\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: id }\n  })\n  const [ updateScheduleEvent ] = useMutation(UPDATE_SCHEDULE_EVENT)\n\n\n  if (loading) {\n    return (\n      <ScheduleEventEditBase activeLink={activeLink}>\n        <Card.Body>\n          <Dimmer loading={true} active={true} />\n        </Card.Body>\n      </ScheduleEventEditBase>\n    )\n  }\n\n  if (error) {\n    return (\n      <ScheduleEventEditBase activeLink={activeLink}>\n        <Card.Body>\n          {t(\"schedule.events.error_loading\")}\n        </Card.Body>\n      </ScheduleEventEditBase>\n    )\n  }\n\n  const initialData = data.scheduleEvent\n  const inputData = data\n\n  let initialOrgranizationlevel = \"\"\n  if (initialData.organizationLevel) {\n    initialOrgranizationlevel = initialData.organizationLevel.id\n  }\n\n  let initialTeacher = \"\"\n  if (initialData.teacher) {\n    initialTeacher = initialData.teacher.id\n  }\n\n  let initialTeacher2 = \"\"\n  if (initialData.teacher2) {\n    initialTeacher2 = initialData.teacher2.id\n  }\n\n  return (\n    <ScheduleEventEditBase activeLink={activeLink}>\n        <Formik\n          initialValues={{ \n            displayPublic: initialData.displayPublic,\n            displayShop: initialData.displayShop,\n            autoSendInfoMail: initialData.autoSendInfoMail,\n            organizationLocation: initialData.organizationLocation.id,\n            organizationLevel: initialOrgranizationlevel,\n            name: initialData.name,\n            tagline: initialData.tagline,\n            preview: initialData.preview,\n            description: initialData.description,\n            teacher: initialTeacher,\n            teacher2: initialTeacher2,\n            infoMailContent: initialData.infoMailContent,\n          }}\n          validationSchema={SCHEDULE_EVENT_EDIT_SCHEMA}\n          onSubmit={(values, { setSubmitting }) => {\n              console.log('submit values:')\n              console.log(values)\n\n              let inputValues = {\n                id: id,\n                displayPublic: values.displayPublic,\n                displayShop: values.displayShop,\n                autoSendInfoMail: values.autoSendInfoMail,\n                organizationLocation: values.organizationLocation,\n                organizationLevel: values.organizationLevel,\n                name: values.name,\n                tagline: values.tagline,\n                preview: values.preview,\n                description: values.description,\n                infoMailContent: values.infoMailContent,\n              }\n\n              if (values.teacher) {\n                inputValues['teacher'] = values.teacher\n              }\n\n              if (values.teacher2) {\n                inputValues['teacher2'] = values.teacher2\n              }\n\n              updateScheduleEvent({ variables: {\n                input: inputValues\n              }, refetchQueries: [\n                  { query: GET_SCHEDULE_EVENTS_QUERY, variables: get_list_query_variables() }\n              ]})\n              .then(({ data }) => {\n                  console.log('got data', data)\n                  toast.success((t('schedule.events.toast_edit_success')), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  setSubmitting(false)\n                }).catch((error) => {\n                  toast.error((t('general.toast_server_error')) +  error, {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  console.log('there was an error sending the query', error)\n                  setSubmitting(false)\n                })\n          }}\n          >\n          {({ isSubmitting, setFieldValue, setFieldTouched, errors, values }) => (\n            <ScheduleEventForm\n              inputData={inputData}\n              isSubmitting={isSubmitting}\n              setFieldValue={setFieldValue}\n              setFieldTouched={setFieldTouched}\n              errors={errors}\n              values={values}\n              returnUrl={returnUrl}\n            />\n          )}\n        </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_EVENT_ACTIVITIES_QUERY = gql`\nquery ScheduleItem($before:String, $after:String, $scheduleEvent:ID!) {\n  scheduleItems(first:100, before:$before, after:$after, scheduleEvent:$scheduleEvent) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        displayPublic\n        scheduleEvent {\n          id\n          name\n        }\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        name\n        spaces\n        countAttendance\n        dateStart\n        timeStart\n        timeEnd\n        account {\n          id\n          fullName\n        }\n        account2 {\n          id\n          fullName\n        }\n      }\n    }\n  }\n}\n`\n\n\nexport const GET_SCHEDULE_EVENT_ACTIVITY_QUERY = gql`\nquery ScheduleEventActivity($before:String, $after:String, $id:ID!) {\n  scheduleItem(id: $id) {\n    id\n    displayPublic\n    name\n    spaces\n    dateStart\n    timeStart\n    timeEnd\n    organizationLocationRoom {\n      id\n      name\n      organizationLocation {\n        id\n        name\n      }\n    }\n    account {\n      id\n      fullName\n    }\n    account2 {\n      id\n      fullName\n    }\n  }\n  accounts(first: 100, before: $before, after: $after, isActive:true, teacher: true) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        fullName\n      }\n    }\n  }\n  organizationLocationRooms(first: 100, before: $before, after: $after, archived: false) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        id\n        name\n        organizationLocation {\n          id \n          name\n        }\n      }\n    }\n  }\n}\n`\n\n\nexport const DELETE_SCHEDULE_EVENT_ACTIVITY = gql`\n  mutation DeleteScheduleItem($input: DeleteScheduleItemInput!) {\n    deleteScheduleItem(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleEventActivityInputValues($after: String, $before: String) {\n    accounts(first: 100, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ContentCard from \"../../../general/ContentCard\"\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventEditBaseBase from \"./ScheduleEventEditBaseBase\"\n\n\nfunction ScheduleEventEditListBase({t, match, history, activeTab, pageInfo, onLoadMore, activeLink, children, sidebarContent=\"\"}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.edit.title\")\n\n  const eventId = match.params.event_id\n  const returnUrl = \"/schedule/events\"\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n\nif (loading) {\n  return (\n    <ScheduleEventEditBaseBase sidebarContent={sidebarContent} activeLink={activeLink}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <Dimmer loading={true} active={true} />\n        </Card.Body>\n      </Card>\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nif (error) {\n  return (\n    <ScheduleEventEditBaseBase sidebarContent={sidebarContent} activeLink={activeLink}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          {t(\"schedule.events.error_loading\")}\n        </Card.Body>\n      </Card>\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nconst event = data.scheduleEvent\nconst dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\nconst cardSubTitle = (event) ? \n<span className=\"text-muted\">\n  - {event.name + \" \" + dateStart}\n</span> : \"\"\n\nreturn (\n  <ScheduleEventEditBaseBase sidebarContent={sidebarContent} activeLink={activeLink}>\n    <ContentCard \n      cardTitle={<span>{cardTitle} {cardSubTitle}</span>}\n      pageInfo={pageInfo}\n      onLoadMore={onLoadMore}\n    >\n      {children}\n    </ContentCard>\n  </ScheduleEventEditBaseBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventEditListBase))","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_SCHEDULE_EVENT_ACTIVITY, GET_SCHEDULE_EVENT_ACTIVITIES_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventActivityDelete({t, match, history, id}) {\n  const eventId = match.params.event_id\n  const [deleteScheduleEventActivity, { data }] = useMutation(DELETE_SCHEDULE_EVENT_ACTIVITY)\n  const query_vars = {\n    scheduleEvent: eventId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.events.activities.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.events.activities.delete_success'),\n          deleteFunction: deleteScheduleEventActivity,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventActivityDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../ui/ButtonAddSecondaryMenu'\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\n\nimport { GET_SCHEDULE_EVENT_ACTIVITIES_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport ScheduleEventEditListBase from \"../edit/ScheduleEventEditListBase\"\n// import ScheduleEventTicketListBase from \"./ScheduleEventTicketListBase\"\nimport ScheduleEventActivityDelete from \"./ScheduleEventActivityDelete\"\nimport moment from 'moment';\n\n\nfunction ScheduleItems({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  console.log(appSettings)\n  \n  const eventId = match.params.event_id\n  const activeLink = \"activities\"\n\n  const sidebarContent = <Link to={`/schedule/events/edit/${eventId}/activities/add`}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.events.activities.add')}\n    </Button>\n  </Link>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, {\n    variables: {\n      scheduleEvent: eventId\n    }\n  })\n  \n  if (loading) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditListBase>\n  )\n  if (error) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const scheduleItems = data.scheduleItems\n  const pageInfo = data.scheduleItems.pageInfo\n\n  // Empty list\n  if (!scheduleItems.edges.length) { return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('schedule.events.tickets.empty_list')}</p>\n    </ScheduleEventEditListBase>\n  )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: scheduleItems.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.scheduleItems.edges\n        const pageInfo = fetchMoreResult.scheduleItems.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              scheduleItems: {\n                __typename: previousResult.scheduleItems.__typename,\n                edges: [ ...previousResult.scheduleItems.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <ScheduleEventEditListBase activeLink={activeLink} pageInfo={pageInfo} onLoadMore={onLoadMore} sidebarContent={sidebarContent}>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.teacher')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.filled')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {scheduleItems.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {moment(node.dateStart).format(dateFormat)} <br />\n                  {/* Start & end time */}\n                  <small className=\"text-muted\">\n                    {moment(node.dateStart + ' ' + node.timeStart).format(timeFormat)} {' - '}\n                    {moment(node.dateStart + ' ' + node.timeEnd).format(timeFormat)} { ' ' }\n                  </small>\n                </Table.Col>\n                <Table.Col>\n                  {node.name} <br />\n                  <div dangerouslySetInnerHTML={{__html: node.description}} className=\"text-muted\"/>\n                </Table.Col>\n                <Table.Col>\n                  {node.organizationLocationRoom.organizationLocation.name} <br />\n                  <small className=\"text-muted\">{node.organizationLocationRoom.name}</small>\n                </Table.Col>\n                <Table.Col>\n                  {node.account && node.account.fullName} \n                  {(node.account2) ? <span className=\"text-muted\"><br />{node.account2.fullName}</span> : \"\"}\n                </Table.Col>\n                <Table.Col>\n                  {node.countAttendance}/{node.spaces}\n                </Table.Col>\n                <Table.Col>\n                  <BadgeBoolean value={node.displayPublic} />\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/schedule/events/edit/${eventId}/activities/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <ScheduleEventActivityDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </ScheduleEventEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleItems))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_ACTIVITY_SCHEMA = Yup.object().shape({\n  displayPublic: Yup.boolean(),\n  name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  spaces: Yup.number()\n    .required(t('yup.field_required')),\n  organizationLocationRoom: Yup.string()\n    .required(t('yup.field_required')),\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  timeStart: Yup.date()\n    .typeError(t('yup.time_required'))\n    .required(t('yup.field_required')),\n  timeEnd: Yup.date()\n    .typeError(t('yup.time_required'))\n    .required(t('yup.field_required')), \n  account: Yup.string(),\n  account2: Yup.string(),\n})","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventActivityBack({ t, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/activities`\n\n  return (\n    <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventActivityBack))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\nimport CSTimePicker from \"../../../ui/CSTimePicker\"\n\nfunction ScheduleEventActivityForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                    className=\"custom-switch-input\"\n                    type=\"checkbox\" \n                    name=\"displayPublic\" \n                    checked={values.displayPublic} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('schedule.events.activities.public')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.name')}>\n              <Field type=\"text\" \n                      name=\"name\" \n                      className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.location')}>\n              <Field component=\"select\" \n                    name=\"organizationLocationRoom\" \n                    className={(errors.organizationLocationRoom) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}>{t(\"general.please_select\")}</option>\n                {inputData.organizationLocationRooms.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.organizationLocation.name} - {node.name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"organizationLocationRoom\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.spaces')}>\n                <Field type=\"text\" \n                    name=\"spaces\" \n                    className={(errors.spaces) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n                <ErrorMessage name=\"spaces\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateStart\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n           <Form.Group label={t('general.time_start')}>\n              <CSTimePicker \n                className={(errors.timeStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeStart}\n                onChange={(date) => setFieldValue(\"timeStart\", date)}\n                onBlur={() => setFieldTouched(\"timeStart\", true)}\n                clearable={false}\n              />\n              {/* {errors.timeStart}\n              {errors.timeStart && touched.timeStart ? (\n                <span className=\"invalid-feedback\">{errors.timeStart} - hacky thingy</span>\n              ) : null} */}\n              <ErrorMessage name=\"timeStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n           <Form.Group label={t('general.time_end')}>\n              <CSTimePicker \n                className={(errors.timeEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.timeEnd}\n                onChange={(date) => setFieldValue(\"timeEnd\", date)}\n                onBlur={() => setFieldTouched(\"timeEnd\", true)}\n                clearable={false}\n              />\n              <ErrorMessage name=\"timeEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher')}>\n              <Field component=\"select\" \n                      name=\"account\" \n                      className={(errors.account) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in schedule class teacher add:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.teacher2')}>\n              <Field component=\"select\" \n                      name=\"account2\" \n                      className={(errors.account2) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.accounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.fullName}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"account2\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventActivityForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { dateToLocalISO, dateToLocalISOTime } from '../../../../tools/date_tools'\n\nimport { GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, GET_INPUT_VALUES_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_ACTIVITY_SCHEMA } from './yupSchema'\n\nimport ScheduleEventActivityBack from \"./ScheduleEventActivityBack\"\nimport ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventActivityForm from \"./ScheduleEventActivityForm\"\n\n\nconst ADD_SCHEDULE_EVENT_ACTIVITY = gql`\n  mutation CreateScheduleItem($input:CreateScheduleItemInput!) {\n    createScheduleItem(input: $input) {\n      scheduleItem {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventActivityAdd({ t, history, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/activities/`\n  const activeLink = 'activities'\n  const cardTitle = t(\"schedule.events.activities.add\")\n\n  const [addScheduleEventTicket] = useMutation(ADD_SCHEDULE_EVENT_ACTIVITY, {\n    onCompleted: () => history.push(returnUrl),\n  })\n  const { loading, error, data, fetchMore } = useQuery(GET_INPUT_VALUES_QUERY)\n\n  const sidebarContent = <ScheduleEventActivityBack />\n\n  if (loading) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditBase>\n  )\n  if (error) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditBase>\n  )\n\n  const inputData = data\n  console.log(inputData)\n\n  return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          displayPublic: true,\n          name: '',\n          spaces: '',\n          organizationLocationRoom: '',\n          dateStart: new Date(),\n          timeStart: '',\n          timeEnd: '',\n          account: '',\n          account2: ''\n        }}\n        validationSchema={SCHEDULE_EVENT_ACTIVITY_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addScheduleEventTicket({ variables: {\n            input: {\n              scheduleEvent: eventId,\n              frequencyType: \"SPECIFIC\",\n              frequencyInterval: 0,\n              scheduleItemType: \"EVENT_ACTIVITY\",\n              displayPublic: values.displayPublic,\n              name: values.name,\n              spaces: values.spaces,\n              organizationLocationRoom: values.organizationLocationRoom,\n              account: values.account,\n              account2: values.account2,\n              dateStart: dateToLocalISO(values.dateStart),\n              timeStart: dateToLocalISOTime(values.timeStart),\n              timeEnd: dateToLocalISOTime(values.timeEnd),\n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, variables: {\n                scheduleEvent: eventId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('schedule.events.activities.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventActivityForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            inputData={inputData}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventActivityAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport CardTabs from \"../../../ui/CardTabs\"\n\nfunction ScheduleEventActivityTabs({ t, active, eventId, scheduleItemId}) {\n  return (\n    <CardTabs \n      position=\"top\"\n      tabs={[\n          {\n            name: \"general\", \n            title: t(\"schedule.events.tickets.edit_menu.general\"), \n            link: `/schedule/events/edit/${eventId}/activities/edit/${scheduleItemId}`\n          },\n          {\n            name: \"attendance\", \n            title: t(\"schedule.events.tickets.edit_menu.attendance\"), \n            link: `/schedule/events/edit/${eventId}/activities/edit/${scheduleItemId}/attendance`\n          },\n      ]}\n      active={active}\n    />\n  )\n}\n\nexport default withTranslation()(ScheduleEventActivityTabs)\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport { GET_SCHEDULE_EVENT_ACTIVITY_QUERY } from './queries'\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventActivityBack from \"./ScheduleEventActivityBack\"\nimport ScheduleEventEditBaseBase from \"../edit/ScheduleEventEditBaseBase\"\nimport ScheduleEventActivityTabs from \"./ScheduleEventActivityTabs\"\n\n\nfunction ScheduleEventActivityEditBase({t, match, history, activeTab, children}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.activities.edit\")\n  const activeLink = \"activities\"\n\n  const eventId = match.params.event_id\n  const scheduleItemId = match.params.id\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  const { loading: loadingActivity, error: errorActivity, data: dataActivity } = useQuery(GET_SCHEDULE_EVENT_ACTIVITY_QUERY, {\n    variables: {\n      id: scheduleItemId\n    }\n  })\n\n  const sidebarContent = <ScheduleEventActivityBack />\n\n  if (loading || loadingActivity) {\n    return (\n      <ScheduleEventEditBaseBase sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  if (error || errorActivity) {\n    return (\n      <ScheduleEventEditBaseBase sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n          <Card.Body>\n            {t(\"schedule.events.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  const event = data.scheduleEvent\n  const scheduleItem = dataActivity.scheduleItem\n  const dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\n  const cardSubTitle = (scheduleItem) ? \n  <span className=\"text-muted\">\n    - {event.name + \" \" + dateStart}\n  </span> : \"\"\n\n  const cardActivitySubtitle = (scheduleItem) ?\n  <span className=\"text-muted\">\n    - {scheduleItem.name}\n  </span> : \"\"\n\n  return (\n    <ScheduleEventEditBaseBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle} {cardSubTitle} {cardActivitySubtitle}</Card.Title>\n        </Card.Header>\n        <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n        {children}\n      </Card>\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventActivityEditBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { dateToLocalISO, dateToLocalISOTime, TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n\nimport { GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, GET_SCHEDULE_EVENT_ACTIVITY_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_ACTIVITY_SCHEMA } from './yupSchema'\n\nimport ScheduleEventActivityBack from \"./ScheduleEventActivityBack\"\nimport ScheduleEventActivityEditBase from \"./ScheduleEventActivityEditBase\"\n// import ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventActivityForm from \"./ScheduleEventActivityForm\"\n\n\nconst UPDATE_SCHEDULE_EVENT_ACTIVITY = gql`\n  mutation UpdateScheduleItem($input:UpdateScheduleItemInput!) {\n    updateScheduleItem(input: $input) {\n      scheduleItem {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventActivityEdit({ t, history, match }) {\n  const eventId = match.params.event_id\n  const scheduleItemId = match.params.id\n  const returnUrl = `/schedule/events/edit/${eventId}/activities/`\n  const activeTab = 'general'\n  const cardTitle = t(\"schedule.events.activities.edit\")\n\n  const [updateScheduleEventTicket] = useMutation(UPDATE_SCHEDULE_EVENT_ACTIVITY)\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_ACTIVITY_QUERY, {\n    variables: {\n      id: scheduleItemId\n  }})\n\n  const sidebarContent = <ScheduleEventActivityBack />\n\n  if (loading) return (\n    <ScheduleEventActivityEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventActivityEditBase>\n  )\n  if (error) return (\n    <ScheduleEventActivityEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventActivityEditBase>\n  )\n\n  const inputData = data\n  const scheduleItem = data.scheduleItem\n  console.log(inputData)\n\n  let initialTimeStart = null\n  if (scheduleItem.timeStart) {\n    initialTimeStart = TimeStringToJSDateOBJ(scheduleItem.timeStart)\n  }\n  let initialTimeEnd = null\n  if (scheduleItem.timeEnd) {\n    initialTimeEnd = TimeStringToJSDateOBJ(scheduleItem.timeEnd)\n  }\n\n\n  return (\n    <ScheduleEventActivityEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          displayPublic: scheduleItem.displayPublic,\n          name: scheduleItem.name,\n          spaces: scheduleItem.spaces,\n          organizationLocationRoom: scheduleItem.organizationLocationRoom.id,\n          dateStart: scheduleItem.dateStart,\n          timeStart: initialTimeStart,\n          timeEnd: initialTimeEnd,\n          account: (scheduleItem.account) ? scheduleItem.account.id : '',\n          account2: (scheduleItem.account2) ? scheduleItem.account2.id : ''\n        }}\n        validationSchema={SCHEDULE_EVENT_ACTIVITY_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateScheduleEventTicket({ variables: {\n            input: {\n              id: scheduleItemId,\n              displayPublic: values.displayPublic,\n              name: values.name,\n              spaces: values.spaces,\n              organizationLocationRoom: values.organizationLocationRoom,\n              account: values.account,\n              account2: values.account2,\n              dateStart: dateToLocalISO(values.dateStart),\n              timeStart: dateToLocalISOTime(values.timeStart),\n              timeEnd: dateToLocalISOTime(values.timeEnd),\n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_ACTIVITIES_QUERY, variables: {\n                scheduleEvent: eventId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('schedule.events.activities.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventActivityForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            inputData={inputData}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventActivityEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventActivityEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_ITEM_ATTENDANCES_QUERY = gql`\nquery ScheduleItemAttendances($before:String, $after:String, $schedule_item:ID!) {\n  scheduleItemAttendances(first: 100, before: $before, after: $after, scheduleItem:$schedule_item) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        bookingStatus\n        account {\n          id\n          fullName\n        }\n        accountScheduleEventTicket {\n          id\n          scheduleEventTicket {\n            name\n          }\n          cancelled\n        }\n      }\n    }\n  }\n}\n`\n\n// export const GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM_QUERY = gql`\n// query ScheduleEventTicket($before:String, $after:String, $id:ID!) {\n//   scheduleEventTicket(id: $id) {\n//     id\n//     displayPublic\n//     name\n//     description\n//     price\n//     financeTaxRate {\n//       id\n//       name\n//     }\n//     financeGlaccount {\n//       id\n//       name\n//     }\n//     financeCostcenter {\n//       id\n//       name\n//     }\n//   }\n//   financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n//   financeGlaccounts(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n//   financeCostcenters(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n// }\n// `\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../../context/AppSettingsContext'\nimport ContentCard from \"../../../../general/ContentCard\"\n\nimport { GET_SCHEDULE_EVENT_ACTIVITY_QUERY } from '../queries'\nimport { GET_SCHEDULE_EVENT_QUERY } from '../../queries'\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\n\nimport ScheduleEventActivityBack from \"../ScheduleEventActivityBack\"\nimport ScheduleEventEditBaseBase from \"../../edit/ScheduleEventEditBaseBase\"\nimport ScheduleEventActivityTabs from \"../ScheduleEventActivityTabs\"\n\n\nfunction ScheduleEventActivityAttendanceBase({t, match, history, activeTab, onLoadMore, pageInfo, children}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.activities.edit\")\n  const activeLink = \"activities\"\n\n  const eventId = match.params.event_id\n  const scheduleItemId = match.params.id\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  const { loading: loadingActivity, error: errorActivity, data: dataActivity } = useQuery(GET_SCHEDULE_EVENT_ACTIVITY_QUERY, {\n    variables: {\n      id: scheduleItemId\n    }\n  })\n\n  const sidebarContent = <ScheduleEventActivityBack />\n\n  if (loading || loadingActivity) {\n    return (\n      <ScheduleEventEditBaseBase  activeLink={activeLink} sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  if (error || errorActivity) {\n    return (\n      <ScheduleEventEditBaseBase activeLink={activeLink} sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n          <Card.Body>\n            {t(\"schedule.event.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  const event = data.scheduleEvent\n  const scheduleItem = dataActivity.scheduleItem\n  const dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\n  const cardSubTitle = (scheduleItem) ? \n  <span className=\"text-muted\">\n    - {event.name + \" \" + dateStart}\n  </span> : \"\"\n\n  const cardActivitySubtitle = (scheduleItem) ?\n  <span className=\"text-muted\">\n    - {scheduleItem.name}\n  </span> : \"\"\n\n  return (\n    <ScheduleEventEditBaseBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <ContentCard \n        cardTitle={<span>{cardTitle} {cardSubTitle} {cardActivitySubtitle}</span>}\n        cardTabs={<ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>}\n        pageInfo={pageInfo}\n        onLoadMore={onLoadMore}\n      >\n        \n        {children}\n      </ContentCard>\n      {/* <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle} {cardSubTitle} {cardActivitySubtitle}</Card.Title>\n        </Card.Header>\n        <ScheduleEventActivityTabs active={activeTab} eventId={eventId} scheduleItemId={scheduleItemId}/>\n        {children}\n      </Card> */}\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventActivityAttendanceBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\n\nimport {\n  Table\n} from \"tabler-react\"\n\n// import { dateToLocalISO, dateToLocalISOTime, TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n\nimport { GET_SCHEDULE_ITEM_ATTENDANCES_QUERY } from \"./queries\"\n// import { SCHEDULE_EVENT_ACTIVITY_SCHEMA } from './yupSchema'\n\nimport ScheduleEventActivityBack from \"../ScheduleEventActivityBack\"\nimport ScheduleEventActivityAttendanceBase from \"./ScheduleEventActivityAttendanceBase\"\n// import ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\n// import ScheduleEventActivityForm from \"./ScheduleEventActivityForm\"\nimport BadgeBookingStatus from \"../../../../ui/BadgeBookingStatus\"\n\n\nfunction ScheduleEventActivityAttendance({ t, history, match }) {\n  const eventId = match.params.event_id\n  const scheduleItemId = match.params.id\n  const returnUrl = `/schedule/events/edit/${eventId}/activities/`\n  const activeTab = 'attendance'\n  const cardTitle = t(\"schedule.events.activities.edit\")\n  const activeLink = \"activities\"\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_ITEM_ATTENDANCES_QUERY, {\n    variables: {\n      schedule_item: scheduleItemId\n    },\n    fetchPolicy: \"network-only\"\n  })\n\n  const sidebarContent = <ScheduleEventActivityBack />\n\n  if (loading) return (\n    <ScheduleEventActivityAttendanceBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventActivityAttendanceBase>\n  )\n  if (error) return (\n    <ScheduleEventActivityAttendanceBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventActivityAttendanceBase>\n  )\n\n  const scheduleItemAttendances = data.scheduleItemAttendances\n  console.log(data)\n  const pageInfo = scheduleItemAttendances.pageInfo\n\n  // Empty list\n  if (!scheduleItemAttendances.edges.length) { return (\n    <ScheduleEventActivityAttendanceBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('schedule.events.activities.attendance.empty_list')}</p>\n    </ScheduleEventActivityAttendanceBase>\n  )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: scheduleItemAttendances.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.scheduleItemAttendances.edges\n        const pageInfo = fetchMoreResult.scheduleItemAttendances.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new attendance items at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              scheduleItemAttendances: {\n                __typename: previousResult.scheduleItemAttendances.__typename,\n                edges: [ ...previousResult.scheduleItemAttendances.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <ScheduleEventActivityAttendanceBase \n      // sidebarContent={sidebarContent} \n      // cardTitle={cardTitle} \n      activeTab={activeTab} \n      pageInfo={pageInfo}\n      onLoadMore={onLoadMore}\n    >\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.booking_status')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {scheduleItemAttendances.edges.map(({ node }) => (\n            <Table.Row key={v4()}>\n              <Table.Col>\n                {node.account.fullName}\n              </Table.Col>\n              <Table.Col>\n                <BadgeBookingStatus status={node.bookingStatus} />\n              </Table.Col>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </ScheduleEventActivityAttendanceBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventActivityAttendance))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY = gql`\n  query ScheduleEventEarlybirds($before:String, $after:String, $scheduleEvent:ID!) {\n    scheduleEventEarlybirds(first: 100, before:$before, after:$after, scheduleEvent:$scheduleEvent) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          scheduleEvent {\n            id\n          }\n          discountPercentage\n          dateStart\n          dateEnd\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_SCHEDULE_EVENT_EARLYBIRD_QUERY = gql`\n  query ScheduleEventEarlybird($id:ID!) {\n    scheduleEventEarlybird(id: $id) {\n      id\n      discountPercentage\n      dateStart\n      dateEnd\n    }\n  }\n`\n\n\nexport const ADD_SCHEDULE_EVENT_EARLYBIRD = gql`\n  mutation CreateScheduleEventEarlybird($input:CreateScheduleEventEarlybirdInput!) {\n    createScheduleEventEarlybird(input: $input) {\n      scheduleEventEarlybird {\n        id\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_SCHEDULE_EVENT_EARLYBIRD = gql`\n  mutation UpdateScheduleEventEarlybird($input:UpdateScheduleEventEarlybirdInput!) {\n    updateScheduleEventEarlybird(input: $input) {\n      scheduleEventEarlybird {\n        id\n      }\n    }\n  }\n`\n\n\nexport const DELETE_SCHEDULE_EVENT_EARLYBIRD   = gql`\n  mutation DeleteScheduleEventEarlybird($input: DeleteScheduleEventEarlybirdInput!) {\n    deleteScheduleEventEarlybird(input: $input) {\n      ok\n    }\n  }\n`\n","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_SCHEDULE_EVENT_EARLYBIRD, GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventEarlybirdDelete({t, match, history, id}) {\n  const eventId = match.params.event_id\n  const [deleteScheduleEventEarlybird, { data }] = useMutation(DELETE_SCHEDULE_EVENT_EARLYBIRD)\n  const query_vars = {\n    scheduleEvent: eventId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.events.earlybirds.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.events.earlybirds.delete_success'),\n          deleteFunction: deleteScheduleEventEarlybird,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventEarlybirdDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../ui/ButtonAddSecondaryMenu'\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\n\nimport { GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY } from './queries'\n\nimport {\n  Avatar,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport ScheduleEventEditListBase from \"../edit/ScheduleEventEditListBase\"\n// import ScheduleEventTicketListBase from \"./ScheduleEventTicketListBase\"\nimport ScheduleEventEarlybirdDelete from \"./ScheduleEventEarlybirdDelete\"\nimport moment from 'moment';\n\n\nfunction ScheduleEventEarlybirds({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  console.log(appSettings)\n  \n  const eventId = match.params.event_id\n  const activeLink = \"earlybirds\"\n\n  const sidebarContent = <Link to={`/schedule/events/edit/${eventId}/earlybirds/add`}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.events.earlybirds.add')}\n    </Button>\n  </Link>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY, {\n    variables: {\n      scheduleEvent: eventId\n    }\n  })\n  \n  if (loading) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditListBase>\n  )\n  if (error) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const scheduleEventEarlybirds = data.scheduleEventEarlybirds\n  const pageInfo = data.scheduleEventEarlybirds.pageInfo\n\n  // Empty list\n  if (!scheduleEventEarlybirds.edges.length) { return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('schedule.events.earlybirds.empty_list')}</p>\n    </ScheduleEventEditListBase>\n  )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: scheduleEventEarlybirds.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.scheduleEventEarlybirds.edges\n        const pageInfo = fetchMoreResult.scheduleEventEarlybirds.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              scheduleEventEarlybirds: {\n                __typename: previousResult.scheduleEventEarlybirds.__typename,\n                edges: [ ...previousResult.scheduleEventEarlybirds.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <ScheduleEventEditListBase activeLink={activeLink} pageInfo={pageInfo} onLoadMore={onLoadMore} sidebarContent={sidebarContent}>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n            <Table.ColHeader>{t('schedule.events.earlybirds.discountPercentage')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {scheduleEventEarlybirds.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {moment(node.dateStart).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  {moment(node.dateEnd).format(dateFormat)}\n                </Table.Col>\n                <Table.Col>\n                  {node.discountPercentage} %\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/schedule/events/edit/${eventId}/earlybirds/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <ScheduleEventEarlybirdDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </ScheduleEventEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventEarlybirds))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_EARLYBIRDS_SCHEMA = Yup.object().shape({\n  dateStart: Yup.date()\n    .required(t('yup.field_required')),\n  dateEnd: Yup.date()\n    .required(t('yup.field_required')),\n  discountPercentage: Yup.number()\n  .required(t('yup.field_required')),\n})","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventEarlybirdsBack({ t, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/earlybirds`\n\n  return (\n    <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventEarlybirdsBack))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\nfunction ScheduleEventMediaForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  returnUrl,\n  setFieldTouched,\n  setFieldValue,\n})   \n{\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.date_start')}>\n              <CSDatePicker \n                className={(errors.dateStart) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateStart}\n                onChange={(date) => {\n                  setFieldValue(\"dateStart\", date)\n                  setFieldTouched(\"dateStart\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateStart\", true)}\n              />\n              <ErrorMessage name=\"dateStart\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.date_end')}>\n              <CSDatePicker \n                className={(errors.dateEnd) ? \"form-control is-invalid\" : \"form-control\"} \n                selected={values.dateEnd}\n                onChange={(date) => {\n                  setFieldValue(\"dateEnd\", date)\n                  setFieldTouched(\"dateEnd\", true)\n                }}\n                onBlur={() => setFieldTouched(\"dateEnd\", true)}\n              />\n              <ErrorMessage name=\"dateEnd\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('schedule.events.earlybirds.discountPercentage')}>\n              <Field type=\"text\" \n                    name=\"discountPercentage\" \n                    className={(errors.discountPercentage) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"discountPercentage\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\" role=\"button\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventMediaForm))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { ADD_SCHEDULE_EVENT_EARLYBIRD, GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_EARLYBIRDS_SCHEMA } from './yupSchema'\n\nimport ScheduleEventEarlybirdBack from \"./ScheduleEventEarlybirdsBack\"\nimport ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventEarlybirdForm from \"./ScheduleEventEarlybirdForm\"\n\n\nfunction ScheduleEventEarlybirdAdd({ t, history, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/earlybirds/`\n  const activeLink = 'earlybirds'\n  const cardTitle = t(\"schedule.events.earlybirds.add\")\n\n  const [addScheduleEventEarlybird] = useMutation(ADD_SCHEDULE_EVENT_EARLYBIRD)\n\n  const sidebarContent = <ScheduleEventEarlybirdBack />\n\n  return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          dateStart: new Date(),\n          dateEnd: \"\",\n          discountPercentage: 0,\n        }}\n        validationSchema={SCHEDULE_EVENT_EARLYBIRDS_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"Submit values\")\n          console.log(values)\n\n          addScheduleEventEarlybird({ variables: {\n            input: {\n              scheduleEvent: eventId,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              discountPercentage: values.discountPercentage   \n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY, variables: {scheduleEvent: eventId}}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              history.push(returnUrl)\n              toast.success((t('schedule.events.earlybirds.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n      >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventEarlybirdForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventEarlybirdAdd))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { \n  GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY, \n  GET_SCHEDULE_EVENT_EARLYBIRD_QUERY,\n  UPDATE_SCHEDULE_EVENT_EARLYBIRD\n } from \"./queries\"\nimport { SCHEDULE_EVENT_EARLYBIRDS_SCHEMA } from './yupSchema'\n\nimport ScheduleEventEarlybirdBack from \"./ScheduleEventEarlybirdsBack\"\nimport ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventEarlybirdForm from \"./ScheduleEventEarlybirdForm\"\n\n\nfunction ScheduleEventEarlybirdEdit({ t, history, match }) {\n  const eventId = match.params.event_id\n  const scheduleEventEarlybirdId = match.params.id\n  const returnUrl = `/schedule/events/edit/${eventId}/earlybirds/`\n  const activeTab = 'general'\n  const cardTitle = t(\"schedule.events.earlybirds.edit\")\n\n  const [updateScheduleEventEarlybird] = useMutation(UPDATE_SCHEDULE_EVENT_EARLYBIRD)\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_EARLYBIRD_QUERY, {\n    variables: {\n      id: scheduleEventEarlybirdId\n  }})\n\n  const sidebarContent = <ScheduleEventEarlybirdBack />\n\n  if (loading) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditBase>\n  )\n  if (error) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditBase>\n  )\n\n  const inputData = data\n  const scheduleEventEarlybird = data.scheduleEventEarlybird\n  console.log(inputData)\n\n  return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          dateStart: scheduleEventEarlybird.dateStart,\n          dateEnd: scheduleEventEarlybird.dateEnd,\n          discountPercentage: scheduleEventEarlybird.discountPercentage\n        }}\n        validationSchema={SCHEDULE_EVENT_EARLYBIRDS_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"Submit values\")\n          console.log(values)\n\n          updateScheduleEventEarlybird({ variables: {\n            input: {\n              id: scheduleEventEarlybirdId,\n              dateStart: dateToLocalISO(values.dateStart),\n              dateEnd: dateToLocalISO(values.dateEnd),\n              discountPercentage: values.discountPercentage   \n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_EARLYBIRDS_QUERY, variables: {scheduleEvent: eventId}}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              history.push(returnUrl)\n              toast.success((t('schedule.events.earlybirds.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventEarlybirdForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventEarlybirdEdit))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_EVENT_MEDIAS_QUERY = gql`\n  query ScheduleEventMedias($before:String, $after:String, $scheduleEvent:ID!) {\n    scheduleEventMedias(first: 100, before:$before, after:$after, scheduleEvent:$scheduleEvent) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          scheduleEvent {\n            id\n          }\n          sortOrder\n          description\n          urlImage\n          urlImageThumbnailSmall\n          image\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_SCHEDULE_EVENT_MEDIA_QUERY = gql`\n  query ScheduleEventMedia($id:ID!) {\n    scheduleEventMedia(id: $id) {\n      id\n      sortOrder\n      description\n      image\n    }\n  }\n`\n\n\nexport const DELETE_SCHEDULE_EVENT_MEDIA   = gql`\n  mutation DeleteScheduleEventMedia($input: DeleteScheduleEventMediaInput!) {\n    deleteScheduleEventMedia(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleEventActivityInputValues($after: String, $before: String) {\n    accounts(first: 100, before: $before, after: $after, isActive: true, teacher: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          fullName\n        }\n      }\n    }\n    organizationLocationRooms(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_SCHEDULE_EVENT_MEDIA, GET_SCHEDULE_EVENT_MEDIAS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventMediaDelete({t, match, history, id}) {\n  const eventId = match.params.event_id\n  const [deleteScheduleEventMedia, { data }] = useMutation(DELETE_SCHEDULE_EVENT_MEDIA)\n  const query_vars = {\n    scheduleEvent: eventId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.events.media.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.events.media.delete_success'),\n          deleteFunction: deleteScheduleEventMedia,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_EVENT_MEDIAS_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventMediaDelete))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../ui/ButtonAddSecondaryMenu'\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\n\nimport { GET_SCHEDULE_EVENT_MEDIAS_QUERY } from './queries'\n\nimport {\n  Avatar,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport ScheduleEventEditListBase from \"../edit/ScheduleEventEditListBase\"\n// import ScheduleEventTicketListBase from \"./ScheduleEventTicketListBase\"\nimport ScheduleEventMediaDelete from \"./ScheduleEventMediaDelete\"\nimport moment from 'moment';\n\n\nfunction ScheduleEventMedia({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  console.log(appSettings)\n  \n  const eventId = match.params.event_id\n  const activeLink = \"media\"\n\n  const sidebarContent = <Link to={`/schedule/events/edit/${eventId}/media/add`}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.events.media.add')}\n    </Button>\n  </Link>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_MEDIAS_QUERY, {\n    variables: {\n      scheduleEvent: eventId\n    }\n  })\n  \n  if (loading) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditListBase>\n  )\n  if (error) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const scheduleEventMedias = data.scheduleEventMedias\n  const pageInfo = data.scheduleEventMedias.pageInfo\n\n  // Empty list\n  if (!scheduleEventMedias.edges.length) { return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('schedule.events.media.empty_list')}</p>\n    </ScheduleEventEditListBase>\n  )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: scheduleEventMedias.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.scheduleEventMedias.edges\n        const pageInfo = fetchMoreResult.scheduleEventMedias.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              scheduleEventMedias: {\n                __typename: previousResult.scheduleEventMedias.__typename,\n                edges: [ ...previousResult.scheduleEventMedias.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <ScheduleEventEditListBase activeLink={activeLink} pageInfo={pageInfo} onLoadMore={onLoadMore} sidebarContent={sidebarContent}>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader></Table.ColHeader> \n            <Table.ColHeader>{t('general.description')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.sort_order')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {scheduleEventMedias.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  <Avatar size=\"lg\" imageURL={node.urlImageThumbnailSmall} />\n                </Table.Col>\n                <Table.Col>\n                  {node.description}\n                </Table.Col>\n                <Table.Col>\n                  {node.sortOrder}\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <Link to={`/schedule/events/edit/${eventId}/media/edit/${node.id}`}>\n                    <Button className='btn-sm' \n                            color=\"secondary\">\n                      {t('general.edit')}\n                    </Button>\n                  </Link>\n                </Table.Col>\n                <Table.Col className=\"text-right\">\n                  <ScheduleEventMediaDelete id={node.id} />\n                </Table.Col>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </ScheduleEventEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventMedia))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_MEDIA_SCHEMA = Yup.object().shape({\n  description: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  sortOrder: Yup.number(),\n})","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventMediaBack({ t, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/media`\n\n  return (\n    <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventMediaBack))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\n\nimport { customFileInputLabelStyle } from \"../../../../tools/custom_file_input_label_style\"\n\nfunction ScheduleEventMediaForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  returnUrl,\n  inputFileName, \n  fileInputLabel, \n  handleFileInputChange=f=>f\n})   \n{\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.description')}>\n              <Field type=\"text\" \n                      name=\"description\" \n                      className={(errors.description) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.sort_order')}>\n              <Field type=\"text\" \n                    name=\"sortOrder\" \n                    className={(errors.sortOrder) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n              <ErrorMessage name=\"sortOrder\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.custom_file_input_label')}>\n              <div className=\"custom-file\">\n                <input type=\"file\" ref={inputFileName} className=\"custom-file-input\" onChange={handleFileInputChange} />\n                <label className=\"custom-file-label\" style={customFileInputLabelStyle}>\n                  {fileInputLabel}\n                </label>\n              </div>\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\" role=\"button\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventMediaForm))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { GET_SCHEDULE_EVENT_MEDIAS_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_MEDIA_SCHEMA } from './yupSchema'\n\nimport ScheduleEventMediaBack from \"./ScheduleEventMediaBack\"\nimport ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventMediaForm from \"./ScheduleEventMediaForm\"\n\n\nconst ADD_SCHEDULE_EVENT_MEDIA = gql`\n  mutation CreateScheduleEventMedia($input:CreateScheduleEventMediaInput!) {\n    createScheduleEventMedia(input: $input) {\n      scheduleEventMedia {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventMediaAdd({ t, history, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/media/`\n  const activeLink = 'media'\n  const cardTitle = t(\"schedule.events.media.add\")\n\n  const [addScheduleEventMedia] = useMutation(ADD_SCHEDULE_EVENT_MEDIA, {\n    onCompleted: () => history.push(returnUrl),\n  })\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n\n  const sidebarContent = <ScheduleEventMediaBack />\n\n  return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          description: \"\",\n          sortOrder: 0,\n        }}\n        validationSchema={SCHEDULE_EVENT_MEDIA_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"Submit values\")\n          console.log(values)\n          console.log(fileName)\n\n          let inputVars = {\n            scheduleEvent: eventId,\n            description: values.description,\n            sortOrder: values.sortOrder,\n            imageFileName: fileName,\n          }\n\n          let reader = new FileReader()\n          reader.onload = function(reader_event) {\n            console.log(reader_event.target.result)\n            let b64_enc_file = reader_event.target.result\n            console.log(b64_enc_file)\n            // Add uploaded document b64 encoded blob to input vars\n            inputVars.image = b64_enc_file\n\n            addScheduleEventMedia({ variables: {\n              input: inputVars\n            }, refetchQueries: [\n                {query: GET_SCHEDULE_EVENT_MEDIAS_QUERY, variables: {scheduleEvent: eventId}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('schedule.events.media.toast_add_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                  setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n          \n          let file = inputFileName.current.files[0]\n          if (file && file.size < 5242880) {\n            reader.readAsDataURL(file)\n          } else if (file && file.size > 5242880) { \n            toast.error(t(\"error_messages.selected_file_exceeds_max_filesize\"), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n            setSubmitting(false)\n          } else {\n            toast.error(t(\"general.please_select_a_file\"), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n            setSubmitting(false)\n          }\n        }}\n      >\n        {({ isSubmitting, errors, values }) => (\n          <ScheduleEventMediaForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            inputFileName={inputFileName}\n            fileInputLabel={fileInputLabel}\n            handleFileInputChange={handleFileInputChange}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventMediaAdd))","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport { GET_SCHEDULE_EVENT_MEDIA_QUERY } from './queries'\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventMediaBack from \"./ScheduleEventMediaBack\"\nimport ScheduleEventEditBaseBase from \"../edit/ScheduleEventEditBaseBase\"\n\n\nfunction ScheduleEventMediaEditBase({t, match, history, activeTab, children}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.media.edit\")\n  const activeLink = \"media\"\n\n  const eventId = match.params.event_id\n  const scheduleEventMediaId = match.params.id\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  const { loading: loadingMedia, error: errorMedia, data: dataMedia } = useQuery(GET_SCHEDULE_EVENT_MEDIA_QUERY, {\n    variables: {\n      id: scheduleEventMediaId\n    }\n  })\n\n  const sidebarContent = <ScheduleEventMediaBack />\n\n  if (loading || loadingMedia) {\n    return (\n      <ScheduleEventEditBaseBase sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  if (error || errorMedia) {\n    return (\n      <ScheduleEventEditBaseBase sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <Card.Body>\n            {t(\"schedule.events.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  const event = data.scheduleEvent\n  const scheduleEventMedia = dataMedia.scheduleEventMedia\n  const dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\n  const cardSubTitle = (scheduleEventMedia) ? \n  <span className=\"text-muted\">\n    - {event.name + \" \" + dateStart}\n  </span> : \"\"\n\n  const cardActivitySubtitle = (scheduleEventMedia) ?\n  <span className=\"text-muted\">\n    - {scheduleEventMedia.description}\n  </span> : \"\"\n\n  return (\n    <ScheduleEventEditBaseBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle} {cardSubTitle} {cardActivitySubtitle}</Card.Title>\n        </Card.Header>\n        {children}\n      </Card>\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventMediaEditBase))","// @flow\n\nimport React, { useState, useRef } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { GET_SCHEDULE_EVENT_MEDIAS_QUERY, GET_SCHEDULE_EVENT_MEDIA_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_MEDIA_SCHEMA } from './yupSchema'\n\nimport ScheduleEventMediaBack from \"./ScheduleEventMediaBack\"\nimport ScheduleEventMediaEditBase from \"./ScheduleEventMediaEditBase\"\nimport ScheduleEventMediaForm from \"./ScheduleEventMediaForm\"\n\n\nconst UPDATE_SCHEDULE_EVENT_MEDIA = gql`\n  mutation UpdateScheduleEventMedia($input:UpdateScheduleEventMediaInput!) {\n    updateScheduleEventMedia(input: $input) {\n      scheduleEventMedia {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventMediaEdit({ t, history, match }) {\n  const eventId = match.params.event_id\n  const scheduleEventMediaId = match.params.id\n  const returnUrl = `/schedule/events/edit/${eventId}/media/`\n  const activeTab = 'general'\n  const cardTitle = t(\"schedule.events.media.edit\")\n\n  const [updateScheduleEventMedia] = useMutation(UPDATE_SCHEDULE_EVENT_MEDIA)\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_MEDIA_QUERY, {\n    variables: {\n      id: scheduleEventMediaId\n  }})\n\n  const sidebarContent = <ScheduleEventMediaBack />\n\n  // Vars for document file input field start\n  const [fileName, setFileName] = useState(\"\")\n  const inputFileName = useRef(null)\n  const fileInputLabel = fileName || t(\"general.custom_file_input_inner_label\")\n\n  const handleFileInputChange = (event) => {\n    console.log('on change triggered')\n    setFileName(event.target.files[0].name)\n  }\n\n  if (loading) return (\n    <ScheduleEventMediaEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventMediaEditBase>\n  )\n  if (error) return (\n    <ScheduleEventMediaEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventMediaEditBase>\n  )\n\n  const inputData = data\n  const scheduleEventMedia = data.scheduleEventMedia\n  console.log(inputData)\n\n  return (\n    <ScheduleEventMediaEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeTab={activeTab} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          description: scheduleEventMedia.description,\n          sortOrder: scheduleEventMedia.sortOrder\n        }}\n        validationSchema={SCHEDULE_EVENT_MEDIA_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"Submit values\")\n          console.log(values)\n          console.log(fileName)\n\n          let inputVars = {\n            id: scheduleEventMediaId,\n            description: values.description,\n            sortOrder: values.sortOrder\n          }\n\n          function updateMedia() {\n            updateScheduleEventMedia({ variables: {\n              input: inputVars\n            }, refetchQueries: [\n                {query: GET_SCHEDULE_EVENT_MEDIAS_QUERY, variables: {scheduleEvent: eventId}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data);\n                toast.success((t('schedule.events.media.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                  setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n\n          let reader = new FileReader()\n          reader.onload = function(reader_event) {\n            console.log(reader_event.target.result)\n            let b64_enc_file = reader_event.target.result\n            console.log(b64_enc_file)\n            // Add uploaded document b64 encoded blob to input vars\n            inputVars.image = b64_enc_file\n            inputVars.imageFileName = fileName\n\n            updateMedia()\n          }\n          \n          let file = inputFileName.current.files[0]\n          if (file && file.size < 5242880) {\n            reader.readAsDataURL(file)\n          } else if (file && file.size > 5242880) { \n            toast.error(t(\"error_messages.selected_file_exceeds_max_filesize\"), {\n              position: toast.POSITION.BOTTOM_RIGHT\n            })\n            setSubmitting(false)\n          } else {\n            updateMedia()\n          }\n        }}\n        >\n        {({ isSubmitting, errors, values }) => (\n          <ScheduleEventMediaForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n            values={values}\n            inputFileName={inputFileName}\n            fileInputLabel={fileInputLabel}\n            handleFileInputChange={handleFileInputChange}\n            returnUrl={returnUrl}\n          />\n        )}\n      </Formik>\n    </ScheduleEventMediaEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventMediaEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_EVENT_TICKETS_QUERY = gql`\n  query ScheduleEventTickets($before:String, $after:String, $scheduleEvent:ID!) {\n    scheduleEventTickets(first: 100, before:$before, after:$after, scheduleEvent:$scheduleEvent) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          scheduleEvent {\n            id\n          }\n          fullEvent\n          deletable\n          displayPublic\n          name\n          description\n          price\n          priceDisplay\n          isSoldOut\n          financeTaxRate {\n            id\n            name\n          }\n          financeGlaccount {\n            id\n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const GET_SCHEDULE_EVENT_TICKET_QUERY = gql`\n  query ScheduleEventTicket($before:String, $after:String, $id:ID!) {\n    scheduleEventTicket(id: $id) {\n      id\n      displayPublic\n      name\n      description\n      price\n      financeTaxRate {\n        id\n        name\n      }\n      financeGlaccount {\n        id\n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    financeGlaccounts(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    financeCostcenters(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const DELETE_SCHEDULE_EVENT_TICKET = gql`\n  mutation DeleteScheduleEventTicket($input: DeleteScheduleEventTicketInput!) {\n    deleteScheduleEventTicket(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const GET_INPUT_VALUES_QUERY = gql`\n  query ScheduleEventTicketInputValues($after: String, $before: String) {\n    financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    financeGlaccounts(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    financeCostcenters(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventEditListBase from \"../edit/ScheduleEventEditListBase\"\n\n\nfunction ScheduleEventTicketListBase({t, match, history, activeTab, pageInfo, onLoadMore, children}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.edit.title\")\n  const activeLink = \"tickets\"\n\n  const eventId = match.params.event_id\n  const returnUrl = \"/schedule/events\"\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  const sidebarContent = <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n\nif (loading) {\n  return (\n    <ScheduleEventEditListBase sidebarContent={sidebarContent} activeLink={activeLink}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          <Dimmer loading={true} active={true} />\n        </Card.Body>\n      </Card>\n    </ScheduleEventEditListBase>\n  )\n}\n\nif (error) {\n  return (\n    <ScheduleEventEditListBase sidebarContent={sidebarContent} activeLink={activeLink}>\n      <Card title={cardTitle}>\n        <Card.Body>\n          {t(\"schedule.events.error_loading\")}\n        </Card.Body>\n      </Card>\n    </ScheduleEventEditListBase>\n  )\n}\n\nconst event = data.scheduleEvent\nconst dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\nconst cardSubTitle = (event) ? \n<span className=\"text-muted\">\n  - {event.name + \" \" + dateStart}\n</span> : \"\"\n\nreturn (\n  <ScheduleEventEditListBase sidebarContent={sidebarContent} activeLink={activeLink}>\n    <ContentCard \n      cardTitle={<span>{cardTitle} {cardSubTitle}</span>}\n      pageInfo={pageInfo}\n      onLoadMore={onLoadMore}\n    >\n      {children}\n    </ContentCard>\n  </ScheduleEventEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventTicketListBase))","import React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { DELETE_SCHEDULE_EVENT_TICKET, GET_SCHEDULE_EVENT_TICKETS_QUERY } from \"./queries\"\nimport confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport {\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventTicketDelete({t, match, history, id}) {\n  const eventId = match.params.event_id\n  const [deleteScheduleEventTicket, { data }] = useMutation(DELETE_SCHEDULE_EVENT_TICKET)\n  const query_vars = {\n    scheduleEvent: eventId\n  }\n\n  return (\n    <button className=\"icon btn btn-link btn-sm mb-3 pull-right\" \n      title={t('general.delete')} \n      onClick={() => {\n        confirm_delete({\n          t: t,\n          msgConfirm: t(\"schedule.events.tickets.delete_confirm_msg\"),\n          msgDescription: <p></p>,\n          msgSuccess: t('schedule.events.tickets.delete_success'),\n          deleteFunction: deleteScheduleEventTicket,\n          functionVariables: { \n            variables: {\n              input: {\n                id: id\n              },\n            }, \n            refetchQueries: [\n              { query: GET_SCHEDULE_EVENT_TICKETS_QUERY, variables: query_vars },\n            ]\n          }\n        })\n    }}>\n      <Icon prefix=\"fe\" name=\"trash-2\" />\n    </button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketDelete))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\n\nimport {\n  Badge\n} from \"tabler-react\"\n\n\nfunction BadgeSoldOut({ t }) {\n  return <Badge color=\"warning\">{t('general.sold_out')}</Badge> \n}\n\nexport default withTranslation()(BadgeSoldOut)","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport ButtonAddSecondaryMenu from '../../../ui/ButtonAddSecondaryMenu'\nimport BadgeBoolean from \"../../../ui/BadgeBoolean\"\n\nimport { GET_SCHEDULE_EVENT_TICKETS_QUERY } from './queries'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n  Table,\n} from \"tabler-react\";\n// import HasPermissionWrapper from \"../../../../HasPermissionWrapper\"\nimport ScheduleEventEditListBase from \"../edit/ScheduleEventEditListBase\"\nimport ScheduleEventTicketListBase from \"./ScheduleEventTicketListBase\"\nimport ScheduleEventTicketDelete from \"./ScheduleEventTicketDelete\"\nimport moment from 'moment';\nimport BadgeSoldOut from '../../../ui/BadgeSoldOut';\n\n\nfunction ScheduleEventTickets({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  console.log(appSettings)\n  \n  const eventId = match.params.event_id\n  const activeLink = \"tickets\"\n\n  const sidebarContent = <Link to={`/schedule/events/edit/${eventId}/tickets/add`}>\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"plus-circle\" /> {t('schedule.events.tickets.add')}\n    </Button>\n  </Link>\n\n  const { loading, error, data, fetchMore } = useQuery(GET_SCHEDULE_EVENT_TICKETS_QUERY, {\n    variables: {\n      scheduleEvent: eventId\n    }\n  })\n  \n  if (loading) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditListBase>\n  )\n  if (error) return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditListBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n\n  const scheduleEventTickets = data.scheduleEventTickets\n  const pageInfo = data.scheduleEventTickets.pageInfo\n\n  // Empty list\n  if (!scheduleEventTickets.edges.length) { return (\n    <ScheduleEventEditListBase activeLink={activeLink} sidebarContent={sidebarContent}>\n      <p>{t('schedule.events.tickets.empty_list')}</p>\n    </ScheduleEventEditListBase>\n  )}\n\n  const onLoadMore = () => {\n    fetchMore({\n      variables: {\n        after: scheduleEventTickets.pageInfo.endCursor\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const newEdges = fetchMoreResult.scheduleEventTickets.edges\n        const pageInfo = fetchMoreResult.scheduleEventTickets.pageInfo\n\n        return newEdges.length\n          ? {\n              // Put the new invoices at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              scheduleEventTickets: {\n                __typename: previousResult.scheduleEventTickets.__typename,\n                edges: [ ...previousResult.scheduleEventTickets.edges, ...newEdges ],\n                pageInfo\n              }\n            }\n          : previousResult\n      }\n    })\n  }\n\n  return (\n    <ScheduleEventEditListBase activeLink={activeLink} pageInfo={pageInfo} onLoadMore={onLoadMore} sidebarContent={sidebarContent}>\n      <Table>\n        <Table.Header>\n          <Table.Row key={v4()}>\n            <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.public')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.glaccount')}</Table.ColHeader>\n            <Table.ColHeader>{t('general.costcenter')}</Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n            <Table.ColHeader></Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {scheduleEventTickets.edges.map(({ node }) => (\n            <Table.Row key={v4()}>\n              {/* <Table.Col>\n                {moment(node.dateStart).format(dateFormat)}\n              </Table.Col>\n              <Table.Col>\n                {moment(node.dateEnd).format(dateFormat)}\n              </Table.Col> */}\n              <Table.Col>\n                {node.name} <br />\n                <div dangerouslySetInnerHTML={{__html: node.description}} className=\"text-muted\"/>\n              </Table.Col>\n              <Table.Col>\n                {node.priceDisplay} <br />\n                {(node.isSoldOut) ? <BadgeSoldOut /> : \"\"}\n              </Table.Col>\n              <Table.Col>\n                <BadgeBoolean value={node.displayPublic} />\n              </Table.Col>\n              <Table.Col>\n                {(node.financeGlaccount) ? node.financeGlaccount.name : \"\"}\n              </Table.Col>\n              <Table.Col>\n                {(node.financeCostcenter) ? node.financeCostcenter.name : \"\"}\n              </Table.Col>\n              <Table.Col className=\"text-right\">\n                <Link to={`/schedule/events/edit/${eventId}/tickets/edit/${node.id}`}>\n                  <Button className='btn-sm' \n                          color=\"secondary\">\n                    {t('general.edit')}\n                  </Button>\n                </Link>\n              </Table.Col>\n              <Table.Col className=\"text-right\">\n                {/* Check for fullEvent / deletable before showing delete button */}\n                {(node.deletable) ? <ScheduleEventTicketDelete id={node.id} /> : \"\"}\n              </Table.Col>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </ScheduleEventEditListBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventTickets))\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_TICKET_SCHEMA = Yup.object().shape({\n  displayPublic: Yup.boolean(),\n  name: Yup.string()\n      .min(3, t('yup.min_len_3'))\n      .required(t('yup.field_required')),\n  description: Yup.string(),\n  price: Yup.number(),\n  financeTaxRate: Yup.string(),\n  financeGlaccount: Yup.string(),\n  financeCostcenter: Yup.string(),\n})","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nfunction ScheduleEventTicketBack({ t, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/tickets`\n\n  return (\n    <Link to={returnUrl}>\n      <Button color=\"primary btn-block mb-6\">\n        <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n      </Button>\n    </Link>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketBack))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../../plugin_config/tinymce\"\n// import CSDatePicker from \"../../../../../ui/CSDatePicker\"\n\nfunction ScheduleEventTicketForm ({ \n  t, \n  history, \n  match, \n  isSubmitting, \n  errors, \n  values, \n  inputData, \n  returnUrl, \n  setFieldTouched, \n  setFieldValue, \n  formTitle=\"create\" })   \n{\n\n  return (\n    <FoForm>\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group>\n              <Form.Label className=\"custom-switch\">\n                  <Field \n                    className=\"custom-switch-input\"\n                    type=\"checkbox\" \n                    name=\"displayPublic\" \n                    checked={values.displayPublic} />\n                  <span className=\"custom-switch-indicator\" ></span>\n                  <span className=\"custom-switch-description\">{t('schedule.events.tickets.public')}</span>\n              </Form.Label>\n              <ErrorMessage name=\"displayPublic\" component=\"div\" />   \n            </Form.Group>  \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.name')}>\n              <Field type=\"text\" \n                      name=\"name\" \n                      className={(errors.name) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"name\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.price')}>\n                <Field type=\"text\" \n                    name=\"price\" \n                    className={(errors.price) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\" />\n                <ErrorMessage name=\"price\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.taxrate')}>\n              <Field component=\"select\" \n                      name=\"financeTaxRate\" \n                      className={(errors.financeTaxRate) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\">\n                {console.log(\"query data in subscription price add:\")}\n                {console.log(inputData)}\n                <option value=\"\" key={v4()}>{t('general.please_select')}</option>\n                {inputData.financeTaxRates.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.percentage}% {node.rateType})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeTaxRate\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n          <Form.Group label={t('general.description')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"description\"\n              initialValue={values.description}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"description\", e.target.getContent())\n                setFieldTouched(\"description\", true, true)\n              }}\n            />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.glaccount')}>\n              <Field component=\"select\" \n                    name=\"financeGlaccount\" \n                    className={(errors.financeGlaccount) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.financeGlaccounts.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeGlaccount\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.costcenter')}>\n              <Field component=\"select\" \n                    name=\"financeCostcenter\" \n                    className={(errors.financeCostcenter) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\" key={v4()}></option>\n                {inputData.financeCostcenters.edges.map(({ node }) =>\n                  <option value={node.id} key={v4()}>{node.name} ({node.code})</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"financeCostcenter\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Button color=\"link\" onClick={() => history.push(returnUrl)} role=\"button\">\n              {t('general.cancel')}\n          </Button>\n      </Card.Footer>\n    </FoForm>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventTicketForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\nimport { GET_SCHEDULE_EVENT_TICKETS_QUERY, GET_INPUT_VALUES_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_TICKET_SCHEMA } from './yupSchema'\n\nimport ScheduleEventTicketBack from \"./ScheduleEventTicketBack\"\nimport ScheduleEventEditBase from \"../edit/ScheduleEventEditBase\"\nimport ScheduleEventTicketForm from \"./ScheduleEventTicketForm\"\n\n\nconst ADD_SCHEDULE_EVENT_TICKET = gql`\n  mutation CreateScheduleEventTicket($input:CreateScheduleEventTicketInput!) {\n    createScheduleEventTicket(input: $input) {\n      scheduleEventTicket {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventTicketAdd({ t, history, match }) {\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/tickets/`\n  const activeLink = 'tickets'\n  const cardTitle = t(\"schedule.events.tickets.add\")\n\n  const [addScheduleEventTicket] = useMutation(ADD_SCHEDULE_EVENT_TICKET, {\n    onCompleted: () => history.push(returnUrl),\n  })\n  const { loading, error, data, fetchMore } = useQuery(GET_INPUT_VALUES_QUERY)\n\n  const sidebarContent = <ScheduleEventTicketBack />\n\n  if (loading) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventEditBase>\n  )\n  if (error) return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventEditBase>\n  )\n\n  const inputData = data\n\n  return (\n    <ScheduleEventEditBase \n      sidebarContent={sidebarContent} \n      cardTitle={cardTitle} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          displayPublic: true,\n          name: '',\n          description: '',\n        }}\n        validationSchema={SCHEDULE_EVENT_TICKET_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          addScheduleEventTicket({ variables: {\n            input: {\n              scheduleEvent: eventId,\n              displayPublic: values.displayPublic,\n              name: values.name,\n              description: values.description,\n              price: values.price,\n              financeTaxRate: values.financeTaxRate,\n              financeGlaccount: values.financeGlaccount,\n              financeCostcenter: values.financeCostcenter\n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n                scheduleEvent: eventId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('schedule.events.tickets.toast_add_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventTicketForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            errors={errors}\n            values={values}\n            inputData={inputData}\n            returnUrl={returnUrl}\n            formTitle=\"create\"\n          />\n        )}\n      </Formik>\n    </ScheduleEventEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketAdd))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport CardTabs from \"../../../ui/CardTabs\"\n\nfunction ScheduleEventTicketTabs({ t, active, eventId, ticketId}) {\n  return (\n    <CardTabs \n      position=\"top\"\n      tabs={[\n          {\n            name: \"general\", \n            title: t(\"schedule.events.tickets.edit_menu.general\"), \n            link: `/schedule/events/edit/${eventId}/tickets/edit/${ticketId}`\n          },\n          {\n            name: \"activities\", \n            title: t(\"schedule.events.tickets.edit_menu.activities\"), \n            link: `/schedule/events/edit/${eventId}/tickets/edit/${ticketId}/activities`\n          },\n          {\n            name: \"customers\", \n            title: t(\"schedule.events.tickets.edit_menu.customers\"), \n            link: `/schedule/events/edit/${eventId}/tickets/edit/${ticketId}/customers`\n          },\n      ]}\n      active={active}\n    />\n  )\n}\n\nexport default withTranslation()(ScheduleEventTicketTabs)\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport { GET_SCHEDULE_EVENT_TICKET_QUERY } from './queries'\nimport { GET_SCHEDULE_EVENT_QUERY } from '../queries'\nimport ScheduleEventTicketTabs from \"./ScheduleEventTicketTabs\"\n\nimport moment from 'moment'\n\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport ScheduleEventTicketBack from \"./ScheduleEventTicketBack\"\nimport ScheduleEventEditBaseBase from \"../edit/ScheduleEventEditBaseBase\"\n\n\nfunction ScheduleEventTicketEditBase({t, match, history, activeTab, children, pageHeaderOptions=\"\", searchResults=\"\"}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const cardTitle = t(\"schedule.events.tickets.edit\")\n  const activeLink = \"tickets\"\n\n  const eventId = match.params.event_id\n  const ticketId = match.params.id\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  const { loading: loadingTicket, error: errorTicket, data: dataTicket } = useQuery(GET_SCHEDULE_EVENT_TICKET_QUERY, {\n    variables: {\n      id: ticketId\n    }\n  })\n\n  const sidebarContent = <ScheduleEventTicketBack />\n\n  if (loading || loadingTicket) {\n    return (\n      <ScheduleEventEditBaseBase pageHeaderOptions={pageHeaderOptions} sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventTicketTabs active={activeTab} eventId={eventId}  ticketId={ticketId}/>\n          <Card.Body>\n            <Dimmer loading={true} active={true} />\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  if (error || errorTicket) {\n    return (\n      <ScheduleEventEditBaseBase pageHeaderOptions={pageHeaderOptions} sidebarContent={sidebarContent}>\n        <Card title={cardTitle}>\n          <ScheduleEventTicketTabs active={activeTab} eventId={eventId} ticketId={ticketId}/>\n          <Card.Body>\n            {t(\"schedule.events.error_loading\")}\n          </Card.Body>\n        </Card>\n      </ScheduleEventEditBaseBase>\n    )\n  }\n\n  const event = data.scheduleEvent\n  const ticket = dataTicket.scheduleEventTicket\n  const dateStart = (event.dateStart) ? moment(event.dateStart).format(dateFormat) : \"\"\n  const cardSubTitle = (event) ? \n  <span className=\"text-muted\">\n    - {event.name + \" \" + dateStart}\n  </span> : \"\"\n\n  const cardTicketSubtitle = (ticket) ?\n  <span className=\"text-muted\">\n    - {ticket.name}\n  </span> : \"\"\n\n  return (\n    <ScheduleEventEditBaseBase pageHeaderOptions={pageHeaderOptions} activeLink={activeLink} sidebarContent={sidebarContent}>\n      {searchResults}\n      <Card>\n        <Card.Header>\n          <Card.Title>{cardTitle} {cardSubTitle} {cardTicketSubtitle}</Card.Title>\n        </Card.Header>\n        <ScheduleEventTicketTabs active={activeTab} eventId={eventId} ticketId={ticketId}/>\n        {children}\n      </Card>\n    </ScheduleEventEditBaseBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ScheduleEventTicketEditBase))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SCHEDULE_EVENT_TICKETS_QUERY, GET_SCHEDULE_EVENT_TICKET_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_TICKET_SCHEMA } from './yupSchema'\n\nimport ScheduleEventTicketBack from \"./ScheduleEventTicketBack\"\nimport ScheduleEventTicketEditBase from \"./ScheduleEventTicketEditBase\"\nimport ScheduleEventTicketForm from \"./ScheduleEventTicketForm\"\n\n\nconst UPDATE_SCHEDULE_EVENT_TICKET = gql`\n  mutation UpdateScheduleEventTicket($input:UpdateScheduleEventTicketInput!) {\n    updateScheduleEventTicket(input: $input) {\n      scheduleEventTicket {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventTicketEdit({ t, history, match }) {\n  const id = match.params.id\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/tickets/`\n  const activeTab = \"general\"\n  const activeLink = 'tickets'\n  const sidebarContent = <ScheduleEventTicketBack />\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_TICKET_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n\n  const [updateScheduleEventTicket] = useMutation(UPDATE_SCHEDULE_EVENT_TICKET)\n\n  if (loading) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventTicketEditBase>\n  )\n  if (error) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventTicketEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const scheduleEventTicket = data.scheduleEventTicket\n\n\n  let initialFinanceTaxRate = \"\"\n  if (scheduleEventTicket.financeTaxRate) {\n    initialFinanceTaxRate = scheduleEventTicket.financeTaxRate.id\n  }\n\n  let initialFinanceGlaccount = \"\"\n  if (scheduleEventTicket.financeGlaccount) {\n    initialFinanceGlaccount = scheduleEventTicket.financeGlaccount.id\n  }\n\n  let initialFinanceCostcenter = \"\"\n  if (scheduleEventTicket.financeCostcenter) {\n    initialFinanceCostcenter = scheduleEventTicket.financeCostcenter.id\n  }\n\n\n  return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Formik\n        initialValues={{ \n          displayPublic: scheduleEventTicket.displayPublic,\n          name: scheduleEventTicket.name,\n          description: scheduleEventTicket.description,\n          price: scheduleEventTicket.price,\n          financeTaxRate: initialFinanceTaxRate,\n          financeGlaccount: initialFinanceGlaccount,\n          financeCostcenter: initialFinanceCostcenter\n        }}\n        validationSchema={SCHEDULE_EVENT_TICKET_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"submit values\")\n          console.log(values)\n\n          updateScheduleEventTicket({ variables: {\n            input: {\n              id: id,\n              displayPublic: values.displayPublic,\n              name: values.name,\n              description: values.description,\n              price: values.price,\n              financeTaxRate: values.financeTaxRate,\n              financeGlaccount: values.financeGlaccount,\n              financeCostcenter: values.financeCostcenter\n            }\n          }, refetchQueries: [\n              {query: GET_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n                scheduleEvent: eventId\n              }},\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data);\n              toast.success((t('schedule.events.tickets.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <ScheduleEventTicketForm\n            isSubmitting={isSubmitting}\n            setFieldTouched={setFieldTouched}\n            setFieldValue={setFieldValue}\n            inputData={inputData}\n            errors={errors}\n            values={values}\n            returnUrl={returnUrl}\n            formTitle=\"update\"\n          />\n        )}\n      </Formik>\n    </ScheduleEventTicketEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketEdit))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEMS_QUERY = gql`\nquery ScheduleEventTicketScheduleItem($before:String, $after:String, $scheduleEventTicket:ID!) {\n  scheduleEventTicketScheduleItems(first: 100, before: $before, after: $after, scheduleEventTicket:$scheduleEventTicket) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        scheduleEventTicket {\n          id\n          name\n          fullEvent\n        }\n        scheduleItem {\n          id\n          name\n        }\n        included\n      }\n    }\n  }\n}\n`\n\n// export const GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM_QUERY = gql`\n// query ScheduleEventTicket($before:String, $after:String, $id:ID!) {\n//   scheduleEventTicket(id: $id) {\n//     id\n//     displayPublic\n//     name\n//     description\n//     price\n//     financeTaxRate {\n//       id\n//       name\n//     }\n//     financeGlaccount {\n//       id\n//       name\n//     }\n//     financeCostcenter {\n//       id\n//       name\n//     }\n//   }\n//   financeTaxRates(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n//   financeGlaccounts(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n//   financeCostcenters(first: 100, before: $before, after: $after, archived: false) {\n//     pageInfo {\n//       startCursor\n//       endCursor\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//     edges {\n//       node {\n//         id\n//         name\n//       }\n//     }\n//   }\n// }\n// `\n\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SCHEDULE_EVENT_TICKET_SCHEDLE_ITEM_SCHEMA = Yup.object().shape({\n  included: Yup.boolean(),\n})","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\nimport {\n  Dimmer,\n  Grid,\n  Form,\n} from \"tabler-react\"\n\n\nconst ScheduleEventTicketEditActivityForm = ({ t, history, match, disabled, isSubmitting, setSubmitting, submitForm, errors, values, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n    <Dimmer active={isSubmitting} loader={isSubmitting} >\n      <Form.Group className='mb-0'>\n        <Form.Label className=\"custom-switch\">\n          <Field \n            className=\"custom-switch-input\"\n            type=\"checkbox\" \n            name=\"included\" \n            onChange={() => {\n              setFieldValue('included', !values.included)\n              setFieldTouched('included', true)\n              setSubmitting(true)\n              setTimeout(() => {submitForm()}, 200)\n            }}\n            checked={values.included} \n            disabled={disabled} \n          />\n          <span className=\"custom-switch-indicator\" ></span>\n          <span className=\"custom-switch-description\">{t('general.included')}</span>\n        </Form.Label>\n        <ErrorMessage name=\"included\" component=\"div\" />   \n      </Form.Group>  \n    </Dimmer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(ScheduleEventTicketEditActivityForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { v4 } from 'uuid'\n\nimport {\n  Card,\n  Table,\n} from \"tabler-react\";\n\nimport { GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEMS_QUERY } from \"./queries\"\nimport { SCHEDULE_EVENT_TICKET_SCHEDLE_ITEM_SCHEMA } from \"./yupSchema\"\n\nimport ScheduleEventTicketBack from \"../ScheduleEventTicketBack\"\nimport ScheduleEventTicketEditBase from \"../ScheduleEventTicketEditBase\"\nimport ScheduleEventTicketEditActivityForm from \"./ScheduleEventTicketEditActivityForm\"\n\n\nconst UPDATE_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM = gql`\n  mutation UpdateScheduleEventTicketScheduleItem($input:UpdateScheduleEventTicketScheduleItemInput!) {\n    updateScheduleEventTicketScheduleItem(input: $input) {\n      scheduleEventTicketScheduleItem {\n        id\n      }\n    }\n  }\n`\n\n\nfunction ScheduleEventTicketEditActivities({ t, history, match }) {\n  const id = match.params.id\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/tickets/`\n  const activeTab = \"activities\"\n  const activeLink = 'tickets'\n  const sidebarContent = <ScheduleEventTicketBack />\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEMS_QUERY, {\n    variables: {\n      scheduleEventTicket: id\n    }\n  })\n\n  const [updateScheduleEventTicketScheduleItem] = useMutation(UPDATE_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM)\n\n  if (loading) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventTicketEditBase>\n  )\n  if (error) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventTicketEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const scheduleEventTicketActivities = data.scheduleEventTicketScheduleItems\n  console.log(scheduleEventTicketActivities)\n\n\n  return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <Card.Body>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.included')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {scheduleEventTicketActivities.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {node.scheduleItem.name}\n                </Table.Col>  \n                <Table.Col>\n                  <Formik\n                    initialValues={{ \n                      included: node.included,\n                    }}\n                    validationSchema={SCHEDULE_EVENT_TICKET_SCHEDLE_ITEM_SCHEMA}\n                    onSubmit={(values, { setSubmitting }) => {\n                      console.log(\"submit values\")\n                      console.log(values)\n\n                      updateScheduleEventTicketScheduleItem({ variables: {\n                        input: {\n                            id: node.id,\n                            included: values.included\n                          }\n                        }, \n                        refetchQueries: [\n                            {query: GET_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEMS_QUERY, variables: {\n                              scheduleEventTicket: id\n                            }},\n                          ]\n                        })\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.events.tickets.activities.toast_edit_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setSubmitting(false)\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setSubmitting(false)\n                          })\n                    }}\n                    >\n                    {({  isSubmitting, errors, values, setFieldTouched, setFieldValue, submitForm, setSubmitting }) => (\n                      <ScheduleEventTicketEditActivityForm\n                        isSubmitting={isSubmitting}\n                        setFieldTouched={setFieldTouched}\n                        setFieldValue={setFieldValue}\n                        errors={errors}\n                        values={values}\n                        disabled={node.scheduleEventTicket.fullEvent}\n                        setSubmitting={setSubmitting}\n                        submitForm={submitForm}\n                      >\n                        {/* {console.log(errors)}\n                        {console.log(values)} */}\n                      </ScheduleEventTicketEditActivityForm>\n                    )}\n                  </Formik>\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Card.Body>\n    </ScheduleEventTicketEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketEditActivities))","import CSLS from \"../../../../../tools/cs_local_storage\"\n\nexport function get_accounts_query_variables() {\n  let queryVars = {\n    teacher: undefined,\n    employee: undefined,\n    searchName: undefined\n  }\n\n  let search = localStorage.getItem(CSLS.SCHEDULE_EVENTS_TICKETS_CUSTOMERS_SEARCH)\n  queryVars.searchName = search\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\n// export function get_attendance_list_query_variables(schedule_item_id, date) {\n//   return {\n//     scheduleItem: schedule_item_id,\n//     date: date\n//   }\n// }\n","// @flow\n\nimport React, { useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { gql } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport {\n  Badge,\n  Button,\n  Card,\n  Table,\n} from \"tabler-react\";\n\nimport { GET_ACCOUNTS_QUERY } from \"../../../../../queries/accounts/account_search_queries\"\nimport { GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET } from \"./queries\"\n// import { SCHEDULE_EVENT_TICKET_SCHEDLE_ITEM_SCHEMA } from \"./yupSchema\"\nimport { get_accounts_query_variables } from \"./tools\"\n\nimport BadgeBoolean from \"../../../../ui/BadgeBoolean\"\nimport ContentCard from \"../../../../general/ContentCard\"\nimport InputSearch from \"../../../../general/InputSearch\"\nimport ScheduleEventTicketBack from \"../ScheduleEventTicketBack\"\nimport ScheduleEventTicketEditBase from \"../ScheduleEventTicketEditBase\"\n// import ScheduleEventTicketEditActivityForm from \"./ScheduleEventTicketEditActivityForm\"\n\nimport CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nconst ADD_ACCOUNT_SCHEDULE_EVENT_TICKET = gql`\nmutation CreateAccountScheduleEventTicket($input:CreateAccountScheduleEventTicketInput!) {\n  createAccountScheduleEventTicket(input: $input) {\n    accountScheduleEventTicket {\n      id\n    }\n  }\n}\n`\n\n\nfunction ScheduleEventTicketEditCustomers({ t, history, match }) {\n  const [showSearch, setShowSearch] = useState(false)\n  const id = match.params.id\n  const eventId = match.params.event_id\n  const returnUrl = `/schedule/events/edit/${eventId}/tickets/`\n  const activeTab = \"customers\"\n  const activeLink = 'tickets'\n  const sidebarContent = <ScheduleEventTicketBack />\n\n  const { loading, error, data } = useQuery(GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, {\n    variables: {\n      scheduleEventTicket: id\n    }\n  })\n\n  const [addAccountScheduleEventTicket] = useMutation(ADD_ACCOUNT_SCHEDULE_EVENT_TICKET)\n  const [updateAccountScheduleEventTicket] = useMutation(UPDATE_ACCOUNT_SCHEDULE_EVENT_TICKET)\n  // const [updateScheduleEventTicketScheduleItem] = useMutation(UPDATE_SCHEDULE_EVENT_TICKET_SCHEDULE_ITEM)\n\n\n  const [ getAccounts, \n    { refetch: refetchAccounts, \n      fetchMore: fetchMoreAccounts,\n      loading: queryAccountsLoading, \n      error: queryAccountsError, \n      data: queryAccountsData \n    }] = useLazyQuery( GET_ACCOUNTS_QUERY )\n\n  console.log('queryAccountsData')\n  console.log(queryAccountsData)\n\n  if (loading) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      {t(\"general.loading_with_dots\")}\n    </ScheduleEventTicketEditBase>\n  )\n  if (error) return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n    >\n      <p>{t('general.error_sad_smiley')}</p>\n      <p>{error.message}</p>\n    </ScheduleEventTicketEditBase>\n  )\n\n  console.log('query data')\n  console.log(data)\n  const inputData = data\n  const accountScheduleEventTickets = data.accountScheduleEventTickets\n  console.log(accountScheduleEventTickets)\n\n  let accountIdsWithTickets = []\n  accountScheduleEventTickets.edges.map(({ node }) => (\n    accountIdsWithTickets.push(node.account.id)\n  ))\n  console.log(accountIdsWithTickets)\n\n  const pageHeaderOptions = <InputSearch \n    initialValueKey={CSLS.SCHEDULE_EVENTS_TICKETS_CUSTOMERS_SEARCH}\n    placeholder=\"Search...\"\n    onChange={(value) => {\n      console.log(value)\n      localStorage.setItem(CSLS.SCHEDULE_EVENTS_TICKETS_CUSTOMERS_SEARCH, value)\n      if (value) {\n        // {console.log('showSearch')}\n        // {console.log(showSearch)}\n        setShowSearch(true)\n        getAccounts({ variables: get_accounts_query_variables()})\n      } else {\n        setShowSearch(false)\n      }\n    }}\n  />\n\n  // const searchResults = <div>hello world for search results</div>\n\n  // Search results\n  const searchResults = (showSearch && (queryAccountsData) && (!queryAccountsLoading) && (!queryAccountsError)) ?\n    <ContentCard cardTitle={t('general.search_results')}\n                pageInfo={queryAccountsData.accounts.pageInfo}\n                onLoadMore={() => {\n                  fetchMoreAccounts({\n                    variables: {\n                    after: queryAccountsData.accounts.pageInfo.endCursor\n                  },\n                  updateQuery: (previousResult, { fetchMoreResult }) => {\n                    const newEdges = fetchMoreResult.accounts.edges\n                    const pageInfo = fetchMoreResult.accounts.pageInfo \n\n                    return newEdges.length\n                      ? {\n                          // Put the new accounts at the end of the list and update `pageInfo`\n                          // so we have the new `endCursor` and `hasNextPage` values\n                          queryAccountsData: {\n                            accounts: {\n                              __typename: previousResult.accounts.__typename,\n                              edges: [ ...previousResult.accounts.edges, ...newEdges ],\n                              pageInfo\n                            }\n                          }\n                        }\n                      : previousResult\n                  }\n                })\n              }} >\n      { (!queryAccountsData.accounts.edges.length) ? \n        t('schedule.classes.class.attendance.search_result_empty') : \n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.email')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {queryAccountsData.accounts.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col key={v4()}>\n                  {node.fullName}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {node.email}\n                </Table.Col>\n                <Table.Col key={v4()}>\n                  {(accountIdsWithTickets.includes(node.id)) ? \n                    <span className=\"pull-right\">{t(\"schedule.events.tickets.customers.search_results_already_bought\")}</span> :\n                    <Button \n                      onClick={() =>\n                        addAccountScheduleEventTicket({ variables: {\n                          input: {\n                            account: node.id,\n                            scheduleEventTicket: id\n                          }                            \n                        }, refetchQueries: [\n                            {query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n                              scheduleEventTicket: id\n                            }},\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.events.tickets.customers.toast_add_success')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setShowSearch(false)\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setShowSearch(false)\n                          })\n                      }\n                    >\n                      {t(\"general.add\")}\n                    </Button>\n                    // <Link to={\"/schedule/classes/class/book/\" + schedule_item_id + \"/\" + class_date + \"/\" + node.id}>\n                    //   <Button color=\"secondary pull-right\">\n                    //     {t('general.checkin')} <Icon name=\"chevron-right\" />\n                    //   </Button>\n                    // </Link>       \n                  }   \n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      }\n    </ContentCard>\n    : \"\"\n\n  // Empty list\n  // if (!accountScheduleEventTickets.edges.length) {\n  //   <ScheduleEventTicketEditBase \n  //     sidebarContent={sidebarContent} \n  //     activeTab={activeTab} \n  //     activeLink={activeLink} \n  //     returnUrl={returnUrl}\n  //     pageHeaderOptions={pageHeaderOptions}\n  //     SearchResults={searchResults}\n  //   >\n  //     <Card.Body>\n  //       <Table>\n  //         <Table.Header>\n  //           <Table.Row>\n  //             <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n  //             <Table.ColHeader>{t('general.included')}</Table.ColHeader>\n  //           </Table.Row>\n  //         </Table.Header>\n  //         <Table.Body>\n  //           {accountScheduleEventTickets.edges.map(({ node }) => (\n  //             <Table.Row key={v4()}>\n  //               <Table.Col>\n  //                 {node.scheduleItem.name}\n  //               </Table.Col>  \n  //             </Table.Row>\n  //           ))}\n  //         </Table.Body>\n  //       </Table>\n  //     </Card.Body>\n  //   </ScheduleEventTicketEditBase>\n  // }\n\n  // Data\n  return (\n    <ScheduleEventTicketEditBase \n      sidebarContent={sidebarContent} \n      activeTab={activeTab} \n      activeLink={activeLink} \n      returnUrl={returnUrl}\n      pageHeaderOptions={pageHeaderOptions}\n      searchResults={searchResults}\n    >\n      <Card.Body>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.invoice')}</Table.ColHeader>\n              <Table.ColHeader>{t('schedule.events.tickets.info_mail_sent')}</Table.ColHeader> \n              <Table.ColHeader></Table.ColHeader> \n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {accountScheduleEventTickets.edges.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {node.account.fullName} <br />\n                  {(node.cancelled) ? <Badge color=\"warning\">{t(\"general.cancelled\")}</Badge> : \"\"}\n                </Table.Col>  \n                <Table.Col>\n\n                </Table.Col>\n                <Table.Col>\n                  <BadgeBoolean value={node.infoMailSent} /> <br />\n                  {/* TODO: resend link here */}\n                </Table.Col>\n                <Table.Col>\n                  {(node.cancelled) ?\n                    <Button \n                      className=\"pull-right\"\n                      color=\"warning\"\n                      onClick={() =>\n                        updateAccountScheduleEventTicket({ variables: {\n                          input: {\n                            id: node.id,\n                            cancelled: false\n                          }\n                        }, refetchQueries: [\n                            {query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n                              scheduleEventTicket: id\n                            }},\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.events.tickets.customers.uncancelled')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setShowSearch(false)\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setShowSearch(false)\n                          }\n                        )\n                      }\n                    >\n                      {t(\"general.uncancel\")}\n                    </Button>\n                  :\n                    <Button \n                      className=\"pull-right\"\n                      color=\"warning\"\n                      onClick={() =>\n                        updateAccountScheduleEventTicket({ variables: {\n                          input: {\n                            id: node.id,\n                            cancelled: true\n                          }\n                        }, refetchQueries: [\n                            {query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n                              scheduleEventTicket: id\n                            }},\n                        ]})\n                        .then(({ data }) => {\n                            console.log('got data', data);\n                            toast.success((t('schedule.events.tickets.customers.cancelled')), {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            setShowSearch(false)\n                          }).catch((error) => {\n                            toast.error((t('general.toast_server_error')) +  error, {\n                                position: toast.POSITION.BOTTOM_RIGHT\n                              })\n                            console.log('there was an error sending the query', error)\n                            setShowSearch(false)\n                          })\n                        }\n                      >\n                        {t(\"general.cancel\")}\n                      </Button>\n                  }\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Card.Body>\n    </ScheduleEventTicketEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ScheduleEventTicketEditCustomers))","// @flow\n\nimport * as React from \"react\"\nimport { withTranslation } from 'react-i18next'\nimport { NavLink, withRouter } from \"react-router-dom\"\nimport { useQuery } from \"@apollo/client\"\nimport { ToastContainer, Slide } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport { Link } from 'react-router-dom'\n\nimport GET_USER from \"../queries/system/get_user\"\nimport { get_all_permissions, has_permission } from \"../tools/user_tools\"\n\nimport {\n  Site,\n  Nav,\n  Grid,\n  Button,\n  // Page,\n  RouterContextProvider,\n} from \"tabler-react\";\n\nimport type { NotificationProps } from \"tabler-react\";\n\ntype Props = {|\n  +children: React.Node,\n|};\n\ntype State = {|\n  notificationsObjects: Array<NotificationProps>,\n|};\n\ntype subNavItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +LinkComponent?: React.ElementType,\n|};\n\ntype navItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +active?: boolean,\n  +LinkComponent?: React.ElementType,\n  +subItems?: Array<subNavItem>,\n  +useExact?: boolean,\n|};\n\n\nconst getNavBarItems = (t, user) => {\n  let items: Array<navItem> = []\n  let permissions = get_all_permissions(user)\n\n  items.push({\n    value: t(\"home.title\"),\n    to: \"/\",\n    icon: \"home\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  })\n\n  // Relations\n  if (\n    (has_permission(permissions, 'view', 'account'))\n  ){\n    items.push({\n      value: t(\"relations.title\"),\n      to: \"/relations\",\n      icon: \"users\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Schedule\n  if (\n    (has_permission(permissions, 'view', 'scheduleclass'))\n  ){\n    items.push({\n      value: t(\"schedule.title\"),\n      to: \"/schedule\",\n      icon: \"calendar\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Finance\n  if (\n    (has_permission(permissions, 'view', 'financecostcenter')) ||\n    (has_permission(permissions, 'view', 'financeglaccount')) ||\n    (has_permission(permissions, 'view', 'financetaxrate')) \n  ){\n    items.push({\n      value: t(\"finance.title\"),\n      to: \"/finance\",\n      icon: \"dollar-sign\",\n      LinkComponent: withRouter(NavLink),\n    })\n  }\n\n  // Organization\n  if (\n    (has_permission(permissions, 'view', 'organizationclasspass')) || \n    (has_permission(permissions, 'view', 'organizationclasstype')) ||\n    (has_permission(permissions, 'view', 'organizationdiscovery')) ||\n    (has_permission(permissions, 'view', 'organizationlocation')) ||\n    (has_permission(permissions, 'view', 'organizationmembership')) \n   ){\n  items.push({\n    value: t(\"organization.title\"),\n    to: \"/organization\",\n    icon: \"feather\",\n    LinkComponent: withRouter(NavLink),\n  })\n}\n\n\n  return items\n\n}\n\nconst now = new Date()\n\n\nfunction SiteWrapperSelfCheckin({t, match, history, children}) {\n  const { error, loading, data, fetchMore } = useQuery(GET_USER)\n\n  if (loading) return <p>{t('general.loading_with_dots')}</p>;\n  if (error) return <p>{t('system.user.error_loading')}</p>; \n\n  console.log(data)\n\n  return (\n    <Site.Wrapper\n      headerProps={{\n        href: \"/\",\n        alt: \"Costasiella\",\n        imageURL: \"/d/static/logos/stock/logo_stock_backend.png\", // Set logo url here\n        // navItems: (\n        //   <Nav.Item type=\"div\" className=\"d-none d-md-flex\">\n        //     <Link to=\"/settings/general\">\n        //       <Button\n        //         icon=\"settings\"\n        //         outline\n        //         size=\"sm\"\n        //         color=\"primary\"\n        //       >\n        //         {this.props.t('general.settings')}\n        //       </Button>\n        //     </Link>\n        //   </Nav.Item>\n        // ),\n        // notificationsTray: {\n        //   notificationsObjects,\n        //   markAllAsRead: () =>\n        //     this.setState(\n        //       () => ({\n        //         notificationsObjects: this.state.notificationsObjects.map(\n        //           v => ({ ...v, unread: false })\n        //         ),\n        //       }),\n        //       () =>\n        //         setTimeout(\n        //           () =>\n        //             this.setState({\n        //               notificationsObjects: this.state.notificationsObjects.map(\n        //                 v => ({ ...v, unread: true })\n        //               ),\n        //             }),\n        //           5000\n        //         )\n        //     ),\n        //   unread: unreadCount,\n        // },\n        accountDropdown: {\n        avatarURL: \"#\",\n        name: data.user.firstName + ' ' + data.user.lastName,\n        description: \"\",\n        options: [\n          // { icon: \"user\", value: \"Profile\" },\n          { icon: \"lock\", value: \"Change password\", to: \"/#/user/password/change/\" },\n          { isDivider: true },\n          { icon: \"log-out\", value: \"Sign out\", to: \"/#/user/logout/\" },\n        ],\n      },\n      }}\n      // navProps={{ itemsObjects: navBarItems }}\n      // navProps={{ itemsObjects: getNavBarItems(this.props.t, data.user) }}\n      routerContextComponentType={withRouter(RouterContextProvider)}\n      footerProps={{\n        // links: [\n        //   <a href=\"#\">First Link</a>,\n        //   <a href=\"#\">Second Link</a>,\n        //   <a href=\"#\">Third Link</a>,\n        //   <a href=\"#\">Fourth Link</a>,\n        //   <a href=\"#\">Five Link</a>,\n        //   <a href=\"#\">Sixth Link</a>,\n        //   <a href=\"#\">Seventh Link</a>,\n        //   <a href=\"#\">Eigth Link</a>,\n        // ],\n        // note:\n        //   \"Premium and Open Source dashboard template with responsive and high quality UI. For Free!\",\n        copyright: (\n          <React.Fragment>\n            Copyleft © {now.getFullYear()}.\n            <a\n              href=\"https://www.costasiella.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {\" \"}\n              Edwin van de Ven\n            </a>{\". \"}\n            All rights reserved.\n          </React.Fragment>\n        ),\n        nav: (\n          <React.Fragment>\n            <Grid.Col auto={true}>\n              {/* <List className=\"list-inline list-inline-dots mb-0\">\n                <List.Item className=\"list-inline-item\">\n                  <a href=\"./docs/index.html\">Documentation</a>\n                </List.Item>\n                <List.Item className=\"list-inline-item\">\n                  <a href=\"./faq.html\">FAQ</a>\n                </List.Item>\n              </List> */}\n            </Grid.Col>\n            <Grid.Col auto={true}>\n              {/* <Button\n                href=\"https://github.com/tabler/tabler-react\"\n                size=\"sm\"\n                outline\n                color=\"primary\"\n                RootComponent=\"a\"\n              >\n                Source code\n              </Button> */}\n            </Grid.Col>\n          </React.Fragment>\n        ),\n      }}\n    >\n      {children}\n      <ToastContainer \n        autoClose={5000} \n        transition={Slide}\n      />\n    </Site.Wrapper> \n  )\n}\n\n\n// class SiteWrapperSelfCheckin extends React.Component<Props, State> {\n//   state = {}  \n\n//   render(): React.Node {\n//     return (\n//       <Query query={GET_USER} >\n//         {({ loading, error, data }) => {\n//           if (loading) return <p>{this.props.t('general.loading_with_dots')}</p>;\n//           if (error) return <p>{this.props.t('system.user.error_loading')}</p>; \n          \n//           console.log('user data in site wrapper')\n//           console.log(data)\n      \n//           return <Site.Wrapper\n//             headerProps={{\n//                 href: \"/\",\n//                 alt: \"Costasiella\",\n//                 imageURL: \"/d/static/logos/stock/logo_stock_backend.png\", // Set logo url here\n//                 // navItems: (\n//                 //   <Nav.Item type=\"div\" className=\"d-none d-md-flex\">\n//                 //     <Link to=\"/settings/general\">\n//                 //       <Button\n//                 //         icon=\"settings\"\n//                 //         outline\n//                 //         size=\"sm\"\n//                 //         color=\"primary\"\n//                 //       >\n//                 //         {this.props.t('general.settings')}\n//                 //       </Button>\n//                 //     </Link>\n//                 //   </Nav.Item>\n//                 // ),\n//                 // notificationsTray: {\n//                 //   notificationsObjects,\n//                 //   markAllAsRead: () =>\n//                 //     this.setState(\n//                 //       () => ({\n//                 //         notificationsObjects: this.state.notificationsObjects.map(\n//                 //           v => ({ ...v, unread: false })\n//                 //         ),\n//                 //       }),\n//                 //       () =>\n//                 //         setTimeout(\n//                 //           () =>\n//                 //             this.setState({\n//                 //               notificationsObjects: this.state.notificationsObjects.map(\n//                 //                 v => ({ ...v, unread: true })\n//                 //               ),\n//                 //             }),\n//                 //           5000\n//                 //         )\n//                 //     ),\n//                 //   unread: unreadCount,\n//                 // },\n//                 accountDropdown: {\n//                 avatarURL: \"#\",\n//                 name: data.user.firstName + ' ' + data.user.lastName,\n//                 description: \"\",\n//                 options: [\n//                   // { icon: \"user\", value: \"Profile\" },\n//                   { icon: \"lock\", value: \"Change password\", to: \"/#/user/password/change/\" },\n//                   { isDivider: true },\n//                   { icon: \"log-out\", value: \"Sign out\", to: \"/#/user/logout/\" },\n//                 ],\n//               },\n//               }}\n//               // navProps={{ itemsObjects: navBarItems }}\n//               // navProps={{ itemsObjects: getNavBarItems(this.props.t, data.user) }}\n//               routerContextComponentType={withRouter(RouterContextProvider)}\n//               footerProps={{\n//                 // links: [\n//                 //   <a href=\"#\">First Link</a>,\n//                 //   <a href=\"#\">Second Link</a>,\n//                 //   <a href=\"#\">Third Link</a>,\n//                 //   <a href=\"#\">Fourth Link</a>,\n//                 //   <a href=\"#\">Five Link</a>,\n//                 //   <a href=\"#\">Sixth Link</a>,\n//                 //   <a href=\"#\">Seventh Link</a>,\n//                 //   <a href=\"#\">Eigth Link</a>,\n//                 // ],\n//                 // note:\n//                 //   \"Premium and Open Source dashboard template with responsive and high quality UI. For Free!\",\n//                 copyright: (\n//                   <React.Fragment>\n//                     Copyleft © {now.getFullYear()}.\n//                     <a\n//                       href=\"https://www.costasiella.com\"\n//                       target=\"_blank\"\n//                       rel=\"noopener noreferrer\"\n//                     >\n//                       {\" \"}\n//                       Edwin van de Ven\n//                     </a>{\". \"}\n//                     All rights reserved.\n//                   </React.Fragment>\n//                 ),\n//                 nav: (\n//                   <React.Fragment>\n//                     <Grid.Col auto={true}>\n//                       {/* <List className=\"list-inline list-inline-dots mb-0\">\n//                         <List.Item className=\"list-inline-item\">\n//                           <a href=\"./docs/index.html\">Documentation</a>\n//                         </List.Item>\n//                         <List.Item className=\"list-inline-item\">\n//                           <a href=\"./faq.html\">FAQ</a>\n//                         </List.Item>\n//                       </List> */}\n//                     </Grid.Col>\n//                     <Grid.Col auto={true}>\n//                       {/* <Button\n//                         href=\"https://github.com/tabler/tabler-react\"\n//                         size=\"sm\"\n//                         outline\n//                         color=\"primary\"\n//                         RootComponent=\"a\"\n//                       >\n//                         Source code\n//                       </Button> */}\n//                     </Grid.Col>\n//                   </React.Fragment>\n//                 ),\n//               }}\n//             >\n//               {this.props.children}\n//               <ToastContainer \n//                 autoClose={5000} \n//                 transition={Slide}\n//               />\n//             </Site.Wrapper>\n//           }}\n//         </Query>\n//     );\n//   }\n// }\n\nexport default withTranslation()(SiteWrapperSelfCheckin)\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapperSelfCheckin from \"../SiteWrapperSelfCheckin\"\n\n\nfunction SelfCheckinBase({ t, match, history, children, title }) {\n\n  return (\n    <SiteWrapperSelfCheckin>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={title} />\n            <Grid.Row>\n              <Grid.Col md={12}>\n                { children }\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapperSelfCheckin>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SelfCheckinBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_ACCOUNTS_QUERY = gql`\n  query Accounts(\n    $after: String, \n    $before: String, \n    $searchName: String,\n    $teacher: Boolean,\n    $employee: Boolean\n  ) {\n    accounts(\n      first: 25, \n      before: $before, \n      after: $after, \n      isActive: true, \n      fullName_Icontains: $searchName,\n      customer: true,\n      teacher: $teacher,\n      employee: $employee\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          fullName\n          email\n          isActive\n        }\n      }\n    }\n  }\n`\n\n\nexport const GET_SCHEDULE_CLASS_ATTENDANCE_QUERY = gql`\n  query ScheduleItemAttendances($after: String, $before: String, $scheduleItem: ID!, $date: Date!) {\n    scheduleItemAttendances(first: 100, before: $before, after: $after, scheduleItem: $scheduleItem, date: $date) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }     \n          attendanceType\n          bookingStatus\n        }\n      }\n    }\n    scheduleItem(id:$scheduleItem) {\n      id\n      frequencyType\n      frequencyInterval\n      organizationLocationRoom {\n        id\n        name\n        organizationLocation {\n          id\n          name\n        }\n      }\n      organizationClasstype {\n        id\n        name\n      }\n      organizationLevel {\n        id\n        name\n      }\n      dateStart\n      dateEnd\n      timeStart\n      timeEnd\n      displayPublic\n    }\n  }\n`\n\nexport const DELETE_SCHEDULE_CLASS_ATTENDANCE = gql`\n  mutation DeleteScheduleItemAttendance($input: DeleteScheduleItemAttendanceInput!) {\n    deleteScheduleItemAttendance(input: $input) {\n      ok\n    }\n  }\n`\n\n\nexport const UPDATE_SCHEDULE_ITEM_ATTENDANCE = gql`\n  mutation UpdateScheduleItemAttendance($input: UpdateScheduleItemAttendanceInput!) {\n    updateScheduleItemAttendance(input:$input) {\n      scheduleItemAttendance {\n        id\n      }\n    }\n  }\n`\n","import CSLS from \"../../../tools/cs_local_storage\"\nimport { withRouter } from \"react-router\"\n\nexport function get_accounts_query_variables() {\n  let queryVars = {\n    teacher: undefined,\n    employee: undefined,\n    searchName: undefined\n  }\n\n  let search = localStorage.getItem(CSLS.SELFCHECKIN_CHECKIN_SEARCH)\n  queryVars.searchName = search\n\n  console.log(queryVars)\n\n  return queryVars\n}\n\nexport function get_attendance_list_query_variables(schedule_item_id, date) {\n  return {\n    scheduleItem: schedule_item_id,\n    date: date\n  }\n}\n","// @flow\n\nimport React, { useContext, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\n\nimport moment from 'moment'\n\nimport {\n  Button,\n  Card,\n  Dropdown,\n  Icon,\n  Table\n} from \"tabler-react\";\nimport SelfCheckinBase from \"../SelfCheckinBase\"\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { GET_ACCOUNTS_QUERY, GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, UPDATE_SCHEDULE_ITEM_ATTENDANCE } from \"./queries\"\nimport { get_attendance_list_query_variables, get_accounts_query_variables } from \"./tools\"\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport BadgeBookingStatus from \"../../ui/BadgeBookingStatus\"\nimport ContentCard from \"../../general/ContentCard\"\nimport InputSearch from \"../../general/InputSearch\"\nimport ScheduleClassAttendanceDelete from \"../../schedule/classes/class/attendance/ScheduleClassAttendanceDelete\"\n\n\nfunction setAttendanceStatus({t, updateAttendance, node, status}) {\n  updateAttendance({\n    variables: { \n      input: {\n        id: node.id, \n        bookingStatus: status\n      }\n    }\n  }).then(({ data }) => {\n    console.log('got data', data);\n    toast.success(\n      t('schedule.classes.class.attendance.status_saved'), {\n        position: toast.POSITION.BOTTOM_RIGHT\n      })\n  }).catch((error) => {\n    toast.error((t('general.toast_server_error')) +  error, {\n        position: toast.POSITION.BOTTOM_RIGHT\n      })\n    console.log('there was an error sending the query', error);\n  })\n}\n\n\nfunction SelfCheckinCheckin({ t, match, history }) {\n  const [showSearch, setShowSearch] = useState(false)\n  const locationId = match.params.location_id\n  const scheduleItemId = match.params.class_id\n  const class_date = match.params.date\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  // const today = moment().format('YYYY-MM-DD')\n\n  const { \n    refetch: refetchAttendance, \n    loading: queryAttendanceLoading, \n    error: queryAttendanceError, \n    data: queryAttendanceData \n  } = useQuery(\n    GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, {\n      variables: get_attendance_list_query_variables(scheduleItemId, class_date)\n    }\n  )\n\n  const [ updateAttendance, \n    { loading: mutationAttendanceLoading, error: mutationAttendanceError },\n  ] = useMutation(UPDATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  const [ getAccounts, \n    { refetch: refetchAccounts, \n      fetchMore: fetchMoreAccounts,\n      loading: queryAccountsLoading, \n      error: queryAccountsError, \n      data: queryAccountsData \n    }] = useLazyQuery( GET_ACCOUNTS_QUERY )\n\n  console.log('queryAccountsData')\n  console.log(queryAccountsData)\n  \n  if (queryAttendanceLoading) return (\n    <SelfCheckinBase>\n      {t(\"general.loading_with_dots\")}\n    </SelfCheckinBase>\n  )\n  if (queryAttendanceError) return (\n    <SelfCheckinBase>\n      {t(\"selfcheckin.checkin.error_loading\")}\n    </SelfCheckinBase>\n  )\n\n  console.log(queryAttendanceData)\n  let checkedInIds = []\n  queryAttendanceData.scheduleItemAttendances.edges.map(({ node }) => (\n    checkedInIds.push(node.account.id)\n  ))\n  console.log(checkedInIds)\n\n  return (\n    <SelfCheckinBase title={t(\"selfcheckin.classes.title\")}>\n      <ContentCard cardTitle={t('general.attendance')}\n                    pageInfo={queryAttendanceData.scheduleItemAttendances.pageInfo}\n                    onLoadMore={() => {\n                      fetchMoreAccounts({\n                      variables: {\n                        after: queryAttendanceData.scheduleItemAttendances.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.scheduleItemAttendances.edges\n                        const pageInfo = fetchMoreResult.scheduleItemAttendances.pageInfo \n\n                        return newEdges.length\n                          ? {\n                              // Put the new scheduleItemAttendances at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              queryAttendanceData: {\n                                scheduleItemAttendances: {\n                                  __typename: previousResult.scheduleItemAttendances.__typename,\n                                  edges: [ ...previousResult.scheduleItemAttendances.edges, ...newEdges ],\n                                  pageInfo\n                                }\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n        }} >\n          <Table>\n            <Table.Header>\n              <Table.Row key={v4()}>\n                <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                <Table.ColHeader>{t('general.booking_status')}</Table.ColHeader>\n                <Table.ColHeader></Table.ColHeader>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {queryAttendanceData.scheduleItemAttendances.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      {node.account.fullName}\n                    </Table.Col>\n                    <Table.Col>\n                      <BadgeBookingStatus status={node.bookingStatus} />\n                    </Table.Col>\n                    <Table.Col>\n                      {/* Delete */}\n                      {/* <ScheduleClassAttendanceDelete node={node} /> */}\n                      {/* Status dropdown */}\n                      <Dropdown\n                        key={v4()}\n                        className=\"pull-right\"\n                        type=\"button\"\n                        toggle\n                        color=\"secondary\"\n                        triggerContent={t(\"general.status\")}\n                        items={[\n                          <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                            <Dropdown.Item\n                              key={v4()}\n                              icon=\"check\"\n                              onClick={() => {\n                                setAttendanceStatus({\n                                  t: t, \n                                  updateAttendance: updateAttendance,\n                                  node: node,\n                                  status: 'ATTENDING'\n                                })\n                                refetchAttendance()\n                              }}>\n                                {t('schedule.classes.class.attendance.booking_status.ATTENDING')}\n                            </Dropdown.Item>\n                          </HasPermissionWrapper>,\n                          <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                            <Dropdown.Item\n                              key={v4()}\n                              icon=\"calendar\"\n                              onClick={() => {\n                                setAttendanceStatus({\n                                  t: t, \n                                  updateAttendance: updateAttendance,\n                                  node: node,\n                                  status: 'BOOKED'\n                                })\n                                refetchAttendance()\n                              }}>\n                                {t('schedule.classes.class.attendance.booking_status.BOOKED')}\n                            </Dropdown.Item>\n                          </HasPermissionWrapper>,\n                          <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                            <Dropdown.Item\n                              key={v4()}\n                              icon=\"x\"\n                              onClick={() => {\n                                setAttendanceStatus({\n                                  t: t, \n                                  updateAttendance: updateAttendance,\n                                  node: node,\n                                  status: 'CANCELLED'\n                                })\n                                refetchAttendance()\n                              }}>\n                                {t('schedule.classes.class.attendance.booking_status.CANCELLED')}\n                            </Dropdown.Item>\n                          </HasPermissionWrapper>,\n                        ]}\n                      />\n                      {(node.bookingStatus == \"BOOKED\") ?\n                        <HasPermissionWrapper key={v4()} permission=\"change\" resource=\"scheduleitemattendance\">\n                          <Button\n                            key={v4()}\n                            className=\"pull-right\"\n                            color=\"success\"\n                            size=\"\"\n                            onClick={() => {\n                              setAttendanceStatus({\n                                t: t, \n                                updateAttendance: updateAttendance,\n                                node: node,\n                                status: 'ATTENDING'\n                              })\n                              refetchAttendance()\n                            }}>\n                              {t('general.checkin')}\n                          </Button>\n                        </HasPermissionWrapper>  : \"\" }\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n            </Table.Body>\n          </Table>\n      </ContentCard>\n      <h3>{t(\"selfcheckin.checkin.title_not_on_list\")}</h3>\n      <InputSearch \n        initialValueKey={CSLS.SELFCHECKIN_CHECKIN_SEARCH}\n        placeholder={t(\"search\")}\n        onChange={(value) => {\n          console.log(value)\n          localStorage.setItem(CSLS.SELFCHECKIN_CHECKIN_SEARCH, value)\n          if (value) {\n            // {console.log('showSearch')}\n            // {console.log(showSearch)}\n            setShowSearch(true)\n            getAccounts({ variables: get_accounts_query_variables()})\n          } else {\n            setShowSearch(false)\n          }\n        }}\n      /> <br />\n      {/* Search results */}\n      {(showSearch && (queryAccountsData) && (!queryAccountsLoading) && (!queryAccountsError)) ?\n        <ContentCard cardTitle={t('general.search_results')}\n                    pageInfo={queryAccountsData.accounts.pageInfo}\n                    onLoadMore={() => {\n                      fetchMoreAccounts({\n                        variables: {\n                        after: queryAccountsData.accounts.pageInfo.endCursor\n                      },\n                      updateQuery: (previousResult, { fetchMoreResult }) => {\n                        const newEdges = fetchMoreResult.accounts.edges\n                        const pageInfo = fetchMoreResult.accounts.pageInfo \n\n                        return newEdges.length\n                          ? {\n                              // Put the new accounts at the end of the list and update `pageInfo`\n                              // so we have the new `endCursor` and `hasNextPage` values\n                              queryAccountsData: {\n                                accounts: {\n                                  __typename: previousResult.accounts.__typename,\n                                  edges: [ ...previousResult.accounts.edges, ...newEdges ],\n                                  pageInfo\n                                }\n                              }\n                            }\n                          : previousResult\n                      }\n                    })\n                  }} >\n          { (!queryAccountsData.accounts.edges.length) ? \n            t('schedule.classes.class.attendance.search_result_empty') : \n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.email')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {queryAccountsData.accounts.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      {node.fullName}\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.email}\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {(checkedInIds.includes(node.id)) ? \n                        <span className=\"pull-right\">{t(\"schedule.classes.class.attendance.search_results_already_checked_in\")}</span> :\n                        <Link to={\"/selfcheckin/book/\" + locationId + \"/\" + scheduleItemId + \"/\" + class_date + \"/\" + node.id}>\n                          <Button color=\"secondary pull-right\">\n                            {t('general.checkin')} <Icon name=\"chevron-right\" />\n                          </Button>\n                        </Link>       \n                      }   \n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          }\n        </ContentCard>\n        : \"\"\n      }\n    </SelfCheckinBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SelfCheckinCheckin))\n\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_BOOKING_OPTIONS_QUERY = gql`\n  query ScheduleClassBookingOptions($account: ID!, $scheduleItem:ID!, $date:Date!, $listType:String!) {\n    scheduleClassBookingOptions(account: $account, scheduleItem: $scheduleItem, date:$date, listType:$listType) {\n      date\n      account {\n        id\n        fullName\n      }\n      scheduleItem {\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n      }\n    \tscheduleItemPrices {\n        organizationClasspassDropin {\n          id\n          name\n          priceDisplay\n        }\n        organizationClasspassTrial {\n          id\n          name\n          priceDisplay\n        }\n      }\n      classpasses {\n        bookingType \n        allowed\n        accountClasspass {\n          id\n          dateStart\n          dateEnd\n          classesRemainingDisplay\n          organizationClasspass {\n            id\n            name\n          }\n        }\n      }\n      subscriptions {\n        bookingType\n        allowed\n        accountSubscription {\n          id\n          dateStart\n          dateEnd\n          organizationSubscription {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport const CREATE_SCHEDULE_ITEM_ATTENDANCE = gql`\n  mutation CreateScheduleItemAttendance($input: CreateScheduleItemAttendanceInput!) {\n    createScheduleItemAttendance(input:$input) {\n      scheduleItemAttendance {\n        id\n      }\n    }\n  }\n`","// @flow\n\nimport React, { Component, useState } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { Query, Mutation } from \"@apollo/client\"\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport SelfCheckinBase from \"../SelfCheckinBase\"\n// import HasPermissionWrapper from \"../../../HasPermissionWrapper\"\nimport { TimeStringToJSDateOBJ } from '../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\n// import { class_edit_all_subtitle } from \"../../schedule/classes/tools\"\n// import confirm_delete from \"../../../../tools/confirm_delete\"\n\nimport { class_subtitle, get_accounts_query_variables } from \"../../schedule/classes/class/tools\"\n\n// import ContentCard from \"../../../../general/ContentCard\"\n// import ScheduleClassBookBack from \"./ScheduleClassBookBack\"\nimport ScheduleClassBookClasspasses from \"../../schedule/classes/class/book/ScheduleClassBookClasspasses\"\n// import ScheduleClassBookClasspasses from \"\"\nimport ScheduleClassBookSubscriptions from \"../../schedule/classes/class/book/ScheduleClassBookSubscriptions\"\nimport ScheduleClassBookPriceDropin from \"../../schedule/classes/class/book/ScheduleClassBookPriceDropin\"\nimport ScheduleClassBookPriceTrial from \"../../schedule/classes/class/book/ScheduleClassBookPriceTrial\"\n// import ClassEditBase from \"../ClassEditBase\"\n\nimport { GET_BOOKING_OPTIONS_QUERY } from \"./queries\"\n// import CSLS from \"../../../../tools/cs_local_storage\"\n\nconst DELETE_SCHEDULE_CLASS_TEACHER = gql`\n  mutation DeleteScheduleClassTeacher($input: DeleteScheduleItemTeacherInput!) {\n    deleteScheduleItemTeacher(input: $input) {\n      ok\n    }\n  }\n`\n\n\nfunction SelfCheckinBookingOptions({ t, match, history }) {\n  const [showSearch, setShowSearch] = useState(false)\n  const return_url = \"/schedule/classes/\"\n  const account_id = match.params.account_id\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const locationId = match.params.location_id\n  const { loading: queryLoading, error: queryError, data: queryData } = useQuery(\n    GET_BOOKING_OPTIONS_QUERY, {\n      variables: {\n        account: account_id,\n        scheduleItem: schedule_item_id,\n        date: class_date,\n        listType: \"ATTEND\"\n      }\n    }\n  )\n\n  // Query\n  // Loading\n  if (queryLoading) return <p>{t('general.loading_with_dots')}</p>\n  // Error\n  if (queryError) {\n    console.log(queryError)\n    return <p>{t('general.error_sad_smiley')}</p>\n  }\n  \n  console.log(queryData)\n  const account = queryData.scheduleClassBookingOptions.account\n  const classpasses = queryData.scheduleClassBookingOptions.classpasses\n  const subscriptions = queryData.scheduleClassBookingOptions.subscriptions\n  const prices = queryData.scheduleClassBookingOptions.scheduleItemPrices\n  const scheduleItem = queryData.scheduleClassBookingOptions.scheduleItem\n  const subtitle = class_subtitle({\n    t: t,\n    location: scheduleItem.organizationLocationRoom.organizationLocation.name, \n    locationRoom: scheduleItem.organizationLocationRoom.name,\n    classtype: scheduleItem.organizationClasstype.name, \n    timeStart: TimeStringToJSDateOBJ(scheduleItem.timeStart), \n    date: class_date\n  })\n\n  console.log(prices)\n  \n  \n  return (\n    <SelfCheckinBase title={t(\"selfcheckin.classes.title\")}>\n      <Grid.Row>\n          <Grid.Col md={12}>\n            <h4>{t('general.booking_options')} {account.fullName}</h4>\n            <div className=\"mt-6\">\n            <Grid.Row cards deck>\n              <ScheduleClassBookSubscriptions \n                subscriptions={subscriptions} \n                returnTo=\"selfcheckin\" \n                locationId={locationId}\n              />\n              <ScheduleClassBookClasspasses \n                classpasses={classpasses} \n                returnTo=\"selfcheckin\" \n                locationId={locationId}\n              />\n              {(prices) ?\n                (prices.organizationClasspassDropin) ? \n                  <ScheduleClassBookPriceDropin \n                    priceDropin={prices.organizationClasspassDropin}\n                    returnTo=\"selfcheckin\" \n                    locationId={locationId}\n                  /> : \"\" \n                : \"\" }\n              {(prices) ?\n                (prices.organizationClasspassTrial) ? \n                  <ScheduleClassBookPriceTrial \n                    priceTrial={prices.organizationClasspassTrial}\n                    returnTo=\"selfcheckin\" \n                    locationId={locationId}\n                  /> : \"\" \n                : \"\" }\n            </Grid.Row>\n            </div>\n          </Grid.Col>\n        </Grid.Row>\n    </SelfCheckinBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SelfCheckinBookingOptions))\n\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ORGANIZATION_LOCATIONS_QUERY = gql`\n  query Organizationlocations($after: String, $before: String) {\n    organizationLocations(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          name\n          organizationlocationroomSet(first: 100, archived: false) {\n            edges {\n              node {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\";\nimport SelfCheckinBase from \"../SelfCheckinBase\"\n\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { GET_ORGANIZATION_LOCATIONS_QUERY } from \"./queries\"\n\n\nfunction Locations({ t, match, history }) {\n  const { loading, error, data } = useQuery(GET_ORGANIZATION_LOCATIONS_QUERY);\n\n  if (loading) return (\n    <SelfCheckinBase>\n      {t(\"general.loading_with_dots\")}\n    </SelfCheckinBase>\n  )\n  if (error) return (\n    <SelfCheckinBase>\n      {t(\"selfcheckin.locations.error_loading\")}\n    </SelfCheckinBase>\n  )\n\n\n  return (\n    <SelfCheckinBase title={t(\"selfcheckin.home.title\")}>\n      <h4>{t(\"selfcheckin.locations.please_select\")}</h4>\n        <List.Group>\n          {\n            data.organizationLocations.edges.map(({node}) =>\n              <List.GroupItem action>\n                <Link to={\"/selfcheckin/location/\" + node.id}>\n                  <div>\n                    <span className=\"pull-right\"><Icon name=\"chevron-right\" /></span>\n                    {node.name}\n                  </div>\n                </Link>\n              </List.GroupItem>\n          )}\n        </List.Group>\n\n          {/* //  List location rooms\n          // <div>\n          //   <h3>{node.name}</h3>\n          //   <List.Group>\n          //     {\n          //       node.organizationlocationroomSet.edges.map(({node}) =>\n          //         <List.GroupItem action>\n          //           <Link to={\"/selfcheckin/room/\" + node.id}>\n          //             <div>\n          //               <span className=\"pull-right\"><Icon name=\"chevron-right\" /></span>\n          //               {node.name}\n          //             </div>\n          //           </Link>\n          //         </List.GroupItem>\n          //       )\n          //     }\n          //   </List.Group>\n          //   <br />\n          // </div>\n        // ) */}\n      \n    </SelfCheckinBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(Locations))","import { gql } from \"@apollo/client\"\n\nexport const GET_LOCATION_CLASSES_QUERY = gql`\n  query ScheduleClasses(\n      $dateFrom: Date!, \n      $dateUntil:Date!, \n      $orderBy: String, \n      $organizationClasstype: String,\n      $organizationLevel: String,\n      $organizationLocation: String,\n      $attendanceCountType: String!\n    ){\n    scheduleClasses(\n        dateFrom:$dateFrom, \n        dateUntil: $dateUntil, \n        orderBy: $orderBy, \n        organizationClasstype: $organizationClasstype,\n        organizationLevel: $organizationLevel,\n        organizationLocation: $organizationLocation,\n        attendanceCountType: $attendanceCountType\n    ){\n      date\n      classes {\n        scheduleItemId\n        frequencyType\n        date\n        status\n        description\n        account {\n          id\n          fullName\n        }\n        role\n        account2 {\n          id\n          fullName\n        }\n        role2\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        timeStart\n        timeEnd\n        displayPublic\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport moment from 'moment'\n\nimport {\n  Button,\n  Card,\n  Icon,\n  Table\n} from \"tabler-react\";\nimport SelfCheckinBase from \"../SelfCheckinBase\"\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { GET_LOCATION_CLASSES_QUERY } from \"./queries\"\n\n\nfunction LocationClasses({ t, match, history }) {\n  const locationId = match.params.location_id\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const today = moment().format('YYYY-MM-DD')\n\n  const { loading, error, data } = useQuery(GET_LOCATION_CLASSES_QUERY, {\n    variables: {\n      dateFrom: today,\n      dateUntil: today,\n      organizationLocation: locationId,\n      attendanceCountType: \"ATTENDING_AND_BOOKED\"\n    }\n  })\n\n  if (loading) return (\n    <SelfCheckinBase>\n      {t(\"general.loading_with_dots\")}\n    </SelfCheckinBase>\n  )\n  if (error) return (\n    <SelfCheckinBase>\n      {t(\"selfcheckin.classes.error_loading\")}\n    </SelfCheckinBase>\n  )\n\n  console.log(data)\n\n  return (\n    <SelfCheckinBase title={t(\"selfcheckin.classes.title\")}>\n      <Card>\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.ColHeader>\n              { t(\"general.time\") }\n            </Table.ColHeader>\n            <Table.ColHeader>\n              { t(\"general.room\") }\n            </Table.ColHeader>\n            <Table.ColHeader>\n              { t(\"general.class\") }\n            </Table.ColHeader>\n            <Table.ColHeader>\n              { t(\"general.teacher\") }\n            </Table.ColHeader>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {\n            data.scheduleClasses.map(({ date, classes }) => \n              classes.map((\n                { scheduleItemId, \n                  frequencyType,\n                  date, \n                  status,\n                  description,\n                  account, \n                  role,\n                  account2,\n                  role2,\n                  organizationLocationRoom, \n                  organizationClasstype, \n                  organizationLevel,\n                  timeStart, \n                  timeEnd,\n                  displayPublic }) => (\n                    // console.log(scheduleItemId)\n                    <Table.Row>\n                      <Table.Col>\n                        {moment(date + ' ' + timeStart).format(timeFormat)} {' - '}\n                        {moment(date + ' ' + timeEnd).format(timeFormat)}\n                      </Table.Col>\n                      <Table.Col>\n                        { organizationLocationRoom.name }\n                      </Table.Col>\n                      <Table.Col>\n                        { organizationClasstype.name }\n                      </Table.Col>\n                      <Table.Col>\n                        {/* Teacher(s) */}\n                        { (account) ? account.fullName : \n                          <span className=\"text-red\">{t(\"schedule.classes.no_teacher\")}</span>\n                        }\n                      </Table.Col>\n                      <Table.Col>\n                        <Link to={\"/selfcheckin/checkin/\" + locationId + \"/\" + scheduleItemId + \"/\" + date}>\n                          <Button color=\"secondary\" className=\"pull-right\">\n                            {t(\"selfcheckin.classes.go_to_checkin\")}\n                            <Icon name=\"chevron-right\" />\n                          </Button>\n                        </Link>\n                      </Table.Col>\n                    </Table.Row>\n                  )\n                )\n            )\n          }\n        </Table.Body>\n      </Table>\n      </Card>\n    </SelfCheckinBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(LocationClasses))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SYSTEM_SETTINGS_QUERY = gql`\n  query SystemSettings($setting: String!) {\n    systemSettings(setting: $setting) {\n      edges {\n        node {\n          id\n          setting\n          value\n        }\n      }\n    }\n  }\n`\n\n\nexport const UPDATE_SYSTEM_SETTING = gql`\n  mutation UpdateSystemSetting($input: UpdateSystemSettingInput!) {\n    updateSystemSetting(input: $input) {\n      systemSetting {\n        id\n      }\n    }\n  }\n`","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport ButtonBack from \"../ui/ButtonBack\"\n\n\nfunction SettingsBack({ t, returnUrl=\"/settings\" }) { \n  return (\n    <ButtonBack returnUrl={returnUrl} />\n  )\n}\n\nexport default withTranslation()(SettingsBack)","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../SiteWrapper\"\nimport HasPermissionWrapper from \"../HasPermissionWrapper\"\nimport SettingsBack from \"./SettingsBack\"\n\n\nfunction SettingsBase({ t, children, headerSubTitle=\"\", cardTitle, alertBanner=\"\", returnUrl=\"/settings\" }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('settings.title')} subTitle={headerSubTitle}>\n            <div className=\"page-options d-flex\">\n              <SettingsBack returnUrl={returnUrl} />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {alertBanner}\n              <Card>\n                <Card.Header>\n                  <Card.Title>{cardTitle}</Card.Title>\n                </Card.Header>\n                {children}\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsBase))","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport { GET_SYSTEM_SETTINGS_QUERY } from '../queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../SettingsBase\"\n\n\nfunction SettingsAbout({ t, match, history }) {\n  const headerSubTitle = t('settings.about.title')\n  const cardTitle = t(\"settings.about.about.title\")\n\n  const { \n    loading: loadingVersion, \n    error: errorVersion, \n    data: dataVersion \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"system_version\"\n    }\n  })\n  const { \n    loading: loadingPatch, \n    error: errorPatch, \n    data: dataPatch \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"system_version_patch\"\n    }\n  })\n\n  if ((loadingVersion) || (loadingPatch)) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle} >  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if ((errorVersion) || errorPatch) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle} >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data app settings')\n  console.log(dataVersion)\n  console.log(dataPatch)\n\n  let version = 0\n  let patch = 0\n  if (dataVersion.systemSettings.edges.length){\n    version = dataVersion.systemSettings.edges[0].node.value\n  } \n  if (dataPatch.systemSettings.edges.length){\n    patch = dataPatch.systemSettings.edges[0].node.value\n  } \n    \n\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n    >\n      <Card.Body>\n        <h2>\n          {t(\"settings.about.about.this_is_costasiella\")} {`${version}.${patch}`}\n        </h2>\n        <h3>{t(\"general.license_info\")}</h3>\n        {t(\"settings.about.about.license_version\")} <br /><br />\n        <h3>{t(\"general.license\")}</h3>\nThis program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. <br /><br />\nThis program is distributed in the hope that it will be useful, but <b>WITHOUT ANY WARRANTY</b>; without even the implied warranty of <b>MERCHANTABILITY</b> or <b>FITNESS FOR A PARTICULAR PURPOSE</b>. See the GNU General Public License for more details. <br /><br />\nYou should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. <br />\n<br />\nGNU GENERAL PUBLIC LICENSE<br />\n<br />\nVersion 2, June 1991<br />\n<br />\nCopyright (C) 1989, 1991 Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA<br />\n<br />\nEveryone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. <br />\n<br />\nPreamble<br />\n<br />\nThe licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.) You can apply it to your programs, too.<br />\n<br />\nWhen we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.<br /><br />\n<br />\nTo protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.<br />\n<br />\nFor example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.<br />\n<br />\nWe protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.<br />\n<br />\nAlso, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations.<br />\n<br />\nFinally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all.<br />\n<br />\nThe precise terms and conditions for copying, distribution and modification follow.<br />\n<br />\nTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION<br />\n<br />\n0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The \"Program\", below, refers to any such program or work, and a \"work based on the Program\" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) Each licensee is addressed as \"you\".<br />\n<br />\nActivities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.<br />\n<br />\n1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.<br />\n<br />\nYou may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.<br />\n<br />\n2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:<br />\n<br />\na) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change. b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License. c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.) These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.<br />\n<br />\nThus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.<br />\n<br />\nIn addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.<br />\n<br />\n3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:<br />\n<br />\na) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.) The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.<br />\n<br />\nIf distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.<br />\n<br />\n4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.<br />\n<br />\n5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.<br />\n<br />\n6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.<br />\n<br />\n7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.<br />\n<br />\nIf any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.<br />\n<br />\nIt is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.<br />\n<br />\nThis section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.<br />\n<br />\n8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.<br />\n<br />\n9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.<br />\n<br />\nEach version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.<br />\n<br />\n10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.<br />\n<br />\nNO WARRANTY<br />\n<br />\n11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.<br />\n<br />\n12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.<br />\n<br />\nEND OF TERMS AND CONDITIONS<br />\n<br />\nHow to Apply These Terms to Your New Programs<br />\n<br />\nIf you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.<br />\n<br />\nTo do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.<br />\n<br />\none line to give the program's name and an idea of what it does. Copyright (C) yyyy name of author<br />\n<br />\nThis program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.<br />\n<br />\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.<br />\n<br />\nYou should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. Also add information on how to contact you by electronic and paper mail.<br />\n<br />\nIf the program is interactive, make it output a short notice like this when it starts in an interactive mode:<br />\n<br />\nGnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, the commands you use may be called something other than `show w' and `show c'; they could even be mouse-clicks or menu items--whatever suits your program.<br />\n<br />\nYou should also get your employer (if you work as a programmer) or your school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. Here is a sample; alter the names:<br />\n<br />\nYoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.<br />\n<br />\nsignature of Ty Coon, 1 April 1989 Ty Coon, President of Vice\n      </Card.Body>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsAbout))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsFinanceBankAccountsForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"finance_bank_accounts_iban\" \n              checked={values.finance_bank_accounts_iban} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('settings.finance.bank_accounts.iban')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"finance_bank_accounts_iban\" component=\"div\" />   \n        </Form.Group>  \n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsFinanceBankAccountsForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsFinanceBankAccountsForm from \"./SettingsFinanceBankAccountsForm\"\n\n\nfunction SettingsFinanceIBAN({ t, match, history }) {\n  const headerSubTitle = t('settings.finance.title')\n  const cardTitle = t(\"settings.finance.bank_accounts.title\")\n\n  const { \n    loading: loading, \n    error: error, \n    data: data \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"finance_bank_accounts_iban\"\n    }\n  })\n  const [ updateSettings ] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  if (loading) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >\n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data app settings')\n  console.log(data)\n\n  let initialValues = {\n    iban: false\n  }\n  if (data.systemSettings.edges.length){\n    initialValues['iban'] = data.systemSettings.edges[0].node.value\n  } \n    \n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n    >  \n    <Formik\n      initialValues={{ \n        finance_bank_accounts_iban: initialValues['iban'],\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          const settings = [\n            { setting: \"finance_bank_accounts_iban\", value: values.finance_bank_accounts_iban },\n          ]\n\n          let error = false\n\n          for (let i in settings) {\n\n            console.log(i)\n            console.log(settings[i].setting)\n            console.log(settings[i].value)\n\n            updateSettings({ variables: {\n              input: {\n                setting: settings[i].setting,\n                value: settings[i].value,\n              }\n            }, refetchQueries: [\n                {query: GET_SYSTEM_SETTINGS_QUERY, variables: { setting: i.setting }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('settings.general.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsFinanceBankAccountsForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsFinanceBankAccountsForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsFinanceIBAN))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsFinanceCurrencyForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.finance.currency')}>\n            <Field type=\"text\" \n              name=\"finance_currency\" \n              className={(errors.finance_currency) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"finance_currency\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('settings.finance.currency_symbol')}>\n            <Field type=\"text\" \n              name=\"finance_currency_symbol\" \n              className={(errors.finance_currency_symbol) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"finance_currency_symbol\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsFinanceCurrencyForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsFinanceCurrencyForm from \"./SettingsFinanceCurrencyForm\"\n\n\nfunction SettingsFinanceCurrency({ t, match, history }) {\n  const headerSubTitle = t('settings.finance.title')\n  const cardTitle = t(\"settings.finance.currency.title\")\n  const sidebarActive = \"integration\"\n\n  const { \n    loading: loadingCurrency, \n    error: errorCurrency, \n    data: dataCurrency \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"finance_currency\"\n    }\n  })\n  const { \n    loading: loadingSymbol, \n    error: errorSymbol, \n    data: dataSymbol \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"finance_currency_symbol\"\n    }\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  if ((loadingCurrency) || (loadingSymbol)) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if ((errorCurrency) || errorSymbol) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data app settings')\n  console.log(dataCurrency)\n  console.log(dataSymbol)\n\n  let initialValues = {\n    currency: \"EUR\",\n    symbol: \"€\"\n  }\n  if (dataCurrency.systemSettings.edges.length){\n    initialValues['currency'] = dataCurrency.systemSettings.edges[0].node.value\n  } \n  if (dataSymbol.systemSettings.edges.length){\n    initialValues['symbol'] = dataSymbol.systemSettings.edges[0].node.value\n  } \n    \n\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n      sidebarActive={sidebarActive}\n    >  \n    <Formik\n      initialValues={{ \n        finance_currency: initialValues['currency'],\n        finance_currency_symbol: initialValues['symbol']\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          const settings = [\n            { setting: \"finance_currency\", value: values.finance_currency },\n            { setting: \"finance_currency_symbol\", value: values.finance_currency_symbol },\n          ]\n\n          let error = false\n\n          for (let i in settings) {\n\n            console.log(i)\n            console.log(settings[i].setting)\n            console.log(settings[i].value)\n\n            updateSettings({ variables: {\n              input: {\n                setting: settings[i].setting,\n                value: settings[i].value,\n              }\n            }, refetchQueries: [\n                {query: GET_SYSTEM_SETTINGS_QUERY, variables: { setting: i.setting }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('settings.general.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsFinanceCurrencyForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsFinanceCurrencyForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsFinanceCurrency))","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const DATETIME_SCHEMA = Yup.object().shape({\n    dateFormat: Yup.string()\n      .required(t('yup.field_required')),\n    timeFormat: Yup.string()\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsGeneralDateTimeForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.general.date_format')}>\n            <Field component=\"select\" \n                    name=\"dateFormat\" \n                    className={(errors.dateFormat) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"YYYY-MM-DD\" key={v4()}>{t('settings.general.date_formats.YYYY-MM-DD')}</option>\n                <option value=\"MM-DD-YYYY\" key={v4()}>{t('settings.general.date_formats.MM-DD-YYYY')}</option>\n                <option value=\"DD-MM-YYYY\" key={v4()}>{t('settings.general.date_formats.DD-MM-YYYY')}</option>\n            </Field>\n            <ErrorMessage name=\"dateFormat\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('settings.general.time_format')}>\n            <Field component=\"select\" \n                    name=\"timeFormat\" \n                    className={(errors.timeFormat) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"24\" key={v4()}>{t('settings.general.time_formats.24hr')}</option>\n                <option value=\"12\" key={v4()}>{t('settings.general.time_formats.12hr')}</option>\n            </Field>\n            <ErrorMessage name=\"timeFormat\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsGeneralDateTimeForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_APP_SETTINGS_QUERY, UPDATE_APP_SETTINGS } from './queries'\nimport { DATETIME_SCHEMA } from './yupSchema'\n\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsGeneralDateTimeForm from \"./SettingsGeneralDateTimeForm\"\n\n\nfunction SettingsGeneralDateTime({ t, match, history }) {\n  const headerSubTitle = t(\"settings.general.datetime\")\n  const cardTitle = t(\"settings.general.datetime\")\n  const sidebarActive = \"general\"\n\n  const { loading, error, data } = useQuery(GET_APP_SETTINGS_QUERY)\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_APP_SETTINGS)\n\n  console.log('query data app settings')\n  console.log(data)\n\n  if (loading) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n      sidebarActive={sidebarActive}\n    >  \n    <Formik\n      initialValues={{ \n        dateFormat: data.appSettings.dateFormat,\n        timeFormat: data.appSettings.timeFormat,\n        note: \"\",\n      }}\n      validationSchema={DATETIME_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          updateSettings({ variables: {\n            input: {\n              dateFormat: values.dateFormat,\n              timeFormat: values.timeFormat,\n            }\n          }, refetchQueries: [\n              {query: GET_APP_SETTINGS_QUERY}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('settings.general.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsGeneralDateTimeForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsGeneralDateTimeForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsGeneralDateTime))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsGeneralSystemForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.general.system.system_hostname')}>\n            <Field type=\"text\" \n              name=\"system_hostname\" \n              className={(errors.system_hostname) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"system_hostname\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsGeneralSystemForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsGeneralSystemForm from \"./SettingsGeneralSystemForm\"\n\n\nfunction SettingsGeneralSystem({ t, match, history }) {\n  const headerSubTitle = t('settings.general.title')\n  const cardTitle = t(\"settings.general.system.title\")\n  const sidebarActive = \"general\"\n  const queryVariables = {\n    setting: \"system_hostname\"\n  }\n\n  const { loading, error, data } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: queryVariables\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  console.log('query data settings')\n  console.log(data)\n\n  if (loading) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  let hostname = \"\"\n  if (data.systemSettings.edges.length) {\n    hostname = data.systemSettings.edges[0].node.value \n  }\n\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n      sidebarActive={sidebarActive}\n    >  \n    <Formik\n      initialValues={{ \n        system_hostname: hostname\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          updateSettings({ variables: {\n            input: {\n              setting: \"system_hostname\",\n              value: values.system_hostname\n            }\n          }, refetchQueries: [\n              { query: GET_SYSTEM_SETTINGS_QUERY, variables: queryVariables }\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('settings.general.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsGeneralSystemForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsGeneralSystemForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsGeneralSystem))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\n\nfunction SettingsHomeItemButton({ t, link, linkTitle=null }) {\n  return (\n    <Link to={link} >\n      <Button \n        outline\n        block\n        color=\"primary\"\n      >\n        {linkTitle ? linkTitle: t(\"settings.home.link_edit\")} <Icon name=\"chevron-right\" />\n      </Button>\n    </Link>\n  )\n}\n\nexport default withTranslation()(withRouter(SettingsHomeItemButton))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Container,\n  Grid,\n  Icon,\n  Page,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport SettingsHomeItemButton from \"./SettingsHomeItemButton\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n// import RelationsMenu from \"../RelationsMenu\"\n\nfunction SettingsHome({ t, match, params }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t('settings.title')} />\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.general.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.general.date_time.title\")}</h5>\n                  {t(\"settings.general.date_time.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/general/datetime\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.general.system.title\")}</h5>\n                  {t(\"settings.general.system.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/general/system\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.workflow.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.workflow.class_booking.title\")}</h5>\n                  {t(\"settings.workflow.class_booking.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/workflow/class_booking\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.workflow.subscription_pauses.title\")}</h5>\n                  {t(\"settings.workflow.subscription_pauses.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/workflow/subscription_pauses\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.workflow.trial.title\")}</h5>\n                  {t(\"settings.workflow.trial.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/workflow/trial\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.finance.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.finance.currency.title\")}</h5>\n                  {t(\"settings.finance.currency.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/finance/currency\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.finance.bank_accounts.title\")}</h5>\n                  {t(\"settings.finance.bank_accounts.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/finance/bank_accounts\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.mail.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.mail.templates.title\")}</h5>\n                  {t(\"settings.mail.templates.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/mail/templates\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.shop.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.shop.features.title\")}</h5>\n                  {t(\"settings.shop.features.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/shop/features/\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.integration.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.integration.mollie.title\")}</h5>\n                  {t(\"settings.integration.mollie.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton link=\"/settings/integration/mollie/\" />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              <h4>{t(\"settings.about.title\")}</h4>\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"settings.about.about.title\")}</h5>\n                  {t(\"settings.about.explanation\")}\n                  <br /><br />\n                  <SettingsHomeItemButton \n                    link=\"/settings/about\" \n                    linkTitle={t(\"View info\")}\n                  />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(SettingsHome))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsIntegrationMollieForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.integration.mollie.api_key')}>\n            <Field type=\"text\" \n              name=\"mollie_api_key\" \n              className={(errors.mollie_api_key) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"mollie_api_key\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsIntegrationMollieForm))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Alert,\n  Button,\n  Header,\n  Icon\n} from \"tabler-react\";\n\n\nfunction SettingsIntegrationMollieCreateAccount({ t, match, history, mollieApiKey }) {\n  if (mollieApiKey) {\n    return \"\"\n  }\n\n  return (\n    <Alert type=\"primary\">\n      <Header.H4>{t('settings.integration.mollie.create_account_title')}</Header.H4>\n      <p>\n        {t(\"settings.integration.mollie.create_account_message\")}\n      </p>\n      <a href=\"https://www.mollie.com/dashboard/signup/2488481\" target=\"_blank\">\n        <Button color=\"success\" RootComponent=\"button\">\n          {t(\"settings.integration.mollie.to_mollie\")} <Icon name=\"chevron-right\" />\n        </Button>\n      </a>\n    </Alert>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsIntegrationMollieCreateAccount))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsIntegrationMollieForm from \"./SettingsIntegrationMollieForm\"\nimport SettingsIntegrationMollieCreateAccount from \"./SettingsIntegrationMollieCreateAccount\"\n\n\nfunction SettingsIntegrationMollie({ t, match, history }) {\n  const headerSubTitle = t('settings.integration.title')\n  const cardTitle = t(\"settings.integration.mollie.title\")\n  const sidebarActive = \"integration\"\n\n  const { loading, error, data } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"integration_mollie_api_key\"\n    }\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  console.log('query data app settings')\n  console.log(data)\n\n  if (loading) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  let mollieApiKey = \"\"\n  if (data.systemSettings.edges.length) {\n    mollieApiKey = data.systemSettings.edges[0].node.value\n  }\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n      sidebarActive={sidebarActive}\n      alertBanner={<SettingsIntegrationMollieCreateAccount mollieApiKey={mollieApiKey} />}\n    >\n    <Formik\n      initialValues={{ \n        mollie_api_key: mollieApiKey\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          updateSettings({ variables: {\n            input: {\n              setting: \"integration_mollie_api_key\",\n              value: values.mollie_api_key\n            }\n          }, refetchQueries: [\n              {query: GET_SYSTEM_SETTINGS_QUERY,     variables: {\n                setting: \"integration_mollie_api_key\"\n              }}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('settings.general.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsIntegrationMollieForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsIntegrationMollieForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsIntegrationMollie))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport SettingsBack from \"../SettingsBack\"\n\nfunction SettingsMailTemplatesBase({ t, children, headerSubTitle, }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"settings.mail.templates.title\")} subTitle={headerSubTitle}>\n            <div className=\"page-options d-flex\">\n              <SettingsBack />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={12}>\n              {children}\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(SettingsMailTemplatesBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_SYSTEM_MAIL_TEMPLATES_QUERY = gql`\n  query SystemMailTemplates {\n    systemMailTemplates(first:100) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          name\n          subject\n          title\n          description\n          content\n          comments\n        }\n      }\n    }\n  }\n`\n\nexport const GET_SYSTEM_MAIL_TEMPLATE_QUERY = gql`\n  query SystemMailTemplate($id: ID!) {\n    systemMailTemplate(id:$id) {\n      id\n      name\n      subject\n      title\n      description\n      content\n      comments\n    }\n  }\n`\n\nexport const UPDATE_SYSTEM_MAIL_TEMPLATE =  gql`\n  mutation UpdateSystemMailTemplate($input: UpdateSystemMailTemplateInput!) {\n    updateSystemMailTemplate(input: $input) {\n      systemMailTemplate {\n        id\n        name\n        subject\n        title\n        description\n        content\n        comments\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Button,\n  Card,\n  Container,\n  Table\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\n\nimport ContentCard from \"../../general/ContentCard\"\nimport SettingsMailTemplatesBase from \"./SettingsMailTemplatesBase\"\n\nimport { GET_SYSTEM_MAIL_TEMPLATES_QUERY } from \"./queries\"\n\n\nfunction SystemMailTemplates({ t, match, params }) {\n  const title = t(\"settings.mail.templates.title\")\n  const { loading, error, data, fetchMore } = useQuery(GET_SYSTEM_MAIL_TEMPLATES_QUERY)\n\n  if (loading) return (\n    <SettingsMailTemplatesBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </SettingsMailTemplatesBase>\n  )\n  if (error) return (\n    <SettingsMailTemplatesBase title={title}>\n      {t(\"settings.mail.templates.error_loading\")}\n    </SettingsMailTemplatesBase>\n  )\n\n  console.log(data)\n  const mailTemplates = data.systemMailTemplates\n\n  // TODO: add empty list message and request import\n\n\n\n  return (\n    <SettingsMailTemplatesBase title={title} >\n      <ContentCard \n        cardTitle={t('settings.mail.templates.title')}\n        // headerContent={headerOptions}\n        pageInfo={mailTemplates.pageInfo}\n        onLoadMore={() => {\n          fetchMore({\n            variables: {\n              after: mailTemplates.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, { fetchMoreResult }) => {\n              const newEdges = fetchMoreResult.systemMailTemplates.edges\n              const pageInfo = fetchMoreResult.systemMailTemplates.pageInfo\n\n              return newEdges.length\n                ? {\n                    // Put the new subscriptions at the end of the list and update `pageInfo`\n                    // so we have the new `endCursor` and `hasNextPage` values\n                    systemMailTemplates: {\n                      __typename: previousResult.systemMailTemplates.__typename,\n                      edges: [ ...previousResult.systemMailTemplates.edges, ...newEdges ],\n                      pageInfo\n                    }\n                  }\n                : previousResult\n            }\n          })\n        }} >\n        <Table>\n          <Table.Header>\n            <Table.Row key={v4()}>\n              <Table.ColHeader>{t('settings.mail.templates.name')}</Table.ColHeader>\n              <Table.ColHeader></Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n              <Table.Body>\n                  {mailTemplates.edges.map(({ node }) => (\n                    <Table.Row key={v4()}>\n                      <Table.Col>\n                        {node.name}\n                      </Table.Col>\n                      <Table.Col>\n                        <Link to={\"/settings/mail/templates/edit/\" + node.id}>\n                          <Button className='btn-sm pull-right' \n                                  color=\"secondary\">\n                            {t('general.edit')}\n                          </Button>\n                        </Link>\n                      </Table.Col>\n                    </Table.Row>\n                  ))}\n              </Table.Body>\n            </Table>\n      </ContentCard>\n    </SettingsMailTemplatesBase>\n  )\n}\n\nexport default withTranslation()(withRouter(SystemMailTemplates))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { toast } from 'react-toastify'\nimport SettingsBack from \"../SettingsBack\"\n\nfunction SettingsMailTemplatesBase({ t, children, headerSubTitle, help={} }) {\n  return (\n    <SiteWrapper>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"settings.mail.templates.title\")} subTitle={headerSubTitle}>\n            <div className=\"page-options d-flex\">\n              <SettingsBack returnUrl=\"/settings/mail/templates\" />\n            </div>\n          </Page.Header>\n          <Grid.Row>\n            <Grid.Col md={8}>\n              {children}\n            </Grid.Col>\n            <Grid.Col md={4}>\n              <Card title={t('general.subject')}>\n                <Card.Body>\n                  {help.subject}\n                </Card.Body>\n              </Card>\n              <Card title={t('general.title')}>\n                <Card.Body>\n                  {help.title}\n                </Card.Body>\n              </Card>\n              <Card title={t('general.description')}>\n                <Card.Body>\n                  {help.description}\n                </Card.Body>\n              </Card>\n              <Card title={t('general.content')}>\n                <Card.Body>\n                  {help.content}\n                </Card.Body>\n              </Card>\n              <Card title={t('general.comments')}>\n                <Card.Body>\n                  {help.comments}\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row>\n        </Container>\n      </div>\n    </SiteWrapper>\n  )\n}\n\nexport default withTranslation()(withRouter(SettingsMailTemplatesBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { Link } from 'react-router-dom'\nimport { v4 } from \"uuid\"\n\nimport { Editor } from '@tinymce/tinymce-react'\nimport { tinymceBasicConf } from \"../../../plugin_config/tinymce\"\n\n\nimport {\n  Button,\n  Card,\n  Form\n} from \"tabler-react\";\n\n\nfunction SettingsMailTemplateEditForm({ t, history, isSubmitting, errors, values, setFieldTouched, setFieldValue, returnUrl, cardTitle }) {\n\n\n  return (\n    <FoForm>\n      <Card title={cardTitle}>\n        <Card.Body>    \n          <Form.Group label={t('general.subject')} >\n            <Field type=\"text\" \n                  name=\"subject\" \n                  className={(errors.subject) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"subject\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.title')} >\n            <Field type=\"text\" \n                  name=\"title\" \n                  className={(errors.title) ? \"form-control is-invalid\" : \"form-control\"} \n                  autoComplete=\"off\" />\n            <ErrorMessage name=\"title\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.description')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"description\"\n              initialValue={values.description}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"description\", e.target.getContent())\n                setFieldTouched(\"description\", true, true)\n              }}\n            />\n            <ErrorMessage name=\"description\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.content')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"content\"\n              initialValue={values.content}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"content\", e.target.getContent())\n                setFieldTouched(\"content\", true, true)\n              }}\n            />\n            <ErrorMessage name=\"content\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('general.comments')}>\n            <Editor\n              tinymceScriptSrc=\"/d/static/tinymce/tinymce.min.js\"\n              textareaName=\"comments\"\n              initialValue={values.comments}\n              init={tinymceBasicConf}\n              onBlur={(e) => {\n                setFieldValue(\"comments\", e.target.getContent())\n                setFieldTouched(\"comments\", true, true)\n              }}\n            />\n            <ErrorMessage name=\"comments\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n        </Card.Body>\n        <Card.Footer>\n            <Button \n              className=\"pull-right\"\n              color=\"primary\"\n              disabled={isSubmitting}\n              type=\"submit\"\n            >\n              {t('general.submit')}\n            </Button>\n            <Link to={returnUrl}>\n              <Button\n                type=\"button\" \n                color=\"link\" \n              >\n                {t('general.cancel')}\n              </Button>\n            </Link>\n        </Card.Footer>\n      </Card>\n    </FoForm>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsMailTemplateEditForm))","// @flow\n\nimport React, {Component } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_MAIL_TEMPLATE_QUERY, GET_SYSTEM_MAIL_TEMPLATES_QUERY, UPDATE_SYSTEM_MAIL_TEMPLATE } from './queries'\n\nimport {\n  Dimmer,\n  Page,\n  Grid,\n  Icon,\n  Button,\n  Card,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { getTemplateInfo } from './tools'\n\nimport SettingsMailTemplateEditBase from \"./SettingsMailTemplateEditBase\"\nimport SettingsMailTemplateEditForm from \"./SettingsMailTemplateEditForm\"\n\n\nfunction SettingsMailTemplateEdit({ t, match, history }) {\n  const id = match.params.id\n  const returnUrl = \"/settings/mail/templates\"\n  const headerSubTitle = t('settings.mail.title')\n  const cardTitle = t(\"settings.mail.templates.edit.title\")\n\n  const { loading, error, data } = useQuery(GET_SYSTEM_MAIL_TEMPLATE_QUERY, {\n    variables: {\n      id: id\n    }\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_MAIL_TEMPLATE)\n\n  console.log('query data app settings')\n  console.log(data)\n\n  if (loading) {\n    return (\n      <SettingsMailTemplateEditBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsMailTemplateEditBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsMailTemplateEditBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsMailTemplateEditBase>\n    )\n  }\n\n  const templateInfo = getTemplateInfo(t, data.systemMailTemplate.name)\n  console.log(data.systemMailTemplate.name)\n  console.log(templateInfo)\n\n\n  return (\n    <SettingsMailTemplateEditBase \n      headerSubTitle={headerSubTitle}\n      help={templateInfo.helpTexts}\n    >  \n    <Formik\n      initialValues={{ \n        subject: data.systemMailTemplate.subject,\n        title: data.systemMailTemplate.title,\n        description: data.systemMailTemplate.description,\n        content: data.systemMailTemplate.content,\n        comments: data.systemMailTemplate.comments        \n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          updateSettings({ variables: {\n            input: {\n              id: id,\n              subject: values.subject,\n              title: values.title,\n              description: values.description,\n              content: values.content,\n              comments: values.comments\n            }\n          }, refetchQueries: [\n              {query: GET_SYSTEM_MAIL_TEMPLATES_QUERY}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('settings.mail.templates.edit.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n    >\n      {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n        <SettingsMailTemplateEditForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n          setFieldTouched={setFieldTouched}\n          setFieldValue={setFieldValue}\n          cardTitle={templateInfo.cardTitle}\n          returnUrl={returnUrl}\n        >\n          {console.log(errors)}\n        </SettingsMailTemplateEditForm>\n      )}\n      </Formik>\n    </SettingsMailTemplateEditBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsMailTemplateEdit))","import React from \"react\"\n\n\nexport function getTemplateInfo(t, template_name) {\n  let cardTitle\n  let helpTexts\n\n\n  switch(template_name) {\n    case \"class_info_mail\":\n      cardTitle = t(\"settings.mail.templates.class_info_mail.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.class_info_mail.help_subject\"),\n        title: t(\"settings.mail.templates.class_info_mail.help_title\"),\n        description: t(\"settings.mail.templates.class_info_mail.help_description\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        content: t(\"settings.mail.templates.class_info_mail.help_content\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        comments: t(\"settings.mail.templates.class_info_mail.help_comments\"), \n      }\n      break\n    case \"event_info_mail\":\n      cardTitle = t(\"settings.mail.templates.event_info_mail.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.event_info_mail.help_subject\"),\n        title: t(\"settings.mail.templates.event_info_mail.help_title\"),\n        description: t(\"settings.mail.templates.event_info_mail.help_description\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        content: t(\"settings.mail.templates.event_info_mail.help_content\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        comments: t(\"settings.mail.templates.event_info_mail.help_comments\"), \n      }\n      break\n    case \"order_received\":\n      cardTitle = t(\"settings.mail.templates.order_received.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.order_received.help_subject\"),\n        title: t(\"settings.mail.templates.order_received.help_title\"),\n        description: t(\"settings.mail.templates.order_received.help_description\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        content: t(\"settings.mail.templates.order_received.help_content\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        comments: t(\"settings.mail.templates.order_received.help_comments\"), \n      }\n      break\n    case \"recurring_payment_failed\":\n      cardTitle = t(\"settings.mail.templates.recurring_payment_failed.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.recurring_payment_failed.help_subject\"),\n        title: t(\"settings.mail.templates.recurring_payment_failed.help_title\"),\n        description: t(\"settings.mail.templates.recurring_payment_failed.help_description\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        content: t(\"settings.mail.templates.recurring_payment_failed.help_content\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        comments: t(\"settings.mail.templates.recurring_payment_failed.help_comments\"), \n      }\n      break\n      break\n    case \"system_footer\":\n      cardTitle = t(\"settings.mail.templates.system_footer.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.system_footer.help_subject\"),\n        title: t(\"settings.mail.templates.system_footer.help_title\"),\n        description: t(\"settings.mail.templates.system_footer.help_description\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        content: t(\"settings.mail.templates.system_footer.help_content\", {\n          interpolation: { prefix: \"%%\", suffix: \"%%\" }\n        }),\n        comments: t(\"settings.mail.templates.system_footer.help_comments\"), \n      }\n      break\n    default:\n      cardTitle = t(\"settings.mail.templates.not_found.title\")\n      helpTexts = {\n        subject: t(\"settings.mail.templates.not_found.help_subject\"),\n        title: t(\"settings.mail.templates.not_found.help_title\"),\n        description: t(\"settings.mail.templates.not_found.help_description\"),\n        content: t(\"settings.mail.templates.not_found.help_content\"),\n        comments: t(\"settings.mail.templates.not_found.help_comments\"),\n      }\n  }\n\n\n  return {\n    \"cardTitle\": cardTitle,\n    \"helpTexts\": helpTexts,\n  }\n}\n\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SHOP_FEATURES_QUERY = gql`\n  query SystemFeatureShop {\n    systemFeatureShop(id: \"U3lzdGVtRmVhdHVyZVNob3BOb2RlOjE=\") {\n      memberships\n      subscriptions\n      classpasses\n      classes\n      events\n    }\n  }\n`\n\n\nexport const UPDATE_SHOP_FEATURES = gql`\n  mutation UpdateSystemFeatureShop($input: UpdateSystemFeatureShopInput!) {\n    updateSystemFeatureShop(input: $input) {\n      systemFeatureShop {\n        id\n      }\n    }\n  }\n`","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const SHOP_FEATURES_SCHEMA = Yup.object().shape({\n    subscriptions: Yup.boolean(),\n    classpasses: Yup.boolean(),\n    classes: Yup.boolean(),\n    events: Yup.boolean(),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\nimport { v4 } from 'uuid'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsShopFeaturesForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n        {/* <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"memberships\" \n              checked={values.memberships} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.memberships')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"memberships\" component=\"div\" />   \n        </Form.Group>   */}\n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"subscriptions\" \n              checked={values.subscriptions} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.subscriptions')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"subscriptions\" component=\"div\" />   \n        </Form.Group>  \n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"classpasses\" \n              checked={values.classpasses} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.classpasses')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"classpasses\" component=\"div\" />   \n        </Form.Group>  \n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"classes\" \n              checked={values.classes} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.classes')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"classes\" component=\"div\" />   \n        </Form.Group>  \n        <Form.Group>\n          <Form.Label className=\"custom-switch\">\n              <Field \n              className=\"custom-switch-input\"\n              type=\"checkbox\" \n              name=\"events\" \n              checked={values.events} />\n              <span className=\"custom-switch-indicator\" ></span>\n              <span className=\"custom-switch-description\">{t('general.events')}</span>\n          </Form.Label>\n          <ErrorMessage name=\"events\" component=\"div\" />   \n        </Form.Group>  \n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsShopFeaturesForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SHOP_FEATURES_QUERY, UPDATE_SHOP_FEATURES } from './queries'\nimport { SHOP_FEATURES_SCHEMA } from './yupSchema'\n\n\nimport {\n  Card,\n  Dimmer,\n} from \"tabler-react\";\nimport SiteWrapper from \"../../../SiteWrapper\"\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsShopFeaturesForm from \"./SettingsShopFeaturesForm\"\n\n\nfunction SettingsShopFeatures({ t, match, history }) {\n  const headerSubTitle = t(\"settings.shop.features.title\")\n  const cardTitle = t(\"settings.shop.features.title\")\n  const sidebarActive = \"general\"\n\n  const { loading, error, data } = useQuery(GET_SHOP_FEATURES_QUERY)\n  const [ updateSettings ] = useMutation(UPDATE_SHOP_FEATURES)\n\n  console.log('query data app settings')\n  console.log(data)\n\n  if (loading) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (error) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n          sidebarActive={sidebarActive}>  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  const shopFeatures = data.systemFeatureShop\n  \n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n      sidebarActive={sidebarActive}\n    >  \n    <Formik\n      initialValues={{ \n        memberships: shopFeatures.memberships,\n        subscriptions: shopFeatures.subscriptions,\n        classpasses: shopFeatures.classpasses,\n        classes: shopFeatures.classes,\n        events: shopFeatures.events,\n      }}\n      validationSchema={SHOP_FEATURES_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          updateSettings({ variables: {\n            input: {\n              memberships: values.memberships,\n              subscriptions: values.subscriptions,\n              classpasses: values.classpasses,\n              classes: values.classes,\n              events: values.events\n            }\n          }, refetchQueries: [\n              {query: GET_SHOP_FEATURES_QUERY}\n          ]})\n          .then(({ data }) => {\n              console.log('got data', data)\n              toast.success((t('settings.general.toast_edit_success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              setSubmitting(false)\n            }).catch((error) => {\n              toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n              })\n              console.log('there was an error sending the query', error)\n              setSubmitting(false)\n            })\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsShopFeaturesForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsShopFeaturesForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsShopFeatures))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsWorkflowClassBookingForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.workflow.class_booking.book_days_advance')}>\n            <Field type=\"text\" \n              name=\"workflow_class_book_days_advance\" \n              className={(errors.workflow_class_book_days_advance) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"workflow_class_book_days_advance\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('settings.workflow.class_booking.cancel_until')}>\n            <Field type=\"text\" \n              name=\"workflow_class_cancel_until\" \n              className={(errors.workflow_class_cancel_until) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"workflow_class_cancel_until\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsWorkflowClassBookingForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Card,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsWorkflowClassBookingForm from \"./SettingsWorkflowClassBookingForm\"\n\n\nfunction SettingsWorkflowClassBooking({ t, match, history }) {\n  const headerSubTitle = t('settings.workflow.title')\n  const cardTitle = t(\"settings.workflow.class_booking.title\")\n\n  const { \n    loading: loadingDaysAdvance, \n    error: errorDaysAdvance, \n    data: dataDaysAdvance \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"workflow_class_book_days_advance\"\n    }\n  })\n  const { \n    loading: loadingCancelUntil, \n    error: errorCancelUntil, \n    data: dataCancelUntil \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"workflow_class_cancel_until\"\n    }\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  if ((loadingDaysAdvance) || (loadingCancelUntil)) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if ((errorDaysAdvance) || errorCancelUntil) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data app settings')\n  console.log(dataDaysAdvance)\n  console.log(dataCancelUntil)\n\n  let initialValues = {\n    workflow_class_book_days_advance: \"30\",\n    workflow_class_cancel_until: \"2\"\n  }\n  if (dataDaysAdvance.systemSettings.edges.length){\n    initialValues['workflow_class_book_days_advance'] = dataDaysAdvance.systemSettings.edges[0].node.value\n  } \n  if (dataCancelUntil.systemSettings.edges.length){\n    initialValues['workflow_class_cancel_until'] = dataCancelUntil.systemSettings.edges[0].node.value\n  } \n    \n\n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n    >  \n    <Formik\n      initialValues={{ \n        workflow_class_book_days_advance: initialValues['workflow_class_book_days_advance'],\n        workflow_class_cancel_until: initialValues['workflow_class_cancel_until']\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          const settings = [\n            { setting: \"workflow_class_book_days_advance\", value: values.workflow_class_book_days_advance },\n            { setting: \"workflow_class_cancel_until\", value: values.workflow_class_cancel_until },\n          ]\n\n          let error = false\n\n          for (let i in settings) {\n\n            console.log(i)\n            console.log(settings[i].setting)\n            console.log(settings[i].value)\n\n            updateSettings({ variables: {\n              input: {\n                setting: settings[i].setting,\n                value: settings[i].value,\n              }\n            }, refetchQueries: [\n                {query: GET_SYSTEM_SETTINGS_QUERY, variables: { setting: settings[i].setting }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('settings.general.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsWorkflowClassBookingForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsWorkflowClassBookingForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsWorkflowClassBooking))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsWorkflowSubscriptionPausesForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.workflow.subscription_pauses.min_duration_in_days')}>\n            <Field type=\"text\" \n              name=\"workflow_subscription_pauses_min_duration_in_days\" \n              className={(errors.workflow_subscription_pauses_min_duration_in_days) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"workflow_subscription_pauses_min_duration_in_days\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n          <Form.Group label={t('settings.workflow.subscription_pauses.max_pauses_in_year')}>\n            <Field type=\"text\" \n              name=\"workflow_subscription_pauses_max_pauses_in_year\" \n              className={(errors.workflow_subscription_pauses_max_pauses_in_year) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"workflow_subscription_pauses_max_pauses_in_year\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsWorkflowSubscriptionPausesForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Card,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsWorkflowSubscriptionPausesForm from \"./SettingsWorkflowSubscriptionPausesForm\"\n\n\nfunction SettingsWorkflowSubscriptionPauses({ t, match, history }) {\n  const headerSubTitle = t('settings.workflow.title')\n  const cardTitle = t(\"settings.workflow.subscription_pauses.title\")\n\n  const { \n    loading: loadingMinDuration, \n    error: errorMinDuration, \n    data: dataMinDuration \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"workflow_subscription_pauses_min_duration_in_days\"\n    }\n  })\n  const { \n    loading: loadingMaxPauses, \n    error: errorMaxPauses, \n    data: dataMaxPauses \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"workflow_subscription_pauses_max_pauses_in_year\"\n    }\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  if ((loadingMinDuration) || (loadingMaxPauses)) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if ((errorMinDuration) || errorMaxPauses) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data app settings')\n  console.log(dataMinDuration)\n  console.log(dataMaxPauses)\n\n  let initialValues = {\n    workflow_subscription_pauses_min_duration_in_days: \"1\",\n    workflow_subscription_pauses_max_pauses_in_year: \"1\"\n  }\n\n  if (dataMinDuration.systemSettings.edges.length){\n    initialValues['workflow_subscription_pauses_min_duration_in_days'] = dataMinDuration.systemSettings.edges[0].node.value\n  } \n  if (dataMaxPauses.systemSettings.edges.length){\n    initialValues['workflow_subscription_pauses_max_pauses_in_year'] = dataMaxPauses.systemSettings.edges[0].node.value\n  } \n\n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n    >  \n    <Formik\n      initialValues={{ \n        workflow_subscription_pauses_min_duration_in_days: initialValues['workflow_subscription_pauses_min_duration_in_days'],\n        workflow_subscription_pauses_max_pauses_in_year: initialValues['workflow_subscription_pauses_max_pauses_in_year']\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          const settings = [\n            { setting: \"workflow_subscription_pauses_min_duration_in_days\", \n              value: values.workflow_subscription_pauses_min_duration_in_days },\n            { setting: \"workflow_subscription_pauses_max_pauses_in_year\", \n              value: values.workflow_subscription_pauses_max_pauses_in_year },\n          ]\n\n          let error = false\n\n          for (let i in settings) {\n\n            console.log(i)\n            console.log(settings[i].setting)\n            console.log(settings[i].value)\n\n            updateSettings({ variables: {\n              input: {\n                setting: settings[i].setting,\n                value: settings[i].value,\n              }\n            }, refetchQueries: [\n                {query: GET_SYSTEM_SETTINGS_QUERY, variables: { setting: settings[i].setting }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('settings.general.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsWorkflowSubscriptionPausesForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsWorkflowSubscriptionPausesForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsWorkflowSubscriptionPauses))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n} from \"tabler-react\"\n\n\nconst SettingsWorkflowTrialForm = ({ t, history, isSubmitting, errors, values, return_url }) => (\n  <FoForm>\n      <Card.Body>\n          <Form.Group label={t('settings.workflow.trial.trial_pass_limit')}>\n            <Field type=\"text\" \n              name=\"workflow_trial_pass_limit\" \n              className={(errors.workflow_trial_pass_limit) ? \"form-control is-invalid\" : \"form-control\"} \n              autoComplete=\"off\" />\n            <ErrorMessage name=\"workflow_trial_pass_limit\" component=\"span\" className=\"invalid-feedback\" />\n          </Form.Group>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          {/* <Link to={return_url}>\n            <Button \n              type=\"button\" \n              color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link> */}\n      </Card.Footer>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(SettingsWorkflowTrialForm))","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { GET_SYSTEM_SETTINGS_QUERY, UPDATE_SYSTEM_SETTING } from '../../queries'\n\nimport {\n  Dimmer,\n  Card,\n} from \"tabler-react\";\nimport HasPermissionWrapper from \"../../../HasPermissionWrapper\"\n\n// import FinancePaymentMethodForm from './AppSettingsGeneralForm'\nimport SettingsBase from \"../../SettingsBase\"\nimport SettingsWorkflowTrialForm from \"./SettingsWorkflowTrialForm\"\n\n\nfunction SettingsWorkflowClassBooking({ t, match, history }) {\n  const headerSubTitle = t('settings.workflow.title')\n  const cardTitle = t(\"settings.workflow.class_booking.title\")\n\n  const { \n    loading: loadingTrialClassLimit, \n    error: errorTrialClassLimit, \n    data: dataTrialClassLimit \n  } = useQuery(GET_SYSTEM_SETTINGS_QUERY, {\n    variables: {\n      setting: \"workflow_trial_pass_limit\"\n    }\n  })\n  const [ updateSettings, { data: updateData }] = useMutation(UPDATE_SYSTEM_SETTING)\n\n  if (loadingTrialClassLimit) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          <Dimmer active={true}\n                  loader={true}>\n          </Dimmer>\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n  if (errorTrialClassLimit) {\n    return (\n      <SettingsBase \n          headerSubTitle={headerSubTitle}\n          cardTitle={cardTitle}\n      >  \n        <Card.Body>\n          {t(\"settings.general.error_loading\")}\n        </Card.Body>\n      </SettingsBase>\n    )\n  }\n\n  console.log('query data app settings')\n  console.log(dataTrialClassLimit)\n\n  let initialValues = {\n    workflow_trial_pass_limit: \"1\",\n  }\n  if (dataTrialClassLimit.systemSettings.edges.length){\n    initialValues['workflow_trial_pass_limit'] = dataTrialClassLimit.systemSettings.edges[0].node.value\n  } \n    \n  return (\n    <SettingsBase \n      headerSubTitle={headerSubTitle}\n      cardTitle={cardTitle}\n    >  \n    <Formik\n      initialValues={{ \n        workflow_trial_pass_limit: initialValues['workflow_trial_pass_limit'],\n      }}\n      // validationSchema={MOLLIE_SCHEMA}\n      onSubmit={(values, { setSubmitting }, errors) => {\n          console.log('submit values:')\n          console.log(values)\n          console.log(errors)\n\n          const settings = [\n            { setting: \"workflow_trial_pass_limit\", value: values.workflow_trial_pass_limit },\n          ]\n\n          let error = false\n\n          for (let i in settings) {\n\n            console.log(i)\n            console.log(settings[i].setting)\n            console.log(settings[i].value)\n\n            updateSettings({ variables: {\n              input: {\n                setting: settings[i].setting,\n                value: settings[i].value,\n              }\n            }, refetchQueries: [\n                {query: GET_SYSTEM_SETTINGS_QUERY, variables: { setting: settings[i].setting }},\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                toast.success((t('settings.general.toast_edit_success')), {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                setSubmitting(false)\n              }).catch((error) => {\n                toast.error((t('general.toast_server_error')) +  error, {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                })\n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n          }\n      }}\n    >\n      {({ isSubmitting, errors, values }) => (\n        <SettingsWorkflowTrialForm\n          isSubmitting={isSubmitting}\n          errors={errors}\n          values={values}\n        >\n          {console.log(errors)}\n        </SettingsWorkflowTrialForm>\n      )}\n      </Formik>\n    </SettingsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(SettingsWorkflowClassBooking))","// @flow\n\nimport * as React from \"react\"\nimport { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { NavLink, withRouter } from \"react-router-dom\"\nimport { useQuery } from \"@apollo/client\"\nimport { ToastContainer, Slide } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport { Link } from 'react-router-dom'\n\nimport { GET_SHOP_FEATURES_QUERY } from \"../components/settings/shop/features/queries\"\nimport OrganizationContext from './context/OrganizationContext'\nimport CSLS from \"../tools/cs_local_storage\"\nimport { get_all_permissions, has_permission } from \"../tools/user_tools\"\n\n\nimport {\n  Site,\n  Nav,\n  Grid,\n  Button,\n  // Page,\n  RouterContextProvider,\n} from \"tabler-react\";\n\nimport type { NotificationProps } from \"tabler-react\";\n\ntype Props = {|\n  +children: React.Node,\n|};\n\ntype State = {|\n  notificationsObjects: Array<NotificationProps>,\n|};\n\ntype subNavItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +LinkComponent?: React.ElementType,\n|};\n\ntype navItem = {|\n  +value: string,\n  +to?: string,\n  +icon?: string,\n  +active?: boolean,\n  +LinkComponent?: React.ElementType,\n  +subItems?: Array<subNavItem>,\n  +useExact?: boolean,\n|};\n\n\nconst getNavBarItems = (t, loading, error, data) => {\n  const shopFeatures = data.systemFeatureShop\n\n  let items: Array<navItem> = []\n  // let permissions = get_all_permissions(user)\n\n  if (loading) {\n    items.push({\n      value: t(\"general.loading_with_dots\"),\n      to: \"/\",\n      icon: \"\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true, \n    })\n\n    return items\n  }\n\n  if (error) {\n    items.push({\n      value: t(\"general.error_sad_smiley\"),\n      to: \"/\",\n      icon: \"\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true, \n    })\n\n    return items\n  }\n\n  items.push({\n    value: t(\"shop.home.title\"),\n    to: \"/\",\n    icon: \"home\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  })\n\n\n  if (shopFeatures.subscriptions) {\n    items.push({\n      value: t(\"shop.subscriptions.title\"),\n      to: \"/shop/subscriptions\",\n      icon: \"edit\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true,\n    })\n  }\n\n  if (shopFeatures.classpasses) {\n    items.push({\n      value: t(\"shop.classpasses.title\"),\n      to: \"/shop/classpasses\",\n      icon: \"credit-card\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true,\n    })\n  }\n\n  if (shopFeatures.classes) {\n    items.push({\n      value: t(\"shop.classes.title\"),\n      to: \"/shop/classes\",\n      icon: \"book\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true,\n    })\n  }\n\n  if (shopFeatures.events) {\n    items.push({\n      value: t(\"shop.events.title\"),\n      to: \"/shop/events\",\n      icon: \"calendar\",\n      LinkComponent: withRouter(NavLink),\n      useExact: true,\n    })\n  }\n\n  items.push({\n    value: t(\"shop.contact.title\"),\n    to: \"/shop/contact\",\n    icon: \"message-square\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  })\n\n  // Check if refresh token is present and if so, hasn't expired\n  const refreshTokenExp = localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN_EXP)\n  let accountTitle = t(\"shop.account.title\")\n  let accountLink = \"/shop/account\"\n  if (new Date() / 1000 >= refreshTokenExp || refreshTokenExp == null ) {\n    accountTitle = t(\"general.sign_in\")\n    accountLink = \"/user/login\"\n  }\n\n  items.push({\n    value: accountTitle,\n    to: accountLink,\n    icon: \"user\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  })\n\n  return items\n}\n\nfunction getHeaderImageUrl(organization) {\n  let imageURL = \"/d/static/logos/stock/logo_stock_backend.png\"\n\n  if (organization) {\n    if (organization.urlLogoShopHeader) {\n      imageURL = organization.urlLogoShopHeader\n    }\n  }\n\n  return imageURL\n}\n\nconst now = new Date()\n\nfunction SiteWrapperShop({t, match, history, children}) {\n  const { loading, error, data } = useQuery(GET_SHOP_FEATURES_QUERY)\n  const organization = useContext(OrganizationContext)\n  console.log(organization)\n  // const { error, loading, data, fetchMore } = useQuery(GET_USER)\n\n  if (loading) return <p>{t('general.loading_with_dots')}</p>;\n  if (error) return <p>{t('system.user.error_loading')}</p>; \n\n  console.log(data)\n\n  const headerImageUrl = getHeaderImageUrl(organization)\n\n  return (\n    <Site.Wrapper\n      headerProps={{\n          href: \"/\",\n          alt: \"Costasiella\",\n          imageURL: headerImageUrl, // Set logo url here\n          navItems: (\n            <Nav.Item type=\"div\" className=\"d-none d-md-flex\">\n              {(data.user) ? (data.user.teacher || data.user.employee) ? <Link to=\"/user/welcome\">\n                <Button\n                  className=\"mr-2\"\n                  icon=\"link\"\n                  outline\n                  size=\"sm\"\n                  color=\"primary\"\n                >\n                  {t('goto.title')}\n                </Button>\n              </Link> : \"\" : \"\"}\n            </Nav.Item>\n          ),\n          \n          // notificationsTray: {\n          //   notificationsObjects,\n          //   markAllAsRead: () =>\n          //     this.setState(\n          //       () => ({\n          //         notificationsObjects: this.state.notificationsObjects.map(\n          //           v => ({ ...v, unread: false })\n          //         ),\n          //       }),\n          //       () =>\n          //         setTimeout(\n          //           () =>\n          //             this.setState({\n          //               notificationsObjects: this.state.notificationsObjects.map(\n          //                 v => ({ ...v, unread: true })\n          //               ),\n          //             }),\n          //           5000\n          //         )\n          //     ),\n          //   unread: unreadCount,\n          // },\n        //   accountDropdown: {\n        //   avatarURL: \"#\",\n        //   name: data.user.firstName + ' ' + data.user.lastName,\n        //   description: \"\",\n        //   options: [\n        //     // { icon: \"user\", value: \"Profile\" },\n        //     { icon: \"lock\", value: \"Change password\", to: \"/#/user/password/change/\" },\n        //     { isDivider: true },\n        //     { icon: \"log-out\", value: \"Sign out\", to: \"/#/user/logout/\" },\n        //   ],\n        // },\n        }}\n        // navProps={{ itemsObjects: navBarItems }}\n        navProps={{ itemsObjects: getNavBarItems(t, loading, error, data) }}\n        routerContextComponentType={withRouter(RouterContextProvider)}\n        footerProps={{\n          // links: [\n          //   <a href=\"#\">First Link</a>,\n          //   <a href=\"#\">Second Link</a>,\n          //   <a href=\"#\">Third Link</a>,\n          //   <a href=\"#\">Fourth Link</a>,\n          //   <a href=\"#\">Five Link</a>,\n          //   <a href=\"#\">Sixth Link</a>,\n          //   <a href=\"#\">Seventh Link</a>,\n          //   <a href=\"#\">Eigth Link</a>,\n          // ],\n          // note:\n          //   \"Premium and Open Source dashboard template with responsive and high quality UI. For Free!\",\n          copyright: (\n            <React.Fragment>\n              Copyleft © {now.getFullYear()}.\n              <a\n                href=\"https://www.costasiella.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {\" \"}\n                Edwin van de Ven\n              </a>{\". \"}\n              All rights reserved.\n            </React.Fragment>\n          ),\n          nav: (\n            <React.Fragment>\n              <Grid.Col auto={true}>\n                {/* <List className=\"list-inline list-inline-dots mb-0\">\n                  <List.Item className=\"list-inline-item\">\n                    <a href=\"./docs/index.html\">Documentation</a>\n                  </List.Item>\n                  <List.Item className=\"list-inline-item\">\n                    <a href=\"./faq.html\">FAQ</a>\n                  </List.Item>\n                </List> */}\n              </Grid.Col>\n              <Grid.Col auto={true}>\n                {/* <Button\n                  href=\"https://github.com/tabler/tabler-react\"\n                  size=\"sm\"\n                  outline\n                  color=\"primary\"\n                  RootComponent=\"a\"\n                >\n                  Source code\n                </Button> */}\n              </Grid.Col>\n            </React.Fragment>\n          ),\n        }}\n      >\n      {children}\n      <ToastContainer \n        autoClose={5000} \n        transition={Slide}\n      />\n    </Site.Wrapper>    \n  )\n}\n\n\nexport default withTranslation()(SiteWrapperShop)\n","import { gql } from \"@apollo/client\"\n\nconst GET_USER_PROFILE = gql`\n  query User {\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n      teacher\n      employee\n    }\n  }\n`\n\nexport default GET_USER_PROFILE","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\n\n\nfunction ShopAccountHomeBase({ t, match, history, children, subTitle=\"\" }) {\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"shop.account.title\")} subTitle={subTitle}/>\n          { children }\n        </Container>\n      </div>\n    </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountHomeBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\n\n\nfunction ShopAccountHomeButton({ t, link, buttonText }) {\n  return (\n    <Link to={link} >\n      <Button \n        outline\n        block\n        color=\"primary\"\n      >\n        {buttonText} <Icon name=\"chevron-right\" />\n      </Button>\n    </Link>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountHomeButton))","// @flow\n\nimport React, {Component } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountHomeBase from \"./ShopAccountHomeBase\"\nimport ShopAccountHomeButton from \"./ShopAccountHomeButton\"\n\n\nfunction ShopAccountHome({t, match, history}) {\n  const { loading, error, data } = useQuery(GET_USER_PROFILE)\n\n  if (loading) return (\n    <ShopAccountHomeBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountHomeBase>\n  )\n  if (error) return (\n    <ShopAccountHomeBase>\n      {t(\"shop.account.error_loading_user_data\")}\n    </ShopAccountHomeBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = data.user\n\n  return (\n    <ShopAccountHomeBase subTitle={user.fullName}>\n      {(user.teacher || user.employee) ?\n        <div>\n          <Grid.Row>\n            <Grid.Col md={4} lg={4}>\n              <Card>\n                <Card.Body>\n                  <h5>{t(\"goto.title\")}</h5>\n                  {t(\"shop.account.goto.explanation\")}\n                  <br /><br />\n                  <ShopAccountHomeButton link=\"/user/welcome\" buttonText={t(\"shop.account.btn_go_to\")} />\n                </Card.Body>\n              </Card>\n            </Grid.Col>\n          </Grid.Row> \n          <hr />\n        </div>\n        : \"\"\n      } \n      <Grid.Row>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.classes.title\")}</h5>\n              {t(\"shop.account.classes.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/classes\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.subscriptions.title\")}</h5>\n              {t(\"shop.account.subscriptions.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/subscriptions\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.classpasses.title\")}</h5>\n              {t(\"shop.account.classpasses.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/classpasses\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.event_tickets.title\")}</h5>\n              {t(\"shop.account.event_tickets.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/event_tickets\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n      <hr />\n      {/* Administrative stuff below this point, profile, invoices, orders, etc. */}\n      <Grid.Row>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.profile.title\")}</h5>\n              {t(\"shop.account.profile.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/profile\" buttonText={t(\"shop.account.btn_text_profile_edit\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.orders.title\")}</h5>\n              {t(\"shop.account.orders.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/orders\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.invoices.title\")}</h5>\n              {t(\"shop.account.invoices.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/shop/account/invoices\" buttonText={t(\"shop.account.btn_text_view\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.change_password.title\")}</h5>\n              {t(\"shop.account.change_password.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/user/password/change/\" buttonText={t(\"shop.account.btn_text_change_password\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4} lg={4}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.account.sign_out.title\")}</h5>\n              {t(\"shop.account.sign_out.explanation\")}\n              <br /><br />\n              <ShopAccountHomeButton link=\"/user/logout/\" buttonText={t(\"shop.account.btn_text_sign_out\")} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountHomeBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountHome))","import React from 'react'\nimport moment from 'moment'\nimport { TimeStringToJSDateOBJ } from '../../tools/date_tools'\n\n\nexport function DisplayClassInfo({t, classDate, classData, dateFormat, timeFormat }) {\n    return (\n      <div>\n        <b>\n          {moment(classDate).format(dateFormat)} {' '}\n          {moment(TimeStringToJSDateOBJ(classData.scheduleClass.timeStart)).format(timeFormat)} {' - '}\n          {moment(TimeStringToJSDateOBJ(classData.scheduleClass.timeEnd)).format(timeFormat)} <br />  \n        </b>\n        {classData.scheduleClass.organizationClasstype.name + \" \" + t(\"general.at\") + ' ' + \n          classData.scheduleClass.organizationLocationRoom.organizationLocation.name}\n      </div>\n    )\n}","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ACCOUNT_CLASS_QUERY = gql`\n  query ScheduleItemAttendance($scheduleItemId:ID!, $date:Date!, $id: ID!) {\n    scheduleClass(scheduleItemId: $scheduleItemId, date:$date) {\n      scheduleItemId\n      frequencyType\n      date\n      organizationClasstype {\n        name\n      }\n      organizationLocationRoom {\n        organizationLocation {\n          name\n        }\n      }\n          timeStart\n      timeEnd\n      infoMailContent\n    }\n    scheduleItemAttendance(id: $id) {\n      id\n      cancellationPossible\n      attendanceType\n      date\n      bookingStatus\n      scheduleItem {\n        id\n        timeStart\n        timeEnd\n        organizationLocationRoom {\n          name\n          organizationLocation {\n            name\n          }\n        }\n        organizationClasstype {\n          name\n        }\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Container,\n  Icon,\n  Page\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\n\n\nfunction ShopAccountClassCancelBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header \n              title={t(\"shop.account.title\")} \n              subTitle={ accountName }\n            >\n              <div className=\"page-options d-flex\">\n                <Link to={\"/shop/account/classes\"}\n                      className='btn btn-secondary'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')} \n                </Link>\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountClassCancelBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table\n} from \"tabler-react\"\n\nimport { DisplayClassInfo } from \"../../tools\"\nimport { UPDATE_SCHEDULE_ITEM_ATTENDANCE } from \"../../../schedule/classes/class/attendance/queries\"\nimport { GET_ACCOUNT_CLASS_QUERY } from \"./queries\"\n// import { GET_SCHEDULE_CLASS_QUERY } from \"../../checkout/class_info/queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\nimport ShopAccountClassCancelBase from \"./ShopAccountClassCancelBase\"\n\n\n\nfunction ShopAccountClassCancel({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const attendanceId = match.params.attendance_id\n  const scheduleItemId = match.params.class_id\n  const date = match.params.date\n  const { loading: loadingAttendance, error: errorAttendance, data: dataAttendance } = useQuery(GET_ACCOUNT_CLASS_QUERY, {\n    variables: { \n      id: attendanceId,\n      scheduleItemId: scheduleItemId,\n      date: date\n    }\n  })\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const [updateScheduleItemAttendance] = useMutation(UPDATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loadingUser || loadingAttendance) return (\n    <ShopAccountClassCancelBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountClassCancelBase>\n  )\n  if (errorUser || errorAttendance) return (\n    <ShopAccountClassCancelBase>\n      {t(\"shop.account.class_info.error_loading_data\")}\n    </ShopAccountClassCancelBase>\n  )\n\n  const user = dataUser.user\n  console.log(dataUser)\n  console.log(dataAttendance)\n  const scheduleItemAttendance = dataAttendance.scheduleItemAttendance\n\n  // Booking already cancelled\n  if (scheduleItemAttendance.bookingStatus == 'CANCELLED') {\n    return (\n      <ShopAccountClassCancelBase accountName={user.fullName}>\n        <Card title={t(\"shop.account.class_cancel.title_already_cancelled\")}>\n          <Card.Body>\n            <h5>{t(\"shop.account.class_cancel.already_cancelled\")}</h5>\n          </Card.Body>\n        </Card>\n      </ShopAccountClassCancelBase>\n    )\n  }\n\n  // Cancellation no longer possible\n  if (!scheduleItemAttendance.cancellationPossible) {\n    return (\n      <ShopAccountClassCancelBase accountName={user.fullName}>\n        <Card title={t(\"shop.account.class_cancel.title_cancelation_not_possible\")}>\n          <Card.Body>\n            <h5>{t(\"shop.account.class_cancel.cancelation_not_possible\")}</h5>\n          </Card.Body>\n        </Card>\n      </ShopAccountClassCancelBase>\n    )\n  }\n\n  // Show cancel option\n  return (\n    <ShopAccountClassCancelBase accountName={user.fullName}>\n      <Card title={t(\"shop.account.class_cancel.title\")}>\n        <Card.Body>\n          {/* TODO: Check if class already cancelled */}\n          <h5>\n            {t(\"shop.account.class_cancel.confirmation_question\")}\n          </h5>\n            <DisplayClassInfo\n              t={t}\n              classDate={date}\n              classData={dataAttendance}\n              dateFormat={dateFormat}\n              timeFormat={timeFormat}\n            />\n            <br />\n            <Button\n              className=\"mr-4\"\n              color=\"warning\"\n              onClick={() =>\n                updateScheduleItemAttendance({ variables: {\n                  input: {\n                    id: attendanceId,\n                    bookingStatus: \"CANCELLED\"\n                  }\n                }})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    history.push(\"/shop/account/classes\")\n                    toast.success((t('shop.account.class_cancel.success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                  })\n                }\n            >\n              {t(\"shop.account.class_cancel.confirm_yes\")}\n            </Button>\n            <Link to={\"/shop/account/classes\"}>\n              {t(\"shop.account.class_cancel.confirm_no\")}\n            </Link>\n        </Card.Body>\n      </Card>\n    </ShopAccountClassCancelBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountClassCancel))\n\n\n{/* <Button \nclassName=\"pull-right\"\ncolor=\"warning\"\nonClick={() =>\n  updateAccountScheduleEventTicket({ variables: {\n    input: {\n      id: node.id,\n      cancelled: true\n    }\n  }, refetchQueries: [\n      {query: GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, variables: {\n        scheduleEventTicket: id\n      }},\n  ]})\n  .then(({ data }) => {\n      console.log('got data', data);\n      toast.success((t('schedule.events.tickets.customers.cancelled')), {\n          position: toast.POSITION.BOTTOM_RIGHT\n        })\n      setShowSearch(false)\n    }).catch((error) => {\n      toast.error((t('general.toast_server_error')) +  error, {\n          position: toast.POSITION.BOTTOM_RIGHT\n        })\n      console.log('there was an error sending the query', error)\n      setShowSearch(false)\n    })\n  }\n>\n  {t(\"general.cancel\")}\n</Button> */}","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_CLASS_QUERY = gql`\n  query ScheduleClass($scheduleItemId:ID!, $date:Date!) {\n    scheduleClass(scheduleItemId: $scheduleItemId, date:$date) {\n      scheduleItemId\n      frequencyType\n      date\n      organizationClasstype {\n        name\n      }\n      organizationLocationRoom {\n        organizationLocation {\n          name\n        }\n      }\n          timeStart\n      timeEnd\n      infoMailContent\n    }\n  }\n`\n\n\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { v4 } from 'uuid'\nimport moment from 'moment'\n\nimport {\n  Card,\n  Icon,\n  Table,\n} from \"tabler-react\";\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport { DisplayClassInfo } from \"../../tools\"\nimport { GET_SCHEDULE_CLASS_QUERY } from \"./queries\"\n\n\nfunction ShopCheckoutClassInfo({ t, scheduleItemId, date, complete=true}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n\n  console.log(scheduleItemId)\n  console.log(date)\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_CLASS_QUERY, {\n    variables: { \n      scheduleItemId: scheduleItemId,\n      date: date\n    }\n  })\n\n  if (loading) return (\n      t(\"general.loading_with_dots\")\n  )\n  if (error) return (\n      t(\"shop.checkout.class_info.error_loading\")\n  )\n\n  console.log(data)\n\n  return (\n    (!loading && !error) ?\n      <div className=\"text-muted\">\n        <h5><Icon name=\"book\" /> {\n          (complete) ? t(\"shop.checkout.class_info.have_been_checked_in\")\n                     : t(\"shop.checkout.class_info.will_be_checked_in\") \n        }</h5>\n        {/* Class display info $ mail content */}\n        <DisplayClassInfo \n          t={t} \n          classDate={date}\n          classData={data} \n          dateFormat={dateFormat} \n          timeFormat={timeFormat}\n        />\n        <br />\n        {(data.scheduleClass.infoMailContent) ? \n          <div>\n            <h5><Icon name=\"info\" /> {t(\"shop.checkout.class_info.info_mail\")}</h5>\n            <div dangerouslySetInnerHTML={{ __html: data.scheduleClass.infoMailContent }} /> \n          </div>\n          : \"\"\n        }\n      </div> \n      : \"\"\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutClassInfo))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Container,\n  Icon,\n  Page\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\n\n\nfunction ShopAccountClassInfoBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header \n              title={t(\"shop.account.title\")} \n              subTitle={ accountName }\n            >\n              <div className=\"page-options d-flex\">\n                <Link to={\"/shop/account/classes\"}\n                      className='btn btn-secondary'>\n                  <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')} \n                </Link>\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountClassInfoBase))","// @flow\n\nimport React from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table\n} from \"tabler-react\"\n\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\nimport ShopCheckoutClassInfo from \"../../checkout/class_info/ShopCheckoutClassInfo\"\nimport ShopAccountClassInfoBase from \"./ShopAccountClassInfoBase\"\n\n\n\nfunction ShopAccountClassInfo({t, match, history}) {\n  const { loading, error, data } = useQuery(GET_USER_PROFILE)\n  const scheduleItemId = match.params.class_id\n  const date = match.params.date \n\n  if (loading) return (\n    <ShopAccountClassInfoBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountClassInfoBase>\n  )\n  if (error) return (\n    <ShopAccountClassInfoBase>\n      {t(\"shop.account.class_info.error_loading_data\")}\n    </ShopAccountClassInfoBase>\n  )\n\n  const user = data.user\n\n  // Populated list\n  return (\n    <ShopAccountClassInfoBase accountName={user.fullName}>\n      <Card title={t(\"shop.account.class_info.title\")}>\n        <Card.Body>\n          <ShopCheckoutClassInfo\n            scheduleItemId={scheduleItemId}\n            date={date}\n            complete={true}\n          />\n        </Card.Body>\n      </Card>\n    </ShopAccountClassInfoBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountClassInfo))\n","import { gql } from \"@apollo/client\"\n\n\nexport const QUERY_ACCOUNT_CLASSPASSES = gql`\n  query AccountClasspass($before: String, $after: String, $account: ID!) {\n    accountClasspasses(first: 100, before: $before, after: $after, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          organizationClasspass {\n            name\n          }\n          dateStart\n          dateEnd\n          classesRemainingDisplay\n        }\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport ButtonBack from \"../../ui/ButtonBack\"\n\n\nfunction ShopAccountBack({ t, returnUrl=\"/shop/account\" }) {\n  \n  return (\n    <ButtonBack returnUrl={returnUrl} />\n  )\n}\n\nexport default withTranslation()(ShopAccountBack)\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountProfileBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n          </Page.Header>\n          { children }\n        </Container>\n      </div>\n    </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountProfileBase))","// @flow\n\nimport React, { useContext} from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport {\n  Card,\n  Grid,\n  Table\n} from \"tabler-react\";\nimport { QUERY_ACCOUNT_CLASSPASSES } from \"./queries\"\n\nimport ShopAccountClasspassesBase from \"./ShopAccountClasspassesBase\"\nimport ContentCard from \"../../../general/ContentCard\"\n\n\nfunction ShopAccountClasspasses({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(QUERY_ACCOUNT_CLASSPASSES, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })\n  \n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountClasspassesBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountClasspassesBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountClasspassesBase>\n      {t(\"shop.account.classpasses.error_loading_data\")}\n    </ShopAccountClasspassesBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = data.user\n  const classpasses = data.accountClasspasses\n\n  // Empty list\n  if (!classpasses.edges.length) {\n    return (\n      <ShopAccountClasspassesBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.classpasses.title')} >\n              <Card.Body>\n                {t('shop.account.classpasses.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountClasspassesBase>\n    )  \n  }\n\n  // Populated list\n  return (\n    <ShopAccountClasspassesBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <ContentCard cardTitle={t('shop.account.classpasses.title')}\n            // headerContent={headerOptions}\n            pageInfo={classpasses.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: classpasses.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.accountClasspasses.edges\n                  const pageInfo = fetchMoreResult.accountClasspasses.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        accountClasspasses: {\n                          __typename: previousResult.accountClasspasses.__typename,\n                          edges: [ ...previousResult.accountClasspasses.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.classes_remaining')}</Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {classpasses.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      {node.organizationClasspass.name}\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateStart).format(dateFormat)}\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateEnd).format(dateFormat)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.classesRemainingDisplay}\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </ContentCard>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountClasspassesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountClasspasses))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../SiteWrapperShop\"\nimport ShopAccountBack from \"./ShopAccountBack\"\n\n\nfunction ShopAccountProfileBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n          </Page.Header>\n          { children }\n        </Container>\n      </div>\n    </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountProfileBase))","// @flow\n\nimport React, { useContext} from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport {\n  Badge,\n  Card,\n  Grid,\n  Table\n} from \"tabler-react\";\nimport { GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY } from \"../../../relations/accounts/schedule_event_tickets/queries\"\n\nimport ShopAccountProfileBase from \"../ShopAccountProfileBase\"\nimport ContentCard from \"../../../general/ContentCard\"\n\n\nfunction ShopAccountEventTickets({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_SCHEDULE_EVENT_TICKETS_QUERY, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })  \n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountProfileBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountProfileBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountProfileBase>\n      {t(\"shop.account.event_tickets.error_loading_data\")}\n    </ShopAccountProfileBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(dataUser)\n  const user = dataUser.user\n  const eventTickets = data.accountScheduleEventTickets\n\n  // Empty list\n  if (!eventTickets.edges.length) {\n    return (\n      <ShopAccountProfileBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.event_tickets.title')} >\n              <Card.Body>\n                {t('shop.account.event_tickets.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountProfileBase>\n    )  \n  }\n\n  // Populated list\n  return (\n    <ShopAccountProfileBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <ContentCard cardTitle={t('shop.account.event_tickets.title')}\n            // headerContent={headerOptions}\n            pageInfo={eventTickets.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: eventTickets.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.accountScheduleEventTickets.edges\n                  const pageInfo = fetchMoreResult.accountScheduleEventTickets.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new tickets at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        eventTickets: {\n                          __typename: previousResult.accountScheduleEventTickets.__typename,\n                          edges: [ ...previousResult.accountScheduleEventTickets.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.ticket')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.start')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {eventTickets.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      {node.scheduleEventTicket.scheduleEvent.name} <br />\n                      <Badge>{node.scheduleEventTicket.name}</Badge> {\" \"}\n                      {(node.cancelled) ? <Badge color=\"warning\">{t(\"general.cancelled\")}</Badge> : \"\"}\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.scheduleEventTicket.scheduleEvent.dateStart).format(dateFormat)}\n                    </Table.Col>\n                    <Table.Col>\n                      {node.scheduleEventTicket.scheduleEvent.organizationLocation.name}\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </ContentCard>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountProfileBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountEventTickets))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_INVOICE_QUERY = gql`\n  query FinanceInvoice($id: ID!) {\n    financeInvoice(id:$id) {\n      id\n      account {\n        id\n        fullName\n      }\n      financePaymentMethod {\n        id\n        name\n      }\n      relationCompany\n      relationCompanyRegistration\n      relationCompanyTaxRegistration\n      relationContactName\n      relationAddress\n      relationPostcode\n      relationCity\n      relationCountry\n      status\n      summary\n      invoiceNumber\n      dateSent\n      dateDue\n      terms\n      footer\n      note\n      subtotalDisplay\n      taxDisplay\n      total\n      totalDisplay\n      paidDisplay\n      balance\n      balanceDisplay\n      creditInvoiceNumber\n      updatedAt\n      items {\n        edges {\n          node {\n            id\n            lineNumber\n            productName\n            description\n            quantity\n            price\n            financeTaxRate {\n              id\n              name\n              percentage\n              rateType\n            }\n            subtotal\n            subtotalDisplay\n            tax\n            taxDisplay\n            total\n            totalDisplay\n            financeGlaccount {\n              id\n              name\n            }\n            financeCostcenter {\n              id\n              name\n            }\n          }\n        }\n      }\n      payments {\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            id\n            amount\n            amountDisplay\n            date\n            financePaymentMethod {\n              id\n              name\n            }\n            note\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const CREATE_PAYMENT_LINK = gql`\nmutation CreateFinanceInvoicePaymentLink($id: ID!) {\n  createFinanceInvoicePaymentLink(id: $id) {\n    financeInvoicePaymentLink {\n      paymentLink\n    }\n  }\n}\n`\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountInvoicePaymentBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack returnUrl=\"/shop/account/invoices\"/>\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountInvoicePaymentBase))","// @flow\n\nimport React, { useContext, useRef, useState } from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceInvoicesStatus from \"../../../ui/FinanceInvoiceStatus\"\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table,\n  Text\n} from \"tabler-react\"\nimport { GET_INVOICE_QUERY, CREATE_PAYMENT_LINK } from \"./queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountInvoicePaymentBase from \"./ShopAccountInvoicePaymentBase\"\n\n\nfunction ShopAccountInvoicePayment({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n  const onlinePaymentsAvailable = appSettings.onlinePaymentsAvailable\n\n  const id = match.params.id\n  const cardTitleLoadingError = t(\"shop.account.invoice_payment.title\")\n\n  const btnPayNow = useRef(null);\n  const initialBtnText = <span><Icon name=\"credit-card\" /> {t('shop.checkout.payment.to_payment')} <Icon name=\"chevron-right\" /></span>\n  const [btn_text, setBtnText] = useState(initialBtnText)\n\n  // Chain queries. First query user data and then query invoices for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(GET_INVOICE_QUERY, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      id: id\n    }\n  })\n\n  const [createPaymentLink] = useMutation(CREATE_PAYMENT_LINK)\n\n  function onClickPay() {\n    btnPayNow.current.setAttribute(\"disabled\", \"disabled\")\n    setBtnText(t(\"shop.checkout.payment.redirecting\"))\n    // btnPayNow.current.setValue(\"redirecting...\")\n    // btnPayNow\n    // btnPayNow.current.removeAttribute(\"disabled\")\n    createPaymentLink({ variables: { id: id } }).then(({ data }) => {\n      console.log('got data', data);\n      const paymentLink = data.createFinanceInvoicePaymentLink.financeInvoicePaymentLink.paymentLink\n      window.location.href = paymentLink\n    }).catch((error) => {\n      toast.error((t('general.toast_server_error')) +  error, {\n          position: toast.POSITION.BOTTOM_RIGHT\n        })\n      console.log('there was an error sending the query', error)\n    })\n  }\n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountInvoicePaymentBase>\n      <Card title={cardTitleLoadingError}>\n        <Card.Body>\n          {t(\"general.loading_with_dots\")}\n        </Card.Body>\n      </Card>\n    </ShopAccountInvoicePaymentBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountInvoicePaymentBase>\n      <Card title={cardTitleLoadingError}>\n        <Card.Body>\n          {t(\"shop.account.invoice_payment.error_loading_data\")}\n        </Card.Body>\n      </Card>\n    </ShopAccountInvoicePaymentBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = dataUser.user\n  const invoice = data.financeInvoice\n\n  \n  return (\n    <ShopAccountInvoicePaymentBase accountName={user.fullName}>\n      <Card title={<span>{t(\"general.invoice\")} #{invoice.invoiceNumber}</span>}>\n        <Card.Body>\n          { invoice.items.edges.map(({ node }) => (\n            <Grid.Row>\n              <Grid.Col md={9}>\n                {node.productName} <br />\n                <small className=\"text-muted\">\n                  {node.description}\n                </small>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <span className=\"float-right\">\n                  {node.totalDisplay}\n                </span>\n              </Grid.Col>\n            </Grid.Row>\n          ))}\n          {/* Total */}\n          <Grid.Row>\n            <Grid.Col md={9} className=\"bold\">\n              <br />\n              {t(\"general.total\")}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <span className=\"bold float-right\">\n                <br />\n                {invoice.totalDisplay}\n              </span>\n            </Grid.Col>\n          </Grid.Row>\n        </Card.Body>\n        <Card.Footer>\n          <button\n            className=\"btn float-right btn-success\"\n            ref={btnPayNow}\n            onClick={ onClickPay }\n          >\n            {btn_text}\n          </button>\n        </Card.Footer>\n      </Card>\n    </ShopAccountInvoicePaymentBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountInvoicePayment))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountInvoicePaymentStatusBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              {/* <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div> */}\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountInvoicePaymentStatusBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceInvoicesStatus from \"../../../ui/FinanceInvoiceStatus\"\n\nimport {\n  Alert,\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table,\n  Text\n} from \"tabler-react\"\nimport { GET_INVOICE_QUERY } from \"../invoice_payment/queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountInvoicePaymentStatusBase from \"./ShopAccountInvoicePaymentStatusBase\"\n\n\nfunction ShopAccountInvoicePaymentStatus({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n  const onlinePaymentsAvailable = appSettings.onlinePaymentsAvailable\n\n  const id = match.params.id\n  const cardTitleLoadingError = t(\"shop.account.invoice_payment.title\")\n\n  // Chain queries. First query user data and then query invoices for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(GET_INVOICE_QUERY, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      id: id\n    }\n  })\n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountInvoicePaymentStatusBase>\n      <Card title={cardTitleLoadingError}>\n        <Card.Body>\n          {t(\"general.loading_with_dots\")}\n        </Card.Body>\n      </Card>\n    </ShopAccountInvoicePaymentStatusBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountInvoicePaymentStatusBase>\n      <Card title={cardTitleLoadingError}>\n        <Card.Body>\n          {t(\"shop.account.invoice_payment_status.error_loading_data\")}\n        </Card.Body>\n      </Card>\n    </ShopAccountInvoicePaymentStatusBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = dataUser.user\n  const invoice = data.financeInvoice\n\n  let alert\n  if (invoice.status == \"PAID\") {\n    alert = <Alert type=\"success\" icon=\"check\">\n      {t(\"shop.account.invoice_payment_status.payment_received\")}\n    </Alert>\n  } else {\n    alert = <Alert type=\"primary\" icon=\"help-circle\">\n      {t(\"shop.account.invoice_payment_status.payment_not_confirmed\")}\n    </Alert>\n  }\n\n  \n  return (\n    <ShopAccountInvoicePaymentStatusBase accountName={user.fullName}>\n      {alert}\n      <Card title={<span>{t(\"general.invoice\")} #{invoice.invoiceNumber}</span>}>\n        <Card.Body>\n          { invoice.items.edges.map(({ node }) => (\n            <Grid.Row>\n              <Grid.Col md={9}>\n                {node.productName} <br />\n                <small className=\"text-muted\">\n                  {node.description}\n                </small>\n              </Grid.Col>\n              <Grid.Col md={3}>\n                <span className=\"float-right\">\n                  {node.totalDisplay}\n                </span>\n              </Grid.Col>\n            </Grid.Row>\n          ))}\n          {/* Total */}\n          <Grid.Row>\n            <Grid.Col md={9} className=\"bold\">\n              <br />\n              {t(\"general.total\")}\n            </Grid.Col>\n            <Grid.Col md={3}>\n              <span className=\"bold float-right\">\n                <br />\n                {invoice.totalDisplay}\n              </span>\n            </Grid.Col>\n          </Grid.Row>\n        </Card.Body>\n        <Card.Footer>\n          <Link to=\"/shop/account/invoices\">\n            <Button \n              color=\"primary\"\n              className=\"float-right\"\n            >\n              {t(\"shop.account.invoice_payment_status.to_profile\")} <Icon name=\"chevron-right\" />\n            </Button>\n          </Link>\n        </Card.Footer>\n      </Card>\n    </ShopAccountInvoicePaymentStatusBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountInvoicePaymentStatus))","import { gql } from \"@apollo/client\"\n\n\nexport const QUERY_ACCOUNT_INVOICES = gql`\n  query FinanceInvoices($after: String, $before: String, $account: ID!) {\n    financeInvoices(first: 15, before: $before, after: $after, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          invoiceNumber\n          status\n          summary\n          relationCompany\n          relationContactName\n          dateSent\n          dateDue\n          total\n          totalDisplay\n          balance\n          balanceDisplay\n        }\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountInvoicesBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountInvoicesBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceInvoicesStatus from \"../../../ui/FinanceInvoiceStatus\"\nimport ContentCard from \"../../../general/ContentCard\"\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table,\n  Text\n} from \"tabler-react\"\nimport { QUERY_ACCOUNT_INVOICES, CREATE_PAYMENT_LINK } from \"./queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountInvoicesBase from \"./ShopAccountInvoicesBase\"\n\n\nfunction ShopAccountInvoices({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n  const onlinePaymentsAvailable = appSettings.onlinePaymentsAvailable\n\n  // Chain queries. First query user data and then query invoices for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(QUERY_ACCOUNT_INVOICES, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })\n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountInvoicesBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountInvoicesBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountInvoicesBase>\n      {t(\"shop.account.classpasses.error_loading_data\")}\n    </ShopAccountInvoicesBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = dataUser.user\n  const invoices = data.financeInvoices\n\n  // Empty list\n  if (!invoices.edges.length) {\n    return (\n      <ShopAccountInvoicesBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.invoices.title')} >\n              <Card.Body>\n                {t('shop.account.invoices.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountInvoicesBase>\n    )  \n  }\n\n  // Populated list\n  return (\n    <ShopAccountInvoicesBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <ContentCard cardTitle={t('shop.account.invoices.title')}\n            // headerContent={headerOptions}\n            pageInfo={invoices.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: invoices.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.financeInvoices.edges\n                  const pageInfo = fetchMoreResult.financeInvoices.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        financeInvoices: {\n                          __typename: previousResult.financeInvoices.__typename,\n                          edges: [ ...previousResult.financeInvoices.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <Table cards responsive>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.status')}</Table.ColHeader>\n                  <Table.ColHeader>{t('finance.invoices.invoice_number')}</Table.ColHeader>\n                  <Table.ColHeader>{t('finance.invoices.date')} & {t('finance.invoices.due')}</Table.ColHeader>\n                  {/* <Table.ColHeader>{t('finance.invoices.due')}</Table.ColHeader> */}\n                  <Table.ColHeader>{t('general.total')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.balance')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                { invoices.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col key={v4()}>\n                      <FinanceInvoicesStatus status={node.status} />\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.invoiceNumber} <br />\n                      <Text.Small muted>\n                        {node.summary.trunc(20)}\n                      </Text.Small>\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {moment(node.dateSent).format('LL')} <br />\n                      {moment(node.dateDue).format('LL')}\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.totalDisplay}\n                    </Table.Col>\n                    <Table.Col key={v4()}>\n                      {node.balanceDisplay}\n                    </Table.Col>\n                    <Table.Col className=\"text-right\" key={v4()}>\n                        {/* TODO: Add token refresh here within an onClick */}\n                        <Button \n                          RootComponent=\"a\"\n                          href={`/d/export/invoice/pdf/${node.id}`}\n                          color=\"secondary\"\n                          icon=\"printer\"\n                        >\n                          {t('general.pdf')}\n                        </Button>\n                        {(node.status == \"SENT\" && onlinePaymentsAvailable) ?\n                        <Link to={\"/shop/account/invoice_payment/\" + node.id}>\n                          <Button\n                            className=\"\"\n                            color=\"success\"\n                          >\n                            {t('shop.account.invoices.to_payment')} <Icon name=\"chevron-right\" />\n                          </Button>\n                        </Link>\n                      : \"\"}\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </ContentCard>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountInvoicesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountInvoices))","import { gql } from \"@apollo/client\"\n\n\nexport const QUERY_ACCOUNT_ORDERS = gql`\n  query FinanceOrders($after: String, $before: String, $account: ID!) {\n    financeOrders(first: 15, before: $before, after: $after, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          orderNumber\n          account {\n            id\n            fullName\n          }\n          message\n          status\n          total\n          totalDisplay\n          createdAt\n          items(first: 100) {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n              startCursor\n              endCursor\n            }\n            edges {\n              node {\n                id\n                productName\n                description\n                quantity\n                priceDisplay\n                financeTaxRate {\n                  id\n                  name\n                  percentage\n                  rateType\n                }\n                subtotalDisplay\n                taxDisplay\n                totalDisplay                \n              }\n            }\n          }\n        }\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`\n\n\nexport const UPDATE_ORDER = gql`\n  mutation UpdateOrder($input: UpdateFinanceOrderInput!) {\n    updateFinanceOrder(input: $input) {\n      financeOrder {\n        id\n        status\n      }\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountOrdersBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountOrdersBase))","export function get_order_card_status_color(status) {\n    switch(status) {\n        case (\"RECEIVED\"): \n          return \"blue\"\n          break\n        case (\"AWAITING_PAYMENT\"): \n          return \"blue\"\n          break\n        case (\"PAID\"):\n          return \"green\"\n          break\n        case (\"DELIVERED\"):\n          return \"green\"\n          break\n        case \"CANCELLED\":\n          return \"orange\"\n          break\n        default:\n          return \"\"\n      }\n}","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport FinanceOrderStatus from \"../../../finance/orders/FinanceOrderStatus\"\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table\n} from \"tabler-react\"\nimport { QUERY_ACCOUNT_ORDERS, UPDATE_ORDER } from \"./queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountOrdersBase from \"./ShopAccountOrdersBase\"\nimport { cancelOrder } from \"./ShopAccountOrderCancel\"\nimport LoadMoreOnBottomScroll from \"../../../general/LoadMoreOnBottomScroll\"\n\nimport { get_order_card_status_color } from \"./tools\"\n\nfunction ShopAccountOrders({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n  const onlinePaymentsAvailable = appSettings.onlinePaymentsAvailable\n\n  // Chain queries. First query user data and then query orders for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(QUERY_ACCOUNT_ORDERS, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })\n  const [ updateOrder ] = useMutation(UPDATE_ORDER)\n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountOrdersBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountOrdersBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountOrdersBase>\n      {t(\"shop.account.classpasses.error_loading_data\")}\n    </ShopAccountOrdersBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = dataUser.user\n  const orders = data.financeOrders\n\n  // Empty list\n  if (!orders.edges.length) {\n    return (\n      <ShopAccountOrdersBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.orders.title')} >\n              <Card.Body>\n                {t('shop.account.orders.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountOrdersBase>\n    )  \n  }\n\n  // Populated list\n  return (\n    <ShopAccountOrdersBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <LoadMoreOnBottomScroll\n            // headerContent={headerOptions}\n            pageInfo={orders.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: orders.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.financeOrders.edges\n                  const pageInfo = fetchMoreResult.financeOrders.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        financeOrders: {\n                          __typename: previousResult.financeOrders.__typename,\n                          edges: [ ...previousResult.financeOrders.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <h4>{t(\"shop.account.orders.title\")}</h4>\n            {orders.edges.map(({ node }) => (\n              <div>\n                <span className=\"pull-right\">\n                  <FinanceOrderStatus status={node.status} />\n                </span>\n                <small className=\"text-muted\">\n                  {moment(node.createdAt).format(dateTimeFormat)}\n                </small>\n                <Card statusColor={get_order_card_status_color(node.status)}>\n                  <Card.Header>\n                    <Card.Title>{t(\"general.order\") + \" #\" + node.orderNumber}</Card.Title>\n                    <Card.Options>\n                      {(node.status == \"RECEIVED\" || node.status == \"AWAITING_PAYMENT\") ?\n                        <Button\n                          outline\n                          color=\"warning\"\n                          size=\"sm\"\n                          onClick={() => cancelOrder({\n                            t: t,\n                            msgConfirm: t('shop.account.orders.msg_cancel_confirm'),\n                            msgDescription: <p>{t('general.order') + \" #\" + node.orderNumber}</p>, \n                            msgSuccess: t('shop.account.orders.order.cancelled'), \n                            cancelFunction: updateOrder, \n                            functionVariables: {\n                              variables: {\n                                input: {\n                                  id: node.id,\n                                  status: 'CANCELLED'\n                                }\n                              }\n                            }\n                          })}\n                        >\n                          {t('general.cancel')}\n                        </Button>\n                      : \"\"}\n                      {(node.status == \"AWAITING_PAYMENT\" && onlinePaymentsAvailable) ?\n                        <Link to={\"/shop/checkout/payment/\" + node.id}>\n                          <Button\n                            className=\"ml-4\"\n                            color=\"success\"\n                            size=\"sm\"\n                          >\n                            {t('shop.account.orders.to_payment')} <Icon name=\"chevron-right\" />\n                          </Button>\n                        </Link>\n                      : \"\"}\n                    </Card.Options>\n                  </Card.Header>\n                  <Table cards>\n                    <Table.Header>\n                      <Table.Row>\n                        <Table.ColHeader>{t(\"general.product\")}</Table.ColHeader>\n                        <Table.ColHeader>{t(\"general.description\")}</Table.ColHeader>\n                        <Table.ColHeader><span className=\"float-right\">{t(\"general.total\")}</span></Table.ColHeader>\n                      </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                      {node.items.edges.map(({ node }) => (\n                        <Table.Row>\n                          <Table.Col>{node.productName}</Table.Col>\n                          <Table.Col>{node.description}</Table.Col>\n                          <Table.Col><span className=\"float-right\">{node.totalDisplay}</span></Table.Col>\n                        </Table.Row>    \n                      ))}\n                      <Table.Row>\n                        <Table.Col></Table.Col>\n                        <Table.Col></Table.Col>\n                        <Table.Col><span className=\"bold float-right\">{node.totalDisplay}</span></Table.Col>\n                      </Table.Row>\n                    </Table.Body>\n                  </Table>\n                </Card>\n              </div>\n            ))}\n          </LoadMoreOnBottomScroll>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountOrdersBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountOrders))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { toast } from 'react-toastify'\nimport { confirmAlert } from 'react-confirm-alert'\nimport { v4 } from 'uuid'\n\nimport {\n  Icon,\n} from \"tabler-react\";\n\nexport function cancelOrder({t, msgConfirm, msgDescription, msgSuccess, cancelFunction, functionVariables}) {\n  return (\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div key={v4()} className='custom-ui'>\n            <h1>{t('shop.account.orders.confirm_cancel')}</h1>\n            {msgConfirm}\n            {msgDescription}\n            <button className=\"btn btn-link pull-right\" onClick={onClose}>{t('shop.account.orders.confirm_cancel_no')}</button>\n            <button\n              className=\"btn btn-warning btn-sm outline\"\n              onClick={() => {\n                cancelFunction(functionVariables)\n                  .then(({ data }) => {\n                    console.log('got data', data);\n                    toast.success(\n                      msgSuccess, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error);\n                  })\n                onClose()\n              }}\n            >\n              {t('shop.account.orders.confirm_cancel_yes')}\n            </button>\n          </div>\n        )\n      }\n    })\n  )\n}\n","import { gql } from \"@apollo/client\"\n\n\nexport const UPDATE_PROFILE = gql`\n  mutation UpdateAccount($input:UpdateAccountInput!) {\n    updateAccount(input: $input) {\n      account {\n        id\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`","import React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { withTranslation } from 'react-i18next'\n\nimport { TOKEN_REFRESH } from \"../../../../queries/system/auth\"\nimport { refreshTokenAndOpenExportLinkInNewTab } from \"../../../../tools/refresh_token_and_open_export_link\"\n\nimport {\n  Button,\n} from \"tabler-react\";\n\n\nfunction ShopAccountProfileBtnDownloadData({ t, history }) {\n  const export_url = \"/d/export/account_data\"\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n\n  //TODO Check if account data download feature is enabled\n\n  return (\n    <Button\n      color=\"secondary\"\n      icon=\"download\"\n      className=\"ml-2\"\n      onClick={() => refreshTokenAndOpenExportLinkInNewTab(\n        doTokenRefresh, history, export_url\n      )}\n    >\n      {t('shop.account.profile.download_my_data')} \n    </Button>\n  )\n}\n\nexport default withTranslation()(ShopAccountProfileBtnDownloadData)\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\nimport ShopAccountProfileBtnDownloadData from './ShopAccountProfileBtnDownloadData'\n\n\nfunction ShopAccountProfileBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n            <div className=\"page-options d-flex\">\n              <ShopAccountBack />\n              <ShopAccountProfileBtnDownloadData />\n            </div>\n          </Page.Header>\n          { children }\n        </Container>\n      </div>\n    </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountProfileBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\nimport ISO_COUNTRY_CODES from \"../../../../tools/iso_country_codes\"\n\n\nconst ShopAccountProfileForm = ({ t, history, isSubmitting, errors, values, returnUrl, setFieldTouched, setFieldValue }) => (\n  <FoForm>\n    <Card title={t(\"shop.accounts.profile.edit\")} >\n      <Card.Body>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.first_name')}>\n              <Field type=\"text\" \n                      name=\"firstName\" \n                      className={(errors.firstName) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"firstName\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.last_name')}>\n              <Field type=\"text\" \n                      name=\"lastName\" \n                      className={(errors.lastName) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"lastName\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n         <Grid.Col>\n            <Form.Group label={t('general.date_of_birth')}>\n              <CSDatePicker \n                selected={values.dateOfBirth}\n                onChange={(date) => setFieldValue(\"dateOfBirth\", date)}\n                onBlur={() => setFieldTouched(\"dateOfBirth\", true)}\n              />\n              <ErrorMessage name=\"dateOfBirth\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.gender')}>\n              <Field component=\"select\" \n                    name=\"gender\" \n                    className={(errors.organizationMembership) ? \"form-control is-invalid\" : \"form-control\"} \n                    autoComplete=\"off\">\n                <option value=\"\"></option>\n                <option value=\"F\">{t(\"genders.female\")}</option>\n                <option value=\"M\">{t(\"genders.male\")}</option>\n                <option value=\"X\">{t(\"genders.other\")}</option>\n              </Field>\n              <ErrorMessage name=\"gender\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.email')}>\n              <Field type=\"text\" \n                      name=\"email\" \n                      className={(errors.email) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"email\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('relations.accounts.emergency')}>\n              <Field type=\"text\" \n                     name=\"emergency\" \n                     className={(errors.emergency) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"emergency\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.phone')}>\n              <Field type=\"text\" \n                      name=\"phone\" \n                      className={(errors.phone) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"phone\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.mobile')}>\n              <Field type=\"text\" \n                     name=\"mobile\" \n                     className={(errors.mobile) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"mobile\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.address')}>\n              <Field type=\"text\" \n                      name=\"address\" \n                      className={(errors.address) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"address\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.postcode')}>\n              <Field type=\"text\" \n                     name=\"postcode\" \n                     className={(errors.postcode) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\" />\n              <ErrorMessage name=\"postcode\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col>\n            <Form.Group label={t('general.city')}>\n              <Field type=\"text\" \n                      name=\"city\" \n                      className={(errors.city) ? \"form-control is-invalid\" : \"form-control\"} \n                      autoComplete=\"off\" />\n              <ErrorMessage name=\"city\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group>\n          </Grid.Col>\n          <Grid.Col>\n            <Form.Group label={t('general.country')}>\n              <Field component=\"select\" \n                     name=\"country\" \n                     className={(errors.country) ? \"form-control is-invalid\" : \"form-control\"} \n                     autoComplete=\"off\">\n                <option value=\"\"></option>\n                { ISO_COUNTRY_CODES.map(\n                    country => <option value={country.Code} key={v4()}>{country.Name}</option>\n                )}\n              </Field>\n              <ErrorMessage name=\"gender\" component=\"span\" className=\"invalid-feedback\" />\n            </Form.Group> \n          </Grid.Col>\n        </Grid.Row>\n      </Card.Body>\n      <Card.Footer>\n          <Button \n            color=\"primary\"\n            className=\"pull-right\" \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {t('general.submit')}\n          </Button>\n          <Link to={returnUrl}>\n            <Button color=\"link\">\n                {t('general.cancel')}\n            </Button>\n          </Link>\n      </Card.Footer>\n    </Card>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(ShopAccountProfileForm))\n\n","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const ACCOUNT_SCHEMA = Yup.object().shape({\n    firstName: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n    lastName: Yup.string()\n      .min(2, t('yup.min_len_2'))\n      .required(t('yup.field_required')),\n    email: Yup.string()\n      .email(t('yup.email'))\n      .required(t('yup.field_required')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\nimport { UPDATE_PROFILE } from \"./queries\"\n\nimport ShopAccountProfileBase from \"./ShopAccountProfileBase\"\nimport ShopAccountProfileForm from \"./ShopAccountProfileForm\"\n\nimport { dateToLocalISO } from '../../../../tools/date_tools'\n\nimport { ACCOUNT_SCHEMA } from \"./yupSchema\"\n\n\nfunction ShopAccountProfile({t, match, history}) {\n  const { loading, error, data } = useQuery(GET_USER_PROFILE)\n  const [ updateProfile ] = useMutation(UPDATE_PROFILE)\n\n  if (loading) return (\n    <ShopAccountProfileBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountProfileBase>\n  )\n  if (error) return (\n    <ShopAccountProfileBase>\n      {t(\"shop.account.profile.error_loading_data\")}\n    </ShopAccountProfileBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = data.user\n\n  let dateOfBirth = null\n  if (user.dateOfBirth) {\n    dateOfBirth = new Date(user.dateOfBirth)\n  }\n\n  return (\n    <ShopAccountProfileBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <Formik\n            initialValues={{ \n              firstName: user.firstName, \n              lastName: user.lastName, \n              email: user.email,\n              dateOfBirth: dateOfBirth,\n              gender: user.gender,\n              emergency: user.emergency,\n              phone: user.phone,\n              mobile: user.mobile,\n              address: user.address,\n              postcode: user.postcode,\n              city: user.city,\n              country: user.country\n            }}\n            validationSchema={ACCOUNT_SCHEMA}\n            onSubmit={(values, { setSubmitting }) => {\n                console.log('submit values:')\n                console.log(values)\n\n                let input_vars = {\n                  id: user.accountId,\n                  firstName: values.firstName,\n                  lastName: values.lastName,\n                  email: values.email,\n                  gender: values.gender,\n                  emergency: values.emergency,\n                  phone: values.phone,\n                  mobile: values.mobile,\n                  address: values.address,\n                  postcode: values.postcode,\n                  city: values.city,\n                  country: values.country\n                }\n\n                if (values.dateOfBirth) {\n                  input_vars['dateOfBirth'] = dateToLocalISO(values.dateOfBirth)\n                } \n\n                updateProfile({ variables: {\n                  input: input_vars\n                }, refetchQueries: [\n                    // // Refetch list\n                    // {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()},\n                    // // Refresh local cached results for this account\n                    // {query: GET_ACCOUNT_QUERY, variables: {\"id\": match.params.account_id}}\n                ]})\n                .then(({ data }) => {\n                    console.log('got data', data)\n                    toast.success((t('shop.account.profile.toast_edit_success')), {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    setSubmitting(false)\n                  }).catch((error) => {\n                    toast.error((t('general.toast_server_error')) +  error, {\n                        position: toast.POSITION.BOTTOM_RIGHT\n                      })\n                    console.log('there was an error sending the query', error)\n                    setSubmitting(false)\n                  })\n            }}\n            >\n            {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n              <ShopAccountProfileForm\n                isSubmitting={isSubmitting}\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                errors={errors}\n                values={values}\n                returnUrl={\"/shop/account\"}\n              />\n            )}\n          </Formik>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountProfileBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountProfile))","import { gql } from \"@apollo/client\"\n\n\nexport const QUERY_ACCOUNT_SUBSCRIPTIONS = gql`\n  query AccountSubscriptions($before: String, $after: String, $account: ID!) {\n    accountSubscriptions(first: 100, before: $before, after: $after, account: $account) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          account {\n            id\n            fullName\n          }\n          organizationSubscription {\n            name\n          }\n          dateStart\n          dateEnd\n        }\n      }\n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Page,\n  Grid,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountProfileBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n          </Page.Header>\n          { children }\n        </Container>\n      </div>\n    </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountProfileBase))","// @flow\n\nimport React, { useContext} from 'react'\nimport { useQuery } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Card,\n  Grid,\n  Table\n} from \"tabler-react\";\nimport { QUERY_ACCOUNT_SUBSCRIPTIONS } from \"./queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountSubscriptionsBase from \"./ShopAccountSubscriptionsBase\"\nimport ContentCard from \"../../../general/ContentCard\"\n\n\nfunction ShopAccountSubscriptions({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n\n  // Chain queries. First query user data and then query invoices for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(QUERY_ACCOUNT_SUBSCRIPTIONS, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })\n  \n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountSubscriptionsBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountSubscriptionsBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountSubscriptionsBase>\n      {t(\"shop.account.subscriptions.error_loading_data\")}\n    </ShopAccountSubscriptionsBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  const user = data.user\n  const subscriptions = data.accountSubscriptions\n\n  // Empty list\n  if (!subscriptions.edges.length) {\n    return (\n      <ShopAccountSubscriptionsBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.subscriptions.title')} >\n              <Card.Body>\n                {t('shop.account.subscriptions.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountSubscriptionsBase>\n    )  \n  }\n\n  // Populated list\n  return (\n    <ShopAccountSubscriptionsBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <ContentCard cardTitle={t('shop.account.subscriptions.title')}\n            // headerContent={headerOptions}\n            pageInfo={subscriptions.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: subscriptions.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.accountSubscriptions.edges\n                  const pageInfo = fetchMoreResult.accountSubscriptions.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        accountSubscriptions: {\n                          __typename: previousResult.accountSubscriptions.__typename,\n                          edges: [ ...previousResult.accountSubscriptions.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.name')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_start')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.date_end')}</Table.ColHeader>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {subscriptions.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      {node.organizationSubscription.name}\n                    </Table.Col>\n                    <Table.Col>\n                      {moment(node.dateStart).format(dateFormat)}\n                    </Table.Col>\n                    <Table.Col>\n                      { (node.dateEnd) ? moment(node.dateEnd).format(dateFormat) : \"\" }\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </ContentCard>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountSubscriptionsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountSubscriptions))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\"\n\n\nconst ShopClassBookBack = ({ t }) => (\n  <Link to={\"/shop/classes\"} >\n    <Button color=\"primary btn-block mb-6\">\n      <Icon prefix=\"fe\" name=\"chevrons-left\" /> {t('general.back')}\n    </Button>\n  </Link>\n)\n\nexport default withTranslation()(withRouter(ShopClassBookBack))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Container,\n  Tag,\n} from \"tabler-react\";\n\n\nfunction ShopCheckoutProgress({ t, match, history, checkoutProgress=\"\" }) {\n  let color_order = \"\" \n  let color_payment = \"\"\n  let color_complete = \"\"\n\n  switch(checkoutProgress) {\n    case \"order\":\n      color_order = \"info\"\n      break\n    case \"payment\":\n      color_order = \"success\"\n      color_payment = \"info\"\n      break      \n    case \"complete\":\n      color_order = \"success\"\n      color_payment = \"success\"\n      color_complete = \"success\"\n      break      \n  }\n\n  return (\n    <div className=\"d-flex justify-content-center mb-4\">\n    <Tag.List>\n      <Tag color={color_order} addOn={<Icon name=\"shopping-cart\"/>}>\n        {t(\"shop.checkout_progress.order\")} \n      </Tag>\n      <Tag color={color_payment} addOn={<Icon name=\"credit-card\" />}>\n        {t(\"shop.checkout_progress.payment\")} \n      </Tag>\n      <Tag color={color_complete} addOn={<Icon name=\"check\" />}>\n        {t(\"shop.checkout_progress.complete\")}\n      </Tag>\n    </Tag.List>\n    </div>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutProgress))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\n\nimport {\n  Page,\n  Grid,\n  Icon,\n  Container,\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../SiteWrapperShop\"\nimport ShopCheckoutProgress from \"./ShopCheckoutProgress\"\n\n\nfunction ShopBase({ t, match, history, children, title, return_url, pageHeaderOptions=\"\", checkoutProgress=false }) {\n\n  return (\n    <SiteWrapperShop>\n      <div className=\"my-3 my-md-5\">\n        <Container>\n          <Page.Header title={title}>\n            <div className=\"page-options d-flex\">\n              {/* Back */}\n              {(return_url) ?\n                <Link to={return_url} \n                      className='btn btn-secondary mr-2'>\n                    <Icon prefix=\"fe\" name=\"arrow-left\" /> {t('general.back')} \n                </Link>\n                : \"\"\n              }\n              { pageHeaderOptions }\n            </div>\n          </Page.Header>\n            <Grid.Row>\n              <Grid.Col md={12}>\n                {(checkoutProgress) ?\n                  <ShopCheckoutProgress checkoutProgress={checkoutProgress} />\n                  : \"\" }\n                { children }\n              </Grid.Col>\n            </Grid.Row>\n          </Container>\n        </div>\n    </SiteWrapperShop>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopBase))","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../../ShopBase\"\n\nfunction ShopClassBookBase({ t, match, history, children, pageHeaderOptions=\"\" }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")} pageHeaderOptions={pageHeaderOptions}>\n      <h4>{t(\"shop.classes.book.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookBase))","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport { CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"../../../schedule/classes/class/book/queries\"\n// import CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ShopClassBookClasspassBtn({t, match, history, classpass}) {\n  console.log(classpass)\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  const createInput = {\n    \"scheduleItem\": schedule_item_id,\n    \"accountClasspass\": classpass.accountClasspass.id,\n    \"date\": class_date,\n    \"attendanceType\": \"CLASSPASS\",\n    \"onlineBooking\": true,\n    \"bookingStatus\": \"BOOKED\"\n  }\n\n  const [classCheckin, { data, loading, error, onCompleted }] = useMutation(CREATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loading) {\n    return \"Please wait...\"\n  }\n\n  if (error) {\n    return \"uh oh... error found\"\n  }\n\n  return (\n    <Button \n      block \n      outline \n      color=\"primary\" \n      onClick={() => classCheckin({\n        variables: { \"input\": createInput }, \n        refetchQueries: [\n          // {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, variables: get_attendance_list_query_variables(schedule_item_id, class_date)},\n        ]})\n        .then(({ data }) => {\n            console.log('got data', data);\n            // redirect to class booked page\n            console.log(\"Checkin success!\")\n            history.push(`/shop/classes/booked/${schedule_item_id}/${class_date}`)\n\n            // show message to user\n            // toast.success((t('schedule.classes.class.book.toast_success')), {\n            //   position: toast.POSITION.BOTTOM_RIGHT\n            // })\n          }).catch((error) => {\n            toast.error((t('general.toast_server_error')) +  error, {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            console.log('there was an error sending the query', error)\n          })}\n    >\n      {t(\"general.book\")} <Icon name=\"chevron-right\" />\n    </Button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookClasspassBtn))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport moment from 'moment'\n\nimport {\n  Grid,\n  Card,\n} from \"tabler-react\";\n\nimport ShopClassBookClasspassBtn from \"./ShopClassBookClasspassBtn\"\n\n\nfunction ShopClassBookClasspasses({ t, match, history, classpasses }) {\n  console.log(\"CLASSPASSES\")\n  console.log(classpasses)\n\n  return (\n    classpasses.map((classpass) =>(\n      <Grid.Col md={3}>\n        <Card \n          statusColor=\"blue\"\n          title={t(\"general.classpass\")} >\n        <Card.Body>\n          <b>{classpass.accountClasspass.organizationClasspass.name}</b><br />\n          <span className=\"text-muted\">\n            {t('general.classes_remaining')}: {classpass.accountClasspass.classesRemainingDisplay} <br />\n            {t('general.valid_until')}: {moment(classpass.accountClasspass.dateEnd).format('LL')} <br />\n          </span>\n        </Card.Body>\n        <Card.Footer>\n          {(!classpass.allowed) ? t('schedule.classes.class.book.classpass_not_allowed') :\n            <ShopClassBookClasspassBtn classpass={classpass} />\n          }\n        </Card.Footer>\n        </Card>\n      </Grid.Col>\n    ))\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookClasspasses))\n\n","// @flow\n\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\nimport { toast } from 'react-toastify'\n\nimport { CREATE_SCHEDULE_ITEM_ATTENDANCE } from \"../../../schedule/classes/class/book/queries\"\n// import CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ShopClassBookSubscriptionBtn({t, match, history, subscription}) {\n  console.log(subscription)\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n\n  const createInput = {\n    \"scheduleItem\": schedule_item_id,\n    \"accountSubscription\": subscription.accountSubscription.id,\n    \"date\": class_date,\n    \"attendanceType\": \"SUBSCRIPTION\",\n    \"onlineBooking\": true,\n    \"bookingStatus\": \"BOOKED\"\n  }\n\n  const [classCheckin, { data, loading, error, onCompleted }] = useMutation(CREATE_SCHEDULE_ITEM_ATTENDANCE)\n\n  if (loading) {\n    return \"Please wait...\"\n  }\n\n  if (error) {\n    return \"uh oh... error found\"\n  }\n\n  return (\n    <Button \n      block \n      outline \n      color=\"primary\" \n      onClick={() => classCheckin({\n        variables: { \"input\": createInput }, \n        refetchQueries: [\n          // {query: GET_SCHEDULE_CLASS_ATTENDANCE_QUERY, variables: get_attendance_list_query_variables(schedule_item_id, class_date)},\n        ]})\n        .then(({ data }) => {\n            console.log('got data', data);\n            // redirect to class booked page\n            console.log(\"Checkin success!\")\n            history.push(`/shop/classes/booked/${schedule_item_id}/${class_date}`)\n\n            // show message to user\n            // toast.success((t('schedule.classes.class.book.toast_success')), {\n            //   position: toast.POSITION.BOTTOM_RIGHT\n            // })\n          }).catch((error) => {\n            toast.error((t('general.toast_server_error')) +  error, {\n                position: toast.POSITION.BOTTOM_RIGHT\n              })\n            console.log('there was an error sending the query', error)\n          })}\n    >\n      {t(\"general.book\")} <Icon name=\"chevron-right\" />\n    </Button>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookSubscriptionBtn))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport moment from 'moment'\n\nimport {\n  Grid,\n  Card,\n} from \"tabler-react\";\n\nimport ShopClassBookSubscriptionBtn from \"./ShopClassBookSubscriptionBtn\"\n\n\nfunction ShopClassBookSubscriptions({ t, match, history, subscriptions }) {\n  console.log(\"SUBSCRIPTIONS\")\n  console.log(subscriptions)\n\n  return (\n    subscriptions.map((subscription) =>(\n      <Grid.Col md={3}>\n        <Card \n          statusColor=\"blue\"\n          title={t(\"general.subscription\")} >\n        <Card.Body>\n          <b>{subscription.accountSubscription.organizationSubscription.name}</b><br />\n          <span className=\"text-muted\">\n            {t(\"general.credits_remaining\")}: {subscription.accountSubscription.creditTotal}\n          </span>\n        </Card.Body>\n        <Card.Footer>\n          {(!subscription.allowed) ? t('schedule.classes.class.book.subscription_not_allowed') :\n            <ShopClassBookSubscriptionBtn subscription={subscription} />\n          }\n        </Card.Footer>\n        </Card>\n      </Grid.Col>\n    ))\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookSubscriptions))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport {\n  Button,\n  Icon\n} from \"tabler-react\";\n\n\nfunction ShopClassBookPriceBtn({t, match, history, price}) {\n  console.log(price)\n  const classpassId = price.id\n  const scheduleItemId = match.params.class_id\n  const classDate = match.params.date\n\n  return (\n    <Link to={`/shop/classpass/${classpassId}/${scheduleItemId}/${classDate}`}>\n    <Button \n      block \n      outline \n      color=\"primary\" \n    >\n      {t(\"shop.classes.book.pay_and_book\")} <Icon name=\"chevron-right\" />\n    </Button>\n    </Link>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopClassBookPriceBtn))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Grid,\n} from \"tabler-react\";\n\nimport ShopClassBookPriceBtn from './ShopClassBookPriceBtn'\n\nfunction ShopClassBookPriceDropin({ \n  t, \n  match, \n  history, \n  priceDropin\n}) {\n\n  return (\n    <Grid.Col md={3}>\n      <Card \n        statusColor=\"blue\"\n        title={t(\"general.dropin\")} >\n      <Card.Body>\n        <b>{priceDropin.priceDisplay}</b><br />\n        {t(\"shop.classes.book.dropin_pay_and_book\")} <br />\n      </Card.Body>\n      <Card.Footer>\n        <ShopClassBookPriceBtn price={priceDropin} />\n      </Card.Footer>\n      </Card>\n    </Grid.Col>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookPriceDropin))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Card,\n  Grid,\n} from \"tabler-react\";\n\nimport ShopClassBookPriceBtn from './ShopClassBookPriceBtn'\n\nfunction ShopClassBookPriceTrial({ \n  t, \n  match, \n  history, \n  priceTrial\n}) {\n\n  return (\n    <Grid.Col md={3}>\n      <Card \n        statusColor=\"green\"\n        title={t(\"general.trial\")} >\n      <Card.Body>\n        <b>{priceTrial.priceDisplay}</b><br />\n        {t(\"shop.classes.book.trial_pay_and_book\")} <br />\n      </Card.Body>\n      <Card.Footer>\n        <ShopClassBookPriceBtn price={priceTrial} />\n      </Card.Footer>\n      </Card>\n    </Grid.Col>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookPriceTrial))\n\n","import { gql } from \"@apollo/client\"\n\n\nexport const GET_BOOKING_OPTIONS_QUERY = gql`\n  query ScheduleClassBookingOptions($scheduleItem:ID!, $date:Date!, $listType:String!) {\n    scheduleClass(scheduleItemId: $scheduleItem, date:$date) {\n      bookingStatus\n    }\n    scheduleClassBookingOptions(scheduleItem: $scheduleItem, date:$date, listType:$listType) {\n      date\n      alreadyBooked\n      account {\n        id\n        fullName\n        hasReachedTrialLimit\n      }\n      scheduleItem {\n        frequencyType\n        frequencyInterval\n        organizationLocationRoom {\n          id\n          name\n          organizationLocation {\n            id\n            name\n          }\n        }\n        organizationClasstype {\n          id\n          name\n        }\n        organizationLevel {\n          id\n          name\n        }\n        dateStart\n        dateEnd\n        timeStart\n        timeEnd\n      }\n    \tscheduleItemPrices {\n        organizationClasspassDropin {\n          id\n          name\n          priceDisplay\n        }\n        organizationClasspassTrial {\n          id\n          name\n          priceDisplay\n        }\n      }\n      classpasses {\n        bookingType \n        allowed\n        accountClasspass {\n          id\n          dateStart\n          dateEnd\n          classesRemainingDisplay\n          organizationClasspass {\n            id\n            name\n          }\n        }\n      }\n      subscriptions {\n        bookingType\n        allowed\n        accountSubscription {\n          id\n          dateStart\n          dateEnd\n          organizationSubscription {\n            id\n            name\n          }\n          creditTotal\n        }\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { gql } from \"@apollo/client\"\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Alert,\n  Page,\n  Grid,\n  Icon,\n  Dimmer,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Table,\n  StampCard\n} from \"tabler-react\";\nimport { TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\nimport { toast } from 'react-toastify'\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport ShopClassBookBack from \"./ShopClassBookBack\"\nimport ShopClassBookBase from \"./ShopClassBookBase\"\nimport ShopClassBookClasspasses from './ShopClassBookClasspasses'\nimport ShopClassBookSubscriptions from \"./ShopClassBookSubscriptions\"\nimport ShopClassBookPriceDropin from \"./ShopClassBookPriceDropin\"\nimport ShopClassBookPriceTrial from \"./ShopClassBookPriceTrial\"\n\nimport { GET_BOOKING_OPTIONS_QUERY } from \"./queries\"\n// import CSLS from \"../../../../../tools/cs_local_storage\"\n\n\nfunction ShopClassBook({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const { loading, error, data } = useQuery(\n    GET_BOOKING_OPTIONS_QUERY, {\n      variables: {\n        scheduleItem: schedule_item_id,\n        date: class_date,\n        listType: \"SHOP_BOOK\"\n      }\n    }\n  )\n\n  // Loading\n  if (loading) return (\n    <ShopClassBookBase pageHeaderOptions={<ShopClassBookBack />}>\n      <p>{t('general.loading_with_dots')}</p>\n    </ShopClassBookBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <ShopClassBookBase pageHeaderOptions={<ShopClassBookBack />}>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ShopClassBookBase>\n    )\n  }\n  \n  console.log(data)\n  const scheduleClass = data.scheduleClass\n\n  const alreadyBooked = data.scheduleClassBookingOptions.alreadyBooked\n  const account = data.scheduleClassBookingOptions.account\n  const classpasses = data.scheduleClassBookingOptions.classpasses\n  const subscriptions = data.scheduleClassBookingOptions.subscriptions\n  const prices = data.scheduleClassBookingOptions.scheduleItemPrices\n  const scheduleItem = data.scheduleClassBookingOptions.scheduleItem\n\n  const location = scheduleItem.organizationLocationRoom.organizationLocation.name\n  const classType = scheduleItem.organizationClasstype.name\n  const timeStart = moment(TimeStringToJSDateOBJ(scheduleItem.timeStart)).format(timeFormat) \n  const timeEnd = moment(TimeStringToJSDateOBJ(scheduleItem.timeEnd)).format(timeFormat) \n  const date_display = moment(class_date).format(dateFormat)\n  // const subtitle = class_subtitle({\n  //   t: t,\n  //   location: , \n  //   locationRoom: scheduleItem.organizationLocationRoom.name,\n  //   classtype: , \n  //   timeStart: , \n  //   date: class_date\n  // })\n  const class_info = date_display + ' ' + timeStart + ' - ' + timeEnd + ', ' + classType + ' ' + t(\"general.at\") + ' ' + location\n\n  console.log(prices)\n  console.log(\"ALREADY BOOKED\")\n  console.log(alreadyBooked)\n  console.log(scheduleClass.bookingStatus)\n\n  let content\n\n  switch(scheduleClass.bookingStatus) {\n    case \"NOT_YET_OPEN\":\n      const bookingOpenOn = scheduleClass.bookingOpenOn\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.open_on\") + \" \" + moment(bookingOpenOn).format(dateFormat)}\n        </Alert>\n      break\n    case \"CANCELLED\":\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.cancelled\")}\n        </Alert>\n      break\n    case \"HOLIDAY\":\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.cancelled_holiday\")}\n        </Alert>\n      break\n    case \"FINISHED\":\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.finished\")}\n        </Alert>\n      break\n    case \"ONGOING\":\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.ongoing\")}\n        </Alert>\n      break\n      break\n    case \"FULL\":\n      content = <Alert type=\"primary\" hasExtraSpace>\n          <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n          {t(\"shop.classes.book.class_booking_status.full\")}\n        </Alert>\n      break\n    case \"OK\":\n      content = <Grid.Row cards deck>\n        <ShopClassBookSubscriptions subscriptions={subscriptions} />\n        <ShopClassBookClasspasses classpasses={classpasses} />\n        {(prices) ?\n          (prices.organizationClasspassDropin) ? \n            <ShopClassBookPriceDropin priceDropin={prices.organizationClasspassDropin}/> : \"\" \n        : \"\" }\n        {(prices) ?\n          ((prices.organizationClasspassTrial) && (!account.hasReachedTrialLimit)) ? \n            <ShopClassBookPriceTrial priceTrial={prices.organizationClasspassTrial}/> : \"\" \n          : \"\" } \n      </Grid.Row>\n      break\n    default:\n      content = \"\"\n  }\n\n  return (\n    <ShopClassBookBase pageHeaderOptions={<ShopClassBookBack />}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          { class_info }\n          <div className=\"mt-6\">\n            {(alreadyBooked) ?\n              <Alert type=\"primary\" hasExtraSpace>\n                <h5>{t(\"shop.classes.book.unable_to_show_booking_options\")}</h5>\n                {t(\"shop.classes.book.already_booked\")}\n              </Alert>\n              : content\n            }\n          </div>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopClassBookBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBook))\n","import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../../ShopBase\"\n\nfunction ShopClassBookedBase({ t, match, history, children, pageHeaderOptions=\"\" }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")} pageHeaderOptions={pageHeaderOptions}>\n      <h4>{t(\"shop.classes.booked.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBookedBase))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_CLASS_QUERY = gql`\n  query ScheduleClass($scheduleItemId: ID!, $date: Date!) {\n    scheduleClass(scheduleItemId: $scheduleItemId, date:$date) {\n      scheduleItemId \n      date\n      organizationLocationRoom {\n        organizationLocation {\n          name\n        }\n      }\n      organizationClasstype {\n        name\n      }\n      timeStart\n      timeEnd\n    }\n  }\n`\n\n\nexport const CREATE_ORDER = gql`\n  mutation CreateFinanceOrder($input: CreateFinanceOrderInput!) {\n    createFinanceOrder(input: $input) {\n      financeOrder {\n        id\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon\n} from \"tabler-react\";\nimport { TimeStringToJSDateOBJ } from '../../../../tools/date_tools'\n// import { confirmAlert } from 'react-confirm-alert'; // Import\n// import { toast } from 'react-toastify'\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport ShopClassBookedBase from \"./ShopClassBookedBase\"\nimport { GET_CLASS_QUERY } from \"../../queries\"\n// import CSLS from \"../../../../../tools/cs_local_storage\"\n\nimport { DisplayClassInfo } from \"../../tools\"\n\n\nfunction ShopClassBook({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const schedule_item_id = match.params.class_id\n  const class_date = match.params.date\n  const { loading, error, data } = useQuery(\n    GET_CLASS_QUERY, {\n      variables: {\n        scheduleItemId: schedule_item_id,\n        date: class_date,\n      }\n    }\n  )\n\n  // Loading\n  if (loading) return (\n    <ShopClassBookedBase>\n      <p>{t('general.loading_with_dots')}</p>\n    </ShopClassBookedBase>\n  )\n  // Error\n  if (error) {\n    console.log(error)\n    return (\n      <ShopClassBookedBase>\n        <p>{t('general.error_sad_smiley')}</p>\n      </ShopClassBookedBase>\n    )\n  }\n  \n  console.log(data)\n  // TODO: display class info in a card\n\n  \n  return (\n    <ShopClassBookedBase>\n      <Grid.Row cards deck>\n        <Grid.Col md={6}>\n          <Card title={t(\"shop.classes.booked.class\")}>\n            <Card.Body>\n              {t(\"shop.classes.booked.class_explanation\")} <br /><br />\n              <DisplayClassInfo \n                t={t} \n                classDate={class_date}\n                classData={data} \n                dateFormat={dateFormat} \n                timeFormat={timeFormat}\n              />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Card title={t(\"shop.classes.booked.class_info\")}>\n            <Card.Body>\n            Other info here...\n            </Card.Body>\n            <Card.Footer>\n              <Link to={\"/shop/account\"}>\n                <Button\n                  outline\n                  block\n                  color=\"success\"\n                >\n                  {t(\"general.continue\")} <Icon name=\"chevron-right\" />\n                </Button>\n              </Link>\n            </Card.Footer>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopClassBookedBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassBook))\n\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\";\nimport ShopBase from \"../../ShopBase\"\n\nfunction ShopClassesScheduleBase({ t, match, history, children, pageHeaderOptions=\"\" }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")} pageHeaderOptions={pageHeaderOptions}>\n      <h4>{t(\"shop.classes.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassesScheduleBase))","import CSLS from \"../../../../tools/cs_local_storage\"\n\nexport function get_list_query_variables() {\n    let orderBy\n    let organizationClasstype\n    let organizationLevel\n    let organizationLocation\n  \n    let queryVars = {\n      attendanceCountType: \"ATTENDING_AND_BOOKED\",\n      dateFrom: localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM), \n      dateUntil: localStorage.getItem(CSLS.SHOP_CLASSES_DATE_UNTIL),\n    }\n  \n    // orderBy = localStorage.getItem(CSLS.SHOP_CLASSES_ORDER_BY)\n    // if (orderBy) {\n    //   queryVars.orderBy = orderBy\n    // }\n  \n    organizationClasstype = localStorage.getItem(CSLS.SHOP_CLASSES_FILTER_CLASSTYPE)\n    if (organizationClasstype) {\n      queryVars.organizationClasstype = organizationClasstype\n    } else {\n      queryVars.organizationClasstype = \"\"\n    }\n  \n    organizationLevel = localStorage.getItem(CSLS.SHOP_CLASSES_FILTER_LEVEL)\n    if (organizationLevel) {\n      queryVars.organizationLevel = organizationLevel\n    } else {\n      queryVars.organizationLevel = \"\"\n    }\n  \n    organizationLocation = localStorage.getItem(CSLS.SHOP_CLASSES_FILTER_LOCATION)\n    if (organizationLocation) {\n      queryVars.organizationLocation = organizationLocation\n    } else {\n      queryVars.organizationLocation = \"\"\n    }\n  \n    console.log(queryVars)\n  \n    return queryVars\n  }\n  ","// @flow\n\nimport React from 'react'\nimport { v4 } from \"uuid\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\n\nimport CSLS from \"../../../../tools/cs_local_storage\"\nimport { get_list_query_variables } from './tools'\n\nimport { \n  Grid,\n} from \"tabler-react\";\n\n\n\nfunction getDefaultValue(value) {\n  let defaultValue = localStorage.getItem(value)\n  if (defaultValue) {\n    return defaultValue\n  } else {\n    return \"\"\n  }\n}\n\n\nfunction updateLocalStorageAndRefetch(key, value, refetch) {\n  localStorage.setItem(key, value)\n  refetch(get_list_query_variables())\n\n}\n\nconst selectClass = \"form-control custom-select mb-2\"\n\nconst ShopClassesScheduleFilter = ({ t, history, data, refetch }) => (\n  <Grid.Row>\n    <Grid.Col md={4}>\n      {/* Locations */}\n      <select \n        className={selectClass}\n        defaultValue={getDefaultValue(CSLS.SHOP_CLASSES_FILTER_LOCATION)}\n        onChange={ (event) => {\n          updateLocalStorageAndRefetch(\n            CSLS.SHOP_CLASSES_FILTER_LOCATION,\n            event.target.value,\n            refetch\n          )\n        }}\n      >\n        <option value=\"\" key={v4()}>{t(\"shop.classes.filter_all_locations\")}</option>\n        {data.organizationLocations.edges.map(({ node }) =>\n          <option value={node.id} key={v4()}>{node.name}</option>\n        )}\n      </select>\n    </Grid.Col>\n    <Grid.Col md={4}>\n      {/* Classtypes */}\n      <select \n        className={selectClass}\n        defaultValue={getDefaultValue(CSLS.SHOP_CLASSES_FILTER_CLASSTYPE)}\n        onChange={ (event) => {\n          updateLocalStorageAndRefetch(\n            CSLS.SHOP_CLASSES_FILTER_CLASSTYPE,\n            event.target.value,\n            refetch\n          )\n        }}\n      >\n        <option value=\"\" key={v4()}>{t(\"shop.classes.filter_all_classtypes\")}</option>\n        {data.organizationClasstypes.edges.map(({ node }) =>\n          <option value={node.id} key={v4()}>{node.name}</option>\n        )}\n      </select>\n    </Grid.Col>\n    <Grid.Col md={4}>\n      {/* Levels */}\n      <select \n        className={selectClass}\n        defaultValue={getDefaultValue(CSLS.SHOP_CLASSES_FILTER_LEVEL)}\n        onChange={ (event) => {\n          updateLocalStorageAndRefetch(\n            CSLS.SHOP_CLASSES_FILTER_LEVEL,\n            event.target.value,\n            refetch\n          )\n        }}\n      >\n        <option value=\"\" key={v4()}>{t(\"shop.classes.filter_all_levels\")}</option>\n        {data.organizationLevels.edges.map(({ node }) =>\n          <option value={node.id} key={v4()}>{node.name}</option>\n        )}\n      </select>\n    </Grid.Col>\n  </Grid.Row>\n);\n\nexport default withTranslation()(withRouter(ShopClassesScheduleFilter))","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport moment from 'moment'\n\nimport CSLS from \"../../../../tools/cs_local_storage\"\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\";\n\n\nfunction ShopClassesScheduleButtonBook({ t, match, history, scheduleItemId, classDate, bookingOpenOn, bookingStatus }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  let buttonBook\n  // Uncomment the line below when testing the book component statuses. (Development only)\n  // bookingStatus = \"OK\"\n\n  switch(bookingStatus) {\n    case \"NOT_YET_OPEN\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.open_on\") + \" \" + moment(bookingOpenOn).format(dateFormat)}\n        </span>\n      break\n    case \"CANCELLED\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.cancelled\")}\n        </span>\n      break\n    case \"HOLIDAY\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.cancelled_holiday\")}\n        </span>\n      break\n    case \"FINISHED\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.finished\")}\n        </span>\n      break\n    case \"ONGOING\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.ongoing\")}\n        </span>\n      break\n      break\n    case \"FULL\":\n      buttonBook = <span className=\"pull-right\">\n          {t(\"shop.classes.class_booking_status.full\")}\n        </span>\n      break\n    case \"OK\":\n      buttonBook = <Link to={`/shop/classes/book/${scheduleItemId}/${classDate}`}>\n          <Button className=\"pull-right\" color=\"primary\" outline>\n            {t(\"general.book\")} <Icon name=\"chevron-right\" />\n          </Button>\n        </Link>\n      break\n    \n    default:\n      buttonBook = \"\"\n  }\n  \n  return buttonBook\n}\n\n\nexport default withTranslation()(withRouter(ShopClassesScheduleButtonBook))\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport moment from 'moment'\n\nimport CSLS from \"../../../../tools/cs_local_storage\"\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Button,\n  Card, \n  Grid,\n  Icon,\n  List,\n  Media,\n  Table,\n} from \"tabler-react\";\nimport ShopClassesScheduleBase from \"./ShopClassesScheduleBase\"\nimport ShopClassesScheduleFilter from \"./ShopClassesScheduleFilter\"\nimport ShopClassesScheduleButtonBook from \"./ShopClassesScheduleButtonBook\"\nimport CSDatePicker from \"../../../ui/CSDatePicker\"\n\nimport { GET_CLASSES_QUERY } from \"../../../schedule/classes/queries\"\n\nimport { get_list_query_variables } from './tools'\n\n\nfunction capitalize(word) {\n  const lower = word.toLowerCase();\n  return word.charAt(0).toUpperCase() + lower.slice(1);\n}\n\n\n// Set some initial values for dates, if not found\nif (!localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM)) {\n  console.log('date from not found... defaulting to today...')\n  localStorage.setItem(CSLS.SHOP_CLASSES_DATE_FROM, moment().format('YYYY-MM-DD')) \n  localStorage.setItem(CSLS.SHOP_CLASSES_DATE_UNTIL, moment().add(6, 'days').format('YYYY-MM-DD')) \n} else {\n  const date_from  = moment(localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM))\n  if (date_from.isBefore(moment(), \"day\")) {\n    localStorage.setItem(CSLS.SHOP_CLASSES_DATE_FROM, moment().format('YYYY-MM-DD')) \n    localStorage.setItem(CSLS.SHOP_CLASSES_DATE_UNTIL, moment().add(6, 'days').format('YYYY-MM-DD')) \n  }\n}\n\n\n\nfunction ShopClassesSchedule({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const title = t(\"shop.home.title\")\n  const { loading, error, data, refetch } = useQuery(GET_CLASSES_QUERY, {\n    variables: get_list_query_variables()\n  })\n\n  if (loading) return (\n    <ShopClassesScheduleBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopClassesScheduleBase>\n  )\n  if (error) return (\n    <ShopClassesScheduleBase title={title}>\n      {t(\"shop.classes.error_loading\")}\n    </ShopClassesScheduleBase>\n  )\n\n  console.log(data)\n  console.log(data.scheduleClasses)\n\n  return (\n    <ShopClassesScheduleBase \n      title={title}\n      pageHeaderOptions={\n        <Button.List className=\"schedule-list-page-options-btn-list\">\n          <Button \n            icon=\"chevron-left\"\n            color=\"secondary\"\n            disabled={ (moment(localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM)).subtract(7, 'days').isBefore(moment(), \"day\")) }\n            onClick={ () => {\n              let prevWeekFrom = moment(localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM)).subtract(7, 'days')\n              let prevWeekUntil = moment(prevWeekFrom).add(6, 'days')\n              \n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_FROM, prevWeekFrom.format('YYYY-MM-DD')) \n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_UNTIL, prevWeekUntil.format('YYYY-MM-DD')) \n\n              refetch(get_list_query_variables())\n          }} />\n          <Button \n            color=\"secondary\"\n            onClick={ () => {\n              let currentWeekFrom = moment()\n              let currentWeekUntil = moment(currentWeekFrom).add(6, 'days')\n\n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_FROM, currentWeekFrom.format('YYYY-MM-DD')) \n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_UNTIL, currentWeekUntil.format('YYYY-MM-DD')) \n              \n              refetch(get_list_query_variables())\n          }} > \n            {t(\"general.today\")}\n          </Button>\n          <Button \n            icon=\"chevron-right\"\n            color=\"secondary\"\n            onClick={ () => {\n              let nextWeekFrom = moment(localStorage.getItem(CSLS.SHOP_CLASSES_DATE_FROM)).add(7, 'days')\n              let nextWeekUntil = moment(nextWeekFrom).add(6, 'days')\n              \n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_FROM, nextWeekFrom.format('YYYY-MM-DD')) \n              localStorage.setItem(CSLS.SHOP_CLASSES_DATE_UNTIL, nextWeekUntil.format('YYYY-MM-DD')) \n\n              refetch(get_list_query_variables())\n          }} />\n        </Button.List> \n      }\n    >\n      \n      <ShopClassesScheduleFilter data={data} refetch={refetch} />\n      {data.scheduleClasses.map(({ date, bookingOpenOn, classes }) =>\n        <Grid.Row key={v4()}>\n          <Grid.Col md={12}>\n              <Card>\n                <Card.Header>\n                  <Card.Title>\n                    <b>{capitalize(moment(date).format(\"dddd\"))}</b> {' '}\n                    <span className=\"text-muted\">\n                      {moment(date).format(\"LL\")} \n                    </span>\n                  </Card.Title>\n                </Card.Header>                \n                {!(classes.length) ? \n                  <Card.Body>\n                    <p>{t('schedule.classes.empty_list')}</p>\n                  </Card.Body> :\n                  <Table cards>\n                    <Table.Body>\n                      {classes.map(({ \n                        scheduleItemId, \n                        frequencyType,\n                        date, \n                        status,\n                        holiday,\n                        holidayName,\n                        description,\n                        account, \n                        role,\n                        account2,\n                        role2,\n                        organizationLocationRoom, \n                        organizationClasstype, \n                        organizationLevel,\n                        timeStart, \n                        timeEnd,\n                        displayPublic,\n                        bookingStatus }) => (\n                          <Table.Row>\n                            <Table.Col>\n                            <h4>\n                              {moment(date + ' ' + timeStart).format(timeFormat)} {' - '}\n                              {moment(date + ' ' + timeEnd).format(timeFormat)} { ' ' }\n                            </h4> \n                            { organizationClasstype.name } { (account) ? ' ' + t(\"general.with\") + ' ' + account.fullName : \"\" } <br />\n                            <span className=\"text-muted\">{ organizationLocationRoom.organizationLocation.name }</span>\n                            </Table.Col>\n                            <Table.Col>\n                              <ShopClassesScheduleButtonBook\n                                scheduleItemId={scheduleItemId}\n                                classDate={date}\n                                bookingOpenOn={bookingOpenOn}\n                                bookingStatus={bookingStatus}\n                              />\n                            </Table.Col>\n                          </Table.Row>\n                        )\n                      )}\n                    </Table.Body>\n                  </Table>\n                }\n              </Card>\n          </Grid.Col>\n        </Grid.Row>\n      )}\n\n    </ShopClassesScheduleBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClassesSchedule))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopContactBase({ t, match, history, children, pageHeaderOptions=\"\" }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")} pageHeaderOptions={pageHeaderOptions}>\n      <h4>{t(\"shop.contact.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopContactBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport moment from 'moment'\n\n\nimport {\n  Button,\n  Card, \n  Grid,\n  Icon,\n  List,\n  Media,\n  Table,\n} from \"tabler-react\";\nimport ShopContactBase from \"./ShopContactBase\"\n\nimport { GET_ORGANIZATION_QUERY } from \"../../organization/organization/queries\"\n\n\nfunction ShopContact({ t, match, history }) {\n  // The ID is fixed, as there's only one organization supported at the moment... easy peasy.\n  const { loading, error, data, refetch } = useQuery(GET_ORGANIZATION_QUERY, {\n    variables: { id: \"T3JnYW5pemF0aW9uTm9kZToxMDA=\"}\n  })\n\n  if (loading) return (\n    <ShopContactBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopContactBase>\n  )\n  if (error) return (\n    <ShopContactBase>\n      {t(\"shop.classpasses.error_loading\")}\n    </ShopContactBase>\n  )\n\n  console.log(data)\n  console.log(data.organization)\n\n  const organization = data.organization\n\n  return (\n    <ShopContactBase>\n      <Card title={organization.name}>\n        <Card.Body>\n          <div dangerouslySetInnerHTML={{ __html: organization.address}} />\n          <p>{organization.email} <br /> {organization.phone}</p>\n          <p>{organization.registration} <br /> {organization.taxRegistration}</p>\n        </Card.Body>\n      </Card>\n    </ShopContactBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopContact))\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\";\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopEventsBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")}>\n      <h4>{t(\"shop.events.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEventsBase))","import { gql } from \"@apollo/client\"\n\nexport const GET_SCHEDULE_EVENTS_QUERY = gql`\n  query ScheduleEvents($before:String, $after:String) {\n    scheduleEvents(first: 100, before: $before, after:$after, archived:false, displayShop:true) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          displayShop\n          autoSendInfoMail\n          organizationLocation {\n            id\n            name\n          }\n          name\n          tagline\n          preview\n          description\n          organizationLevel {\n            id\n            name\n          }\n          teacher {\n            id \n            fullName\n          }\n          teacher2 {\n            id\n            fullName\n          }\n          dateStart\n          dateEnd\n          timeStart\n          timeEnd\n          infoMailContent\n          scheduleItems {\n            edges {\n              node {\n                id\n              }\n            }\n          }\n          media(first: 1) {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n              startCursor\n              endCursor\n            }\n            edges {\n              node {\n                urlImageThumbnailSmall\n                urlImageThumbnailLarge\n              }\n            }\n          }\n          createdAt\n          updatedAt\n        }\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\n\nimport {\n  Button,\n  Grid,\n  Icon,\n  List,\n  GalleryCard\n} from \"tabler-react\";\nimport ShopEventsBase from \"./ShopEventsBase\"\n// import ShopClasspassPricingCard from \"../classpass/ShopClasspassPricingCard\"\n\nimport { GET_SCHEDULE_EVENTS_QUERY } from \"./queries\"\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopEvents({ t, match, history }) {\n  const title = t(\"shop.home.title\")\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENTS_QUERY)\n\n  if (loading) return (\n    <ShopEventsBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopEventsBase>\n  )\n  if (error) return (\n    <ShopEventsBase title={title}>\n      {t(\"shop.classpasses.error_loading\")}\n    </ShopEventsBase>\n  )\n\n  console.log(data)\n  const scheduleEvents = data.scheduleEvents\n  console.log(scheduleEvents)\n\n  return (\n    <ShopEventsBase title={title}>\n        <Grid.Row>\n          {scheduleEvents.edges.map(({ node }) => (\n            <Grid.Col xs={12} sm={12} md={6} lg={4} key={v4()}>\n              <GalleryCard>\n                {(node.media.edges.length) ?\n                  <GalleryCard.Image \n                    src={(node.media.edges.length) ? node.media.edges[0].node.urlImageThumbnailLarge: \"\"} \n                    href={`/shop/events/${node.id}`}\n                  /> : \"\" }\n                <GalleryCard.Footer>\n                  <h4>{node.name}</h4>\n                </GalleryCard.Footer>\n                <GalleryCard.Footer>                  \n                  <GalleryCard.Details\n                    fullName={<span className=\"\">{(node.teacher) ? node.teacher.fullName: \"\"}</span>}\n                    dateString={node.organizationLocation.name}\n                  />\n                  <GalleryCard.IconGroup>\n                  <GalleryCard.IconItem \n                    name=\"calendar\"\n                    label={node.dateStart}\n                    right={false}\n                    RootComponent=\"span\"\n                  />\n                  </GalleryCard.IconGroup>\n                </GalleryCard.Footer>\n                <Link to={`/shop/events/${node.id}`}>\n                  <GalleryCard.Footer pt={10}>\n                    <Button\n                      block\n                      color=\"link\"\n                    >\n                      {t(\"shop.events.tell_me_more\")} <Icon name=\"chevron-right\" />\n                    </Button>\n                  </GalleryCard.Footer>\n                </Link>\n              </GalleryCard>\n            </Grid.Col>\n          ))}\n        </Grid.Row>\n\n        \n    </ShopEventsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEvents))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopEventBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      return_url=\"/shop/events\"\n      // checkoutProgress=\"order\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEventBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport moment from 'moment'\n\nimport {\n  Badge,\n  Grid,\n  Icon,\n  List,\n  PricingCard\n} from \"tabler-react\";\n\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopEventTicketPricingCard({ t, match, eventTicket, showButton=true, active=false }) {\n  // eventTicket should be an object with at least the following values from an organizationClasspass object:\n  // id, name, priceDisplay, \n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  console.log(eventTicket)\n  const ticketScheduleItems = eventTicket.ticketScheduleItems\n\n  const eventId = match.params.event_id\n\n  return (\n    <PricingCard active={active}>\n      <PricingCard.Category>\n        {eventTicket.name}\n        {(eventTicket.isEarlybirdPrice) ? <div><Badge color=\"primary\">{t(\"shop.event.ticket.earlybird_price\")}</Badge></div> : \"\"}\n      </PricingCard.Category>\n      <PricingCard.Price>\n        { (eventTicket.price == 0) ? \n          t(\"shop.event.ticket.free\") :\n          eventTicket.totalPriceDisplay \n        }\n      </PricingCard.Price>\n      <PricingCard.AttributeList>\n        {(eventTicket.isEarlybirdPrice) ? \n          <PricingCard.AttributeItem>\n            {t(\"shop.event.ticket.regular_price\")} {eventTicket.priceDisplay}\n          </PricingCard.AttributeItem>\n          : \"\" \n        }\n        {ticketScheduleItems.edges.map(({ node }) => (\n          <PricingCard.AttributeItem>\n              <Icon name=\"calendar\" /> { \" \" }\n              {moment(node.scheduleItem.dateStart).format(dateFormat)} {\" \"}\n              {/* Start & end time */}\n              {moment(node.scheduleItem.dateStart + ' ' + node.scheduleItem.timeStart).format(timeFormat)} {' - '}\n              {moment(node.scheduleItem.dateStart + ' ' + node.scheduleItem.timeEnd).format(timeFormat)} { ' ' }\n            <br />\n            <small className=\"text-muted\">\n              {node.scheduleItem.name} <Icon name=\"map-pin\" /> {node.scheduleItem.organizationLocationRoom.organizationLocation.name}\n            </small>\n          </PricingCard.AttributeItem>\n        ))}\n      </PricingCard.AttributeList>\n      {(showButton && !eventTicket.isSoldOut) ?\n        <Link to={`/shop/events/${eventId}/ticket/${eventTicket.id}`}>\n          <PricingCard.Button>\n            {t(\"shop.event.ticket.choose\")} <Icon name=\"chevron-right\" />\n          </PricingCard.Button>\n        </Link>\n        : \"\" \n      }\n      {(showButton && eventTicket.isSoldOut) ? \n        <PricingCard.Button \n          className=\"disabled\"\n        >\n          {t('general.sold_out')}\n        </PricingCard.Button> : \"\"}\n    </PricingCard>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEventTicketPricingCard))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_EVENT_QUERY = gql`\nquery ScheduleEvent($id: ID!) {\n  scheduleEvent(id: $id) {\n    id\n    archived\n    displayPublic\n    displayShop\n    autoSendInfoMail\n    organizationLocation {\n      id\n      name\n    }\n    name\n    tagline\n    preview\n    description\n    organizationLevel {\n      id\n      name\n    }\n    teacher {\n      id \n      fullName\n    }\n    teacher2 {\n      id\n      fullName\n    }\n    dateStart\n    dateEnd\n    timeStart\n    timeEnd\n    infoMailContent\n    media(first: 1) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          urlImageThumbnailSmall\n          urlImageThumbnailLarge\n        }\n      }\n    }\n    tickets(first: 100) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          name\n          price\n          priceDisplay\n          totalPrice\n          totalPriceDisplay\n          description\n          isSoldOut\n          isEarlybirdPrice\n          ticketScheduleItems(included: true, orderBy: \"date_start\") {\n           pageInfo{\n            hasNextPage\n            hasPreviousPage\n            startCursor\n            endCursor\n            }\n            edges {\n              node {\n                id\n                included\n                scheduleItem {\n                  name\n                  dateStart\n                  timeStart\n                  timeEnd\n                  organizationLocationRoom {\n                    organizationLocation {\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    createdAt\n    updatedAt\n  }\n}\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport {\n  Card,\n  GalleryCard,\n  Grid,\n  Icon,\n  List\n} from \"tabler-react\"\nimport { TimeStringToJSDateOBJ } from '../../../tools/date_tools'\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport ShopEventBase from \"./ShopEventBase\"\nimport ShopEventTicketPricingCard from \"./ShopEventTicketPricingCard\"\n\nimport { GET_SCHEDULE_EVENT_QUERY } from \"./queries\"\n\n\nfunction ShopEvent({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const title = t(\"shop.home.title\")\n  const eventId = match.params.event_id\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_QUERY, {\n    variables: { id: eventId }\n  })\n\n  if (loading) return (\n    <ShopEventBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopEventBase>\n  )\n  if (error) return (\n    <ShopEventBase title={title}>\n      {t(\"shop.event.error_loading\")}\n    </ShopEventBase>\n  )\n\n  console.log(data)\n  const event = data.scheduleEvent\n  const tickets = event.tickets\n  console.log(event)\n\n  return (\n    <ShopEventBase title={title}>\n      <Grid.Row>\n        <Grid.Col xs={12} sm={12} md={12} lg={12}>\n          <h3>{event.name}</h3>\n          <h5>{event.tagline}</h5>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col xs={12} sm={12} md={6} lg={4}>\n          {((event.media.edges.length) ? \n            <GalleryCard>\n              <GalleryCard.Image src={(event.media.edges.length) ? event.media.edges[0].node.urlImageThumbnailLarge : \"\"} />\n              <GalleryCard.Details>\n                {(event.media.edges.length) ? event.media.edges[0].node.description : \"\"}\n              </GalleryCard.Details>\n            </GalleryCard>\n          : \"\" )}\n          <Card title={t(\"general.info\")}>\n            <Card.Body>\n              <h6>{t('general.teacher')}: {(event.teacher) ? event.teacher.fullName: \"\"}</h6>\n              <h6>{t('general.start')}: {(event.dateStart) ? moment(event.dateStart).format(dateFormat): \"\"}</h6>\n              <h6>{t('general.end')}: {(event.dateEnd) ? moment(event.dateEnd).format(dateFormat): \"\"}</h6>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col xs={12} sm={12} md={6} lg={8}>\n          <Card title={t(\"general.description\")}>\n            <Card.Body>\n              <h5>{t('general.description')}</h5>\n              <div dangerouslySetInnerHTML={{ __html: event.description}} />\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col xs={12} sm={12} md={12} lg={12}>\n          <h3>{t(\"shop.event.tickets\")}</h3>\n        </Grid.Col>\n        {tickets.edges.map(({ node }) => (\n          <Grid.Col xs={12} sm={12} md={6} lg={4}>\n            <ShopEventTicketPricingCard eventID={eventId} eventTicket={node} />\n          </Grid.Col>\n        ))}\n      </Grid.Row>\n    </ShopEventBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEvent))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopEventTicketBase({ t, match, history, children }) {\n  const eventId = match.params.event_id\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      return_url={`/shop/events/${eventId}`}\n      checkoutProgress=\"order\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopEventTicketBase))","const cs_django_links = {\n    EXPORT_TERMS_AND_CONDITIONS: \"/d/export/terms-and-conditions\",\n    EXPORT_PRIVACY_POLICY: \"/d/export/privacy-policy\",\n}\n\nexport default cs_django_links\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\nimport {\n  Button,\n  Form,\n  Icon\n} from \"tabler-react\"\n\nimport cs_django_links from \"../../tools/cs_django_links\"\n\n\nconst ShopClasspassForm = ({ t, isSubmitting, errors }) => (\n    <FoForm>\n      <Form.Group label={t('shop.order.message')}>\n        <Field type=\"text\" \n               component=\"textarea\"\n               name=\"message\" \n               className={(errors.message) ? \"form-control is-invalid\" : \"form-control\"} \n               autoComplete=\"off\" />\n        <ErrorMessage name=\"message\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <small className=\"text-muted\">\n        {t(\"shop.order.by_placing_this_order\")} <br />\n        <ul>\n          <li>{t(\"shop.order.agree_terms\")} {\" \"}\n            <a target=\"_blank\" href={cs_django_links.EXPORT_TERMS_AND_CONDITIONS}>{t(\"general.terms_and_conditions\")}</a>\n          </li>\n          <li>{t(\"shop.order.agree_privacy\")} {\" \"}\n            <a target=\"_blank\" href={cs_django_links.EXPORT_PRIVACY_POLICY}>{t(\"general.privacy_policy\")}</a>\n          </li>\n        </ul>\n      </small>\n      <Button \n        block\n        color=\"primary\"\n        className=\"pull-right\" \n        type=\"submit\" \n        disabled={isSubmitting}\n      >\n        {t('shop.place_order')} <Icon name=\"chevron-right\" />\n      </Button>\n    </FoForm>\n)\n\nexport default withTranslation()(withRouter(ShopClasspassForm))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SCHEDULE_EVENT_TICKET_QUERY = gql`\n  query ScheduleEventTicket($id: ID!) {\n    scheduleEventTicket(id:$id) {\n      id\n      name\n      price\n      priceDisplay\n      totalPrice\n      totalPriceDisplay\n      description\n      isSoldOut\n      isEarlybirdPrice\n      ticketScheduleItems(included: true, orderBy: \"date_start\") {\n        pageInfo{\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n        }\n        edges {\n          node {\n            id\n            included\n            scheduleItem {\n              name\n              dateStart\n              timeStart\n              timeEnd\n              organizationLocationRoom {\n                organizationLocation {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n      scheduleEvent {\n        id\n        name\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport {\n  Card,\n  Grid,\n  Icon,\n  List\n} from \"tabler-react\"\nimport { TimeStringToJSDateOBJ } from '../../../tools/date_tools'\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport ShopEventTicketBase from \"./ShopEventTicketBase\"\nimport ShopCheckoutForm from \"../ShopCheckoutForm\"\nimport ShopEventTicketPricingCard from \"../event/ShopEventTicketPricingCard\"\n\nimport { GET_SCHEDULE_EVENT_TICKET_QUERY } from \"./queries\"\nimport { CREATE_ORDER } from \"../queries\"\n\n\nfunction ShopEventTicket({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const title = t(\"shop.home.title\")\n  const scheduleEventTicketId = match.params.id\n  const eventId = match.params.event_id\n  const classDate = match.params.date\n\n  const { loading, error, data } = useQuery(GET_SCHEDULE_EVENT_TICKET_QUERY, {\n    variables: { id: scheduleEventTicketId }\n  })\n\n  const [createOrder, { data: createOrderData }] = useMutation(CREATE_ORDER)\n\n\n  if (loading) return (\n    <ShopEventTicketBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopEventTicketBase>\n  )\n  if (error) return (\n    <ShopEventTicketBase title={title}>\n      {t(\"shop.events.ticket.error_loading\")}\n    </ShopEventTicketBase>\n  )\n\n  console.log(data)\n  const eventTicket = data.scheduleEventTicket\n  console.log(eventTicket)\n\n  // Chceck sold out\n  if (eventTicket.isSoldOut) {\n    return (\n      <ShopEventTicketBase title={title}>\n        <Card title={t(\"shop.events.ticket.sold_out_title\")}>\n          <Card.Body>{t(\"shop.events.ticket.sold_out\")}</Card.Body>\n        </Card>\n      </ShopEventTicketBase>\n    )\n  }\n\n  return (\n    <ShopEventTicketBase title={title}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <h3>{eventTicket.scheduleEvent.name}</h3>\n        </Grid.Col>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Col md={4}>\n          <ShopEventTicketPricingCard eventId={eventId} eventTicket={eventTicket} showButton={false} active={true} />\n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"shop.events.ticket.additional_info\")}>\n            <Card.Body>\n              {(eventTicket.description) ?\n                <div dangerouslySetInnerHTML={{ __html: eventTicket.description}} />\n              : t(\"shop.events.ticket.no_additional_info\")}\n            </Card.Body>\n          </Card> \n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"shop.checkout.title\")}>\n            <Card.Body>\n              <Formik\n                initialValues={{ message: \"\" }}\n                // validationSchema={CLASSTYPE_SCHEMA}\n                onSubmit={(values, { setSubmitting }) => {\n\n                    let createOrderInput = {\n                      message: values.message,\n                      scheduleEventTicket: match.params.id,\n                    }\n\n\n                    createOrder({ variables: {\n                      input: createOrderInput,\n                      // file: values.image\n                    }, refetchQueries: [\n                        // {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": false }}\n                    ]})\n                    .then(({ data }) => {\n                        console.log('got data', data)\n                        console.log('good...  now redirect to the payment page')\n                        const orderId = data.createFinanceOrder.financeOrder.id\n                        history.push('/shop/checkout/payment/' + orderId)\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error)\n                        setSubmitting(false)\n                      })\n                }}\n                >\n                {({ isSubmitting, errors, values }) => (\n                  <ShopCheckoutForm \n                    isSubmitting={isSubmitting}\n                    errors={errors}\n                    values={values}\n                  />\n                )}\n              </Formik>\n\n              {/* When a user is not logged in, show a login button to redirect to the login page */}\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopEventTicketBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopEventTicket))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { gql } from \"@apollo/client\"\n\nexport const GET_SHOP_ANNOUNCEMENTS_QUERY = gql`\n  query OrganizationAnnouncements($after: String, $before: String) {\n    organizationAnnouncements(first: 100, before: $before, after: $after, displayPublic: true, displayShop: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          displayPublic\n          displayShop\n          title\n          content\n          dateStart\n          dateEnd\n          priority\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n// import { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\n// import {\n//   Icon,\n//   List\n// } from \"tabler-react\";\nimport ShopBase from \"../ShopBase\"\n\n\nfunction ShopHomeBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase title={t(\"shop.home.title\")}>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopHomeBase))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\n\nimport {\n  Card,\n  Grid,\n} from \"tabler-react\";\n\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\nimport { GET_SHOP_ANNOUNCEMENTS_QUERY } from \"./queries\"\n\nimport ShopHomeBase from \"./ShopHomeBase\"\n\nfunction ShopHome({ t, match, history }) {\n  \n  const { loading, error, data } = useQuery(GET_SHOP_ANNOUNCEMENTS_QUERY);\n\n  if (loading) return (\n    <ShopHomeBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopHomeBase>\n  )\n  if (error) return (\n    <ShopHomeBase>\n      {t(\"shop.home.announcements.error_loading\")}\n    </ShopHomeBase>\n  )\n\n  const announcements = data.organizationAnnouncements\n\n  return (\n    <ShopHomeBase title={t(\"shop.home.title\")}>\n      <Grid.Row cards deck>\n        {(announcements.edges.length) ? announcements.edges.map(({ node }) => (\n          <Grid.Col md={6}>\n            <Card title={node.title}>\n              <Card.Body>\n                <div dangerouslySetInnerHTML={{ __html:node.content }}></div>\n              </Card.Body>\n            </Card> \n          </Grid.Col>\n        )) : \"\"\n        }\n      </Grid.Row>\n    </ShopHomeBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopHome))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../../ShopBase\"\n\nfunction ShopCheckoutPaymentBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      checkoutProgress=\"payment\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutPaymentBase))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ORDER_QUERY = gql`\n  query FinanceOrder($id: ID!) {\n    financeOrder(id: $id) {\n      id\n      orderNumber\n      account {\n        id\n        fullName\n      }\n      message\n      status\n      total\n      totalDisplay\n      createdAt\n      items {\n        edges {\n          node {\n            id\n            productName\n            description\n            quantity\n            totalDisplay\n            scheduleItem {\n              id\n            }\n            attendanceDate\n          }\n        }\n      }\n    }\n  }\n`\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { v4 } from 'uuid'\n\nimport {\n  Card,\n  Icon,\n  Table,\n} from \"tabler-react\";\n\nimport { GET_ORDER_QUERY } from \"../queries\"\nimport ShopCheckoutClassInfo from \"../class_info/ShopCheckoutClassInfo\"\nimport { dateToLocalISO } from '../../../../tools/date_tools'\nimport { DisplayClassInfo } from '../../tools'\n\n\nfunction ShopCheckoutOrderSummary({ t, id, complete=false }) {\n  const { loading, error, data } = useQuery(GET_ORDER_QUERY, {\n    variables: { id: id }\n  })\n\n  if (loading) return (\n      t(\"general.loading_with_dots\")\n  )\n  if (error) return (\n      t(\"shop.checkout.order_summary.error_loading\")\n  )\n\n  console.log(data)\n  const order = data.financeOrder\n  console.log(order)\n  const orderItems = order.items.edges\n  console.log(orderItems)\n\n  let classDate \n  let scheduleItemId\n  let item\n  console.log(\"Start looping\")\n  for (item of orderItems) {\n    let node = item.node\n    console.log(node)\n    if (node.scheduleItem) {\n      classDate = node.attendanceDate\n      scheduleItemId = node.scheduleItem.id\n    }\n  }\n\n  console.log('schedule item found!')\n  console.log(classDate)\n  console.log(scheduleItemId)\n\n\n  return (\n    <Card title={t(\"shop.checkout.payment.order_summary\")}>\n      <div className=\"table-responsive\">\n        <Table cards={true}>\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader>{t('general.item')}</Table.ColHeader>\n              <Table.ColHeader>{t('general.price')}</Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {orderItems.map(({ node }) => (\n              <Table.Row key={v4()}>\n                <Table.Col>\n                  {node.productName} <br /> \n                  <span className=\"text-muted\">\n                    {node.description}\n                  </span>\n                </Table.Col>\n                <Table.Col>{node.totalDisplay}</Table.Col>\n              </Table.Row>      \n            ))}\n            <Table.Row className=\"bold\">\n              <Table.Col>\n                {t(\"general.total\")}\n              </Table.Col>\n              <Table.Col>\n                  {order.totalDisplay}\n              </Table.Col>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </div>\n      <Card.Body>\n        {(order.message) ?\n          <span className=\"text-muted\">\n            <h5><Icon name=\"message-square\" /> {t(\"shop.checkout.order_summary.message\")}</h5> \n            {/* Order message */}\n            {order.message}\n            <br /><br />\n          </span> \n          : \"\"\n        }\n        {(scheduleItemId && classDate) ?\n          <ShopCheckoutClassInfo \n            scheduleItemId={scheduleItemId}\n            date={classDate}\n            complete={complete}\n          />\n          : \"\"\n        }\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutOrderSummary))\n","import { gql } from \"@apollo/client\"\n\n\nexport const CREATE_PAYMENT_LINK = gql`\nmutation CreateFinanceOrderPaymentLink($id: ID!) {\n  createFinanceOrderPaymentLink(id: $id) {\n    financeOrderPaymentLink {\n      paymentLink\n    }\n  }\n}\n`","// @flow\n\nimport React, { useContext, useRef, useState } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { toast } from 'react-toastify'\nimport { Link } from 'react-router-dom'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n} from \"tabler-react\";\nimport ShopCheckoutPaymentBase from \"./ShopCheckoutPaymentBase\"\nimport ShopCheckoutOrderSummary from \"../order_summary/ShopCheckoutOrderSummary\"\n\nimport { GET_ORDER_QUERY } from \"../queries\"\nimport { CREATE_PAYMENT_LINK } from \"./queries\"\n\n\nfunction ShopCheckoutPayment({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const onlinePaymentsAvailable = appSettings.onlinePaymentsAvailable\n  const btnPayNow = useRef(null);\n  const initialBtnText = <span><Icon name=\"credit-card\" /> {t('shop.checkout.payment.to_payment')} <Icon name=\"chevron-right\" /></span>\n  const [btn_text, setBtnText] = useState(initialBtnText)\n  const title = t(\"shop.home.title\")\n  const id = match.params.id\n  const { loading, error, data } = useQuery(GET_ORDER_QUERY, {\n    variables: { id: id }\n  })\n\n  const [createPaymentLink] = useMutation(CREATE_PAYMENT_LINK)\n\n  if (loading) return (\n    <ShopCheckoutPaymentBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopCheckoutPaymentBase>\n  )\n  if (error) return (\n    <ShopCheckoutPaymentBase title={title}>\n      {t(\"shop.classpass.error_loading\")}\n    </ShopCheckoutPaymentBase>\n  )\n\n  console.log(data)\n  const order = data.financeOrder\n  console.log(order)\n  const orderItems = order.items.edges\n  console.log(orderItems)\n\n  function onClickPay() {\n    btnPayNow.current.setAttribute(\"disabled\", \"disabled\")\n    setBtnText(t(\"shop.checkout.payment.redirecting\"))\n    // btnPayNow.current.setValue(\"redirecting...\")\n    // btnPayNow\n    // btnPayNow.current.removeAttribute(\"disabled\")\n    createPaymentLink({ variables: { id: id } }).then(({ data }) => {\n      console.log('got data', data);\n      const paymentLink = data.createFinanceOrderPaymentLink.financeOrderPaymentLink.paymentLink\n      window.location.href = paymentLink\n    }).catch((error) => {\n      toast.error((t('general.toast_server_error')) +  error, {\n          position: toast.POSITION.BOTTOM_RIGHT\n        })\n      console.log('there was an error sending the query', error)\n    })\n  }\n\n  let msgNextStep\n  let buttonNext\n  if (onlinePaymentsAvailable) {\n    msgNextStep = t(\"shop.checkout.payment.order_received_to_payment_text\")\n    buttonNext = <button\n      className=\"btn btn-block btn-success\"\n      ref={btnPayNow}\n      onClick={ onClickPay }\n    >\n      {btn_text}\n    </button>\n  } else {\n    msgNextStep = t(\"shop.checkout.payment.order_received_to_profile_text\")\n    buttonNext = <Link to=\"/\">\n      <Button\n        block\n        color=\"success\"\n      >\n        {t(\"shop.checkout.payment.to_profile\")} <Icon name=\"chevron-right\" />\n      </Button>\n    </Link>\n  }\n\n\n  return (\n    <ShopCheckoutPaymentBase title={title}>\n        <Grid.Row>\n          <Grid.Col md={6}>\n            <Card title={t(\"shop.checkout.payment.order_received\")}>\n              <Card.Body>\n                <h5 className={\"mb-4\"}>{t(\"shop.checkout.payment.order_received_subheader\")}</h5>\n                {t(\"shop.checkout.payment.order_received_to_payment_explanation\")} <br />< br />\n                {msgNextStep}\n              </Card.Body>\n              <Card.Footer>\n                {buttonNext}\n              </Card.Footer>\n            </Card>\n          </Grid.Col>\n          <Grid.Col md={6}>\n            <ShopCheckoutOrderSummary id={id} />\n          </Grid.Col>\n        </Grid.Row>\n    </ShopCheckoutPaymentBase>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopCheckoutPayment))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../../ShopBase\"\n\nfunction ShopCheckoutCompleteBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      checkoutProgress=\"complete\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutCompleteBase))","// @flow\n\nimport React, { useRef, useState } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon\n} from \"tabler-react\";\nimport ShopCheckoutCompleteBase from \"./ShopCheckoutCompleteBase\"\nimport ShopCheckoutOrderSummary from \"../order_summary/ShopCheckoutOrderSummary\"\n\nimport { GET_ORDER_QUERY } from \"../queries\"\n\n\nfunction ShopCheckoutComplete({ t, match, history }) {\n  const btnPayNow = useRef(null);\n  const initialBtnText = <span><Icon name=\"credit-card\" /> {t('shop.checkout.payment.to_payment')} <Icon name=\"chevron-right\" /></span>\n  const [btn_text, setBtnText] = useState(initialBtnText)\n  const title = t(\"shop.home.title\")\n  const id = match.params.id\n  const { loading, error, data } = useQuery(GET_ORDER_QUERY, {\n    variables: { id: id }\n  })\n\n  if (loading) return (\n    <ShopCheckoutCompleteBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopCheckoutCompleteBase>\n  )\n  if (error) return (\n    <ShopCheckoutCompleteBase title={title}>\n      {t(\"shop.classpass.error_loading\")}\n    </ShopCheckoutCompleteBase>\n  )\n\n  console.log(data)\n  const order = data.financeOrder\n  console.log(order)\n  const orderItems = order.items.edges\n  console.log(orderItems)\n\n  // Order not found\n  if (!order) {\n    return (\n      <ShopCheckoutCompleteBase title={title}>\n        {t(\"shop.checkout.complete.order_not_found\")}\n      </ShopCheckoutCompleteBase>\n    )\n  }\n\n  let subHeader = \"\"\n  let contentText = \"\"\n  let paymentText = \"\"\n  let complete = false\n\n  // Success!\n  if (order.status == \"DELIVERED\") {\n    // Thank you message\n    subHeader = t(\"shop.checkout.complete.success_subheader\") \n    // Something to explain the user what's next\n    contentText = t(\"shop.checkout.complete.success_content_text\")\n    complete = true\n\n    // Confirm receiving payment to user\n    if (order.total) {\n      paymentText = t(\"shop.checkout.complete.success_payment_text\")\n    }\n  } else {\n    // Fail...\n    // Looks like something went wrong message\n    subHeader = t(\"shop.checkout.complete.fail_subheader\") \n    // Notify user of ways to contact\n    contentText = t(\"shop.checkout.complete.fail_content_text\")\n\n    // Notify user that payment hasn't been received\n    if (order.total) {\n      paymentText = t(\"shop.checkout.complete.fail_payment_text\")\n    }\n  }\n\n\n  return (\n    <ShopCheckoutCompleteBase title={title}>\n        <Grid.Row>\n          <Grid.Col md={6}>\n            <Card title={t(\"shop.checkout.complete.title\")}>\n              <Card.Body>\n                <h5 className={\"mb-4\"}>{subHeader}</h5>\n                {paymentText} <br />\n                {contentText}\n              </Card.Body>\n              <Card.Footer>\n                <Link to=\"/shop/account/\">\n                  <Button \n                    block\n                    color=\"success\"\n                  >\n                    {t(\"shop.complete.to_account\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </Card.Footer>\n            </Card>\n          </Grid.Col>\n          <Grid.Col md={6}>\n            <ShopCheckoutOrderSummary id={id} complete={complete} />\n          </Grid.Col>\n        </Grid.Row>\n    </ShopCheckoutCompleteBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopCheckoutComplete))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { gql } from \"@apollo/client\"\n\n\nexport const GET_ACCOUNT_CLASSES_QUERY = gql`\n  query ScheduleItemAttendance($before: String, $after: String, $account: ID!) {\n    scheduleItemAttendances(first: 20, before: $before, after: $after, account: $account, accountScheduleEventTicket_Isnull: true) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          cancellationPossible\n          attendanceType\n          date\n          bookingStatus\n          scheduleItem {\n            id\n            timeStart\n            timeEnd\n            organizationLocationRoom {\n              name\n              organizationLocation {\n                name\n              }\n            }\n            organizationClasstype {\n              name\n            }\n          }\n        }\n      } \n    }\n    user {\n      id\n      accountId\n      firstName\n      lastName\n      fullName\n      email\n      gender\n      dateOfBirth\n      address\n      postcode\n      city\n      country\n      phone\n      mobile\n      emergency\n    }\n  }\n`","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport {\n  Page,\n  Container\n} from \"tabler-react\";\nimport SiteWrapperShop from \"../../../SiteWrapperShop\"\nimport ShopAccountBack from \"../ShopAccountBack\"\n\n\nfunction ShopAccountClassesBase({ t, match, history, children, accountName=\"\" }) {\n  return (\n      <SiteWrapperShop>\n        <div className=\"my-3 my-md-5\">\n          <Container>\n            <Page.Header title={t(\"shop.account.title\")} subTitle={ accountName }>\n              <div className=\"page-options d-flex\">\n                <ShopAccountBack />\n              </div>\n            </Page.Header>\n            { children }\n          </Container>\n        </div>\n      </SiteWrapperShop>\n  )\n}\n\nexport default withTranslation()(withRouter(ShopAccountClassesBase))","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { v4 } from \"uuid\"\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nimport AppSettingsContext from '../../../context/AppSettingsContext'\nimport BadgeBookingStatus from '../../../ui/BadgeBookingStatus'\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Table\n} from \"tabler-react\"\nimport { GET_ACCOUNT_CLASSES_QUERY } from \"./queries\"\nimport GET_USER_PROFILE from \"../../../../queries/system/get_user_profile\"\n\nimport ShopAccountClassesBase from \"./ShopAccountClassesBase\"\nimport ContentCard from \"../../../general/ContentCard\"\n\n\nfunction ShopAccountClasses({t, match, history}) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n  const dateTimeFormat = dateFormat + ' ' + timeFormat\n\n  // Chain queries. First query user data and then query class attendance for that user once we have the account Id.\n  const { loading: loadingUser, error: errorUser, data: dataUser } = useQuery(GET_USER_PROFILE)\n  const { loading, error, data, fetchMore } = useQuery(GET_ACCOUNT_CLASSES_QUERY, {\n    skip: loadingUser || errorUser || !dataUser,\n    variables: {\n      account: dataUser && dataUser.user ? dataUser.user.accountId : null\n    }\n  })\n  // TODO: add cancel class button & query\n  // const [ updateOrder ] = useMutation(UPDATE_ORDER)\n\n  if (loading || loadingUser || !data) return (\n    <ShopAccountClassesBase>\n      {t(\"general.loading_with_dots\")}\n    </ShopAccountClassesBase>\n  )\n  if (error || errorUser) return (\n    <ShopAccountClassesBase>\n      {t(\"shop.account.classes.error_loading_data\")}\n    </ShopAccountClassesBase>\n  )\n\n  console.log(\"User data: ###\")\n  console.log(data)\n  console.log(dataUser)\n  const user = dataUser.user\n  const scheduleItemAttendances = data.scheduleItemAttendances\n\n  // Empty list\n  if (!scheduleItemAttendances.edges.length) {\n    return (\n      <ShopAccountClassesBase accountName={user.fullName}>\n        <Grid.Row>\n          <Grid.Col md={12}>\n            <Card cardTitle={t('shop.account.classes.title')} >\n              <Card.Body>\n                {t('shop.account.classes.empty_list')}\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </ShopAccountClassesBase>\n    )  \n  }\n\n\n\n  // Populated list\n  return (\n    <ShopAccountClassesBase accountName={user.fullName}>\n      <Grid.Row>\n        <Grid.Col md={12}>\n          <ContentCard cardTitle={t('shop.account.classes.title')}\n            // headerContent={headerOptions}\n            pageInfo={scheduleItemAttendances.pageInfo}\n            onLoadMore={() => {\n              fetchMore({\n                variables: {\n                  after: scheduleItemAttendances.pageInfo.endCursor\n                },\n                updateQuery: (previousResult, { fetchMoreResult }) => {\n                  const newEdges = fetchMoreResult.schduleItemAttendances.edges\n                  const pageInfo = fetchMoreResult.schduleItemAttendances.pageInfo\n\n                  return newEdges.length\n                    ? {\n                        // Put the new subscriptions at the end of the list and update `pageInfo`\n                        // so we have the new `endCursor` and `hasNextPage` values\n                        schduleItemAttendances: {\n                          __typename: previousResult.schduleItemAttendances.__typename,\n                          edges: [ ...previousResult.schduleItemAttendances.edges, ...newEdges ],\n                          pageInfo\n                        }\n                      }\n                    : previousResult\n                }\n              })\n            }} >\n            <Table>\n              <Table.Header>\n                <Table.Row key={v4()}>\n                  <Table.ColHeader>{t('general.time')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.class')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.location')}</Table.ColHeader>\n                  <Table.ColHeader>{t('general.booking_status')}</Table.ColHeader>\n                  <Table.ColHeader></Table.ColHeader>  \n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                { scheduleItemAttendances.edges.map(({ node }) => (\n                  <Table.Row key={v4()}>\n                    <Table.Col>\n                      { moment(node.date).format(dateFormat) } <br />\n                      <span className=\"text-muted\">\n                        {moment(node.date + ' ' + node.scheduleItem.timeStart).format(timeFormat)}\n                      </span>\n                    </Table.Col>\n                    <Table.Col>\n                      { node.scheduleItem.organizationClasstype.name }\n                    </Table.Col>\n                    <Table.Col>\n                      { node.scheduleItem.organizationLocationRoom.organizationLocation.name } <br />\n                      <span className=\"text-muted\">\n                        { node.scheduleItem.organizationLocationRoom.name }\n                      </span> \n                    </Table.Col>\n                    <Table.Col>\n                      <BadgeBookingStatus status={node.bookingStatus} />\n                    </Table.Col>\n                    <Table.Col>\n                      {/* TODO: improve this by adding a \"Can be cancelled field to GQL schema\" */}\n                      {((node.bookingStatus != \"CANCELLED\") && node.cancellationPossible) ?  \n                        <div>\n                          <Link to={`/shop/account/class_cancel/${node.scheduleItem.id}/${node.date}/${node.id}`}>\n                            <Button \n                              className=\"pull-right mr-r\"\n                              color=\"warning\"\n                              >\n                              {t(\"general.cancel\")}\n                            </Button>\n                          </Link>\n                          <Link to={`/shop/account/class_info/${node.scheduleItem.id}/${node.date}`}>\n                            <Button\n                              className=\"pull-right\"\n                              color=\"secondary\"\n                              icon=\"info\"\n                            >\n                              {t(\"general.info\")}\n                            </Button>\n                          </Link>\n                        </div> : \"\"\n                      }\n                    </Table.Col>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </ContentCard>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopAccountClassesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopAccountClasses))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\";\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopClasspassesBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")}>\n      <h4>{t(\"shop.classpasses.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspassesBase))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopClasspassBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      return_url=\"/shop/classpasses\"\n      checkoutProgress=\"order\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspassBase))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_CLASSPASS_QUERY = gql`\n  query OrganizationClasspass($id: ID!) {\n    organizationClasspass(id:$id) {\n      id\n      archived\n      displayPublic\n      displayShop\n      trialPass\n      name\n      description\n      price\n      priceDisplay\n      financeTaxRate {\n        id\n        name\n      }\n      validity\n      validityUnit\n      validityUnitDisplay\n      classes\n      unlimited\n      organizationMembership {\n        id\n        name\n      }\n      quickStatsAmount\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n    user {\n      hasReachedTrialLimit\n    }\n  }\n`\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Grid,\n  Icon,\n  List,\n  PricingCard\n} from \"tabler-react\";\nimport ShopClasspassesBase from \"./ShopClasspassBase\"\n\nimport { GET_ORGANIZATION_CLASSPASS_QUERY } from \"./queries\"\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopClasspassPricingCard({ t, classpass, btnLink, active=false }) {\n  // classpass should be an object with at least the following values from an organizationClasspass object:\n  // id, name, priceDisplay, unlimited, classes, validity, link\n  return (\n    <PricingCard active={active}>\n      <PricingCard.Category>\n        {classpass.name}\n      </PricingCard.Category>\n      <PricingCard.Price>\n        {classpass.priceDisplay}\n      </PricingCard.Price>\n      <PricingCard.AttributeList>\n        <PricingCard.AttributeItem>\n          <b>{(classpass.unlimited) ? t('general.unlimited') : classpass.classes }</b> { \" \" }\n          {((classpass.classes != 1) || (classpass.unlimited))? t('general.classes'): t('general.class')}\n        </PricingCard.AttributeItem>\n        <PricingCard.AttributeItem>\n          {t('general.valid_for')} { \" \" }\n          <b>{classpass.validity}</b> {' '} {classpass.validityUnitDisplay}\n        </PricingCard.AttributeItem>\n      </PricingCard.AttributeList>\n      {(btnLink) ?\n        <Link to={btnLink}>\n          <PricingCard.Button >\n            {t(\"shop.classpasses.choose\")} <Icon name=\"chevron-right\" />\n          </PricingCard.Button>\n        </Link>\n        : \"\"\n      }\n    </PricingCard>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspassPricingCard))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { gql } from \"@apollo/client\"\n\nexport const GET_ORGANIZATION_CLASSPASSES_QUERY = gql`\n  query OrganizationClasspasses($after: String, $before: String) {\n    organizationClasspasses(first: 100, before: $before, after: $after, archived: false, displayShop: true) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          displayPublic\n          displayShop\n          trialPass\n          name\n          description\n          price\n          priceDisplay\n          financeTaxRate {\n            id\n            name\n          }\n          validity\n          validityUnit\n          validityUnitDisplay\n          classes\n          unlimited\n          organizationMembership {\n            id\n            name\n          }\n          quickStatsAmount\n          financeGlaccount {\n            id \n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Grid,\n  Icon,\n  List,\n  PricingCard\n} from \"tabler-react\";\nimport ShopClasspassesBase from \"./ShopClasspassesBase\"\nimport ShopClasspassPricingCard from \"../classpass/ShopClasspassPricingCard\"\n\nimport { GET_ORGANIZATION_CLASSPASSES_QUERY } from \"./queries\"\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopClasspasses({ t, match, history }) {\n  const title = t(\"shop.home.title\")\n  const { loading, error, data } = useQuery(GET_ORGANIZATION_CLASSPASSES_QUERY)\n\n  if (loading) return (\n    <ShopClasspassesBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopClasspassesBase>\n  )\n  if (error) return (\n    <ShopClasspassesBase title={title}>\n      {t(\"shop.classpasses.error_loading\")}\n    </ShopClasspassesBase>\n  )\n\n  console.log(data)\n  const classpasses = data.organizationClasspasses\n  console.log(classpasses)\n\n  return (\n    <ShopClasspassesBase title={title}>\n        <Grid.Row>\n          {classpasses.edges.map(({ node }) => (\n            <Grid.Col md={3}>\n              <ShopClasspassPricingCard\n                classpass={node}\n                btnLink={\"/shop/classpass/\" + node.id}\n              />\n              {/* <PricingCard>\n                <PricingCard.Category>\n                  {node.name}\n                </PricingCard.Category>\n                <PricingCard.Price>\n                  {node.priceDisplay}\n                </PricingCard.Price>\n                <PricingCard.AttributeList>\n                  <PricingCard.AttributeItem>\n                    <b>{(node.unlimited) ? t('general.unlimited') : node.classes }</b> { \" \" }\n                    {((node.classes != 1) || (node.unlimited))? t('general.classes'): t('general.class')}\n                  </PricingCard.AttributeItem>\n                  <PricingCard.AttributeItem>\n                    {t('general.valid_for')} { \" \" }\n                    <b>{node.validity}</b> {' '} {node.validityUnitDisplay}\n                  </PricingCard.AttributeItem>\n                </PricingCard.AttributeList>\n                <Link to={\"/shop/classpass/\" + node.id}>\n                  <PricingCard.Button >\n                    {t(\"shop.classpasses.choose\")} <Icon name=\"chevron-right\" />\n                  </PricingCard.Button>\n                </Link>\n              </PricingCard> */}\n            </Grid.Col>\n          ))}\n        </Grid.Row>\n\n        \n    </ShopClasspassesBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspasses))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport {\n  Card,\n  Grid,\n  Icon,\n  List\n} from \"tabler-react\"\nimport { TimeStringToJSDateOBJ } from '../../../tools/date_tools'\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport ShopClasspassBase from \"./ShopClasspassBase\"\nimport ShopCheckoutForm from \"../ShopCheckoutForm\"\nimport ShopClasspassesPricingCard from \"./ShopClasspassPricingCard\"\n\nimport { GET_CLASSPASS_QUERY } from \"./queries\"\nimport { GET_CLASS_QUERY } from \"../queries\"\nimport { CREATE_ORDER } from \"../queries\"\n\n\nfunction ShopClasspass({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const title = t(\"shop.home.title\")\n  const id = match.params.id\n  const scheduleItemId = match.params.class_id\n  const classDate = match.params.date\n\n  const { loading, error, data } = useQuery(GET_CLASSPASS_QUERY, {\n    variables: { id: id }\n  })\n\n  const { loading: loadingClass, error: errorClass, data: dataClass } = useQuery(GET_CLASS_QUERY, {\n    variables: { scheduleItemId: scheduleItemId, date: classDate },\n    skip: (!scheduleItemId || !classDate)\n  })\n\n  const [createOrder, { data: createOrderData }] = useMutation(CREATE_ORDER)\n\n\n  if (loading) return (\n    <ShopClasspassBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopClasspassBase>\n  )\n  if (error) return (\n    <ShopClasspassBase title={title}>\n      {t(\"shop.classpass.error_loading\")}\n    </ShopClasspassBase>\n  )\n\n  console.log(data)\n  const classpass = data.organizationClasspass\n  const user = data.user\n  console.log(classpass)\n\n  console.log('DATA CLASS')\n  console.log(dataClass)\n\n  if (user.hasReachedTrialLimit) {\n    return (\n      <ShopClasspassBase title={title}>\n        <Card title={t(\"shop.classpass.trial_limit_reached\")}>\n          <Card.Body>\n            {t(\"shop.classpass.trial_limit_reached_explanation\")}\n          </Card.Body>\n        </Card>\n      </ShopClasspassBase>\n    )\n  }\n\n  return (\n    <ShopClasspassBase title={title}>\n      <Grid.Row>\n        <Grid.Col md={4}>\n          <ShopClasspassesPricingCard classpass={classpass} active={true} />\n        </Grid.Col>\n        <Grid.Col md={4}>\n          {(dataClass && !loadingClass && !errorClass) ?\n            <Card title={t(\"shop.classpass.class_book_information\")}>\n              <Card.Body>\n                {t(\"shop.classpass.class_book_explanation\")} <br /><br />\n                <b>\n                  {moment(classDate).format(dateFormat)} {' '}\n                  {moment(TimeStringToJSDateOBJ(dataClass.scheduleClass.timeStart)).format(timeFormat)} {' - '}\n                  {moment(TimeStringToJSDateOBJ(dataClass.scheduleClass.timeEnd)).format(timeFormat)} <br />  \n                </b>\n                {dataClass.scheduleClass.organizationClasstype.name + \" \" + t(\"general.at\") + ' ' + \n                  dataClass.scheduleClass.organizationLocationRoom.organizationLocation.name}\n\n              </Card.Body>\n            </Card>\n            : \"\" \n          }\n          <Card title={t(\"shop.classpass.additional_information\")}>\n            <Card.Body>\n              <div dangerouslySetInnerHTML={{__html:classpass.description}}></div>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"shop.checkout.title\")}>\n            <Card.Body>\n              <Formik\n                initialValues={{ message: \"\" }}\n                // validationSchema={CLASSTYPE_SCHEMA}\n                onSubmit={(values, { setSubmitting }) => {\n\n                    let createOrderInput = {\n                      message: values.message,\n                      organizationClasspass: match.params.id,\n                    }\n\n                    if (scheduleItemId && classDate) {\n                      createOrderInput.attendanceDate = classDate\n                      createOrderInput.scheduleItem = scheduleItemId\n                    }\n\n                    createOrder({ variables: {\n                      input: createOrderInput,\n                      // file: values.image\n                    }, refetchQueries: [\n                        // {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": false }}\n                    ]})\n                    .then(({ data }) => {\n                        console.log('got data', data)\n                        console.log('good...  now redirect to the payment page')\n                        const orderId = data.createFinanceOrder.financeOrder.id\n                        history.push('/shop/checkout/payment/' + orderId)\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error)\n                        setSubmitting(false)\n                      })\n                }}\n                >\n                {({ isSubmitting, errors, values }) => (\n                  <ShopCheckoutForm \n                    isSubmitting={isSubmitting}\n                    errors={errors}\n                    values={values}\n                  />\n                )}\n              </Formik>\n\n              {/* When a user is not logged in, show a login button to redirect to the login page */}\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopClasspassBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspass))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Icon,\n  List\n} from \"tabler-react\";\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopSubscriptionsBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase title={t(\"shop.title\")}>\n      <h4>{t(\"shop.subscriptions.title\")}</h4>\n        {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopSubscriptionsBase))","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Grid,\n  Icon,\n  List,\n  PricingCard\n} from \"tabler-react\";\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopClasspassPricingCard({ t, subscription, btnLink, active=false }) {\n  // classpass should be an object with at least the following values from an organizationClasspass object:\n  // id, name, priceDisplay, unlimited, classes, validity, link\n  return (\n    <PricingCard active={active}>\n      <PricingCard.Category>\n        {subscription.name}\n      </PricingCard.Category>\n      <PricingCard.Price>\n        {subscription.priceTodayDisplay}\n      </PricingCard.Price>\n      <PricingCard.AttributeList>\n        <PricingCard.AttributeItem>\n          <b>{(subscription.unlimited) ? t('general.unlimited') : subscription.classes }</b> { \" \" }\n          {((subscription.classes != 1) || (subscription.unlimited))? t('general.classes'): t('general.class')} / {t('general.month')}\n        </PricingCard.AttributeItem>\n        <PricingCard.AttributeItem>\n          {t('general.min_duration')} { \" \" }\n          <b>{subscription.minDuration}</b> \n        </PricingCard.AttributeItem>\n      </PricingCard.AttributeList>\n      {(btnLink) ?\n        <Link to={btnLink}>\n          <PricingCard.Button >\n            {t(\"shop.subscriptions.choose\")} <Icon name=\"chevron-right\" />\n          </PricingCard.Button>\n        </Link>\n        : \"\"\n      }\n    </PricingCard>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopClasspassPricingCard))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { gql } from \"@apollo/client\"\n\nexport const GET_ORGANIZATION_SUBSCRIPTIONS_QUERY = gql`\n  query OrganizationSubscriptions($after: String, $before: String) {\n    organizationSubscriptions(first: 100, before: $before, after: $after, archived: false) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          archived\n          priceTodayDisplay\n          displayPublic\n          displayShop\n          name\n          description\n          sortOrder\n          minDuration\n          classes\n          subscriptionUnit\n          subscriptionUnitDisplay\n          reconciliationClasses\n          creditValidity\n          unlimited\n          termsAndConditions\n          registrationFee\n          organizationMembership {\n            id\n            name\n          }\n          quickStatsAmount\n          financeGlaccount {\n            id \n            name\n          }\n          financeCostcenter {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`","// @flow\n\nimport React, {Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery } from '@apollo/client'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Grid,\n} from \"tabler-react\";\nimport ShopSubscriptionsBase from \"./ShopSubscriptionsBase\"\nimport ShopSubscriptionPricingCard from \"../subscription/ShopSubscriptionPricingCard\"\n\nimport { GET_ORGANIZATION_SUBSCRIPTIONS_QUERY } from \"./queries\"\n\n// Example:\n// https://github.com/tabler/tabler-react/blob/master/example/src/interface/PricingCardsPage.react.js\n\n\nfunction ShopSubscriptions({ t, match, history }) {\n  const title = t(\"shop.home.title\")\n  const { loading, error, data } = useQuery(GET_ORGANIZATION_SUBSCRIPTIONS_QUERY)\n\n  if (loading) return (\n    <ShopSubscriptionsBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopSubscriptionsBase>\n  )\n  if (error) return (\n    <ShopSubscriptionsBase title={title}>\n      {t(\"shop.subscriptions.error_loading\")}\n    </ShopSubscriptionsBase>\n  )\n\n  console.log(data)\n  const subscriptions = data.organizationSubscriptions\n  console.log(subscriptions)\n\n  return (\n    <ShopSubscriptionsBase title={title}>\n        <Grid.Row>\n          {subscriptions.edges.map(({ node }) => (\n            <Grid.Col md={3}>\n              <ShopSubscriptionPricingCard\n                subscription={node}\n                btnLink={\"/shop/subscription/\" + node.id}\n              />\n            </Grid.Col>\n          ))}\n        </Grid.Row>\n\n        \n    </ShopSubscriptionsBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopSubscriptions))\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\n\nimport ShopBase from \"../ShopBase\"\n\nfunction ShopSubscriptionBase({ t, match, history, children }) {\n  \n  return (\n    <ShopBase \n      title={t(\"shop.title\")}\n      return_url=\"/shop/subscriptions\"\n      checkoutProgress=\"order\"\n    >\n      {children}\n    </ShopBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopSubscriptionBase))","import { gql } from \"@apollo/client\"\n\n\nexport const GET_SUBSCRIPTION_QUERY = gql`\n  query OrganizationSubscription($id: ID!) {\n    organizationSubscription(id:$id) {\n      id\n      archived\n      priceTodayDisplay\n      displayPublic\n      displayShop\n      name\n      description\n      sortOrder\n      minDuration\n      classes\n      subscriptionUnit\n      subscriptionUnitDisplay\n      reconciliationClasses\n      creditValidity\n      unlimited\n      termsAndConditions\n      registrationFee\n      organizationMembership {\n        id\n        name\n      }\n      quickStatsAmount\n      financeGlaccount {\n        id \n        name\n      }\n      financeCostcenter {\n        id\n        name\n      }\n    }\n  }\n`","// @flow\n\nimport React, { useContext } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport {\n  Card,\n  Grid,\n  Icon,\n  List\n} from \"tabler-react\"\nimport { TimeStringToJSDateOBJ } from '../../../tools/date_tools'\nimport AppSettingsContext from '../../context/AppSettingsContext'\n\nimport ShopSubscriptionBase from \"./ShopSubscriptionBase\"\nimport ShopCheckoutForm from \"../ShopCheckoutForm\"\nimport ShopSubscriptionPricingCard from \"./ShopSubscriptionPricingCard\"\n\nimport { GET_SUBSCRIPTION_QUERY } from \"./queries\"\n// import { GET_CLASS_QUERY } from \"../queries\"\nimport { CREATE_ORDER } from \"../queries\"\n\n\nfunction ShopSubscription({ t, match, history }) {\n  const appSettings = useContext(AppSettingsContext)\n  const dateFormat = appSettings.dateFormat\n  const timeFormat = appSettings.timeFormatMoment\n\n  const title = t(\"shop.home.title\")\n  const id = match.params.id\n  // const scheduleItemId = match.params.class_id\n  // const classDate = match.params.date\n\n  const { loading, error, data } = useQuery(GET_SUBSCRIPTION_QUERY, {\n    variables: { id: id }\n  })\n\n  // const { loading: loadingClass, error: errorClass, data: dataClass } = useQuery(GET_CLASS_QUERY, {\n  //   variables: { scheduleItemId: scheduleItemId, date: classDate },\n  //   skip: (!scheduleItemId || !classDate)\n  // })\n\n  const [createOrder, { data: createOrderData }] = useMutation(CREATE_ORDER)\n\n\n  if (loading) return (\n    <ShopSubscriptionBase title={title} >\n      {t(\"general.loading_with_dots\")}\n    </ShopSubscriptionBase>\n  )\n  if (error) return (\n    <ShopSubscriptionBase title={title}>\n      {t(\"shop.subscription.error_loading\")}\n    </ShopSubscriptionBase>\n  )\n\n  console.log(data)\n  const subscription = data.organizationSubscription\n  console.log(subscription)\n\n\n  return (\n    <ShopSubscriptionBase title={title}>\n      <Grid.Row>\n        <Grid.Col md={4}>\n          <ShopSubscriptionPricingCard subscription={subscription} active={true} />\n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"shop.subscription.additional_information\")}>\n            <Card.Body>\n              <div dangerouslySetInnerHTML={{__html:subscription.description}}></div>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={4}>\n          <Card title={t(\"shop.checkout.title\")}>\n            <Card.Body>\n              <Formik\n                initialValues={{ message: \"\" }}\n                // validationSchema={CLASSTYPE_SCHEMA}\n                onSubmit={(values, { setSubmitting }) => {\n\n                    let createOrderInput = {\n                      message: values.message,\n                      organizationSubscription: match.params.id,\n                    }\n\n                    createOrder({ variables: {\n                      input: createOrderInput,\n                      // file: values.image\n                    }, refetchQueries: [\n                        // {query: GET_CLASSTYPES_QUERY, variables: {\"archived\": false }}\n                    ]})\n                    .then(({ data }) => {\n                        console.log('got data', data)\n                        console.log('good...  now redirect to the payment page')\n                        const orderId = data.createFinanceOrder.financeOrder.id\n                        history.push('/shop/checkout/payment/' + orderId)\n                      }).catch((error) => {\n                        toast.error((t('general.toast_server_error')) +  error, {\n                            position: toast.POSITION.BOTTOM_RIGHT\n                          })\n                        console.log('there was an error sending the query', error)\n                        setSubmitting(false)\n                      })\n                }}\n                >\n                {({ isSubmitting, errors, values }) => (\n                  <ShopCheckoutForm \n                    isSubmitting={isSubmitting}\n                    errors={errors}\n                    values={values}\n                  />\n                )}\n              </Formik>\n              {/* When a user is not logged in, show a login button to redirect to the login page */}\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n      </Grid.Row>\n    </ShopSubscriptionBase>\n  )\n}\n\n\nexport default withTranslation()(withRouter(ShopSubscription))\n\n\n{/* <Grid.Col sm={6} lg={3}>\n<PricingCard active>\n  <PricingCard.Category>{\"Premium\"}</PricingCard.Category>\n  <PricingCard.Price>{\"$49\"} </PricingCard.Price>\n  <PricingCard.AttributeList>\n    <PricingCard.AttributeItem>\n      <strong>10 </strong>\n      {\"Users\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Sharing Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available>\n      {\"Design Tools\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Private Messages\"}\n    </PricingCard.AttributeItem>\n    <PricingCard.AttributeItem hasIcon available={false}>\n      {\"Twitter API\"}\n    </PricingCard.AttributeItem>\n  </PricingCard.AttributeList>\n  <PricingCard.Button active>{\"Choose plan\"} </PricingCard.Button>\n</PricingCard>\n</Grid.Col> */}","import { t } from 'i18next'\nimport * as Yup from 'yup'\n\nexport const PASSWORD_CHANGE_SCHEMA = Yup.object().shape({\n    passwordCurrent: Yup.string()\n      .required(t('yup.field_required')),\n    passwordNew: Yup.string()\n      .required(t('yup.field_required'))\n      .min(2, t('yup.min_len_9')),\n    passwordNew2: Yup.string()\n      .oneOf([Yup.ref('passwordNew'), null], t('yup.passwords_must_match')),\n  })\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\n// import CSDatePicker from \"../../ui/CSDatePicker\"\n// import ISO_COUNTRY_CODES from \"../../../tools/iso_country_codes\"\n\n\nconst UserPasswordChangeForm = ({ t, history, isSubmitting, errors, values, return_url, setFieldTouched, setFieldValue }) => (\n  <FoForm className=\"card\" autoComplete=\"off\">\n    <Card.Body className=\"p-6\">\n      <Card.Title>\n        {t('user.change_password.title')}\n      </Card.Title>\n      <Form.Group label={t('user.change_password.password_current')}>\n        <Field type=\"password\" \n                name=\"passwordCurrent\" \n                className={(errors.passwordCurrent) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"passwordCurrent\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('user.change_password.password_new')}>\n        <Field type=\"password\" \n                name=\"passwordNew\" \n                className={(errors.passwordNew) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"passwordNew\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('user.change_password.password_new_repeat')}>\n        <Field type=\"password\" \n                name=\"passwordNew2\" \n                className={(errors.passwordNew2) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"passwordNew2\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Footer>\n        <Button \n          block\n          loading={isSubmitting}\n          color=\"primary\"\n          type=\"submit\" \n          disabled={isSubmitting}\n        >\n          {t('user.change_password.title')}\n        </Button>\n      </Form.Footer>\n    </Card.Body>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(UserPasswordChangeForm))\n\n","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport { ToastContainer, Slide } from 'react-toastify'\n\nimport {\n  Container,\n  Grid,\n  Page\n} from \"tabler-react\"\n\n\nfunction CSStandalonePage({ t, urlLogo=\"\", children}) {\n\n  return (\n    <Page>\n      <div className=\"page-single\">\n        <Container>\n          <Grid.Row>\n            <div className=\"col col-login mx-auto\">            \n              <div className=\"text-center mb-5\">\n                { (urlLogo) ? <img src={urlLogo} className=\"h-9\" alt=\"logo\" /> : \"\" }\n              </div>\n              {children}\n              <ToastContainer \n                autoClose={5000} \n                transition={Slide}\n              />\n            </div>\n          </Grid.Row>\n        </Container>\n      </div>\n    </Page>\n  )\n}\n\nexport default withTranslation()(CSStandalonePage)\n\n\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\nimport { PASSWORD_CHANGE_SCHEMA } from './yupSchema'\nimport OrganizationContext from '../../context/OrganizationContext'\n\nimport {\n  Button,\n  Card,\n  Icon,\n  List,\n  StandaloneFormPage,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { UPDATE_ACCOUNT_PASSWORD } from \"../../../queries/system/auth\"\nimport CSLS from \"../../../tools/cs_local_storage\"\nimport UserPasswordChangeForm from './UserPasswordChangeForm';\n\nimport CSStandaloneFormPage from \"../../ui/CSStandaloneFormPage\"\n\n\nfunction UserChangePassword({t, match, history}) {\n  const organization = useContext(OrganizationContext)\n  console.log(organization)\n\n  let errorMessage\n  const [updatePassword, { data }] = useMutation(UPDATE_ACCOUNT_PASSWORD)\n\n  return (\n    <CSStandaloneFormPage urlLogo={organization.urlLogoLogin} >\n      {/* TODO: point imageURL to logo */}\n      <Formik\n        initialValues={{ \n          passwordCurrent: \"\",\n          passwordNew: \"\",\n          passwordNew2: \"\"\n        }}\n        validationSchema={PASSWORD_CHANGE_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n            console.log('submit values:')\n            console.log(values)\n\n            let vars = {\n              input: {\n                passwordCurrent: values.passwordCurrent,\n                passwordNew: values.passwordNew\n              }\n            }\n\n            updatePassword({ variables: vars })\n              .then(({ data }) => {\n                console.log('got data', data)\n                setTimeout(() => toast.success((t('user.change_password.success')), {\n                  position: toast.POSITION.BOTTOM_RIGHT\n                }), 300)\n                window.history.back()\n              }).catch((error) => {\n                console.log('#############')\n                console.log(error.messages)\n                console.log(error.graphQLErrors)\n                console.log(Object.keys(error))\n\n                if (error.graphQLErrors) {\n                  let i\n                  for (i = 0; i < error.graphQLErrors.length; i++) {\n                    toast.error(error.graphQLErrors[0].message\n                        .replace(/'/g, \"\")\n                        .replace(/,/g, \"\")\n                        .replace(/\\[/g, \"\")\n                        .replace(/\\]/g, \"\"), {\n                      position: toast.POSITION.BOTTOM_RIGHT\n                    })\n                  }\n                } else {\n                  // Show general error message\n                  toast.error((t('general.toast_server_error')) +  error, {\n                    position: toast.POSITION.BOTTOM_RIGHT\n                  })\n                }\n                \n                console.log('there was an error sending the query', error)\n                setSubmitting(false)\n              })\n        }}\n        >\n        {({ isSubmitting, errors, values, setFieldTouched, setFieldValue }) => (\n          <UserPasswordChangeForm\n            isSubmitting={isSubmitting}\n            etFieldValue={setFieldValue}\n            esetFieldTouched={setFieldTouched}\n            errors={errors}\n            values={values}\n          />\n        )}\n      </Formik>    \n      <h5>{t('user.change_password.requirements')}</h5>\n      <List>\n        <List.Item>{t('user.change_password.requirement_not_a_digit')}</List.Item>\n        <List.Item>{t('user.change_password.requirement_not_common')}</List.Item>\n        <List.Item>{t('user.change_password.requirement_min_length')}</List.Item>\n        <List.Item>{t('user.change_password.requirement_not_similar_account')}</List.Item>\n      </List>\n      {/* Cancel button below form */}\n      <Button \n        block\n        color=\"link\"\n        onClick={(event) => {\n          event.preventDefault()  \n          window.history.back()\n        }}\n      >\n        {t('general.cancel')}\n      </Button>\n    </CSStandaloneFormPage>\n  )\n}\n\n\nexport default withTranslation()(withRouter(UserChangePassword))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { v4 } from 'uuid'\nimport { withRouter } from \"react-router\"\nimport { Form as FoForm, Field, ErrorMessage } from 'formik'\n\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Form,\n  Grid\n} from \"tabler-react\"\n\n\n// import CSDatePicker from \"../../ui/CSDatePicker\"\n// import ISO_COUNTRY_CODES from \"../../../tools/iso_country_codes\"\n\n\nconst UserLoginForm = ({ t, history, isSubmitting, errors }) => (\n  <FoForm className=\"card\" autoComplete=\"off\">\n    <Card.Body className=\"p-6\">\n      <Card.Title>\n        {t('user.login.title')}\n      </Card.Title>\n      <Form.Group label={t('user.login.email')}>\n        <Field type=\"text\" \n                name=\"email\" \n                placeholder={t('user.login.email_placeholder')}\n                className={(errors.email) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"email\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Group label={t('general.password')}>\n        <Field type=\"password\" \n                name=\"password\" \n                placeholder={t('user.login.password_placeholder')}\n                className={(errors.password) ? \"form-control is-invalid\" : \"form-control\"} \n                autoComplete=\"off\" />\n        <ErrorMessage name=\"password\" component=\"span\" className=\"invalid-feedback\" />\n      </Form.Group>\n      <Form.Footer>\n        <Grid.Row>\n          <Grid.Col md={6}>\n            <Button \n              block\n              loading={isSubmitting}\n              color=\"primary\"\n              type=\"submit\" \n              disabled={isSubmitting}\n            >\n              {t('general.login')}\n            </Button>\n          </Grid.Col>\n          <Grid.Col md={6}>\n            <Button \n              color=\"link\"\n              RootComponent=\"a\"\n              href={(window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\") ? \n                \"http://localhost:8000/d/accounts/password/reset/\" :\n                \"/d/accounts/password/reset/\"\n              } \n            >\n              {t('user.register.reset_password')}\n            </Button>\n          </Grid.Col>\n        </Grid.Row>\n      </Form.Footer>\n    </Card.Body>\n  </FoForm>\n)\n\nexport default withTranslation()(withRouter(UserLoginForm))\n\n","import React, { useContext } from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\n\nimport {\n  Button,\n  Icon,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport OrganizationContext from '../../context/OrganizationContext'\n\nimport { TOKEN_AUTH, TOKEN_REFRESH } from \"../../../queries/system/auth\"\nimport { CSAuth } from \"../../../tools/authentication\"\nimport CSLS from \"../../../tools/cs_local_storage\"\n\nimport UserLoginForm from \"./UserLoginForm\"\nimport CSStandaloneFormPage from \"../../ui/CSStandaloneFormPage\"\n\n\nfunction UserLogin({t, match, history}) {\n  const organization = useContext(OrganizationContext)\n  console.log(organization)\n\n  let errorMessage\n  const [ doTokenAuth ] = useMutation(TOKEN_AUTH)\n  const [ doTokenRefresh ] = useMutation(TOKEN_REFRESH)\n\n  return (\n    <CSStandaloneFormPage urlLogo={organization.urlLogoLogin} >\n      <div className=\"text-center text-muted mb-1\">\n        {organization ? organization.name : \"\"}\n      </div>\n      <Formik\n        initialValues={{ \n          email: \"\",\n          password: \"\"\n        }}\n        // validationSchema={ACCOUNT_SCHEMA}\n        onSubmit={(values, { setSubmitting }) => {\n            let vars = {\n              username: values.email,\n              password: values.password,\n            }\n\n            doTokenAuth({ variables: vars,\n              refetchQueries: [\n                // // Refetch list\n                // {query: GET_ACCOUNTS_QUERY, variables: get_list_query_variables()},\n                // // Refresh local cached results for this account\n                // {query: GET_ACCOUNT_QUERY, variables: {\"id\": match.params.account_id}}\n            ]})\n            .then(({ data }) => {\n                console.log('got data', data)\n                // TODO: Add link to \"feature switcher\" here\n                const next = localStorage.getItem(CSLS.AUTH_LOGIN_NEXT) || \"/user/welcome\"\n                CSAuth.login(data.tokenAuth)\n                setTimeout(() => history.push(next), 500)\n            })\n        }}\n        >\n        {({ isSubmitting, errors }) => (\n          <UserLoginForm\n            isSubmitting={isSubmitting}\n            errors={errors}\n          />\n        )}\n      </Formik>    \n      <div className=\"text-center\">\n        <h5>{t('user.register.create_account')}</h5>\n        {t('user.register.create_account_msg')} <br />\n        {t('user.register.create_account_msg_click_below')} <br />\n      </div>\n      <Button \n        block\n        color=\"link\"\n        RootComponent=\"a\"\n        href={(window.location.hostname === \"localhost\" || window.location.hostname === \"dev.costasiella.com\") ? \n          \"http://localhost:8000/d/accounts/signup/\" :\n          \"/d/accounts/signup/\"\n        } \n      >\n        {t('user.register.create_account')} <Icon name=\"chevron-right\" />\n      </Button>\n    </CSStandaloneFormPage>\n  )\n}\n\n\nexport default withTranslation()(withRouter(UserLogin))","// @flow\n\nimport React, { useContext, useState } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { ToastContainer, Slide} from 'react-toastify'\nimport { toast } from 'react-toastify'\n\n// import { GET_ACCOUNTS_QUERY, GET_ACCOUNT_QUERY } from './queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Button,\n  Icon,\n  StandaloneFormPage,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n// import OrganizationContext from '../../context/OrganizationContext'\nimport { CSAuth } from \"../../../tools/authentication\"\nimport CSStandaloneFormPage from \"../../ui/CSStandaloneFormPage\"\n\nfunction UserLoginRequired({t, match, history}) {\n  // const organization = useContext(OrganizationContext)\n  // console.log(organization)\n\n  const [active, setActive] = useState(false);\n\n  return (\n    <CSStandaloneFormPage>\n      {/* TODO: point imageURL to logo */}\n      <Card>\n        <Card.Body>\n          <Card.Title>\n            {t('user.login_required.title')}\n          </Card.Title>\n          {t('user.login_required.message')} <br /><br />\n          <Button \n            block\n            loading={active}\n            disabled={active}\n            color=\"primary\"\n            type=\"button\" \n            onClick={() => {\n              setActive(true)\n              setTimeout(() => history.push('/user/login'), 250)\n            }}\n          >\n            {t('user.login_required.go_to_login')} <Icon name=\"chevron-right\" />\n          </Button>\n        </Card.Body>\n      </Card>\n      <ToastContainer \n          autoClose={5000} \n          transition={Slide}\n      />\n    </CSStandaloneFormPage>\n  )\n}\n\nexport default withTranslation()(withRouter(UserLoginRequired))","// @flow\n\nimport React, { useContext, useState } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { Formik } from 'formik'\nimport { toast } from 'react-toastify'\n\n// import { GET_ACCOUNTS_QUERY, GET_ACCOUNT_QUERY } from './queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport OrganizationContext from '../../context/OrganizationContext'\n\nimport {\n  Card,\n  Button,\n  StandaloneFormPage,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport { CSAuth } from \"../../../tools/authentication\"\nimport { TOKEN_COOKIE_DELETE, TOKEN_REFRESH_COOKIE_DELETE } from \"../../../queries/system/auth\"\n\nimport CSStandaloneFormPage from \"../../ui/CSStandaloneFormPage\"\n\n\nfunction UserLogout({t, match, history}) {\n  const [ deleteCookie ] = useMutation(TOKEN_COOKIE_DELETE)\n  const [ deleteRefreshCookie ] = useMutation(TOKEN_REFRESH_COOKIE_DELETE)\n  const [active, setActive] = useState(false)\n\n  const organization = useContext(OrganizationContext)\n  console.log(organization)\n\n  return (\n    <CSStandaloneFormPage urlLogo={organization.urlLogoLogin}>\n      {/* TODO: point imageURL to logo */}\n      <Card>\n        <Card.Body>\n          <Card.Title>\n            {t('user.logout.title')}\n          </Card.Title>\n          {t('user.logout.confirmation_message')} <br /><br />\n          <Button \n            block\n            loading={active}\n            disabled={active}\n            color=\"primary\"\n            type=\"button\" \n            onClick={() => {\n              setActive(true)\n              CSAuth.logout()\n              deleteCookie().then(({ data }) => {\n                console.log('got data', data)\n                })\n              .catch((error) => {\n                console.log(error)\n              })\n              deleteRefreshCookie().then(({ data }) => {\n                console.log('got data', data)\n                })\n              .catch((error) => {\n                console.log(error)\n              })\n              setTimeout(() => toast.info(t('user.logout.success'), {\n                position: toast.POSITION.BOTTOM_RIGHT\n              }), 350)\n              setTimeout(() => history.push('/'), 250)\n            }}\n          >\n            {t('general.logout')}\n          </Button>\n        </Card.Body>\n      </Card>\n      <Button \n        block\n        color=\"link\"\n        onClick={(event) => {\n          event.preventDefault()  \n          window.history.back()\n        }}\n      >\n        {t('general.cancel')}\n      </Button>\n    </CSStandaloneFormPage>\n  )\n}\n\nexport default withTranslation()(withRouter(UserLogout))","// @flow\n\nimport React, { useContext, useState } from 'react'\nimport { gql } from \"@apollo/client\"\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Formik } from 'formik'\nimport { ToastContainer } from 'react-toastify'\nimport { toast } from 'react-toastify'\n\n// import { GET_ACCOUNTS_QUERY, GET_ACCOUNT_QUERY } from './queries'\n// import { ACCOUNT_SCHEMA } from './yupSchema'\n\nimport {\n  Card,\n  Button,\n  Icon,\n  StandaloneFormPage,\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\n// import OrganizationContext from '../../context/OrganizationContext'\nimport { CSAuth } from \"../../../tools/authentication\"\nimport CSStandaloneFormPage from \"../../ui/CSStandaloneFormPage\"\n\nfunction UserSessionExpired({t, match, history}) {\n  // const organization = useContext(OrganizationContext)\n  // console.log(organization)\n\n  const [active, setActive] = useState(false);\n\n  return (\n    <CSStandaloneFormPage>\n      {/* TODO: point imageURL to logo */}\n      <Card>\n        <Card.Body>\n          <Card.Title>\n            {t('user.session_expired.title')}\n          </Card.Title>\n          {t('user.session_expired.message')} <br /><br />\n          <Button \n            block\n            loading={active}\n            disabled={active}\n            color=\"primary\"\n            type=\"button\" \n            onClick={() => {\n              setActive(true)\n              setTimeout(() => history.push('/user/login'), 250)\n            }}\n          >\n            {t('user.session_expired.go_to_login')} <Icon name=\"chevron-right\" />\n          </Button>\n        </Card.Body>\n      </Card>\n      <ToastContainer autoClose={5000}/>\n    </CSStandaloneFormPage>\n  )\n}\n\nexport default withTranslation()(withRouter(UserSessionExpired))","// @flow\n\nimport React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport { ToastContainer, Slide } from 'react-toastify'\n\nimport {\n  Container,\n  Grid,\n  Page\n} from \"tabler-react\"\n\n\nfunction CSStandalonePageWide({ t, urlLogo=\"\", children}) {\n\n  return (\n    <Page>\n      <div className=\"page-single\">\n        <Container>\n          <Grid.Row>\n            <div className=\"col mx-auto\">            \n              <div className=\"text-center mb-5\">\n                { (urlLogo) ? <img src={urlLogo} className=\"h-9\" alt=\"logo\" /> : \"\" }\n              </div>\n              {children}\n              <ToastContainer \n                autoClose={5000} \n                transition={Slide}\n              />\n            </div>\n          </Grid.Row>\n        </Container>\n      </div>\n    </Page>\n  )\n}\n\nexport default withTranslation()(CSStandalonePageWide)\n\n\n\n","// @flow\n\nimport React, { useContext } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nimport GET_USER_PROFILE from \"../../../queries/system/get_user_profile\"\n\n\nimport OrganizationContext from '../../context/OrganizationContext'\n\nimport {\n  Card,\n  Button,\n  Grid,\n  Icon\n} from \"tabler-react\"\nimport HasPermissionWrapper from \"../../HasPermissionWrapper\"\n\nimport CSStandalonePageWide from \"../../ui/CSStandalonePageWide\"\n\n\nfunction Welcome({t, match, history}) {\n  const organization = useContext(OrganizationContext)\n  console.log(organization)\n  const { loading, error, data } = useQuery(GET_USER_PROFILE)\n\n  if (loading) return (\n    <CSStandalonePageWide urlLogo={organization.urlLogoLogin}>\n      {t(\"general.loading_with_dots\")}\n    </CSStandalonePageWide>\n  )\n  if (error) return (\n    <CSStandalonePageWide urlLogo={organization.urlLogoLogin}>\n      {t(\"shop.account.class_info.error_loading_data\")}\n    </CSStandalonePageWide>\n  )\n\n  const user = data.user\n  console.log(user)\n\n  if (!user.employee && !user.teacher) {\n    history.push(\"/\")\n  } \n\n\n  return (\n    <CSStandalonePageWide urlLogo={organization.urlLogoLogin}>\n      <div className=\"text-center mb-5\">\n        <h2>{t(\"general.welcome\")} {user.firstName}</h2>\n        <h5>{t(\"user.welcome.where_next_question\")}</h5>\n      </div>\n      <Grid.Row>\n        <Grid.Col md={3} offsetMd={3}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"shop.title\")}</h5>\n              {t(\"user.welcome.shop_explanation\")} <br /><br />\n              <Link to=\"/\">\n                <Button \n                  block\n                  outline\n                  color=\"primary\"\n                >\n                  {t(\"user.welcome.shop_to\")} <Icon name=\"chevron-right\" />\n                </Button>\n              </Link>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <Grid.Col md={3}>\n          <Card>\n            <Card.Body>\n              <h5>{t(\"general.backend\")}</h5>\n              {t(\"user.welcome.backend_explantion\")} <br /><br />\n              <Link to=\"/backend\">\n                <Button \n                  block\n                  outline\n                  color=\"primary\"\n                >\n                  {t(\"user.welcome.backend_to\")} <Icon name=\"chevron-right\" />\n                </Button>\n              </Link>\n            </Card.Body>\n          </Card>\n        </Grid.Col>\n        <HasPermissionWrapper resource=\"selfcheckin\" permission=\"view\">\n          <Grid.Col md={3} offsetMd={3}>\n            <Card>\n              <Card.Body>\n                <h5>{t(\"selfcheckin.home.title\")}</h5>\n                {t(\"user.welcome.selfcheckin_explantion\")} <br /><br />\n                <Link to=\"/selfcheckin\">\n                  <Button \n                    block\n                    outline\n                    color=\"primary\"\n                  >\n                    {t(\"user.welcome.selfcheckin_to\")} <Icon name=\"chevron-right\" />\n                  </Button>\n                </Link>\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </HasPermissionWrapper>\n      </Grid.Row>\n    </CSStandalonePageWide>\n  )\n}\n\nexport default withTranslation()(withRouter(Welcome))","// @flow\n\nimport * as React from \"react\";\n\nimport { Error404Page } from \"tabler-react\";\n\ntype Props = {||}\n\nfunction Error404(props: Props): React.Node {\n  return <Error404Page />\n}\n\nexport default Error404\n","// import React, { Component } from 'react';\n// import logo from './logo.svg';\n\nimport React, { Component } from 'react'\nimport {\n  Route, \n  Switch, \n  HashRouter,\n  Redirect\n} from 'react-router-dom'\nimport { withTranslation } from 'react-i18next'\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { toast } from 'react-toastify'\n\nimport { GET_APP_SETTINGS_QUERY } from \"./components/settings/general/date_time/queries\"\nimport { GET_ORGANIZATION_QUERY } from \"./components/organization/organization/queries\"\nimport { TOKEN_REFRESH } from \"./queries/system/auth\"\n\n// Import moment locale\nimport moment from 'moment'\nimport 'moment/locale/nl'\n\nimport { AppSettingsProvider } from \"./components/context/AppSettingsContext\"\nimport { OrganizationProvider } from \"./components/context/OrganizationContext\"\n\nimport HomeHome from './components/home/home/HomeHome'\n\nimport AutomationHome from './components/automation/home/AutomationHome'\nimport AutomationAccountSubscriptionCredits from './components/automation/account/subscription/credits/AutomationAccountSubscriptionCredits'\nimport AutomationAccountSubscriptionCreditAdd from './components/automation/account/subscription/credits/AutomationAccountSubscriptionCreditAdd'\nimport AutomationAccountSubscriptionCreditExpiration \n  from './components/automation/account/subscription/credits_expiration/AutomationAccountSubscriptionCreditExpiration'\nimport AutomationAccountSubscriptionCreditExpirationAdd\n  from './components/automation/account/subscription/credits_expiration/AutomationAccountSubscriptionCreditExpirationAdd'\nimport AutomationAccountSubscriptionInvoices from './components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoices'\nimport AutomationAccountSubscriptionInvoicesAdd from './components/automation/account/subscription/invoices/AutomationAccountSubscriptionInvoicesAdd'\nimport AutomationAccountSubscriptionMollieCollections \n  from './components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollections'\nimport AutomationAccountSubscriptionMollieCollectionAdd\n  from './components/automation/account/subscription/mollie_collection/AutomationAccountSubscriptionMollieCollectionAdd'\n\nimport FinanceHome from './components/finance/home/FinanceHome'\nimport FinanceCostCenters from './components/finance/costcenters/FinanceCostCenters'\nimport FinanceCostCenterAdd from './components/finance/costcenters/FinanceCostCenterAdd'\nimport FinanceCostCenterEdit from './components/finance/costcenters/FinanceCostCenterEdit'\nimport FinanceGLAccounts from './components/finance/glaccounts/FinanceGLAccounts'\nimport FinanceGLAccountAdd from './components/finance/glaccounts/FinanceGLAccountAdd'\nimport FinanceGLAccountEdit from './components/finance/glaccounts/FinanceGLAccountEdit'\nimport FinanceInvoices from './components/finance/invoices/FinanceInvoices'\nimport FinanceInvoiceEdit from './components/finance/invoices/edit/FinanceInvoiceEdit'\nimport FinanceInvoiceGroups from './components/finance/invoices/groups/FinanceInvoiceGroups'\nimport FinanceInvoiceGroupAdd from './components/finance/invoices/groups/FinanceInvoiceGroupAdd'\nimport FinanceInvoiceGroupEdit from './components/finance/invoices/groups/FinanceInvoiceGroupEdit'\nimport FinanceInvoiceGroupDefaults from './components/finance/invoices/groups/defaults/FinanceInvoiceGroupDefaults'\nimport FinanceInvoicePaymentAdd from './components/finance/invoices/payments/FinanceInvoicePaymentAdd'\nimport FinanceInvoicePaymentEdit from './components/finance/invoices/payments/FinanceInvoicePaymentEdit'\nimport FinanceOrders from './components/finance/orders/FinanceOrders'\nimport FinancePaymentBatches from './components/finance/payment_batches/FinancePaymentBatches'\nimport FinancePaymentBatchAddWhat from './components/finance/payment_batches/FinancePaymentBatchAddWhat'\nimport FinancePaymentBatchView from './components/finance/payment_batches/FinancePaymentBatchView'\nimport FinancePaymentCollectionBatchAdd from './components/finance/payment_batches/FinancePaymentCollectionBatchAdd'\nimport FinancePaymentCollectionBatchEdit from './components/finance/payment_batches/FinancePaymentCollectionBatchEdit'\nimport FinancePaymentBatchCategories from './components/finance/payment_batch_categories/FinancePaymentBatchCategories'\nimport FinancePaymentBatchCategoryAdd from './components/finance/payment_batch_categories/FinancePaymentBatchCategoryAdd'\nimport FinancePaymentBatchCategoryEdit from './components/finance/payment_batch_categories/FinancePaymentBatchCategoryEdit'\nimport FinanceOrderEdit from './components/finance/orders/edit/FinanceOrderEdit'\nimport FinancePaymentMethods from './components/finance/payment_methods/FinancePaymentMethods'\nimport FinancePaymentMethodAdd from './components/finance/payment_methods/FinancePaymentMethodAdd'\nimport FinancePaymentMethodEdit from './components/finance/payment_methods/FinancePaymentMethodEdit'\nimport FinanceTaxRates from './components/finance/taxrates/FinanceTaxRates'\nimport FinanceTaxRatesAdd from './components/finance/taxrates/FinanceTaxRateAdd'\nimport FinanceTaxRatesEdit from './components/finance/taxrates/FinanceTaxRateEdit'\n\nimport InsightHome from './components/insight/home/InsightHome'\nimport InsightClasspasses from './components/insight/classpasses/InsightClasspasses'\nimport InsightSubscriptions from './components/insight/subscriptions/InsightSubscriptions'\n\nimport OrganizationHome from './components/organization/home/OrganizationHome'\nimport OrganizationEdit from './components/organization/organization/OrganizationEdit'\nimport OrganizationBranding from './components/organization/organization/branding/OrganizationBranding'\nimport OrganizationBrandingEdit from './components/organization/organization/branding/OrganizationBrandingEdit'\nimport OrganizationAnnouncements from './components/organization/announcements/OrganizationAnnouncements'\nimport OrganizationAnnouncementAdd from './components/organization/announcements/OrganizationAnnouncementAdd'\nimport OrganizationAnnouncementEdit from './components/organization/announcements/OrganizationAnnouncementEdit'\nimport OrganizationAppointments from './components/organization/appointment_categories/appointments/OrganizationAppointments'\nimport OrganizationAppointmentAdd from './components/organization/appointment_categories/appointments/OrganizationAppointmentAdd'\nimport OrganizationAppointmentEdit from './components/organization/appointment_categories/appointments/OrganizationAppointmentEdit'\nimport OrganizationAppointmentCategories from './components/organization/appointment_categories/OrganizationAppointmentCategories'\nimport OrganizationAppointmentCategoryAdd from './components/organization/appointment_categories/OrganizationAppointmentCategoryAdd'\nimport OrganizationAppointmentCategoryEdit from './components/organization/appointment_categories/OrganizationAppointmentCategoryEdit'\nimport OrganizationAppointmentPrices from './components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPrices'\nimport OrganizationAppointmentPriceAdd from './components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPriceAdd'\nimport OrganizationAppointmentPriceEdit from './components/organization/appointment_categories/appointments/prices/OrganizationAppointmentPriceEdit'\nimport OrganizationClasspasses from './components/organization/classpasses/OrganizationClasspasses'\nimport OrganizationClasspassAdd from './components/organization/classpasses/OrganizationClasspassAdd'\nimport OrganizationClasspassEdit from './components/organization/classpasses/OrganizationClasspassEdit'\nimport OrganizationClasspassesGroups from './components/organization/classpasses_groups/OrganizationClasspassesGroups'\nimport OrganizationClasspassesGroupAdd from './components/organization/classpasses_groups/OrganizationClasspassesGroupAdd'\nimport OrganizationClasspassesGroupEdit from './components/organization/classpasses_groups/OrganizationClasspassesGroupEdit'\nimport OrganizationClasspassesGroupEditPasses from './components/organization/classpasses_groups/OrganizationClasspassesGroupEditPasses'\nimport OrganizationClasstypes from './components/organization/classtypes/OrganizationClasstypes'\nimport OrganizationClasstypeAdd from './components/organization/classtypes/OrganizationClasstypeAdd'\nimport OrganizationClasstypeEdit from './components/organization/classtypes/OrganizationClasstypeEdit'\nimport OrganizationClasstypeEditImage from './components/organization/classtypes/OrganizationClasstypeEditImage'\nimport OrganizationDiscoveries from './components/organization/discovery/OrganizationDiscoveries'\nimport OrganizationDiscoveryAdd from './components/organization/discovery/OrganizationDiscoveryAdd'\nimport OrganizationDiscoveryEdit from './components/organization/discovery/OrganizationDiscoveryEdit'\nimport OrganizationDocuments from './components/organization/documents/OrganizationDocuments'\nimport OrganizationListDocuments from './components/organization/documents/OrganizationListDocuments'\nimport OrganizationDocumentAdd from './components/organization/documents/OrganizationDocumentAdd'\nimport OrganizationDocumentEdit from './components/organization/documents/OrganizationDocumentEdit'\nimport OrganizationHolidays from './components/organization/holidays/OrganizationHolidays'\nimport OrganizationHolidayAdd from './components/organization/holidays/OrganizationHolidayAdd'\nimport OrganizationHolidayEdit from './components/organization/holidays/OrganizationHolidayEdit'\nimport OrganizationHolidayEditLocations from './components/organization/holidays/OrganizationHolidayEditLocations'\nimport OrganizationLanguages from './components/organization/languages/OrganizationLanguages'\nimport OrganizationLanguageAdd from './components/organization/languages/OrganizationLanguageAdd'\nimport OrganizationLanguageEdit from './components/organization/languages/OrganizationLanguageEdit'\nimport OrganizationLocations from './components/organization/locations/OrganizationLocations'\nimport OrganizationLocationAdd from './components/organization/locations/OrganizationLocationAdd'\nimport OrganizationLocationEdit from './components/organization/locations/OrganizationLocationEdit'\nimport OrganizationLocationRooms from './components/organization/locations/rooms/OrganizationLocationRooms'\nimport OrganizationLocationRoomAdd from './components/organization/locations/rooms/OrganizationLocationRoomAdd'\nimport OrganizationLocationRoomEdit from './components/organization/locations/rooms/OrganizationLocationRoomEdit'\nimport OrganizationLevels from './components/organization/levels/OrganizationLevels'\nimport OrganizationLevelAdd from './components/organization/levels/OrganizationLevelAdd'\nimport OrganizationLevelEdit from './components/organization/levels/OrganizationLevelEdit'\nimport OrganizationMemberships from './components/organization/memberships/OrganizationMemberships'\nimport OrganizationMembershipAdd from './components/organization/memberships/OrganizationMembershipAdd'\nimport OrganizationMembershipEdit from './components/organization/memberships/OrganizationMembershipEdit'\nimport OrganizationSubscriptions from './components/organization/subscriptions/OrganizationSubscriptions'\nimport OrganizationSubscriptionAdd from './components/organization/subscriptions/OrganizationSubscriptionAdd'\nimport OrganizationSubscriptionEdit from './components/organization/subscriptions/OrganizationSubscriptionEdit'\nimport OrganizationSubscriptionsGroups from './components/organization/subscriptions_groups/OrganizationSubscriptionsGroups'\nimport OrganizationSubscriptionsGroupAdd from './components/organization/subscriptions_groups/OrganizationSubscriptionsGroupAdd'\nimport OrganizationSubscriptionsGroupEdit from './components/organization/subscriptions_groups/OrganizationSubscriptionsGroupEdit'\nimport OrganizationSubscriptionsGroupEditSubscriptions from './components/organization/subscriptions_groups/OrganizationSubscriptionsGroupEditSubscriptions'\nimport OrganizationSubscriptionsPrices from './components/organization/subscriptions/prices/OrganizationSubscriptionsPrices'\nimport OrganizationSubscriptionPriceAdd from './components/organization/subscriptions/prices/OrganizationSubscriptionPriceAdd'\nimport OrganizationSubscriptionPriceEdit from './components/organization/subscriptions/prices/OrganizationSubscriptionPriceEdit'\n\nimport RelationsHome from './components/relations/home/RelationsHome'\nimport RelationsAccounts from './components/relations/accounts/RelationsAccounts'\nimport RelationsAccountAdd from './components/relations/accounts/RelationsAccountAdd'\nimport RelationsAccountProfile from './components/relations/accounts/RelationsAccountProfile'\nimport RelationsAccountProfileImage from './components/relations/accounts/RelationsAccountProfileImage'\nimport AccountAcceptedDocuments from './components/relations/accounts/accepted_documents/AcceptedDocuments.jsx'\nimport RelationsAccountBankAccount from './components/relations/accounts/bank_accounts/RelationsAccountBankAccount'\nimport RelationsAccountBankAccountMandateAdd from './components/relations/accounts/bank_accounts/mandates/RelationsAccountBankAccountMandateAdd'\nimport RelationsAccountBankAccountMandateEdit from './components/relations/accounts/bank_accounts/mandates/RelationsAccountBankAccountMandateEdit'\nimport RelationsAccountClasses from './components/relations/accounts/classes/AccountClasses'\nimport AccountClasspasses from './components/relations/accounts/classpasses/AccountClasspasses'\nimport AccountClasspassAdd from './components/relations/accounts/classpasses/AccountClasspassAdd'\nimport AccountClasspassEdit from './components/relations/accounts/classpasses/AccountClasspassEdit'\nimport AccountDocuments from './components/relations/accounts/documents/AccountDocuments'\nimport AccountDocumentAdd from './components/relations/accounts/documents/AccountDocumentAdd'\nimport AccountDocumentEdit from './components/relations/accounts/documents/AccountDocumentEdit'\nimport AccountFinancePaymentBatchCategoryItems from \n  './components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItems'\nimport AccountFinancePaymentBatchCategoryItemAdd from \n'./components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemAdd'\nimport AccountFinancePaymentBatchCategoryItemEdit from \n'./components/relations/accounts/finance_payment_batch_category_items/AccountFinancePaymentBatchCategoryItemEdit'\nimport AccountInvoices from './components/relations/accounts/invoices/AccountInvoices'\nimport AccountInvoiceAdd from './components/relations/accounts/invoices/AccountInvoiceAdd'\nimport AccountMemberships from './components/relations/accounts/memberships/AccountMemberships'\nimport AccountMembershipAdd from './components/relations/accounts/memberships/AccountMembershipAdd'\nimport AccountMembershipEdit from './components/relations/accounts/memberships/AccountMembershipEdit'\nimport AccountNotes from './components/relations/accounts/notes/AccountNotes.jsx'\nimport AccountNoteAdd from './components/relations/accounts/notes/AccountNoteAdd.jsx'\nimport AccountNoteEdit from './components/relations/accounts/notes/AccountNoteEdit.jsx'\nimport AccountOrders from './components/relations/accounts/orders/AccountOrders'\nimport AccountScheduleEventTickets from './components/relations/accounts/schedule_event_tickets/AccountScheduleEventTickets'\nimport AccountSubscriptions from './components/relations/accounts/subscriptions/AccountSubscriptions'\nimport AccountSubscriptionAdd from './components/relations/accounts/subscriptions/AccountSubscriptionAdd'\nimport AccountSubscriptionEdit from './components/relations/accounts/subscriptions/edit/AccountSubscriptionEdit'\nimport AccountSubscriptionEditAltPrices from './components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPrices'\nimport AccountSubscriptionEditAltPriceAdd from './components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceAdd'\nimport AccountSubscriptionEditAltPriceEdit from './components/relations/accounts/subscriptions/edit/alt_prices/AccountSubscriptionEditAltPriceEdit'\nimport AccountSubscriptionEditBlocks from './components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlocks'\nimport AccountSubscriptionEditBlockAdd from './components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockAdd'\nimport AccountSubscriptionEditBlockEdit from './components/relations/accounts/subscriptions/edit/blocks/AccountSubscriptionEditBlockEdit'\nimport AccountSubscriptionEditCredits from './components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCredits'\nimport AccountSubscriptionEditCreditAdd from './components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditAdd'\nimport AccountSubscriptionEditCreditEdit from './components/relations/accounts/subscriptions/edit/credits/AccountSubscriptionEditCreditEdit'\nimport AccountSubscriptionEditInvoices from './components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoices'\nimport AccountSubscriptionEditInvoiceAdd from './components/relations/accounts/subscriptions/edit/invoices/AccountSubscriptionEditInvoiceAdd'\nimport AccountSubscriptionEditPauses from './components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauses'\nimport AccountSubscriptionEditPauseAdd from './components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseAdd'\nimport AccountSubscriptionEditPauseEdit from './components/relations/accounts/subscriptions/edit/pauses/AccountSubscriptionEditPauseEdit'\nimport RelationsAccountTeacherProfile from './components/relations/accounts/teacher_profile/RelationsAccountTeacherProfile'\nimport RelationsB2B from './components/relations/b2b/RelationsB2B'\nimport RelationsB2BAdd from './components/relations/b2b/RelationsB2BAdd.jsx'\nimport RelationsB2BEdit from './components/relations/b2b/RelationsB2BEdit.jsx'\n\nimport ScheduleHome from './components/schedule/home/ScheduleHome'\nimport ScheduleAppointments from './components/schedule/appointments/ScheduleAppointments'\nimport ScheduleAppointmentAdd from './components/schedule/appointments/ScheduleAppointmentAdd'\nimport ScheduleAppointmentEditAll from './components/schedule/appointments/all/edit/ScheduleAppointmentEditAll'\nimport ScheduleClasses from './components/schedule/classes/ScheduleClasses'\nimport ScheduleClassAdd from './components/schedule/classes/ScheduleClassAdd'\nimport ScheduleClassEditAll from './components/schedule/classes/all/edit/ScheduleClassEditAll'\nimport ScheduleClassClasspasses from './components/schedule/classes/all/classpasses/ScheduleClassClasspasses'\nimport ScheduleClassSubscriptions from './components/schedule/classes/all/subscriptions/ScheduleClassSubscriptions'\nimport ScheduleClassTeachers from './components/schedule/classes/all/teachers/ScheduleClassTeachers'\nimport ScheduleClassTeacherAdd from './components/schedule/classes/all/teachers/ScheduleClassTeacherAdd'\nimport ScheduleClassTeacherEdit from './components/schedule/classes/all/teachers/ScheduleClassTeacherEdit'\nimport ScheduleClassAttendance from './components/schedule/classes/class/attendance/ScheduleClassAttendance'\nimport ScheduleClassBook from './components/schedule/classes/class/book/ScheduleClassBook'\nimport ScheduleClassEdit from './components/schedule/classes/class/edit/ScheduleClassEdit'\nimport ScheduleClassPrices from './components/schedule/classes/all/prices/ScheduleClassPrices'\nimport ScheduleClassPriceAdd from './components/schedule/classes/all/prices/ScheduleClassPriceAdd'\nimport ScheduleClassPriceEdit from './components/schedule/classes/all/prices/ScheduleClassPriceEdit'\nimport ScheduleEvents from './components/schedule/events/ScheduleEvents'\nimport ScheduleEventAdd from './components/schedule/events/ScheduleEventAdd'\nimport ScheduleEventEdit from './components/schedule/events/edit/ScheduleEventEdit'\nimport ScheduleEventActivities from './components/schedule/events/activities/ScheduleEventActivities'\nimport ScheduleEventActivityAdd from './components/schedule/events/activities/ScheduleEventActivityAdd'\nimport ScheduleEventActivityEdit from './components/schedule/events/activities/ScheduleEventActivityEdit'\nimport ScheduleEventActivityAttendance from './components/schedule/events/activities/attendance/ScheduleEventActivityAttendance'\nimport ScheduleEventEarlybirds from './components/schedule/events/earlybirds/ScheduleEventEarlybirds'\nimport ScheduleEventEarlybirdAdd from './components/schedule/events/earlybirds/ScheduleEventEarlybirdAdd'\nimport ScheduleEventEarlybirdEdit from './components/schedule/events/earlybirds/ScheduleEventEarlybirdEdit'\nimport ScheduleEventMedia from './components/schedule/events/media/ScheduleEventMedia'\nimport ScheduleEventMediaAdd from './components/schedule/events/media/ScheduleEventMediaAdd'\nimport ScheduleEventMediaEdit from './components/schedule/events/media/ScheduleEventMediaEdit'\nimport ScheduleEventTickets from './components/schedule/events/tickets/ScheduleEventTickets'\nimport ScheduleEventTicketAdd from './components/schedule/events/tickets/ScheduleEventTicketAdd'\nimport ScheduleEventTicketEdit from './components/schedule/events/tickets/ScheduleEventTicketEdit'\nimport ScheduleEventTicketEditActivities from './components/schedule/events/tickets/activities/ScheduleEventTicketEditActivities'\nimport ScheduleEventTicketEditCustomers from './components/schedule/events/tickets/customers/ScheduleEventTicketEditCustomers'\n\nimport SelfCheckinCheckin from './components/selfcheckin/Checkin/Checkin'\nimport SelfCheckinBookingOptions from './components/selfcheckin/BookingOptions/BookingOptions'\nimport SelfCheckinLocations from './components/selfcheckin/Locations/Locations'\nimport SelfCheckinLocationClasses from './components/selfcheckin/LocationClasses/LocationClasses'\n\nimport SettingsAbout from './components/settings/about/SettingsAbout'\nimport SettingsFinanceBankAccounts from './components/settings/finance/bank_accounts/SettingsFinanceBankAccounts'\nimport SettingsFinanceCurrency from './components/settings/finance/currency/SettingsFinanceCurrency'\nimport SettingsGeneralDateTime from './components/settings/general/date_time/SettingsGeneralDateTime'\nimport SettingsGeneralSystem from './components/settings/general/system/SettingsGeneralSystem'\nimport SettingsHome from './components/settings/home/SettingsHome'\nimport SettingsIntegrationMollie from './components/settings/integration/mollie/SettingsIntegrationMollie'\nimport SettingsMailTemplates from './components/settings/mail/SettingsMailTemplates'\nimport SettingsMailTemplateEdit from './components/settings/mail/SettingsMailTemplateEdit'\nimport SettingsShopFeatures from './components/settings/shop/features/SettingsShopFeatures'\nimport SettingsWorkflowClassBooking from './components/settings/workflow/class_booking/SettingsWorkflowClassBooking'\nimport SettingsWorkflowSubscriptionPauses from './components/settings/workflow/subscription_pauses/SettingsWorkflowSubscriptionPauses'\nimport SettingsWorkflowTrial from './components/settings/workflow/trial/SettingsWorkflowTrial'\n\nimport ShopAccountHome from './components/shop/account/home/ShopAccountHome'\nimport ShopAccountClassCancel from './components/shop/account/class_cancel/ShopAccountClassCancel'\nimport ShopAccountClassInfo from './components/shop/account/class_info/ShopAccountClassInfo'\nimport ShopAccountClasspasses from './components/shop/account/classpasses/ShopAccountClasspasses'\nimport ShopAccountEventTickets from './components/shop/account/event_tickets/ShopAccountEventTickets'\nimport ShopAccountInvoicePayment from './components/shop/account/invoice_payment/ShopAccountInvoicePayment'\nimport ShopAccountInvoicePaymentStatus from './components/shop/account/invoice_payment_status/ShopAccountInvoicePaymentStatus'\nimport ShopAccountInvoices from './components/shop/account/invoices/ShopAccountInvoices'\nimport ShopAccountOrders from './components/shop/account/orders/ShopAccountOrders'\nimport ShopAccountProfile from './components/shop/account/profile/ShopAccountProfile'\nimport ShopAccountSubscriptions from './components/shop/account/subscriptions/ShopAccountSubscriptions'\nimport ShopClassBook from './components/shop/classes/book/ShopClassBook'\nimport ShopClassBooked from './components/shop/classes/booked/ShopClassBooked'\nimport ShopClassesSchedule from './components/shop/classes/schedule/ShopClassesSchedule'\nimport ShopContact from './components/shop/contact/ShopContact'\nimport ShopEvents from './components/shop/events/ShopEvents'\nimport ShopEvent from './components/shop/event/ShopEvent'\nimport ShopEventTicket from './components/shop/event_ticket/ShopEventTicket'\nimport ShopHome from './components/shop/home/ShopHome'\nimport ShopCheckoutPayment from './components/shop/checkout/payment/ShopCheckoutPayment'\nimport ShopCheckoutComplete from './components/shop/checkout/complete/ShopCheckoutComplete'\nimport ShopClasses from './components/shop/account/classes/ShopAccountClasses'\nimport ShopClasspasses from './components/shop/classpasses/ShopClasspasses'\nimport ShopClasspass from './components/shop/classpass/ShopClasspass'\nimport ShopSubscriptions from './components/shop/subscriptions/ShopSubscriptions'\nimport ShopSubscription from './components/shop/subscription/ShopSubscription'\n\nimport UserChangePassword from './components/user/password/UserPasswordChange'\nimport UserLogin from './components/user/login/UserLogin'\nimport UserLoginRequired from './components/user/login/UserLoginRequired'\nimport UserLogout from './components/user/login/UserLogout'\nimport UserSessionExpired from './components/user/session/UserSessionExpired'\nimport UserWelcome from './components/user/welcome/UserWelcome'\n\n\nimport Error404 from \"./components/Error404\"\n\nimport CSLS from \"./tools/cs_local_storage\"\nimport { CSAuth } from './tools/authentication'\n\n\nfunction SetCurrentUrlAsNext() {\n  console.log(\"Storing current location as next in local storage\")\n  const currentUrl = window.location.href\n  const next = currentUrl.split(\"#\")[1]\n  console.log(next)\n  localStorage.setItem(CSLS.AUTH_LOGIN_NEXT, next)\n}\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const [doTokenRefresh] = useMutation(TOKEN_REFRESH)\n  let authTokenExpired = false\n  console.log(rest.path)\n\n  const ContinueAsYouAre = <Route {...rest} render={(props) => ( <Component {...props} /> )} />\n  const LoginRequired = <Route {...rest} render={(props) => ( <Redirect to='/user/login/required' /> )} />\n  const SessionExpired = <Route {...rest} render={(props) => ( <Redirect to='/user/session/expired' /> )} />\n  \n  // Check expiration\n  const tokenExp = localStorage.getItem(CSLS.AUTH_TOKEN_EXP)\n  if ((new Date() / 1000) >= tokenExp) {\n    authTokenExpired = true\n  }\n\n  if (authTokenExpired) {\n    const refreshTokenExp = localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN_EXP)\n    if (refreshTokenExp == null) {\n      console.log(\"refresh token not found\")\n      SetCurrentUrlAsNext()\n      \n      return LoginRequired\n    } else if ((new Date() / 1000) >= refreshTokenExp) {\n      console.log(\"refresh token expired\")\n      console.log(new Date() / 1000)\n      console.log(refreshTokenExp)\n      SetCurrentUrlAsNext()\n\n      return SessionExpired\n    } else {\n      // Refresh token\n      console.log(\"auth token expired\")\n      console.log(new Date() / 1000)\n      console.log(refreshTokenExp)\n\n      const refreshToken = localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN)\n      doTokenRefresh({ variables: { refreshToken: refreshToken }}).then(({ data }) => {\n        console.log('got refresh data', data)\n        CSAuth.updateTokenInfo(data.refreshToken)\n        return ContinueAsYouAre\n      }).catch((error) => {\n        toast.error('general.toast_server_error' + ': ' +  error, {\n          position: toast.POSITION.BOTTOM_RIGHT\n        })\n        console.log('there was an error refreshing the token', error) \n        SetCurrentUrlAsNext()\n        console.log(\"REDIRECT BACK TO LOGIN\")\n        window.location.href = \"/#/user/login\"\n        window.location.reload()\n      })\n    }\n  } else {\n    return ContinueAsYouAre\n  }\n  return null\n}\n\n\nfunction AppRoot({ t }) {\n  const { loading: loadingAppSettings, error: errorAppSettings, data: dataAppSettings } = useQuery(GET_APP_SETTINGS_QUERY)\n  const { loading: loadingOrganization, error: errorOrganization, data: dataOrganization } = useQuery(GET_ORGANIZATION_QUERY, {\n    variables: {id: \"T3JnYW5pemF0aW9uTm9kZToxMDA=\"}\n  })\n\n  if (loadingAppSettings || loadingOrganization) return t('general.loading_with_dots')\n  if (errorAppSettings || errorOrganization) {\n    if (errorAppSettings.message == \"Signature has expired\")  {\n      return \"\"\n    } else {\n      return (\n        <div>\n          { t('settings.error_loading') } <br />\n          { errorAppSettings.message } <br />\n          { errorOrganization.message}\n        </div>\n      )\n    }\n  }\n\n  // Register \"US\" locale for moment\n  // moment.locale('en-US')\n  let appSettings = dataAppSettings.appSettings\n  console.log(appSettings)\n  let organization = dataOrganization.organization\n  console.log(organization)\n\n  return (\n    <AppSettingsProvider value={appSettings}>\n      <OrganizationProvider value={organization}>\n        <HashRouter>\n          <Switch>\n            {/* BACKEND HOME */}\n            <PrivateRoute exact path=\"/backend\" component={HomeHome} />\n\n            {/* AUTOMATION */}\n            <PrivateRoute exact path=\"/automation\" component={AutomationHome} />\n            <PrivateRoute exact path=\"/automation/account/subscriptions/credits\" \n                                component={AutomationAccountSubscriptionCredits} />\n            <PrivateRoute exact path=\"/automation/account/subscriptions/credits/add\" \n                                component={AutomationAccountSubscriptionCreditAdd} />\n            <PrivateRoute exact path=\"/automation/account/subscriptions/credits_expiration\" \n                                component={AutomationAccountSubscriptionCreditExpiration} />\n            <PrivateRoute exact path=\"/automation/account/subscriptions/credits_expiration/add\" \n                                component={AutomationAccountSubscriptionCreditExpirationAdd} />\n            <PrivateRoute exact path=\"/automation/account/subscriptions/invoices\" \n                                component={AutomationAccountSubscriptionInvoices} />    \n            <PrivateRoute exact path=\"/automation/account/subscriptions/invoices/add\" \n                                component={AutomationAccountSubscriptionInvoicesAdd} />    \n            <PrivateRoute exact path=\"/automation/account/subscriptions/mollie_collections\" \n                                component={AutomationAccountSubscriptionMollieCollections} />\n            <PrivateRoute exact path=\"/automation/account/subscriptions/mollie_collections/add\" \n                                component={AutomationAccountSubscriptionMollieCollectionAdd} />\n\n            \n            {/* FINANCE */}\n            <PrivateRoute exact path=\"/finance\" component={FinanceHome} />\n            <PrivateRoute exact path=\"/finance/costcenters\" component={FinanceCostCenters} />\n            <PrivateRoute exact path=\"/finance/costcenters/add\" component={FinanceCostCenterAdd} />\n            <PrivateRoute exact path=\"/finance/costcenters/edit/:id\" component={FinanceCostCenterEdit} />\n            <PrivateRoute exact path=\"/finance/invoices\" component={FinanceInvoices} />\n            <PrivateRoute exact path=\"/finance/invoices/edit/:id\" component={FinanceInvoiceEdit} />\n            <PrivateRoute exact path=\"/finance/invoices/groups\" component={FinanceInvoiceGroups} />\n            <PrivateRoute exact path=\"/finance/invoices/groups/add\" component={FinanceInvoiceGroupAdd} />\n            <PrivateRoute exact path=\"/finance/invoices/groups/edit/:id\" component={FinanceInvoiceGroupEdit} />\n            <PrivateRoute exact path=\"/finance/invoices/groups/defaults\" component={FinanceInvoiceGroupDefaults} />\n            <PrivateRoute exact path=\"/finance/invoices/:invoice_id/payment/add\" component={FinanceInvoicePaymentAdd} />\n            <PrivateRoute exact path=\"/finance/invoices/:invoice_id/payment/edit/:id\" component={FinanceInvoicePaymentEdit} />\n            <PrivateRoute exact path=\"/finance/glaccounts\" component={FinanceGLAccounts} />\n            <PrivateRoute exact path=\"/finance/glaccounts/add\" component={FinanceGLAccountAdd} />\n            <PrivateRoute exact path=\"/finance/glaccounts/edit/:id\" component={FinanceGLAccountEdit} />\n            <PrivateRoute exact path=\"/finance/orders\" component={FinanceOrders} />\n            <PrivateRoute exact path=\"/finance/orders/edit/:id\" component={FinanceOrderEdit} />\n            <PrivateRoute exact path=\"/finance/paymentbatches/:batch_type\" component={FinancePaymentBatches} />\n            <PrivateRoute exact path=\"/finance/paymentbatches/:batch_type/add_what\" component={FinancePaymentBatchAddWhat} />\n            <PrivateRoute exact path=\"/finance/paymentbatches/:batch_type/view/:id\" component={FinancePaymentBatchView} />\n            <PrivateRoute exact path=\"/finance/paymentbatches/:batch_type/add/:category_type\" component={FinancePaymentCollectionBatchAdd} />\n            <PrivateRoute exact path=\"/finance/paymentbatches/:batch_type/edit/:id\" component={FinancePaymentCollectionBatchEdit} />\n            <PrivateRoute exact path=\"/finance/paymentbatchcategories\" component={FinancePaymentBatchCategories} />\n            <PrivateRoute exact path=\"/finance/paymentbatchcategories/add\" component={FinancePaymentBatchCategoryAdd} />\n            <PrivateRoute exact path=\"/finance/paymentbatchcategories/edit/:id\" component={FinancePaymentBatchCategoryEdit} />\n            <PrivateRoute exact path=\"/finance/paymentmethods\" component={FinancePaymentMethods} />\n            <PrivateRoute exact path=\"/finance/paymentmethods/add\" component={FinancePaymentMethodAdd} />\n            <PrivateRoute exact path=\"/finance/paymentmethods/edit/:id\" component={FinancePaymentMethodEdit} />\n            <PrivateRoute exact path=\"/finance/taxrates\" component={FinanceTaxRates} />\n            <PrivateRoute exact path=\"/finance/taxrates/add\" component={FinanceTaxRatesAdd} />\n            <PrivateRoute exact path=\"/finance/taxrates/edit/:id\" component={FinanceTaxRatesEdit} />\n            \n            {/* ORGANIZATION */}\n            <PrivateRoute exact path=\"/organization\" component={OrganizationHome} />\n            <PrivateRoute exact path=\"/organization/edit/:id\" component={OrganizationEdit} />\n            <PrivateRoute exact path=\"/organization/edit/:id/branding\" component={OrganizationBranding} />\n            <PrivateRoute exact path=\"/organization/edit/:id/branding/:update_field\" component={OrganizationBrandingEdit} />\n            <PrivateRoute exact path=\"/organization/documents/:organization_id\" component={OrganizationDocuments} />\n            <PrivateRoute exact path=\"/organization/documents/:organization_id/:document_type\" component={OrganizationListDocuments} />\n            <PrivateRoute exact path=\"/organization/documents/:organization_id/:document_type/add\" component={OrganizationDocumentAdd} />\n            <PrivateRoute exact path=\"/organization/documents/:organization_id/:document_type/edit/:id\" component={OrganizationDocumentEdit} />\n            <PrivateRoute exact path=\"/organization/announcements\" component={OrganizationAnnouncements} />\n            <PrivateRoute exact path=\"/organization/announcements/add\" component={OrganizationAnnouncementAdd} />\n            <PrivateRoute exact path=\"/organization/announcements/edit/:id\" component={OrganizationAnnouncementEdit} />\n            <PrivateRoute exact path=\"/organization/appointment_categories\" component={OrganizationAppointmentCategories} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/add\" component={OrganizationAppointmentCategoryAdd} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/edit/:id\" component={OrganizationAppointmentCategoryEdit} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments\" component={OrganizationAppointments} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments/add/\" component={OrganizationAppointmentAdd} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments/edit/:id\" component={OrganizationAppointmentEdit} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments/prices/:appointment_id\" \n                  component={OrganizationAppointmentPrices} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments/prices/:appointment_id/add\" \n                  component={OrganizationAppointmentPriceAdd} />\n            <PrivateRoute exact path=\"/organization/appointment_categories/:category_id/appointments/prices/:appointment_id/edit/:id\" \n                  component={OrganizationAppointmentPriceEdit} />\n            <PrivateRoute exact path=\"/organization/classpasses\" component={OrganizationClasspasses} />\n            <PrivateRoute exact path=\"/organization/classpasses/add\" component={OrganizationClasspassAdd} />\n            <PrivateRoute exact path=\"/organization/classpasses/edit/:id\" component={OrganizationClasspassEdit} />    \n            <PrivateRoute exact path=\"/organization/classpasses/groups\" component={OrganizationClasspassesGroups} />\n            <PrivateRoute exact path=\"/organization/classpasses/groups/add\" component={OrganizationClasspassesGroupAdd} />\n            <PrivateRoute exact path=\"/organization/classpasses/groups/edit/:id\" component={OrganizationClasspassesGroupEdit} />\n            <PrivateRoute exact path=\"/organization/classpasses/groups/edit/passes/:id\" component={OrganizationClasspassesGroupEditPasses} />\n            <PrivateRoute exact path=\"/organization/classtypes\" component={OrganizationClasstypes} />\n            <PrivateRoute exact path=\"/organization/classtypes/add\" component={OrganizationClasstypeAdd} />\n            <PrivateRoute exact path=\"/organization/classtypes/edit/:id\" component={OrganizationClasstypeEdit} />\n            <PrivateRoute exact path=\"/organization/classtypes/edit_image/:id\" component={OrganizationClasstypeEditImage} />\n            <PrivateRoute exact path=\"/organization/discoveries\" component={OrganizationDiscoveries} />\n            <PrivateRoute exact path=\"/organization/discoveries/add\" component={OrganizationDiscoveryAdd} /> \n            <PrivateRoute exact path=\"/organization/discoveries/edit/:id\" component={OrganizationDiscoveryEdit} /> \n            <PrivateRoute exact path=\"/organization/holidays\" component={OrganizationHolidays} />\n            <PrivateRoute exact path=\"/organization/holidays/add\" component={OrganizationHolidayAdd} />\n            <PrivateRoute exact path=\"/organization/holidays/edit/:id\" component={OrganizationHolidayEdit} />\n            <PrivateRoute exact path=\"/organization/holidays/edit/:id/locations\" component={OrganizationHolidayEditLocations} />\n            <PrivateRoute exact path=\"/organization/languages\" component={OrganizationLanguages} />\n            <PrivateRoute exact path=\"/organization/languages/add\" component={OrganizationLanguageAdd} />\n            <PrivateRoute exact path=\"/organization/languages/edit/:id\" component={OrganizationLanguageEdit} />\n            <PrivateRoute exact path=\"/organization/levels\" component={OrganizationLevels} />\n            <PrivateRoute exact path=\"/organization/levels/add\" component={OrganizationLevelAdd} />\n            <PrivateRoute exact path=\"/organization/levels/edit/:id\" component={OrganizationLevelEdit} />\n            <PrivateRoute exact path=\"/organization/locations\" component={OrganizationLocations} />\n            <PrivateRoute exact path=\"/organization/locations/add\" component={OrganizationLocationAdd} />\n            <PrivateRoute exact path=\"/organization/locations/edit/:id\" component={OrganizationLocationEdit} />\n            <PrivateRoute exact path=\"/organization/locations/rooms/:location_id\" component={OrganizationLocationRooms} />\n            <PrivateRoute exact path=\"/organization/locations/rooms/add/:location_id\" component={OrganizationLocationRoomAdd} />\n            <PrivateRoute exact path=\"/organization/locations/rooms/edit/:location_id/:id\" component={OrganizationLocationRoomEdit} />\n            <PrivateRoute exact path=\"/organization/memberships\" component={OrganizationMemberships} />\n            <PrivateRoute exact path=\"/organization/memberships/add\" component={OrganizationMembershipAdd} />\n            <PrivateRoute exact path=\"/organization/memberships/edit/:id\" component={OrganizationMembershipEdit} /> \n            <PrivateRoute exact path=\"/organization/subscriptions\" component={OrganizationSubscriptions} />\n            <PrivateRoute exact path=\"/organization/subscriptions/add\" component={OrganizationSubscriptionAdd} />\n            <PrivateRoute exact path=\"/organization/subscriptions/edit/:id\" component={OrganizationSubscriptionEdit} />\n            <PrivateRoute exact path=\"/organization/subscriptions/groups\" component={OrganizationSubscriptionsGroups} />\n            <PrivateRoute exact path=\"/organization/subscriptions/groups/add\" component={OrganizationSubscriptionsGroupAdd} />\n            <PrivateRoute exact path=\"/organization/subscriptions/groups/edit/:id\" component={OrganizationSubscriptionsGroupEdit} />\n            <PrivateRoute exact path=\"/organization/subscriptions/groups/edit/subscriptions/:id\" component={OrganizationSubscriptionsGroupEditSubscriptions} />\n            <PrivateRoute exact path=\"/organization/subscriptions/prices/:subscription_id\" component={OrganizationSubscriptionsPrices} />\n            <PrivateRoute exact path=\"/organization/subscriptions/prices/add/:subscription_id\" component={OrganizationSubscriptionPriceAdd} />\n            <PrivateRoute exact path=\"/organization/subscriptions/prices/edit/:subscription_id/:id\" component={OrganizationSubscriptionPriceEdit} />\n\n            {/* RELATIONS */}\n            <PrivateRoute exact path=\"/relations\" component={RelationsHome} />\n            <PrivateRoute exact path=\"/relations/accounts\" component={RelationsAccounts} />\n            <PrivateRoute exact path=\"/relations/accounts/add\" component={RelationsAccountAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/profile\" component={RelationsAccountProfile} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/profile/image\" component={RelationsAccountProfileImage} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/accepted_documents\" component={AccountAcceptedDocuments} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/bank_accounts\" component={RelationsAccountBankAccount} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/bank_accounts/:bank_account_id/mandates/add\" \n                          component={RelationsAccountBankAccountMandateAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/bank_accounts/:bank_account_id/mandates/edit/:id\" \n                          component={RelationsAccountBankAccountMandateEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/classes\" component={RelationsAccountClasses} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/classpasses\" component={AccountClasspasses} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/classpasses/add\" component={AccountClasspassAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/classpasses/edit/:id\" component={AccountClasspassEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/documents\" component={AccountDocuments} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/documents/add\" component={AccountDocumentAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/documents/edit/:id\" component={AccountDocumentEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/finance_payment_batch_category_items\" \n                          component={AccountFinancePaymentBatchCategoryItems} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/finance_payment_batch_category_items/add\" \n                          component={AccountFinancePaymentBatchCategoryItemAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/finance_payment_batch_category_items/edit/:id\" \n                          component={AccountFinancePaymentBatchCategoryItemEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/invoices\" component={AccountInvoices} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/invoices/add\" component={AccountInvoiceAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/memberships\" component={AccountMemberships} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/memberships/add\" component={AccountMembershipAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/memberships/edit/:id\" component={AccountMembershipEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/notes\" component={AccountNotes} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/notes/add\" component={AccountNoteAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/notes/edit/:id\" component={AccountNoteEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/orders\" component={AccountOrders} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/event_tickets\" component={AccountScheduleEventTickets} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions\" component={AccountSubscriptions} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/add\" component={AccountSubscriptionAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id\" \n                          component={AccountSubscriptionEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/alt_prices\" \n                          component={AccountSubscriptionEditAltPrices} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/alt_prices/add\" \n                          component={AccountSubscriptionEditAltPriceAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/alt_prices/edit/:id\" \n                          component={AccountSubscriptionEditAltPriceEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/blocks\" component={AccountSubscriptionEditBlocks} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/blocks/add\" component={AccountSubscriptionEditBlockAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/blocks/edit/:id\" \n                          component={AccountSubscriptionEditBlockEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/credits\" component={AccountSubscriptionEditCredits} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/credits/add\" component={AccountSubscriptionEditCreditAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/credits/edit/:id\" \n                          component={AccountSubscriptionEditCreditEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/invoices\" \n              component={AccountSubscriptionEditInvoices} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/invoices/add\" \n              component={AccountSubscriptionEditInvoiceAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/pauses\" component={AccountSubscriptionEditPauses} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/pauses/add\" component={AccountSubscriptionEditPauseAdd} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/subscriptions/edit/:subscription_id/pauses/edit/:id\" \n                          component={AccountSubscriptionEditPauseEdit} />\n            <PrivateRoute exact path=\"/relations/accounts/:account_id/teacher_profile\" component={RelationsAccountTeacherProfile} />\n            <PrivateRoute exact path=\"/relations/b2b\" component={RelationsB2B} />\n            <PrivateRoute exact path=\"/relations/b2b/add\" component={RelationsB2BAdd} />\n            <PrivateRoute exact path=\"/relations/b2b/:business_id/edit\" component={RelationsB2BEdit} />\n\n            {/* SCHEDULE */}\n            <PrivateRoute exact path=\"/schedule\" component={ScheduleHome} />\n            <PrivateRoute exact path=\"/schedule/appointments\" component={ScheduleAppointments} />\n            <PrivateRoute exact path=\"/schedule/appointments/add\" component={ScheduleAppointmentAdd} />\n            <PrivateRoute exact path=\"/schedule/appointments/all/edit/:appointment_id\" component={ScheduleAppointmentEditAll} />\n            <PrivateRoute exact path=\"/schedule/classes\" component={ScheduleClasses} />\n            <PrivateRoute exact path=\"/schedule/classes/add/\" component={ScheduleClassAdd} />\n            <PrivateRoute exact path=\"/schedule/classes/all/edit/:class_id/\" component={ScheduleClassEditAll} />\n            <PrivateRoute exact path=\"/schedule/classes/all/classpasses/:class_id/\" component={ScheduleClassClasspasses} />\n            <PrivateRoute exact path=\"/schedule/classes/all/prices/:class_id/\" component={ScheduleClassPrices} />\n            <PrivateRoute exact path=\"/schedule/classes/all/prices/:class_id/add\" component={ScheduleClassPriceAdd} />\n            <PrivateRoute exact path=\"/schedule/classes/all/prices/:class_id/edit/:id\" component={ScheduleClassPriceEdit} />\n            <PrivateRoute exact path=\"/schedule/classes/all/subscriptions/:class_id/\" component={ScheduleClassSubscriptions} />\n            <PrivateRoute exact path=\"/schedule/classes/all/teachers/:class_id/\" component={ScheduleClassTeachers} />\n            <PrivateRoute exact path=\"/schedule/classes/all/teachers/:class_id/add\" component={ScheduleClassTeacherAdd} />\n            <PrivateRoute exact path=\"/schedule/classes/all/teachers/:class_id/edit/:id\" component={ScheduleClassTeacherEdit} />\n            <PrivateRoute exact path=\"/schedule/classes/class/attendance/:class_id/:date\" component={ScheduleClassAttendance} />\n            <PrivateRoute exact path=\"/schedule/classes/class/book/:class_id/:date/:account_id\" component={ScheduleClassBook} />\n            <PrivateRoute exact path=\"/schedule/classes/class/edit/:class_id/:date\" component={ScheduleClassEdit} />\n            <PrivateRoute exact path=\"/schedule/events\" component={ScheduleEvents} />\n            <PrivateRoute exact path=\"/schedule/events/add\" component={ScheduleEventAdd} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id\" component={ScheduleEventEdit} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/activities\" component={ScheduleEventActivities} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/activities/add\" component={ScheduleEventActivityAdd} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/activities/edit/:id\" component={ScheduleEventActivityEdit} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/activities/edit/:id/attendance\" \n                          component={ScheduleEventActivityAttendance} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/earlybirds\" component={ScheduleEventEarlybirds} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/earlybirds/add\" component={ScheduleEventEarlybirdAdd} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/earlybirds/edit/:id\" component={ScheduleEventEarlybirdEdit} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/media\" component={ScheduleEventMedia} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/media/add\" component={ScheduleEventMediaAdd} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/media/edit/:id\" component={ScheduleEventMediaEdit} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/tickets\" component={ScheduleEventTickets} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/tickets/add\" component={ScheduleEventTicketAdd} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/tickets/edit/:id\" component={ScheduleEventTicketEdit} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/tickets/edit/:id/activities\" component={ScheduleEventTicketEditActivities} />\n            <PrivateRoute exact path=\"/schedule/events/edit/:event_id/tickets/edit/:id/customers\" component={ScheduleEventTicketEditCustomers} />\n\n            {/* Insight */}\n            <PrivateRoute exact path=\"/insight\" component={InsightHome} />\n            <PrivateRoute exact path=\"/insight/classpasses\" component={InsightClasspasses} />\n            <PrivateRoute exact path=\"/insight/subscriptions\" component={InsightSubscriptions} />\n\n            {/* Self Check-in */}\n            <PrivateRoute exact path=\"/selfcheckin/checkin/:location_id/:class_id/:date\" component={SelfCheckinCheckin} />\n            <PrivateRoute exact path=\"/selfcheckin/book/:location_id/:class_id/:date/:account_id\" \n                                component={SelfCheckinBookingOptions} />\n            <PrivateRoute exact path=\"/selfcheckin\" component={SelfCheckinLocations} />\n            <PrivateRoute exact path=\"/selfcheckin/location/:location_id\" component={SelfCheckinLocationClasses} />\n\n            {/* Shop */}\n            <Route exact path = \"/\" component={ShopHome} />\n            <PrivateRoute exact path = \"/shop/account\" component={ShopAccountHome} />\n            <PrivateRoute exact path = \"/shop/account/class_cancel/:class_id/:date/:attendance_id\" \n                                component={ShopAccountClassCancel} />\n            <PrivateRoute exact path = \"/shop/account/class_info/:class_id/:date\" component={ShopAccountClassInfo} />\n            <PrivateRoute exact path = \"/shop/account/classes\" component={ShopClasses} />\n            <PrivateRoute exact path = \"/shop/account/classpasses\" component={ShopAccountClasspasses} />\n            <PrivateRoute exact path = \"/shop/account/event_tickets\" component={ShopAccountEventTickets} />\n            <PrivateRoute exact path = \"/shop/account/invoice_payment/:id\" component={ShopAccountInvoicePayment} />\n            <PrivateRoute exact path = \"/shop/account/invoice_payment_status/:id\" component={ShopAccountInvoicePaymentStatus} />\n            <PrivateRoute exact path = \"/shop/account/invoices\" component={ShopAccountInvoices} />\n            <PrivateRoute exact path = \"/shop/account/orders\" component={ShopAccountOrders} />\n            <PrivateRoute exact path = \"/shop/account/profile\" component={ShopAccountProfile} />\n            <PrivateRoute exact path = \"/shop/account/subscriptions\" component={ShopAccountSubscriptions} />\n            <PrivateRoute exact path = \"/shop/checkout/payment/:id\" component={ShopCheckoutPayment} />\n            <PrivateRoute exact path = \"/shop/checkout/complete/:id\" component={ShopCheckoutComplete} />\n            <Route exact path = \"/shop/classes\" component={ShopClassesSchedule} />\n            <PrivateRoute exact path = \"/shop/classes/book/:class_id/:date\" component={ShopClassBook} />\n            <PrivateRoute exact path = \"/shop/classes/booked/:class_id/:date\" component={ShopClassBooked} />\n            <Route exact path = \"/shop/classpasses\" component={ShopClasspasses} />\n            <PrivateRoute exact path = \"/shop/classpass/:id\" component={ShopClasspass} />\n            <PrivateRoute exact path = \"/shop/classpass/:id/:class_id/:date\" component={ShopClasspass} />\n            <Route exact path = \"/shop/contact\" component={ShopContact} />\n            <Route exact path = \"/shop/events\" component={ShopEvents} />\n            <PrivateRoute exact path = \"/shop/events/:event_id\" component={ShopEvent} />\n            <PrivateRoute exact path = \"/shop/events/:event_id/ticket/:id\" component={ShopEventTicket} />\n            <Route exact path = \"/shop/subscriptions\" component={ShopSubscriptions} />\n            <PrivateRoute exact path = \"/shop/subscription/:id\" component={ShopSubscription} />\n\n            {/* Settings */}\n            <PrivateRoute exact path=\"/settings\" component={SettingsHome} />\n            <PrivateRoute exact path=\"/settings/about\" component={SettingsAbout} />\n            <PrivateRoute exact path=\"/settings/finance/bank_accounts\" component={SettingsFinanceBankAccounts} />\n            <PrivateRoute exact path=\"/settings/finance/currency\" component={SettingsFinanceCurrency} />\n            <PrivateRoute exact path=\"/settings/general/datetime\" component={SettingsGeneralDateTime} />\n            <PrivateRoute exact path=\"/settings/general/system\" component={SettingsGeneralSystem} />\n            <PrivateRoute exact path=\"/settings/integration/mollie\" component={SettingsIntegrationMollie} />\n            <PrivateRoute exact path=\"/settings/mail/templates\" component={SettingsMailTemplates} />\n            <PrivateRoute exact path=\"/settings/mail/templates/edit/:id\" component={SettingsMailTemplateEdit} />\n            <PrivateRoute exact path=\"/settings/shop/features\" component={SettingsShopFeatures} />\n            <PrivateRoute exact path=\"/settings/workflow/class_booking\" component={SettingsWorkflowClassBooking} />\n            <PrivateRoute exact path=\"/settings/workflow/subscription_pauses\" component={SettingsWorkflowSubscriptionPauses} />\n            <PrivateRoute exact path=\"/settings/workflow/trial\" component={SettingsWorkflowTrial} />\n\n            {/* User */}\n            <PrivateRoute exact path=\"/user/password/change\" component={UserChangePassword} />\n            <Route exact path=\"/user/login\" component={UserLogin} />\n            <Route exact path=\"/user/login/required\" component={UserLoginRequired} />\n            <Route exact path=\"/user/logout\" component={UserLogout} />\n            <Route exact path=\"/user/session/expired\" component={UserSessionExpired} />\n            <Route exact path=\"/user/welcome\" component={UserWelcome} />\n            \n            <Route component={Error404} />\n          </Switch>\n        </HashRouter>\n      </OrganizationProvider>\n    </AppSettingsProvider>\n  )\n}\n\nexport default withTranslation()(AppRoot)\n\n","import React from 'react'\nimport {\n  ApolloClient,\n  from,\n  createHttpLink,\n  InMemoryCache,\n  ApolloProvider,\n  Observable,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { setContext } from '@apollo/client/link/context';\n// import ApolloClient from \"react\"\n\nimport { TOKEN_REFRESH } from \"./queries/system/auth\"\n// Import moment locale\n// import moment from 'moment'\n// import 'moment/locale/nl'\n\nimport CSLS from \"./tools/cs_local_storage\"\nimport CSEC from \"./tools/cs_error_codes\"\nimport { CSAuth } from './tools/authentication'\n\n// Main app\nimport AppRoot from \"./AppRoot\"\n\n// Tabler css \nimport \"tabler-react/dist/Tabler.css\"\n// React-datepicker css\nimport \"react-datepicker/dist/react-datepicker.css\"\n// App css\nimport './App.css'\n\n// Register \"nl\" locale for react-datepicker\n// https://reactdatepicker.com/#example-17\n// import { registerLocale } from \"react-datepicker\"\n// import nl from 'date-fns/locale/nl';\n// registerLocale('nl', nl);\n\n// This allows <string>.trunc(x)\nString.prototype.trunc = \n  function(n){\n      return this.substr(0, n-1) + (this.length > n ? '...' : '')\n  }\n\nfunction SetCurrentUrlAsNext() {\n  console.log(\"Storing current location as next in local storage\")\n  const currentUrl = window.location.href\n  const next = currentUrl.split(\"#\")[1]\n  console.log(next)\n  if ((next != \"/user/login\") && (next != \"/user/session/expired\") && (next != \"/user/login/required\") && (next)) {\n    // This is a dirty hack to work around the following, a user refreshes the page but has an expired refreshtoken.\n    // This will produce an error on the orinal component, setting the correct next URL in localStorage. However, \n    // the code below will move the user to /user/login, which will also error at first, thus /user/login always\n    // gets set... we don't want that. This flow can be refactored at some point, but it works for now. \n    localStorage.setItem(CSLS.AUTH_LOGIN_NEXT, next)\n  } \n}\n  \n\nconst errorLink = onError(({ graphQLErrors, networkError, operation, forward, response }) => {\n  console.log(operation)\n  \n  if (graphQLErrors)\n    graphQLErrors.forEach(({ message, locations, path }) => {\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n      )\n    });\n\n  if (networkError) console.log(`[Network error]: ${networkError}`);\n\n  // request size check\n  if (graphQLErrors && graphQLErrors[0].message == \"Request body exceeded settings.DATA_UPLOAD_MAX_MEMORY_SIZE.\") {\n    console.error('CHOSEN FILE EXCEEDS SIZE LIMIT')\n  }\n\n  // Token refresh check\n  if (graphQLErrors && graphQLErrors[0].message == \"Signature has expired\") {\n    console.log(graphQLErrors[0])\n    console.log('Time to refresh the token')\n\n    let authTokenExpired = false\n    let refreshTokenExpired = false\n    const tokenExp = localStorage.getItem(CSLS.AUTH_TOKEN_EXP)\n    const refreshTokenExp = localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN_EXP)\n\n    if ((new Date() / 1000) >= tokenExp) {\n      authTokenExpired = true\n      \n      if ((new Date() / 1000) >= refreshTokenExp) {\n        refreshTokenExpired = true\n        // Remove any remaining token data\n        CSAuth.cleanup()\n        // Store current location, user has to login again\n        SetCurrentUrlAsNext()\n      }\n    }\n    \n    if (authTokenExpired && !refreshTokenExpired) {\n      console.log(\"refresh token... somehow...\")\n      console.log(localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN))\n\n      return new Observable(observer => {\n        client.mutate({\n          mutation: TOKEN_REFRESH,\n          variables: {\n            refreshToken: localStorage.getItem(CSLS.AUTH_REFRESH_TOKEN)\n          }\n        })\n          .then(({ data }) => { \n            console.log(data)\n            CSAuth.updateTokenInfo(data.refreshToken)\n          })\n          .then(() => {\n            const subscriber = {\n              next: observer.next.bind(observer),\n              error: observer.error.bind(observer),\n              complete: observer.complete.bind(observer)\n            };\n\n            // Retry last failed request\n            forward(operation).subscribe(subscriber);\n          })\n          .catch(error => {\n            // No refresh or client token available, we force user to login, after a cleanup\n            console.log(\"Failed to refresh the token, onwards to the login page\")\n            observer.error(error);\n            CSAuth.cleanup()\n            window.location.href = \"/#/user/login\"\n            window.location.reload()\n          });\n      })\n    } else if (refreshTokenExpired) {\n      window.location.href = \"#/user/session/expired\"\n      window.location.reload()\n    } else {\n      window.location.href = \"#/user/login/required\"\n      window.location.reload()\n    }\n  }\n})\n    \n\nconst httpLink = createHttpLink({\n  uri: '/d/graphql/',\n  credentials: 'same-origin',\n});\n\nconst authLink = setContext(async (request, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(CSLS.AUTH_TOKEN)\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      Authorization: token ? `JWT ${token}`: ''\n    }\n  }\n});\n\n// set up ApolloClient\nconst client = new ApolloClient({\n  link: from([errorLink, authLink, httpLink]),\n  cache: new InMemoryCache(),\n})\n\n\nfunction App() {\n  // Register \"NL\" locale for moment\n  // moment.locale('en-US')\n\n  return (\n    <ApolloProvider client={client}>\n      <AppRoot />\n    </ApolloProvider>\n  )\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './i18n'\nimport './index.css'\nimport \"./c3jscustom.css\"\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}